[{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17933","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17933/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17933/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17933/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/17933","id":760348799,"node_id":"MDU6SXNzdWU3NjAzNDg3OTk=","number":17933,"title":"Give the ability to choose float from string parsing algorithms.[Fast/Precise]","user":{"login":"UnamedRus","id":9449405,"node_id":"MDQ6VXNlcjk0NDk0MDU=","avatar_url":"https://avatars.githubusercontent.com/u/9449405?v=4","gravatar_id":"","url":"https://api.github.com/users/UnamedRus","html_url":"https://github.com/UnamedRus","followers_url":"https://api.github.com/users/UnamedRus/followers","following_url":"https://api.github.com/users/UnamedRus/following{/other_user}","gists_url":"https://api.github.com/users/UnamedRus/gists{/gist_id}","starred_url":"https://api.github.com/users/UnamedRus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/UnamedRus/subscriptions","organizations_url":"https://api.github.com/users/UnamedRus/orgs","repos_url":"https://api.github.com/users/UnamedRus/repos","events_url":"https://api.github.com/users/UnamedRus/events{/privacy}","received_events_url":"https://api.github.com/users/UnamedRus/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2020-12-09T13:52:51Z","updated_at":"2020-12-09T13:52:51Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"In continuation of #1665\r\n\r\nIt would be useful to be able choose a float parsing algorithm, as some drivers don't support binary formats and that can be done as session setting.\r\n\r\n**Use case**\r\nClickhouse version 20.13.1.5365\r\n```\r\nSELECT\r\n    toFloat64(15008753.),\r\n    toFloat64('1.5008753E7')\r\n\r\nQuery id: b4376f9b-a74d-4442-9113-5a48ce0e32cf\r\n\r\n┌─toFloat64(15008753.)─┬─toFloat64('1.5008753E7')─┐\r\n│             15008753 │       15008753.000000002 │\r\n└──────────────────────┴──────────────────────────┘\r\n```\r\n**Describe alternatives you've considered**\r\nUse Decimal as a data type and later convert it to float64 (via Default for example).\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17933/reactions","total_count":4,"+1":4,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17933/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17916","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17916/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17916/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17916/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/17916","id":760147095,"node_id":"MDU6SXNzdWU3NjAxNDcwOTU=","number":17916,"title":"distinct is much slower than group by","user":{"login":"poppinlr","id":8326338,"node_id":"MDQ6VXNlcjgzMjYzMzg=","avatar_url":"https://avatars.githubusercontent.com/u/8326338?v=4","gravatar_id":"","url":"https://api.github.com/users/poppinlr","html_url":"https://github.com/poppinlr","followers_url":"https://api.github.com/users/poppinlr/followers","following_url":"https://api.github.com/users/poppinlr/following{/other_user}","gists_url":"https://api.github.com/users/poppinlr/gists{/gist_id}","starred_url":"https://api.github.com/users/poppinlr/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/poppinlr/subscriptions","organizations_url":"https://api.github.com/users/poppinlr/orgs","repos_url":"https://api.github.com/users/poppinlr/repos","events_url":"https://api.github.com/users/poppinlr/events{/privacy}","received_events_url":"https://api.github.com/users/poppinlr/received_events","type":"User","site_admin":false},"labels":[{"id":386401510,"node_id":"MDU6TGFiZWwzODY0MDE1MTA=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/question","name":"question","color":"bfdadc","default":true,"description":""},{"id":756395244,"node_id":"MDU6TGFiZWw3NTYzOTUyNDQ=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/performance","name":"performance","color":"c2e0c6","default":false,"description":null},{"id":1669010018,"node_id":"MDU6TGFiZWwxNjY5MDEwMDE4","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/question-answered","name":"question-answered","color":"bfdadc","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2020-12-09T09:09:48Z","updated_at":"2020-12-10T12:20:11Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"```\r\nselect\r\n  columnName\r\nfrom\r\n  tableA\r\nwhere\r\n  columnName global in (\r\n    select\r\n      columnName\r\n    FROM\r\n      tableB\r\n    where\r\n      condition\r\n    group by\r\n      columnName\r\n  )\r\ngroup by\r\n  columnName \r\n```\r\n-- 72238529 rows in set. Elapsed: 30.658 sec. Processed 1.33 billion rows, 51.09 GB (43.54 million rows/s., 1.67 GB/s.) \r\n```\r\nselect\r\n  distinct columnName\r\nfrom\r\n  tableA\r\nwhere\r\n  columnName global in (\r\n    select\r\n      distinct columnName\r\n    FROM\r\n      tableB\r\n    where\r\n      condition\r\n  ) \r\n```\r\n-- 72238529 rows in set. Elapsed: 114.806 sec. Processed 1.33 billion rows, 51.09 GB (11.63 million rows/s., 444.99 MB/s.)   \r\n\r\nwhy distinct is so slow in this situation?","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17916/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17916/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17883","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17883/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17883/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17883/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/17883","id":759002084,"node_id":"MDU6SXNzdWU3NTkwMDIwODQ=","number":17883,"title":"SELECT VIEW ERROR","user":{"login":"glaryaugus","id":30492057,"node_id":"MDQ6VXNlcjMwNDkyMDU3","avatar_url":"https://avatars.githubusercontent.com/u/30492057?v=4","gravatar_id":"","url":"https://api.github.com/users/glaryaugus","html_url":"https://github.com/glaryaugus","followers_url":"https://api.github.com/users/glaryaugus/followers","following_url":"https://api.github.com/users/glaryaugus/following{/other_user}","gists_url":"https://api.github.com/users/glaryaugus/gists{/gist_id}","starred_url":"https://api.github.com/users/glaryaugus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/glaryaugus/subscriptions","organizations_url":"https://api.github.com/users/glaryaugus/orgs","repos_url":"https://api.github.com/users/glaryaugus/repos","events_url":"https://api.github.com/users/glaryaugus/events{/privacy}","received_events_url":"https://api.github.com/users/glaryaugus/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2020-12-08T02:21:22Z","updated_at":"2020-12-08T02:42:19Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"when i select a table,it take a problem.\r\nthe sql is select * from Edmp_ba_new_channel_report where contno=''\r\nthe ERROE is  DB::Exception: Multiple JOIN disabled or does not support the query. 'set allow_experimental_multiple_joins_emulation' to enable..\r\n\r\nplease tell me how to deal with it","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17883/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17883/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17872","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17872/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17872/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17872/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/17872","id":758574060,"node_id":"MDU6SXNzdWU3NTg1NzQwNjA=","number":17872,"title":"insert select * from (select col_1 from t) works much faster than insert select col_1 from t ","user":{"login":"nblagodarnyi","id":57439616,"node_id":"MDQ6VXNlcjU3NDM5NjE2","avatar_url":"https://avatars.githubusercontent.com/u/57439616?v=4","gravatar_id":"","url":"https://api.github.com/users/nblagodarnyi","html_url":"https://github.com/nblagodarnyi","followers_url":"https://api.github.com/users/nblagodarnyi/followers","following_url":"https://api.github.com/users/nblagodarnyi/following{/other_user}","gists_url":"https://api.github.com/users/nblagodarnyi/gists{/gist_id}","starred_url":"https://api.github.com/users/nblagodarnyi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nblagodarnyi/subscriptions","organizations_url":"https://api.github.com/users/nblagodarnyi/orgs","repos_url":"https://api.github.com/users/nblagodarnyi/repos","events_url":"https://api.github.com/users/nblagodarnyi/events{/privacy}","received_events_url":"https://api.github.com/users/nblagodarnyi/received_events","type":"User","site_admin":false},"labels":[{"id":386401511,"node_id":"MDU6TGFiZWwzODY0MDE1MTE=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/st-wontfix","name":"st-wontfix","color":"e5b890","default":false,"description":"Known issue, no plans to fix it currenlty"},{"id":756395244,"node_id":"MDU6TGFiZWw3NTYzOTUyNDQ=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/performance","name":"performance","color":"c2e0c6","default":false,"description":null}],"state":"open","locked":false,"assignee":{"login":"KochetovNicolai","id":4092911,"node_id":"MDQ6VXNlcjQwOTI5MTE=","avatar_url":"https://avatars.githubusercontent.com/u/4092911?v=4","gravatar_id":"","url":"https://api.github.com/users/KochetovNicolai","html_url":"https://github.com/KochetovNicolai","followers_url":"https://api.github.com/users/KochetovNicolai/followers","following_url":"https://api.github.com/users/KochetovNicolai/following{/other_user}","gists_url":"https://api.github.com/users/KochetovNicolai/gists{/gist_id}","starred_url":"https://api.github.com/users/KochetovNicolai/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/KochetovNicolai/subscriptions","organizations_url":"https://api.github.com/users/KochetovNicolai/orgs","repos_url":"https://api.github.com/users/KochetovNicolai/repos","events_url":"https://api.github.com/users/KochetovNicolai/events{/privacy}","received_events_url":"https://api.github.com/users/KochetovNicolai/received_events","type":"User","site_admin":false},"assignees":[{"login":"KochetovNicolai","id":4092911,"node_id":"MDQ6VXNlcjQwOTI5MTE=","avatar_url":"https://avatars.githubusercontent.com/u/4092911?v=4","gravatar_id":"","url":"https://api.github.com/users/KochetovNicolai","html_url":"https://github.com/KochetovNicolai","followers_url":"https://api.github.com/users/KochetovNicolai/followers","following_url":"https://api.github.com/users/KochetovNicolai/following{/other_user}","gists_url":"https://api.github.com/users/KochetovNicolai/gists{/gist_id}","starred_url":"https://api.github.com/users/KochetovNicolai/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/KochetovNicolai/subscriptions","organizations_url":"https://api.github.com/users/KochetovNicolai/orgs","repos_url":"https://api.github.com/users/KochetovNicolai/repos","events_url":"https://api.github.com/users/KochetovNicolai/events{/privacy}","received_events_url":"https://api.github.com/users/KochetovNicolai/received_events","type":"User","site_admin":false}],"milestone":null,"comments":3,"created_at":"2020-12-07T14:44:34Z","updated_at":"2020-12-23T15:01:37Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"**Describe the situation**\r\ninsert-select with intermediate senseless select work ~10 times faster than insert-select without intermediate senseless select\r\n\r\n**How to reproduce**\r\n* Which ClickHouse server version to use\r\nClickHouse server version 20.8.7 revision 54438.\r\nNAME=\"Ubuntu\"\r\nVERSION=\"18.04.4 LTS (Bionic Beaver)\"\r\nID=ubuntu\r\nID_LIKE=debian\r\nPRETTY_NAME=\"Ubuntu 18.04.4 LTS\"\r\nVERSION_ID=\"18.04\"\r\n\r\n* Which interface to use, if matters\r\nClickHouse client version 20.8.7.15 (official build).\r\n* Non-default settings, if any\r\n* `CREATE TABLE` statements for all tables involved\r\nCREATE TABLE test_hang_target_1 on cluster core (`ID` Int64) engine = MergeTree() ORDER BY (\"ID\");\r\nCREATE TABLE test_hang_target_2 on cluster core (`ID` Int64) engine = MergeTree() ORDER BY (\"ID\");\r\nCREATE TABLE test_hang_source_1 on cluster core\r\n(  `ID` Int64,\r\n    N1 Int64,\r\n    N2 Int64,\r\n    N3 Int64,\r\n    N4 Int64,\r\n    N5 Int64\r\n) engine = MergeTree() ORDER BY (\"ID\");\r\nCREATE TABLE test_hang_source_2 on cluster core\r\n(  `ID` Int64,\r\n    N1 Int64,\r\n    N2 Int64,\r\n    N3 Int64,\r\n    N4 Int64,\r\n    N5 Int64\r\n) engine = MergeTree() ORDER BY (\"ID\");\r\n\r\n* Sample data for all these tables, use [clickhouse-obfuscator]\r\nINSERT INTO test_hang_source_1 select number, number+1, number+2, number+3, number+4, number+5 from numbers(100000000);\r\nINSERT INTO test_hang_source_2 select number, number+1, number+2, number+3, number+4, number+5 from numbers(100000000);\r\n* Queries to run that lead to slow performance\r\nINSERT INTO test_hang_target_1 SELECT SUM( t1.ID + t1.N1 + t1.N2 + t1.N3 + t1.N4 + t1.N5 ) s from test_hang_source_1 t1;\r\nINSERT INTO test_hang_target_2 SELECT * FROM ( SELECT SUM( t1.ID + t1.N1 + t1.N2 + t1.N3 + t1.N4 + t1.N5 ) s from test_hang_source_2 t1 );\r\n\r\n**Expected performance**\r\nFirst insert should not work ten times slower, than second. Their working time should be same\r\n\r\n**Additional context**\r\nI tested it on 12 servers with the script below. \r\nexport CH_PWD=\\/ery$tr0ngPa$$w0rd\r\nfor (( i=1; i <= 12; i++ ))\r\ndo\r\n  size=${#i}\r\n  if [ $size -eq 1 ];then\r\n    server=\"clickhouse0$i\"\r\n  else\r\n    server=\"clickhouse$i\"\r\n  fi\r\n  echo \"Start testing on $server\"\r\n  \r\n  query=\"/*$server*/ INSERT INTO test_hang_source_1 select number, number+1, number+2, number+3, number+4, number+5 from numbers(100000000)\"\r\n  echo \"  $query\"\r\n  clickhouse-client --host $server --user amilovidov --password $CH_PWD --multiline --secure --time --query \"$query\"\r\n  echo \"+++++++++++++++++++++\"\r\n\r\n  query=\"/*$server*/ INSERT INTO test_hang_source_2 select number, number+1, number+2, number+3, number+4, number+5 from numbers(100000000)\" \r\n  echo \"  $query\"\r\n  clickhouse-client --host $server --user amilovidov --password $CH_PWD --multiline --secure --time --query \"$query\"\r\n  echo \"+++++++++++++++++++++\"\r\n\r\n  query=\"/*$server*/ INSERT INTO test_hang_target_1 SELECT SUM( t1.ID + t1.N1 + t1.N2 + t1.N3 + t1.N4 + t1.N5 ) s from test_hang_source_1 t1\"\r\n  echo \"  $query\"\r\n  clickhouse-client --host $server --user amilovidov --password $CH_PWD --multiline --secure --time --query \"$query\"\r\n  echo \"+++++++++++++++++++++\"\r\n\r\n  query=\"/*$server*/ INSERT INTO test_hang_target_2 SELECT * FROM ( SELECT SUM( t1.ID + t1.N1 + t1.N2 + t1.N3 + t1.N4 + t1.N5 ) s from test_hang_source_2 t1 )\"\r\n  echo \"  $query\"\r\n  clickhouse-client --host $server --user amilovidov --password $CH_PWD --multiline --secure --time --query \"$query\"\r\n  echo \"+++++++++++++++++++++\"\r\n\r\n  echo \"End testing on $server\"\r\n  echo \"\"\r\n  echo \"-------------------------------------------------------------------------------\"\r\n  echo \"\"\r\ndone","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17872/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17872/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17860","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17860/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17860/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17860/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/17860","id":758378968,"node_id":"MDU6SXNzdWU3NTgzNzg5Njg=","number":17860,"title":"Error joining tables by virtual column","user":{"login":"DimasKovas","id":34828390,"node_id":"MDQ6VXNlcjM0ODI4Mzkw","avatar_url":"https://avatars.githubusercontent.com/u/34828390?v=4","gravatar_id":"","url":"https://api.github.com/users/DimasKovas","html_url":"https://github.com/DimasKovas","followers_url":"https://api.github.com/users/DimasKovas/followers","following_url":"https://api.github.com/users/DimasKovas/following{/other_user}","gists_url":"https://api.github.com/users/DimasKovas/gists{/gist_id}","starred_url":"https://api.github.com/users/DimasKovas/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DimasKovas/subscriptions","organizations_url":"https://api.github.com/users/DimasKovas/orgs","repos_url":"https://api.github.com/users/DimasKovas/repos","events_url":"https://api.github.com/users/DimasKovas/events{/privacy}","received_events_url":"https://api.github.com/users/DimasKovas/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2020-12-07T10:26:10Z","updated_at":"2020-12-07T15:06:46Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"(you don't have to strictly follow this form)\r\n\r\n**Describe the bug**\r\n\r\nJoin by virtual columns does not work and throws a strange exception.\r\n\r\n**How to reproduce**\r\nRun queries below.\r\n\r\n* Which ClickHouse server version to use\r\nClickHouse version 20.11.4\r\n\r\n* Which interface to use, if matters\r\n* Non-default settings, if any\r\n* `CREATE TABLE` statements for all tables involved\r\n\r\ncreate table t0 (a Int64, b Int64) engine = MergeTree() partition by a order by a;\r\ncreate table t1 (a Int64, b Int64) engine = MergeTree() partition by a order by a;\r\n\r\n* Sample data for all these tables\r\n\r\ninsert into t0 values (0, 0);\r\ninsert into t1 values (0, 1);\r\n\r\n* Queries to run that lead to unexpected result\r\n\r\nselect a from t0 join t1 using _part_index;\r\nselect a from t0 global join t1 using _part_index;\r\n\r\n**Expected behavior**\r\n\r\n\r\n**Error message and/or stacktrace**\r\n\r\nReceived exception from server (version 20.11.4):\r\nCode: 10. DB::Exception: Received from localhost:9000. DB::Exception: Not found column _part_index in block. There are only columns: a, b. \r\n\r\n**Additional context**\r\n\r\nI've seen the subquery (select * from t1) in our logs (It's an inner product based on ClickHouse, not a vanilla ClickHouse). So I guess that ClickHouse replaces table t1 with this subquery, but * does not expose virtual columns. The fact that there is a column 'b' in block (in the initial query only column 'a' is requested) proves this hypothesis.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17860/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17860/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17807","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17807/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17807/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17807/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/17807","id":757484087,"node_id":"MDU6SXNzdWU3NTc0ODQwODc=","number":17807,"title":"max_parallel_replicas=2 gives incorrect results when joining to a non-replicated table","user":{"login":"edani","id":6210036,"node_id":"MDQ6VXNlcjYyMTAwMzY=","avatar_url":"https://avatars.githubusercontent.com/u/6210036?v=4","gravatar_id":"","url":"https://api.github.com/users/edani","html_url":"https://github.com/edani","followers_url":"https://api.github.com/users/edani/followers","following_url":"https://api.github.com/users/edani/following{/other_user}","gists_url":"https://api.github.com/users/edani/gists{/gist_id}","starred_url":"https://api.github.com/users/edani/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/edani/subscriptions","organizations_url":"https://api.github.com/users/edani/orgs","repos_url":"https://api.github.com/users/edani/repos","events_url":"https://api.github.com/users/edani/events{/privacy}","received_events_url":"https://api.github.com/users/edani/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2020-12-05T00:07:01Z","updated_at":"2020-12-07T17:22:11Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"(you don't have to strictly follow this form)\r\n\r\n**Description**\r\nWhen max_parallel_replicas=2, doing a distributed join with a replicated table with sampling, and a non-replicated table (with identical contents on all nodes) misses some rows from the **non-replicated** table\r\n\r\nMy use case is to try and use all available nodes by creating a carefully-chosen sampling key and sorting by it. This gives the expected performance increase, and correct results, when not joining to another table. The problem only happens with joins.\r\n\r\n**How to reproduce**\r\n* The problem appears on Version 20.11.4 revision 54442\r\n* cluster configuration: 2 shards with 2 replicas each .. let me know if a config.xml extract is needed.\r\n* settings:\r\nset prefer_localhost_replica=0;\r\nset max_parallel_replicas=2;\r\n* Sample SQL:\r\ncreate database test on cluster test;\r\n\r\ncreate table test.large_sharded_replicated on cluster test\r\n(sample_key UInt32,  shard_column Int32,  foreign_key Int32)\r\nengine = ReplicatedMergeTree('/clickhouse/tables/replicated/{shard}/tmp_large_sharded_replicated', '{replica}')\r\nsample by sample_key\r\norder by (sample_key);\r\n\r\ncreate table test.large_sharded_replicated_dist on cluster test as test.large_sharded_replicated\r\nengine = Distributed(test, test, large_sharded_replicated, shard_column);\r\n\r\ncreate table test.medium_nonsharded on cluster test\r\n(foreign_key Int32,  foreign_value Int32)\r\nengine = MergeTree()\r\norder by (foreign_key);\r\n\r\ninsert into test.large_sharded_replicated_dist (sample_key, shard_column, foreign_key)\r\nvalues\r\n(0, 1, 10), (0, 2, 10), (0x80000000, 1, 10), (0x80000000, 2, 10);\r\n\r\n-- Run this on all four nodes\r\ninsert into  test.medium_nonsharded values (10, 100);\r\n\r\nselect * from test.large_sharded_replicated_dist\r\nleft outer join test.medium_nonsharded using (foreign_key);\r\n\r\n```\r\n┌─sample_key─┬─shard_column─┬─foreign_key─┬─foreign_value─┐\r\n│          0 │            2 │          10 │           100 │\r\n└────────────┴──────────────┴─────────────┴───────────────┘\r\n┌─sample_key─┬─shard_column─┬─foreign_key─┬─foreign_value─┐\r\n│ 2147483648 │            2 │          10 │             0 │\r\n└────────────┴──────────────┴─────────────┴───────────────┘\r\n┌─sample_key─┬─shard_column─┬─foreign_key─┬─foreign_value─┐\r\n│          0 │            1 │          10 │           100 │\r\n└────────────┴──────────────┴─────────────┴───────────────┘\r\n┌─sample_key─┬─shard_column─┬─foreign_key─┬─foreign_value─┐\r\n│ 2147483648 │            1 │          10 │             0 │\r\n└────────────┴──────────────┴─────────────┴───────────────┘\r\n```\r\n\r\n**Expected behavior**\r\nThe above example shows that all rows of large_sharded_replicated are being scanned ; and that each node returns a single row, as expected based on the values of sample_key and shard_column. What should happen is that foreign_value should be 100 on every row, because medium_nonsharded shouldn't be affected by sharding or replication.\r\n\r\n**Error message and/or stacktrace**\r\nI think this is the relevant message (set medium_nonsharded) that appears on the nodes that do the join incorrectly:\r\n```\r\ntest.medium_nonsharded (ed269f10-1dc7-4cc7-94f6-0b6ce4a5739b) (SelectExecutor): Will use no data on this replica because parallel replicas processing has been requested (the setting 'max_parallel_replicas') but the table does not support sampling and this replica is not the first.\r\n```\r\n\r\n**Additional context**\r\nThis problem seems to have been introduced in 1bcf22d, which fixes incorrect results coming from  a distributed query where the main table has no sampling.\r\n\r\nI don't know enough about the ClickHouse code base to suggest a fix. I would expect that the \"use_sampling\" logic should only apply to tables that were distributed in the original query. Even for a table that does support sampling but isn't used as a distributed table, sampling shouldn't be applied. But that information may be lost by the time the replicas receive the query.\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17807/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17807/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17803","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17803/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17803/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17803/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/17803","id":757250877,"node_id":"MDU6SXNzdWU3NTcyNTA4Nzc=","number":17803,"title":"Openssl: probe different standard paths for ca.","user":{"login":"filimonov","id":1549571,"node_id":"MDQ6VXNlcjE1NDk1NzE=","avatar_url":"https://avatars.githubusercontent.com/u/1549571?v=4","gravatar_id":"","url":"https://api.github.com/users/filimonov","html_url":"https://github.com/filimonov","followers_url":"https://api.github.com/users/filimonov/followers","following_url":"https://api.github.com/users/filimonov/following{/other_user}","gists_url":"https://api.github.com/users/filimonov/gists{/gist_id}","starred_url":"https://api.github.com/users/filimonov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/filimonov/subscriptions","organizations_url":"https://api.github.com/users/filimonov/orgs","repos_url":"https://api.github.com/users/filimonov/repos","events_url":"https://api.github.com/users/filimonov/events{/privacy}","received_events_url":"https://api.github.com/users/filimonov/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":521113272,"node_id":"MDU6TGFiZWw1MjExMTMyNzI=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/build","name":"build","color":"800000","default":false,"description":""},{"id":1401253328,"node_id":"MDU6TGFiZWwxNDAxMjUzMzI4","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-net","name":"comp-net","color":"b5bcff","default":false,"description":"Network related"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2020-12-04T16:56:29Z","updated_at":"2021-12-07T19:37:41Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"body":"Users from os other than ubuntu often complain that secure connections can not be established because of wrong path to ca is used in the openssl bundled in ClickHouse. \r\n\r\nThe solution is to probe common paths for ca (may be that need to be done in Poco), see similar code in rdkafka as example:\r\n\r\nhttps://github.com/edenhill/librdkafka/blob/d5860484fb918d90744222658e4c3f79c6971eb9/src/rdkafka_ssl.c#L845-L937","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17803/reactions","total_count":3,"+1":3,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17803/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17795","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17795/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17795/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17795/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/17795","id":757012664,"node_id":"MDU6SXNzdWU3NTcwMTI2NjQ=","number":17795,"title":"Optimize search in pre-ordered arrays","user":{"login":"igorepim","id":48120946,"node_id":"MDQ6VXNlcjQ4MTIwOTQ2","avatar_url":"https://avatars.githubusercontent.com/u/48120946?v=4","gravatar_id":"","url":"https://api.github.com/users/igorepim","html_url":"https://github.com/igorepim","followers_url":"https://api.github.com/users/igorepim/followers","following_url":"https://api.github.com/users/igorepim/following{/other_user}","gists_url":"https://api.github.com/users/igorepim/gists{/gist_id}","starred_url":"https://api.github.com/users/igorepim/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/igorepim/subscriptions","organizations_url":"https://api.github.com/users/igorepim/orgs","repos_url":"https://api.github.com/users/igorepim/repos","events_url":"https://api.github.com/users/igorepim/events{/privacy}","received_events_url":"https://api.github.com/users/igorepim/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":1507867504,"node_id":"MDU6TGFiZWwxNTA3ODY3NTA0","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/st-hold","name":"st-hold","color":"e5b890","default":false,"description":"We've paused the work on issue for some reason"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2020-12-04T11:02:30Z","updated_at":"2020-12-14T11:08:06Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"**Use case**\r\nIn our principal table, we use the type Array(UInt64) for stocking the corresponding ids for a row.\r\nEach array can contain thousands of ids, and multiplying it to milliards of rows, we have a very heavy column that hardly limits the performance when we doing selects with WHERE has(ids, 123).\r\n\r\n**Describe the solution you'd like**\r\nOne solution that I can imagine is to pre-sort the ids in each row and, knowing that all arrays in the column are sorted, we can use it for a small optimization. \r\nConcretely, when we doing the search in the ordered array, we are not forced to scan the array entirely, but only before the \r\n`current_value <= searched_value`\r\nI estimate that it can be 2x faster in average. And more in special cases.\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17795/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17795/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17793","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17793/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17793/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17793/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/17793","id":756993624,"node_id":"MDU6SXNzdWU3NTY5OTM2MjQ=","number":17793,"title":"Unexpected behavior and performance when using JSONExtract with non-constant key","user":{"login":"adrian17","id":4729533,"node_id":"MDQ6VXNlcjQ3Mjk1MzM=","avatar_url":"https://avatars.githubusercontent.com/u/4729533?v=4","gravatar_id":"","url":"https://api.github.com/users/adrian17","html_url":"https://github.com/adrian17","followers_url":"https://api.github.com/users/adrian17/followers","following_url":"https://api.github.com/users/adrian17/following{/other_user}","gists_url":"https://api.github.com/users/adrian17/gists{/gist_id}","starred_url":"https://api.github.com/users/adrian17/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/adrian17/subscriptions","organizations_url":"https://api.github.com/users/adrian17/orgs","repos_url":"https://api.github.com/users/adrian17/repos","events_url":"https://api.github.com/users/adrian17/events{/privacy}","received_events_url":"https://api.github.com/users/adrian17/received_events","type":"User","site_admin":false},"labels":[{"id":1575085465,"node_id":"MDU6TGFiZWwxNTc1MDg1NDY1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/unexpected%20behaviour","name":"unexpected behaviour","color":"e088ca","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2020-12-04T10:34:14Z","updated_at":"2020-12-04T11:02:27Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"**Describe the unexpected behaviour**\r\n\r\nDocumentation of JSON functions states that\r\n\r\n> The field name (function argument) must be a constant.\r\n\r\nWe didn't notice that part and used non-constant fields, and... they worked (should they?).\r\nBut after the fact, we noticed they have extremely weird performance characteristics.\r\n\r\n**How to reproduce**\r\nCH version: 20.11.3.\r\n\r\nExample:\r\n\r\n```\r\nselect JSONExtractUInt('{\"0\": 1,\"1\": 1,\"2\": 1, ...500 ENTRIES HERE...,\"499\": 1,\"500\": 1}', toString(number%2)) as item\r\nfrom numbers(1000000)\r\n1000000 rows in set. Elapsed: 0.030 sec.\r\n\r\nselect JSONExtractUInt('{\"0\": 1,\"1\": 1,\"2\": 1, ...500 ENTRIES HERE...,\"499\": 1,\"500\": 1}', toString(490 + number%2)) as item\r\nfrom numbers(1000000)\r\n1000000 rows in set. Elapsed: 1.962 sec.\r\n```\r\n\r\nBasically, when the key is `toString(number%2))`, the query runtime is <0.1s. When the key is `toString(490 + number%2))`, the query runtime is 2s. So when the key for `JSONExtract` is not constant, it appears that the parsed JSON is scanned linearly for each row.\r\nI'm guessing the reason is the underlying JSON libraries do linear key lookups, but I'm not sure if such a characteristic should be present in a database.\r\n\r\n\r\n**Expected behavior**\r\nThe query with non-constant JSON key is either rejected, or performs predictable time lookups on the object for each row.\r\n\r\n**Extra context**\r\nWe basically just want to have a per-query key->value dictionary accessed with non-constant column data.\r\nCH Dictionaries seemed designed for long-term const data so they didn't fit; accessing \"External Data for Query Processing\" requires a `JOIN` (which makes them hard or impossible when we want to use array contents as keys with `arrayMap()`); JSON felt correct, until we realized the non-constant use case isn't officially supported and doesn't scale too well. A temporary `Engine=Join` table might be the closest to our needs, but you can't make them temporary and you need write permisisons for these.\r\nIs there any other way we could do this?\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17793/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17793/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17792","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17792/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17792/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17792/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/17792","id":756988063,"node_id":"MDU6SXNzdWU3NTY5ODgwNjM=","number":17792,"title":"per-column TTL-like feature to downsample data?","user":{"login":"mzealey","id":6083471,"node_id":"MDQ6VXNlcjYwODM0NzE=","avatar_url":"https://avatars.githubusercontent.com/u/6083471?v=4","gravatar_id":"","url":"https://api.github.com/users/mzealey","html_url":"https://github.com/mzealey","followers_url":"https://api.github.com/users/mzealey/followers","following_url":"https://api.github.com/users/mzealey/following{/other_user}","gists_url":"https://api.github.com/users/mzealey/gists{/gist_id}","starred_url":"https://api.github.com/users/mzealey/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mzealey/subscriptions","organizations_url":"https://api.github.com/users/mzealey/orgs","repos_url":"https://api.github.com/users/mzealey/repos","events_url":"https://api.github.com/users/mzealey/events{/privacy}","received_events_url":"https://api.github.com/users/mzealey/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2020-12-04T10:26:13Z","updated_at":"2020-12-04T20:35:59Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"**Use case**\r\n\r\nLets say we have an `AggregatingMergeTree`, we want 1-minute resolution aggregates for X days, then downsample to 15-min for Y days, 60-min for Z days etc.\r\n\r\n**Describe the solution you'd like**\r\n\r\nMy suggestion would be that similar to per-column TTLs you could do something like\r\n\r\n```\r\n  time DateTime\r\n    TTL time + INTERVAL 7 DAY SET time = toStartOfInterval(time, interval 15 minute), -- not sure how this , syntax would work to specify multiple\r\n    TTL time + INTERVAL 14 DAY SET time = toStartOfInterval(time, interval 60 minute)\r\n```\r\n\r\nBecause it's an `AggregatingMergeTree` it should handle all the aggregations just as `AggregateFunction` does at the moment.\r\n\r\n**Describe alternatives you've considered**\r\n\r\n`GraphiteMergeTree` provides similar but more complex, more domain-specific rollups whereas `AggregatingMergeTree` is a much more general interface\r\n\r\nWe could obviously create multiple mat views & rollup tables with different TTLs but this seems pretty inefficient\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17792/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17792/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17787","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17787/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17787/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17787/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/17787","id":756793987,"node_id":"MDU6SXNzdWU3NTY3OTM5ODc=","number":17787,"title":"Set as env parameter the number of retry for getting a ClickHouse connection on the entrypoint of docker image","user":{"login":"YiuRULE","id":4019437,"node_id":"MDQ6VXNlcjQwMTk0Mzc=","avatar_url":"https://avatars.githubusercontent.com/u/4019437?v=4","gravatar_id":"","url":"https://api.github.com/users/YiuRULE","html_url":"https://github.com/YiuRULE","followers_url":"https://api.github.com/users/YiuRULE/followers","following_url":"https://api.github.com/users/YiuRULE/following{/other_user}","gists_url":"https://api.github.com/users/YiuRULE/gists{/gist_id}","starred_url":"https://api.github.com/users/YiuRULE/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/YiuRULE/subscriptions","organizations_url":"https://api.github.com/users/YiuRULE/orgs","repos_url":"https://api.github.com/users/YiuRULE/repos","events_url":"https://api.github.com/users/YiuRULE/events{/privacy}","received_events_url":"https://api.github.com/users/YiuRULE/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2020-12-04T04:36:12Z","updated_at":"2020-12-04T08:28:58Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"(you don't have to strictly follow this form)\r\n\r\n**Use case**\r\nRight now, on the docker image entrypoint, if we got script in the `/docker-entrypoint-initdb.d/` folder, we wait 12 seconds to see if ClickHouse could accept a connection, before actually running the script.\r\n\r\nhttps://github.com/ClickHouse/ClickHouse/blob/master/docker/server/entrypoint.sh#L96-L100\r\n\r\nThat's a bit short, sometime ClickHouse, for a reason or an another, could take more than 12 seconds to startup, so on a production database, the process could failed every-time as ClickHouse need to load table and databases.\r\n\r\n**Describe the solution you'd like**\r\nSomething like\r\n\r\n`if ! wget --spider --quiet --prefer-family=IPv6 --tries=${CLICKHOUSE_HTTP_RETRY_ATTEMPTS:-12} --waitretry=${CLICKHOUSE_HTTP_RETRY_DELAY:-1} --retry-connrefused \"http://localhost:$HTTP_PORT/ping\" ; then`\r\n\r\n**Describe alternatives you've considered**\r\nAn another solution would be to have a custom entry-point, but I think it's a bit overkill for a simple configuration change like that.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17787/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17787/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17775","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17775/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17775/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17775/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/17775","id":756584398,"node_id":"MDU6SXNzdWU3NTY1ODQzOTg=","number":17775,"title":"Importing *State aggregates from existing data?","user":{"login":"mzealey","id":6083471,"node_id":"MDQ6VXNlcjYwODM0NzE=","avatar_url":"https://avatars.githubusercontent.com/u/6083471?v=4","gravatar_id":"","url":"https://api.github.com/users/mzealey","html_url":"https://github.com/mzealey","followers_url":"https://api.github.com/users/mzealey/followers","following_url":"https://api.github.com/users/mzealey/following{/other_user}","gists_url":"https://api.github.com/users/mzealey/gists{/gist_id}","starred_url":"https://api.github.com/users/mzealey/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mzealey/subscriptions","organizations_url":"https://api.github.com/users/mzealey/orgs","repos_url":"https://api.github.com/users/mzealey/repos","events_url":"https://api.github.com/users/mzealey/events{/privacy}","received_events_url":"https://api.github.com/users/mzealey/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":9,"created_at":"2020-12-03T20:55:35Z","updated_at":"2021-06-16T10:08:49Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"**Use case**\r\n\r\nI'm guessing there may well be a way to do this but nothing comes to mind from the docs, and perhaps it is not possible at present.\r\n\r\nI have an `AggregatingMergeTree()` and some `AggregateFunction()`s on it like `countState`. The table is being populated just fine by mat views.\r\n\r\nBUT, I want to import legacy data from a different database and I don't have the previous non-aggregated rows, I only have the pk + the count data.\r\n\r\nIs there (or could there be) an easy way to convert a count number into a `countState`? Could/should I assume that countState and sumState are basically the same and insert a `sumState(<previous count value>)` in? Even though I suspect this would work it feels quite hacky?","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17775/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17775/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17766","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17766/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17766/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17766/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/17766","id":756415036,"node_id":"MDU6SXNzdWU3NTY0MTUwMzY=","number":17766,"title":"RBAC - User with no privileges is able to see queries by other users in system.query_log.","user":{"login":"MyroTk","id":44327070,"node_id":"MDQ6VXNlcjQ0MzI3MDcw","avatar_url":"https://avatars.githubusercontent.com/u/44327070?v=4","gravatar_id":"","url":"https://api.github.com/users/MyroTk","html_url":"https://github.com/MyroTk","followers_url":"https://api.github.com/users/MyroTk/followers","following_url":"https://api.github.com/users/MyroTk/following{/other_user}","gists_url":"https://api.github.com/users/MyroTk/gists{/gist_id}","starred_url":"https://api.github.com/users/MyroTk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/MyroTk/subscriptions","organizations_url":"https://api.github.com/users/MyroTk/orgs","repos_url":"https://api.github.com/users/MyroTk/repos","events_url":"https://api.github.com/users/MyroTk/events{/privacy}","received_events_url":"https://api.github.com/users/MyroTk/received_events","type":"User","site_admin":false},"labels":[{"id":1397894054,"node_id":"MDU6TGFiZWwxMzk3ODk0MDU0","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/unfinished%20code","name":"unfinished code","color":"ff8800","default":false,"description":""}],"state":"open","locked":false,"assignee":{"login":"vitlibar","id":45142681,"node_id":"MDQ6VXNlcjQ1MTQyNjgx","avatar_url":"https://avatars.githubusercontent.com/u/45142681?v=4","gravatar_id":"","url":"https://api.github.com/users/vitlibar","html_url":"https://github.com/vitlibar","followers_url":"https://api.github.com/users/vitlibar/followers","following_url":"https://api.github.com/users/vitlibar/following{/other_user}","gists_url":"https://api.github.com/users/vitlibar/gists{/gist_id}","starred_url":"https://api.github.com/users/vitlibar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vitlibar/subscriptions","organizations_url":"https://api.github.com/users/vitlibar/orgs","repos_url":"https://api.github.com/users/vitlibar/repos","events_url":"https://api.github.com/users/vitlibar/events{/privacy}","received_events_url":"https://api.github.com/users/vitlibar/received_events","type":"User","site_admin":false},"assignees":[{"login":"vitlibar","id":45142681,"node_id":"MDQ6VXNlcjQ1MTQyNjgx","avatar_url":"https://avatars.githubusercontent.com/u/45142681?v=4","gravatar_id":"","url":"https://api.github.com/users/vitlibar","html_url":"https://github.com/vitlibar","followers_url":"https://api.github.com/users/vitlibar/followers","following_url":"https://api.github.com/users/vitlibar/following{/other_user}","gists_url":"https://api.github.com/users/vitlibar/gists{/gist_id}","starred_url":"https://api.github.com/users/vitlibar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vitlibar/subscriptions","organizations_url":"https://api.github.com/users/vitlibar/orgs","repos_url":"https://api.github.com/users/vitlibar/repos","events_url":"https://api.github.com/users/vitlibar/events{/privacy}","received_events_url":"https://api.github.com/users/vitlibar/received_events","type":"User","site_admin":false}],"milestone":null,"comments":0,"created_at":"2020-12-03T17:51:12Z","updated_at":"2021-06-15T04:17:09Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"**Describe the bug**\r\nA user with no privileges or grants can execute `SELECT user, query FROM system.query_log` and see other user's queries. A lot of information accessible by a user with nothing.\r\n\r\n**How to reproduce**\r\n* ClickHouse server version 20.12.1\r\n* Queries to run that lead to unexpected result\r\n```\r\nuser-host :) SELECT user, query FROM system.query_log\r\n```\r\n\r\n**Expected behavior**\r\nA user should only see their own queries and need some privilege to see others.\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17766/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17766/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17765","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17765/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17765/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17765/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/17765","id":756375915,"node_id":"MDU6SXNzdWU3NTYzNzU5MTU=","number":17765,"title":"Multiples timezones same materialized view","user":{"login":"inakivb","id":8626495,"node_id":"MDQ6VXNlcjg2MjY0OTU=","avatar_url":"https://avatars.githubusercontent.com/u/8626495?v=4","gravatar_id":"","url":"https://api.github.com/users/inakivb","html_url":"https://github.com/inakivb","followers_url":"https://api.github.com/users/inakivb/followers","following_url":"https://api.github.com/users/inakivb/following{/other_user}","gists_url":"https://api.github.com/users/inakivb/gists{/gist_id}","starred_url":"https://api.github.com/users/inakivb/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/inakivb/subscriptions","organizations_url":"https://api.github.com/users/inakivb/orgs","repos_url":"https://api.github.com/users/inakivb/repos","events_url":"https://api.github.com/users/inakivb/events{/privacy}","received_events_url":"https://api.github.com/users/inakivb/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":1481221764,"node_id":"MDU6TGFiZWwxNDgxMjIxNzY0","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-datetime","name":"comp-datetime","color":"b5bcff","default":false,"description":"date & time & timezone related"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2020-12-03T16:56:04Z","updated_at":"2021-10-28T03:21:10Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"**Use case**\r\nWhen having multiples customers in different timezones you \"need\" to materialize much daily information to different timezones.\r\nOur current approach is to have as many materialized tables as timezones and do something like\r\nCREATE MATERIALIZED VIEW xxxxx_daily_tz3\r\n(...)\r\nSELECT\r\n  site_id,\r\n  sumMergeState(count),\r\n  toStartOfDay(toDateTime(event_time,'America/Santiago')) as event_time\r\n(...)\r\nFROM xxxxx\r\nWHERE timezone_id = 3\r\n(...)\r\n\r\nthe problem is that as more new clients are using the tool, the inserts are getting slower.\r\n\r\n**Describe the solution you'd like**\r\nWe tried to do something like\r\nCREATE MATERIALIZED VIEW xxxxx_daily_all_tz\r\nSELECT\r\n  site_id,\r\n  sumMergeState(count),\r\n  toStartOfDay(event_time,timezone_text) as event_time\r\nFROM xxxxx\r\n\r\nbeing timezone_text a dynamic timezone (ex: America/Santiago) for each client\r\nso we have only a table with all the dates and the app layer knows that it's not UTC\r\n\r\n\r\nThe problem here is that toDateTime expects the timezone to be constant\r\n DB::Exception: Argument at index 1 for function toStartOfDay must be constant.\r\n\r\n**Describe alternatives you've considered**\r\n- Allow dynamic time zones in all datetime methods (I understand that it's not allowed because of some internal optimizations)\r\nor\r\n- Allow some method to change timezone that allows dynamic tz\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17765/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17765/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17758","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17758/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17758/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17758/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/17758","id":756207614,"node_id":"MDU6SXNzdWU3NTYyMDc2MTQ=","number":17758,"title":"WAL: merge on every insert","user":{"login":"pronvis","id":228536,"node_id":"MDQ6VXNlcjIyODUzNg==","avatar_url":"https://avatars.githubusercontent.com/u/228536?v=4","gravatar_id":"","url":"https://api.github.com/users/pronvis","html_url":"https://github.com/pronvis","followers_url":"https://api.github.com/users/pronvis/followers","following_url":"https://api.github.com/users/pronvis/following{/other_user}","gists_url":"https://api.github.com/users/pronvis/gists{/gist_id}","starred_url":"https://api.github.com/users/pronvis/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pronvis/subscriptions","organizations_url":"https://api.github.com/users/pronvis/orgs","repos_url":"https://api.github.com/users/pronvis/repos","events_url":"https://api.github.com/users/pronvis/events{/privacy}","received_events_url":"https://api.github.com/users/pronvis/received_events","type":"User","site_admin":false},"labels":[{"id":386401505,"node_id":"MDU6TGFiZWwzODY0MDE1MDU=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/bug","name":"bug","color":"ee0701","default":true,"description":"Confirmed user-visible misbehaviour in official release"},{"id":2557407378,"node_id":"MDU6TGFiZWwyNTU3NDA3Mzc4","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-inmemory-parts","name":"comp-inmemory-parts","color":"b5bcff","default":false,"description":""}],"state":"open","locked":false,"assignee":{"login":"CurtizJ","id":20361854,"node_id":"MDQ6VXNlcjIwMzYxODU0","avatar_url":"https://avatars.githubusercontent.com/u/20361854?v=4","gravatar_id":"","url":"https://api.github.com/users/CurtizJ","html_url":"https://github.com/CurtizJ","followers_url":"https://api.github.com/users/CurtizJ/followers","following_url":"https://api.github.com/users/CurtizJ/following{/other_user}","gists_url":"https://api.github.com/users/CurtizJ/gists{/gist_id}","starred_url":"https://api.github.com/users/CurtizJ/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/CurtizJ/subscriptions","organizations_url":"https://api.github.com/users/CurtizJ/orgs","repos_url":"https://api.github.com/users/CurtizJ/repos","events_url":"https://api.github.com/users/CurtizJ/events{/privacy}","received_events_url":"https://api.github.com/users/CurtizJ/received_events","type":"User","site_admin":false},"assignees":[{"login":"CurtizJ","id":20361854,"node_id":"MDQ6VXNlcjIwMzYxODU0","avatar_url":"https://avatars.githubusercontent.com/u/20361854?v=4","gravatar_id":"","url":"https://api.github.com/users/CurtizJ","html_url":"https://github.com/CurtizJ","followers_url":"https://api.github.com/users/CurtizJ/followers","following_url":"https://api.github.com/users/CurtizJ/following{/other_user}","gists_url":"https://api.github.com/users/CurtizJ/gists{/gist_id}","starred_url":"https://api.github.com/users/CurtizJ/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/CurtizJ/subscriptions","organizations_url":"https://api.github.com/users/CurtizJ/orgs","repos_url":"https://api.github.com/users/CurtizJ/repos","events_url":"https://api.github.com/users/CurtizJ/events{/privacy}","received_events_url":"https://api.github.com/users/CurtizJ/received_events","type":"User","site_admin":false}],"milestone":null,"comments":2,"created_at":"2020-12-03T13:45:31Z","updated_at":"2021-11-04T16:37:28Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"**Describe the bug**\r\nA lot of files created even when using WAL.\r\n\r\n**How to reproduce**\r\n* Which ClickHouse server version to use\r\nnot important, but I use `20.10.5`\r\n* Non-default settings, if any\r\n```\r\n    <merge_tree>\r\n        <min_rows_for_compact_part>100</min_rows_for_compact_part>\r\n        <min_bytes_for_compact_part>104857600</min_bytes_for_compact_part> <!-- 100MB -->\r\n        <in_memory_parts_enable_wal>true</in_memory_parts_enable_wal>\r\n    </merge_tree>\r\n```\r\n* reproduce stepd\r\n1. create table\r\n```\r\nCREATE TABLE events (\r\n    log String\r\n) ENGINE = MergeTree()\r\nORDER BY log;\r\n```\r\n2. insert 1000 blocks in a loop, each block have only one row\r\n\r\n**Expected behavior**\r\nSmall amount of files in data directory: `/var/lib/clickhouse/data/default/events/`\r\n\r\n**Actual behavior**\r\nA lot of files created in data directory: `/var/lib/clickhouse/data/default/events/` (close to one directory for each inserted block).\r\n<img width=\"1246\" alt=\"image\" src=\"https://user-images.githubusercontent.com/228536/101025541-c90e9d00-3586-11eb-8494-e58f8aa2fe9e.png\">\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17758/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17758/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17756","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17756/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17756/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17756/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/17756","id":756035706,"node_id":"MDU6SXNzdWU3NTYwMzU3MDY=","number":17756,"title":"\"unknown column name\" with multi-join + IN table","user":{"login":"bgranvea","id":1116217,"node_id":"MDQ6VXNlcjExMTYyMTc=","avatar_url":"https://avatars.githubusercontent.com/u/1116217?v=4","gravatar_id":"","url":"https://api.github.com/users/bgranvea","html_url":"https://github.com/bgranvea","followers_url":"https://api.github.com/users/bgranvea/followers","following_url":"https://api.github.com/users/bgranvea/following{/other_user}","gists_url":"https://api.github.com/users/bgranvea/gists{/gist_id}","starred_url":"https://api.github.com/users/bgranvea/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bgranvea/subscriptions","organizations_url":"https://api.github.com/users/bgranvea/orgs","repos_url":"https://api.github.com/users/bgranvea/repos","events_url":"https://api.github.com/users/bgranvea/events{/privacy}","received_events_url":"https://api.github.com/users/bgranvea/received_events","type":"User","site_admin":false},"labels":[{"id":386401505,"node_id":"MDU6TGFiZWwzODY0MDE1MDU=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/bug","name":"bug","color":"ee0701","default":true,"description":"Confirmed user-visible misbehaviour in official release"},{"id":1357578153,"node_id":"MDU6TGFiZWwxMzU3NTc4MTUz","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-joins","name":"comp-joins","color":"b5bcff","default":false,"description":"JOINs"},{"id":1507867504,"node_id":"MDU6TGFiZWwxNTA3ODY3NTA0","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/st-hold","name":"st-hold","color":"e5b890","default":false,"description":"We've paused the work on issue for some reason"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2020-12-03T09:45:32Z","updated_at":"2021-06-17T06:28:59Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"```\r\nroot@db-0:/# clickhouse-client\r\nClickHouse client version 20.11.4.13 (official build).\r\nConnecting to localhost:9000 as user default.\r\nConnected to ClickHouse server version 20.11.4 revision 54442.\r\n\r\ndb-0 :) create temporary table temp_table3(val0 UInt64) ENGINE=Memory();\r\n\r\ndb-0 :) select * from (select 1 as id) t1 inner join (select 1 as id) t2 on t1.id=t2.id inner join (select 1 as id) t3 on t1.id=t3.id where t1.id in temp_table3\r\n\r\nCode: 47. DB::Exception: Received from localhost:9000. DB::Exception: Unknown column name 'temp_table3': While processing SELECT `--t1.id` AS `t1.id`, `--t2.id` AS `t2.id`, t3.id AS `t3.id` FROM (SELECT 1 AS id) AS t1 INNER JOIN (SELECT 1 AS id) AS t2 ON t1.id = t2.id INNER JOIN (SELECT 1 AS id) AS t3 ON t1.id = t3.id WHERE `--t1.id` IN (temp_table3).\r\n\r\nit works if I remove a join:\r\n\r\ndb-0 :) select * from (select 1 as id) t1 inner join (select 1 as id) t2 on t1.id=t2.id where t1.id in temp_table3\r\n\r\n=> OK\r\n\r\n```\r\nworkaround: use IN (SELECT * FROM temp_table3)\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17756/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17756/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17736","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17736/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17736/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17736/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/17736","id":755299191,"node_id":"MDU6SXNzdWU3NTUyOTkxOTE=","number":17736,"title":"TSVRaw can't parse empty fields, input_format_tsv_empty_as_default=1 doesn't help","user":{"login":"n87","id":52826334,"node_id":"MDQ6VXNlcjUyODI2MzM0","avatar_url":"https://avatars.githubusercontent.com/u/52826334?v=4","gravatar_id":"","url":"https://api.github.com/users/n87","html_url":"https://github.com/n87","followers_url":"https://api.github.com/users/n87/followers","following_url":"https://api.github.com/users/n87/following{/other_user}","gists_url":"https://api.github.com/users/n87/gists{/gist_id}","starred_url":"https://api.github.com/users/n87/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/n87/subscriptions","organizations_url":"https://api.github.com/users/n87/orgs","repos_url":"https://api.github.com/users/n87/repos","events_url":"https://api.github.com/users/n87/events{/privacy}","received_events_url":"https://api.github.com/users/n87/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":1401255404,"node_id":"MDU6TGFiZWwxNDAxMjU1NDA0","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-formats","name":"comp-formats","color":"b5bcff","default":false,"description":"Input / output formats"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2020-12-02T14:00:11Z","updated_at":"2020-12-04T17:11:52Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"`TSV` format can parse empty fields for numbers:\r\n```\r\n$ echo | clickhouse-local --input_format_tsv_empty_as_default=1 --input-format=TSV -S 'a Int8' -q 'select a from table'\r\n0\r\n```\r\nBut `TSVRaw` can't:\r\n```\r\n$ echo | clickhouse-local  --input_format_tsv_empty_as_default=1 --input-format=TSVRaw -S 'a Int8' -q 'select a from table'\r\nCode: 32, e.displayText() = DB::Exception: Attempt to read after eof: While executing File (version 20.11.4.13 (official build))\r\n```\r\n```\r\n$ echo | clickhouse-local --input_format_tsv_empty_as_default=1 --input-format=TSVRaw -S 'a Float64' -q 'select a from table'\r\nCode: 72, e.displayText() = DB::Exception: Cannot read floating point value: (at row 1)\r\n\r\nRow 1:\r\nColumn 0,   name: a, type: Float64, ERROR: text \"<LINE FEED>\" is not like Float64\r\n\r\n: While executing File (version 20.11.4.13 (official build))\r\n```\r\n\r\nSame for Nullable:\r\n```\r\n$ echo | clickhouse-local --input_format_tsv_empty_as_default=1 --input-format=TSVRaw -S 'a Nullable(Int8)' -q 'select a from table'\r\nCode: 32, e.displayText() = DB::Exception: Attempt to read after eof: While executing File (version 20.11.4.13 (official build))\r\n```\r\n\r\nI also get same errors if I remove `--input_format_tsv_empty_as_default=1`, so I guess it's not applied for `TSVRaw`?","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17736/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17736/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17732","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17732/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17732/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17732/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/17732","id":755231794,"node_id":"MDU6SXNzdWU3NTUyMzE3OTQ=","number":17732,"title":"group by with high network traffic","user":{"login":"eiffel0311","id":7557366,"node_id":"MDQ6VXNlcjc1NTczNjY=","avatar_url":"https://avatars.githubusercontent.com/u/7557366?v=4","gravatar_id":"","url":"https://api.github.com/users/eiffel0311","html_url":"https://github.com/eiffel0311","followers_url":"https://api.github.com/users/eiffel0311/followers","following_url":"https://api.github.com/users/eiffel0311/following{/other_user}","gists_url":"https://api.github.com/users/eiffel0311/gists{/gist_id}","starred_url":"https://api.github.com/users/eiffel0311/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eiffel0311/subscriptions","organizations_url":"https://api.github.com/users/eiffel0311/orgs","repos_url":"https://api.github.com/users/eiffel0311/repos","events_url":"https://api.github.com/users/eiffel0311/events{/privacy}","received_events_url":"https://api.github.com/users/eiffel0311/received_events","type":"User","site_admin":false},"labels":[{"id":386401510,"node_id":"MDU6TGFiZWwzODY0MDE1MTA=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/question","name":"question","color":"bfdadc","default":true,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2020-12-02T12:28:53Z","updated_at":"2020-12-04T17:10:51Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"select brand_id, sum(engagement_new), count(1) \r\n   from(\r\n      select doc_id, brand_id, any(engagement_cnt) as engagement_new  from metrics.dws_3_view\r\n      group by doc_id, brand_id\r\n    ) tmp\r\ngroup by brand_id\r\n\r\n--------------------------------------\r\ntable engine likne\r\nENGINE = ReplicatedReplacingMergeTree('/clickhouse/metrics/{shard}/dws_3', '{replica}', create_time)\r\nPARTITION BY doc_id%100\r\n\r\nCREATE TABLE metrics.dws_view_3 AS metrics.dws_3 ENGINE = Distributed(s4r1, metrics, dws_3, doc_id%100)\r\n\r\n--------------------------------------\r\n\r\ndoc_id is a high cardinality  dimension， what can i do with sql above?\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17732/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17732/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17731","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17731/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17731/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17731/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/17731","id":755226885,"node_id":"MDU6SXNzdWU3NTUyMjY4ODU=","number":17731,"title":"Slow start with high memory consumption: log filled with \"<Debug> DiskLocal: Reserving 1.00 MiB on disk `default`, having unreserved 16.90 TiB.\"","user":{"login":"Farfaday","id":1902645,"node_id":"MDQ6VXNlcjE5MDI2NDU=","avatar_url":"https://avatars.githubusercontent.com/u/1902645?v=4","gravatar_id":"","url":"https://api.github.com/users/Farfaday","html_url":"https://github.com/Farfaday","followers_url":"https://api.github.com/users/Farfaday/followers","following_url":"https://api.github.com/users/Farfaday/following{/other_user}","gists_url":"https://api.github.com/users/Farfaday/gists{/gist_id}","starred_url":"https://api.github.com/users/Farfaday/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Farfaday/subscriptions","organizations_url":"https://api.github.com/users/Farfaday/orgs","repos_url":"https://api.github.com/users/Farfaday/repos","events_url":"https://api.github.com/users/Farfaday/events{/privacy}","received_events_url":"https://api.github.com/users/Farfaday/received_events","type":"User","site_admin":false},"labels":[{"id":756395244,"node_id":"MDU6TGFiZWw3NTYzOTUyNDQ=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/performance","name":"performance","color":"c2e0c6","default":false,"description":null},{"id":2416922900,"node_id":"MDU6TGFiZWwyNDE2OTIyOTAw","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/v20.10-affected","name":"v20.10-affected","color":"c2bfff","default":false,"description":""}],"state":"open","locked":false,"assignee":{"login":"CurtizJ","id":20361854,"node_id":"MDQ6VXNlcjIwMzYxODU0","avatar_url":"https://avatars.githubusercontent.com/u/20361854?v=4","gravatar_id":"","url":"https://api.github.com/users/CurtizJ","html_url":"https://github.com/CurtizJ","followers_url":"https://api.github.com/users/CurtizJ/followers","following_url":"https://api.github.com/users/CurtizJ/following{/other_user}","gists_url":"https://api.github.com/users/CurtizJ/gists{/gist_id}","starred_url":"https://api.github.com/users/CurtizJ/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/CurtizJ/subscriptions","organizations_url":"https://api.github.com/users/CurtizJ/orgs","repos_url":"https://api.github.com/users/CurtizJ/repos","events_url":"https://api.github.com/users/CurtizJ/events{/privacy}","received_events_url":"https://api.github.com/users/CurtizJ/received_events","type":"User","site_admin":false},"assignees":[{"login":"CurtizJ","id":20361854,"node_id":"MDQ6VXNlcjIwMzYxODU0","avatar_url":"https://avatars.githubusercontent.com/u/20361854?v=4","gravatar_id":"","url":"https://api.github.com/users/CurtizJ","html_url":"https://github.com/CurtizJ","followers_url":"https://api.github.com/users/CurtizJ/followers","following_url":"https://api.github.com/users/CurtizJ/following{/other_user}","gists_url":"https://api.github.com/users/CurtizJ/gists{/gist_id}","starred_url":"https://api.github.com/users/CurtizJ/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/CurtizJ/subscriptions","organizations_url":"https://api.github.com/users/CurtizJ/orgs","repos_url":"https://api.github.com/users/CurtizJ/repos","events_url":"https://api.github.com/users/CurtizJ/events{/privacy}","received_events_url":"https://api.github.com/users/CurtizJ/received_events","type":"User","site_admin":false}],"milestone":null,"comments":16,"created_at":"2020-12-02T12:21:58Z","updated_at":"2020-12-07T14:20:17Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"**Describe the bug**\r\n\r\nSince we upgraded to 20.10.3.30, one of our clickhouse cluster takes much more time to start. (Up to 50 minutes, and before it took ~3 minutes)\r\nThe log file is filled with\r\n>  <Debug> DiskLocal: Reserving 1.00 MiB on disk `default`, having unreserved 16.90 TiB\r\n\r\nAdditionally, the memory consumption increases, linearly, a lot (up to arround 230 G for us) and then drop back to normal values once clickhouse finished starting up. During that loading phase, a single CPU core is used at 100%.\r\nIf that memory is not available for the machine, clickhouse gets OOMed by the kernel.\r\n\r\n\r\n**How to reproduce**\r\n* Issue appeared after we upgraded to ClickHouse server version 20.10.3.30\r\n\r\n* How could I find wich of our tables may be responsible for that ?\r\n\r\n\r\n**Expected behavior**\r\nA fast startup :)\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17731/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17731/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17721","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17721/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17721/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17721/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/17721","id":755176715,"node_id":"MDU6SXNzdWU3NTUxNzY3MTU=","number":17721,"title":"MODIFY TTL mutation doesn't work with in-memory parts.","user":{"login":"UnamedRus","id":9449405,"node_id":"MDQ6VXNlcjk0NDk0MDU=","avatar_url":"https://avatars.githubusercontent.com/u/9449405?v=4","gravatar_id":"","url":"https://api.github.com/users/UnamedRus","html_url":"https://github.com/UnamedRus","followers_url":"https://api.github.com/users/UnamedRus/followers","following_url":"https://api.github.com/users/UnamedRus/following{/other_user}","gists_url":"https://api.github.com/users/UnamedRus/gists{/gist_id}","starred_url":"https://api.github.com/users/UnamedRus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/UnamedRus/subscriptions","organizations_url":"https://api.github.com/users/UnamedRus/orgs","repos_url":"https://api.github.com/users/UnamedRus/repos","events_url":"https://api.github.com/users/UnamedRus/events{/privacy}","received_events_url":"https://api.github.com/users/UnamedRus/received_events","type":"User","site_admin":false},"labels":[{"id":386401505,"node_id":"MDU6TGFiZWwzODY0MDE1MDU=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/bug","name":"bug","color":"ee0701","default":true,"description":"Confirmed user-visible misbehaviour in official release"},{"id":1401282669,"node_id":"MDU6TGFiZWwxNDAxMjgyNjY5","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-ttl","name":"comp-ttl","color":"b5bcff","default":false,"description":"TTL"}],"state":"open","locked":false,"assignee":{"login":"CurtizJ","id":20361854,"node_id":"MDQ6VXNlcjIwMzYxODU0","avatar_url":"https://avatars.githubusercontent.com/u/20361854?v=4","gravatar_id":"","url":"https://api.github.com/users/CurtizJ","html_url":"https://github.com/CurtizJ","followers_url":"https://api.github.com/users/CurtizJ/followers","following_url":"https://api.github.com/users/CurtizJ/following{/other_user}","gists_url":"https://api.github.com/users/CurtizJ/gists{/gist_id}","starred_url":"https://api.github.com/users/CurtizJ/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/CurtizJ/subscriptions","organizations_url":"https://api.github.com/users/CurtizJ/orgs","repos_url":"https://api.github.com/users/CurtizJ/repos","events_url":"https://api.github.com/users/CurtizJ/events{/privacy}","received_events_url":"https://api.github.com/users/CurtizJ/received_events","type":"User","site_admin":false},"assignees":[{"login":"CurtizJ","id":20361854,"node_id":"MDQ6VXNlcjIwMzYxODU0","avatar_url":"https://avatars.githubusercontent.com/u/20361854?v=4","gravatar_id":"","url":"https://api.github.com/users/CurtizJ","html_url":"https://github.com/CurtizJ","followers_url":"https://api.github.com/users/CurtizJ/followers","following_url":"https://api.github.com/users/CurtizJ/following{/other_user}","gists_url":"https://api.github.com/users/CurtizJ/gists{/gist_id}","starred_url":"https://api.github.com/users/CurtizJ/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/CurtizJ/subscriptions","organizations_url":"https://api.github.com/users/CurtizJ/orgs","repos_url":"https://api.github.com/users/CurtizJ/repos","events_url":"https://api.github.com/users/CurtizJ/events{/privacy}","received_events_url":"https://api.github.com/users/CurtizJ/received_events","type":"User","site_admin":false}],"milestone":null,"comments":0,"created_at":"2020-12-02T11:08:48Z","updated_at":"2021-04-20T22:18:20Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"**How to reproduce**\r\nClickhouse version 20.8.3, 20.12.1.5154, 20.13.1\r\n```\r\nCREATE TABLE default.test\r\n(\r\n`key` UInt32,\r\n`ts` DateTime CODEC(DoubleDelta, LZ4),\r\n`db_time` DateTime DEFAULT now() COMMENT 'spout-ignore' CODEC(DoubleDelta, LZ4)\r\n)\r\nENGINE = MergeTree\r\nPARTITION BY toStartOfTenMinutes(db_time)\r\nORDER BY (key, ts)\r\nTTL db_time + toIntervalHour(3)\r\nSETTINGS index_granularity = 8192, merge_with_ttl_timeout = 3600, min_rows_for_compact_part = 1000000, min_bytes_for_compact_part = 200000000, in_memory_parts_enable_wal = 0;\r\n\r\n\r\nINSERT INTO test(key, ts) SELECT number % 1000, now() + intDiv(number,1000) FROM numbers(500000);\r\n\r\nALTER TABLE test MODIFY TTL now() + toIntervalHour(1);\r\n```\r\n\r\n**Error message and/or stacktrace**\r\n```\r\nCode: 341, e.displayText() = DB::Exception: Exception happened during execution of mutation 'mutation_2.txt' with part '1606906200_1_1_0' reason: 'Code: 49, e.displayText() = DB::Exception: DataPartWriterInMemory supports only one write (version 20.12.1.5154 (official build))'. This error maybe retryable or not. In case of unretryable error, mutation can be killed with KILL MUTATION query (version 20.12.1.5154 (official build)) (from 127.0.0.1:59690) (in query: ALTER TABLE rawmetrics MODIFY TTL now() + toIntervalHour(1) ;), Stack trace (when copying this message, always include the lines below):\r\n\r\n0. DB::Exception::Exception<char const*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&>(int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, char const*&&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&) @ 0xe211221 in /usr/bin/clickhouse\r\n1. DB::checkMutationStatus(std::__1::optional<DB::MergeTreeMutationStatus>&, std::__1::set<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0xe211076 in /usr/bin/clickhouse\r\n2. DB::StorageMergeTree::waitForMutation(long, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) @ 0xdf14a99 in /usr/bin/clickhouse\r\n3. DB::StorageMergeTree::alter(DB::AlterCommands const&, DB::Context const&, std::__1::shared_ptr<DB::RWLockImpl::LockHolderImpl>&) @ 0xdf13bb4 in /usr/bin/clickhouse\r\n4. DB::InterpreterAlterQuery::execute() @ 0xd949722 in /usr/bin/clickhouse\r\n5. ? @ 0xdcd608a in /usr/bin/clickhouse\r\n6. DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum, bool) @ 0xdcd4c5d in /usr/bin/clickhouse\r\n7. DB::TCPHandler::runImpl() @ 0xe392166 in /usr/bin/clickhouse\r\n8. DB::TCPHandler::run() @ 0xe39e667 in /usr/bin/clickhouse\r\n9. Poco::Net::TCPServerConnection::start() @ 0x10b27ddf in /usr/bin/clickhouse\r\n10. Poco::Net::TCPServerDispatcher::run() @ 0x10b297ee in /usr/bin/clickhouse\r\n11. Poco::PooledThread::run() @ 0x10c569d9 in /usr/bin/clickhouse\r\n12. Poco::ThreadImpl::runnableEntry(void*) @ 0x10c5296a in /usr/bin/clickhouse\r\n13. start_thread @ 0x9609 in /usr/lib/x86_64-linux-gnu/libpthread-2.31.so\r\n14. clone @ 0x122293 in /usr/lib/x86_64-linux-gnu/libc-2.31.so\r\n\r\n\r\nReceived exception from server (version 20.12.1):\r\nCode: 341. DB::Exception: Received from localhost:9000. DB::Exception: Exception happened during execution of mutation 'mutation_2.txt' with part '1606906200_1_1_0' reason: 'Code: 49, e.displayText() = DB::Exception: DataPartWriterInMemory supports only one write (version 20.12.1.5154 (official build))'. This error maybe retryable or not. In case of unretryable error, mutation can be killed with KILL MUTATION query.\r\n\r\n0 rows in set. Elapsed: 0.056 sec.\r\n```\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17721/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17721/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17719","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17719/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17719/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17719/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/17719","id":755101462,"node_id":"MDU6SXNzdWU3NTUxMDE0NjI=","number":17719,"title":"Alternative ways of rough sampling?","user":{"login":"mzealey","id":6083471,"node_id":"MDQ6VXNlcjYwODM0NzE=","avatar_url":"https://avatars.githubusercontent.com/u/6083471?v=4","gravatar_id":"","url":"https://api.github.com/users/mzealey","html_url":"https://github.com/mzealey","followers_url":"https://api.github.com/users/mzealey/followers","following_url":"https://api.github.com/users/mzealey/following{/other_user}","gists_url":"https://api.github.com/users/mzealey/gists{/gist_id}","starred_url":"https://api.github.com/users/mzealey/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mzealey/subscriptions","organizations_url":"https://api.github.com/users/mzealey/orgs","repos_url":"https://api.github.com/users/mzealey/repos","events_url":"https://api.github.com/users/mzealey/events{/privacy}","received_events_url":"https://api.github.com/users/mzealey/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2020-12-02T09:29:56Z","updated_at":"2020-12-21T13:26:30Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"\r\n**Use case**\r\n\r\nWe have some big tables covering large date ranges partitioned by hour but sorted by some customer ID and then timestamp. We would like to get some rough stats on a daily basis by randomly sampling some rows each day (perhaps 1%). Sample by will do this however I understand this means needing to add a hash of the timestamp into our sorting key which is not ideal because we have quite a good way to sort which results in very good compression.\r\n\r\n**Describe the solution you'd like**\r\n\r\nCould there br some alternative (less accurate) ways to handle this easily? For example taking some random chunks of rows from each partition rather than randomly sampling individual rows. İn this case the output would be variable and less correct but it would not need sort key changing or sample by specifying? I think most of the current syntax could be reused but perhaps `sample chunks k` sort of expression?\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17719/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17719/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17710","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17710/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17710/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17710/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/17710","id":755005433,"node_id":"MDU6SXNzdWU3NTUwMDU0MzM=","number":17710,"title":"Join Engine Not found column id_val_join.val in block","user":{"login":"yd1261137568","id":33176197,"node_id":"MDQ6VXNlcjMzMTc2MTk3","avatar_url":"https://avatars.githubusercontent.com/u/33176197?v=4","gravatar_id":"","url":"https://api.github.com/users/yd1261137568","html_url":"https://github.com/yd1261137568","followers_url":"https://api.github.com/users/yd1261137568/followers","following_url":"https://api.github.com/users/yd1261137568/following{/other_user}","gists_url":"https://api.github.com/users/yd1261137568/gists{/gist_id}","starred_url":"https://api.github.com/users/yd1261137568/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yd1261137568/subscriptions","organizations_url":"https://api.github.com/users/yd1261137568/orgs","repos_url":"https://api.github.com/users/yd1261137568/repos","events_url":"https://api.github.com/users/yd1261137568/events{/privacy}","received_events_url":"https://api.github.com/users/yd1261137568/received_events","type":"User","site_admin":false},"labels":[{"id":386401505,"node_id":"MDU6TGFiZWwzODY0MDE1MDU=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/bug","name":"bug","color":"ee0701","default":true,"description":"Confirmed user-visible misbehaviour in official release"},{"id":1507867504,"node_id":"MDU6TGFiZWwxNTA3ODY3NTA0","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/st-hold","name":"st-hold","color":"e5b890","default":false,"description":"We've paused the work on issue for some reason"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2020-12-02T07:00:40Z","updated_at":"2021-06-18T17:40:41Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"version:20.8.3.18 \r\nAccording to the official document join engine operation, the result is the following exception\r\n\r\nCREATE TABLE id_val(`id` UInt32, `val` UInt32) ENGINE = TinyLog;\r\n\r\nINSERT INTO id_val VALUES (1,11)(2,12)(3,13);\r\n\r\nCREATE TABLE id_val_join(`id` UInt32, `val` UInt8) ENGINE = Join(ANY, LEFT, id);\r\n\r\nINSERT INTO id_val_join VALUES (1,21)(1,22)(3,23);\r\n\r\nSELECT * FROM id_val ANY LEFT JOIN id_val_join USING (id);\r\n\r\n\r\nException: Not found column id_val_join.val in block. There are only columns: id, val (version 20.8.3.18)","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17710/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17710/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17708","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17708/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17708/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17708/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/17708","id":754781976,"node_id":"MDU6SXNzdWU3NTQ3ODE5NzY=","number":17708,"title":"[GEO] Full set of H3 functions ","user":{"login":"AbelVM","id":9017165,"node_id":"MDQ6VXNlcjkwMTcxNjU=","avatar_url":"https://avatars.githubusercontent.com/u/9017165?v=4","gravatar_id":"","url":"https://api.github.com/users/AbelVM","html_url":"https://github.com/AbelVM","followers_url":"https://api.github.com/users/AbelVM/followers","following_url":"https://api.github.com/users/AbelVM/following{/other_user}","gists_url":"https://api.github.com/users/AbelVM/gists{/gist_id}","starred_url":"https://api.github.com/users/AbelVM/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/AbelVM/subscriptions","organizations_url":"https://api.github.com/users/AbelVM/orgs","repos_url":"https://api.github.com/users/AbelVM/repos","events_url":"https://api.github.com/users/AbelVM/events{/privacy}","received_events_url":"https://api.github.com/users/AbelVM/received_events","type":"User","site_admin":false},"labels":[{"id":386401508,"node_id":"MDU6TGFiZWwzODY0MDE1MDg=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/help%20wanted","name":"help wanted","color":"128A0C","default":true,"description":null},{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":644208617,"node_id":"MDU6TGFiZWw2NDQyMDg2MTc=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/easy%20task","name":"easy task","color":"0e8a16","default":false,"description":"Good for first contributors"},{"id":1678455885,"node_id":"MDU6TGFiZWwxNjc4NDU1ODg1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-geo","name":"comp-geo","color":"b5bcff","default":false,"description":""}],"state":"open","locked":false,"assignee":{"login":"bharatnc","id":9305394,"node_id":"MDQ6VXNlcjkzMDUzOTQ=","avatar_url":"https://avatars.githubusercontent.com/u/9305394?v=4","gravatar_id":"","url":"https://api.github.com/users/bharatnc","html_url":"https://github.com/bharatnc","followers_url":"https://api.github.com/users/bharatnc/followers","following_url":"https://api.github.com/users/bharatnc/following{/other_user}","gists_url":"https://api.github.com/users/bharatnc/gists{/gist_id}","starred_url":"https://api.github.com/users/bharatnc/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bharatnc/subscriptions","organizations_url":"https://api.github.com/users/bharatnc/orgs","repos_url":"https://api.github.com/users/bharatnc/repos","events_url":"https://api.github.com/users/bharatnc/events{/privacy}","received_events_url":"https://api.github.com/users/bharatnc/received_events","type":"User","site_admin":false},"assignees":[{"login":"bharatnc","id":9305394,"node_id":"MDQ6VXNlcjkzMDUzOTQ=","avatar_url":"https://avatars.githubusercontent.com/u/9305394?v=4","gravatar_id":"","url":"https://api.github.com/users/bharatnc","html_url":"https://github.com/bharatnc","followers_url":"https://api.github.com/users/bharatnc/followers","following_url":"https://api.github.com/users/bharatnc/following{/other_user}","gists_url":"https://api.github.com/users/bharatnc/gists{/gist_id}","starred_url":"https://api.github.com/users/bharatnc/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bharatnc/subscriptions","organizations_url":"https://api.github.com/users/bharatnc/orgs","repos_url":"https://api.github.com/users/bharatnc/repos","events_url":"https://api.github.com/users/bharatnc/events{/privacy}","received_events_url":"https://api.github.com/users/bharatnc/received_events","type":"User","site_admin":false}],"milestone":null,"comments":12,"created_at":"2020-12-01T22:42:54Z","updated_at":"2022-01-08T08:55:21Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"The current implementation of H3 functionality is partial, including only a subset of the functions actually available in the library\r\n\r\nIt would be great if the full H3 API was available within ClickHouse :slightly_smiling_face: ","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17708/reactions","total_count":1,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":1},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17708/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17706","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17706/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17706/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17706/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/17706","id":754669724,"node_id":"MDU6SXNzdWU3NTQ2Njk3MjQ=","number":17706,"title":"Bug in documentation markup: wrong scrolling when navigating by anchors.","user":{"login":"alexey-milovidov","id":18581488,"node_id":"MDQ6VXNlcjE4NTgxNDg4","avatar_url":"https://avatars.githubusercontent.com/u/18581488?v=4","gravatar_id":"","url":"https://api.github.com/users/alexey-milovidov","html_url":"https://github.com/alexey-milovidov","followers_url":"https://api.github.com/users/alexey-milovidov/followers","following_url":"https://api.github.com/users/alexey-milovidov/following{/other_user}","gists_url":"https://api.github.com/users/alexey-milovidov/gists{/gist_id}","starred_url":"https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexey-milovidov/subscriptions","organizations_url":"https://api.github.com/users/alexey-milovidov/orgs","repos_url":"https://api.github.com/users/alexey-milovidov/repos","events_url":"https://api.github.com/users/alexey-milovidov/events{/privacy}","received_events_url":"https://api.github.com/users/alexey-milovidov/received_events","type":"User","site_admin":false},"labels":[{"id":785082162,"node_id":"MDU6TGFiZWw3ODUwODIxNjI=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-documentation","name":"comp-documentation","color":"b5bcff","default":false,"description":"Used to run automatic builds of the documentation"},{"id":2668414603,"node_id":"MDU6TGFiZWwyNjY4NDE0NjAz","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/bug%20on%20website","name":"bug on website","color":"EA39C8","default":false,"description":""}],"state":"open","locked":false,"assignee":{"login":"rfraposa","id":5323324,"node_id":"MDQ6VXNlcjUzMjMzMjQ=","avatar_url":"https://avatars.githubusercontent.com/u/5323324?v=4","gravatar_id":"","url":"https://api.github.com/users/rfraposa","html_url":"https://github.com/rfraposa","followers_url":"https://api.github.com/users/rfraposa/followers","following_url":"https://api.github.com/users/rfraposa/following{/other_user}","gists_url":"https://api.github.com/users/rfraposa/gists{/gist_id}","starred_url":"https://api.github.com/users/rfraposa/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rfraposa/subscriptions","organizations_url":"https://api.github.com/users/rfraposa/orgs","repos_url":"https://api.github.com/users/rfraposa/repos","events_url":"https://api.github.com/users/rfraposa/events{/privacy}","received_events_url":"https://api.github.com/users/rfraposa/received_events","type":"User","site_admin":false},"assignees":[{"login":"rfraposa","id":5323324,"node_id":"MDQ6VXNlcjUzMjMzMjQ=","avatar_url":"https://avatars.githubusercontent.com/u/5323324?v=4","gravatar_id":"","url":"https://api.github.com/users/rfraposa","html_url":"https://github.com/rfraposa","followers_url":"https://api.github.com/users/rfraposa/followers","following_url":"https://api.github.com/users/rfraposa/following{/other_user}","gists_url":"https://api.github.com/users/rfraposa/gists{/gist_id}","starred_url":"https://api.github.com/users/rfraposa/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rfraposa/subscriptions","organizations_url":"https://api.github.com/users/rfraposa/orgs","repos_url":"https://api.github.com/users/rfraposa/repos","events_url":"https://api.github.com/users/rfraposa/events{/privacy}","received_events_url":"https://api.github.com/users/rfraposa/received_events","type":"User","site_admin":false}],"milestone":null,"comments":0,"created_at":"2020-12-01T19:40:01Z","updated_at":"2022-01-16T03:23:33Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"https://clickhouse.tech/docs/en/sql-reference/statements/alter/partition/#alter_drop-detached\r\n\r\nSticky page header overlaps the content (paragraph title `DROP DETACHED PARTITION|PART` is not visible).","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17706/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17706/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17655","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17655/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17655/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17655/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/17655","id":754003235,"node_id":"MDU6SXNzdWU3NTQwMDMyMzU=","number":17655,"title":"RBAC - EXISTS <dictionary> requires SHOW TABLES.","user":{"login":"MyroTk","id":44327070,"node_id":"MDQ6VXNlcjQ0MzI3MDcw","avatar_url":"https://avatars.githubusercontent.com/u/44327070?v=4","gravatar_id":"","url":"https://api.github.com/users/MyroTk","html_url":"https://github.com/MyroTk","followers_url":"https://api.github.com/users/MyroTk/followers","following_url":"https://api.github.com/users/MyroTk/following{/other_user}","gists_url":"https://api.github.com/users/MyroTk/gists{/gist_id}","starred_url":"https://api.github.com/users/MyroTk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/MyroTk/subscriptions","organizations_url":"https://api.github.com/users/MyroTk/orgs","repos_url":"https://api.github.com/users/MyroTk/repos","events_url":"https://api.github.com/users/MyroTk/events{/privacy}","received_events_url":"https://api.github.com/users/MyroTk/received_events","type":"User","site_admin":false},"labels":[{"id":386401505,"node_id":"MDU6TGFiZWwzODY0MDE1MDU=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/bug","name":"bug","color":"ee0701","default":true,"description":"Confirmed user-visible misbehaviour in official release"},{"id":2011606513,"node_id":"MDU6TGFiZWwyMDExNjA2NTEz","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-rbac","name":"comp-rbac","color":"b5bcff","default":false,"description":"Access control related"}],"state":"open","locked":false,"assignee":{"login":"vitlibar","id":45142681,"node_id":"MDQ6VXNlcjQ1MTQyNjgx","avatar_url":"https://avatars.githubusercontent.com/u/45142681?v=4","gravatar_id":"","url":"https://api.github.com/users/vitlibar","html_url":"https://github.com/vitlibar","followers_url":"https://api.github.com/users/vitlibar/followers","following_url":"https://api.github.com/users/vitlibar/following{/other_user}","gists_url":"https://api.github.com/users/vitlibar/gists{/gist_id}","starred_url":"https://api.github.com/users/vitlibar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vitlibar/subscriptions","organizations_url":"https://api.github.com/users/vitlibar/orgs","repos_url":"https://api.github.com/users/vitlibar/repos","events_url":"https://api.github.com/users/vitlibar/events{/privacy}","received_events_url":"https://api.github.com/users/vitlibar/received_events","type":"User","site_admin":false},"assignees":[{"login":"vitlibar","id":45142681,"node_id":"MDQ6VXNlcjQ1MTQyNjgx","avatar_url":"https://avatars.githubusercontent.com/u/45142681?v=4","gravatar_id":"","url":"https://api.github.com/users/vitlibar","html_url":"https://github.com/vitlibar","followers_url":"https://api.github.com/users/vitlibar/followers","following_url":"https://api.github.com/users/vitlibar/following{/other_user}","gists_url":"https://api.github.com/users/vitlibar/gists{/gist_id}","starred_url":"https://api.github.com/users/vitlibar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vitlibar/subscriptions","organizations_url":"https://api.github.com/users/vitlibar/orgs","repos_url":"https://api.github.com/users/vitlibar/repos","events_url":"https://api.github.com/users/vitlibar/events{/privacy}","received_events_url":"https://api.github.com/users/vitlibar/received_events","type":"User","site_admin":false}],"milestone":null,"comments":0,"created_at":"2020-12-01T04:44:54Z","updated_at":"2021-07-02T23:44:38Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"**Describe the bug**\r\nThe grant `SHOW DICTIONARIES ON dict0` does not allow the user to execute `EXISTS dict0`, as [documentation](https://clickhouse.tech/docs/en/sql-reference/statements/grant/#grant-show) says it should. Instead the user needs `SHOW TABLES ON dict0`.\r\n\r\n**How to reproduce**\r\n* ClickHouse server version 20.10.3 revision 54441.\r\n* Queries to run that lead to unexpected result\r\n```\r\naltinity-qa-cosmic2 :) GRANT SHOW DICTIONARIES ON *.* TO user0\r\n\r\nGRANT SHOW DICTIONARIES ON *.* TO user0\r\n\r\nOk.\r\n\r\n0 rows in set. Elapsed: 0.001 sec.\r\n\r\naltinity-qa-cosmic2 :) q\r\nBye.\r\nmyrotk@altinity-qa-cosmic2:~$ clickhouse client -uuser0\r\nClickHouse client version 20.10.3.30 (official build).\r\nConnecting to localhost:9000 as user user0.\r\nConnected to ClickHouse server version 20.10.3 revision 54441.\r\n\r\naltinity-qa-cosmic2 :) EXISTS dict0\r\n\r\nEXISTS TABLE dict0\r\n\r\nReceived exception from server (version 20.10.3):\r\nCode: 497. DB::Exception: Received from localhost:9000. DB::Exception: user0: Not enough privileges. To execute this query it's necessary to have the grant SHOW TABLES ON default.dict0.\r\n\r\n0 rows in set. Elapsed: 0.001 sec.\r\n```","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17655/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17655/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17653","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17653/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17653/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17653/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/17653","id":753985991,"node_id":"MDU6SXNzdWU3NTM5ODU5OTE=","number":17653,"title":"RBAC - CREATE TABLE throws 'Not enough privileges' exception, but still creates the table.","user":{"login":"MyroTk","id":44327070,"node_id":"MDQ6VXNlcjQ0MzI3MDcw","avatar_url":"https://avatars.githubusercontent.com/u/44327070?v=4","gravatar_id":"","url":"https://api.github.com/users/MyroTk","html_url":"https://github.com/MyroTk","followers_url":"https://api.github.com/users/MyroTk/followers","following_url":"https://api.github.com/users/MyroTk/following{/other_user}","gists_url":"https://api.github.com/users/MyroTk/gists{/gist_id}","starred_url":"https://api.github.com/users/MyroTk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/MyroTk/subscriptions","organizations_url":"https://api.github.com/users/MyroTk/orgs","repos_url":"https://api.github.com/users/MyroTk/repos","events_url":"https://api.github.com/users/MyroTk/events{/privacy}","received_events_url":"https://api.github.com/users/MyroTk/received_events","type":"User","site_admin":false},"labels":[{"id":1575085465,"node_id":"MDU6TGFiZWwxNTc1MDg1NDY1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/unexpected%20behaviour","name":"unexpected behaviour","color":"e088ca","default":false,"description":""},{"id":2011606513,"node_id":"MDU6TGFiZWwyMDExNjA2NTEz","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-rbac","name":"comp-rbac","color":"b5bcff","default":false,"description":"Access control related"}],"state":"open","locked":false,"assignee":{"login":"vitlibar","id":45142681,"node_id":"MDQ6VXNlcjQ1MTQyNjgx","avatar_url":"https://avatars.githubusercontent.com/u/45142681?v=4","gravatar_id":"","url":"https://api.github.com/users/vitlibar","html_url":"https://github.com/vitlibar","followers_url":"https://api.github.com/users/vitlibar/followers","following_url":"https://api.github.com/users/vitlibar/following{/other_user}","gists_url":"https://api.github.com/users/vitlibar/gists{/gist_id}","starred_url":"https://api.github.com/users/vitlibar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vitlibar/subscriptions","organizations_url":"https://api.github.com/users/vitlibar/orgs","repos_url":"https://api.github.com/users/vitlibar/repos","events_url":"https://api.github.com/users/vitlibar/events{/privacy}","received_events_url":"https://api.github.com/users/vitlibar/received_events","type":"User","site_admin":false},"assignees":[{"login":"vitlibar","id":45142681,"node_id":"MDQ6VXNlcjQ1MTQyNjgx","avatar_url":"https://avatars.githubusercontent.com/u/45142681?v=4","gravatar_id":"","url":"https://api.github.com/users/vitlibar","html_url":"https://github.com/vitlibar","followers_url":"https://api.github.com/users/vitlibar/followers","following_url":"https://api.github.com/users/vitlibar/following{/other_user}","gists_url":"https://api.github.com/users/vitlibar/gists{/gist_id}","starred_url":"https://api.github.com/users/vitlibar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vitlibar/subscriptions","organizations_url":"https://api.github.com/users/vitlibar/orgs","repos_url":"https://api.github.com/users/vitlibar/repos","events_url":"https://api.github.com/users/vitlibar/events{/privacy}","received_events_url":"https://api.github.com/users/vitlibar/received_events","type":"User","site_admin":false}],"milestone":null,"comments":2,"created_at":"2020-12-01T03:59:28Z","updated_at":"2022-01-25T13:28:38Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"**Describe the bug**\r\nClickHouse throws an exception for \"not enough privileges\", but creates the table regardless. The user has the grants `CREATE ON table2` and `SELECT ON table1` and is missing `INSERT ON table2`.\r\n\r\n**How to reproduce**\r\n* Which ClickHouse server version to use\r\n`ClickHouse server version 20.10.3 revision 54441`\r\n* `CREATE TABLE` statements for all tables involved\r\n```\r\n\r\naltinity-qa-cosmic2 :) show create table1\r\n\r\nSHOW CREATE TABLE table1\r\n\r\n┌─statement─────────────────────────────────────────────────┐\r\n│ CREATE TABLE default.table1\r\n(\r\n    `x` Int32\r\n)\r\nENGINE = Memory │\r\n└───────────────────────────────────────────────────────────┘\r\n\r\n1 rows in set. Elapsed: 0.001 sec.\r\n\r\n```\r\n```\r\n\r\naltinity-qa-cosmic2 :) show create table0\r\n\r\nSHOW CREATE TABLE table0\r\n\r\n┌─statement─────────────────────────────────────────────────┐\r\n│ CREATE TABLE default.table0\r\n(\r\n    `x` Int32\r\n)\r\nENGINE = Memory │\r\n└───────────────────────────────────────────────────────────┘\r\n\r\n1 rows in set. Elapsed: 0.001 sec.\r\n```\r\n* Queries to run that lead to unexpected result\r\n```\r\naltinity-qa-cosmic2 :) create table table2 ENGINE = Memory AS SELECT * FROM table0 JOIN table1 USING x\r\n\r\nCREATE TABLE table2\r\nENGINE = Memory AS\r\nSELECT *\r\nFROM table0\r\nINNER JOIN table1 USING (x)\r\n\r\n\r\nReceived exception from server (version 20.10.3):\r\nCode: 497. DB::Exception: Received from localhost:9000. DB::Exception: user0: Not enough privileges. To execute this query it's necessary to have the grant INSERT(x) ON default.table2.\r\n\r\n0 rows in set. Elapsed: 0.007 sec.\r\n\r\naltinity-qa-cosmic2 :) q\r\nBye.\r\nmyrotk@altinity-qa-cosmic2:~$ clickhouse client\r\nClickHouse client version 20.10.3.30 (official build).\r\nConnecting to localhost:9000 as user default.\r\nConnected to ClickHouse server version 20.10.3 revision 54441.\r\n\r\naltinity-qa-cosmic2 :) show create table2\r\n\r\nSHOW CREATE TABLE table2\r\n\r\n┌─statement─────────────────────────────────────────────────┐\r\n│ CREATE TABLE default.table2\r\n(\r\n    `x` Int32\r\n)\r\nENGINE = Memory │\r\n└───────────────────────────────────────────────────────────┘\r\n\r\n1 rows in set. Elapsed: 0.001 sec.\r\n\r\n```\r\n\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17653/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17653/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17612","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17612/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17612/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17612/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/17612","id":753256228,"node_id":"MDU6SXNzdWU3NTMyNTYyMjg=","number":17612,"title":"\"OR\" operator in \"ON\" section for join","user":{"login":"ilejn","id":360758,"node_id":"MDQ6VXNlcjM2MDc1OA==","avatar_url":"https://avatars.githubusercontent.com/u/360758?v=4","gravatar_id":"","url":"https://api.github.com/users/ilejn","html_url":"https://github.com/ilejn","followers_url":"https://api.github.com/users/ilejn/followers","following_url":"https://api.github.com/users/ilejn/following{/other_user}","gists_url":"https://api.github.com/users/ilejn/gists{/gist_id}","starred_url":"https://api.github.com/users/ilejn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilejn/subscriptions","organizations_url":"https://api.github.com/users/ilejn/orgs","repos_url":"https://api.github.com/users/ilejn/repos","events_url":"https://api.github.com/users/ilejn/events{/privacy}","received_events_url":"https://api.github.com/users/ilejn/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":1357578153,"node_id":"MDU6TGFiZWwxMzU3NTc4MTUz","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-joins","name":"comp-joins","color":"b5bcff","default":false,"description":"JOINs"},{"id":2082312777,"node_id":"MDU6TGFiZWwyMDgyMzEyNzc3","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/st-almost-fixed","name":"st-almost-fixed","color":"e5b890","default":false,"description":"Some fixes were applied but some still considered"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":9,"created_at":"2020-11-30T08:10:13Z","updated_at":"2021-11-13T22:59:03Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"**Current behaviour**\r\n\r\n```\r\nSELECT *\r\nFROM \r\n(\r\n    SELECT *\r\n    FROM test_data\r\n) AS t1\r\nANY INNER JOIN \r\n(\r\n    SELECT *\r\n    FROM test_data_2\r\n) AS t2 ON (t1.id = t2.id) OR (t1.val = t2.val)\r\nLIMIT 10\r\n\r\nReceived exception from server (version 20.5.2):\r\n\r\nCode: 403. DB::Exception: Received from localhost:9000. DB::Exception: Invalid expression for JOIN ON. Expected equals expression, got (id = t2.id) OR (val = t2.val). Supported syntax: JOIN ON Expr([table.]column, ...) = Expr([table.]column, ...) [AND Expr([table.]column, ...) = Expr([table.]column, ...) ...].\r\n\r\n```\r\n**Desired behaviour**\r\n\r\nAct according to SQL standard, support boolean logic, support all kinds of joins. ","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17612/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17612/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17456","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17456/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17456/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17456/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/17456","id":751781514,"node_id":"MDU6SXNzdWU3NTE3ODE1MTQ=","number":17456,"title":"Catboost Model from external source (like dictionaries)","user":{"login":"Slind14","id":3914677,"node_id":"MDQ6VXNlcjM5MTQ2Nzc=","avatar_url":"https://avatars.githubusercontent.com/u/3914677?v=4","gravatar_id":"","url":"https://api.github.com/users/Slind14","html_url":"https://github.com/Slind14","followers_url":"https://api.github.com/users/Slind14/followers","following_url":"https://api.github.com/users/Slind14/following{/other_user}","gists_url":"https://api.github.com/users/Slind14/gists{/gist_id}","starred_url":"https://api.github.com/users/Slind14/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Slind14/subscriptions","organizations_url":"https://api.github.com/users/Slind14/orgs","repos_url":"https://api.github.com/users/Slind14/repos","events_url":"https://api.github.com/users/Slind14/events{/privacy}","received_events_url":"https://api.github.com/users/Slind14/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":1369940711,"node_id":"MDU6TGFiZWwxMzY5OTQwNzEx","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-ml","name":"comp-ml","color":"b5bcff","default":false,"description":"Machine Learning"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2020-11-26T18:53:32Z","updated_at":"2021-01-04T14:22:15Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"It would be great if it would be possible to load a catboost model from an external source as it is possible with the external dictionaries. (https)","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17456/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17456/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17455","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17455/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17455/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17455/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/17455","id":751781283,"node_id":"MDU6SXNzdWU3NTE3ODEyODM=","number":17455,"title":"Anyway to manually fix Metadata on replica is not up to date with common metadata in Zookeeper?","user":{"login":"simPod","id":327717,"node_id":"MDQ6VXNlcjMyNzcxNw==","avatar_url":"https://avatars.githubusercontent.com/u/327717?v=4","gravatar_id":"","url":"https://api.github.com/users/simPod","html_url":"https://github.com/simPod","followers_url":"https://api.github.com/users/simPod/followers","following_url":"https://api.github.com/users/simPod/following{/other_user}","gists_url":"https://api.github.com/users/simPod/gists{/gist_id}","starred_url":"https://api.github.com/users/simPod/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/simPod/subscriptions","organizations_url":"https://api.github.com/users/simPod/orgs","repos_url":"https://api.github.com/users/simPod/repos","events_url":"https://api.github.com/users/simPod/events{/privacy}","received_events_url":"https://api.github.com/users/simPod/received_events","type":"User","site_admin":false},"labels":[{"id":386401510,"node_id":"MDU6TGFiZWwzODY0MDE1MTA=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/question","name":"question","color":"bfdadc","default":true,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":18,"created_at":"2020-11-26T18:52:52Z","updated_at":"2021-04-15T01:10:57Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"I have killed ALTER query with DROP column as it took 2 days already. Now I can't alter the table as it says\r\n\r\n```\r\n2020.11.26 18:47:14.354707 [ 11577 ] {04669f8b-7a8b-4ce8-a6c8-e458c263e847} <Error> DynamicQueryHandler: Code: 517, e.displayText() = DB::Exception: Metadata on replica is not up to date with common metadata in Zookeeper. Cannot alter, Stack trace (when copying this message, always include the lines below):\r\n\r\n0. Poco::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int) @ 0x18e02790 in /usr/bin/clickhouse\r\n1. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int) @ 0xe72fdad in /usr/bin/clickhouse\r\n2. ? @ 0x1609f951 in /usr/bin/clickhouse\r\n3. DB::InterpreterAlterQuery::execute() @ 0x15aa1723 in /usr/bin/clickhouse\r\n4. ? @ 0x15e1ac62 in /usr/bin/clickhouse\r\n5. DB::executeQuery(DB::ReadBuffer&, DB::WriteBuffer&, bool, DB::Context&, std::__1::function<void (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)>) @ 0x15e1c9e9 in /usr/bin/clickhouse\r\n6. DB::HTTPHandler::processQuery(DB::Context&, Poco::Net::HTTPServerRequest&, HTMLForm&, Poco::Net::HTTPServerResponse&, DB::HTTPHandler::Output&) @ 0x16466fb9 in /usr/bin/clickhouse\r\n7. DB::HTTPHandler::handleRequest(Poco::Net::HTTPServerRequest&, Poco::Net::HTTPServerResponse&) @ 0x1646aa6b in /usr/bin/clickhouse\r\n8. Poco::Net::HTTPServerConnection::run() @ 0x18ce23e3 in /usr/bin/clickhouse\r\n9. Poco::Net::TCPServerConnection::start() @ 0x18d205fb in /usr/bin/clickhouse\r\n10. Poco::Net::TCPServerDispatcher::run() @ 0x18d20a8b in /usr/bin/clickhouse\r\n11. Poco::PooledThread::run() @ 0x18e9f566 in /usr/bin/clickhouse\r\n12. Poco::ThreadImpl::runnableEntry(void*) @ 0x18e9a960 in /usr/bin/clickhouse\r\n13. start_thread @ 0x74a4 in /lib/x86_64-linux-gnu/libpthread-2.24.so\r\n14. __clone @ 0xe8d0f in /lib/x86_64-linux-gnu/libc-2.24.so\r\n (version 20.9.2.20 (official build))\r\n```\r\n\r\nIsn't there really a way to fix metadata manually? I see what's in ZK. Though I have not found anything in replica files to fix and the error message does not describe what is the issue exactly.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17455/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17455/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17413","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17413/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17413/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17413/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/17413","id":751006212,"node_id":"MDU6SXNzdWU3NTEwMDYyMTI=","number":17413,"title":"Predicate pushdown weird behaviour","user":{"login":"pliakhavets","id":36503546,"node_id":"MDQ6VXNlcjM2NTAzNTQ2","avatar_url":"https://avatars.githubusercontent.com/u/36503546?v=4","gravatar_id":"","url":"https://api.github.com/users/pliakhavets","html_url":"https://github.com/pliakhavets","followers_url":"https://api.github.com/users/pliakhavets/followers","following_url":"https://api.github.com/users/pliakhavets/following{/other_user}","gists_url":"https://api.github.com/users/pliakhavets/gists{/gist_id}","starred_url":"https://api.github.com/users/pliakhavets/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pliakhavets/subscriptions","organizations_url":"https://api.github.com/users/pliakhavets/orgs","repos_url":"https://api.github.com/users/pliakhavets/repos","events_url":"https://api.github.com/users/pliakhavets/events{/privacy}","received_events_url":"https://api.github.com/users/pliakhavets/received_events","type":"User","site_admin":false},"labels":[{"id":756395244,"node_id":"MDU6TGFiZWw3NTYzOTUyNDQ=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/performance","name":"performance","color":"c2e0c6","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2020-11-25T17:37:02Z","updated_at":"2021-03-10T18:27:04Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"**Description**\r\nintro: updating CH from 20.4.3.16 to 20.10.3.30 and noticed an issue in performance (degrades in new because predicate fails to get to \"data layer\" correctly)\r\n_in lower reproduce code there are not enough data to see on timers, but number of rows processed by query highlights the issue_\r\n\r\n*we have structure like*\r\n- merge_final_table -> uniformity_view_1 + uniformity_view_2\r\n- - uniformity_view_1 -> distributed_table_1 -> shards_with_data_1\r\n- - uniformity_view_2 -> merge_lower_table -> distributed_table2 + distributed_table3\r\n- - - distributed_table2 -> shards_with_data_2\r\n- - - distributed_table3 -> shards_with_data_3\r\n\r\nSo on new version (in release notes there are changes regarding named CTE) I see that count of scanned rows for same query is dramatically differs\r\non `select count() from table where partition_column = 'partition'`\r\n_version 20.4.3.16 debug output:_\r\n`1 rows in set. Elapsed: 6.528 sec. Processed 1.06 billion rows, 19.68 GB (162.99 million rows/s., 3.01 GB/s.)`\r\nso partition elimination works fine\r\n\r\n_version 20.10.3.30 debug output:_\r\n`1 rows in set. Elapsed: 734.431 sec. Processed 592.66 billion rows, 17.12 TB (806.96 million rows/s., 23.31 GB/s.)`\r\nhere we scan all data which is allowed by uniformity_view_1 & uniformity_view_1 where clauses\r\n\r\n\r\n**How to reproduce**\r\n* Which ClickHouse server version: 20.10.3.30 (vs 20.4.3.16)\r\n* Which interface to use, if matters: used CLI\r\n* Non-default settings, if any: seems like none relevant (enable_optimize_predicate_expression=1 on default)\r\n* DDL + sample data fill (cluster lower in ddl - ch_test_shard - just 2 shards - checked data_nodes with both current 20.4.3.16 and target 20.10.3.30 versions - no impact which version on data-node)\r\n``` create database check_ppd_shard_data on cluster ch_test_shard;\r\ncreate table check_ppd_shard_data.stg_data_1 on cluster ch_test_shard\r\n(\r\n    part_col String, val_col_1 UInt64\r\n)\r\nEngine = MergeTree\r\npartition by (part_col)\r\norder by tuple()\r\n;\r\ncreate table check_ppd_shard_data.stg_data_2 on cluster ch_test_shard\r\n(\r\n    part_col String, val_col_1 UInt64\r\n)\r\nEngine = MergeTree\r\npartition by (part_col)\r\norder by tuple()\r\n;\r\ncreate table check_ppd_shard_data.stg_data_3 on cluster ch_test_shard\r\n(\r\n    part_col String, val_col_1 UInt64\r\n)\r\nEngine = MergeTree\r\npartition by (part_col)\r\norder by tuple()\r\n;\r\n\r\ncreate database check_ppd_distributed;\r\n\r\ncreate table check_ppd_distributed.data_1_dist (part_col String, val_col_1 UInt64)\r\nEngine = Distributed('ch_test_shard', 'check_ppd_shard_data', 'stg_data_1', rand())\r\n;\r\ncreate table check_ppd_distributed.data_2_dist (part_col String, val_col_1 UInt64) \r\nEngine = Distributed('ch_test_shard', 'check_ppd_shard_data', 'stg_data_2', rand())\r\n;\r\ncreate table check_ppd_distributed.data_3_dist (part_col String, val_col_1 UInt64)\r\nEngine = Distributed('ch_test_shard', 'check_ppd_shard_data', 'stg_data_3', rand())\r\n;\r\n\r\ninsert into check_ppd_distributed.data_1_dist select 'p1' as part_col, `number` from numbers(100000) ;\r\ninsert into check_ppd_distributed.data_2_dist select 'p1' as part_col, `number` * 2 from numbers(200000) ;\r\ninsert into check_ppd_distributed.data_3_dist select 'p1' as part_col, `number` * 3 from numbers(300000) ;\r\ninsert into check_ppd_distributed.data_3_dist select 'p2' as part_col, `number` % 20 from numbers(1000) ;\r\n\r\ncreate table check_ppd_distributed.data_2_and_3_merge_dts as check_ppd_distributed.data_3_dist\r\nEngine=Merge('check_ppd_distributed', '^data_[2|3]_dist$')\r\n;\r\n\r\n\r\ncreate database check_ppd_intermediate;\r\n\r\ncreate view check_ppd_intermediate.view_1 as select * from check_ppd_distributed.data_1_dist where val_col_1 > 10;\r\ncreate view check_ppd_intermediate.view_2 as select * from check_ppd_distributed.data_2_and_3_merge_dts where val_col_1 > 5;\r\n\r\ncreate database check_ppd_final;\r\ncreate table check_ppd_final.final_table_merge as check_ppd_intermediate.view_1\r\nEngine=Merge('check_ppd_intermediate', '^view_')\r\n;\r\n\r\n/* !!!! this query don't respect partition elimination !!!! */\r\nselect count(), sum(val_col_1), uniqExact(val_col_1) from check_ppd_final.final_table_merge where part_col = 'p2';\r\n/*1 rows in set. Elapsed: 0.100 sec. Processed 601.00 thousand rows, 11.42 MB (6.00 million rows/s., 114.05 MB/s.)*/\r\n\r\n/* but this 2 queries seem like ok */\r\nselect count(), sum(val_col_1), uniqExact(val_col_1) from check_ppd_intermediate.view_2 where part_col = 'p2';\r\n/*1 rows in set. Elapsed: 0.012 sec. Processed 1.00 thousand rows, 19.00 KB (80.60 thousand rows/s., 1.53 MB/s.)*/\r\nselect count(), sum(val_col_1), uniqExact(val_col_1) from check_ppd_intermediate.view_1 where part_col = 'p2';\r\n/* 1 rows in set. Elapsed: 0.011 sec. */\r\n ```\r\n\r\n* Queries to run that lead to slow performance:\r\n```\r\n/* !!!! this query don't respect partition elimination and scans all data(((( !!!! */\r\nselect count(), sum(val_col_1), uniqExact(val_col_1) from check_ppd_final.final_table_merge where part_col = 'p2';\r\n/*1 rows in set. Elapsed: 0.100 sec. Processed 601.00 thousand rows, 11.42 MB (6.00 million rows/s., 114.05 MB/s.)*/\r\n```\r\n\r\n**Expected performance**\r\nHas it been working faster in older ClickHouse releases? **YES**\r\nddl pack to reproduce form our current prod machine which runs on version 20.4.3.16 (machine knows about cluster ch_test_shard from upper description)\r\n```\r\ncreate database check_ppd_final;\r\ncreate database check_ppd_intermediate;\r\ncreate database check_ppd_distributed;\r\ncreate table check_ppd_distributed.data_1_dist (part_col String, val_col_1 UInt64)\r\nEngine = Distributed('ch_test_shard', 'check_ppd_shard_data', 'stg_data_1', rand())\r\n;\r\ncreate table check_ppd_distributed.data_2_dist (part_col String, val_col_1 UInt64) \r\nEngine = Distributed('ch_test_shard', 'check_ppd_shard_data', 'stg_data_2', rand())\r\n;\r\ncreate table check_ppd_distributed.data_3_dist (part_col String, val_col_1 UInt64)\r\nEngine = Distributed('ch_test_shard', 'check_ppd_shard_data', 'stg_data_3', rand())\r\n;\r\ncreate table check_ppd_distributed.data_2_and_3_merge_dts as check_ppd_distributed.data_3_dist\r\nEngine=Merge('check_ppd_distributed', '^data_[2|3]_dist$')\r\n;\r\n\r\ncreate view check_ppd_intermediate.view_1 as select * from check_ppd_distributed.data_1_dist where val_col_1 > 10;\r\ncreate view check_ppd_intermediate.view_2 as select * from check_ppd_distributed.data_2_and_3_merge_dts where val_col_1 > 5;\r\n\r\ncreate table check_ppd_final.final_table_merge as check_ppd_intermediate.view_1\r\nEngine=Merge('check_ppd_intermediate', '^view_')\r\n;\r\nselect count(), sum(val_col_1), uniqExact(val_col_1) from check_ppd_final.final_table_merge where part_col = 'p2';\r\n/* 1 rows in set. Elapsed: 0.021 sec. Processed 1.00 thousand rows, 19.00 KB (48.14 thousand rows/s., 914.61 KB/s.) */\r\n```\r\n\r\n**Additional context**\r\n1. when investigated this issue noticed that on data node this query looks like  `WITH 'table_cluster' AS _table SELECT ... FROM shard_table where  clause_from__intermediate_view_for_uniformity `  but *without clause from original select*. And usage of _table as default alias in CTE can interfere with logic of Merge engine somehow\r\n \r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17413/reactions","total_count":3,"+1":3,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17413/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17364","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17364/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17364/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17364/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/17364","id":749769286,"node_id":"MDU6SXNzdWU3NDk3NjkyODY=","number":17364,"title":"optimize_read_in_order slows down queries which takes only a few rows from set.","user":{"login":"UnamedRus","id":9449405,"node_id":"MDQ6VXNlcjk0NDk0MDU=","avatar_url":"https://avatars.githubusercontent.com/u/9449405?v=4","gravatar_id":"","url":"https://api.github.com/users/UnamedRus","html_url":"https://github.com/UnamedRus","followers_url":"https://api.github.com/users/UnamedRus/followers","following_url":"https://api.github.com/users/UnamedRus/following{/other_user}","gists_url":"https://api.github.com/users/UnamedRus/gists{/gist_id}","starred_url":"https://api.github.com/users/UnamedRus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/UnamedRus/subscriptions","organizations_url":"https://api.github.com/users/UnamedRus/orgs","repos_url":"https://api.github.com/users/UnamedRus/repos","events_url":"https://api.github.com/users/UnamedRus/events{/privacy}","received_events_url":"https://api.github.com/users/UnamedRus/received_events","type":"User","site_admin":false},"labels":[{"id":756395244,"node_id":"MDU6TGFiZWw3NTYzOTUyNDQ=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/performance","name":"performance","color":"c2e0c6","default":false,"description":null},{"id":1401777979,"node_id":"MDU6TGFiZWwxNDAxNzc3OTc5","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-optimizers","name":"comp-optimizers","color":"b5bcff","default":false,"description":"Query optimizations"},{"id":1507867504,"node_id":"MDU6TGFiZWwxNTA3ODY3NTA0","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/st-hold","name":"st-hold","color":"e5b890","default":false,"description":"We've paused the work on issue for some reason"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2020-11-24T14:47:26Z","updated_at":"2020-12-09T18:17:17Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"**Describe the situation**\r\nIf you have some query which returns a small subset of rows from a big table and sort it, optimize_read_in_order slows down query a lot.\r\n\r\n**How to reproduce**\r\nClickhouse server 20.10, 20.11.4.13\r\n```\r\nCREATE TABLE default.test_scan\r\n(\r\n    `_time` DateTime,\r\n    `key` UInt32,\r\n    `value` UInt32,\r\n    `dt` Date DEFAULT toDate(_time),\r\n    `epoch` UInt64\r\n)\r\nENGINE = MergeTree()\r\nPARTITION BY toDate(_time)\r\nORDER BY (_time, epoch)\r\nSETTINGS index_granularity = 8192\r\n\r\nINSERT INTO test_scan(_time, key, value, epoch) SELECT now() + intDiv(number,100000), 1 as key, rand() % 250000 as value, now64(6) + (number * 10) FROM numbers(1000000000);\r\n\r\nSELECT key, value FROM test_scan WHERE value = 3123 FORMAT Null\r\n0 rows in set. Elapsed: 0.291 sec. Processed 1.00 billion rows, 4.07 GB (3.44 billion rows/s., 13.99 GB/s.)\r\n\r\nSELECT key, value FROM test_scan WHERE value = 3123 ORDER BY _time, epoch FORMAT Null\r\n0 rows in set. Elapsed: 2.614 sec. Processed 1.00 billion rows, 4.26 GB (382.52 million rows/s., 1.63 GB/s.)\r\n\r\nSELECT key, value FROM test_scan WHERE value = 3123 AND not ignore(_time, epoch) FORMAT Null\r\n0 rows in set. Elapsed: 0.388 sec. Processed 1.00 billion rows, 4.26 GB (2.58 billion rows/s., 11.00 GB/s.)\r\n\r\nSELECT  key, value FROM (SELECT key, value, _time, epoch FROM test_scan WHERE value = 3123) ORDER BY _time, epoch FORMAT Null;\r\n0 rows in set. Elapsed: 0.380 sec. Processed 1.00 billion rows, 4.26 GB (2.63 billion rows/s., 11.23 GB/s.)\r\n\r\nset optimize_read_in_order=0;\r\nSELECT key, value FROM test_scan WHERE value = 3123 ORDER BY _time, epoch FORMAT Null\r\n0 rows in set. Elapsed: 0.359 sec. Processed 1.00 billion rows, 4.26 GB (2.79 billion rows/s., 11.88 GB/s.)\r\n\r\n```\r\n**Expected performance**\r\nQueries would have similar performance.\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17364/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17364/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17355","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17355/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17355/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17355/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/17355","id":749538279,"node_id":"MDU6SXNzdWU3NDk1MzgyNzk=","number":17355,"title":"HTTP interface: kill insert queries after disconnect","user":{"login":"ahmeturun","id":12734159,"node_id":"MDQ6VXNlcjEyNzM0MTU5","avatar_url":"https://avatars.githubusercontent.com/u/12734159?v=4","gravatar_id":"","url":"https://api.github.com/users/ahmeturun","html_url":"https://github.com/ahmeturun","followers_url":"https://api.github.com/users/ahmeturun/followers","following_url":"https://api.github.com/users/ahmeturun/following{/other_user}","gists_url":"https://api.github.com/users/ahmeturun/gists{/gist_id}","starred_url":"https://api.github.com/users/ahmeturun/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ahmeturun/subscriptions","organizations_url":"https://api.github.com/users/ahmeturun/orgs","repos_url":"https://api.github.com/users/ahmeturun/repos","events_url":"https://api.github.com/users/ahmeturun/events{/privacy}","received_events_url":"https://api.github.com/users/ahmeturun/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2020-11-24T09:34:31Z","updated_at":"2020-11-24T09:34:31Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"currently only select queries(readonly) are supported for cancellation on http interface. for insert into queries cancellation is not supported. in the case of canceling insert queries the only way to make the cancellation work is, as suggested [here](https://github.com/ClickHouse/ClickHouse/issues/1403#issuecomment-342909675), to use chproxy, which is a bit of an overkill solution for just being able to cancel hanging queries. it would be good to also have support for cancellation of insert queries.\r\n\r\n**Describe alternatives you've considered**\r\nusing chproxy does offers an alternative solution, but it is kind of an overkill.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17355/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17355/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17331","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17331/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17331/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17331/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/17331","id":749045428,"node_id":"MDU6SXNzdWU3NDkwNDU0Mjg=","number":17331,"title":"Add recommendations on version update.","user":{"login":"alexey-milovidov","id":18581488,"node_id":"MDQ6VXNlcjE4NTgxNDg4","avatar_url":"https://avatars.githubusercontent.com/u/18581488?v=4","gravatar_id":"","url":"https://api.github.com/users/alexey-milovidov","html_url":"https://github.com/alexey-milovidov","followers_url":"https://api.github.com/users/alexey-milovidov/followers","following_url":"https://api.github.com/users/alexey-milovidov/following{/other_user}","gists_url":"https://api.github.com/users/alexey-milovidov/gists{/gist_id}","starred_url":"https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexey-milovidov/subscriptions","organizations_url":"https://api.github.com/users/alexey-milovidov/orgs","repos_url":"https://api.github.com/users/alexey-milovidov/repos","events_url":"https://api.github.com/users/alexey-milovidov/events{/privacy}","received_events_url":"https://api.github.com/users/alexey-milovidov/received_events","type":"User","site_admin":false},"labels":[{"id":785082162,"node_id":"MDU6TGFiZWw3ODUwODIxNjI=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-documentation","name":"comp-documentation","color":"b5bcff","default":false,"description":"Used to run automatic builds of the documentation"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2020-11-23T18:53:08Z","updated_at":"2020-11-23T18:53:08Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"**Describe the issue**\r\nDescribe how to update the cluster without downtime, etc.\r\nI always answer these questions on our ClickHouse Meetups.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17331/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17331/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17329","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17329/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17329/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17329/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/17329","id":749018935,"node_id":"MDU6SXNzdWU3NDkwMTg5MzU=","number":17329,"title":"Ability to MATERIALIZE INDEX over all partitions","user":{"login":"mzealey","id":6083471,"node_id":"MDQ6VXNlcjYwODM0NzE=","avatar_url":"https://avatars.githubusercontent.com/u/6083471?v=4","gravatar_id":"","url":"https://api.github.com/users/mzealey","html_url":"https://github.com/mzealey","followers_url":"https://api.github.com/users/mzealey/followers","following_url":"https://api.github.com/users/mzealey/following{/other_user}","gists_url":"https://api.github.com/users/mzealey/gists{/gist_id}","starred_url":"https://api.github.com/users/mzealey/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mzealey/subscriptions","organizations_url":"https://api.github.com/users/mzealey/orgs","repos_url":"https://api.github.com/users/mzealey/repos","events_url":"https://api.github.com/users/mzealey/events{/privacy}","received_events_url":"https://api.github.com/users/mzealey/received_events","type":"User","site_admin":false},"labels":[{"id":1807683251,"node_id":"MDU6TGFiZWwxODA3NjgzMjUx","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/doc-alert","name":"doc-alert","color":"e51068","default":false,"description":"PR where any documentation work is needed or proceeded"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2020-11-23T18:10:40Z","updated_at":"2020-11-23T18:16:14Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"**Use case**\r\n\r\nAs I understand it from the docs, when I add a new secondary index it only gets created for new rows. So I need to run `ALTER TABLE ... MATERIALIZE INDEX .. IN PARTITION ...`. But a typical use case is probably to create it over the whole table. Is it possible to make `IN PARTITION` either optional or allow `ALL` or something so that I can avoid having to do a full `OPTIMIZE TABLE .. FINAL` which I assume is less efficient as it has to act on all columns?","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17329/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17329/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17320","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17320/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17320/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17320/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/17320","id":748975653,"node_id":"MDU6SXNzdWU3NDg5NzU2NTM=","number":17320,"title":"Add security advises","user":{"login":"alexey-milovidov","id":18581488,"node_id":"MDQ6VXNlcjE4NTgxNDg4","avatar_url":"https://avatars.githubusercontent.com/u/18581488?v=4","gravatar_id":"","url":"https://api.github.com/users/alexey-milovidov","html_url":"https://github.com/alexey-milovidov","followers_url":"https://api.github.com/users/alexey-milovidov/followers","following_url":"https://api.github.com/users/alexey-milovidov/following{/other_user}","gists_url":"https://api.github.com/users/alexey-milovidov/gists{/gist_id}","starred_url":"https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexey-milovidov/subscriptions","organizations_url":"https://api.github.com/users/alexey-milovidov/orgs","repos_url":"https://api.github.com/users/alexey-milovidov/repos","events_url":"https://api.github.com/users/alexey-milovidov/events{/privacy}","received_events_url":"https://api.github.com/users/alexey-milovidov/received_events","type":"User","site_admin":false},"labels":[{"id":785082162,"node_id":"MDU6TGFiZWw3ODUwODIxNjI=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-documentation","name":"comp-documentation","color":"b5bcff","default":false,"description":"Used to run automatic builds of the documentation"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2020-11-23T17:06:13Z","updated_at":"2020-11-23T18:53:19Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"Near [Usage Recommendations](https://clickhouse.tech/docs/en/operations/tips/).","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17320/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17320/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17319","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17319/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17319/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17319/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/17319","id":748940292,"node_id":"MDU6SXNzdWU3NDg5NDAyOTI=","number":17319,"title":"\"Unknown identifier\" when executing query with repeating aliases","user":{"login":"adrian17","id":4729533,"node_id":"MDQ6VXNlcjQ3Mjk1MzM=","avatar_url":"https://avatars.githubusercontent.com/u/4729533?v=4","gravatar_id":"","url":"https://api.github.com/users/adrian17","html_url":"https://github.com/adrian17","followers_url":"https://api.github.com/users/adrian17/followers","following_url":"https://api.github.com/users/adrian17/following{/other_user}","gists_url":"https://api.github.com/users/adrian17/gists{/gist_id}","starred_url":"https://api.github.com/users/adrian17/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/adrian17/subscriptions","organizations_url":"https://api.github.com/users/adrian17/orgs","repos_url":"https://api.github.com/users/adrian17/repos","events_url":"https://api.github.com/users/adrian17/events{/privacy}","received_events_url":"https://api.github.com/users/adrian17/received_events","type":"User","site_admin":false},"labels":[{"id":386401505,"node_id":"MDU6TGFiZWwzODY0MDE1MDU=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/bug","name":"bug","color":"ee0701","default":true,"description":"Confirmed user-visible misbehaviour in official release"},{"id":1357578153,"node_id":"MDU6TGFiZWwxMzU3NTc4MTUz","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-joins","name":"comp-joins","color":"b5bcff","default":false,"description":"JOINs"},{"id":2532986061,"node_id":"MDU6TGFiZWwyNTMyOTg2MDYx","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-query-syntax","name":"comp-query-syntax","color":"b5bcff","default":false,"description":"Relates to query parse / aliases resolution etc."}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2020-11-23T16:20:14Z","updated_at":"2021-06-17T06:35:07Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"**How to reproduce**\r\n\r\nTested on server versions from 20.4.6 to 20.11.3.3.\r\n\r\nGiven table:\r\n```sql\r\ncreate temporary table hits (date Date, data Float64) engine=Memory();\r\n```\r\nThe following query (note that `data` alias exists as column in a table, in a subquery and in the outer query): \r\n```sql\r\nSELECT\r\n    subquery1.period AS period,\r\n    if(1=1, 0, subquery1.data1) AS data,\r\n    if(1=1, 0, subquery2.data) AS other_data\r\nFROM \r\n(\r\n    SELECT date AS period, data AS data1\r\n    FROM hits\r\n) AS subquery1\r\nLEFT JOIN \r\n(\r\n    SELECT date AS period, data AS data\r\n    FROM hits\r\n) AS subquery2 ON (subquery1.period = subquery2.period)\r\n```\r\nFails with message:\r\n\r\n> Code: 47. DB::Exception: Received from localhost:9000. DB::Exception: Unknown identifier: data there are columns: period, data1, 1, equals(1, 1), 0, if(equals(1, 1), 0, data1): While processing period AS period, if(1 = 1, 0, data1) AS data, if(1 = 1, 0, data) AS other_data.\r\n\r\nInterestingly, if you just swap the order of lines in the outer query:\r\n\r\n```\r\n    if(1=1, 0, subquery2.data) AS other_data,\r\n    if(1=1, 0, subquery1.data1) AS data\r\n```\r\nThe query seems to successfully execute.\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17319/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17319/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17303","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17303/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17303/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17303/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/17303","id":748774903,"node_id":"MDU6SXNzdWU3NDg3NzQ5MDM=","number":17303,"title":"TTL multiple GROUP BY/DELETE WHERE can't be specified.","user":{"login":"UnamedRus","id":9449405,"node_id":"MDQ6VXNlcjk0NDk0MDU=","avatar_url":"https://avatars.githubusercontent.com/u/9449405?v=4","gravatar_id":"","url":"https://api.github.com/users/UnamedRus","html_url":"https://github.com/UnamedRus","followers_url":"https://api.github.com/users/UnamedRus/followers","following_url":"https://api.github.com/users/UnamedRus/following{/other_user}","gists_url":"https://api.github.com/users/UnamedRus/gists{/gist_id}","starred_url":"https://api.github.com/users/UnamedRus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/UnamedRus/subscriptions","organizations_url":"https://api.github.com/users/UnamedRus/orgs","repos_url":"https://api.github.com/users/UnamedRus/repos","events_url":"https://api.github.com/users/UnamedRus/events{/privacy}","received_events_url":"https://api.github.com/users/UnamedRus/received_events","type":"User","site_admin":false},"labels":[{"id":386401507,"node_id":"MDU6TGFiZWwzODY0MDE1MDc=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/enhancement","name":"enhancement","color":"84b6eb","default":true,"description":null},{"id":1401282669,"node_id":"MDU6TGFiZWwxNDAxMjgyNjY5","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-ttl","name":"comp-ttl","color":"b5bcff","default":false,"description":"TTL"}],"state":"open","locked":false,"assignee":{"login":"CurtizJ","id":20361854,"node_id":"MDQ6VXNlcjIwMzYxODU0","avatar_url":"https://avatars.githubusercontent.com/u/20361854?v=4","gravatar_id":"","url":"https://api.github.com/users/CurtizJ","html_url":"https://github.com/CurtizJ","followers_url":"https://api.github.com/users/CurtizJ/followers","following_url":"https://api.github.com/users/CurtizJ/following{/other_user}","gists_url":"https://api.github.com/users/CurtizJ/gists{/gist_id}","starred_url":"https://api.github.com/users/CurtizJ/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/CurtizJ/subscriptions","organizations_url":"https://api.github.com/users/CurtizJ/orgs","repos_url":"https://api.github.com/users/CurtizJ/repos","events_url":"https://api.github.com/users/CurtizJ/events{/privacy}","received_events_url":"https://api.github.com/users/CurtizJ/received_events","type":"User","site_admin":false},"assignees":[{"login":"CurtizJ","id":20361854,"node_id":"MDQ6VXNlcjIwMzYxODU0","avatar_url":"https://avatars.githubusercontent.com/u/20361854?v=4","gravatar_id":"","url":"https://api.github.com/users/CurtizJ","html_url":"https://github.com/CurtizJ","followers_url":"https://api.github.com/users/CurtizJ/followers","following_url":"https://api.github.com/users/CurtizJ/following{/other_user}","gists_url":"https://api.github.com/users/CurtizJ/gists{/gist_id}","starred_url":"https://api.github.com/users/CurtizJ/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/CurtizJ/subscriptions","organizations_url":"https://api.github.com/users/CurtizJ/orgs","repos_url":"https://api.github.com/users/CurtizJ/repos","events_url":"https://api.github.com/users/CurtizJ/events{/privacy}","received_events_url":"https://api.github.com/users/CurtizJ/received_events","type":"User","site_admin":false}],"milestone":null,"comments":3,"created_at":"2020-11-23T12:48:53Z","updated_at":"2022-01-06T17:04:01Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"**Describe the bug**\r\nTTL multiple GROUP BY/DELETE WHERE can't be specified.\r\n\r\n**How to reproduce**\r\n```\r\nCREATE TABLE test_ttl_delete\r\n(\r\n    `key_a` UInt32,\r\n    `key_b` UInt32,\r\n    `ts` DateTime,\r\n    `value` UInt32\r\n)\r\nENGINE = MergeTree()\r\nPARTITION BY tuple()\r\nORDER BY (key_a, key_b)\r\nTTL ts + toIntervalYear(1), ts + toIntervalMonth(6) WHERE key_a = 10, ts + toIntervalMonth(1) GROUP BY key_a SET value = sum(value)\r\n\r\nQuery id: 37fccbd8-bdb3-4126-ac0e-a26fba562583\r\n\r\n\r\nReceived exception from server (version 20.12.1):\r\nCode: 450. DB::Exception: Received from localhost:9000. DB::Exception: More than one DELETE TTL expression is not allowed.\r\n```\r\nhttps://github.com/ClickHouse/ClickHouse/blob/master/src/Storages/TTLDescription.cpp#L330\r\n\r\n**Expected behavior**\r\nIt should be possible to define multiple TTL GROUP BY/DELETE values.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17303/reactions","total_count":1,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":1},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17303/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17270","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17270/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17270/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17270/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/17270","id":748166446,"node_id":"MDU6SXNzdWU3NDgxNjY0NDY=","number":17270,"title":"Validating end user credentials per query","user":{"login":"jindal-git","id":69700660,"node_id":"MDQ6VXNlcjY5NzAwNjYw","avatar_url":"https://avatars.githubusercontent.com/u/69700660?v=4","gravatar_id":"","url":"https://api.github.com/users/jindal-git","html_url":"https://github.com/jindal-git","followers_url":"https://api.github.com/users/jindal-git/followers","following_url":"https://api.github.com/users/jindal-git/following{/other_user}","gists_url":"https://api.github.com/users/jindal-git/gists{/gist_id}","starred_url":"https://api.github.com/users/jindal-git/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jindal-git/subscriptions","organizations_url":"https://api.github.com/users/jindal-git/orgs","repos_url":"https://api.github.com/users/jindal-git/repos","events_url":"https://api.github.com/users/jindal-git/events{/privacy}","received_events_url":"https://api.github.com/users/jindal-git/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2020-11-22T04:24:08Z","updated_at":"2020-11-22T04:24:08Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"**Use case**\r\nWe have multiple end users making queries to CH through API server. API server is connected to CH using its own user. We would like to send end user credentials per query to CH, so CH can verify that the user is indeed allowed to access the database. We currently do this validation in the API server, but it would be more robust if CH validated it again.\r\n\r\n**Describe the solution you'd like**\r\nI don't have much experience with CH yet, but thought of one possible solution: \r\n1. send JWT using query settings\r\n2. CH will decode JWT and validate that the current database specified in the context is allowed.\r\n\r\nThis might be a very narrow use case, but I would to hear thoughts on usefulness of this feature or other ways to do this. \r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17270/reactions","total_count":3,"+1":3,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17270/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17214","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17214/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17214/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17214/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/17214","id":747107689,"node_id":"MDU6SXNzdWU3NDcxMDc2ODk=","number":17214,"title":"How does clickhouse complete the nested json data storage?","user":{"login":"trollhe","id":41068725,"node_id":"MDQ6VXNlcjQxMDY4NzI1","avatar_url":"https://avatars.githubusercontent.com/u/41068725?v=4","gravatar_id":"","url":"https://api.github.com/users/trollhe","html_url":"https://github.com/trollhe","followers_url":"https://api.github.com/users/trollhe/followers","following_url":"https://api.github.com/users/trollhe/following{/other_user}","gists_url":"https://api.github.com/users/trollhe/gists{/gist_id}","starred_url":"https://api.github.com/users/trollhe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/trollhe/subscriptions","organizations_url":"https://api.github.com/users/trollhe/orgs","repos_url":"https://api.github.com/users/trollhe/repos","events_url":"https://api.github.com/users/trollhe/events{/privacy}","received_events_url":"https://api.github.com/users/trollhe/received_events","type":"User","site_admin":false},"labels":[{"id":386401510,"node_id":"MDU6TGFiZWwzODY0MDE1MTA=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/question","name":"question","color":"bfdadc","default":true,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2020-11-20T03:25:23Z","updated_at":"2020-11-20T03:25:23Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"How does clickhouse complete the nested json data storage?\r\n\r\n\r\ndata demo\r\n```\r\n[{\r\n    \"studyUid\": \"1.2.840.473.8013.20181026.1091511.864.22434.92\",  \r\n    \"data\": [\r\n        {           \r\n            \"instanceUid\": \"1.3.46.670589.11.32898.5.0.16316.2018102610554807009\", \r\n            \"seriesUid\": \"1.3.46.670589.11.32898.5.0.16316.2018102610554554000\", \r\n            \"annotation\": [\r\n                {\r\n                    \"annotator\": 13             \r\n                    \"point\": [                 \r\n                        {                \r\n                            \"coord\": [252, 435],                \r\n                            \"tag\": {\r\n                                \"disc\": \"v2,\"                \r\n                                \"identification\":\"L1-L2\"     \r\n                            },\r\n                            \"zIndex\": 0,                \r\n                        },\r\n                        {\r\n                            \"coord\": [211,76],\r\n                            \"tag\": {\r\n                                    \"identification\": \"L1\",\r\n                                    \"vertebra\": \"v2\".    \r\n                            },\r\n                            \"zIndex\": 5\r\n                        }\r\n                    ],\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}]\r\n```\r\n\r\nCan such a data format be directly parsed into the data table?\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17214/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17214/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17202","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17202/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17202/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17202/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/17202","id":746510973,"node_id":"MDU6SXNzdWU3NDY1MTA5NzM=","number":17202,"title":"ClickHouse use getaddrinfo for reverse resolve and apply only one PTR response value for <host_regexp> compare","user":{"login":"Slach","id":105560,"node_id":"MDQ6VXNlcjEwNTU2MA==","avatar_url":"https://avatars.githubusercontent.com/u/105560?v=4","gravatar_id":"","url":"https://api.github.com/users/Slach","html_url":"https://github.com/Slach","followers_url":"https://api.github.com/users/Slach/followers","following_url":"https://api.github.com/users/Slach/following{/other_user}","gists_url":"https://api.github.com/users/Slach/gists{/gist_id}","starred_url":"https://api.github.com/users/Slach/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Slach/subscriptions","organizations_url":"https://api.github.com/users/Slach/orgs","repos_url":"https://api.github.com/users/Slach/repos","events_url":"https://api.github.com/users/Slach/events{/privacy}","received_events_url":"https://api.github.com/users/Slach/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":1401253328,"node_id":"MDU6TGFiZWwxNDAxMjUzMzI4","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-net","name":"comp-net","color":"b5bcff","default":false,"description":"Network related"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2020-11-19T11:50:30Z","updated_at":"2022-01-01T10:24:22Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"**Describe the bug**\r\nClickHouse use getaddrinfo for reverse resolve https://github.com/ClickHouse/ClickHouse/blob/master/src/Common/DNSResolver.cpp#L124\r\n\r\nDNS protocol doesn't restrict how much PTR records we shall set for one IP address\r\nhttps://en.wikipedia.org/wiki/Reverse_DNS_lookup#Multiple_pointer_records\r\n\r\nso, when we receive multiple PTR response value\r\nonly one PTR response value apply for <host_regexp> recognition\r\n\r\n![image](https://user-images.githubusercontent.com/105560/99423942-eb67b000-2922-11eb-912a-d354a6e5e703.png)\r\n\r\n**How to reproduce**\r\nI create a `docker-compose` reproducible environment\r\nhttps://gist.github.com/Slach/f9e40984168840d9c95da03988ab8283\r\njust run ./reproduce.sh \r\n\r\n* Which ClickHouse server version to use\r\nofficial docker `clickhouse-server:latest`\r\n\r\n**Expected behavior**\r\nAll PTR response shall match with `host_regexp` pattern\r\n\r\n**Error message and/or stacktrace**\r\n```\r\nCode: 516, e.displayText() = DB::Exception: test_dns: Authentication failed: password is incorrect or there is no user with such name (version 20.1'.3.3 (official build)\r\n```","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17202/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17202/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17182","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17182/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17182/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17182/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/17182","id":745951186,"node_id":"MDU6SXNzdWU3NDU5NTExODY=","number":17182,"title":"Text analysis: provide a way to get Unicode character classes.","user":{"login":"alexey-milovidov","id":18581488,"node_id":"MDQ6VXNlcjE4NTgxNDg4","avatar_url":"https://avatars.githubusercontent.com/u/18581488?v=4","gravatar_id":"","url":"https://api.github.com/users/alexey-milovidov","html_url":"https://github.com/alexey-milovidov","followers_url":"https://api.github.com/users/alexey-milovidov/followers","following_url":"https://api.github.com/users/alexey-milovidov/following{/other_user}","gists_url":"https://api.github.com/users/alexey-milovidov/gists{/gist_id}","starred_url":"https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexey-milovidov/subscriptions","organizations_url":"https://api.github.com/users/alexey-milovidov/orgs","repos_url":"https://api.github.com/users/alexey-milovidov/repos","events_url":"https://api.github.com/users/alexey-milovidov/events{/privacy}","received_events_url":"https://api.github.com/users/alexey-milovidov/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2020-11-18T19:41:55Z","updated_at":"2020-11-18T19:43:55Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"**Use case**\r\nCheck that the string contains Emoji.\r\n\r\n**Implementation**\r\nShould work directly on UTF-8 without conversions.\r\nMay be implemented with trie or an ordered list of prefixes with binary search.\r\nData from unicode.org. See also the \"widechar_width\" library.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17182/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17182/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17177","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17177/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17177/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17177/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/17177","id":745586416,"node_id":"MDU6SXNzdWU3NDU1ODY0MTY=","number":17177,"title":"MySQL add support for UTC_TIMESTAMP() AND TIMEDIFF (comparability with Power BI)","user":{"login":"marrocksd","id":58497107,"node_id":"MDQ6VXNlcjU4NDk3MTA3","avatar_url":"https://avatars.githubusercontent.com/u/58497107?v=4","gravatar_id":"","url":"https://api.github.com/users/marrocksd","html_url":"https://github.com/marrocksd","followers_url":"https://api.github.com/users/marrocksd/followers","following_url":"https://api.github.com/users/marrocksd/following{/other_user}","gists_url":"https://api.github.com/users/marrocksd/gists{/gist_id}","starred_url":"https://api.github.com/users/marrocksd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/marrocksd/subscriptions","organizations_url":"https://api.github.com/users/marrocksd/orgs","repos_url":"https://api.github.com/users/marrocksd/repos","events_url":"https://api.github.com/users/marrocksd/events{/privacy}","received_events_url":"https://api.github.com/users/marrocksd/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":1365689344,"node_id":"MDU6TGFiZWwxMzY1Njg5MzQ0","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-foreign-db","name":"comp-foreign-db","color":"b5bcff","default":false,"description":"Integrations with other databases"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2020-11-18T11:41:05Z","updated_at":"2022-01-18T22:40:42Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"**Background**\r\nI can already connect to Power BI using ODBC connector, but it would be so great if I can make a Direct Query connection to utilize the full power of OLAP DB. I tried to achieve that with MySQL interface which has PBI Direct Query support.\r\n\r\n**Describe the issue**\r\nUnfortunate, when I make the connection, Power BI automatically runs this function in background:\r\n\r\nTIMEDIFF(NOW(), UTC_TIMESTAMP())\r\n\r\nI guess it is to set the serverTimeZone.\r\n\r\n![image](https://user-images.githubusercontent.com/58497107/99525717-c891d600-29cc-11eb-9987-a9fdda6f012b.png)\r\n\r\n**How to reproduce**\r\nClickhouse version 20.11.3.3 (official build)\r\nMake connection from Power BI Desktop to MySQL Interface\r\n\r\n**Final words**\r\nI know that there are several functions to achieve the same result, so I hope this won't take much effort from you guys.\r\nIf this is done, I believe it would be a huge advantage for ClickHouse\r\nThanks in advance","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17177/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17177/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17174","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17174/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17174/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17174/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/17174","id":745499670,"node_id":"MDU6SXNzdWU3NDU0OTk2NzA=","number":17174,"title":"Join table engine memory allocation","user":{"login":"Fallenyasha","id":13795981,"node_id":"MDQ6VXNlcjEzNzk1OTgx","avatar_url":"https://avatars.githubusercontent.com/u/13795981?v=4","gravatar_id":"","url":"https://api.github.com/users/Fallenyasha","html_url":"https://github.com/Fallenyasha","followers_url":"https://api.github.com/users/Fallenyasha/followers","following_url":"https://api.github.com/users/Fallenyasha/following{/other_user}","gists_url":"https://api.github.com/users/Fallenyasha/gists{/gist_id}","starred_url":"https://api.github.com/users/Fallenyasha/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Fallenyasha/subscriptions","organizations_url":"https://api.github.com/users/Fallenyasha/orgs","repos_url":"https://api.github.com/users/Fallenyasha/repos","events_url":"https://api.github.com/users/Fallenyasha/events{/privacy}","received_events_url":"https://api.github.com/users/Fallenyasha/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2020-11-18T09:44:31Z","updated_at":"2020-11-18T14:06:05Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"**Describe the bug**\r\nИзначально было в виде вопроса #16732 \r\nПри вставке данных в таблицу с engine = Join, в случае если данные не влезают в текущий объем памяти, выделенный для таблицы, происходит реаллокация памяти, при этом память выедается из max_memory_usage, хотя по логике единственное ограничение, применяемое к таблице должно быть max_server_memory_usage. Также при аллоцировании памяти, судя по query_log, тратится куда-то время, предположительно происходит копирование старого блока памяти в новый, но тут не ясно, действительно ли требуется чтобы таблица лежала в едином блоке памяти с невозможностью пейджинации, т.е. разбитой на несколько кусков.\r\n\r\n**How to reproduce**\r\nВставка по 1М записей\r\nCREATE TABLE jobs_test.lookup (key UInt64, id UInt64) ENGINE = Join(ANY, LEFT, key);\r\nINSERT INTO jobs_test.lookup (key, id) SELECT rand64() + arrayJoin(range(1000000)), 0;\r\n...\r\nINSERT INTO jobs_test.lookup (key, id) SELECT rand64() + arrayJoin(range(1000000)), 0;\r\n(80 раз)\r\n\r\n**Expected behavior**\r\nНе отъедать память из max_memory_usage, потому что невозможно спрогнозировать, в какой момент при вставке данных произойдет аллоцирование памяти, и приходится для всех запросов ставить высокие лимиты, а т.к. это множество клиентских подключений, с иными запросами, то и остальные запросы начнут есть больше памяти и получается вынужденное ограничение на количество подключений из-за раздутого лимита. В идеале также, если возможно, не заниматься копированием памяти при аллоцировании, если это именно оно, т.е. не совсем ясно на что тратится время. В итоге возможны ситуации, когда вставили 1 строчку, а съели десятки гигабайт и прождали несколько минут.\r\n\r\n**Additional context**\r\nВ query_log получаем следующий результат (memory_usage, query_duration_ms)\r\n**145.00 MiB | 00:00:00.0494**\r\n41.00 MiB | 00:00:00.0137\r\n**315.00 MiB | 00:00:01.0285**\r\n41.00 MiB | 00:00:00.0179\r\n41.00 MiB | 00:00:00.0177\r\n41.00 MiB | 00:00:00.0202\r\n41.00 MiB | 00:00:00.0197\r\n41.00 MiB | 00:00:00.0260\r\n**411.00 MiB | 00:00:01.0975**\r\n41.00 MiB | 00:00:00.0316\r\n41.00 MiB | 00:00:00.0460\r\n41.00 MiB | 00:00:00.0287\r\n41.00 MiB | 00:00:00.0240\r\n41.00 MiB | 00:00:00.0241\r\n41.00 MiB | 00:00:00.0242\r\n41.00 MiB | 00:00:00.0260\r\n**795.00 MiB | 00:00:03.0417**\r\n41.00 MiB | 00:00:00.0281\r\n41.00 MiB | 00:00:04.0835\r\n41.00 MiB | 00:00:00.0354\r\n41.00 MiB | 00:00:00.0329\r\n41.00 MiB | 00:00:00.0354\r\n41.00 MiB | 00:00:00.0439\r\n41.00 MiB | 00:00:00.0344\r\n41.00 MiB | 00:00:00.0251\r\n41.00 MiB | 00:00:00.0249\r\n41.00 MiB | 00:00:00.0310\r\n41.00 MiB | 00:00:00.0247\r\n41.00 MiB | 00:00:00.0260\r\n41.00 MiB | 00:00:00.0251\r\n41.00 MiB | 00:00:00.0351\r\n41.00 MiB | 00:00:00.0321\r\n41.00 MiB | 00:00:00.0325\r\n**1.53 GiB | 00:00:06.0051**\r\n41.00 MiB | 00:00:00.0336\r\n41.00 MiB | 00:00:00.0255\r\n41.00 MiB | 00:00:00.0244\r\n41.00 MiB | 00:00:00.0355\r\n41.00 MiB | 00:00:00.0278\r\n41.00 MiB | 00:00:00.0330\r\n41.00 MiB | 00:00:00.0351\r\n41.00 MiB | 00:00:00.0322\r\n41.00 MiB | 00:00:00.0294\r\n41.00 MiB | 00:00:00.0279\r\n41.00 MiB | 00:00:00.0237\r\n41.00 MiB | 00:00:00.0306\r\n41.00 MiB | 00:00:00.0367\r\n41.00 MiB | 00:00:00.0296\r\n41.00 MiB | 00:00:00.0259\r\n41.00 MiB | 00:00:00.0269\r\n41.00 MiB | 00:00:00.0495\r\n41.00 MiB | 00:00:00.0640\r\n41.00 MiB | 00:00:01.0142\r\n41.00 MiB | 00:00:01.0222\r\n41.00 MiB | 00:00:00.0441\r\n41.00 MiB | 00:00:00.0646\r\n41.00 MiB | 00:00:00.0238\r\n41.00 MiB | 00:00:00.0259\r\n41.00 MiB | 00:00:00.0350\r\n41.00 MiB | 00:00:00.0285\r\n41.00 MiB | 00:00:00.0276\r\n41.00 MiB | 00:00:00.0376\r\n41.00 MiB | 00:00:00.0356\r\n41.00 MiB | 00:00:00.0369\r\n41.00 MiB | 00:00:00.0277\r\n41.00 MiB | 00:00:00.0342\r\n41.00 MiB | 00:00:00.0353\r\n**3.03 GiB | 00:00:10.0246**\r\n41.00 MiB | 00:00:00.0518\r\n41.00 MiB | 00:00:00.0334\r\n41.00 MiB | 00:00:00.0385\r\n41.00 MiB | 00:00:00.0272\r\n41.00 MiB | 00:00:00.0259\r\n41.00 MiB | 00:00:00.0285\r\n41.00 MiB | 00:00:00.0253\r\n41.00 MiB | 00:00:00.0322\r\n41.00 MiB | 00:00:00.0280\r\n41.00 MiB | 00:00:00.0319\r\n41.00 MiB | 00:00:00.0284\r\n41.00 MiB | 00:00:00.0553\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17174/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17174/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17150","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17150/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17150/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17150/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/17150","id":745007767,"node_id":"MDU6SXNzdWU3NDUwMDc3Njc=","number":17150,"title":"The \"Too many parts\" error can happen in normal cases.","user":{"login":"alexey-milovidov","id":18581488,"node_id":"MDQ6VXNlcjE4NTgxNDg4","avatar_url":"https://avatars.githubusercontent.com/u/18581488?v=4","gravatar_id":"","url":"https://api.github.com/users/alexey-milovidov","html_url":"https://github.com/alexey-milovidov","followers_url":"https://api.github.com/users/alexey-milovidov/followers","following_url":"https://api.github.com/users/alexey-milovidov/following{/other_user}","gists_url":"https://api.github.com/users/alexey-milovidov/gists{/gist_id}","starred_url":"https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexey-milovidov/subscriptions","organizations_url":"https://api.github.com/users/alexey-milovidov/orgs","repos_url":"https://api.github.com/users/alexey-milovidov/repos","events_url":"https://api.github.com/users/alexey-milovidov/events{/privacy}","received_events_url":"https://api.github.com/users/alexey-milovidov/received_events","type":"User","site_admin":false},"labels":[{"id":386401507,"node_id":"MDU6TGFiZWwzODY0MDE1MDc=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/enhancement","name":"enhancement","color":"84b6eb","default":true,"description":null},{"id":845247686,"node_id":"MDU6TGFiZWw4NDUyNDc2ODY=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/usability","name":"usability","color":"ebf28c","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2020-11-17T19:09:50Z","updated_at":"2020-11-17T21:34:42Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"If you set `max_insert_threads` to some high value (e.g. 40 on a server with 80 cores) and doing `INSERT SELECT`, the \"Too many parts\" error is very likely to happen.\r\n\r\nIt shouldn't.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17150/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17150/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17113","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17113/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17113/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17113/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/17113","id":744326158,"node_id":"MDU6SXNzdWU3NDQzMjYxNTg=","number":17113,"title":"clickhouse-client: allow to set query parameters interactively.","user":{"login":"alexey-milovidov","id":18581488,"node_id":"MDQ6VXNlcjE4NTgxNDg4","avatar_url":"https://avatars.githubusercontent.com/u/18581488?v=4","gravatar_id":"","url":"https://api.github.com/users/alexey-milovidov","html_url":"https://github.com/alexey-milovidov","followers_url":"https://api.github.com/users/alexey-milovidov/followers","following_url":"https://api.github.com/users/alexey-milovidov/following{/other_user}","gists_url":"https://api.github.com/users/alexey-milovidov/gists{/gist_id}","starred_url":"https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexey-milovidov/subscriptions","organizations_url":"https://api.github.com/users/alexey-milovidov/orgs","repos_url":"https://api.github.com/users/alexey-milovidov/repos","events_url":"https://api.github.com/users/alexey-milovidov/events{/privacy}","received_events_url":"https://api.github.com/users/alexey-milovidov/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":845247686,"node_id":"MDU6TGFiZWw4NDUyNDc2ODY=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/usability","name":"usability","color":"ebf28c","default":false,"description":""},{"id":1365579236,"node_id":"MDU6TGFiZWwxMzY1NTc5MjM2","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/minor","name":"minor","color":"FFF8F8","default":false,"description":"Priority: minor"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2020-11-17T01:15:05Z","updated_at":"2021-02-24T19:35:06Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"**Use case**\r\n```\r\n:) SET ...some syntax... param = 'xyz'\r\n:) SELECT * FROM table WHERE user_name = {param:String}\r\nand maybe\r\n:) SELECT * FROM table WHERE user_name = {param}\r\n```\r\n\r\nWe can store query parameters in the session. And make a query to manipulate the parameters.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17113/reactions","total_count":4,"+1":4,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/17113/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16984","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16984/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16984/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16984/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/16984","id":742465280,"node_id":"MDU6SXNzdWU3NDI0NjUyODA=","number":16984,"title":"DB::Exception: Cannot read all data. Bytes read: 10433. Bytes expected: 87071.: while receiving packet from XXX: While executing SourceFromInputStream","user":{"login":"K4liber","id":12674618,"node_id":"MDQ6VXNlcjEyNjc0NjE4","avatar_url":"https://avatars.githubusercontent.com/u/12674618?v=4","gravatar_id":"","url":"https://api.github.com/users/K4liber","html_url":"https://github.com/K4liber","followers_url":"https://api.github.com/users/K4liber/followers","following_url":"https://api.github.com/users/K4liber/following{/other_user}","gists_url":"https://api.github.com/users/K4liber/gists{/gist_id}","starred_url":"https://api.github.com/users/K4liber/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/K4liber/subscriptions","organizations_url":"https://api.github.com/users/K4liber/orgs","repos_url":"https://api.github.com/users/K4liber/repos","events_url":"https://api.github.com/users/K4liber/events{/privacy}","received_events_url":"https://api.github.com/users/K4liber/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2020-11-13T13:53:20Z","updated_at":"2020-11-18T14:40:59Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Hello folks,\r\nI got this error while executing query on Distributed table (the query is heavy): \r\n\r\n> DB::Exception: Cannot read all data. Bytes read: 10433. Bytes expected: 87071.: while receiving packet from <ch node host>: While executing SourceFromInputStream\r\n\r\nWhen i limit the query a little more (from 90 to 60 days) by prewhere on date (where my distributed tables are ENGINE = MergeTree() PARTITION BY toYYYYMM(date)) the error do not appear.\r\nI cannot really guess from the error message what the exact problem is. I only suspect the heaviness of the query to be the reason.\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16984/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16984/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16933","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16933/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16933/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16933/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/16933","id":741670658,"node_id":"MDU6SXNzdWU3NDE2NzA2NTg=","number":16933,"title":"Add option to release HTTP queries  and not wait for result. Instead return query id.  ","user":{"login":"shawel","id":625370,"node_id":"MDQ6VXNlcjYyNTM3MA==","avatar_url":"https://avatars.githubusercontent.com/u/625370?v=4","gravatar_id":"","url":"https://api.github.com/users/shawel","html_url":"https://github.com/shawel","followers_url":"https://api.github.com/users/shawel/followers","following_url":"https://api.github.com/users/shawel/following{/other_user}","gists_url":"https://api.github.com/users/shawel/gists{/gist_id}","starred_url":"https://api.github.com/users/shawel/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/shawel/subscriptions","organizations_url":"https://api.github.com/users/shawel/orgs","repos_url":"https://api.github.com/users/shawel/repos","events_url":"https://api.github.com/users/shawel/events{/privacy}","received_events_url":"https://api.github.com/users/shawel/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":1481327553,"node_id":"MDU6TGFiZWwxNDgxMzI3NTUz","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-http","name":"comp-http","color":"b5bcff","default":false,"description":"http protocol related"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2020-11-12T14:58:29Z","updated_at":"2020-11-12T18:37:24Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Currently HTTP request waits for result. On long running queries or batch queries using HTTP (especially queries such as insert) we prefer to check on status by query ID and release the HTTP connection. As a workaround we are using aggressive timeouts to close the connection from the client. \r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16933/reactions","total_count":1,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":1,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16933/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16917","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16917/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16917/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16917/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/16917","id":741384533,"node_id":"MDU6SXNzdWU3NDEzODQ1MzM=","number":16917,"title":"JDBC Postgres Error with Enumerated Types","user":{"login":"simplemagik","id":130343,"node_id":"MDQ6VXNlcjEzMDM0Mw==","avatar_url":"https://avatars.githubusercontent.com/u/130343?v=4","gravatar_id":"","url":"https://api.github.com/users/simplemagik","html_url":"https://github.com/simplemagik","followers_url":"https://api.github.com/users/simplemagik/followers","following_url":"https://api.github.com/users/simplemagik/following{/other_user}","gists_url":"https://api.github.com/users/simplemagik/gists{/gist_id}","starred_url":"https://api.github.com/users/simplemagik/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/simplemagik/subscriptions","organizations_url":"https://api.github.com/users/simplemagik/orgs","repos_url":"https://api.github.com/users/simplemagik/repos","events_url":"https://api.github.com/users/simplemagik/events{/privacy}","received_events_url":"https://api.github.com/users/simplemagik/received_events","type":"User","site_admin":false},"labels":[{"id":1365689344,"node_id":"MDU6TGFiZWwxMzY1Njg5MzQ0","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-foreign-db","name":"comp-foreign-db","color":"b5bcff","default":false,"description":"Integrations with other databases"},{"id":1575085465,"node_id":"MDU6TGFiZWwxNTc1MDg1NDY1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/unexpected%20behaviour","name":"unexpected behaviour","color":"e088ca","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2020-11-12T08:19:04Z","updated_at":"2020-12-29T23:35:16Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Trying to connect with postgres using jdbc driver\r\n\r\nAt Postgres:\r\n```\r\nCREATE TYPE status AS ENUM ('active', 'disabled');\r\nCREATE TABLE campaign (\r\n    id integer,\r\n    status status\r\n)\r\nINSERT INTO campaign VALUES(1, 'active'),(2, 'active');\r\n```\r\n\r\nAt Clickhouse:\r\n```\r\nCREATE TABLE jdbc_campaign\r\n(\r\n    id Int32,\r\n    status String\r\n)\r\nENGINE = JDBC('', 'db', 'campaign')\r\n\r\nCREATE TABLE jdbc_campaign_enum\r\n(\r\n    id Int32,\r\n    status Enum('active' = 0, 'disabled' = 1)\r\n)\r\nENGINE = JDBC('', 'db', 'campaign')\r\n```\r\n\r\nError on\r\n`SELECT * FROM jdbc_campaign`\r\n\r\nDB::Exception: Cannot read all data. Bytes read: 16. Bytes expected: 116.: While executing JDBC.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16917/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16917/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16882","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16882/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16882/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16882/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/16882","id":740816000,"node_id":"MDU6SXNzdWU3NDA4MTYwMDA=","number":16882,"title":"When exception is thrown in a query from .sql script, show line number.","user":{"login":"alexey-milovidov","id":18581488,"node_id":"MDQ6VXNlcjE4NTgxNDg4","avatar_url":"https://avatars.githubusercontent.com/u/18581488?v=4","gravatar_id":"","url":"https://api.github.com/users/alexey-milovidov","html_url":"https://github.com/alexey-milovidov","followers_url":"https://api.github.com/users/alexey-milovidov/followers","following_url":"https://api.github.com/users/alexey-milovidov/following{/other_user}","gists_url":"https://api.github.com/users/alexey-milovidov/gists{/gist_id}","starred_url":"https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexey-milovidov/subscriptions","organizations_url":"https://api.github.com/users/alexey-milovidov/orgs","repos_url":"https://api.github.com/users/alexey-milovidov/repos","events_url":"https://api.github.com/users/alexey-milovidov/events{/privacy}","received_events_url":"https://api.github.com/users/alexey-milovidov/received_events","type":"User","site_admin":false},"labels":[{"id":845247686,"node_id":"MDU6TGFiZWw4NDUyNDc2ODY=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/usability","name":"usability","color":"ebf28c","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2020-11-11T14:37:45Z","updated_at":"2020-11-11T14:37:58Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"This is needed for tests.\r\n\r\nSee https://clickhouse-test-reports.s3.yandex.net/15073/ed93ec673f8f18ed47ec0a2f60456a20acb4fef1/functional_stateless_tests_(release,_wide_parts_enabled)/test_run.txt.out.log","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16882/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16882/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16839","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16839/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16839/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16839/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/16839","id":740052828,"node_id":"MDU6SXNzdWU3NDAwNTI4Mjg=","number":16839,"title":"Different result based on where condition with AggregatingMergeTree","user":{"login":"matanper","id":9868530,"node_id":"MDQ6VXNlcjk4Njg1MzA=","avatar_url":"https://avatars.githubusercontent.com/u/9868530?v=4","gravatar_id":"","url":"https://api.github.com/users/matanper","html_url":"https://github.com/matanper","followers_url":"https://api.github.com/users/matanper/followers","following_url":"https://api.github.com/users/matanper/following{/other_user}","gists_url":"https://api.github.com/users/matanper/gists{/gist_id}","starred_url":"https://api.github.com/users/matanper/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/matanper/subscriptions","organizations_url":"https://api.github.com/users/matanper/orgs","repos_url":"https://api.github.com/users/matanper/repos","events_url":"https://api.github.com/users/matanper/events{/privacy}","received_events_url":"https://api.github.com/users/matanper/received_events","type":"User","site_admin":false},"labels":[{"id":1575085465,"node_id":"MDU6TGFiZWwxNTc1MDg1NDY1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/unexpected%20behaviour","name":"unexpected behaviour","color":"e088ca","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2020-11-10T16:22:38Z","updated_at":"2020-11-10T19:20:08Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"I have a table with AggergatingMergeTree, and based on the where condition I get a different result\r\n\r\n**How to reproduce**\r\nClickhouse version: 20.10.3.30\r\nTable creation:\r\n```\r\nCREATE TABLE test (\r\n\tcategory1 SimpleAggregateFunction(any, Nullable(String)),\r\n\tcategory2 SimpleAggregateFunction(any, Nullable(String)),\r\n\ty SimpleAggregateFunction(any, Nullable(Float32)),\r\n\tx SimpleAggregateFunction(any, Nullable(UInt8)),\r\n\t\"index\" SimpleAggregateFunction(any, Int32),\r\n\t\"date\" SimpleAggregateFunction(max, Int32)\r\n)\r\nENGINE = AggregatingMergeTree() PARTITION BY toYYYYMM(toDateTime(\"date\")) ORDER BY (\"index\")\r\nSETTINGS enable_vertical_merge_algorithm = 1, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1\r\n```\r\nInsert 2 rows of data with same index:\r\n```\r\ninsert into test VALUES ('a', 'b', 0.15, null, 1000, 1605024550) (null, null, null, 1, 1000, 0)\r\n```\r\nQuery for date with less-then-equal returns expected result:\r\n```\r\nselect * from test final\r\nwhere \"date\"<=1605024550\r\n```\r\n|category1|category2|y|x|index|date|\r\n|---------|----------|-|-|-----|----|\r\n|a|b|0.15|1|1000|1605024550|\r\n\r\nBut querying with equals:\r\n```\r\nselect * from test final\r\nwhere \"date\"=1605024550\r\n```\r\nreturns the result without the 'x' column:\r\n|category1|category2|y|x|index|date|\r\n|---------|----------|-|-|-----|----|\r\n|a|b|0.15|NULL|1000|1605024550|\r\n\r\nI'd appreciate any insights on how to fix this. thanks","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16839/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16839/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16827","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16827/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16827/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16827/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/16827","id":739659167,"node_id":"MDU6SXNzdWU3Mzk2NTkxNjc=","number":16827,"title":"can not cross join three tables(numbers()) ","user":{"login":"l1t1","id":23301704,"node_id":"MDQ6VXNlcjIzMzAxNzA0","avatar_url":"https://avatars.githubusercontent.com/u/23301704?v=4","gravatar_id":"","url":"https://api.github.com/users/l1t1","html_url":"https://github.com/l1t1","followers_url":"https://api.github.com/users/l1t1/followers","following_url":"https://api.github.com/users/l1t1/following{/other_user}","gists_url":"https://api.github.com/users/l1t1/gists{/gist_id}","starred_url":"https://api.github.com/users/l1t1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/l1t1/subscriptions","organizations_url":"https://api.github.com/users/l1t1/orgs","repos_url":"https://api.github.com/users/l1t1/repos","events_url":"https://api.github.com/users/l1t1/events{/privacy}","received_events_url":"https://api.github.com/users/l1t1/received_events","type":"User","site_admin":false},"labels":[{"id":845247686,"node_id":"MDU6TGFiZWw4NDUyNDc2ODY=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/usability","name":"usability","color":"ebf28c","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2020-11-10T07:22:33Z","updated_at":"2020-11-11T06:24:15Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"cross join two tables(numbers()) are ok\r\n```\r\nSELECT count(*)\r\nFROM numbers(10000) AS a\r\n, numbers(10000) AS b\r\n, numbers(10) AS c\r\n\r\n\r\nReceived exception from server (version 20.10.3):\r\nCode: 51. DB::Exception: Received from localhost:9000. DB::Exception: Empty list of columns in SELECT query.\r\n\r\n0 rows in set. Elapsed: 0.017 sec.\r\n\r\nCREATE TABLE n\r\nENGINE = MergeTree\r\nORDER BY n AS\r\nSELECT number AS n\r\nFROM numbers(10000)\r\n\r\nOk.\r\n\r\n0 rows in set. Elapsed: 0.077 sec. Processed 10.00 thousand rows, 80.00 KB (130.15 thousand rows/s., 1.04 MB/s.)\r\n\r\nSELECT count(*)\r\nFROM n AS a\r\n, n AS b\r\n, n AS c\r\n\r\n\r\nReceived exception from server (version 20.10.3):\r\nCode: 51. DB::Exception: Received from localhost:9000. DB::Exception: Empty list of columns in SELECT query.\r\n\r\n0 rows in set. Elapsed: 0.022 sec.\r\n\r\nSELECT count(*)\r\nFROM n AS a\r\nCROSS JOIN n AS b\r\n\r\n┌───count()─┐\r\n│ 100000000 │\r\n└───────────┘\r\n\r\n1 rows in set. Elapsed: 3.404 sec. Processed 20.00 thousand rows, 160.00 KB (5.88 thousand rows/s., 47.01 KB/s.)\r\n\r\nSELECT count(*)\r\nFROM n AS a\r\nCROSS JOIN n AS b\r\nCROSS JOIN numbers(10) AS c\r\n\r\n\r\nReceived exception from server (version 20.10.3):\r\nCode: 51. DB::Exception: Received from localhost:9000. DB::Exception: Empty list of columns in SELECT query.\r\n```\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16827/reactions","total_count":1,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":1},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16827/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16747","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16747/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16747/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16747/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/16747","id":737741521,"node_id":"MDU6SXNzdWU3Mzc3NDE1MjE=","number":16747,"title":"suggest set a default value for max memory used as a percent of system memoryt","user":{"login":"l1t1","id":23301704,"node_id":"MDQ6VXNlcjIzMzAxNzA0","avatar_url":"https://avatars.githubusercontent.com/u/23301704?v=4","gravatar_id":"","url":"https://api.github.com/users/l1t1","html_url":"https://github.com/l1t1","followers_url":"https://api.github.com/users/l1t1/followers","following_url":"https://api.github.com/users/l1t1/following{/other_user}","gists_url":"https://api.github.com/users/l1t1/gists{/gist_id}","starred_url":"https://api.github.com/users/l1t1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/l1t1/subscriptions","organizations_url":"https://api.github.com/users/l1t1/orgs","repos_url":"https://api.github.com/users/l1t1/repos","events_url":"https://api.github.com/users/l1t1/events{/privacy}","received_events_url":"https://api.github.com/users/l1t1/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2020-11-06T13:02:42Z","updated_at":"2020-11-11T14:23:31Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"for example, 40 percent like Oracle Database SGA","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16747/reactions","total_count":2,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16747/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16733","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16733/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16733/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16733/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/16733","id":737650810,"node_id":"MDU6SXNzdWU3Mzc2NTA4MTA=","number":16733,"title":"feature request: WITH FILL expression values compatible with column type Nullable","user":{"login":"cicihou","id":41445818,"node_id":"MDQ6VXNlcjQxNDQ1ODE4","avatar_url":"https://avatars.githubusercontent.com/u/41445818?v=4","gravatar_id":"","url":"https://api.github.com/users/cicihou","html_url":"https://github.com/cicihou","followers_url":"https://api.github.com/users/cicihou/followers","following_url":"https://api.github.com/users/cicihou/following{/other_user}","gists_url":"https://api.github.com/users/cicihou/gists{/gist_id}","starred_url":"https://api.github.com/users/cicihou/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cicihou/subscriptions","organizations_url":"https://api.github.com/users/cicihou/orgs","repos_url":"https://api.github.com/users/cicihou/repos","events_url":"https://api.github.com/users/cicihou/events{/privacy}","received_events_url":"https://api.github.com/users/cicihou/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2020-11-06T10:32:37Z","updated_at":"2020-11-06T10:32:37Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Appreciate for you all teams brilliant work, it's really fast and useful \r\n\r\n**Use case**\r\nA clear and concise description of what is the intended usage scenario is.\r\nmy sql\r\n`\r\n    SELECT comment_date\r\n    FROM \r\n    (\r\n    SELECT comment_time AS comment_date\r\n    FROM kimberly_nlp_wide)\r\n    GROUP BY comment_date \r\n    ORDER BY comment_date WITH FILL\r\n`\r\n\r\n**Describe the solution you'd like**\r\nA clear and concise description of what you want to happen.\r\n\r\nThe comment_time column type is Nullable(DateTime()). so it could not use \"WITH FILL\"\r\n\r\n**Describe alternatives you've considered**\r\nA clear and concise description of any alternative solutions or features you've considered.\r\ncould only change the column type or process it via Python\r\nHope CK could support it in ur next update, thank u :)\r\n\r\n**Additional context**\r\nAdd any other context or screenshots about the feature request here.\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16733/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16733/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16718","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16718/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16718/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16718/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/16718","id":737103553,"node_id":"MDU6SXNzdWU3MzcxMDM1NTM=","number":16718,"title":"Date and DateTime Table Function","user":{"login":"Slind14","id":3914677,"node_id":"MDQ6VXNlcjM5MTQ2Nzc=","avatar_url":"https://avatars.githubusercontent.com/u/3914677?v=4","gravatar_id":"","url":"https://api.github.com/users/Slind14","html_url":"https://github.com/Slind14","followers_url":"https://api.github.com/users/Slind14/followers","following_url":"https://api.github.com/users/Slind14/following{/other_user}","gists_url":"https://api.github.com/users/Slind14/gists{/gist_id}","starred_url":"https://api.github.com/users/Slind14/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Slind14/subscriptions","organizations_url":"https://api.github.com/users/Slind14/orgs","repos_url":"https://api.github.com/users/Slind14/repos","events_url":"https://api.github.com/users/Slind14/events{/privacy}","received_events_url":"https://api.github.com/users/Slind14/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2020-11-05T16:56:50Z","updated_at":"2020-11-05T19:39:11Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"It would be great to have a Date and DateTime table function, similar to the numbers table function which provides all the months, weeks, dates, hours, minutes.. in the provided range.\r\n\r\nThis allows the easy use of a join to get data on Date(Time) steps without any wholes - e.g. should there be no data for a specific date.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16718/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16718/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16716","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16716/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16716/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16716/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/16716","id":737083814,"node_id":"MDU6SXNzdWU3MzcwODM4MTQ=","number":16716,"title":"Provide better diagrostics for row-based formats with PeekableReadBuffer.","user":{"login":"alexey-milovidov","id":18581488,"node_id":"MDQ6VXNlcjE4NTgxNDg4","avatar_url":"https://avatars.githubusercontent.com/u/18581488?v=4","gravatar_id":"","url":"https://api.github.com/users/alexey-milovidov","html_url":"https://github.com/alexey-milovidov","followers_url":"https://api.github.com/users/alexey-milovidov/followers","following_url":"https://api.github.com/users/alexey-milovidov/following{/other_user}","gists_url":"https://api.github.com/users/alexey-milovidov/gists{/gist_id}","starred_url":"https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexey-milovidov/subscriptions","organizations_url":"https://api.github.com/users/alexey-milovidov/orgs","repos_url":"https://api.github.com/users/alexey-milovidov/repos","events_url":"https://api.github.com/users/alexey-milovidov/events{/privacy}","received_events_url":"https://api.github.com/users/alexey-milovidov/received_events","type":"User","site_admin":false},"labels":[{"id":386401507,"node_id":"MDU6TGFiZWwzODY0MDE1MDc=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/enhancement","name":"enhancement","color":"84b6eb","default":true,"description":null},{"id":845247686,"node_id":"MDU6TGFiZWw4NDUyNDc2ODY=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/usability","name":"usability","color":"ebf28c","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2020-11-05T16:32:18Z","updated_at":"2020-11-05T16:32:18Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"**Describe the issue**\r\nTo provide diagnostics on parse error we go back in the buffer and re-parse the last two records to look what happens. Sometimes the last two rows are not in the buffer, because buffer was filled with new data.\r\n\r\nWe can utilize `PeekableReadBuffer` or use double-buffering technique to always keep the last rows needed for diagnostics.\r\n\r\nSuggested by @tavplubix.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16716/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16716/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16708","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16708/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16708/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16708/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/16708","id":736902374,"node_id":"MDU6SXNzdWU3MzY5MDIzNzQ=","number":16708,"title":"The setting `optimize_move_functions_out_of_any` works incorrectly.","user":{"login":"alexey-milovidov","id":18581488,"node_id":"MDQ6VXNlcjE4NTgxNDg4","avatar_url":"https://avatars.githubusercontent.com/u/18581488?v=4","gravatar_id":"","url":"https://api.github.com/users/alexey-milovidov","html_url":"https://github.com/alexey-milovidov","followers_url":"https://api.github.com/users/alexey-milovidov/followers","following_url":"https://api.github.com/users/alexey-milovidov/following{/other_user}","gists_url":"https://api.github.com/users/alexey-milovidov/gists{/gist_id}","starred_url":"https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexey-milovidov/subscriptions","organizations_url":"https://api.github.com/users/alexey-milovidov/orgs","repos_url":"https://api.github.com/users/alexey-milovidov/repos","events_url":"https://api.github.com/users/alexey-milovidov/events{/privacy}","received_events_url":"https://api.github.com/users/alexey-milovidov/received_events","type":"User","site_admin":false},"labels":[{"id":386401505,"node_id":"MDU6TGFiZWwzODY0MDE1MDU=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/bug","name":"bug","color":"ee0701","default":true,"description":"Confirmed user-visible misbehaviour in official release"},{"id":1401777979,"node_id":"MDU6TGFiZWwxNDAxNzc3OTc5","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-optimizers","name":"comp-optimizers","color":"b5bcff","default":false,"description":"Query optimizations"}],"state":"open","locked":false,"assignee":{"login":"CurtizJ","id":20361854,"node_id":"MDQ6VXNlcjIwMzYxODU0","avatar_url":"https://avatars.githubusercontent.com/u/20361854?v=4","gravatar_id":"","url":"https://api.github.com/users/CurtizJ","html_url":"https://github.com/CurtizJ","followers_url":"https://api.github.com/users/CurtizJ/followers","following_url":"https://api.github.com/users/CurtizJ/following{/other_user}","gists_url":"https://api.github.com/users/CurtizJ/gists{/gist_id}","starred_url":"https://api.github.com/users/CurtizJ/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/CurtizJ/subscriptions","organizations_url":"https://api.github.com/users/CurtizJ/orgs","repos_url":"https://api.github.com/users/CurtizJ/repos","events_url":"https://api.github.com/users/CurtizJ/events{/privacy}","received_events_url":"https://api.github.com/users/CurtizJ/received_events","type":"User","site_admin":false},"assignees":[{"login":"CurtizJ","id":20361854,"node_id":"MDQ6VXNlcjIwMzYxODU0","avatar_url":"https://avatars.githubusercontent.com/u/20361854?v=4","gravatar_id":"","url":"https://api.github.com/users/CurtizJ","html_url":"https://github.com/CurtizJ","followers_url":"https://api.github.com/users/CurtizJ/followers","following_url":"https://api.github.com/users/CurtizJ/following{/other_user}","gists_url":"https://api.github.com/users/CurtizJ/gists{/gist_id}","starred_url":"https://api.github.com/users/CurtizJ/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/CurtizJ/subscriptions","organizations_url":"https://api.github.com/users/CurtizJ/orgs","repos_url":"https://api.github.com/users/CurtizJ/repos","events_url":"https://api.github.com/users/CurtizJ/events{/privacy}","received_events_url":"https://api.github.com/users/CurtizJ/received_events","type":"User","site_admin":false}],"milestone":null,"comments":3,"created_at":"2020-11-05T12:44:32Z","updated_at":"2021-12-08T05:19:29Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"`select if(number % 2 = 1, 1, 0) as id1, any(id1) as id2 from (select * from system.numbers limit 10) group by id1`\r\ndoes not work.\r\n\r\nSee https://github.com/ClickHouse/ClickHouse/pull/11529\r\n@CurtizJ ","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16708/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16708/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16707","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16707/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16707/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16707/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/16707","id":736901572,"node_id":"MDU6SXNzdWU3MzY5MDE1NzI=","number":16707,"title":"LowCardinality Dictionary as skip index","user":{"login":"UnamedRus","id":9449405,"node_id":"MDQ6VXNlcjk0NDk0MDU=","avatar_url":"https://avatars.githubusercontent.com/u/9449405?v=4","gravatar_id":"","url":"https://api.github.com/users/UnamedRus","html_url":"https://github.com/UnamedRus","followers_url":"https://api.github.com/users/UnamedRus/followers","following_url":"https://api.github.com/users/UnamedRus/following{/other_user}","gists_url":"https://api.github.com/users/UnamedRus/gists{/gist_id}","starred_url":"https://api.github.com/users/UnamedRus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/UnamedRus/subscriptions","organizations_url":"https://api.github.com/users/UnamedRus/orgs","repos_url":"https://api.github.com/users/UnamedRus/repos","events_url":"https://api.github.com/users/UnamedRus/events{/privacy}","received_events_url":"https://api.github.com/users/UnamedRus/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2020-11-05T12:43:18Z","updated_at":"2020-11-05T12:43:18Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"**Use case**\r\n```\r\nClickhouse 20.8 \r\nCREATE TABLE test_lc (partition UInt32, key UInt32, value LowCardinality(String)) ENGINE=MergeTree PARTITION BY partition ORDER BY key;\r\nINSERT INTO test_lc SELECT 0 as a, number, 'dasdsadsdsds' FROM numbers(100000000);\r\nINSERT INTO test_lc SELECT 1 as a, number, 'dasdfsagfgdgs' FROM numbers(100000000);\r\nINSERT INTO test_lc SELECT 2 as a, number, 'sadasdasdasdas' FROM numbers(100000000);\r\nINSERT INTO test_lc SELECT 2 as a, number, 'special value' FROM numbers(11);\r\nSELECT * FROM test_lc WHERE value = 'special value';\r\n2020.11.05 15:34:28.897084 [ 5013 ] {9448e6c4-916c-40bd-96d2-dad4c7273372} <Information> executeQuery: Read 300000011 rows, 286.28 MiB in 0.2246097 sec., 1335650290 rows/sec., 1.24 GiB/sec.\r\n2020.11.05 15:34:28.897180 [ 5013 ] {9448e6c4-916c-40bd-96d2-dad4c7273372} <Debug> MemoryTracker: Peak memory usage (for query): 0.00 B.\r\n\r\n11 rows in set. Elapsed: 0.226 sec. Processed 300.00 million rows, 300.19 MB (1.32 billion rows/s., 1.33 GB/s.)\r\n\r\n```\r\n**Describe the solution you'd like**\r\nUse lowCardinality dictionary to filter out parts which don't have value for which we are searching.\r\nIn case of multiple lowCardinality dictionaries for a single part, it can filter out some ranges from certain parts.\r\n\r\n**Describe alternatives you've considered**\r\nCreate secondary indices to handle that kind of queries.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16707/reactions","total_count":2,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16707/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16702","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16702/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16702/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16702/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/16702","id":736836239,"node_id":"MDU6SXNzdWU3MzY4MzYyMzk=","number":16702,"title":"The atomicity of alter partition?","user":{"login":"baibaichen","id":3688732,"node_id":"MDQ6VXNlcjM2ODg3MzI=","avatar_url":"https://avatars.githubusercontent.com/u/3688732?v=4","gravatar_id":"","url":"https://api.github.com/users/baibaichen","html_url":"https://github.com/baibaichen","followers_url":"https://api.github.com/users/baibaichen/followers","following_url":"https://api.github.com/users/baibaichen/following{/other_user}","gists_url":"https://api.github.com/users/baibaichen/gists{/gist_id}","starred_url":"https://api.github.com/users/baibaichen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baibaichen/subscriptions","organizations_url":"https://api.github.com/users/baibaichen/orgs","repos_url":"https://api.github.com/users/baibaichen/repos","events_url":"https://api.github.com/users/baibaichen/events{/privacy}","received_events_url":"https://api.github.com/users/baibaichen/received_events","type":"User","site_admin":false},"labels":[{"id":386401510,"node_id":"MDU6TGFiZWwzODY0MDE1MTA=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/question","name":"question","color":"bfdadc","default":true,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2020-11-05T11:05:12Z","updated_at":"2021-02-25T11:18:06Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"I find that ClickHouse only supports atomicity at the [block level](https://clickhouse.tech/docs/en/engines/table-engines/mergetree-family/replication/),\r\n\r\n>  Each block of data is written atomically. The INSERT query is divided into blocks up to max_insert_block_size = 1048576 rows. In other words, if the INSERT query has less than 1048576 rows, it is made atomically.\r\n\r\nBut this is not robust for offline BI analysis. \r\n\r\n1. It looks like [MOVE PARTITION TO TABLE](https://clickhouse.tech/docs/en/sql-reference/statements/alter/partition/#alter_move_to_table-partition) is atomicity, it isn't? See https://github.com/ClickHouse/ClickHouse/issues/4729, https://github.com/ClickHouse/ClickHouse/pull/6168.\r\n2. How about [REPLACE PARTITION](https://clickhouse.tech/docs/en/sql-reference/statements/alter/partition/#alter_replace-partition)? https://github.com/ClickHouse/ClickHouse/issues/6749  says it doesn't support atomicity.\r\n\r\nThose 2 alter operations are useful for appending and updating partition atomically.\r\n\r\nWould it be nice to clarify the guarantee of [**Manipulating Partition**](https://clickhouse.tech/docs/en/sql-reference/statements/alter/partition/) in the documentation?\r\n\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16702/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16702/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16701","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16701/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16701/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16701/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/16701","id":736787136,"node_id":"MDU6SXNzdWU3MzY3ODcxMzY=","number":16701,"title":"Bitmap index for Array","user":{"login":"fastio","id":10786134,"node_id":"MDQ6VXNlcjEwNzg2MTM0","avatar_url":"https://avatars.githubusercontent.com/u/10786134?v=4","gravatar_id":"","url":"https://api.github.com/users/fastio","html_url":"https://github.com/fastio","followers_url":"https://api.github.com/users/fastio/followers","following_url":"https://api.github.com/users/fastio/following{/other_user}","gists_url":"https://api.github.com/users/fastio/gists{/gist_id}","starred_url":"https://api.github.com/users/fastio/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fastio/subscriptions","organizations_url":"https://api.github.com/users/fastio/orgs","repos_url":"https://api.github.com/users/fastio/repos","events_url":"https://api.github.com/users/fastio/events{/privacy}","received_events_url":"https://api.github.com/users/fastio/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2020-11-05T09:59:08Z","updated_at":"2020-11-05T11:06:57Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"**Use case**\r\n\r\n\r\nBitamp index for Array to accelerate has(array, x) function.\r\n\r\n```\r\ncreate table dd (a String, b Array(String)) engine=MergeTree() order by a;\r\n\r\nselect a from dd where has(b, 'good') > 0;\r\n```\r\n\r\nThe table has some Array columns and the count of array elements per row is very long, for example, more than 1000.\r\nwe want to accelerate `has` function by the bitmap. For every array column in one part, we build a bitmap for every element.\r\nWhen executing the `has`  function, only read the bitmap of every part, do not read all the data of the array column.\r\n\r\nIn fact, this bitmap index is not used to filter marks.\r\n\r\nPlease give me some advice.\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16701/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16701/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16682","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16682/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16682/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16682/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/16682","id":736427092,"node_id":"MDU6SXNzdWU3MzY0MjcwOTI=","number":16682,"title":"Support manifest file for s3, url, hdfs, file table functions","user":{"login":"UnamedRus","id":9449405,"node_id":"MDQ6VXNlcjk0NDk0MDU=","avatar_url":"https://avatars.githubusercontent.com/u/9449405?v=4","gravatar_id":"","url":"https://api.github.com/users/UnamedRus","html_url":"https://github.com/UnamedRus","followers_url":"https://api.github.com/users/UnamedRus/followers","following_url":"https://api.github.com/users/UnamedRus/following{/other_user}","gists_url":"https://api.github.com/users/UnamedRus/gists{/gist_id}","starred_url":"https://api.github.com/users/UnamedRus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/UnamedRus/subscriptions","organizations_url":"https://api.github.com/users/UnamedRus/orgs","repos_url":"https://api.github.com/users/UnamedRus/repos","events_url":"https://api.github.com/users/UnamedRus/events{/privacy}","received_events_url":"https://api.github.com/users/UnamedRus/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2020-11-04T21:13:07Z","updated_at":"2021-07-13T15:28:49Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"**Use case**\r\nGive ability to pass file which would contain list of files to import via table functions.\r\nDescription from redshift:\r\n> You can use a manifest to ensure that your COPY command loads all of the required files, and only the required files, from Amazon S3. You can also use a manifest when you need to load multiple files from different buckets or files that don't share the same prefix. \r\n\r\nhttps://docs.aws.amazon.com/redshift/latest/dg/loading-data-files-using-manifest.html\r\n\r\n**Describe alternatives you've considered**\r\nAllow to pass in table functions resultset from queries?\r\n```SELECT * FROM url(view(SELECT url FROM files_to_import), 'CSV', 'key String') ;```\r\nOr even something like this\r\n```SELECT * FROM url(view(SELECT url, format, schema FROM files_to_import)) ;```\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16682/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16682/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16681","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16681/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16681/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16681/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/16681","id":736405813,"node_id":"MDU6SXNzdWU3MzY0MDU4MTM=","number":16681,"title":"Support of zip compression for file, hdfs, s3 table functions","user":{"login":"UnamedRus","id":9449405,"node_id":"MDQ6VXNlcjk0NDk0MDU=","avatar_url":"https://avatars.githubusercontent.com/u/9449405?v=4","gravatar_id":"","url":"https://api.github.com/users/UnamedRus","html_url":"https://github.com/UnamedRus","followers_url":"https://api.github.com/users/UnamedRus/followers","following_url":"https://api.github.com/users/UnamedRus/following{/other_user}","gists_url":"https://api.github.com/users/UnamedRus/gists{/gist_id}","starred_url":"https://api.github.com/users/UnamedRus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/UnamedRus/subscriptions","organizations_url":"https://api.github.com/users/UnamedRus/orgs","repos_url":"https://api.github.com/users/UnamedRus/repos","events_url":"https://api.github.com/users/UnamedRus/events{/privacy}","received_events_url":"https://api.github.com/users/UnamedRus/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2020-11-04T20:34:25Z","updated_at":"2020-11-04T20:34:25Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"**Use case**\r\nSome datasets are being provided as zip archives, and it would be much easier to be able import them without any preprocessing. \r\nBecause zip archive is a folder and can have any complex structure in them, clickhouse initially can have support only for some restricted cases, like single file in archive.\r\nExample:\r\nhttps://www.gdeltproject.org/\r\nhttp://data.gdeltproject.org/gdeltv2/masterfilelist.txt","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16681/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16681/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16667","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16667/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16667/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16667/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/16667","id":736108421,"node_id":"MDU6SXNzdWU3MzYxMDg0MjE=","number":16667,"title":"Common Subexpression Elimination doesn't seem to work for subqueries.","user":{"login":"adrian17","id":4729533,"node_id":"MDQ6VXNlcjQ3Mjk1MzM=","avatar_url":"https://avatars.githubusercontent.com/u/4729533?v=4","gravatar_id":"","url":"https://api.github.com/users/adrian17","html_url":"https://github.com/adrian17","followers_url":"https://api.github.com/users/adrian17/followers","following_url":"https://api.github.com/users/adrian17/following{/other_user}","gists_url":"https://api.github.com/users/adrian17/gists{/gist_id}","starred_url":"https://api.github.com/users/adrian17/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/adrian17/subscriptions","organizations_url":"https://api.github.com/users/adrian17/orgs","repos_url":"https://api.github.com/users/adrian17/repos","events_url":"https://api.github.com/users/adrian17/events{/privacy}","received_events_url":"https://api.github.com/users/adrian17/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":756395244,"node_id":"MDU6TGFiZWw3NTYzOTUyNDQ=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/performance","name":"performance","color":"c2e0c6","default":false,"description":null},{"id":1807683251,"node_id":"MDU6TGFiZWwxODA3NjgzMjUx","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/doc-alert","name":"doc-alert","color":"e51068","default":false,"description":"PR where any documentation work is needed or proceeded"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2020-11-04T13:19:04Z","updated_at":"2020-11-04T19:38:53Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Documentation states:\r\n\r\n> All expressions in a query that have the same AST (the same record or same result of syntactic parsing) are considered to have identical values. Such expressions are concatenated and executed once. **Identical subqueries are also eliminated this way**.\r\n\r\nAnd yet, on 20.10.3, the following query:\r\n```sql\r\nSELECT x\r\nFROM \r\n(\r\n    SELECT count(*) AS x\r\n    FROM numbers(1000000)\r\n    WHERE has(range(100), number)\r\n) AS main\r\nCROSS JOIN\r\n(\r\n    SELECT count(*) AS x\r\n    FROM numbers(1000000)\r\n    WHERE has(range(100), number)\r\n) AS snd\r\n\r\n1 rows in set. Elapsed: 1.046 sec. Processed 2.10 million rows, 16.77 MB (2.00 million rows/s., 16.03 MB/s.)\r\n```\r\nClearly takes twice longer and processes 2x more rows than this query:\r\n```sql\r\nSELECT x\r\nFROM \r\n(\r\n    SELECT count(*) AS x\r\n    FROM numbers(1000000)\r\n    WHERE has(range(100), number)\r\n) AS main\r\n\r\n1 rows in set. Elapsed: 0.523 sec. Processed 1.05 million rows, 8.38 MB (2.00 million rows/s., 16.03 MB/s.)\r\n```\r\n\r\nUsing a CTE does not help:\r\n```sql\r\nWITH sub AS \r\n    (\r\n        SELECT count(*) AS x\r\n        FROM numbers(1000000)\r\n        WHERE has(range(100), number)\r\n    )\r\nSELECT x\r\nFROM sub\r\nCROSS JOIN sub\r\n\r\n1 rows in set. Elapsed: 1.041 sec. Processed 2.10 million rows, 16.77 MB (2.01 million rows/s., 16.11 MB/s.)\r\n```\r\n\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16667/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16667/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16652","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16652/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16652/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16652/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/16652","id":735735967,"node_id":"MDU6SXNzdWU3MzU3MzU5Njc=","number":16652,"title":"broken INSERT from `input()` with misleading diagnostics","user":{"login":"akuzm","id":36882414,"node_id":"MDQ6VXNlcjM2ODgyNDE0","avatar_url":"https://avatars.githubusercontent.com/u/36882414?v=4","gravatar_id":"","url":"https://api.github.com/users/akuzm","html_url":"https://github.com/akuzm","followers_url":"https://api.github.com/users/akuzm/followers","following_url":"https://api.github.com/users/akuzm/following{/other_user}","gists_url":"https://api.github.com/users/akuzm/gists{/gist_id}","starred_url":"https://api.github.com/users/akuzm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/akuzm/subscriptions","organizations_url":"https://api.github.com/users/akuzm/orgs","repos_url":"https://api.github.com/users/akuzm/repos","events_url":"https://api.github.com/users/akuzm/events{/privacy}","received_events_url":"https://api.github.com/users/akuzm/received_events","type":"User","site_admin":false},"labels":[{"id":1575085465,"node_id":"MDU6TGFiZWwxNTc1MDg1NDY1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/unexpected%20behaviour","name":"unexpected behaviour","color":"e088ca","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2020-11-04T01:05:36Z","updated_at":"2020-11-04T15:09:46Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"body":"```\r\nclickhouse-client --query \"select 'aa', 'bb' format TSV\" | clickhouse-client --query \"                      \r\n       drop table if exists t;\r\n       create table t(a text) engine Log;\r\n       insert into t select b from input('a text, b text') format TSV\r\n    \"\r\n\r\nCode: 27, e.displayText() = DB::Exception: Cannot parse input: expected '\\t' at end of stream.: (at row 1)\r\nBuffer has gone, cannot extract information about what has been parsed., Stack trace (when copying this message, always include the lines below):\r\n\r\n0. /home/akuzm/ch4/ch/contrib/poco/Foundation/src/Exception.cpp:27: Poco::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int) @ 0x109032c0 in /home/akuzm/ch4/build-gcc9-rel/programs/clickhouse\r\n1. /home/akuzm/ch4/ch/src/Common/Exception.cpp:38: DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int) @ 0x786807d in /home/akuzm/ch4/build-gcc9-rel/programs/clickhouse\r\n2. /home/akuzm/ch4/ch/src/IO/ReadHelpers.cpp:99: DB::throwAtAssertionFailed(char const*, DB::ReadBuffer&) (.cold) @ 0x78aadc5 in /home/akuzm/ch4/build-gcc9-rel/programs/clickhouse\r\n3. /home/akuzm/ch4/ch/src/IO/ReadHelpers.h:184: DB::TabSeparatedRowInputFormat::readRow(std::__1::vector<COW<DB::IColumn>::mutable_ptr<DB::IColumn>, std::__1::allocator<COW<DB::IColumn>::mutable_ptr<DB::IColumn> > >&, DB::RowReadExtension&) @ 0xe1a2587 in /home/akuzm/ch4/build-gcc9-rel/programs/clickhouse\r\n4. /home/akuzm/ch4/ch/src/Processors/Formats/IRowInputFormat.cpp:64: DB::IRowInputFormat::generate() @ 0xe0805d1 in /home/akuzm/ch4/build-gcc9-rel/programs/clickhouse\r\n5. /home/akuzm/ch4/ch/contrib/libcxx/include/vector:1003: DB::ISource::work() @ 0xdff4f6b in /home/akuzm/ch4/build-gcc9-rel/programs/clickhouse\r\n6. /home/akuzm/ch4/ch/src/Processors/Formats/InputStreamFromInputFormat.h:49: DB::InputStreamFromInputFormat::readImpl() @ 0xdfb87bd in /home/akuzm/ch4/build-gcc9-rel/programs/clickhouse\r\n7. /home/akuzm/ch4/ch/contrib/libcxx/include/vector:1003: DB::IBlockInputStream::read() @ 0xd10785d in /home/akuzm/ch4/build-gcc9-rel/programs/clickhouse\r\n8. /home/akuzm/ch4/ch/contrib/libcxx/include/vector:1003: DB::ParallelParsingBlockInputStream::parserThreadFunction(std::__1::shared_ptr<DB::ThreadGroupStatus>, unsigned long) @ 0xdfbcc40 in /home/akuzm/ch4/build-gcc9-rel/programs/clickhouse\r\n9. /home/akuzm/ch4/ch/contrib/libcxx/include/memory:4206: std::__1::__function::__func<DB::ParallelParsingBlockInputStream::scheduleParserThreadForUnitWithNumber(unsigned long)::'lambda'(), std::__1::allocator<DB::ParallelParsingBlockInputStream::scheduleParserThreadForUnitWithNumber(unsigned long)::'lambda'()>, void ()>::operator()() @ 0xdfbd8c4 in /home/akuzm/ch4/build-gcc9-rel/programs/clickhouse\r\n10. /home/akuzm/ch4/ch/contrib/libcxx/include/functional:1853: ThreadPoolImpl<ThreadFromGlobalPool>::worker(std::__1::__list_iterator<ThreadFromGlobalPool, void*>) @ 0x7896437 in /home/akuzm/ch4/build-gcc9-rel/programs/clickhouse\r\n11. /home/akuzm/ch4/ch/src/Common/ThreadPool.h:177: ThreadFromGlobalPool::ThreadFromGlobalPool<void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda1'()>(void&&, void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda1'()&&...)::'lambda'()::operator()() @ 0x7896c3e in /home/akuzm/ch4/build-gcc9-rel/programs/clickhouse\r\n12. /home/akuzm/ch4/ch/contrib/libcxx/include/functional:1853: ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x7895907 in /home/akuzm/ch4/build-gcc9-rel/programs/clickhouse\r\n13. /home/akuzm/ch4/ch/contrib/libcxx/include/memory:2615: void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda1'()> >(void*) @ 0x7893ea3 in /home/akuzm/ch4/build-gcc9-rel/programs/clickhouse\r\n14. start_thread @ 0x9609 in /lib/x86_64-linux-gnu/libpthread-2.31.so\r\n15. /build/glibc-ZN95T4/glibc-2.31/misc/../sysdeps/unix/sysv/linux/x86_64/clone.S:97: __GI___clone @ 0x122293 in /usr/lib/debug/lib/x86_64-linux-gnu/libc-2.31.so\r\n (version 20.11.1.1)\r\nError on processing query: insert into t select b from input('a text, b text') format TSV\r\n```\r\n\r\nWhat??? \r\n\r\nThis one works as expected:\r\n\r\n```\r\nclickhouse-client --query \"select 'aa', 'bb' format TSV\" | clickhouse-client --query \"                      \r\n       drop table if exists t;\r\n       create table t(a text) engine Log;\r\n       insert into t select b from input('a text, b text') format TSV\"\r\n```\r\n\r\nApparenty the reason is that the empty line after `format TSV` is treated as the input, despite me specifying explicitly that I want to use the standard input.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16652/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16652/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16565","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16565/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16565/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16565/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/16565","id":733690113,"node_id":"MDU6SXNzdWU3MzM2OTAxMTM=","number":16565,"title":"Support for Hybrid Partitioning using TTL (evolution of multi-volume storage) ","user":{"login":"siradjev","id":10959667,"node_id":"MDQ6VXNlcjEwOTU5NjY3","avatar_url":"https://avatars.githubusercontent.com/u/10959667?v=4","gravatar_id":"","url":"https://api.github.com/users/siradjev","html_url":"https://github.com/siradjev","followers_url":"https://api.github.com/users/siradjev/followers","following_url":"https://api.github.com/users/siradjev/following{/other_user}","gists_url":"https://api.github.com/users/siradjev/gists{/gist_id}","starred_url":"https://api.github.com/users/siradjev/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/siradjev/subscriptions","organizations_url":"https://api.github.com/users/siradjev/orgs","repos_url":"https://api.github.com/users/siradjev/repos","events_url":"https://api.github.com/users/siradjev/events{/privacy}","received_events_url":"https://api.github.com/users/siradjev/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":1365579236,"node_id":"MDU6TGFiZWwxMzY1NTc5MjM2","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/minor","name":"minor","color":"FFF8F8","default":false,"description":"Priority: minor"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2020-10-31T10:38:25Z","updated_at":"2021-12-05T20:28:14Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"**Use case**\r\nClickhouse is used as a main datastore keeping the data for a very long time. Given that \"recent\" data is frequently queried, it's frequently may be kept as daily partitioned (sometimes even hourly). \r\nWhen keeping data for a very long time, historical data is queried much more rarely, and as a result, it simply results in having huge number of files (especially on ultra-wide tables) all of which are being checked on startup. \r\n\r\n**Describe the solution you'd like**\r\nHybrid partitioning support using TTL or other mechanism would allow to combine multiple partitions into one using different partition key (e.g. monthly). \r\nAnother beneficial thing would be to allow compact parts support after certain TTL. \r\nAdditionally, it would help to have DDL commands to allow combining partitions into one, and turning partitions into compact part via explicit command. \r\n\r\n**Describe alternatives you've considered**\r\nCurrently the only alternative is different tables covered by merge engine, or keeping different tables on different nods covered by distributed engine, or some combination of those. \r\n\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16565/reactions","total_count":7,"+1":6,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":1,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16565/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16533","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16533/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16533/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16533/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/16533","id":732682763,"node_id":"MDU6SXNzdWU3MzI2ODI3NjM=","number":16533,"title":"uniqExact slower for strings than length(groupUniqArray())","user":{"login":"UnamedRus","id":9449405,"node_id":"MDQ6VXNlcjk0NDk0MDU=","avatar_url":"https://avatars.githubusercontent.com/u/9449405?v=4","gravatar_id":"","url":"https://api.github.com/users/UnamedRus","html_url":"https://github.com/UnamedRus","followers_url":"https://api.github.com/users/UnamedRus/followers","following_url":"https://api.github.com/users/UnamedRus/following{/other_user}","gists_url":"https://api.github.com/users/UnamedRus/gists{/gist_id}","starred_url":"https://api.github.com/users/UnamedRus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/UnamedRus/subscriptions","organizations_url":"https://api.github.com/users/UnamedRus/orgs","repos_url":"https://api.github.com/users/UnamedRus/repos","events_url":"https://api.github.com/users/UnamedRus/events{/privacy}","received_events_url":"https://api.github.com/users/UnamedRus/received_events","type":"User","site_admin":false},"labels":[{"id":756395244,"node_id":"MDU6TGFiZWw3NTYzOTUyNDQ=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/performance","name":"performance","color":"c2e0c6","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2020-10-29T21:40:38Z","updated_at":"2020-10-31T09:14:14Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"\r\n**How to reproduce**\r\n```\r\nclickhouse-server 20.8.3.18\r\n\r\nset max_threads=1;\r\n\r\nSELECT uniqExact(key)\r\nFROM\r\n(\r\n    SELECT toString(number % 10000) AS key\r\n    FROM numbers(100000000)\r\n)\r\n\r\n┌─uniqExact(key)─┐\r\n│          10000 │\r\n└────────────────┘\r\n\r\n1 rows in set. Elapsed: 4.759 sec. Processed 100.03 million rows, 800.21 MB (21.02 million rows/s., 168.14 MB/s.)\r\n\r\nSELECT length(groupUniqArray(key))\r\nFROM\r\n(\r\n    SELECT toString(number % 10000) AS key\r\n    FROM numbers(100000000)\r\n)\r\n\r\n┌─length(groupUniqArray(key))─┐\r\n│                       10000 │\r\n└─────────────────────────────┘\r\n\r\n1 rows in set. Elapsed: 3.079 sec. Processed 100.03 million rows, 800.21 MB (32.49 million rows/s., 259.91 MB/s.)\r\n\r\nSELECT uniqExact(key)\r\nFROM\r\n(\r\n    SELECT toString(number % 100) AS key\r\n    FROM numbers(100000000)\r\n)\r\n\r\n┌─uniqExact(key)─┐\r\n│            100 │\r\n└────────────────┘\r\n\r\n1 rows in set. Elapsed: 3.475 sec. Processed 100.03 million rows, 800.21 MB (28.78 million rows/s., 230.25 MB/s.)\r\n\r\nSELECT length(groupUniqArray(key))\r\nFROM\r\n(\r\n    SELECT toString(number % 100) AS key\r\n    FROM numbers(100000000)\r\n)\r\n\r\n┌─length(groupUniqArray(key))─┐\r\n│                         100 │\r\n└─────────────────────────────┘\r\n\r\n1 rows in set. Elapsed: 2.706 sec. Processed 100.03 million rows, 800.21 MB (36.97 million rows/s., 295.72 MB/s.)\r\n\r\n\r\nClickhouse server 20.10.3\r\n\r\nSELECT length(groupUniqArray(key))\r\nFROM\r\n(\r\n    SELECT toString(number % 10000) AS key\r\n    FROM numbers(100000000)\r\n)\r\n\r\n┌─length(groupUniqArray(key))─┐\r\n│                       10000 │\r\n└─────────────────────────────┘\r\n\r\n1 rows in set. Elapsed: 2.388 sec. Processed 100.03 million rows, 800.21 MB (41.89 million rows/s., 335.08 MB/s.)\r\n\r\nSELECT uniqExact(key)\r\nFROM\r\n(\r\n    SELECT toString(number % 10000) AS key\r\n    FROM numbers(100000000)\r\n)\r\n\r\n┌─uniqExact(key)─┐\r\n│          10000 │\r\n└────────────────┘\r\n\r\n1 rows in set. Elapsed: 4.345 sec. Processed 100.03 million rows, 800.21 MB (23.02 million rows/s., 184.17 MB/s.)\r\n\r\n```\r\n**Expected performance**\r\nuniqExact has at least the same performance as groupUniqArray.\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16533/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16533/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16510","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16510/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16510/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16510/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/16510","id":732129898,"node_id":"MDU6SXNzdWU3MzIxMjk4OTg=","number":16510,"title":"maxMap is removing entries with empty string or zero value","user":{"login":"mrodonnpaw","id":28529818,"node_id":"MDQ6VXNlcjI4NTI5ODE4","avatar_url":"https://avatars.githubusercontent.com/u/28529818?v=4","gravatar_id":"","url":"https://api.github.com/users/mrodonnpaw","html_url":"https://github.com/mrodonnpaw","followers_url":"https://api.github.com/users/mrodonnpaw/followers","following_url":"https://api.github.com/users/mrodonnpaw/following{/other_user}","gists_url":"https://api.github.com/users/mrodonnpaw/gists{/gist_id}","starred_url":"https://api.github.com/users/mrodonnpaw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mrodonnpaw/subscriptions","organizations_url":"https://api.github.com/users/mrodonnpaw/orgs","repos_url":"https://api.github.com/users/mrodonnpaw/repos","events_url":"https://api.github.com/users/mrodonnpaw/events{/privacy}","received_events_url":"https://api.github.com/users/mrodonnpaw/received_events","type":"User","site_admin":false},"labels":[{"id":386401506,"node_id":"MDU6TGFiZWwzODY0MDE1MDY=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/duplicate","name":"duplicate","color":"cccccc","default":true,"description":null},{"id":1575085465,"node_id":"MDU6TGFiZWwxNTc1MDg1NDY1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/unexpected%20behaviour","name":"unexpected behaviour","color":"e088ca","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2020-10-29T09:01:10Z","updated_at":"2020-10-29T21:45:25Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"**Describe the unexpected behaviour**\r\nmaxMap is removing entries with empty string or zero value.\r\n\r\n**How to reproduce**\r\n\r\n*String array*\r\n```\r\nSELECT maxMap(a, b) from values ('a Array(String), b Array(String)',(['A'],['']),(['B'],['']));\r\n\r\n┌─maxMap(a, b) ─┐\r\n│ ([],[]) │\r\n└───────────┘\r\n```\r\n\r\n*Numeric array*\r\n```\r\nSELECT maxMap(a, b) from values ('a Array(String), b Array(UInt64)',(['A'],[0]),(['B'],[0]));\r\n\r\n┌─maxMap(a, b) ─┐\r\n│ ([],[]) │\r\n└───────────┘\r\n```\r\n\r\n*Numeric array with negative value*\r\n\r\n```\r\nSELECT maxMap(a, b) FROM values('a Array(String), b Array(Int64)', (['A'], [0]), (['B'], [-1]))\r\n\r\n┌─maxMap(a, b)─┐\r\n│ (['B'],[-1]) │\r\n└──────────────┘\r\n```\r\n\r\nIt happens with all versions published.\r\n\r\n**Expected behavior**\r\nWe expect this to maintain those keys with its value (empty string or zero).","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16510/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16510/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16487","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16487/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16487/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16487/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/16487","id":731884106,"node_id":"MDU6SXNzdWU3MzE4ODQxMDY=","number":16487,"title":"TimeSlots function results depend on timezone","user":{"login":"stumitchell","id":738393,"node_id":"MDQ6VXNlcjczODM5Mw==","avatar_url":"https://avatars.githubusercontent.com/u/738393?v=4","gravatar_id":"","url":"https://api.github.com/users/stumitchell","html_url":"https://github.com/stumitchell","followers_url":"https://api.github.com/users/stumitchell/followers","following_url":"https://api.github.com/users/stumitchell/following{/other_user}","gists_url":"https://api.github.com/users/stumitchell/gists{/gist_id}","starred_url":"https://api.github.com/users/stumitchell/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stumitchell/subscriptions","organizations_url":"https://api.github.com/users/stumitchell/orgs","repos_url":"https://api.github.com/users/stumitchell/repos","events_url":"https://api.github.com/users/stumitchell/events{/privacy}","received_events_url":"https://api.github.com/users/stumitchell/received_events","type":"User","site_admin":false},"labels":[{"id":386401505,"node_id":"MDU6TGFiZWwzODY0MDE1MDU=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/bug","name":"bug","color":"ee0701","default":true,"description":"Confirmed user-visible misbehaviour in official release"},{"id":1365579236,"node_id":"MDU6TGFiZWwxMzY1NTc5MjM2","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/minor","name":"minor","color":"FFF8F8","default":false,"description":"Priority: minor"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2020-10-28T23:50:20Z","updated_at":"2020-12-31T06:35:35Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"\r\n**Describe the bug**\r\nWhen using the timeSlots function there is a difference between local timezone dates and utc \r\nThis behaviour is also seen in https://github.com/ClickHouse/ClickHouse/issues/13271\r\n\r\n**How to reproduce**\r\n* Which ClickHouse server version to use\r\n```\r\nClickHouse client version 20.10.2.20 (official build).\r\nConnecting to localhost:9000 as user default.\r\nConnected to ClickHouse server version 20.10.2 revision 54441.\r\n```\r\n* Queries to run that lead to unexpected result\r\nCompare the results of \r\n```\r\nSELECT timeSlots(toDateTime('2019-01-01 00:00:00'), toUInt32(((10 * 24) * 60) * 60), toUInt32((24 * 60) * 60))\r\n\r\n┌─timeSlots(toDateTime('2019-01-01 00:00:00'), toUInt32(multiply(multiply(multiply(10, 24), 60), 60)), toUInt32(multiply(multiply(24, 60), 60)))──────────────────────────────────────────────────────────────────────────────────────────────────────┐\r\n│ ['2018-12-31 01:00:00','2019-01-01 01:00:00','2019-01-02 01:00:00','2019-01-03 01:00:00','2019-01-04 01:00:00','2019-01-05 01:00:00','2019-01-06 01:00:00','2019-01-07 01:00:00','2019-01-08 01:00:00','2019-01-09 01:00:00','2019-01-10 01:00:00'] │\r\n└─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┘\r\n```\r\n\r\nto\r\n```\r\nSELECT timeSlots(toDateTime('2019-01-01 00:00:00', 'UTC'), toUInt32(((10 * 24) * 60) * 60), toUInt32((24 * 60) * 60))\r\n\r\n┌─timeSlots(toDateTime('2019-01-01 00:00:00', 'UTC'), toUInt32(multiply(multiply(multiply(10, 24), 60), 60)), toUInt32(multiply(multiply(24, 60), 60)))───────────────────────────────────────────────────────────────────────────────────────────────┐\r\n│ ['2019-01-01 00:00:00','2019-01-02 00:00:00','2019-01-03 00:00:00','2019-01-04 00:00:00','2019-01-05 00:00:00','2019-01-06 00:00:00','2019-01-07 00:00:00','2019-01-08 00:00:00','2019-01-09 00:00:00','2019-01-10 00:00:00','2019-01-11 00:00:00'] │\r\n└─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┘\r\n```\r\n\r\n\r\n**Expected behavior**\r\nThe two results should be the same and not depend on local timezone \r\n\r\n**Additional context**\r\nThese two statements return seemingly Identical results\r\n```\r\nSELECT toDateTime('2019-01-01 00:00:00')\r\n\r\n┌─toDateTime('2019-01-01 00:00:00')─┐\r\n│               2019-01-01 00:00:00 │\r\n└───────────────────────────────────┘\r\n```\r\n\r\n```\r\nSELECT toDateTime('2019-01-01 00:00:00', 'UTC')\r\n\r\n┌─toDateTime('2019-01-01 00:00:00', 'UTC')─┐\r\n│                      2019-01-01 00:00:00 │\r\n└──────────────────────────────────────────┘\r\n```\r\n\r\nIt seems to me that Timeslots results should not depend on local time zone either.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16487/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16487/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16484","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16484/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16484/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16484/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/16484","id":731637620,"node_id":"MDU6SXNzdWU3MzE2Mzc2MjA=","number":16484,"title":"Introduce a setting to disable questionable order dependent functions like `neighbor`, `runningDifference`.","user":{"login":"filimonov","id":1549571,"node_id":"MDQ6VXNlcjE1NDk1NzE=","avatar_url":"https://avatars.githubusercontent.com/u/1549571?v=4","gravatar_id":"","url":"https://api.github.com/users/filimonov","html_url":"https://github.com/filimonov","followers_url":"https://api.github.com/users/filimonov/followers","following_url":"https://api.github.com/users/filimonov/following{/other_user}","gists_url":"https://api.github.com/users/filimonov/gists{/gist_id}","starred_url":"https://api.github.com/users/filimonov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/filimonov/subscriptions","organizations_url":"https://api.github.com/users/filimonov/orgs","repos_url":"https://api.github.com/users/filimonov/repos","events_url":"https://api.github.com/users/filimonov/events{/privacy}","received_events_url":"https://api.github.com/users/filimonov/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":845247686,"node_id":"MDU6TGFiZWw4NDUyNDc2ODY=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/usability","name":"usability","color":"ebf28c","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2020-10-28T17:15:40Z","updated_at":"2021-06-18T00:10:19Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"body":"neighbor / runningDifference / runningAccumulate should fail when setting is enabled and more that one block was returned.\r\n\r\nMotivation: report the error early. Prevent function misuse.\r\n\r\nP.S. Better name for that? ","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16484/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16484/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16459","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16459/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16459/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16459/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/16459","id":731180302,"node_id":"MDU6SXNzdWU3MzExODAzMDI=","number":16459,"title":"JSONExtractKey function","user":{"login":"Melchizedek13","id":10761242,"node_id":"MDQ6VXNlcjEwNzYxMjQy","avatar_url":"https://avatars.githubusercontent.com/u/10761242?v=4","gravatar_id":"","url":"https://api.github.com/users/Melchizedek13","html_url":"https://github.com/Melchizedek13","followers_url":"https://api.github.com/users/Melchizedek13/followers","following_url":"https://api.github.com/users/Melchizedek13/following{/other_user}","gists_url":"https://api.github.com/users/Melchizedek13/gists{/gist_id}","starred_url":"https://api.github.com/users/Melchizedek13/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Melchizedek13/subscriptions","organizations_url":"https://api.github.com/users/Melchizedek13/orgs","repos_url":"https://api.github.com/users/Melchizedek13/repos","events_url":"https://api.github.com/users/Melchizedek13/events{/privacy}","received_events_url":"https://api.github.com/users/Melchizedek13/received_events","type":"User","site_admin":false},"labels":[{"id":1807683251,"node_id":"MDU6TGFiZWwxODA3NjgzMjUx","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/doc-alert","name":"doc-alert","color":"e51068","default":false,"description":"PR where any documentation work is needed or proceeded"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2020-10-28T07:24:22Z","updated_at":"2020-10-28T15:16:23Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Hi everyone,\r\n\r\nNot so long time ago I found that there was no implementation of the function `JSONExtractKey(...)` in ClickHouse mentioned in the [documentation](https://clickhouse.tech/docs/en/sql-reference/functions/json-functions/#isvalidjsonjson).\r\n\r\nI will give an example code from the documentation section:\r\n> SELECT JSONExtractKey('{\"a\": \"hello\", \"b\": [-100, 200.0, 300]}', 1) = 'a'\r\n> SELECT JSONExtractKey('{\"a\": \"hello\", \"b\": [-100, 200.0, 300]}', 2) = 'b'\r\n\r\nWhen I run any query using `JSONExtractKey(...)` function, I get the following exception (`Unknown function JSONExtractKey`):\r\n```log\r\nSQL Error [46]: ClickHouse exception, code: 46, host: clickhouse-main-01.prod.local.city-dt.ru, port: 8125; Code: 46, e.displayText() = DB::Exception: Unknown function JSONExtractKey. Maybe you meant: ['JSONExtractRaw','JSONExtract'] (version 20.8.3.18 (official build))\r\n```\r\n\r\nI use ClickHouse `20.8.3.18` version.\r\n\r\nCould you please tell me whether you plan to implement this `JSONExtractKey(...)` function?\r\n\r\nThanks in advance.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16459/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16459/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16458","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16458/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16458/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16458/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/16458","id":731170007,"node_id":"MDU6SXNzdWU3MzExNzAwMDc=","number":16458,"title":"function arrayFilter must return UInt8, found Nullable(UInt8) (version 20.9.3.45 (official build))","user":{"login":"terryliu1994","id":30610585,"node_id":"MDQ6VXNlcjMwNjEwNTg1","avatar_url":"https://avatars.githubusercontent.com/u/30610585?v=4","gravatar_id":"","url":"https://api.github.com/users/terryliu1994","html_url":"https://github.com/terryliu1994","followers_url":"https://api.github.com/users/terryliu1994/followers","following_url":"https://api.github.com/users/terryliu1994/following{/other_user}","gists_url":"https://api.github.com/users/terryliu1994/gists{/gist_id}","starred_url":"https://api.github.com/users/terryliu1994/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/terryliu1994/subscriptions","organizations_url":"https://api.github.com/users/terryliu1994/orgs","repos_url":"https://api.github.com/users/terryliu1994/repos","events_url":"https://api.github.com/users/terryliu1994/events{/privacy}","received_events_url":"https://api.github.com/users/terryliu1994/received_events","type":"User","site_admin":false},"labels":[{"id":845247686,"node_id":"MDU6TGFiZWw4NDUyNDc2ODY=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/usability","name":"usability","color":"ebf28c","default":false,"description":""},{"id":1575085465,"node_id":"MDU6TGFiZWwxNTc1MDg1NDY1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/unexpected%20behaviour","name":"unexpected behaviour","color":"e088ca","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2020-10-28T07:06:53Z","updated_at":"2020-10-28T14:39:53Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"when use arrayFilter in table query （tagValue is Array(String)）\r\n`select\r\n\tcustomerId,\r\n\ttagValue,\r\n\tarrayFilter (x -> x != 'big', tagValue)\r\nfrom o2vip_customer_info\r\nwhere customerId in ('77','18127');`\r\n\r\nget error： function arrayFilter must return UInt8, found Nullable(UInt8) (version 20.9.3.45 (official build))\r\n\r\nwhen use in array, is correct\r\n`SELECT  arrayFilter (x -> x != 'big', ['big','small'])` ","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16458/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16458/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16436","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16436/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16436/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16436/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/16436","id":730767466,"node_id":"MDU6SXNzdWU3MzA3Njc0NjY=","number":16436,"title":"Output all rows as single list in Protobuf format","user":{"login":"akuzm","id":36882414,"node_id":"MDQ6VXNlcjM2ODgyNDE0","avatar_url":"https://avatars.githubusercontent.com/u/36882414?v=4","gravatar_id":"","url":"https://api.github.com/users/akuzm","html_url":"https://github.com/akuzm","followers_url":"https://api.github.com/users/akuzm/followers","following_url":"https://api.github.com/users/akuzm/following{/other_user}","gists_url":"https://api.github.com/users/akuzm/gists{/gist_id}","starred_url":"https://api.github.com/users/akuzm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/akuzm/subscriptions","organizations_url":"https://api.github.com/users/akuzm/orgs","repos_url":"https://api.github.com/users/akuzm/repos","events_url":"https://api.github.com/users/akuzm/events{/privacy}","received_events_url":"https://api.github.com/users/akuzm/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":644208617,"node_id":"MDU6TGFiZWw2NDQyMDg2MTc=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/easy%20task","name":"easy task","color":"0e8a16","default":false,"description":"Good for first contributors"},{"id":1401255404,"node_id":"MDU6TGFiZWwxNDAxMjU1NDA0","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-formats","name":"comp-formats","color":"b5bcff","default":false,"description":"Input / output formats"}],"state":"open","locked":false,"assignee":{"login":"An-DJ","id":24536972,"node_id":"MDQ6VXNlcjI0NTM2OTcy","avatar_url":"https://avatars.githubusercontent.com/u/24536972?v=4","gravatar_id":"","url":"https://api.github.com/users/An-DJ","html_url":"https://github.com/An-DJ","followers_url":"https://api.github.com/users/An-DJ/followers","following_url":"https://api.github.com/users/An-DJ/following{/other_user}","gists_url":"https://api.github.com/users/An-DJ/gists{/gist_id}","starred_url":"https://api.github.com/users/An-DJ/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/An-DJ/subscriptions","organizations_url":"https://api.github.com/users/An-DJ/orgs","repos_url":"https://api.github.com/users/An-DJ/repos","events_url":"https://api.github.com/users/An-DJ/events{/privacy}","received_events_url":"https://api.github.com/users/An-DJ/received_events","type":"User","site_admin":false},"assignees":[{"login":"An-DJ","id":24536972,"node_id":"MDQ6VXNlcjI0NTM2OTcy","avatar_url":"https://avatars.githubusercontent.com/u/24536972?v=4","gravatar_id":"","url":"https://api.github.com/users/An-DJ","html_url":"https://github.com/An-DJ","followers_url":"https://api.github.com/users/An-DJ/followers","following_url":"https://api.github.com/users/An-DJ/following{/other_user}","gists_url":"https://api.github.com/users/An-DJ/gists{/gist_id}","starred_url":"https://api.github.com/users/An-DJ/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/An-DJ/subscriptions","organizations_url":"https://api.github.com/users/An-DJ/orgs","repos_url":"https://api.github.com/users/An-DJ/repos","events_url":"https://api.github.com/users/An-DJ/events{/privacy}","received_events_url":"https://api.github.com/users/An-DJ/received_events","type":"User","site_admin":false}],"milestone":null,"comments":6,"created_at":"2020-10-27T19:54:04Z","updated_at":"2021-12-23T08:45:07Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"body":"Currently `Protobuf` outputs each row as a separate message, but some consumers require a list.\r\nWe could add a new format `ProtobufList` that does that.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16436/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16436/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16414","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16414/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16414/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16414/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/16414","id":729965804,"node_id":"MDU6SXNzdWU3Mjk5NjU4MDQ=","number":16414,"title":"toTimeZone does not throw an error about non-constant timezone","user":{"login":"den-crane","id":19737682,"node_id":"MDQ6VXNlcjE5NzM3Njgy","avatar_url":"https://avatars.githubusercontent.com/u/19737682?v=4","gravatar_id":"","url":"https://api.github.com/users/den-crane","html_url":"https://github.com/den-crane","followers_url":"https://api.github.com/users/den-crane/followers","following_url":"https://api.github.com/users/den-crane/following{/other_user}","gists_url":"https://api.github.com/users/den-crane/gists{/gist_id}","starred_url":"https://api.github.com/users/den-crane/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/den-crane/subscriptions","organizations_url":"https://api.github.com/users/den-crane/orgs","repos_url":"https://api.github.com/users/den-crane/repos","events_url":"https://api.github.com/users/den-crane/events{/privacy}","received_events_url":"https://api.github.com/users/den-crane/received_events","type":"User","site_admin":false},"labels":[{"id":1575085465,"node_id":"MDU6TGFiZWwxNTc1MDg1NDY1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/unexpected%20behaviour","name":"unexpected behaviour","color":"e088ca","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2020-10-26T23:00:43Z","updated_at":"2020-10-27T02:40:16Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"body":"```\r\nselect materialize('America/Los_Angeles') t, toTimeZone(now(), t)\r\n\r\n┌─t───────────────────┬─toTimeZone(now(), materialize('America/Los_Angeles'))─┐\r\n│ America/Los_Angeles │                                   2020-10-26 22:58:42 │\r\n└─────────────────────┴───────────────────────────────────────────────────────┘\r\n\r\ndesc (select materialize('America/Los_Angeles') t, toTimeZone(now(), t))\r\n┌─name──────────────────────────────────────────────────┬─type────────────────┬\r\n│ t                                                     │ String              │\r\n│ toTimeZone(now(), materialize('America/Los_Angeles')) │ DateTime('Etc/UTC') │\r\n└───────────────────────────────────────────────────────┴─────────────────────┴\r\n\r\n\r\n\r\nexample with toString\r\nSELECT\r\n    materialize('America/Los_Angeles') AS t,  toString(now(), t)\r\n\r\nReceived exception from server (version 20.11.1):\r\nCode: 44. DB::Exception: Received from localhost:9000. DB::Exception: Illegal type of argument #2 'timezone' of function toString, expected const String, got String.\r\n\r\n```","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16414/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16414/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16403","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16403/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16403/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16403/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/16403","id":729748060,"node_id":"MDU6SXNzdWU3Mjk3NDgwNjA=","number":16403,"title":"RBAC - ALTER MOVE PARTITION privilege does nothing","user":{"login":"MyroTk","id":44327070,"node_id":"MDQ6VXNlcjQ0MzI3MDcw","avatar_url":"https://avatars.githubusercontent.com/u/44327070?v=4","gravatar_id":"","url":"https://api.github.com/users/MyroTk","html_url":"https://github.com/MyroTk","followers_url":"https://api.github.com/users/MyroTk/followers","following_url":"https://api.github.com/users/MyroTk/following{/other_user}","gists_url":"https://api.github.com/users/MyroTk/gists{/gist_id}","starred_url":"https://api.github.com/users/MyroTk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/MyroTk/subscriptions","organizations_url":"https://api.github.com/users/MyroTk/orgs","repos_url":"https://api.github.com/users/MyroTk/repos","events_url":"https://api.github.com/users/MyroTk/events{/privacy}","received_events_url":"https://api.github.com/users/MyroTk/received_events","type":"User","site_admin":false},"labels":[{"id":386401505,"node_id":"MDU6TGFiZWwzODY0MDE1MDU=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/bug","name":"bug","color":"ee0701","default":true,"description":"Confirmed user-visible misbehaviour in official release"},{"id":2011606513,"node_id":"MDU6TGFiZWwyMDExNjA2NTEz","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-rbac","name":"comp-rbac","color":"b5bcff","default":false,"description":"Access control related"}],"state":"open","locked":false,"assignee":{"login":"vitlibar","id":45142681,"node_id":"MDQ6VXNlcjQ1MTQyNjgx","avatar_url":"https://avatars.githubusercontent.com/u/45142681?v=4","gravatar_id":"","url":"https://api.github.com/users/vitlibar","html_url":"https://github.com/vitlibar","followers_url":"https://api.github.com/users/vitlibar/followers","following_url":"https://api.github.com/users/vitlibar/following{/other_user}","gists_url":"https://api.github.com/users/vitlibar/gists{/gist_id}","starred_url":"https://api.github.com/users/vitlibar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vitlibar/subscriptions","organizations_url":"https://api.github.com/users/vitlibar/orgs","repos_url":"https://api.github.com/users/vitlibar/repos","events_url":"https://api.github.com/users/vitlibar/events{/privacy}","received_events_url":"https://api.github.com/users/vitlibar/received_events","type":"User","site_admin":false},"assignees":[{"login":"vitlibar","id":45142681,"node_id":"MDQ6VXNlcjQ1MTQyNjgx","avatar_url":"https://avatars.githubusercontent.com/u/45142681?v=4","gravatar_id":"","url":"https://api.github.com/users/vitlibar","html_url":"https://github.com/vitlibar","followers_url":"https://api.github.com/users/vitlibar/followers","following_url":"https://api.github.com/users/vitlibar/following{/other_user}","gists_url":"https://api.github.com/users/vitlibar/gists{/gist_id}","starred_url":"https://api.github.com/users/vitlibar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vitlibar/subscriptions","organizations_url":"https://api.github.com/users/vitlibar/orgs","repos_url":"https://api.github.com/users/vitlibar/repos","events_url":"https://api.github.com/users/vitlibar/events{/privacy}","received_events_url":"https://api.github.com/users/vitlibar/received_events","type":"User","site_admin":false}],"milestone":null,"comments":0,"created_at":"2020-10-26T17:08:42Z","updated_at":"2020-10-29T21:31:53Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"**Describe the bug**\r\nIn order to execute `ALTER TABLE table0 MOVE PARTITION 1 TO TABLE table1` user is required to have `SELECT` and `ALTER DELETE` on table0 and `INSERT` on table1. The privilege `ALTER MOVE PARTITION` is not required and granting it doesn't permit the user to execute the statement.\r\n\r\n**How to reproduce**\r\nClickHouse server version 20.10.1 revision 54440\r\n\r\n* Queries to run that lead to unexpected result\r\n```\r\nClickHouse client version 20.10.1.1.\r\nConnecting to localhost:9000 as user user0.\r\nConnected to ClickHouse server version 20.10.1 revision 54440.\r\n\r\nclickhouse1 :) ALTER TABLE table0 MOVE PARTITION 1 TO TABLE table1\r\n\r\nALTER TABLE table0\r\n    MOVE PARTITION 1 TO TABLE table1\r\n\r\n\r\nOk.\r\n\r\n0 rows in set. Elapsed: 0.002 sec.\r\n```\r\n```\r\nclickhouse1 :) show grants for user0\r\n\r\nSHOW GRANTS FOR user0\r\n\r\n┌─GRANTS FOR user0──────────────────────────────────────┐\r\n│ GRANT INSERT ON default.table1 TO user0               │\r\n│ GRANT SELECT, ALTER DELETE ON default.table0 TO user0 │\r\n└───────────────────────────────────────────────────────┘\r\n\r\n2 rows in set. Elapsed: 0.002 sec.\r\n```\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16403/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16403/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16400","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16400/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16400/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16400/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/16400","id":729676581,"node_id":"MDU6SXNzdWU3Mjk2NzY1ODE=","number":16400,"title":"argMax and Nullables","user":{"login":"filimonov","id":1549571,"node_id":"MDQ6VXNlcjE1NDk1NzE=","avatar_url":"https://avatars.githubusercontent.com/u/1549571?v=4","gravatar_id":"","url":"https://api.github.com/users/filimonov","html_url":"https://github.com/filimonov","followers_url":"https://api.github.com/users/filimonov/followers","following_url":"https://api.github.com/users/filimonov/following{/other_user}","gists_url":"https://api.github.com/users/filimonov/gists{/gist_id}","starred_url":"https://api.github.com/users/filimonov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/filimonov/subscriptions","organizations_url":"https://api.github.com/users/filimonov/orgs","repos_url":"https://api.github.com/users/filimonov/repos","events_url":"https://api.github.com/users/filimonov/events{/privacy}","received_events_url":"https://api.github.com/users/filimonov/received_events","type":"User","site_admin":false},"labels":[{"id":386401511,"node_id":"MDU6TGFiZWwzODY0MDE1MTE=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/st-wontfix","name":"st-wontfix","color":"e5b890","default":false,"description":"Known issue, no plans to fix it currenlty"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":15,"created_at":"2020-10-26T15:41:13Z","updated_at":"2021-06-27T21:25:33Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"body":"Continuation of #13598\r\n\r\n```\r\nSELECT\r\n    materialize([1, 2, 3, 4, NULL][number + 1]) AS x,\r\n    toTypeName(x) AS type,\r\n    now() + (number * 2) AS ts\r\nFROM numbers(5)\r\n\r\n┌────x─┬─type────────────┬──────────────────ts─┐\r\n│    1 │ Nullable(UInt8) │ 2020-10-26 15:39:04 │\r\n│    2 │ Nullable(UInt8) │ 2020-10-26 15:39:06 │\r\n│    3 │ Nullable(UInt8) │ 2020-10-26 15:39:08 │\r\n│    4 │ Nullable(UInt8) │ 2020-10-26 15:39:10 │\r\n│ ᴺᵁᴸᴸ │ Nullable(UInt8) │ 2020-10-26 15:39:12 │\r\n└──────┴─────────────────┴─────────────────────┘\r\n```\r\n\r\n\r\n```\r\nWITH argMaxState(x, ts) AS state\r\nSELECT\r\n    toTypeName(state),\r\n    finalizeAggregation(state),\r\n    any(type)\r\nFROM \r\n(\r\n    SELECT\r\n        materialize([1, 2, 3, 4, NULL][number + 1]) AS x,\r\n        toTypeName(x) AS type,\r\n        now() + (number * 2) AS ts\r\n    FROM numbers(5)\r\n) AS t\r\n\r\nRow 1:\r\n──────\r\ntoTypeName(state):          AggregateFunction(argMax, Nullable(UInt8), DateTime('UTC'))\r\nfinalizeAggregation(state): 4\r\nany(type):                  Nullable(UInt8)\r\n```\r\nquestionable (not clear how to get the last state - accepting Null as a valid value). \r\n\r\n\r\n```\r\nWITH argMaxOrNullState(x, ts) AS state\r\nSELECT\r\n    toTypeName(state),\r\n    finalizeAggregation(state),\r\n    any(type)\r\nFROM \r\n(\r\n    SELECT\r\n        materialize([1, 2, 3, 4, NULL][number + 1]) AS x,\r\n        toTypeName(x) AS type,\r\n        now() + (number * 2) AS ts\r\n    FROM numbers(5)\r\n) AS t\r\n\r\nRow 1:\r\n──────\r\ntoTypeName(state):          AggregateFunction(argMaxOrNull, Nullable(UInt8), DateTime('UTC'))\r\nfinalizeAggregation(state): 0\r\nany(type):                  Nullable(UInt8)\r\n\r\n1 rows in set. Elapsed: 0.005 sec. \r\n```\r\nThat just looks wrong. ","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16400/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16400/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16399","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16399/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16399/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16399/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/16399","id":729649545,"node_id":"MDU6SXNzdWU3Mjk2NDk1NDU=","number":16399,"title":"toDecimal64 vs toDecimal64OrNull","user":{"login":"den-crane","id":19737682,"node_id":"MDQ6VXNlcjE5NzM3Njgy","avatar_url":"https://avatars.githubusercontent.com/u/19737682?v=4","gravatar_id":"","url":"https://api.github.com/users/den-crane","html_url":"https://github.com/den-crane","followers_url":"https://api.github.com/users/den-crane/followers","following_url":"https://api.github.com/users/den-crane/following{/other_user}","gists_url":"https://api.github.com/users/den-crane/gists{/gist_id}","starred_url":"https://api.github.com/users/den-crane/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/den-crane/subscriptions","organizations_url":"https://api.github.com/users/den-crane/orgs","repos_url":"https://api.github.com/users/den-crane/repos","events_url":"https://api.github.com/users/den-crane/events{/privacy}","received_events_url":"https://api.github.com/users/den-crane/received_events","type":"User","site_admin":false},"labels":[{"id":1575085465,"node_id":"MDU6TGFiZWwxNTc1MDg1NDY1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/unexpected%20behaviour","name":"unexpected behaviour","color":"e088ca","default":false,"description":""},{"id":1745440304,"node_id":"MDU6TGFiZWwxNzQ1NDQwMzA0","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-decimal","name":"comp-decimal","color":"b5bcff","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2020-10-26T15:10:35Z","updated_at":"2020-10-26T16:46:33Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"body":"```sql\r\nSELECT toDecimal64('54.1234567', 4)\r\n54.1234\r\n\r\nSELECT toDecimal64OrNull('54.1234567', 4)\r\nᴺᵁᴸᴸ\r\n```","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16399/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16399/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16394","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16394/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16394/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16394/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/16394","id":729533016,"node_id":"MDU6SXNzdWU3Mjk1MzMwMTY=","number":16394,"title":"why clickhouse doesn't support ZK certificate authentication","user":{"login":"wallace-clickhouse","id":65805524,"node_id":"MDQ6VXNlcjY1ODA1NTI0","avatar_url":"https://avatars.githubusercontent.com/u/65805524?v=4","gravatar_id":"","url":"https://api.github.com/users/wallace-clickhouse","html_url":"https://github.com/wallace-clickhouse","followers_url":"https://api.github.com/users/wallace-clickhouse/followers","following_url":"https://api.github.com/users/wallace-clickhouse/following{/other_user}","gists_url":"https://api.github.com/users/wallace-clickhouse/gists{/gist_id}","starred_url":"https://api.github.com/users/wallace-clickhouse/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wallace-clickhouse/subscriptions","organizations_url":"https://api.github.com/users/wallace-clickhouse/orgs","repos_url":"https://api.github.com/users/wallace-clickhouse/repos","events_url":"https://api.github.com/users/wallace-clickhouse/events{/privacy}","received_events_url":"https://api.github.com/users/wallace-clickhouse/received_events","type":"User","site_admin":false},"labels":[{"id":386401510,"node_id":"MDU6TGFiZWwzODY0MDE1MTA=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/question","name":"question","color":"bfdadc","default":true,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2020-10-26T12:47:21Z","updated_at":"2020-10-26T15:25:27Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"When I use ReplicatedMergeTree with zookeeper,I find clickhouse only supports username/password way to connect ZK,so why clickhouse doesn't support certificate authentication to connect to ZK?\r\nIs there any plan? Thank you!","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16394/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16394/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16385","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16385/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16385/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16385/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/16385","id":729395647,"node_id":"MDU6SXNzdWU3MjkzOTU2NDc=","number":16385,"title":"When creating a materialized view, the order of column fields is different, resulting in abnormal column data","user":{"login":"Veryfirefly","id":20528475,"node_id":"MDQ6VXNlcjIwNTI4NDc1","avatar_url":"https://avatars.githubusercontent.com/u/20528475?v=4","gravatar_id":"","url":"https://api.github.com/users/Veryfirefly","html_url":"https://github.com/Veryfirefly","followers_url":"https://api.github.com/users/Veryfirefly/followers","following_url":"https://api.github.com/users/Veryfirefly/following{/other_user}","gists_url":"https://api.github.com/users/Veryfirefly/gists{/gist_id}","starred_url":"https://api.github.com/users/Veryfirefly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Veryfirefly/subscriptions","organizations_url":"https://api.github.com/users/Veryfirefly/orgs","repos_url":"https://api.github.com/users/Veryfirefly/repos","events_url":"https://api.github.com/users/Veryfirefly/events{/privacy}","received_events_url":"https://api.github.com/users/Veryfirefly/received_events","type":"User","site_admin":false},"labels":[{"id":386401510,"node_id":"MDU6TGFiZWwzODY0MDE1MTA=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/question","name":"question","color":"bfdadc","default":true,"description":""},{"id":1350221495,"node_id":"MDU6TGFiZWwxMzUwMjIxNDk1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-matview","name":"comp-matview","color":"b5bcff","default":false,"description":"Materialized views"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2020-10-26T09:21:00Z","updated_at":"2020-10-26T12:37:07Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"This is an abnormal working SQL\r\n\r\n```sql\r\nCREATE MATERIALIZED VIEW t_daily_player_create\r\n(\r\n    DayCreatePlayerCount UInt32,\r\n    CreateDay Date,\r\n    ConvertServerIndex UInt16,\r\n    Source UInt32\r\n) ENGINE = AggregatingMergeTree()\r\nPARTITION BY CreateDay\r\nORDER BY (CreateDay, ConvertServerIndex)\r\nPOPULATE AS(\r\n    SELECT\r\n        CreateDay,\r\n        count(Id) as DayCreatePlayerCount,\r\n        ConvertServerIndex,\r\n        Source\r\n    FROM t_role\r\n    GROUP BY CreateDay, ConvertServerIndex, Source\r\n);\r\n```\r\n\r\nThe result is as follows：\r\n\r\n![abnormal](http://s2676440002-loahf.gtarcade.com/abnormal.png)\r\n\r\n------\r\n\r\nThis is normal working SQL\r\n\r\n```sql\r\nCREATE MATERIALIZED VIEW t_daily_player_create\r\n(\r\n    CreateDay Date,\r\n    DayCreatePlayerCount UInt32,\r\n    ConvertServerIndex UInt16,\r\n    Source UInt32\r\n) ENGINE = AggregatingMergeTree()\r\nPARTITION BY CreateDay\r\nORDER BY (CreateDay, ConvertServerIndex)\r\nPOPULATE AS(\r\n    SELECT\r\n        CreateDay,\r\n        count(Id) as DayCreatePlayerCount,\r\n        ConvertServerIndex,\r\n        Source\r\n    FROM t_role\r\n    GROUP BY CreateDay, ConvertServerIndex, Source\r\n);\r\n```\r\n\r\nThe result is as follows:\r\n\r\n![normal](http://s2676440002-loahf.gtarcade.com/normal.png)","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16385/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16385/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16330","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16330/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16330/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16330/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/16330","id":728649995,"node_id":"MDU6SXNzdWU3Mjg2NDk5OTU=","number":16330,"title":"New `Nullable DataType` with bitmap indexes.","user":{"login":"sundy-li","id":3325189,"node_id":"MDQ6VXNlcjMzMjUxODk=","avatar_url":"https://avatars.githubusercontent.com/u/3325189?v=4","gravatar_id":"","url":"https://api.github.com/users/sundy-li","html_url":"https://github.com/sundy-li","followers_url":"https://api.github.com/users/sundy-li/followers","following_url":"https://api.github.com/users/sundy-li/following{/other_user}","gists_url":"https://api.github.com/users/sundy-li/gists{/gist_id}","starred_url":"https://api.github.com/users/sundy-li/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sundy-li/subscriptions","organizations_url":"https://api.github.com/users/sundy-li/orgs","repos_url":"https://api.github.com/users/sundy-li/repos","events_url":"https://api.github.com/users/sundy-li/events{/privacy}","received_events_url":"https://api.github.com/users/sundy-li/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":756395244,"node_id":"MDU6TGFiZWw3NTYzOTUyNDQ=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/performance","name":"performance","color":"c2e0c6","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2020-10-24T03:46:55Z","updated_at":"2020-11-05T11:07:00Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"body":"Currently, the nullable datatype column took 1 byte to store if the data is null. \r\n\r\nYet I didn't think it's a good idea. \r\nBecause in the real scene, whether the data is empty, this distribution is locally clustered. Data is mostly null or is mostly not null.\r\nSo I suggest storing the null sign with bitmap indexes for performance issues.  And I checked [`apache doris`](https://doris.apache.org/master/en/internal/doris_storage_optimization.html#file-format) , it's designed by bitmap too.\r\n\r\nSince we already have `roaring bitmap`, so the implementation may be trivial, but it's hard to be compatible with the previous storage format.\r\n\r\n<details>\r\n\r\n<summary>\r\nA simple look into `Nullable(UInt32)` vs `UInt32` performance comparison in v20.3\r\n\r\n</summary>\r\n \r\n\r\n```sql\r\ncreate table data  Engine=MergeTree order by number as select number,  rand(100000000)  as n1  from numbers(100000000);     \r\n\r\ncreate table data_null Engine=MergeTree order by number as select number,  toNullable(rand(100000000)) as n1  from numbers(100000000);\r\n\r\n :) select avgIf(n1, n1 > 10) from  data;\r\n\r\nSELECT avgIf(n1, n1 > 10)\r\nFROM data\r\n\r\n┌─avgIf(n1, greater(n1, 10))─┐\r\n│         2147540569.0778217 │\r\n└────────────────────────────┘\r\n\r\n1 rows in set. Elapsed: 0.073 sec. Processed 100.00 million rows, 400.00 MB (1.38 billion rows/s., 5.51 GB/s.) \r\n\r\n :) select avgIf(n1, n1 > 10) from  data_null;\r\n\r\nSELECT avgIf(n1, n1 > 10)\r\nFROM data_null\r\n\r\n┌─avgIf(n1, greater(n1, 10))─┐\r\n│          2147385153.866143 │\r\n└────────────────────────────┘\r\n\r\n1 rows in set. Elapsed: 0.147 sec. Processed 100.00 million rows, 500.00 MB (680.39 million rows/s., 3.40 GB/s.) \r\n\r\n```\r\n\r\n\r\n</details>\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16330/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16330/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16279","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16279/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16279/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16279/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/16279","id":728064959,"node_id":"MDU6SXNzdWU3MjgwNjQ5NTk=","number":16279,"title":"Using HDFS Engine virtual columns as partitions","user":{"login":"yehiaelbehery","id":28441776,"node_id":"MDQ6VXNlcjI4NDQxNzc2","avatar_url":"https://avatars.githubusercontent.com/u/28441776?v=4","gravatar_id":"","url":"https://api.github.com/users/yehiaelbehery","html_url":"https://github.com/yehiaelbehery","followers_url":"https://api.github.com/users/yehiaelbehery/followers","following_url":"https://api.github.com/users/yehiaelbehery/following{/other_user}","gists_url":"https://api.github.com/users/yehiaelbehery/gists{/gist_id}","starred_url":"https://api.github.com/users/yehiaelbehery/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yehiaelbehery/subscriptions","organizations_url":"https://api.github.com/users/yehiaelbehery/orgs","repos_url":"https://api.github.com/users/yehiaelbehery/repos","events_url":"https://api.github.com/users/yehiaelbehery/events{/privacy}","received_events_url":"https://api.github.com/users/yehiaelbehery/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2020-10-23T09:31:39Z","updated_at":"2020-10-24T16:01:51Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Hello guys,\r\nI'm using HDFS table and need to optimize I/O and read only a subset of files but the virtual column _file is enriched to every row and merely used for row filtering not \"partitioning\", correct?\r\nAnd if so is there any way I can partition or simulate partitioning HDFS tables (other than creating a new table with the specified partition that is)?\r\n\r\nClickHouse 20.6.5.8","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16279/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16279/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16260","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16260/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16260/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16260/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/16260","id":727358752,"node_id":"MDU6SXNzdWU3MjczNTg3NTI=","number":16260,"title":"timeSlots() does not support DateTime64","user":{"login":"zvonand","id":32552679,"node_id":"MDQ6VXNlcjMyNTUyNjc5","avatar_url":"https://avatars.githubusercontent.com/u/32552679?v=4","gravatar_id":"","url":"https://api.github.com/users/zvonand","html_url":"https://github.com/zvonand","followers_url":"https://api.github.com/users/zvonand/followers","following_url":"https://api.github.com/users/zvonand/following{/other_user}","gists_url":"https://api.github.com/users/zvonand/gists{/gist_id}","starred_url":"https://api.github.com/users/zvonand/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zvonand/subscriptions","organizations_url":"https://api.github.com/users/zvonand/orgs","repos_url":"https://api.github.com/users/zvonand/repos","events_url":"https://api.github.com/users/zvonand/events{/privacy}","received_events_url":"https://api.github.com/users/zvonand/received_events","type":"User","site_admin":false},"labels":[{"id":1397894054,"node_id":"MDU6TGFiZWwxMzk3ODk0MDU0","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/unfinished%20code","name":"unfinished code","color":"ff8800","default":false,"description":""},{"id":1481221764,"node_id":"MDU6TGFiZWwxNDgxMjIxNzY0","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-datetime","name":"comp-datetime","color":"b5bcff","default":false,"description":"date & time & timezone related"}],"state":"open","locked":false,"assignee":{"login":"Enmk","id":1110183,"node_id":"MDQ6VXNlcjExMTAxODM=","avatar_url":"https://avatars.githubusercontent.com/u/1110183?v=4","gravatar_id":"","url":"https://api.github.com/users/Enmk","html_url":"https://github.com/Enmk","followers_url":"https://api.github.com/users/Enmk/followers","following_url":"https://api.github.com/users/Enmk/following{/other_user}","gists_url":"https://api.github.com/users/Enmk/gists{/gist_id}","starred_url":"https://api.github.com/users/Enmk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Enmk/subscriptions","organizations_url":"https://api.github.com/users/Enmk/orgs","repos_url":"https://api.github.com/users/Enmk/repos","events_url":"https://api.github.com/users/Enmk/events{/privacy}","received_events_url":"https://api.github.com/users/Enmk/received_events","type":"User","site_admin":false},"assignees":[{"login":"Enmk","id":1110183,"node_id":"MDQ6VXNlcjExMTAxODM=","avatar_url":"https://avatars.githubusercontent.com/u/1110183?v=4","gravatar_id":"","url":"https://api.github.com/users/Enmk","html_url":"https://github.com/Enmk","followers_url":"https://api.github.com/users/Enmk/followers","following_url":"https://api.github.com/users/Enmk/following{/other_user}","gists_url":"https://api.github.com/users/Enmk/gists{/gist_id}","starred_url":"https://api.github.com/users/Enmk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Enmk/subscriptions","organizations_url":"https://api.github.com/users/Enmk/orgs","repos_url":"https://api.github.com/users/Enmk/repos","events_url":"https://api.github.com/users/Enmk/events{/privacy}","received_events_url":"https://api.github.com/users/Enmk/received_events","type":"User","site_admin":false}],"milestone":null,"comments":2,"created_at":"2020-10-22T12:48:37Z","updated_at":"2022-01-27T11:13:45Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"**`timeSlots() ` is not working with DateTime64 date type at all, even when within normal range:**\r\n```sql\r\nSELECT timeSlots(toDateTime64('2012-01-01 12:20:00', 0, 'UTC'), 600)\r\n\r\nReceived exception from server (version 22.1.3):\r\nCode: 43. DB::Exception: Received from localhost:9000. DB::Exception: Illegal type DateTime64(0, 'UTC') of first argument of function timeSlots. Must be DateTime.: While processing timeSlots(toDateTime64('2012-01-01 12:20:00', 0, 'UTC'), 600). (ILLEGAL_TYPE_OF_ARGUMENT)\r\n```","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16260/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16260/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16257","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16257/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16257/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16257/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/16257","id":727214689,"node_id":"MDU6SXNzdWU3MjcyMTQ2ODk=","number":16257,"title":"group by rollup feature","user":{"login":"peaksnail","id":1744607,"node_id":"MDQ6VXNlcjE3NDQ2MDc=","avatar_url":"https://avatars.githubusercontent.com/u/1744607?v=4","gravatar_id":"","url":"https://api.github.com/users/peaksnail","html_url":"https://github.com/peaksnail","followers_url":"https://api.github.com/users/peaksnail/followers","following_url":"https://api.github.com/users/peaksnail/following{/other_user}","gists_url":"https://api.github.com/users/peaksnail/gists{/gist_id}","starred_url":"https://api.github.com/users/peaksnail/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/peaksnail/subscriptions","organizations_url":"https://api.github.com/users/peaksnail/orgs","repos_url":"https://api.github.com/users/peaksnail/repos","events_url":"https://api.github.com/users/peaksnail/events{/privacy}","received_events_url":"https://api.github.com/users/peaksnail/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2020-10-22T09:27:05Z","updated_at":"2020-10-22T09:43:56Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"hi\r\ncan clickhouse support the sub rollup\r\n```\r\nSELECT \r\n    warehouse,goods,product, SUM(quantity)\r\nFROM\r\n    inventory\r\nGROUP BY warehouse,goods,ROLLUP (product)\r\n```","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16257/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16257/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16216","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16216/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16216/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16216/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/16216","id":726341907,"node_id":"MDU6SXNzdWU3MjYzNDE5MDc=","number":16216,"title":"Adding/removing columns to SELECT changes values in other columns (if() is somehow lazy?)","user":{"login":"zindel","id":527503,"node_id":"MDQ6VXNlcjUyNzUwMw==","avatar_url":"https://avatars.githubusercontent.com/u/527503?v=4","gravatar_id":"","url":"https://api.github.com/users/zindel","html_url":"https://github.com/zindel","followers_url":"https://api.github.com/users/zindel/followers","following_url":"https://api.github.com/users/zindel/following{/other_user}","gists_url":"https://api.github.com/users/zindel/gists{/gist_id}","starred_url":"https://api.github.com/users/zindel/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zindel/subscriptions","organizations_url":"https://api.github.com/users/zindel/orgs","repos_url":"https://api.github.com/users/zindel/repos","events_url":"https://api.github.com/users/zindel/events{/privacy}","received_events_url":"https://api.github.com/users/zindel/received_events","type":"User","site_admin":false},"labels":[{"id":386401509,"node_id":"MDU6TGFiZWwzODY0MDE1MDk=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/invalid","name":"invalid","color":"e6e6e6","default":true,"description":null},{"id":1357578153,"node_id":"MDU6TGFiZWwxMzU3NTc4MTUz","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-joins","name":"comp-joins","color":"b5bcff","default":false,"description":"JOINs"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2020-10-21T10:17:29Z","updated_at":"2020-11-04T15:30:51Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"**ClickHouse server version 20.8.2 revision 54438**\r\n\r\nConsider the query:\r\n```sql\r\nSELECT\r\n    if(isNull(first.number), second.s, first.s) AS s\r\n    ,first.number\r\n    ,second.number\r\nFROM\r\n    (select number, 'first' as s from numbers(2))  AS first\r\n    FULL JOIN (select number, 'second' as s from numbers(2, 2)) AS second \r\n    USING number\r\nSETTINGS join_use_nulls=1\r\n```\r\nIf you run it using `clickhouse-client` you get the obvious results:\r\n```\r\nfirst   0       \\N\r\nfirst   1       \\N\r\nsecond  \\N      3\r\nsecond  \\N      2\r\n```\r\nNow, remove or comment out the last 2 columns in the outer-most `SELECT`, like this:\r\n```sql\r\nSELECT\r\n    if(isNull(first.number), second.s, first.s) AS s\r\nFROM\r\n    (select number, 'first' as s from numbers(2))  AS first\r\n    FULL JOIN (select number, 'second' as s from numbers(2, 2)) AS second \r\n    USING number\r\nSETTINGS join_use_nulls=1\r\n```\r\nObserve the results:\r\n```\r\nfirst\r\nfirst\r\n\\N\r\n\\N\r\n```\r\nThe expected result is:\r\n```\r\nfirst\r\nfirst\r\nsecond\r\nsecond\r\n```\r\nAlso, initially I guessed that it has something to do with `join_use_nulls`, but the issue is perfectly reproducible without it too:\r\n```sql\r\nSELECT\r\n    if(first.number = 0, second.s, first.s) AS s\r\n    -- comment out next 2 lines and observe that last 2 rows in the result say ''(empty string) instead of 'second'\r\n    ,first.number\r\n    ,second.number\r\nFROM\r\n    (select number, 'first' as s from numbers(1, 2))  AS first\r\n    FULL JOIN (select number, 'second' as s from numbers(3, 2)) second \r\n    USING number\r\n```","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16216/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16216/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16207","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16207/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16207/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16207/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/16207","id":726144894,"node_id":"MDU6SXNzdWU3MjYxNDQ4OTQ=","number":16207,"title":"ClickHouse return an empty X-ClickHouse-Summary if we don't set send_progress_in_http_headers to true","user":{"login":"YiuRULE","id":4019437,"node_id":"MDQ6VXNlcjQwMTk0Mzc=","avatar_url":"https://avatars.githubusercontent.com/u/4019437?v=4","gravatar_id":"","url":"https://api.github.com/users/YiuRULE","html_url":"https://github.com/YiuRULE","followers_url":"https://api.github.com/users/YiuRULE/followers","following_url":"https://api.github.com/users/YiuRULE/following{/other_user}","gists_url":"https://api.github.com/users/YiuRULE/gists{/gist_id}","starred_url":"https://api.github.com/users/YiuRULE/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/YiuRULE/subscriptions","organizations_url":"https://api.github.com/users/YiuRULE/orgs","repos_url":"https://api.github.com/users/YiuRULE/repos","events_url":"https://api.github.com/users/YiuRULE/events{/privacy}","received_events_url":"https://api.github.com/users/YiuRULE/received_events","type":"User","site_admin":false},"labels":[{"id":1397894054,"node_id":"MDU6TGFiZWwxMzk3ODk0MDU0","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/unfinished%20code","name":"unfinished code","color":"ff8800","default":false,"description":""},{"id":1481327553,"node_id":"MDU6TGFiZWwxNDgxMzI3NTUz","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-http","name":"comp-http","color":"b5bcff","default":false,"description":"http protocol related"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2020-10-21T05:26:06Z","updated_at":"2020-11-04T15:31:24Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"**Describe the bug**\r\nA clear and concise description of what works not as it is supposed to.\r\n\r\nHappened on `20.9.3 revision 54439`.\r\n\r\nUsing the HTTP interface and `send_progress_in_http_headers` to `False`, the API returns on the HTTP headers a `X-ClickHouse-Summary` with all values set to 0. \r\n\r\n**How to reproduce**\r\n\r\nWith `send_progress_in_http_headers=1`\r\n\r\n```\r\necho 'SELECT COUNT() FROM system.numbers' | curl -v 'http://localhost:8123/?wait_end_of_query=1&send_progress_in_http_headers=1&max_execution_time=3' --data-binary @-\r\n*   Trying 127.0.0.1:8123...\r\n* TCP_NODELAY set\r\n* Connected to localhost (127.0.0.1) port 8123 (#0)\r\n> POST /?wait_end_of_query=1&send_progress_in_http_headers=1&max_execution_time=3 HTTP/1.1\r\n> Host: localhost:8123\r\n> User-Agent: curl/7.68.0\r\n> Accept: */*\r\n> Content-Length: 35\r\n> Content-Type: application/x-www-form-urlencoded\r\n> \r\n* upload completely sent off: 35 out of 35 bytes\r\n* Mark bundle as not supporting multiuse\r\n< HTTP/1.1 200 OK\r\n< Date: Wed, 21 Oct 2020 05:22:02 GMT\r\n< Connection: Keep-Alive\r\n< Content-Type: text/tab-separated-values; charset=UTF-8\r\n< X-ClickHouse-Server-Display-Name: clickhouse1a\r\n< Transfer-Encoding: chunked\r\n< X-ClickHouse-Query-Id: 6bf7d228-06c2-44ba-a67c-a99d1a84af07\r\n< X-ClickHouse-Format: TabSeparated\r\n< X-ClickHouse-Timezone: UTC\r\n< Keep-Alive: timeout=3\r\n< X-ClickHouse-Progress: {\"read_rows\":\"239879310\",\"read_bytes\":\"1919034480\",\"written_rows\":\"0\",\"written_bytes\":\"0\",\"total_rows_to_read\":\"0\"}\r\n...\r\n< X-ClickHouse-Progress: {\"read_rows\":\"9260834880\",\"read_bytes\":\"74086679040\",\"written_rows\":\"0\",\"written_bytes\":\"0\",\"total_rows_to_read\":\"0\"}\r\n< X-ClickHouse-Summary: {\"read_rows\":\"9271839720\",\"read_bytes\":\"74174717760\",\"written_rows\":\"0\",\"written_bytes\":\"0\",\"total_rows_to_read\":\"0\"}\r\n< \r\nCode: 159, e.displayText() = DB::Exception: Timeout exceeded: elapsed 3.00398823 seconds, maximum: 3: While executing Numbers (version 20.9.3.45 (official build))\r\n* Connection #0 to host localhost left intact\r\n```\r\n\r\nWith `send_progress_in_http_headers=0`\r\n\r\n```\r\necho 'SELECT COUNT() FROM system.numbers' | curl -v 'http://localhost:8123/?wait_end_of_query=1&send_progress_in_http_headers=0&max_execution_time=3' --data-binary @-\r\n*   Trying 127.0.0.1:8123...\r\n* TCP_NODELAY set\r\n* Connected to localhost (127.0.0.1) port 8123 (#0)\r\n> POST /?wait_end_of_query=1&send_progress_in_http_headers=0&max_execution_time=3 HTTP/1.1\r\n> Host: localhost:8123\r\n> User-Agent: curl/7.68.0\r\n> Accept: */*\r\n> Content-Length: 35\r\n> Content-Type: application/x-www-form-urlencoded\r\n> \r\n* upload completely sent off: 35 out of 35 bytes\r\n* Mark bundle as not supporting multiuse\r\n< HTTP/1.1 500 Internal Server Error\r\n< Date: Wed, 21 Oct 2020 05:23:12 GMT\r\n< Connection: Keep-Alive\r\n< Content-Type: text/tab-separated-values; charset=UTF-8\r\n< X-ClickHouse-Server-Display-Name: clickhouse1a\r\n< Transfer-Encoding: chunked\r\n< X-ClickHouse-Query-Id: 8bb945fd-621f-40d3-8e0d-3eec1e396a9f\r\n< X-ClickHouse-Format: TabSeparated\r\n< X-ClickHouse-Timezone: UTC\r\n< X-ClickHouse-Exception-Code: 159\r\n< Keep-Alive: timeout=3\r\n< X-ClickHouse-Summary: {\"read_rows\":\"0\",\"read_bytes\":\"0\",\"written_rows\":\"0\",\"written_bytes\":\"0\",\"total_rows_to_read\":\"0\"}\r\n< \r\nCode: 159, e.displayText() = DB::Exception: Timeout exceeded: elapsed 3.003998573 seconds, maximum: 3: While executing Numbers (version 20.9.3.45 (official build))\r\n```\r\n\r\n**Expected behavior**\r\nClickHouse should return the correct `X-ClickHouse-Summary` value, if it's not possible, ClickHouse shouldn't return the header to the client if `send_progress_in_http_headers` is not set to `True`, as it could be misleading to the user.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16207/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16207/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16143","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16143/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16143/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16143/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/16143","id":724511565,"node_id":"MDU6SXNzdWU3MjQ1MTE1NjU=","number":16143,"title":"skip_unavaliable_databases[tables] flag [or setting]","user":{"login":"UnamedRus","id":9449405,"node_id":"MDQ6VXNlcjk0NDk0MDU=","avatar_url":"https://avatars.githubusercontent.com/u/9449405?v=4","gravatar_id":"","url":"https://api.github.com/users/UnamedRus","html_url":"https://github.com/UnamedRus","followers_url":"https://api.github.com/users/UnamedRus/followers","following_url":"https://api.github.com/users/UnamedRus/following{/other_user}","gists_url":"https://api.github.com/users/UnamedRus/gists{/gist_id}","starred_url":"https://api.github.com/users/UnamedRus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/UnamedRus/subscriptions","organizations_url":"https://api.github.com/users/UnamedRus/orgs","repos_url":"https://api.github.com/users/UnamedRus/repos","events_url":"https://api.github.com/users/UnamedRus/events{/privacy}","received_events_url":"https://api.github.com/users/UnamedRus/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2020-10-19T11:08:54Z","updated_at":"2020-11-26T19:07:29Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"**Use case**\r\nIn case of some problems on clickhouse startup, now clickhouse will threw an exception and refuse to start, in case of vm/bare-metal deployment usually that not an issue to directly connect to server and provide manipulations for fixing the problem, but in case of k8s, you can't simply do that, and you need to attach PV to another pod or replace entrypoint which can be painful.\r\n\r\n**Describe the solution you'd like**\r\nGive the ability to start clickhouse in safe mode, which would allow us to fix problems after clickhouse start.\r\nIt can be a flag or setting, but we need to have the ability to easily create that kind of flag via clickhouse-operator.\r\n\r\n**Additional context**\r\nProbably it makes sense to disallow remote connections in that mode, so that replica wouldn't fail distributed queries because of non-existing tables.\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16143/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16143/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16045","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16045/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16045/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16045/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/16045","id":722686757,"node_id":"MDU6SXNzdWU3MjI2ODY3NTc=","number":16045,"title":"Attaching a table with non-existent ZK path does not increase the ReadonlyReplica metric","user":{"login":"SaltTan","id":20357526,"node_id":"MDQ6VXNlcjIwMzU3NTI2","avatar_url":"https://avatars.githubusercontent.com/u/20357526?v=4","gravatar_id":"","url":"https://api.github.com/users/SaltTan","html_url":"https://github.com/SaltTan","followers_url":"https://api.github.com/users/SaltTan/followers","following_url":"https://api.github.com/users/SaltTan/following{/other_user}","gists_url":"https://api.github.com/users/SaltTan/gists{/gist_id}","starred_url":"https://api.github.com/users/SaltTan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/SaltTan/subscriptions","organizations_url":"https://api.github.com/users/SaltTan/orgs","repos_url":"https://api.github.com/users/SaltTan/repos","events_url":"https://api.github.com/users/SaltTan/events{/privacy}","received_events_url":"https://api.github.com/users/SaltTan/received_events","type":"User","site_admin":false},"labels":[{"id":1478073551,"node_id":"MDU6TGFiZWwxNDc4MDczNTUx","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-replication","name":"comp-replication","color":"b5bcff","default":false,"description":"Replicated tables"},{"id":1575085465,"node_id":"MDU6TGFiZWwxNTc1MDg1NDY1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/unexpected%20behaviour","name":"unexpected behaviour","color":"e088ca","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2020-10-15T21:25:20Z","updated_at":"2020-10-16T06:25:00Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"```\r\nATTACH TABLE test_no_zk\r\n(\r\n    `i` Int8,\r\n    `d` Date\r\n)\r\nENGINE = ReplicatedMergeTree('no_zk', 'replica')\r\nORDER BY tuple()\r\n\r\nOk.\r\n\r\nSHOW CREATE TABLE test_no_zk\r\n\r\n┌─statement──────────────────────────────────┐\r\n│ CREATE TABLE default.test_no_zk\r\n(\r\n    `i` Int8,\r\n    `d` Date\r\n)\r\nENGINE = ReplicatedMergeTree('no_zk', 'replica')\r\nORDER BY tuple()\r\nSETTINGS index_granularity = 8192\r\n└─────────────────────────────────────────────┘\r\n\r\nINSERT INTO test_no_zk VALUES (1, today())\r\n\r\nReceived exception from server (version 20.9.3):\r\nCode: 242. DB::Exception: Received from localhost:9000. DB::Exception: Table is in readonly mode (zookeeper path: /no_zk).\r\n\r\nSELECT\r\n    metric,\r\n    value\r\nFROM system.metrics\r\nWHERE metric = 'ReadonlyReplica'\r\n\r\n┌─metric──────────┬─value─┐\r\n│ ReadonlyReplica │     0 │\r\n└─────────────────┴───────┘\r\n```","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16045/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16045/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16037","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16037/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16037/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16037/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/16037","id":722577758,"node_id":"MDU6SXNzdWU3MjI1Nzc3NTg=","number":16037,"title":"How ClickHouse does deduplication internally? ","user":{"login":"roohitavaf","id":462402,"node_id":"MDQ6VXNlcjQ2MjQwMg==","avatar_url":"https://avatars.githubusercontent.com/u/462402?v=4","gravatar_id":"","url":"https://api.github.com/users/roohitavaf","html_url":"https://github.com/roohitavaf","followers_url":"https://api.github.com/users/roohitavaf/followers","following_url":"https://api.github.com/users/roohitavaf/following{/other_user}","gists_url":"https://api.github.com/users/roohitavaf/gists{/gist_id}","starred_url":"https://api.github.com/users/roohitavaf/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/roohitavaf/subscriptions","organizations_url":"https://api.github.com/users/roohitavaf/orgs","repos_url":"https://api.github.com/users/roohitavaf/repos","events_url":"https://api.github.com/users/roohitavaf/events{/privacy}","received_events_url":"https://api.github.com/users/roohitavaf/received_events","type":"User","site_admin":false},"labels":[{"id":386401510,"node_id":"MDU6TGFiZWwzODY0MDE1MTA=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/question","name":"question","color":"bfdadc","default":true,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":9,"created_at":"2020-10-15T18:42:13Z","updated_at":"2020-10-23T05:24:16Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Hi, \r\n\r\nBased on documentation: https://clickhouse.tech/docs/en/engines/table-engines/mergetree-family/replication/\r\nI know ClickHouse does deduplication for identical blocks which is great. My question is how internally ClickHouse does it and how reliable it is? \r\n\r\nI guess I read somewhere in this repository that it stores block hashes to the Zookeeper and uses these hashes to deduplicate. My question is, does it do it atomically with writing the block? What if a failure happen in the middle of loading the block and writing its hash to the Zookeeper? Could it cause any data duplication or data loss? \r\n\r\nI think this should be the process (please correct me, if it is different): \r\n\r\n1. read block\r\n2. compute block hash\r\n3. write block hash to ZK\r\n4. if success - > write block itself -> return(success)\r\n5. if not -> duplicate - > return (success?) (I think)\r\n\r\nMy question is what if there is a failure after step 3. To avoid data loss/duplication, I think ClickHouse must guarantee atomicity for 1) writing the block 2) writing its hash to the Zookeeper. Does it guarantee it? \r\n\r\nDoes ClickHouse use a WAL to guarantee atomicity for writing a block? Is writing to Zookeeper is also recorded on the WAL? \r\n\r\nThanks\r\n\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16037/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/16037/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/15995","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/15995/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/15995/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/15995/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/15995","id":722101118,"node_id":"MDU6SXNzdWU3MjIxMDExMTg=","number":15995,"title":"Exception when using optimize_skip_unused_shards = 1","user":{"login":"chripede","id":406836,"node_id":"MDQ6VXNlcjQwNjgzNg==","avatar_url":"https://avatars.githubusercontent.com/u/406836?v=4","gravatar_id":"","url":"https://api.github.com/users/chripede","html_url":"https://github.com/chripede","followers_url":"https://api.github.com/users/chripede/followers","following_url":"https://api.github.com/users/chripede/following{/other_user}","gists_url":"https://api.github.com/users/chripede/gists{/gist_id}","starred_url":"https://api.github.com/users/chripede/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/chripede/subscriptions","organizations_url":"https://api.github.com/users/chripede/orgs","repos_url":"https://api.github.com/users/chripede/repos","events_url":"https://api.github.com/users/chripede/events{/privacy}","received_events_url":"https://api.github.com/users/chripede/received_events","type":"User","site_admin":false},"labels":[{"id":1575085465,"node_id":"MDU6TGFiZWwxNTc1MDg1NDY1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/unexpected%20behaviour","name":"unexpected behaviour","color":"e088ca","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2020-10-15T08:05:44Z","updated_at":"2020-10-28T07:56:30Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"We have this query\r\n```\r\nSELECT sum(if(inner_distributed.id != 0, 1, 0)) AS total,\r\n       inner_distributed.date            as date\r\nFROM outer_distributed AS outer_distributed FINAL\r\n         LEFT JOIN (SELECT inner_distributed.outer_id  AS outer_id,\r\n                           inner_distributed.id          AS id,\r\n                           inner_distributed.date AS date\r\n                    FROM inner_distributed AS inner_distributed FINAL\r\n                    WHERE inner_distributed.organization_id = 15078) AS inner_distributed\r\n                   ON inner_distributed.outer_id = outer_distributed.id\r\nWHERE outer_distributed.organization_id = 15078\r\n  AND date != toDate('1970-01-01')\r\nGROUP BY date\r\nORDER BY date DESC\r\n    SETTINGS distributed_product_mode = 'local', optimize_skip_unused_shards = 1\r\n```\r\nWhen run it produces an exception `Code: 47. DB::Exception: Received from localhost:9000. DB::Exception: Missing columns: 'date' while processing query`\r\n\r\nHowever if we remove `optimize_skip_unused_shards` it runs without problems.\r\n\r\nWe are using version 20.9.3\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/15995/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/15995/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/15990","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/15990/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/15990/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/15990/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/15990","id":721917344,"node_id":"MDU6SXNzdWU3MjE5MTczNDQ=","number":15990,"title":"how to create table structure follow nested protobuf message？","user":{"login":"lddlww","id":27006237,"node_id":"MDQ6VXNlcjI3MDA2MjM3","avatar_url":"https://avatars.githubusercontent.com/u/27006237?v=4","gravatar_id":"","url":"https://api.github.com/users/lddlww","html_url":"https://github.com/lddlww","followers_url":"https://api.github.com/users/lddlww/followers","following_url":"https://api.github.com/users/lddlww/following{/other_user}","gists_url":"https://api.github.com/users/lddlww/gists{/gist_id}","starred_url":"https://api.github.com/users/lddlww/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/lddlww/subscriptions","organizations_url":"https://api.github.com/users/lddlww/orgs","repos_url":"https://api.github.com/users/lddlww/repos","events_url":"https://api.github.com/users/lddlww/events{/privacy}","received_events_url":"https://api.github.com/users/lddlww/received_events","type":"User","site_admin":false},"labels":[{"id":386401510,"node_id":"MDU6TGFiZWwzODY0MDE1MTA=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/question","name":"question","color":"bfdadc","default":true,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2020-10-15T02:19:46Z","updated_at":"2020-10-15T02:19:46Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"i have follow proto file，like：\r\n```\r\nsyntax=\"proto3\";\r\n\r\nmessage Mth{\r\n    repeated Sth ts = 1;\r\n};\r\n\r\nmessage Sth{\r\n    repeated Label label = 1;\r\n};\r\n\r\nmessage Label{\r\n   string name = 1;\r\n   string  value = 2;\r\n};\r\n```\r\n\r\nhow can i create table structure to map above ```Mth message```?","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/15990/reactions","total_count":2,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/15990/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/15931","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/15931/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/15931/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/15931/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/15931","id":720377008,"node_id":"MDU6SXNzdWU3MjAzNzcwMDg=","number":15931,"title":"groupBitmapAndState from distributed table","user":{"login":"phhcer","id":38745926,"node_id":"MDQ6VXNlcjM4NzQ1OTI2","avatar_url":"https://avatars.githubusercontent.com/u/38745926?v=4","gravatar_id":"","url":"https://api.github.com/users/phhcer","html_url":"https://github.com/phhcer","followers_url":"https://api.github.com/users/phhcer/followers","following_url":"https://api.github.com/users/phhcer/following{/other_user}","gists_url":"https://api.github.com/users/phhcer/gists{/gist_id}","starred_url":"https://api.github.com/users/phhcer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/phhcer/subscriptions","organizations_url":"https://api.github.com/users/phhcer/orgs","repos_url":"https://api.github.com/users/phhcer/repos","events_url":"https://api.github.com/users/phhcer/events{/privacy}","received_events_url":"https://api.github.com/users/phhcer/received_events","type":"User","site_admin":false},"labels":[{"id":386401510,"node_id":"MDU6TGFiZWwzODY0MDE1MTA=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/question","name":"question","color":"bfdadc","default":true,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2020-10-13T14:55:43Z","updated_at":"2021-12-14T10:33:49Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"I have a distributed table like this and local table similar schema.\r\n```\r\nCREATE TABLE test_dis (\r\n    ds String, \r\n    rbm AggregateFunction(groupBitmap, UInt32), \r\n    dim String\r\n) ENGINE = Distributed(cluster, test, test, rand())\r\n```\r\ncolumn  rbm is generated with this sql\r\n```\r\nselect\r\n    ds,\r\n    groupBitmapState(id) as rbm,\r\n    dim\r\nfrom a\r\ngroup by \r\n    ds,\r\n    dim\r\n```\r\nwhen I want to get the Intersection rbm from a distributed table like this\r\n```\r\nselect\r\n    groupBitmapAnd(rbm)\r\nfrom test_dis\r\n```\r\nIt raised Error:\r\n\r\n> Code: 43. DB::Exception: Received from x.x.x.x:9000. DB::Exception: The type AggregateFunction(groupBitmap, UInt32) of argument for aggregate function groupBitmap is illegal, because it cannot be used in Bitmap operations: while receiving packet from x.x.x.x:9000: While executing SourceFromInputStream.\r\n\r\nHowever, when I use subquery to pull all data from remote machine to local \r\n\r\n```\r\nselect\r\n    groupBitmapAnd(rbm)\r\nfrom (\r\n    select\r\n        rbm\r\n    from\r\n        test_dis\r\n)\r\n```\r\nIt works! Is there any solution to avoid pull all data from remote machine by using subquery ?","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/15931/reactions","total_count":2,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/15931/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/15927","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/15927/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/15927/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/15927/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/15927","id":720177377,"node_id":"MDU6SXNzdWU3MjAxNzczNzc=","number":15927,"title":"arrayZip accept tuple([],[]) as input parameter","user":{"login":"UnamedRus","id":9449405,"node_id":"MDQ6VXNlcjk0NDk0MDU=","avatar_url":"https://avatars.githubusercontent.com/u/9449405?v=4","gravatar_id":"","url":"https://api.github.com/users/UnamedRus","html_url":"https://github.com/UnamedRus","followers_url":"https://api.github.com/users/UnamedRus/followers","following_url":"https://api.github.com/users/UnamedRus/following{/other_user}","gists_url":"https://api.github.com/users/UnamedRus/gists{/gist_id}","starred_url":"https://api.github.com/users/UnamedRus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/UnamedRus/subscriptions","organizations_url":"https://api.github.com/users/UnamedRus/orgs","repos_url":"https://api.github.com/users/UnamedRus/repos","events_url":"https://api.github.com/users/UnamedRus/events{/privacy}","received_events_url":"https://api.github.com/users/UnamedRus/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":1365579236,"node_id":"MDU6TGFiZWwxMzY1NTc5MjM2","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/minor","name":"minor","color":"FFF8F8","default":false,"description":"Priority: minor"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2020-10-13T12:12:54Z","updated_at":"2021-01-02T14:30:30Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"**Use case**\r\nSumMap function returns tuple([],[]) as their result value, and it would be better to have the arrayZip function accept that without any kind of transformation.\r\n\r\n**Describe the solution you'd like**\r\narrayZip would work with tuple([],[])\r\n\r\n**Describe alternatives you've considered**\r\nUse arrayZip((sumMap() AS tpl).1, tpl.2) instead\r\n\r\nExample query:\r\n```\r\nSELECT\r\n    database,\r\n    table,\r\n    formatReadableSize(compressed_bytes) AS readable,\r\n    sum(data_compressed_bytes) AS compressed_bytes,\r\n    sum(data_uncompressed_bytes) AS uncompressed_bytes,\r\n    round(uncompressed_bytes / compressed_bytes, 3) AS ratio,\r\n    sum(rows) as sum_rows,\r\n    arrayZip((sumMap(([partition_id], [rows])) AS tpl).1, tpl.2) as rows_per_partition\r\nFROM system.parts\r\nWHERE database LIKE '%'\r\nGROUP BY\r\n    database,\r\n    table\r\nORDER BY compressed_bytes DESC\r\n```\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/15927/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/15927/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/15793","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/15793/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/15793/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/15793/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/15793","id":718265197,"node_id":"MDU6SXNzdWU3MTgyNjUxOTc=","number":15793,"title":"TSV/CSV export default value as Null setting.","user":{"login":"UnamedRus","id":9449405,"node_id":"MDQ6VXNlcjk0NDk0MDU=","avatar_url":"https://avatars.githubusercontent.com/u/9449405?v=4","gravatar_id":"","url":"https://api.github.com/users/UnamedRus","html_url":"https://github.com/UnamedRus","followers_url":"https://api.github.com/users/UnamedRus/followers","following_url":"https://api.github.com/users/UnamedRus/following{/other_user}","gists_url":"https://api.github.com/users/UnamedRus/gists{/gist_id}","starred_url":"https://api.github.com/users/UnamedRus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/UnamedRus/subscriptions","organizations_url":"https://api.github.com/users/UnamedRus/orgs","repos_url":"https://api.github.com/users/UnamedRus/repos","events_url":"https://api.github.com/users/UnamedRus/events{/privacy}","received_events_url":"https://api.github.com/users/UnamedRus/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":1365579236,"node_id":"MDU6TGFiZWwxMzY1NTc5MjM2","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/minor","name":"minor","color":"FFF8F8","default":false,"description":"Priority: minor"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2020-10-09T16:09:38Z","updated_at":"2020-10-14T11:12:21Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Give the user the ability to set settings which would convert default values (0 for Int*, \"\" for String) to null in FORMAT TSV/CSV.\r\n\r\n**Use case**\r\nUsers don't want to distinguish nulls from empty strings, but prefer to have in exported data nulls instead of default values.\r\n\r\n**Describe the solution you'd like**\r\nAdd a setting which would allow the user to perform that kind of conversion.\r\n\r\n**Describe alternatives you've considered**\r\nUse the function nullIf(column,\"\") instead.\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/15793/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/15793/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/15765","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/15765/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/15765/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/15765/events","html_url":"https://github.com/ClickHouse/ClickHouse/pull/15765","id":717499230,"node_id":"MDExOlB1bGxSZXF1ZXN0NTAwMDUwOTgz","number":15765,"title":"Introduce dynamic TLS server context","user":{"login":"johnskopis","id":1578524,"node_id":"MDQ6VXNlcjE1Nzg1MjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1578524?v=4","gravatar_id":"","url":"https://api.github.com/users/johnskopis","html_url":"https://github.com/johnskopis","followers_url":"https://api.github.com/users/johnskopis/followers","following_url":"https://api.github.com/users/johnskopis/following{/other_user}","gists_url":"https://api.github.com/users/johnskopis/gists{/gist_id}","starred_url":"https://api.github.com/users/johnskopis/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/johnskopis/subscriptions","organizations_url":"https://api.github.com/users/johnskopis/orgs","repos_url":"https://api.github.com/users/johnskopis/repos","events_url":"https://api.github.com/users/johnskopis/events{/privacy}","received_events_url":"https://api.github.com/users/johnskopis/received_events","type":"User","site_admin":false},"labels":[{"id":1304141686,"node_id":"MDU6TGFiZWwxMzA0MTQxNjg2","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/pr-improvement","name":"pr-improvement","color":"007700","default":false,"description":"Pull request with some product improvements"}],"state":"open","locked":false,"assignee":{"login":"alexey-milovidov","id":18581488,"node_id":"MDQ6VXNlcjE4NTgxNDg4","avatar_url":"https://avatars.githubusercontent.com/u/18581488?v=4","gravatar_id":"","url":"https://api.github.com/users/alexey-milovidov","html_url":"https://github.com/alexey-milovidov","followers_url":"https://api.github.com/users/alexey-milovidov/followers","following_url":"https://api.github.com/users/alexey-milovidov/following{/other_user}","gists_url":"https://api.github.com/users/alexey-milovidov/gists{/gist_id}","starred_url":"https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexey-milovidov/subscriptions","organizations_url":"https://api.github.com/users/alexey-milovidov/orgs","repos_url":"https://api.github.com/users/alexey-milovidov/repos","events_url":"https://api.github.com/users/alexey-milovidov/events{/privacy}","received_events_url":"https://api.github.com/users/alexey-milovidov/received_events","type":"User","site_admin":false},"assignees":[{"login":"alexey-milovidov","id":18581488,"node_id":"MDQ6VXNlcjE4NTgxNDg4","avatar_url":"https://avatars.githubusercontent.com/u/18581488?v=4","gravatar_id":"","url":"https://api.github.com/users/alexey-milovidov","html_url":"https://github.com/alexey-milovidov","followers_url":"https://api.github.com/users/alexey-milovidov/followers","following_url":"https://api.github.com/users/alexey-milovidov/following{/other_user}","gists_url":"https://api.github.com/users/alexey-milovidov/gists{/gist_id}","starred_url":"https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexey-milovidov/subscriptions","organizations_url":"https://api.github.com/users/alexey-milovidov/orgs","repos_url":"https://api.github.com/users/alexey-milovidov/repos","events_url":"https://api.github.com/users/alexey-milovidov/events{/privacy}","received_events_url":"https://api.github.com/users/alexey-milovidov/received_events","type":"User","site_admin":false},{"login":"FArthur-cmd","id":58165623,"node_id":"MDQ6VXNlcjU4MTY1NjIz","avatar_url":"https://avatars.githubusercontent.com/u/58165623?v=4","gravatar_id":"","url":"https://api.github.com/users/FArthur-cmd","html_url":"https://github.com/FArthur-cmd","followers_url":"https://api.github.com/users/FArthur-cmd/followers","following_url":"https://api.github.com/users/FArthur-cmd/following{/other_user}","gists_url":"https://api.github.com/users/FArthur-cmd/gists{/gist_id}","starred_url":"https://api.github.com/users/FArthur-cmd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/FArthur-cmd/subscriptions","organizations_url":"https://api.github.com/users/FArthur-cmd/orgs","repos_url":"https://api.github.com/users/FArthur-cmd/repos","events_url":"https://api.github.com/users/FArthur-cmd/events{/privacy}","received_events_url":"https://api.github.com/users/FArthur-cmd/received_events","type":"User","site_admin":false}],"milestone":null,"comments":14,"created_at":"2020-10-08T16:38:12Z","updated_at":"2021-12-09T14:59:32Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"draft":true,"pull_request":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/pulls/15765","html_url":"https://github.com/ClickHouse/ClickHouse/pull/15765","diff_url":"https://github.com/ClickHouse/ClickHouse/pull/15765.diff","patch_url":"https://github.com/ClickHouse/ClickHouse/pull/15765.patch","merged_at":null},"body":"I hereby agree to the terms of the CLA available at: https://yandex.ru/legal/cla/?lang=en\r\n\r\nChangelog category (leave one):\r\n- Improvement\r\n\r\n\r\nChangelog entry (a user-readable short description of the changes that goes to CHANGELOG.md):\r\nDynamic reload of server TLS certificates on config reload. Closes #15764.\r\n\r\n...\r\n\r\n\r\nDetailed description / Documentation draft:\r\nThis is a first pass at setting an x509 keypair dynamically.\r\n\r\nI'm not so sure it should be a singleton (especaially because it depends\r\non the SSLManager singleton).\r\n\r\nNeeds more better error handling.\r\n\r\nFunctionally, it works. Simply change the cert/key path in config, or\r\ntouch cert; touch config.\r\n\r\n\r\n\r\n...\r\n\r\nBy adding documentation, you'll allow users to try your new feature immediately, not when someone else will have time to document it later. Documentation is necessary for all features that affect user experience in any way. You can add brief documentation draft above, or add documentation right into your patch as Markdown files in [docs](https://github.com/ClickHouse/ClickHouse/tree/master/docs) folder.\r\n\r\nIf you are doing this for the first time, it's recommended to read the lightweight [Contributing to ClickHouse Documentation](https://github.com/ClickHouse/ClickHouse/tree/master/docs/README.md) guide first.\r\n\r\n\r\nInformation about CI checks: https://clickhouse.tech/docs/en/development/continuous-integration/\r\n\r\nfixes #15764","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/15765/reactions","total_count":4,"+1":4,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/15765/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/15764","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/15764/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/15764/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/15764/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/15764","id":717487406,"node_id":"MDU6SXNzdWU3MTc0ODc0MDY=","number":15764,"title":"Dynamically reload TLS certificates","user":{"login":"johnskopis","id":1578524,"node_id":"MDQ6VXNlcjE1Nzg1MjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1578524?v=4","gravatar_id":"","url":"https://api.github.com/users/johnskopis","html_url":"https://github.com/johnskopis","followers_url":"https://api.github.com/users/johnskopis/followers","following_url":"https://api.github.com/users/johnskopis/following{/other_user}","gists_url":"https://api.github.com/users/johnskopis/gists{/gist_id}","starred_url":"https://api.github.com/users/johnskopis/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/johnskopis/subscriptions","organizations_url":"https://api.github.com/users/johnskopis/orgs","repos_url":"https://api.github.com/users/johnskopis/repos","events_url":"https://api.github.com/users/johnskopis/events{/privacy}","received_events_url":"https://api.github.com/users/johnskopis/received_events","type":"User","site_admin":false},"labels":[{"id":845247686,"node_id":"MDU6TGFiZWw4NDUyNDc2ODY=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/usability","name":"usability","color":"ebf28c","default":false,"description":""},{"id":1507888214,"node_id":"MDU6TGFiZWwxNTA3ODg4MjE0","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/st-accepted","name":"st-accepted","color":"e5b890","default":false,"description":"The issue is in our backlog, ready to take"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2020-10-08T16:20:50Z","updated_at":"2021-07-07T00:11:24Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"**Describe the issue**\r\nWe should be able to reload TLS certificates without restarting clickhouse. (will send WIP PR shortly)\r\n\r\nrelates to #14106","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/15764/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/15764/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/15753","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/15753/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/15753/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/15753/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/15753","id":717231544,"node_id":"MDU6SXNzdWU3MTcyMzE1NDQ=","number":15753,"title":"Website: bug in markup: part of the link is not clickable.","user":{"login":"alexey-milovidov","id":18581488,"node_id":"MDQ6VXNlcjE4NTgxNDg4","avatar_url":"https://avatars.githubusercontent.com/u/18581488?v=4","gravatar_id":"","url":"https://api.github.com/users/alexey-milovidov","html_url":"https://github.com/alexey-milovidov","followers_url":"https://api.github.com/users/alexey-milovidov/followers","following_url":"https://api.github.com/users/alexey-milovidov/following{/other_user}","gists_url":"https://api.github.com/users/alexey-milovidov/gists{/gist_id}","starred_url":"https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexey-milovidov/subscriptions","organizations_url":"https://api.github.com/users/alexey-milovidov/orgs","repos_url":"https://api.github.com/users/alexey-milovidov/repos","events_url":"https://api.github.com/users/alexey-milovidov/events{/privacy}","received_events_url":"https://api.github.com/users/alexey-milovidov/received_events","type":"User","site_admin":false},"labels":[{"id":785082162,"node_id":"MDU6TGFiZWw3ODUwODIxNjI=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-documentation","name":"comp-documentation","color":"b5bcff","default":false,"description":"Used to run automatic builds of the documentation"},{"id":2668414603,"node_id":"MDU6TGFiZWwyNjY4NDE0NjAz","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/bug%20on%20website","name":"bug on website","color":"EA39C8","default":false,"description":""}],"state":"open","locked":false,"assignee":{"login":"rfraposa","id":5323324,"node_id":"MDQ6VXNlcjUzMjMzMjQ=","avatar_url":"https://avatars.githubusercontent.com/u/5323324?v=4","gravatar_id":"","url":"https://api.github.com/users/rfraposa","html_url":"https://github.com/rfraposa","followers_url":"https://api.github.com/users/rfraposa/followers","following_url":"https://api.github.com/users/rfraposa/following{/other_user}","gists_url":"https://api.github.com/users/rfraposa/gists{/gist_id}","starred_url":"https://api.github.com/users/rfraposa/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rfraposa/subscriptions","organizations_url":"https://api.github.com/users/rfraposa/orgs","repos_url":"https://api.github.com/users/rfraposa/repos","events_url":"https://api.github.com/users/rfraposa/events{/privacy}","received_events_url":"https://api.github.com/users/rfraposa/received_events","type":"User","site_admin":false},"assignees":[{"login":"rfraposa","id":5323324,"node_id":"MDQ6VXNlcjUzMjMzMjQ=","avatar_url":"https://avatars.githubusercontent.com/u/5323324?v=4","gravatar_id":"","url":"https://api.github.com/users/rfraposa","html_url":"https://github.com/rfraposa","followers_url":"https://api.github.com/users/rfraposa/followers","following_url":"https://api.github.com/users/rfraposa/following{/other_user}","gists_url":"https://api.github.com/users/rfraposa/gists{/gist_id}","starred_url":"https://api.github.com/users/rfraposa/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rfraposa/subscriptions","organizations_url":"https://api.github.com/users/rfraposa/orgs","repos_url":"https://api.github.com/users/rfraposa/repos","events_url":"https://api.github.com/users/rfraposa/events{/privacy}","received_events_url":"https://api.github.com/users/rfraposa/received_events","type":"User","site_admin":false}],"milestone":null,"comments":3,"created_at":"2020-10-08T10:45:28Z","updated_at":"2022-01-16T03:23:33Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"Video:\r\nhttps://drive.google.com/file/d/1V2aSELoi4X3aKJerJd30zM9EOBL00mu9/view?usp=sharing","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/15753/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/15753/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/15742","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/15742/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/15742/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/15742/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/15742","id":716804325,"node_id":"MDU6SXNzdWU3MTY4MDQzMjU=","number":15742,"title":"inactive DROP (ed) PARTITION (parts) are resurrected after CH failure and restart","user":{"login":"den-crane","id":19737682,"node_id":"MDQ6VXNlcjE5NzM3Njgy","avatar_url":"https://avatars.githubusercontent.com/u/19737682?v=4","gravatar_id":"","url":"https://api.github.com/users/den-crane","html_url":"https://github.com/den-crane","followers_url":"https://api.github.com/users/den-crane/followers","following_url":"https://api.github.com/users/den-crane/following{/other_user}","gists_url":"https://api.github.com/users/den-crane/gists{/gist_id}","starred_url":"https://api.github.com/users/den-crane/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/den-crane/subscriptions","organizations_url":"https://api.github.com/users/den-crane/orgs","repos_url":"https://api.github.com/users/den-crane/repos","events_url":"https://api.github.com/users/den-crane/events{/privacy}","received_events_url":"https://api.github.com/users/den-crane/received_events","type":"User","site_admin":false},"labels":[{"id":845247686,"node_id":"MDU6TGFiZWw4NDUyNDc2ODY=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/usability","name":"usability","color":"ebf28c","default":false,"description":""},{"id":3679617212,"node_id":"LA_kwDOA5dJV87bUoC8","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/yandex","name":"yandex","color":"ffcc00","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":10,"created_at":"2020-10-07T19:46:16Z","updated_at":"2022-01-17T19:23:44Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"body":"```\r\ncreate table xxx(A Int64, S String) Engine=MergeTree partition by A order by S;\r\ninsert into xxx select 1, toString(number) from numbers(10000000);\r\nalter table xxx drop partition 1;\r\n\r\nselect count() from xxx\r\n┌─count()─┐\r\n│       0 │\r\n└─────────┘\r\n\r\nsystem kill;\r\n\r\nsudo /etc/init.d/clickhouse-server restart\r\n\r\nselect count() from xxx\r\n┌─count()─┐\r\n│ 6291270 │\r\n└─────────┘\r\n\r\n```\r\n\r\nrelated: https://github.com/ClickHouse/ClickHouse/issues/8584\r\n\r\nalter table xxx drop partition 1  --- removes from a disk active parts and leaves inactive.\r\n\r\nby design.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/15742/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/15742/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/15621","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/15621/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/15621/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/15621/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/15621","id":714784431,"node_id":"MDU6SXNzdWU3MTQ3ODQ0MzE=","number":15621,"title":"Row policy for distributed and replicated tables","user":{"login":"keerthana-kannan-ch","id":68999933,"node_id":"MDQ6VXNlcjY4OTk5OTMz","avatar_url":"https://avatars.githubusercontent.com/u/68999933?v=4","gravatar_id":"","url":"https://api.github.com/users/keerthana-kannan-ch","html_url":"https://github.com/keerthana-kannan-ch","followers_url":"https://api.github.com/users/keerthana-kannan-ch/followers","following_url":"https://api.github.com/users/keerthana-kannan-ch/following{/other_user}","gists_url":"https://api.github.com/users/keerthana-kannan-ch/gists{/gist_id}","starred_url":"https://api.github.com/users/keerthana-kannan-ch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keerthana-kannan-ch/subscriptions","organizations_url":"https://api.github.com/users/keerthana-kannan-ch/orgs","repos_url":"https://api.github.com/users/keerthana-kannan-ch/repos","events_url":"https://api.github.com/users/keerthana-kannan-ch/events{/privacy}","received_events_url":"https://api.github.com/users/keerthana-kannan-ch/received_events","type":"User","site_admin":false},"labels":[{"id":386401510,"node_id":"MDU6TGFiZWwzODY0MDE1MTA=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/question","name":"question","color":"bfdadc","default":true,"description":""},{"id":2011606513,"node_id":"MDU6TGFiZWwyMDExNjA2NTEz","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-rbac","name":"comp-rbac","color":"b5bcff","default":false,"description":"Access control related"}],"state":"open","locked":false,"assignee":{"login":"vitlibar","id":45142681,"node_id":"MDQ6VXNlcjQ1MTQyNjgx","avatar_url":"https://avatars.githubusercontent.com/u/45142681?v=4","gravatar_id":"","url":"https://api.github.com/users/vitlibar","html_url":"https://github.com/vitlibar","followers_url":"https://api.github.com/users/vitlibar/followers","following_url":"https://api.github.com/users/vitlibar/following{/other_user}","gists_url":"https://api.github.com/users/vitlibar/gists{/gist_id}","starred_url":"https://api.github.com/users/vitlibar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vitlibar/subscriptions","organizations_url":"https://api.github.com/users/vitlibar/orgs","repos_url":"https://api.github.com/users/vitlibar/repos","events_url":"https://api.github.com/users/vitlibar/events{/privacy}","received_events_url":"https://api.github.com/users/vitlibar/received_events","type":"User","site_admin":false},"assignees":[{"login":"vitlibar","id":45142681,"node_id":"MDQ6VXNlcjQ1MTQyNjgx","avatar_url":"https://avatars.githubusercontent.com/u/45142681?v=4","gravatar_id":"","url":"https://api.github.com/users/vitlibar","html_url":"https://github.com/vitlibar","followers_url":"https://api.github.com/users/vitlibar/followers","following_url":"https://api.github.com/users/vitlibar/following{/other_user}","gists_url":"https://api.github.com/users/vitlibar/gists{/gist_id}","starred_url":"https://api.github.com/users/vitlibar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vitlibar/subscriptions","organizations_url":"https://api.github.com/users/vitlibar/orgs","repos_url":"https://api.github.com/users/vitlibar/repos","events_url":"https://api.github.com/users/vitlibar/events{/privacy}","received_events_url":"https://api.github.com/users/vitlibar/received_events","type":"User","site_admin":false}],"milestone":null,"comments":2,"created_at":"2020-10-05T12:11:54Z","updated_at":"2021-04-12T10:43:27Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Hi,\r\n\r\nI am trying to make use of the row policy feature to filter data based on the user running the query. I want to implement the policy on a replicated table with a distributed view on top of it.\r\n\r\nHow do I create the policy so that it is implemented across all the shards and replicas of a table? Is it possible to do so?\r\n\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/15621/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/15621/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/15609","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/15609/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/15609/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/15609/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/15609","id":714628651,"node_id":"MDU6SXNzdWU3MTQ2Mjg2NTE=","number":15609,"title":"Validate Darwin build with Darling.","user":{"login":"alexey-milovidov","id":18581488,"node_id":"MDQ6VXNlcjE4NTgxNDg4","avatar_url":"https://avatars.githubusercontent.com/u/18581488?v=4","gravatar_id":"","url":"https://api.github.com/users/alexey-milovidov","html_url":"https://github.com/alexey-milovidov","followers_url":"https://api.github.com/users/alexey-milovidov/followers","following_url":"https://api.github.com/users/alexey-milovidov/following{/other_user}","gists_url":"https://api.github.com/users/alexey-milovidov/gists{/gist_id}","starred_url":"https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexey-milovidov/subscriptions","organizations_url":"https://api.github.com/users/alexey-milovidov/orgs","repos_url":"https://api.github.com/users/alexey-milovidov/repos","events_url":"https://api.github.com/users/alexey-milovidov/events{/privacy}","received_events_url":"https://api.github.com/users/alexey-milovidov/received_events","type":"User","site_admin":false},"labels":[{"id":521113272,"node_id":"MDU6TGFiZWw1MjExMTMyNzI=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/build","name":"build","color":"800000","default":false,"description":""},{"id":1464781898,"node_id":"MDU6TGFiZWwxNDY0NzgxODk4","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/st-in-progress","name":"st-in-progress","color":"e5b890","default":false,"description":"We are working on the issue currenlty"},{"id":1725813383,"node_id":"MDU6TGFiZWwxNzI1ODEzMzgz","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-darwin","name":"comp-darwin","color":"b5bcff","default":false,"description":"Darwin-related builds and cross-builds"}],"state":"open","locked":false,"assignee":{"login":"alexey-milovidov","id":18581488,"node_id":"MDQ6VXNlcjE4NTgxNDg4","avatar_url":"https://avatars.githubusercontent.com/u/18581488?v=4","gravatar_id":"","url":"https://api.github.com/users/alexey-milovidov","html_url":"https://github.com/alexey-milovidov","followers_url":"https://api.github.com/users/alexey-milovidov/followers","following_url":"https://api.github.com/users/alexey-milovidov/following{/other_user}","gists_url":"https://api.github.com/users/alexey-milovidov/gists{/gist_id}","starred_url":"https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexey-milovidov/subscriptions","organizations_url":"https://api.github.com/users/alexey-milovidov/orgs","repos_url":"https://api.github.com/users/alexey-milovidov/repos","events_url":"https://api.github.com/users/alexey-milovidov/events{/privacy}","received_events_url":"https://api.github.com/users/alexey-milovidov/received_events","type":"User","site_admin":false},"assignees":[{"login":"alexey-milovidov","id":18581488,"node_id":"MDQ6VXNlcjE4NTgxNDg4","avatar_url":"https://avatars.githubusercontent.com/u/18581488?v=4","gravatar_id":"","url":"https://api.github.com/users/alexey-milovidov","html_url":"https://github.com/alexey-milovidov","followers_url":"https://api.github.com/users/alexey-milovidov/followers","following_url":"https://api.github.com/users/alexey-milovidov/following{/other_user}","gists_url":"https://api.github.com/users/alexey-milovidov/gists{/gist_id}","starred_url":"https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexey-milovidov/subscriptions","organizations_url":"https://api.github.com/users/alexey-milovidov/orgs","repos_url":"https://api.github.com/users/alexey-milovidov/repos","events_url":"https://api.github.com/users/alexey-milovidov/events{/privacy}","received_events_url":"https://api.github.com/users/alexey-milovidov/received_events","type":"User","site_admin":false}],"milestone":null,"comments":22,"created_at":"2020-10-05T08:21:08Z","updated_at":"2022-01-29T20:09:11Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"https://github.com/darlinghq/darling\r\n\r\nIt requires kernel module - not applicable for CI environment.\r\nWe can check manually.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/15609/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/15609/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/15498","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/15498/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/15498/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/15498/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/15498","id":712500618,"node_id":"MDU6SXNzdWU3MTI1MDA2MTg=","number":15498,"title":"Add Base32 functions","user":{"login":"burov4j","id":31802895,"node_id":"MDQ6VXNlcjMxODAyODk1","avatar_url":"https://avatars.githubusercontent.com/u/31802895?v=4","gravatar_id":"","url":"https://api.github.com/users/burov4j","html_url":"https://github.com/burov4j","followers_url":"https://api.github.com/users/burov4j/followers","following_url":"https://api.github.com/users/burov4j/following{/other_user}","gists_url":"https://api.github.com/users/burov4j/gists{/gist_id}","starred_url":"https://api.github.com/users/burov4j/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/burov4j/subscriptions","organizations_url":"https://api.github.com/users/burov4j/orgs","repos_url":"https://api.github.com/users/burov4j/repos","events_url":"https://api.github.com/users/burov4j/events{/privacy}","received_events_url":"https://api.github.com/users/burov4j/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2020-10-01T05:31:45Z","updated_at":"2021-01-31T10:00:21Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"**Use case**\r\nIt will be useful to implement functions `base32Encode`, `base32Decode` and `tryBase32Decode` just like as for base64.\r\nIn some cases we don't have ability to convert to base32 in our code. For example if we are showing query results in [metabase](https://www.metabase.com/).","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/15498/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/15498/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/15474","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/15474/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/15474/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/15474/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/15474","id":711943048,"node_id":"MDU6SXNzdWU3MTE5NDMwNDg=","number":15474,"title":"Some queries are taking more that 10-15 seconds while some are completed within few seconds","user":{"login":"John-belt","id":71723936,"node_id":"MDQ6VXNlcjcxNzIzOTM2","avatar_url":"https://avatars.githubusercontent.com/u/71723936?v=4","gravatar_id":"","url":"https://api.github.com/users/John-belt","html_url":"https://github.com/John-belt","followers_url":"https://api.github.com/users/John-belt/followers","following_url":"https://api.github.com/users/John-belt/following{/other_user}","gists_url":"https://api.github.com/users/John-belt/gists{/gist_id}","starred_url":"https://api.github.com/users/John-belt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/John-belt/subscriptions","organizations_url":"https://api.github.com/users/John-belt/orgs","repos_url":"https://api.github.com/users/John-belt/repos","events_url":"https://api.github.com/users/John-belt/events{/privacy}","received_events_url":"https://api.github.com/users/John-belt/received_events","type":"User","site_admin":false},"labels":[{"id":386401510,"node_id":"MDU6TGFiZWwzODY0MDE1MTA=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/question","name":"question","color":"bfdadc","default":true,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":13,"created_at":"2020-09-30T13:23:08Z","updated_at":"2020-10-01T09:06:14Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"On our production system we have 5 node cluster. We have 3 clickhouse nodes running on 3 hosts(circular config with replication factor of 2). **Also the table has only 5 rows and partitioned by every week. Engine: ReplicatedMergeTree**\r\n\r\n. We are inserting around 100-200K rows per batch every 1-2 seconds(Sometime concurrent inserts also happens). Performance is Good but every 4-5th query is taking 10-15secs as compare to others which take 2-3 seconds. I am trying to find out what might be bottlenecking these. No high CPU utilization or io utilization can be seen on the system. \r\nI don't find any per table which give me this type of data per query. Maybe limited number of threads are creating this kind of behaviour.\r\n\r\nIs there a way to increase the insert speed of the queries????. Maybe assigning more threads or something?? i have ample amount of RAM(128gigs) and running 40 Core, hyperthreaded system, so resource is not the problem. Just want a better insert speed\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/15474/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/15474/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/15473","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/15473/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/15473/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/15473/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/15473","id":711888520,"node_id":"MDU6SXNzdWU3MTE4ODg1MjA=","number":15473,"title":"Kafka can (still) hang during drop","user":{"login":"filimonov","id":1549571,"node_id":"MDQ6VXNlcjE1NDk1NzE=","avatar_url":"https://avatars.githubusercontent.com/u/1549571?v=4","gravatar_id":"","url":"https://api.github.com/users/filimonov","html_url":"https://github.com/filimonov","followers_url":"https://api.github.com/users/filimonov/followers","following_url":"https://api.github.com/users/filimonov/following{/other_user}","gists_url":"https://api.github.com/users/filimonov/gists{/gist_id}","starred_url":"https://api.github.com/users/filimonov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/filimonov/subscriptions","organizations_url":"https://api.github.com/users/filimonov/orgs","repos_url":"https://api.github.com/users/filimonov/repos","events_url":"https://api.github.com/users/filimonov/events{/privacy}","received_events_url":"https://api.github.com/users/filimonov/received_events","type":"User","site_admin":false},"labels":[{"id":386401505,"node_id":"MDU6TGFiZWwzODY0MDE1MDU=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/bug","name":"bug","color":"ee0701","default":true,"description":"Confirmed user-visible misbehaviour in official release"},{"id":1334071168,"node_id":"MDU6TGFiZWwxMzM0MDcxMTY4","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-kafka","name":"comp-kafka","color":"b5bcff","default":false,"description":"Kafka Engine"},{"id":2184852256,"node_id":"MDU6TGFiZWwyMTg0ODUyMjU2","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/v20.6-affected","name":"v20.6-affected","color":"c2bfff","default":false,"description":""},{"id":2266396286,"node_id":"MDU6TGFiZWwyMjY2Mzk2Mjg2","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/v20.8-affected","name":"v20.8-affected","color":"c2bfff","default":false,"description":""}],"state":"open","locked":false,"assignee":{"login":"filimonov","id":1549571,"node_id":"MDQ6VXNlcjE1NDk1NzE=","avatar_url":"https://avatars.githubusercontent.com/u/1549571?v=4","gravatar_id":"","url":"https://api.github.com/users/filimonov","html_url":"https://github.com/filimonov","followers_url":"https://api.github.com/users/filimonov/followers","following_url":"https://api.github.com/users/filimonov/following{/other_user}","gists_url":"https://api.github.com/users/filimonov/gists{/gist_id}","starred_url":"https://api.github.com/users/filimonov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/filimonov/subscriptions","organizations_url":"https://api.github.com/users/filimonov/orgs","repos_url":"https://api.github.com/users/filimonov/repos","events_url":"https://api.github.com/users/filimonov/events{/privacy}","received_events_url":"https://api.github.com/users/filimonov/received_events","type":"User","site_admin":false},"assignees":[{"login":"filimonov","id":1549571,"node_id":"MDQ6VXNlcjE1NDk1NzE=","avatar_url":"https://avatars.githubusercontent.com/u/1549571?v=4","gravatar_id":"","url":"https://api.github.com/users/filimonov","html_url":"https://github.com/filimonov","followers_url":"https://api.github.com/users/filimonov/followers","following_url":"https://api.github.com/users/filimonov/following{/other_user}","gists_url":"https://api.github.com/users/filimonov/gists{/gist_id}","starred_url":"https://api.github.com/users/filimonov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/filimonov/subscriptions","organizations_url":"https://api.github.com/users/filimonov/orgs","repos_url":"https://api.github.com/users/filimonov/repos","events_url":"https://api.github.com/users/filimonov/events{/privacy}","received_events_url":"https://api.github.com/users/filimonov/received_events","type":"User","site_admin":false}],"milestone":null,"comments":3,"created_at":"2020-09-30T12:05:39Z","updated_at":"2021-10-21T13:51:56Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"body":"20.6.6.7, on cluster table drop on 10 nodes cluster, table reads 2 topics.\r\n\r\nlog\r\n```\r\n2020-09-30\t2020-09-30 07:20:12\t513899\tBgSchPool\t46901\tTrace\t\tStorageKafka (kafka_fact_customer_session)\tTopics/partitions assigned: [ back_customer_session_v1[0:#], back_customer_session_v1[1:#], back_customer_session_v1[2:#], back_customer_session_v1[3:#], back_customer_session_v1[4:#], customer_session_v1[0:#], customer_session_v1[1:#], customer_session_v1[2:#], customer_session_v1[3:#], customer_session_v1[4:#] ]\t54436\t/home/centos/clickhouse-rpm/rpmbuild/BUILD/ClickHouse-20.6.6.7-stable/src/Storages/Kafka/ReadBufferFromKafkaConsumer.cpp; DB::ReadBufferFromKafkaConsumer::ReadBufferFromKafkaConsumer(DB::ConsumerPtr, Poco::Logger*, size_t, size_t, bool, const std::__1::atomic<bool>&, const Names&)::<lambda(const TopicPartitionList&)>\t44\r\n2020-09-30\t2020-09-30 07:20:12\t995446\tBgSchPool\t46901\tTrace\t\tStorageKafka (kafka_fact_customer_session)\tPolled batch of 35 messages. Offset position: [ back_customer_session_v1[0:#], back_customer_session_v1[1:#], back_customer_session_v1[2:#], back_customer_session_v1[3:#], back_customer_session_v1[4:#], customer_session_v1[0:565332], customer_session_v1[1:586854], customer_session_v1[2:855425], customer_session_v1[3:557099], customer_session_v1[4:678516] ]\t54436\t/home/centos/clickhouse-rpm/rpmbuild/BUILD/ClickHouse-20.6.6.7-stable/src/Storages/Kafka/ReadBufferFromKafkaConsumer.cpp; bool DB::ReadBufferFromKafkaConsumer::poll()\t387\r\n2020-09-30\t2020-09-30 07:20:13\t232282\tDDLWorker\t46957\tTrace\t2b089c5c-cc74-43ab-bd53-a79bcb05a0ac\tStorageKafka (kafka_fact_customer_session)\tWaiting for cleanup\t54436\t/home/centos/clickhouse-rpm/rpmbuild/BUILD/ClickHouse-20.6.6.7-stable/src/Storages/Kafka/StorageKafka.cpp; virtual void DB::StorageKafka::shutdown()\t270\r\n2020-09-30\t2020-09-30 07:20:13\t496429\tBgSchPool\t46901\tTrace\t\tStorageKafka (kafka_fact_customer_session)\tPolled offset INVALID (topic: back_customer_session_v1, partition: 0)\t54436\t/home/centos/clickhouse-rpm/rpmbuild/BUILD/ClickHouse-20.6.6.7-stable/src/Storages/Kafka/ReadBufferFromKafkaConsumer.cpp; DB::ReadBufferFromKafkaConsumer::commit()::<lambda(const char*, const TopicPartitionList&)>\t172\r\n2020-09-30\t2020-09-30 07:20:13\t496474\tBgSchPool\t46901\tTrace\t\tStorageKafka (kafka_fact_customer_session)\tPolled offset INVALID (topic: back_customer_session_v1, partition: 1)\t54436\t/home/centos/clickhouse-rpm/rpmbuild/BUILD/ClickHouse-20.6.6.7-stable/src/Storages/Kafka/ReadBufferFromKafkaConsumer.cpp; DB::ReadBufferFromKafkaConsumer::commit()::<lambda(const char*, const TopicPartitionList&)>\t172\r\n2020-09-30\t2020-09-30 07:20:13\t496480\tBgSchPool\t46901\tTrace\t\tStorageKafka (kafka_fact_customer_session)\tPolled offset INVALID (topic: back_customer_session_v1, partition: 2)\t54436\t/home/centos/clickhouse-rpm/rpmbuild/BUILD/ClickHouse-20.6.6.7-stable/src/Storages/Kafka/ReadBufferFromKafkaConsumer.cpp; DB::ReadBufferFromKafkaConsumer::commit()::<lambda(const char*, const TopicPartitionList&)>\t172\r\n2020-09-30\t2020-09-30 07:20:13\t496485\tBgSchPool\t46901\tTrace\t\tStorageKafka (kafka_fact_customer_session)\tPolled offset INVALID (topic: back_customer_session_v1, partition: 3)\t54436\t/home/centos/clickhouse-rpm/rpmbuild/BUILD/ClickHouse-20.6.6.7-stable/src/Storages/Kafka/ReadBufferFromKafkaConsumer.cpp; DB::ReadBufferFromKafkaConsumer::commit()::<lambda(const char*, const TopicPartitionList&)>\t172\r\n2020-09-30\t2020-09-30 07:20:13\t496488\tBgSchPool\t46901\tTrace\t\tStorageKafka (kafka_fact_customer_session)\tPolled offset INVALID (topic: back_customer_session_v1, partition: 4)\t54436\t/home/centos/clickhouse-rpm/rpmbuild/BUILD/ClickHouse-20.6.6.7-stable/src/Storages/Kafka/ReadBufferFromKafkaConsumer.cpp; DB::ReadBufferFromKafkaConsumer::commit()::<lambda(const char*, const TopicPartitionList&)>\t172\r\n2020-09-30\t2020-09-30 07:20:13\t496493\tBgSchPool\t46901\tTrace\t\tStorageKafka (kafka_fact_customer_session)\tPolled offset 565332 (topic: customer_session_v1, partition: 0)\t54436\t/home/centos/clickhouse-rpm/rpmbuild/BUILD/ClickHouse-20.6.6.7-stable/src/Storages/Kafka/ReadBufferFromKafkaConsumer.cpp; DB::ReadBufferFromKafkaConsumer::commit()::<lambda(const char*, const TopicPartitionList&)>\t176\r\n2020-09-30\t2020-09-30 07:20:13\t496497\tBgSchPool\t46901\tTrace\t\tStorageKafka (kafka_fact_customer_session)\tPolled offset 586854 (topic: customer_session_v1, partition: 1)\t54436\t/home/centos/clickhouse-rpm/rpmbuild/BUILD/ClickHouse-20.6.6.7-stable/src/Storages/Kafka/ReadBufferFromKafkaConsumer.cpp; DB::ReadBufferFromKafkaConsumer::commit()::<lambda(const char*, const TopicPartitionList&)>\t176\r\n2020-09-30\t2020-09-30 07:20:13\t496502\tBgSchPool\t46901\tTrace\t\tStorageKafka (kafka_fact_customer_session)\tPolled offset 855425 (topic: customer_session_v1, partition: 2)\t54436\t/home/centos/clickhouse-rpm/rpmbuild/BUILD/ClickHouse-20.6.6.7-stable/src/Storages/Kafka/ReadBufferFromKafkaConsumer.cpp; DB::ReadBufferFromKafkaConsumer::commit()::<lambda(const char*, const TopicPartitionList&)>\t176\r\n2020-09-30\t2020-09-30 07:20:13\t496506\tBgSchPool\t46901\tTrace\t\tStorageKafka (kafka_fact_customer_session)\tPolled offset 557099 (topic: customer_session_v1, partition: 3)\t54436\t/home/centos/clickhouse-rpm/rpmbuild/BUILD/ClickHouse-20.6.6.7-stable/src/Storages/Kafka/ReadBufferFromKafkaConsumer.cpp; DB::ReadBufferFromKafkaConsumer::commit()::<lambda(const char*, const TopicPartitionList&)>\t176\r\n2020-09-30\t2020-09-30 07:20:13\t496510\tBgSchPool\t46901\tTrace\t\tStorageKafka (kafka_fact_customer_session)\tPolled offset 678516 (topic: customer_session_v1, partition: 4)\t54436\t/home/centos/clickhouse-rpm/rpmbuild/BUILD/ClickHouse-20.6.6.7-stable/src/Storages/Kafka/ReadBufferFromKafkaConsumer.cpp; DB::ReadBufferFromKafkaConsumer::commit()::<lambda(const char*, const TopicPartitionList&)>\t176\r\n2020-09-30\t2020-09-30 07:20:13\t496515\tBgSchPool\t46901\tTrace\t\tStorageKafka (kafka_fact_customer_session)\tNothing to commit.\t54436\t/home/centos/clickhouse-rpm/rpmbuild/BUILD/ClickHouse-20.6.6.7-stable/src/Storages/Kafka/ReadBufferFromKafkaConsumer.cpp; void DB::ReadBufferFromKafkaConsumer::commit()\t225\r\n2020-09-30\t2020-09-30 07:20:13\t496601\tBgSchPool\t46901\tTrace\t\tStorageKafka (kafka_fact_customer_session)\tStream(s) stalled. Reschedule.\t54436\t/home/centos/clickhouse-rpm/rpmbuild/BUILD/ClickHouse-20.6.6.7-stable/src/Storages/Kafka/StorageKafka.cpp; void DB::StorageKafka::threadFunc()\t491\r\n2020-09-30\t2020-09-30 07:20:13\t496616\tBgSchPool\t46901\tTrace\t\tStorageKafka (kafka_fact_customer_session)\tExecution took 4005 ms.\t54436\t/home/centos/clickhouse-rpm/rpmbuild/BUILD/ClickHouse-20.6.6.7-stable/src/Core/BackgroundSchedulePool.cpp; void DB::BackgroundSchedulePoolTaskInfo::execute()\t114\r\n2020-09-30\t2020-09-30 07:20:13\t496652\tDDLWorker\t46957\tTrace\t2b089c5c-cc74-43ab-bd53-a79bcb05a0ac\tStorageKafka (kafka_fact_customer_session)\tClosing consumers\t54436\t/home/centos/clickhouse-rpm/rpmbuild/BUILD/ClickHouse-20.6.6.7-stable/src/Storages/Kafka/StorageKafka.cpp; virtual void DB::StorageKafka::shutdown()\t273\r\n2020-09-30\t2020-09-30 07:20:13\t496841\tDDLWorker\t46957\tTrace\t2b089c5c-cc74-43ab-bd53-a79bcb05a0ac\tStorageKafka (kafka_fact_customer_session)\tRebalance initiated. Revoking partitions: [ back_customer_session_v1[0:#], back_customer_session_v1[1:#], back_customer_session_v1[2:#], back_customer_session_v1[3:#], back_customer_session_v1[4:#], customer_session_v1[0:#], customer_session_v1[1:#], customer_session_v1[2:#], customer_session_v1[3:#], customer_session_v1[4:#] ]\t54436\t/home/centos/clickhouse-rpm/rpmbuild/BUILD/ClickHouse-20.6.6.7-stable/src/Storages/Kafka/ReadBufferFromKafkaConsumer.cpp; DB::ReadBufferFromKafkaConsumer::ReadBufferFromKafkaConsumer(DB::ConsumerPtr, Poco::Logger*, size_t, size_t, bool, const std::__1::atomic<bool>&, const Names&)::<lambda(const TopicPartitionList&)>\t53\r\n```\r\nstack trace\r\n```\r\n########################################\r\n(version 20.6.6.7, no build id) (from thread 46957) (query_id: 2b089c5c-cc74-43ab-bd53-a79bcb05a0ac) Received signal Stopped (20)\r\nThis is a signal used for debugging purposes by the user.\r\nStack trace: 0x7f66df049fd7 0xd1cd402 0xd0fecc7 0xd0e6407 0xafdf98a 0xabe763a 0xabdec17 0xa4572e5 0xa4591d6 0xa5718be 0xa5753fc 0xa313d8b 0xa31c09a 0xa31d12c 0xa31e0e5 0xa321f20 0x5d0c60d 0x5d0acdf 0x7f66df048e65 0x7f66de96588d\r\n3. pthread_join @ 0x8fd7 in /usr/lib64/libpthread-2.17.so\r\n4. thrd_join @ 0xd1cd402 in /usr/bin/clickhouse\r\n5. ? @ 0xd0fecc7 in /usr/bin/clickhouse\r\n6. cppkafka::Consumer::~Consumer() @ 0xd0e6407 in /usr/bin/clickhouse\r\n7. DB::ReadBufferFromKafkaConsumer::~ReadBufferFromKafkaConsumer() @ 0xafdf98a in /usr/bin/clickhouse\r\n8. std::__1::shared_ptr<DB::ReadBufferFromKafkaConsumer>::~shared_ptr() @ 0xabe763a in /usr/bin/clickhouse\r\n9. DB::StorageKafka::shutdown() @ 0xabdec17 in /usr/bin/clickhouse\r\n10. DB::InterpreterDropQuery::executeToTable(DB::StorageID const&, DB::ASTDropQuery const&) @ 0xa4572e5 in /usr/bin/clickhouse\r\n11. DB::InterpreterDropQuery::execute() @ 0xa4591d6 in /usr/bin/clickhouse\r\n12. ? @ 0xa5718be in /usr/bin/clickhouse\r\n13. DB::executeQuery(DB::ReadBuffer&, DB::WriteBuffer&, bool, DB::Context&, std::__1::function<void (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)>) @ 0xa5753fc in /usr/bin/clickhouse\r\n14. DB::DDLWorker::tryExecuteQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::DDLTask const&, DB::ExecutionStatus&) @ 0xa313d8b in /usr/bin/clickhouse\r\n15. DB::DDLWorker::processTask(DB::DDLTask&, std::__1::shared_ptr<zkutil::ZooKeeper> const&) @ 0xa31c09a in /usr/bin/clickhouse\r\n16. DB::DDLWorker::processTasks() @ 0xa31d12c in /usr/bin/clickhouse\r\n17. DB::DDLWorker::runMainThread() @ 0xa31e0e5 in /usr/bin/clickhouse\r\n18. ThreadFromGlobalPool::ThreadFromGlobalPool<void (DB::DDLWorker::*)(), DB::DDLWorker*>(void (DB::DDLWorker::*&&)(), DB::DDLWorker*&&)::\\'lambda\\'()::operator()() const @ 0xa321f20 in /usr/bin/clickhouse\r\n19. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x5d0c60d in /usr/bin/clickhouse\r\n20. ? @ 0x5d0acdf in /usr/bin/clickhouse\r\n21. start_thread @ 0x7e65 in /usr/lib64/libpthread-2.17.so\r\n22. __clone @ 0xfe88d in /usr/lib64/libc-2.17.so\r\n\r\n24 rows in set. Elapsed: 0.007 sec. Processed 16.38 thousand rows, 309.70 KB (2.28 million rows/s., 43.18 MB/s.) \r\n```","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/15473/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/15473/timeline","performed_via_github_app":null}]
