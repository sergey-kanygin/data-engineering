[{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34152","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34152/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34152/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34152/events","html_url":"https://github.com/ClickHouse/ClickHouse/pull/34152","id":1118479522,"node_id":"PR_kwDOA5dJV84xyg7P","number":34152,"title":"Fix LSan by disabling glibc-compatiblity (due to broken getauxval())","user":{"login":"azat","id":430798,"node_id":"MDQ6VXNlcjQzMDc5OA==","avatar_url":"https://avatars.githubusercontent.com/u/430798?v=4","gravatar_id":"","url":"https://api.github.com/users/azat","html_url":"https://github.com/azat","followers_url":"https://api.github.com/users/azat/followers","following_url":"https://api.github.com/users/azat/following{/other_user}","gists_url":"https://api.github.com/users/azat/gists{/gist_id}","starred_url":"https://api.github.com/users/azat/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/azat/subscriptions","organizations_url":"https://api.github.com/users/azat/orgs","repos_url":"https://api.github.com/users/azat/repos","events_url":"https://api.github.com/users/azat/events{/privacy}","received_events_url":"https://api.github.com/users/azat/received_events","type":"User","site_admin":false},"labels":[{"id":1876999755,"node_id":"MDU6TGFiZWwxODc2OTk5NzU1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/pr-not-for-changelog","name":"pr-not-for-changelog","color":"007700","default":false,"description":"This PR should not be mentioned in the changelog"}],"state":"open","locked":false,"assignee":{"login":"alexey-milovidov","id":18581488,"node_id":"MDQ6VXNlcjE4NTgxNDg4","avatar_url":"https://avatars.githubusercontent.com/u/18581488?v=4","gravatar_id":"","url":"https://api.github.com/users/alexey-milovidov","html_url":"https://github.com/alexey-milovidov","followers_url":"https://api.github.com/users/alexey-milovidov/followers","following_url":"https://api.github.com/users/alexey-milovidov/following{/other_user}","gists_url":"https://api.github.com/users/alexey-milovidov/gists{/gist_id}","starred_url":"https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexey-milovidov/subscriptions","organizations_url":"https://api.github.com/users/alexey-milovidov/orgs","repos_url":"https://api.github.com/users/alexey-milovidov/repos","events_url":"https://api.github.com/users/alexey-milovidov/events{/privacy}","received_events_url":"https://api.github.com/users/alexey-milovidov/received_events","type":"User","site_admin":false},"assignees":[{"login":"alexey-milovidov","id":18581488,"node_id":"MDQ6VXNlcjE4NTgxNDg4","avatar_url":"https://avatars.githubusercontent.com/u/18581488?v=4","gravatar_id":"","url":"https://api.github.com/users/alexey-milovidov","html_url":"https://github.com/alexey-milovidov","followers_url":"https://api.github.com/users/alexey-milovidov/followers","following_url":"https://api.github.com/users/alexey-milovidov/following{/other_user}","gists_url":"https://api.github.com/users/alexey-milovidov/gists{/gist_id}","starred_url":"https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexey-milovidov/subscriptions","organizations_url":"https://api.github.com/users/alexey-milovidov/orgs","repos_url":"https://api.github.com/users/alexey-milovidov/repos","events_url":"https://api.github.com/users/alexey-milovidov/events{/privacy}","received_events_url":"https://api.github.com/users/alexey-milovidov/received_events","type":"User","site_admin":false}],"milestone":null,"comments":4,"created_at":"2022-01-30T10:06:44Z","updated_at":"2022-01-30T11:30:52Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/pulls/34152","html_url":"https://github.com/ClickHouse/ClickHouse/pull/34152","diff_url":"https://github.com/ClickHouse/ClickHouse/pull/34152.diff","patch_url":"https://github.com/ClickHouse/ClickHouse/pull/34152.patch","merged_at":null},"body":"Broken getauxval() breaks LSan (at least).\r\n\r\nChangelog category (leave one):\r\n- Not for changelog (changelog entry is not required)\r\n\r\nRefs: #33957","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34152/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34152/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34151","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34151/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34151/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34151/events","html_url":"https://github.com/ClickHouse/ClickHouse/pull/34151","id":1118439810,"node_id":"PR_kwDOA5dJV84xyZ88","number":34151,"title":"Translate zh/sql-reference/statements/truncate","user":{"login":"cnmade","id":278153,"node_id":"MDQ6VXNlcjI3ODE1Mw==","avatar_url":"https://avatars.githubusercontent.com/u/278153?v=4","gravatar_id":"","url":"https://api.github.com/users/cnmade","html_url":"https://github.com/cnmade","followers_url":"https://api.github.com/users/cnmade/followers","following_url":"https://api.github.com/users/cnmade/following{/other_user}","gists_url":"https://api.github.com/users/cnmade/gists{/gist_id}","starred_url":"https://api.github.com/users/cnmade/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cnmade/subscriptions","organizations_url":"https://api.github.com/users/cnmade/orgs","repos_url":"https://api.github.com/users/cnmade/repos","events_url":"https://api.github.com/users/cnmade/events{/privacy}","received_events_url":"https://api.github.com/users/cnmade/received_events","type":"User","site_admin":false},"labels":[{"id":1310920248,"node_id":"MDU6TGFiZWwxMzEwOTIwMjQ4","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/pr-documentation","name":"pr-documentation","color":"007700","default":false,"description":"Documentation PRs for the specific code PR"}],"state":"open","locked":false,"assignee":{"login":"kitaisreal","id":22458333,"node_id":"MDQ6VXNlcjIyNDU4MzMz","avatar_url":"https://avatars.githubusercontent.com/u/22458333?v=4","gravatar_id":"","url":"https://api.github.com/users/kitaisreal","html_url":"https://github.com/kitaisreal","followers_url":"https://api.github.com/users/kitaisreal/followers","following_url":"https://api.github.com/users/kitaisreal/following{/other_user}","gists_url":"https://api.github.com/users/kitaisreal/gists{/gist_id}","starred_url":"https://api.github.com/users/kitaisreal/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kitaisreal/subscriptions","organizations_url":"https://api.github.com/users/kitaisreal/orgs","repos_url":"https://api.github.com/users/kitaisreal/repos","events_url":"https://api.github.com/users/kitaisreal/events{/privacy}","received_events_url":"https://api.github.com/users/kitaisreal/received_events","type":"User","site_admin":false},"assignees":[{"login":"kitaisreal","id":22458333,"node_id":"MDQ6VXNlcjIyNDU4MzMz","avatar_url":"https://avatars.githubusercontent.com/u/22458333?v=4","gravatar_id":"","url":"https://api.github.com/users/kitaisreal","html_url":"https://github.com/kitaisreal","followers_url":"https://api.github.com/users/kitaisreal/followers","following_url":"https://api.github.com/users/kitaisreal/following{/other_user}","gists_url":"https://api.github.com/users/kitaisreal/gists{/gist_id}","starred_url":"https://api.github.com/users/kitaisreal/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kitaisreal/subscriptions","organizations_url":"https://api.github.com/users/kitaisreal/orgs","repos_url":"https://api.github.com/users/kitaisreal/repos","events_url":"https://api.github.com/users/kitaisreal/events{/privacy}","received_events_url":"https://api.github.com/users/kitaisreal/received_events","type":"User","site_admin":false}],"milestone":null,"comments":0,"created_at":"2022-01-30T07:00:05Z","updated_at":"2022-01-30T11:32:40Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/pulls/34151","html_url":"https://github.com/ClickHouse/ClickHouse/pull/34151","diff_url":"https://github.com/ClickHouse/ClickHouse/pull/34151.diff","patch_url":"https://github.com/ClickHouse/ClickHouse/pull/34151.patch","merged_at":null},"body":"Changelog category (leave one):\r\n\r\n- Documentation (changelog entry is not required)\r\n\r\n\r\nChangelog entry (a user-readable short description of the changes that goes to CHANGELOG.md):\r\n...\r\n\r\n\r\n> Information about CI checks: https://clickhouse.tech/docs/en/development/continuous-integration/\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34151/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34151/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34148","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34148/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34148/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34148/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/34148","id":1118356285,"node_id":"I_kwDOA5dJV85CqMM9","number":34148,"title":"\"Cancelled merging parts\" is not an error.","user":{"login":"alexey-milovidov","id":18581488,"node_id":"MDQ6VXNlcjE4NTgxNDg4","avatar_url":"https://avatars.githubusercontent.com/u/18581488?v=4","gravatar_id":"","url":"https://api.github.com/users/alexey-milovidov","html_url":"https://github.com/alexey-milovidov","followers_url":"https://api.github.com/users/alexey-milovidov/followers","following_url":"https://api.github.com/users/alexey-milovidov/following{/other_user}","gists_url":"https://api.github.com/users/alexey-milovidov/gists{/gist_id}","starred_url":"https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexey-milovidov/subscriptions","organizations_url":"https://api.github.com/users/alexey-milovidov/orgs","repos_url":"https://api.github.com/users/alexey-milovidov/repos","events_url":"https://api.github.com/users/alexey-milovidov/events{/privacy}","received_events_url":"https://api.github.com/users/alexey-milovidov/received_events","type":"User","site_admin":false},"labels":[{"id":845247686,"node_id":"MDU6TGFiZWw4NDUyNDc2ODY=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/usability","name":"usability","color":"ebf28c","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2022-01-29T23:53:30Z","updated_at":"2022-01-30T00:08:07Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"I see this in logs on server shutdown:\r\n\r\n```\r\n2022.01.30 02:51:22.856463 [ 755777 ] {} <Error> void DB::MergeTreeBackgroundExecutor<DB::MergeMutateRuntimeQueue>::routine(DB::TaskRuntimeDataPtr) [Queue = DB::MergeMutateRuntimeQueue]: Code: 236. DB::Exception: Cancelled merging parts.\r\n```\r\n\r\nbut it's not an error.\r\n\r\nLog level should be changed and it should not show stack trace.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34148/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34148/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34147","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34147/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34147/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34147/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/34147","id":1118348725,"node_id":"I_kwDOA5dJV85CqKW1","number":34147,"title":"(master) reading parquet file from url does not work","user":{"login":"alexey-milovidov","id":18581488,"node_id":"MDQ6VXNlcjE4NTgxNDg4","avatar_url":"https://avatars.githubusercontent.com/u/18581488?v=4","gravatar_id":"","url":"https://api.github.com/users/alexey-milovidov","html_url":"https://github.com/alexey-milovidov","followers_url":"https://api.github.com/users/alexey-milovidov/followers","following_url":"https://api.github.com/users/alexey-milovidov/following{/other_user}","gists_url":"https://api.github.com/users/alexey-milovidov/gists{/gist_id}","starred_url":"https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexey-milovidov/subscriptions","organizations_url":"https://api.github.com/users/alexey-milovidov/orgs","repos_url":"https://api.github.com/users/alexey-milovidov/repos","events_url":"https://api.github.com/users/alexey-milovidov/events{/privacy}","received_events_url":"https://api.github.com/users/alexey-milovidov/received_events","type":"User","site_admin":false},"labels":[{"id":3260776666,"node_id":"MDU6TGFiZWwzMjYwNzc2NjY2","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/potential%20bug","name":"potential bug","color":"ffc080","default":false,"description":"To be reviewed by developers and confirmed/rejected."}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-01-29T23:05:20Z","updated_at":"2022-01-29T23:05:20Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"**Describe what's wrong**\r\n\r\n```\r\nip-172-31-13-60.eu-central-1.compute.internal :) SELECT count() FROM url('https://datasets.clickhouse.com/hits.parquet')\r\n\r\nSELECT count()\r\nFROM url('https://datasets.clickhouse.com/hits.parquet')\r\n\r\nQuery id: 5946ca89-f28e-4eac-a820-daf421de65f0\r\n\r\n\r\nThread 1 \"clickhouse\" received signal SIGSEGV, Segmentation fault.\r\nstd::__1::basic_streambuf<char, std::__1::char_traits<char> >::xsputn (this=0x7fffffff5650, __s=0x17d68000 <error: Cannot access memory at address 0x17d68000>, __n=140737338223488) at ../contrib/libcxx/include/streambuf:464\r\n464     ../contrib/libcxx/include/streambuf: No such file or directory.\r\n(gdb) bt\r\n#0  std::__1::basic_streambuf<char, std::__1::char_traits<char> >::xsputn (this=0x7fffffff5650, __s=0x17d68000 <error: Cannot access memory at address 0x17d68000>, __n=140737338223488) at ../contrib/libcxx/include/streambuf:464\r\n#1  0x000000000a6ea291 in std::__1::basic_streambuf<char, std::__1::char_traits<char> >::sputn (this=0x7fffffff5650, __s=0x17d473c8 <arrow::global_state+8> \"XW\\366\\a\", __n=140737338223488) at ../contrib/libcxx/include/streambuf:229\r\n#2  std::__1::__pad_and_output<char, std::__1::char_traits<char> > (__s=..., __s@entry=..., __ob=<optimized out>, __ob@entry=0x17d473c8 <arrow::global_state+8> \"XW\\366\\a\", __op=0x17d473c8 <arrow::global_state+8> \"XW\\366\\a\", \r\n    __oe=__oe@entry=0x80000ee19f48 <error: Cannot access memory at address 0x80000ee19f48>, __iob=..., __fl=<optimized out>) at ../contrib/libcxx/include/locale:1407\r\n#3  0x000000000a6ea0c1 in std::__1::__put_character_sequence<char, std::__1::char_traits<char> > (__os=..., __str=0x17d473c8 <arrow::global_state+8> \"XW\\366\\a\", __len=<optimized out>) at ../contrib/libcxx/include/ostream:729\r\n#4  0x00000000152eb239 in std::__1::operator<< <char, std::__1::char_traits<char>, std::__1::allocator<char> > (__os=..., __str=...) at ../contrib/libcxx/include/ostream:1056\r\n#5  Poco::Net::HTTPBasicCredentials::authenticate (this=0x7fffffff6238, request=...) at ../contrib/poco/Net/src/HTTPBasicCredentials.cpp:96\r\n#6  0x00000000103a506b in DB::detail::ReadWriteBufferFromHTTPBase<std::__1::shared_ptr<DB::UpdatableSession> >::call (this=this@entry=0x7ffff7065100, uri_=..., response=..., method_=...) at ../src/IO/ReadWriteBufferFromHTTP.h:176\r\n#7  0x00000000103a43ed in DB::detail::ReadWriteBufferFromHTTPBase<std::__1::shared_ptr<DB::UpdatableSession> >::initialize (this=this@entry=0x7ffff7065100) at ../src/IO/ReadWriteBufferFromHTTP.h:290\r\n#8  0x00000000103a2945 in DB::detail::ReadWriteBufferFromHTTPBase<std::__1::shared_ptr<DB::UpdatableSession> >::nextImpl (this=0x7ffff7065100) at ../src/IO/ReadWriteBufferFromHTTP.h:397\r\n#9  0x000000000a6fed29 in DB::ReadBuffer::next (this=0x7ffff7065100) at ../src/IO/ReadBuffer.h:62\r\n#10 DB::ReadBuffer::eof (this=0x7ffff7065100) at ../src/IO/ReadBuffer.h:96\r\n#11 DB::ReadBuffer::read (this=0x7ffff7065100, to=0x7ffff084b900 \"\", n=65536) at ../src/IO/ReadBuffer.h:173\r\n#12 DB::ReadBuffer::readBig (this=0x7ffff7065100, to=0x7ffff084b900 \"\", n=65536) at ../src/IO/ReadBuffer.h:200\r\n#13 0x00000000134032b1 in DB::RandomAccessFileFromSeekableReadBuffer::Read (this=<optimized out>, nbytes=140737229052340, out=0x0) at ../src/Processors/Formats/Impl/ArrowBufferedStreams.cpp:85\r\n#14 0x000000001340338b in DB::RandomAccessFileFromSeekableReadBuffer::Read (this=0x7ffff701dd08, nbytes=65536) at ../src/Processors/Formats/Impl/ArrowBufferedStreams.cpp:91\r\n#15 0x0000000015d16dfe in arrow::io::RandomAccessFile::ReadAt(long, long) ()\r\n#16 0x0000000015a17292 in parquet::SerializedFile::ParseMetaData() ()\r\n#17 0x0000000015a14820 in parquet::ParquetFileReader::Contents::Open(std::__1::shared_ptr<arrow::io::RandomAccessFile>, parquet::ReaderProperties const&, std::__1::shared_ptr<parquet::FileMetaData>) ()\r\n#18 0x0000000015a14e93 in parquet::ParquetFileReader::Open(std::__1::shared_ptr<arrow::io::RandomAccessFile>, parquet::ReaderProperties const&, std::__1::shared_ptr<parquet::FileMetaData>) ()\r\n#19 0x000000001593c0b7 in parquet::arrow::FileReaderBuilder::Open(std::__1::shared_ptr<arrow::io::RandomAccessFile>, parquet::ReaderProperties const&, std::__1::shared_ptr<parquet::FileMetaData>) ()\r\n#20 0x000000001593c43d in parquet::arrow::OpenFile(std::__1::shared_ptr<arrow::io::RandomAccessFile>, arrow::MemoryPool*, std::__1::unique_ptr<parquet::arrow::FileReader, std::__1::default_delete<parquet::arrow::FileReader> >*) ()\r\n#21 0x00000000134941d6 in DB::getFileReaderAndSchema (in=..., file_reader=..., schema=..., format_settings=..., is_stopped=...) at ../src/Processors/Formats/Impl/ParquetBlockInputFormat.cpp:121\r\n#22 0x0000000013494642 in DB::ParquetSchemaReader::readSchema (this=<optimized out>) at ../src/Processors/Formats/Impl/ParquetBlockInputFormat.cpp:168\r\n#23 0x00000000133c206d in DB::readSchemaFromFormat(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::optional<DB::FormatSettings> const&, std::__1::function<std::__1::unique_ptr<DB::ReadBuffer, std::__1::default_delete<DB::ReadBuffer> > ()>, std::__1::shared_ptr<DB::Context const>, std::__1::unique_ptr<DB::ReadBuffer, std::__1::default_delete<DB::ReadBuffer> >&) (format_name=..., format_settings=..., read_buffer_creator=..., context=..., buf_out=...) at ../src/Formats/ReadSchemaUtils.cpp:49\r\n#24 0x00000000133c2e08 in DB::readSchemaFromFormat(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::optional<DB::FormatSettings> const&, std::__1::function<std::__1::unique_ptr<DB::ReadBuffer, std::__1::default_delete<DB::ReadBuffer> > ()>, std::__1::shared_ptr<DB::Context const>) (format_name=..., format_settings=..., read_buffer_creator=..., context=...) at ../src/Formats/ReadSchemaUtils.cpp:65\r\n#25 0x0000000012f45d3d in DB::IStorageURLBase::getTableStructureFromData (format=..., uri=..., compression_method=..., headers=..., format_settings=..., context=...) at ../src/Storages/StorageURL.cpp:104\r\n#26 0x0000000012f458a0 in DB::IStorageURLBase::IStorageURLBase (this=this@entry=0x7ffff711e800, uri_=..., context_=..., table_id_=..., format_name_=..., format_settings_=..., columns_=..., constraints_=..., comment=..., compression_method_=..., headers_=..., http_method_=..., \r\n    partition_by_=...) at ../src/Storages/StorageURL.cpp:67\r\n#27 0x0000000012f49524 in DB::StorageURL::StorageURL (this=0x7ffff711e800, uri_=..., table_id_=..., format_name_=..., format_settings_=..., columns_=..., constraints_=..., comment=..., context_=..., compression_method_=..., headers_=..., http_method_=..., partition_by_=...)\r\n    at ../src/Storages/StorageURL.cpp:534\r\n#28 0x0000000011d5366f in shared_ptr_helper<DB::StorageURL>::create<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::StorageID, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::nullopt_t const&, DB::ColumnsDescription const&, DB::ConstraintsDescription, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<DB::Context const>&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::vector<std::__1::tuple<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::tuple<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&> (args=..., \r\n    args=..., args=..., args=..., args=..., args=..., args=..., args=..., args=..., args=..., args=...) at ../base/base/../base/shared_ptr_helper.h:17\r\n#29 0x0000000011d52de3 in DB::TableFunctionURL::getStorage (this=this@entry=0x7ffff0800518, source=..., format_=..., columns=..., global_context=..., table_name=..., compression_method_=...) at ../src/TableFunctions/TableFunctionURL.cpp:69\r\n#30 0x0000000011d52210 in DB::ITableFunctionFileLike::executeImpl (this=0x7ffff0800518, context=..., table_name=...) at ../src/TableFunctions/ITableFunctionFileLike.cpp:98\r\n#31 0x00000000122fa958 in DB::ITableFunction::execute (this=0x7ffff0800518, ast_function=..., context=..., table_name=..., cached_columns=..., use_global_context=<optimized out>) at ../src/TableFunctions/ITableFunction.cpp:26\r\n#32 0x000000001240b1ab in DB::Context::executeTableFunction (this=<optimized out>, table_expression=...) at ../src/Interpreters/Context.cpp:1039\r\n#33 0x00000000129ce8f8 in DB::JoinedTables::getLeftTableStorage (this=<optimized out>) at ../src/Interpreters/JoinedTables.cpp:195\r\n#34 0x00000000127b5190 in DB::InterpreterSelectQuery::InterpreterSelectQuery (this=0x7ffff080b000, query_ptr_=..., context_=..., input_pipe_=..., storage_=..., options_=..., required_result_column_names=..., metadata_snapshot_=..., prepared_sets_=...)\r\n    at ../src/Interpreters/InterpreterSelectQuery.cpp:316\r\n#35 0x00000000127b4714 in DB::InterpreterSelectQuery::InterpreterSelectQuery (this=0x0, query_ptr_=..., context_=..., options_=..., required_result_column_names_=...) at ../src/Interpreters/InterpreterSelectQuery.cpp:158\r\n#36 0x00000000129aca1f in std::__1::make_unique<DB::InterpreterSelectQuery, std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context>&, DB::SelectQueryOptions&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&> (__args=..., __args=..., __args=..., __args=...) at ../contrib/libcxx/include/memory:2068\r\n#37 DB::InterpreterSelectWithUnionQuery::buildCurrentChildInterpreter (this=this@entry=0x7ffff6c3f8e0, ast_ptr_=..., current_required_result_column_names=...) at ../src/Interpreters/InterpreterSelectWithUnionQuery.cpp:218\r\n#38 0x00000000129ab684 in DB::InterpreterSelectWithUnionQuery::InterpreterSelectWithUnionQuery (this=<optimized out>, query_ptr_=..., context_=..., options_=..., required_result_column_names=...) at ../src/Interpreters/InterpreterSelectWithUnionQuery.cpp:140\r\n#39 0x0000000012766514 in std::__1::make_unique<DB::InterpreterSelectWithUnionQuery, std::__1::shared_ptr<DB::IAST>&, std::__1::shared_ptr<DB::Context>&, DB::SelectQueryOptions const&> (__args=..., __args=..., __args=...) at ../contrib/libcxx/include/memory:2068\r\n#40 0x0000000012765838 in DB::InterpreterFactory::get (query=..., context=..., options=...) at ../src/Interpreters/InterpreterFactory.cpp:120\r\n#41 0x0000000012b62640 in DB::executeQueryImpl (begin=begin@entry=0x7ffff6c3b0b0 \"SELECT count() FROM url('https://datasets.clickhouse.com/hits.parquet')\", end=<optimized out>, context=..., internal=false, stage=DB::QueryProcessingStage::Complete, istr=0x0)\r\n    at ../src/Interpreters/executeQuery.cpp:632\r\n#42 0x0000000012b60f0d in DB::executeQuery (query=..., context=..., internal=false, stage=DB::QueryProcessingStage::Complete) at ../src/Interpreters/executeQuery.cpp:985\r\n#43 0x0000000013316f2c in DB::LocalConnection::sendQuery (this=this@entry=0x7ffff7040a00, query=..., query_id=..., stage=2) at ../src/Client/LocalConnection.cpp:94\r\n#44 0x00000000132d7964 in DB::ClientBase::processOrdinaryQuery (this=this@entry=0x7fffffffc4c0, query_to_execute=..., parsed_query=...) at ../src/Client/ClientBase.cpp:645\r\n#45 0x00000000132d6f61 in DB::ClientBase::processParsedSingleQuery (this=this@entry=0x7fffffffc4c0, full_query=..., query_to_execute=..., parsed_query=..., echo_query_=..., report_error=<optimized out>) at ../src/Client/ClientBase.cpp:1315\r\n#46 0x00000000132d6805 in DB::ClientBase::processTextAsSingleQuery (this=this@entry=0x7fffffffc4c0, full_query=...) at ../src/Client/ClientBase.cpp:610\r\n#47 0x00000000132ddcff in DB::ClientBase::processQueryText (this=this@entry=0x7fffffffc4c0, text=...) at ../src/Client/ClientBase.cpp:1467\r\n#48 0x00000000132df0fc in DB::ClientBase::runInteractive (this=<optimized out>) at ../src/Client/ClientBase.cpp:1602\r\n#49 0x000000000a7a8c50 in DB::LocalServer::main (this=0x7fffffffc4c0) at ../programs/local/LocalServer.cpp:479\r\n#50 0x0000000015327aa6 in Poco::Util::Application::run (this=0x7fffffffc4c0) at ../contrib/poco/Util/src/Application.cpp:334\r\n#51 0x000000000a7aea60 in mainEntryClickHouseLocal (argc=1, argv=0x7ffff7001170) at ../programs/local/LocalServer.cpp:812\r\n#52 0x000000000a6e9ae1 in main (argc_=<optimized out>, argv_=<optimized out>) at ../programs/main.cpp:378\r\n```","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34147/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34147/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34145","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34145/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34145/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34145/events","html_url":"https://github.com/ClickHouse/ClickHouse/pull/34145","id":1118335216,"node_id":"PR_kwDOA5dJV84xyGf1","number":34145,"title":"pdqsort performance check","user":{"login":"kitaisreal","id":22458333,"node_id":"MDQ6VXNlcjIyNDU4MzMz","avatar_url":"https://avatars.githubusercontent.com/u/22458333?v=4","gravatar_id":"","url":"https://api.github.com/users/kitaisreal","html_url":"https://github.com/kitaisreal","followers_url":"https://api.github.com/users/kitaisreal/followers","following_url":"https://api.github.com/users/kitaisreal/following{/other_user}","gists_url":"https://api.github.com/users/kitaisreal/gists{/gist_id}","starred_url":"https://api.github.com/users/kitaisreal/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kitaisreal/subscriptions","organizations_url":"https://api.github.com/users/kitaisreal/orgs","repos_url":"https://api.github.com/users/kitaisreal/repos","events_url":"https://api.github.com/users/kitaisreal/events{/privacy}","received_events_url":"https://api.github.com/users/kitaisreal/received_events","type":"User","site_admin":false},"labels":[{"id":1876999755,"node_id":"MDU6TGFiZWwxODc2OTk5NzU1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/pr-not-for-changelog","name":"pr-not-for-changelog","color":"007700","default":false,"description":"This PR should not be mentioned in the changelog"}],"state":"open","locked":false,"assignee":{"login":"alexey-milovidov","id":18581488,"node_id":"MDQ6VXNlcjE4NTgxNDg4","avatar_url":"https://avatars.githubusercontent.com/u/18581488?v=4","gravatar_id":"","url":"https://api.github.com/users/alexey-milovidov","html_url":"https://github.com/alexey-milovidov","followers_url":"https://api.github.com/users/alexey-milovidov/followers","following_url":"https://api.github.com/users/alexey-milovidov/following{/other_user}","gists_url":"https://api.github.com/users/alexey-milovidov/gists{/gist_id}","starred_url":"https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexey-milovidov/subscriptions","organizations_url":"https://api.github.com/users/alexey-milovidov/orgs","repos_url":"https://api.github.com/users/alexey-milovidov/repos","events_url":"https://api.github.com/users/alexey-milovidov/events{/privacy}","received_events_url":"https://api.github.com/users/alexey-milovidov/received_events","type":"User","site_admin":false},"assignees":[{"login":"alexey-milovidov","id":18581488,"node_id":"MDQ6VXNlcjE4NTgxNDg4","avatar_url":"https://avatars.githubusercontent.com/u/18581488?v=4","gravatar_id":"","url":"https://api.github.com/users/alexey-milovidov","html_url":"https://github.com/alexey-milovidov","followers_url":"https://api.github.com/users/alexey-milovidov/followers","following_url":"https://api.github.com/users/alexey-milovidov/following{/other_user}","gists_url":"https://api.github.com/users/alexey-milovidov/gists{/gist_id}","starred_url":"https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexey-milovidov/subscriptions","organizations_url":"https://api.github.com/users/alexey-milovidov/orgs","repos_url":"https://api.github.com/users/alexey-milovidov/repos","events_url":"https://api.github.com/users/alexey-milovidov/events{/privacy}","received_events_url":"https://api.github.com/users/alexey-milovidov/received_events","type":"User","site_admin":false}],"milestone":null,"comments":2,"created_at":"2022-01-29T21:49:45Z","updated_at":"2022-01-30T00:29:40Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/pulls/34145","html_url":"https://github.com/ClickHouse/ClickHouse/pull/34145","diff_url":"https://github.com/ClickHouse/ClickHouse/pull/34145.diff","patch_url":"https://github.com/ClickHouse/ClickHouse/pull/34145.patch","merged_at":null},"body":"Changelog category (leave one):\r\n- Not for changelog (changelog entry is not required)\r\n\r\nCheck performance of pdqsort.\r\nCheck performance of BitSetSort.\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34145/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34145/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34142","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34142/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34142/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34142/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/34142","id":1118257396,"node_id":"I_kwDOA5dJV85Cp0D0","number":34142,"title":"TO_CHAR (number) / Printf","user":{"login":"den-crane","id":19737682,"node_id":"MDQ6VXNlcjE5NzM3Njgy","avatar_url":"https://avatars.githubusercontent.com/u/19737682?v=4","gravatar_id":"","url":"https://api.github.com/users/den-crane","html_url":"https://github.com/den-crane","followers_url":"https://api.github.com/users/den-crane/followers","following_url":"https://api.github.com/users/den-crane/following{/other_user}","gists_url":"https://api.github.com/users/den-crane/gists{/gist_id}","starred_url":"https://api.github.com/users/den-crane/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/den-crane/subscriptions","organizations_url":"https://api.github.com/users/den-crane/orgs","repos_url":"https://api.github.com/users/den-crane/repos","events_url":"https://api.github.com/users/den-crane/events{/privacy}","received_events_url":"https://api.github.com/users/den-crane/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":3086255531,"node_id":"MDU6TGFiZWwzMDg2MjU1NTMx","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/warmup%20task","name":"warmup task","color":"FBCA04","default":false,"description":"The task for new ClickHouse team members. Low risk, moderate complexity, no urgency."}],"state":"open","locked":false,"assignee":{"login":"jtrosty","id":9261426,"node_id":"MDQ6VXNlcjkyNjE0MjY=","avatar_url":"https://avatars.githubusercontent.com/u/9261426?v=4","gravatar_id":"","url":"https://api.github.com/users/jtrosty","html_url":"https://github.com/jtrosty","followers_url":"https://api.github.com/users/jtrosty/followers","following_url":"https://api.github.com/users/jtrosty/following{/other_user}","gists_url":"https://api.github.com/users/jtrosty/gists{/gist_id}","starred_url":"https://api.github.com/users/jtrosty/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jtrosty/subscriptions","organizations_url":"https://api.github.com/users/jtrosty/orgs","repos_url":"https://api.github.com/users/jtrosty/repos","events_url":"https://api.github.com/users/jtrosty/events{/privacy}","received_events_url":"https://api.github.com/users/jtrosty/received_events","type":"User","site_admin":false},"assignees":[{"login":"jtrosty","id":9261426,"node_id":"MDQ6VXNlcjkyNjE0MjY=","avatar_url":"https://avatars.githubusercontent.com/u/9261426?v=4","gravatar_id":"","url":"https://api.github.com/users/jtrosty","html_url":"https://github.com/jtrosty","followers_url":"https://api.github.com/users/jtrosty/followers","following_url":"https://api.github.com/users/jtrosty/following{/other_user}","gists_url":"https://api.github.com/users/jtrosty/gists{/gist_id}","starred_url":"https://api.github.com/users/jtrosty/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jtrosty/subscriptions","organizations_url":"https://api.github.com/users/jtrosty/orgs","repos_url":"https://api.github.com/users/jtrosty/repos","events_url":"https://api.github.com/users/jtrosty/events{/privacy}","received_events_url":"https://api.github.com/users/jtrosty/received_events","type":"User","site_admin":false}],"milestone":null,"comments":8,"created_at":"2022-01-29T16:08:25Z","updated_at":"2022-01-29T22:55:52Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"body":"Users often ask how to format Numbers (Integers /  Floats / Decimals) ( they need to separate thousands by '.,' or format fractions.\r\n\r\nI propose to implement either TO_CHAR or c-lang printf.\r\n\r\nhttps://www.postgresql.org/docs/9.6/functions-formatting.html\r\nhttps://en.wikipedia.org/wiki/Printf_format_string\r\n\r\nPersonally I prefer Printf, but TO_CHAR is more SQL way, because it exists in other RDBMS.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34142/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34142/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34140","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34140/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34140/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34140/events","html_url":"https://github.com/ClickHouse/ClickHouse/pull/34140","id":1118251640,"node_id":"PR_kwDOA5dJV84xx23d","number":34140,"title":"Maxsplit argument for splitByChar.","user":{"login":"taiyang-li","id":8181003,"node_id":"MDQ6VXNlcjgxODEwMDM=","avatar_url":"https://avatars.githubusercontent.com/u/8181003?v=4","gravatar_id":"","url":"https://api.github.com/users/taiyang-li","html_url":"https://github.com/taiyang-li","followers_url":"https://api.github.com/users/taiyang-li/followers","following_url":"https://api.github.com/users/taiyang-li/following{/other_user}","gists_url":"https://api.github.com/users/taiyang-li/gists{/gist_id}","starred_url":"https://api.github.com/users/taiyang-li/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/taiyang-li/subscriptions","organizations_url":"https://api.github.com/users/taiyang-li/orgs","repos_url":"https://api.github.com/users/taiyang-li/repos","events_url":"https://api.github.com/users/taiyang-li/events{/privacy}","received_events_url":"https://api.github.com/users/taiyang-li/received_events","type":"User","site_admin":false},"labels":[{"id":1304141686,"node_id":"MDU6TGFiZWwxMzA0MTQxNjg2","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/pr-improvement","name":"pr-improvement","color":"007700","default":false,"description":"Pull request with some product improvements"},{"id":3627025164,"node_id":"LA_kwDOA5dJV87YMAMM","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/can%20be%20tested","name":"can be tested","color":"1d76db","default":false,"description":""}],"state":"open","locked":false,"assignee":{"login":"kitaisreal","id":22458333,"node_id":"MDQ6VXNlcjIyNDU4MzMz","avatar_url":"https://avatars.githubusercontent.com/u/22458333?v=4","gravatar_id":"","url":"https://api.github.com/users/kitaisreal","html_url":"https://github.com/kitaisreal","followers_url":"https://api.github.com/users/kitaisreal/followers","following_url":"https://api.github.com/users/kitaisreal/following{/other_user}","gists_url":"https://api.github.com/users/kitaisreal/gists{/gist_id}","starred_url":"https://api.github.com/users/kitaisreal/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kitaisreal/subscriptions","organizations_url":"https://api.github.com/users/kitaisreal/orgs","repos_url":"https://api.github.com/users/kitaisreal/repos","events_url":"https://api.github.com/users/kitaisreal/events{/privacy}","received_events_url":"https://api.github.com/users/kitaisreal/received_events","type":"User","site_admin":false},"assignees":[{"login":"kitaisreal","id":22458333,"node_id":"MDQ6VXNlcjIyNDU4MzMz","avatar_url":"https://avatars.githubusercontent.com/u/22458333?v=4","gravatar_id":"","url":"https://api.github.com/users/kitaisreal","html_url":"https://github.com/kitaisreal","followers_url":"https://api.github.com/users/kitaisreal/followers","following_url":"https://api.github.com/users/kitaisreal/following{/other_user}","gists_url":"https://api.github.com/users/kitaisreal/gists{/gist_id}","starred_url":"https://api.github.com/users/kitaisreal/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kitaisreal/subscriptions","organizations_url":"https://api.github.com/users/kitaisreal/orgs","repos_url":"https://api.github.com/users/kitaisreal/repos","events_url":"https://api.github.com/users/kitaisreal/events{/privacy}","received_events_url":"https://api.github.com/users/kitaisreal/received_events","type":"User","site_admin":false}],"milestone":null,"comments":0,"created_at":"2022-01-29T15:43:45Z","updated_at":"2022-01-30T05:23:23Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/pulls/34140","html_url":"https://github.com/ClickHouse/ClickHouse/pull/34140","diff_url":"https://github.com/ClickHouse/ClickHouse/pull/34140.diff","patch_url":"https://github.com/ClickHouse/ClickHouse/pull/34140.patch","merged_at":null},"body":"Changelog category (leave one):\r\n- Improvement\r\n\r\nChangelog entry (a user-readable short description of the changes that goes to CHANGELOG.md):\r\nMaxsplit argument for splitByChar. close https://github.com/ClickHouse/ClickHouse/issues/34081\r\n\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34140/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34140/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34139","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34139/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34139/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34139/events","html_url":"https://github.com/ClickHouse/ClickHouse/pull/34139","id":1118248811,"node_id":"PR_kwDOA5dJV84xx2Wr","number":34139,"title":"Fix bug with bounded S3 reads and LowCardinality","user":{"login":"alesapin","id":3684697,"node_id":"MDQ6VXNlcjM2ODQ2OTc=","avatar_url":"https://avatars.githubusercontent.com/u/3684697?v=4","gravatar_id":"","url":"https://api.github.com/users/alesapin","html_url":"https://github.com/alesapin","followers_url":"https://api.github.com/users/alesapin/followers","following_url":"https://api.github.com/users/alesapin/following{/other_user}","gists_url":"https://api.github.com/users/alesapin/gists{/gist_id}","starred_url":"https://api.github.com/users/alesapin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alesapin/subscriptions","organizations_url":"https://api.github.com/users/alesapin/orgs","repos_url":"https://api.github.com/users/alesapin/repos","events_url":"https://api.github.com/users/alesapin/events{/privacy}","received_events_url":"https://api.github.com/users/alesapin/received_events","type":"User","site_admin":false},"labels":[{"id":1302792342,"node_id":"MDU6TGFiZWwxMzAyNzkyMzQy","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/pr-bugfix","name":"pr-bugfix","color":"ff4080","default":false,"description":"Pull request with bugfix, not backported by default"},{"id":1985666421,"node_id":"MDU6TGFiZWwxOTg1NjY2NDIx","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/pr-must-backport","name":"pr-must-backport","color":"ff0000","default":false,"description":"Pull request should be backported intentionally. Use this label with great care!"}],"state":"open","locked":false,"assignee":{"login":"kssenii","id":54203879,"node_id":"MDQ6VXNlcjU0MjAzODc5","avatar_url":"https://avatars.githubusercontent.com/u/54203879?v=4","gravatar_id":"","url":"https://api.github.com/users/kssenii","html_url":"https://github.com/kssenii","followers_url":"https://api.github.com/users/kssenii/followers","following_url":"https://api.github.com/users/kssenii/following{/other_user}","gists_url":"https://api.github.com/users/kssenii/gists{/gist_id}","starred_url":"https://api.github.com/users/kssenii/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kssenii/subscriptions","organizations_url":"https://api.github.com/users/kssenii/orgs","repos_url":"https://api.github.com/users/kssenii/repos","events_url":"https://api.github.com/users/kssenii/events{/privacy}","received_events_url":"https://api.github.com/users/kssenii/received_events","type":"User","site_admin":false},"assignees":[{"login":"kssenii","id":54203879,"node_id":"MDQ6VXNlcjU0MjAzODc5","avatar_url":"https://avatars.githubusercontent.com/u/54203879?v=4","gravatar_id":"","url":"https://api.github.com/users/kssenii","html_url":"https://github.com/kssenii","followers_url":"https://api.github.com/users/kssenii/followers","following_url":"https://api.github.com/users/kssenii/following{/other_user}","gists_url":"https://api.github.com/users/kssenii/gists{/gist_id}","starred_url":"https://api.github.com/users/kssenii/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kssenii/subscriptions","organizations_url":"https://api.github.com/users/kssenii/orgs","repos_url":"https://api.github.com/users/kssenii/repos","events_url":"https://api.github.com/users/kssenii/events{/privacy}","received_events_url":"https://api.github.com/users/kssenii/received_events","type":"User","site_admin":false}],"milestone":null,"comments":0,"created_at":"2022-01-29T15:30:32Z","updated_at":"2022-01-30T13:57:00Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/pulls/34139","html_url":"https://github.com/ClickHouse/ClickHouse/pull/34139","diff_url":"https://github.com/ClickHouse/ClickHouse/pull/34139.diff","patch_url":"https://github.com/ClickHouse/ClickHouse/pull/34139.patch","merged_at":null},"body":"Changelog category (leave one):\r\n- Bug Fix (user-visible misbehaviour in official stable or prestable release)\r\n\r\n\r\nChangelog entry (a user-readable short description of the changes that goes to CHANGELOG.md):\r\nFix bug which can rarely lead to error \"Cannot read all data\" while reading LowCardinality columns of MergeTree table engines family which stores data on remote file system like S3.\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34139/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34139/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34138","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34138/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34138/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34138/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/34138","id":1118222734,"node_id":"I_kwDOA5dJV85CprmO","number":34138,"title":"Should we support `#` for single-line comments in SQL?","user":{"login":"alexey-milovidov","id":18581488,"node_id":"MDQ6VXNlcjE4NTgxNDg4","avatar_url":"https://avatars.githubusercontent.com/u/18581488?v=4","gravatar_id":"","url":"https://api.github.com/users/alexey-milovidov","html_url":"https://github.com/alexey-milovidov","followers_url":"https://api.github.com/users/alexey-milovidov/followers","following_url":"https://api.github.com/users/alexey-milovidov/following{/other_user}","gists_url":"https://api.github.com/users/alexey-milovidov/gists{/gist_id}","starred_url":"https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexey-milovidov/subscriptions","organizations_url":"https://api.github.com/users/alexey-milovidov/orgs","repos_url":"https://api.github.com/users/alexey-milovidov/repos","events_url":"https://api.github.com/users/alexey-milovidov/events{/privacy}","received_events_url":"https://api.github.com/users/alexey-milovidov/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-01-29T13:53:46Z","updated_at":"2022-01-29T13:53:46Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"Pros:\r\n- very easy to support;\r\n- compatibility with MySQL syntax;\r\n- this #33584 get supported automatically;\r\n- sometimes I write comments starting with `#` by mistake, and will be pleased if it worked;\r\n- simplify creation of \"quines\".\r\n\r\nCons:\r\n- it may be too bizarre to support all these styles of comments;\r\n- PostgreSQL has [#>](https://www.postgresql.org/docs/14/functions-json.html) and similar operator due their own ugly quirks;\r\n- it may interact worse with `m4` macro preprocessor;\r\n\r\nAdditional context:\r\n- we can limit support for these comments by requiring whitespace after `#`;\r\n- we can limit support for these comments by requiring it to be at the beginning of the line;\r\n\r\nbut MySQL supports all variants.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34138/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34138/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34137","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34137/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34137/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34137/events","html_url":"https://github.com/ClickHouse/ClickHouse/pull/34137","id":1118144113,"node_id":"PR_kwDOA5dJV84xxhcl","number":34137,"title":"fix any inner join if its left key is duplicated","user":{"login":"fancyqlx","id":6196299,"node_id":"MDQ6VXNlcjYxOTYyOTk=","avatar_url":"https://avatars.githubusercontent.com/u/6196299?v=4","gravatar_id":"","url":"https://api.github.com/users/fancyqlx","html_url":"https://github.com/fancyqlx","followers_url":"https://api.github.com/users/fancyqlx/followers","following_url":"https://api.github.com/users/fancyqlx/following{/other_user}","gists_url":"https://api.github.com/users/fancyqlx/gists{/gist_id}","starred_url":"https://api.github.com/users/fancyqlx/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fancyqlx/subscriptions","organizations_url":"https://api.github.com/users/fancyqlx/orgs","repos_url":"https://api.github.com/users/fancyqlx/repos","events_url":"https://api.github.com/users/fancyqlx/events{/privacy}","received_events_url":"https://api.github.com/users/fancyqlx/received_events","type":"User","site_admin":false},"labels":[{"id":1302792342,"node_id":"MDU6TGFiZWwxMzAyNzkyMzQy","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/pr-bugfix","name":"pr-bugfix","color":"ff4080","default":false,"description":"Pull request with bugfix, not backported by default"}],"state":"open","locked":false,"assignee":{"login":"vdimir","id":7023786,"node_id":"MDQ6VXNlcjcwMjM3ODY=","avatar_url":"https://avatars.githubusercontent.com/u/7023786?v=4","gravatar_id":"","url":"https://api.github.com/users/vdimir","html_url":"https://github.com/vdimir","followers_url":"https://api.github.com/users/vdimir/followers","following_url":"https://api.github.com/users/vdimir/following{/other_user}","gists_url":"https://api.github.com/users/vdimir/gists{/gist_id}","starred_url":"https://api.github.com/users/vdimir/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vdimir/subscriptions","organizations_url":"https://api.github.com/users/vdimir/orgs","repos_url":"https://api.github.com/users/vdimir/repos","events_url":"https://api.github.com/users/vdimir/events{/privacy}","received_events_url":"https://api.github.com/users/vdimir/received_events","type":"User","site_admin":false},"assignees":[{"login":"vdimir","id":7023786,"node_id":"MDQ6VXNlcjcwMjM3ODY=","avatar_url":"https://avatars.githubusercontent.com/u/7023786?v=4","gravatar_id":"","url":"https://api.github.com/users/vdimir","html_url":"https://github.com/vdimir","followers_url":"https://api.github.com/users/vdimir/followers","following_url":"https://api.github.com/users/vdimir/following{/other_user}","gists_url":"https://api.github.com/users/vdimir/gists{/gist_id}","starred_url":"https://api.github.com/users/vdimir/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vdimir/subscriptions","organizations_url":"https://api.github.com/users/vdimir/orgs","repos_url":"https://api.github.com/users/vdimir/repos","events_url":"https://api.github.com/users/vdimir/events{/privacy}","received_events_url":"https://api.github.com/users/vdimir/received_events","type":"User","site_admin":false}],"milestone":null,"comments":1,"created_at":"2022-01-29T09:34:17Z","updated_at":"2022-01-29T11:36:32Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/pulls/34137","html_url":"https://github.com/ClickHouse/ClickHouse/pull/34137","diff_url":"https://github.com/ClickHouse/ClickHouse/pull/34137.diff","patch_url":"https://github.com/ClickHouse/ClickHouse/pull/34137.patch","merged_at":null},"body":"Changelog category (leave one):\r\n\r\n- Bug Fix (user-visible misbehaviour in official stable or prestable release)\r\n\r\nHi, I find that any inner join get an unexpected results if left table has duplicated join key. for example\r\n`select count() from (select (number % 1) as id from numbers(10)) as a any join (select number from numbers(1)) as b on a.id = b.number`\r\n\r\nthe expected results is 10, however it returns 1. If it is any right join, the results is correct, but for any inner join, we checked the results of starrocks and doris, and theoretically it should return 10. I also checked the old version of clickhouse, e.g. version 19.5.3, it returns 10 too.\r\n\r\nso i think it must be something wrong and fix it in a simple way.\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34137/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34137/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34133","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34133/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34133/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34133/events","html_url":"https://github.com/ClickHouse/ClickHouse/pull/34133","id":1117986357,"node_id":"PR_kwDOA5dJV84xxBsD","number":34133,"title":"Keeper optimization: use version to substitute std::distance","user":{"login":"zhanglistar","id":985418,"node_id":"MDQ6VXNlcjk4NTQxOA==","avatar_url":"https://avatars.githubusercontent.com/u/985418?v=4","gravatar_id":"","url":"https://api.github.com/users/zhanglistar","html_url":"https://github.com/zhanglistar","followers_url":"https://api.github.com/users/zhanglistar/followers","following_url":"https://api.github.com/users/zhanglistar/following{/other_user}","gists_url":"https://api.github.com/users/zhanglistar/gists{/gist_id}","starred_url":"https://api.github.com/users/zhanglistar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zhanglistar/subscriptions","organizations_url":"https://api.github.com/users/zhanglistar/orgs","repos_url":"https://api.github.com/users/zhanglistar/repos","events_url":"https://api.github.com/users/zhanglistar/events{/privacy}","received_events_url":"https://api.github.com/users/zhanglistar/received_events","type":"User","site_admin":false},"labels":[{"id":1309683578,"node_id":"MDU6TGFiZWwxMzA5NjgzNTc4","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/pr-performance","name":"pr-performance","color":"007700","default":false,"description":"Pull request with some performance improvements"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-01-29T01:13:42Z","updated_at":"2022-01-29T04:03:33Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/pulls/34133","html_url":"https://github.com/ClickHouse/ClickHouse/pull/34133","diff_url":"https://github.com/ClickHouse/ClickHouse/pull/34133.diff","patch_url":"https://github.com/ClickHouse/ClickHouse/pull/34133.patch","merged_at":null},"body":"Changelog category (leave one):\r\n- Performance Improvement\r\n\r\nChangelog entry (a user-readable short description of the changes that goes to CHANGELOG.md):\r\nCalling std::distance on large list will decrease performance, use a version in Node to substitute.\r\nThe logic is:\r\n1) every node is list has an version with type size_t, setting in insert or insertOrReplace method using the class member variable current_version. The version is only increase at enableSnapshot method.\r\n2) when we want to do a snapshot, call snapshotSizeWithVersion to get snapshot size and version(snapshot_up_to_version)\r\n3) when traverse the list, if node version less then or equal to snapshot_up_to_version, then protect it from deleting\r\nif node version big than snapshot_up_to_version, we can do anything to it.\r\n\r\nAnd another thing is that we use a vector to collect useless iterator of list when doing a snapshot, and in latter clearOutdatedNodes, we can just traverse the vector, not the list, which is faster.\r\n\r\nEffect:\r\nclient command: ./utils/keeper-bench/keeper-bench --host=127.0.0.1:12183 -c 30 --generator=create_small_data\r\nnew version:\r\n![image](https://user-images.githubusercontent.com/985418/151640982-1e5fd829-a00f-4fff-8337-f6d1d7161c33.png)\r\n\r\nmaster version 0e37e8b:\r\n![image](https://user-images.githubusercontent.com/985418/151641006-493b9d33-3549-4214-bc4e-1b7f0e5a7f7f.png)\r\n\r\n@alesapin I think this version maybe good, no need to implement design in previous PR https://github.com/ClickHouse/ClickHouse/pull/33968","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34133/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34133/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34132","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34132/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34132/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34132/events","html_url":"https://github.com/ClickHouse/ClickHouse/pull/34132","id":1117970968,"node_id":"PR_kwDOA5dJV84xw-zK","number":34132,"title":"Fix inserts to distributed tables in case of change of native protocol","user":{"login":"CurtizJ","id":20361854,"node_id":"MDQ6VXNlcjIwMzYxODU0","avatar_url":"https://avatars.githubusercontent.com/u/20361854?v=4","gravatar_id":"","url":"https://api.github.com/users/CurtizJ","html_url":"https://github.com/CurtizJ","followers_url":"https://api.github.com/users/CurtizJ/followers","following_url":"https://api.github.com/users/CurtizJ/following{/other_user}","gists_url":"https://api.github.com/users/CurtizJ/gists{/gist_id}","starred_url":"https://api.github.com/users/CurtizJ/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/CurtizJ/subscriptions","organizations_url":"https://api.github.com/users/CurtizJ/orgs","repos_url":"https://api.github.com/users/CurtizJ/repos","events_url":"https://api.github.com/users/CurtizJ/events{/privacy}","received_events_url":"https://api.github.com/users/CurtizJ/received_events","type":"User","site_admin":false},"labels":[{"id":1302792342,"node_id":"MDU6TGFiZWwxMzAyNzkyMzQy","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/pr-bugfix","name":"pr-bugfix","color":"ff4080","default":false,"description":"Pull request with bugfix, not backported by default"},{"id":1985666421,"node_id":"MDU6TGFiZWwxOTg1NjY2NDIx","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/pr-must-backport","name":"pr-must-backport","color":"ff0000","default":false,"description":"Pull request should be backported intentionally. Use this label with great care!"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-01-29T00:28:16Z","updated_at":"2022-01-29T11:58:39Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/pulls/34132","html_url":"https://github.com/ClickHouse/ClickHouse/pull/34132","diff_url":"https://github.com/ClickHouse/ClickHouse/pull/34132.diff","patch_url":"https://github.com/ClickHouse/ClickHouse/pull/34132.patch","merged_at":null},"body":"Changelog category (leave one):\r\n- Bug Fix (user-visible misbehaviour in official stable or prestable release)\r\n\r\nChangelog entry (a user-readable short description of the changes that goes to CHANGELOG.md):\r\nFix inserts to distributed tables in case of change of native protocol. The last change was in the version version 22.1, so there may be some failures of inserts to distributed tables after upgrade to that version.\r\n\r\nFixes #34091.\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34132/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34132/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34130","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34130/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34130/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34130/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/34130","id":1117849611,"node_id":"I_kwDOA5dJV85CoQgL","number":34130,"title":"LDAP: authentication with configured role mapping fails on a cluster with a secret","user":{"login":"traceon","id":10261534,"node_id":"MDQ6VXNlcjEwMjYxNTM0","avatar_url":"https://avatars.githubusercontent.com/u/10261534?v=4","gravatar_id":"","url":"https://api.github.com/users/traceon","html_url":"https://github.com/traceon","followers_url":"https://api.github.com/users/traceon/followers","following_url":"https://api.github.com/users/traceon/following{/other_user}","gists_url":"https://api.github.com/users/traceon/gists{/gist_id}","starred_url":"https://api.github.com/users/traceon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/traceon/subscriptions","organizations_url":"https://api.github.com/users/traceon/orgs","repos_url":"https://api.github.com/users/traceon/repos","events_url":"https://api.github.com/users/traceon/events{/privacy}","received_events_url":"https://api.github.com/users/traceon/received_events","type":"User","site_admin":false},"labels":[{"id":3260776666,"node_id":"MDU6TGFiZWwzMjYwNzc2NjY2","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/potential%20bug","name":"potential bug","color":"ffc080","default":false,"description":"To be reviewed by developers and confirmed/rejected."}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-01-28T21:09:49Z","updated_at":"2022-01-28T21:09:49Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"When ClickHouse server is configured as a part of a cluster with a secret, and there is an LDAP user directory with a role mapping, authentications for users from that directory fails.\r\n\r\nIf the `<secret>` is removed from the cluster config, users are authenticated successfully.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34130/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34130/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34125","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34125/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34125/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34125/events","html_url":"https://github.com/ClickHouse/ClickHouse/pull/34125","id":1117607865,"node_id":"PR_kwDOA5dJV84xv1kV","number":34125,"title":"Add table function format(format_name, data)","user":{"login":"Avogar","id":48961922,"node_id":"MDQ6VXNlcjQ4OTYxOTIy","avatar_url":"https://avatars.githubusercontent.com/u/48961922?v=4","gravatar_id":"","url":"https://api.github.com/users/Avogar","html_url":"https://github.com/Avogar","followers_url":"https://api.github.com/users/Avogar/followers","following_url":"https://api.github.com/users/Avogar/following{/other_user}","gists_url":"https://api.github.com/users/Avogar/gists{/gist_id}","starred_url":"https://api.github.com/users/Avogar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Avogar/subscriptions","organizations_url":"https://api.github.com/users/Avogar/orgs","repos_url":"https://api.github.com/users/Avogar/repos","events_url":"https://api.github.com/users/Avogar/events{/privacy}","received_events_url":"https://api.github.com/users/Avogar/received_events","type":"User","site_admin":false},"labels":[{"id":1309674771,"node_id":"MDU6TGFiZWwxMzA5Njc0Nzcx","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/pr-feature","name":"pr-feature","color":"007700","default":false,"description":"Pull request with new product feature"},{"id":1807683251,"node_id":"MDU6TGFiZWwxODA3NjgzMjUx","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/doc-alert","name":"doc-alert","color":"e51068","default":false,"description":"PR where any documentation work is needed or proceeded"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-01-28T16:35:17Z","updated_at":"2022-01-28T17:46:45Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/pulls/34125","html_url":"https://github.com/ClickHouse/ClickHouse/pull/34125","diff_url":"https://github.com/ClickHouse/ClickHouse/pull/34125.diff","patch_url":"https://github.com/ClickHouse/ClickHouse/pull/34125.patch","merged_at":null},"body":"Changelog category (leave one):\r\n- New Feature\r\n\r\n\r\nChangelog entry (a user-readable short description of the changes that goes to CHANGELOG.md):\r\nAdd table function `format(format_name, data)`.\r\n\r\nDetailed description / Documentation draft:\r\nTable function file `format(format_name, data)`, where `data` argument is a string in `format_name` format. This table function It extracts table structure from `data` and parse it according to `format_name`.\r\nExamples:\r\n```sql\r\n:) select * from format(JSONEachRow, \r\n$$\r\n{\"a\": \"Hello\", \"b\": 111}\r\n{\"a\": \"World\", \"b\": 123}\r\n{\"a\": \"Hello\", \"b\": 112}\r\n{\"a\": \"World\", \"b\": 124}\r\n$$)\r\n\r\nSELECT *\r\nFROM format(JSONEachRow, '\\n{\"a\": \"Hello\", \"b\": 111}\\n{\"a\": \"World\", \"b\": 123}\\n{\"a\": \"Hello\", \"b\": 112}\\n{\"a\": \"World\", \"b\": 124}\\n')\r\n\r\nQuery id: e009c5f8-f4f4-44bb-a6d0-c2638d9bf42d\r\n\r\n┌───b─┬─a─────┐\r\n│ 111 │ Hello │\r\n│ 123 │ World │\r\n│ 112 │ Hello │\r\n│ 124 │ World │\r\n└─────┴───────┘\r\n\r\n4 rows in set. Elapsed: 0.015 sec.\r\n```\r\n```sql\r\n:) desc format(JSONEachRow, \r\n$$\r\n{\"a\": \"Hello\", \"b\": 111}\r\n{\"a\": \"World\", \"b\": 123}\r\n{\"a\": \"Hello\", \"b\": 112}\r\n{\"a\": \"World\", \"b\": 124}\r\n$$)\r\n\r\nDESCRIBE TABLE format(JSONEachRow, '\\n{\"a\": \"Hello\", \"b\": 111}\\n{\"a\": \"World\", \"b\": 123}\\n{\"a\": \"Hello\", \"b\": 112}\\n{\"a\": \"World\", \"b\": 124}\\n')\r\n\r\nQuery id: a92a24ff-4038-4591-aa25-c93cd552130c\r\n\r\n┌─name─┬─type──────────────┬─default_type─┬─default_expression─┬─comment─┬─codec_expression─┬─ttl_expression─┐\r\n│ b    │ Nullable(Float64) │              │                    │         │                  │                │\r\n│ a    │ Nullable(String)  │              │                    │         │                  │                │\r\n└──────┴───────────────────┴──────────────┴────────────────────┴─────────┴──────────────────┴────────────────┘\r\n\r\n2 rows in set. Elapsed: 0.008 sec.\r\n```\r\nCloses https://github.com/ClickHouse/ClickHouse/issues/33812","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34125/reactions","total_count":2,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34125/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34123","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34123/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34123/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34123/events","html_url":"https://github.com/ClickHouse/ClickHouse/pull/34123","id":1117593723,"node_id":"PR_kwDOA5dJV84xvybd","number":34123,"title":"Backport #33938 to 21.3: Fix 'Not found column' exception in distributed queries with arrays and tuples","user":{"login":"robot-clickhouse","id":41385210,"node_id":"MDQ6VXNlcjQxMzg1MjEw","avatar_url":"https://avatars.githubusercontent.com/u/41385210?v=4","gravatar_id":"","url":"https://api.github.com/users/robot-clickhouse","html_url":"https://github.com/robot-clickhouse","followers_url":"https://api.github.com/users/robot-clickhouse/followers","following_url":"https://api.github.com/users/robot-clickhouse/following{/other_user}","gists_url":"https://api.github.com/users/robot-clickhouse/gists{/gist_id}","starred_url":"https://api.github.com/users/robot-clickhouse/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/robot-clickhouse/subscriptions","organizations_url":"https://api.github.com/users/robot-clickhouse/orgs","repos_url":"https://api.github.com/users/robot-clickhouse/repos","events_url":"https://api.github.com/users/robot-clickhouse/events{/privacy}","received_events_url":"https://api.github.com/users/robot-clickhouse/received_events","type":"User","site_admin":false},"labels":[{"id":1316518062,"node_id":"MDU6TGFiZWwxMzE2NTE4MDYy","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/pr-backport","name":"pr-backport","color":"5fadcc","default":false,"description":"Changes, backported to release branch. Do not use manually - automated use only!"}],"state":"open","locked":false,"assignee":{"login":"CurtizJ","id":20361854,"node_id":"MDQ6VXNlcjIwMzYxODU0","avatar_url":"https://avatars.githubusercontent.com/u/20361854?v=4","gravatar_id":"","url":"https://api.github.com/users/CurtizJ","html_url":"https://github.com/CurtizJ","followers_url":"https://api.github.com/users/CurtizJ/followers","following_url":"https://api.github.com/users/CurtizJ/following{/other_user}","gists_url":"https://api.github.com/users/CurtizJ/gists{/gist_id}","starred_url":"https://api.github.com/users/CurtizJ/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/CurtizJ/subscriptions","organizations_url":"https://api.github.com/users/CurtizJ/orgs","repos_url":"https://api.github.com/users/CurtizJ/repos","events_url":"https://api.github.com/users/CurtizJ/events{/privacy}","received_events_url":"https://api.github.com/users/CurtizJ/received_events","type":"User","site_admin":false},"assignees":[{"login":"alexey-milovidov","id":18581488,"node_id":"MDQ6VXNlcjE4NTgxNDg4","avatar_url":"https://avatars.githubusercontent.com/u/18581488?v=4","gravatar_id":"","url":"https://api.github.com/users/alexey-milovidov","html_url":"https://github.com/alexey-milovidov","followers_url":"https://api.github.com/users/alexey-milovidov/followers","following_url":"https://api.github.com/users/alexey-milovidov/following{/other_user}","gists_url":"https://api.github.com/users/alexey-milovidov/gists{/gist_id}","starred_url":"https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexey-milovidov/subscriptions","organizations_url":"https://api.github.com/users/alexey-milovidov/orgs","repos_url":"https://api.github.com/users/alexey-milovidov/repos","events_url":"https://api.github.com/users/alexey-milovidov/events{/privacy}","received_events_url":"https://api.github.com/users/alexey-milovidov/received_events","type":"User","site_admin":false},{"login":"CurtizJ","id":20361854,"node_id":"MDQ6VXNlcjIwMzYxODU0","avatar_url":"https://avatars.githubusercontent.com/u/20361854?v=4","gravatar_id":"","url":"https://api.github.com/users/CurtizJ","html_url":"https://github.com/CurtizJ","followers_url":"https://api.github.com/users/CurtizJ/followers","following_url":"https://api.github.com/users/CurtizJ/following{/other_user}","gists_url":"https://api.github.com/users/CurtizJ/gists{/gist_id}","starred_url":"https://api.github.com/users/CurtizJ/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/CurtizJ/subscriptions","organizations_url":"https://api.github.com/users/CurtizJ/orgs","repos_url":"https://api.github.com/users/CurtizJ/repos","events_url":"https://api.github.com/users/CurtizJ/events{/privacy}","received_events_url":"https://api.github.com/users/CurtizJ/received_events","type":"User","site_admin":false}],"milestone":null,"comments":0,"created_at":"2022-01-28T16:26:06Z","updated_at":"2022-01-28T16:26:10Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/pulls/34123","html_url":"https://github.com/ClickHouse/ClickHouse/pull/34123","diff_url":"https://github.com/ClickHouse/ClickHouse/pull/34123.diff","patch_url":"https://github.com/ClickHouse/ClickHouse/pull/34123.patch","merged_at":null},"body":"Original pull-request #33938\nCherry-pick pull-request #34102\n\nThis pull-request is a last step of an automated backporting.\nTreat it as a standard pull-request: look at the checks and resolve conflicts.\nMerge it only if you intend to backport changes to the target branch, otherwise just close it.\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34123/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34123/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34122","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34122/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34122/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34122/events","html_url":"https://github.com/ClickHouse/ClickHouse/pull/34122","id":1117593449,"node_id":"PR_kwDOA5dJV84xvyX0","number":34122,"title":"Backport #33938 to 21.11: Fix 'Not found column' exception in distributed queries with arrays and tuples","user":{"login":"robot-clickhouse","id":41385210,"node_id":"MDQ6VXNlcjQxMzg1MjEw","avatar_url":"https://avatars.githubusercontent.com/u/41385210?v=4","gravatar_id":"","url":"https://api.github.com/users/robot-clickhouse","html_url":"https://github.com/robot-clickhouse","followers_url":"https://api.github.com/users/robot-clickhouse/followers","following_url":"https://api.github.com/users/robot-clickhouse/following{/other_user}","gists_url":"https://api.github.com/users/robot-clickhouse/gists{/gist_id}","starred_url":"https://api.github.com/users/robot-clickhouse/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/robot-clickhouse/subscriptions","organizations_url":"https://api.github.com/users/robot-clickhouse/orgs","repos_url":"https://api.github.com/users/robot-clickhouse/repos","events_url":"https://api.github.com/users/robot-clickhouse/events{/privacy}","received_events_url":"https://api.github.com/users/robot-clickhouse/received_events","type":"User","site_admin":false},"labels":[{"id":1316518062,"node_id":"MDU6TGFiZWwxMzE2NTE4MDYy","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/pr-backport","name":"pr-backport","color":"5fadcc","default":false,"description":"Changes, backported to release branch. Do not use manually - automated use only!"}],"state":"open","locked":false,"assignee":{"login":"CurtizJ","id":20361854,"node_id":"MDQ6VXNlcjIwMzYxODU0","avatar_url":"https://avatars.githubusercontent.com/u/20361854?v=4","gravatar_id":"","url":"https://api.github.com/users/CurtizJ","html_url":"https://github.com/CurtizJ","followers_url":"https://api.github.com/users/CurtizJ/followers","following_url":"https://api.github.com/users/CurtizJ/following{/other_user}","gists_url":"https://api.github.com/users/CurtizJ/gists{/gist_id}","starred_url":"https://api.github.com/users/CurtizJ/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/CurtizJ/subscriptions","organizations_url":"https://api.github.com/users/CurtizJ/orgs","repos_url":"https://api.github.com/users/CurtizJ/repos","events_url":"https://api.github.com/users/CurtizJ/events{/privacy}","received_events_url":"https://api.github.com/users/CurtizJ/received_events","type":"User","site_admin":false},"assignees":[{"login":"alexey-milovidov","id":18581488,"node_id":"MDQ6VXNlcjE4NTgxNDg4","avatar_url":"https://avatars.githubusercontent.com/u/18581488?v=4","gravatar_id":"","url":"https://api.github.com/users/alexey-milovidov","html_url":"https://github.com/alexey-milovidov","followers_url":"https://api.github.com/users/alexey-milovidov/followers","following_url":"https://api.github.com/users/alexey-milovidov/following{/other_user}","gists_url":"https://api.github.com/users/alexey-milovidov/gists{/gist_id}","starred_url":"https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexey-milovidov/subscriptions","organizations_url":"https://api.github.com/users/alexey-milovidov/orgs","repos_url":"https://api.github.com/users/alexey-milovidov/repos","events_url":"https://api.github.com/users/alexey-milovidov/events{/privacy}","received_events_url":"https://api.github.com/users/alexey-milovidov/received_events","type":"User","site_admin":false},{"login":"CurtizJ","id":20361854,"node_id":"MDQ6VXNlcjIwMzYxODU0","avatar_url":"https://avatars.githubusercontent.com/u/20361854?v=4","gravatar_id":"","url":"https://api.github.com/users/CurtizJ","html_url":"https://github.com/CurtizJ","followers_url":"https://api.github.com/users/CurtizJ/followers","following_url":"https://api.github.com/users/CurtizJ/following{/other_user}","gists_url":"https://api.github.com/users/CurtizJ/gists{/gist_id}","starred_url":"https://api.github.com/users/CurtizJ/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/CurtizJ/subscriptions","organizations_url":"https://api.github.com/users/CurtizJ/orgs","repos_url":"https://api.github.com/users/CurtizJ/repos","events_url":"https://api.github.com/users/CurtizJ/events{/privacy}","received_events_url":"https://api.github.com/users/CurtizJ/received_events","type":"User","site_admin":false}],"milestone":null,"comments":0,"created_at":"2022-01-28T16:25:49Z","updated_at":"2022-01-28T16:25:53Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/pulls/34122","html_url":"https://github.com/ClickHouse/ClickHouse/pull/34122","diff_url":"https://github.com/ClickHouse/ClickHouse/pull/34122.diff","patch_url":"https://github.com/ClickHouse/ClickHouse/pull/34122.patch","merged_at":null},"body":"Original pull-request #33938\nCherry-pick pull-request #34105\n\nThis pull-request is a last step of an automated backporting.\nTreat it as a standard pull-request: look at the checks and resolve conflicts.\nMerge it only if you intend to backport changes to the target branch, otherwise just close it.\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34122/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34122/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34121","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34121/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34121/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34121/events","html_url":"https://github.com/ClickHouse/ClickHouse/pull/34121","id":1117593181,"node_id":"PR_kwDOA5dJV84xvyUa","number":34121,"title":"Backport #33938 to 21.8: Fix 'Not found column' exception in distributed queries with arrays and tuples","user":{"login":"robot-clickhouse","id":41385210,"node_id":"MDQ6VXNlcjQxMzg1MjEw","avatar_url":"https://avatars.githubusercontent.com/u/41385210?v=4","gravatar_id":"","url":"https://api.github.com/users/robot-clickhouse","html_url":"https://github.com/robot-clickhouse","followers_url":"https://api.github.com/users/robot-clickhouse/followers","following_url":"https://api.github.com/users/robot-clickhouse/following{/other_user}","gists_url":"https://api.github.com/users/robot-clickhouse/gists{/gist_id}","starred_url":"https://api.github.com/users/robot-clickhouse/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/robot-clickhouse/subscriptions","organizations_url":"https://api.github.com/users/robot-clickhouse/orgs","repos_url":"https://api.github.com/users/robot-clickhouse/repos","events_url":"https://api.github.com/users/robot-clickhouse/events{/privacy}","received_events_url":"https://api.github.com/users/robot-clickhouse/received_events","type":"User","site_admin":false},"labels":[{"id":1316518062,"node_id":"MDU6TGFiZWwxMzE2NTE4MDYy","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/pr-backport","name":"pr-backport","color":"5fadcc","default":false,"description":"Changes, backported to release branch. Do not use manually - automated use only!"}],"state":"open","locked":false,"assignee":{"login":"CurtizJ","id":20361854,"node_id":"MDQ6VXNlcjIwMzYxODU0","avatar_url":"https://avatars.githubusercontent.com/u/20361854?v=4","gravatar_id":"","url":"https://api.github.com/users/CurtizJ","html_url":"https://github.com/CurtizJ","followers_url":"https://api.github.com/users/CurtizJ/followers","following_url":"https://api.github.com/users/CurtizJ/following{/other_user}","gists_url":"https://api.github.com/users/CurtizJ/gists{/gist_id}","starred_url":"https://api.github.com/users/CurtizJ/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/CurtizJ/subscriptions","organizations_url":"https://api.github.com/users/CurtizJ/orgs","repos_url":"https://api.github.com/users/CurtizJ/repos","events_url":"https://api.github.com/users/CurtizJ/events{/privacy}","received_events_url":"https://api.github.com/users/CurtizJ/received_events","type":"User","site_admin":false},"assignees":[{"login":"alexey-milovidov","id":18581488,"node_id":"MDQ6VXNlcjE4NTgxNDg4","avatar_url":"https://avatars.githubusercontent.com/u/18581488?v=4","gravatar_id":"","url":"https://api.github.com/users/alexey-milovidov","html_url":"https://github.com/alexey-milovidov","followers_url":"https://api.github.com/users/alexey-milovidov/followers","following_url":"https://api.github.com/users/alexey-milovidov/following{/other_user}","gists_url":"https://api.github.com/users/alexey-milovidov/gists{/gist_id}","starred_url":"https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexey-milovidov/subscriptions","organizations_url":"https://api.github.com/users/alexey-milovidov/orgs","repos_url":"https://api.github.com/users/alexey-milovidov/repos","events_url":"https://api.github.com/users/alexey-milovidov/events{/privacy}","received_events_url":"https://api.github.com/users/alexey-milovidov/received_events","type":"User","site_admin":false},{"login":"CurtizJ","id":20361854,"node_id":"MDQ6VXNlcjIwMzYxODU0","avatar_url":"https://avatars.githubusercontent.com/u/20361854?v=4","gravatar_id":"","url":"https://api.github.com/users/CurtizJ","html_url":"https://github.com/CurtizJ","followers_url":"https://api.github.com/users/CurtizJ/followers","following_url":"https://api.github.com/users/CurtizJ/following{/other_user}","gists_url":"https://api.github.com/users/CurtizJ/gists{/gist_id}","starred_url":"https://api.github.com/users/CurtizJ/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/CurtizJ/subscriptions","organizations_url":"https://api.github.com/users/CurtizJ/orgs","repos_url":"https://api.github.com/users/CurtizJ/repos","events_url":"https://api.github.com/users/CurtizJ/events{/privacy}","received_events_url":"https://api.github.com/users/CurtizJ/received_events","type":"User","site_admin":false}],"milestone":null,"comments":0,"created_at":"2022-01-28T16:25:33Z","updated_at":"2022-01-28T16:25:38Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/pulls/34121","html_url":"https://github.com/ClickHouse/ClickHouse/pull/34121","diff_url":"https://github.com/ClickHouse/ClickHouse/pull/34121.diff","patch_url":"https://github.com/ClickHouse/ClickHouse/pull/34121.patch","merged_at":null},"body":"Original pull-request #33938\nCherry-pick pull-request #34101\n\nThis pull-request is a last step of an automated backporting.\nTreat it as a standard pull-request: look at the checks and resolve conflicts.\nMerge it only if you intend to backport changes to the target branch, otherwise just close it.\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34121/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34121/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34120","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34120/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34120/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34120/events","html_url":"https://github.com/ClickHouse/ClickHouse/pull/34120","id":1117592902,"node_id":"PR_kwDOA5dJV84xvyQl","number":34120,"title":"Backport #33938 to 21.12: Fix 'Not found column' exception in distributed queries with arrays and tuples","user":{"login":"robot-clickhouse","id":41385210,"node_id":"MDQ6VXNlcjQxMzg1MjEw","avatar_url":"https://avatars.githubusercontent.com/u/41385210?v=4","gravatar_id":"","url":"https://api.github.com/users/robot-clickhouse","html_url":"https://github.com/robot-clickhouse","followers_url":"https://api.github.com/users/robot-clickhouse/followers","following_url":"https://api.github.com/users/robot-clickhouse/following{/other_user}","gists_url":"https://api.github.com/users/robot-clickhouse/gists{/gist_id}","starred_url":"https://api.github.com/users/robot-clickhouse/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/robot-clickhouse/subscriptions","organizations_url":"https://api.github.com/users/robot-clickhouse/orgs","repos_url":"https://api.github.com/users/robot-clickhouse/repos","events_url":"https://api.github.com/users/robot-clickhouse/events{/privacy}","received_events_url":"https://api.github.com/users/robot-clickhouse/received_events","type":"User","site_admin":false},"labels":[{"id":1316518062,"node_id":"MDU6TGFiZWwxMzE2NTE4MDYy","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/pr-backport","name":"pr-backport","color":"5fadcc","default":false,"description":"Changes, backported to release branch. Do not use manually - automated use only!"}],"state":"open","locked":false,"assignee":{"login":"CurtizJ","id":20361854,"node_id":"MDQ6VXNlcjIwMzYxODU0","avatar_url":"https://avatars.githubusercontent.com/u/20361854?v=4","gravatar_id":"","url":"https://api.github.com/users/CurtizJ","html_url":"https://github.com/CurtizJ","followers_url":"https://api.github.com/users/CurtizJ/followers","following_url":"https://api.github.com/users/CurtizJ/following{/other_user}","gists_url":"https://api.github.com/users/CurtizJ/gists{/gist_id}","starred_url":"https://api.github.com/users/CurtizJ/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/CurtizJ/subscriptions","organizations_url":"https://api.github.com/users/CurtizJ/orgs","repos_url":"https://api.github.com/users/CurtizJ/repos","events_url":"https://api.github.com/users/CurtizJ/events{/privacy}","received_events_url":"https://api.github.com/users/CurtizJ/received_events","type":"User","site_admin":false},"assignees":[{"login":"alexey-milovidov","id":18581488,"node_id":"MDQ6VXNlcjE4NTgxNDg4","avatar_url":"https://avatars.githubusercontent.com/u/18581488?v=4","gravatar_id":"","url":"https://api.github.com/users/alexey-milovidov","html_url":"https://github.com/alexey-milovidov","followers_url":"https://api.github.com/users/alexey-milovidov/followers","following_url":"https://api.github.com/users/alexey-milovidov/following{/other_user}","gists_url":"https://api.github.com/users/alexey-milovidov/gists{/gist_id}","starred_url":"https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexey-milovidov/subscriptions","organizations_url":"https://api.github.com/users/alexey-milovidov/orgs","repos_url":"https://api.github.com/users/alexey-milovidov/repos","events_url":"https://api.github.com/users/alexey-milovidov/events{/privacy}","received_events_url":"https://api.github.com/users/alexey-milovidov/received_events","type":"User","site_admin":false},{"login":"CurtizJ","id":20361854,"node_id":"MDQ6VXNlcjIwMzYxODU0","avatar_url":"https://avatars.githubusercontent.com/u/20361854?v=4","gravatar_id":"","url":"https://api.github.com/users/CurtizJ","html_url":"https://github.com/CurtizJ","followers_url":"https://api.github.com/users/CurtizJ/followers","following_url":"https://api.github.com/users/CurtizJ/following{/other_user}","gists_url":"https://api.github.com/users/CurtizJ/gists{/gist_id}","starred_url":"https://api.github.com/users/CurtizJ/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/CurtizJ/subscriptions","organizations_url":"https://api.github.com/users/CurtizJ/orgs","repos_url":"https://api.github.com/users/CurtizJ/repos","events_url":"https://api.github.com/users/CurtizJ/events{/privacy}","received_events_url":"https://api.github.com/users/CurtizJ/received_events","type":"User","site_admin":false}],"milestone":null,"comments":0,"created_at":"2022-01-28T16:25:16Z","updated_at":"2022-01-28T16:25:21Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/pulls/34120","html_url":"https://github.com/ClickHouse/ClickHouse/pull/34120","diff_url":"https://github.com/ClickHouse/ClickHouse/pull/34120.diff","patch_url":"https://github.com/ClickHouse/ClickHouse/pull/34120.patch","merged_at":null},"body":"Original pull-request #33938\nCherry-pick pull-request #34104\n\nThis pull-request is a last step of an automated backporting.\nTreat it as a standard pull-request: look at the checks and resolve conflicts.\nMerge it only if you intend to backport changes to the target branch, otherwise just close it.\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34120/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34120/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34119","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34119/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34119/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34119/events","html_url":"https://github.com/ClickHouse/ClickHouse/pull/34119","id":1117592647,"node_id":"PR_kwDOA5dJV84xvyNJ","number":34119,"title":"Backport #33938 to 22.1: Fix 'Not found column' exception in distributed queries with arrays and tuples","user":{"login":"robot-clickhouse","id":41385210,"node_id":"MDQ6VXNlcjQxMzg1MjEw","avatar_url":"https://avatars.githubusercontent.com/u/41385210?v=4","gravatar_id":"","url":"https://api.github.com/users/robot-clickhouse","html_url":"https://github.com/robot-clickhouse","followers_url":"https://api.github.com/users/robot-clickhouse/followers","following_url":"https://api.github.com/users/robot-clickhouse/following{/other_user}","gists_url":"https://api.github.com/users/robot-clickhouse/gists{/gist_id}","starred_url":"https://api.github.com/users/robot-clickhouse/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/robot-clickhouse/subscriptions","organizations_url":"https://api.github.com/users/robot-clickhouse/orgs","repos_url":"https://api.github.com/users/robot-clickhouse/repos","events_url":"https://api.github.com/users/robot-clickhouse/events{/privacy}","received_events_url":"https://api.github.com/users/robot-clickhouse/received_events","type":"User","site_admin":false},"labels":[{"id":1316518062,"node_id":"MDU6TGFiZWwxMzE2NTE4MDYy","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/pr-backport","name":"pr-backport","color":"5fadcc","default":false,"description":"Changes, backported to release branch. Do not use manually - automated use only!"}],"state":"open","locked":false,"assignee":{"login":"CurtizJ","id":20361854,"node_id":"MDQ6VXNlcjIwMzYxODU0","avatar_url":"https://avatars.githubusercontent.com/u/20361854?v=4","gravatar_id":"","url":"https://api.github.com/users/CurtizJ","html_url":"https://github.com/CurtizJ","followers_url":"https://api.github.com/users/CurtizJ/followers","following_url":"https://api.github.com/users/CurtizJ/following{/other_user}","gists_url":"https://api.github.com/users/CurtizJ/gists{/gist_id}","starred_url":"https://api.github.com/users/CurtizJ/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/CurtizJ/subscriptions","organizations_url":"https://api.github.com/users/CurtizJ/orgs","repos_url":"https://api.github.com/users/CurtizJ/repos","events_url":"https://api.github.com/users/CurtizJ/events{/privacy}","received_events_url":"https://api.github.com/users/CurtizJ/received_events","type":"User","site_admin":false},"assignees":[{"login":"alexey-milovidov","id":18581488,"node_id":"MDQ6VXNlcjE4NTgxNDg4","avatar_url":"https://avatars.githubusercontent.com/u/18581488?v=4","gravatar_id":"","url":"https://api.github.com/users/alexey-milovidov","html_url":"https://github.com/alexey-milovidov","followers_url":"https://api.github.com/users/alexey-milovidov/followers","following_url":"https://api.github.com/users/alexey-milovidov/following{/other_user}","gists_url":"https://api.github.com/users/alexey-milovidov/gists{/gist_id}","starred_url":"https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexey-milovidov/subscriptions","organizations_url":"https://api.github.com/users/alexey-milovidov/orgs","repos_url":"https://api.github.com/users/alexey-milovidov/repos","events_url":"https://api.github.com/users/alexey-milovidov/events{/privacy}","received_events_url":"https://api.github.com/users/alexey-milovidov/received_events","type":"User","site_admin":false},{"login":"CurtizJ","id":20361854,"node_id":"MDQ6VXNlcjIwMzYxODU0","avatar_url":"https://avatars.githubusercontent.com/u/20361854?v=4","gravatar_id":"","url":"https://api.github.com/users/CurtizJ","html_url":"https://github.com/CurtizJ","followers_url":"https://api.github.com/users/CurtizJ/followers","following_url":"https://api.github.com/users/CurtizJ/following{/other_user}","gists_url":"https://api.github.com/users/CurtizJ/gists{/gist_id}","starred_url":"https://api.github.com/users/CurtizJ/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/CurtizJ/subscriptions","organizations_url":"https://api.github.com/users/CurtizJ/orgs","repos_url":"https://api.github.com/users/CurtizJ/repos","events_url":"https://api.github.com/users/CurtizJ/events{/privacy}","received_events_url":"https://api.github.com/users/CurtizJ/received_events","type":"User","site_admin":false}],"milestone":null,"comments":0,"created_at":"2022-01-28T16:25:01Z","updated_at":"2022-01-28T16:25:06Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/pulls/34119","html_url":"https://github.com/ClickHouse/ClickHouse/pull/34119","diff_url":"https://github.com/ClickHouse/ClickHouse/pull/34119.diff","patch_url":"https://github.com/ClickHouse/ClickHouse/pull/34119.patch","merged_at":null},"body":"Original pull-request #33938\nCherry-pick pull-request #34103\n\nThis pull-request is a last step of an automated backporting.\nTreat it as a standard pull-request: look at the checks and resolve conflicts.\nMerge it only if you intend to backport changes to the target branch, otherwise just close it.\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34119/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34119/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34118","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34118/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34118/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34118/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/34118","id":1117592572,"node_id":"I_kwDOA5dJV85CnRv8","number":34118,"title":"DB::Exception: There is no role `xxxx` in user directories (version 21.8.13.6 (official build))","user":{"login":"electrical","id":271677,"node_id":"MDQ6VXNlcjI3MTY3Nw==","avatar_url":"https://avatars.githubusercontent.com/u/271677?v=4","gravatar_id":"","url":"https://api.github.com/users/electrical","html_url":"https://github.com/electrical","followers_url":"https://api.github.com/users/electrical/followers","following_url":"https://api.github.com/users/electrical/following{/other_user}","gists_url":"https://api.github.com/users/electrical/gists{/gist_id}","starred_url":"https://api.github.com/users/electrical/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/electrical/subscriptions","organizations_url":"https://api.github.com/users/electrical/orgs","repos_url":"https://api.github.com/users/electrical/repos","events_url":"https://api.github.com/users/electrical/events{/privacy}","received_events_url":"https://api.github.com/users/electrical/received_events","type":"User","site_admin":false},"labels":[{"id":1507860028,"node_id":"MDU6TGFiZWwxNTA3ODYwMDI4","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/st-need-repro","name":"st-need-repro","color":"e5b890","default":false,"description":"We were not able to reproduce the problem, please help us."},{"id":1575085465,"node_id":"MDU6TGFiZWwxNTc1MDg1NDY1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/unexpected%20behaviour","name":"unexpected behaviour","color":"e088ca","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2022-01-28T16:24:55Z","updated_at":"2022-01-28T17:41:58Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"**Describe the unexpected behaviour**\r\nWe manage users via DDL statements for CREATE and GRANT on our different cluster nodes.\r\nThis worked fine until the upgrade to 21.8.13.6\r\n\r\nQuerying the individual nodes, all the users exist. They also exist in the `access` directory.\r\n\r\nThe error ```DB::Exception: There is no role `xxxx` in user directories.``` seems to indicate it's looking for a role while it should be a user.\r\n\r\nWe go through a list of users to do these statements and sometimes it fails on the first grant, other times it fails on the next user.\r\nit's very random at this point.\r\n\r\n\r\n**Error message and/or stacktrace**\r\n\r\n```\r\n2022.01.28 16:15:24.025563 [ 38 ] {2065ac2e-e736-472d-8af3-484d85ca9c23} <Error> executeQuery: Code: 511, e.displayText() = DB::Exception: There is no role `ccccc` in user directories (version 21.8.13.6 (official build)) (from 10.42.0.93:44056) (in query: GRANT ON CLUSTER aaaaa SELECT ON bbbbb.* TO `ccccc`), Stack trace (when copying this message, always include the lines below):\r\n--\r\nFri, Jan 28 2022 4:15:24 pm |  \r\nFri, Jan 28 2022 4:15:24 pm | 0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x8febd9a in /usr/bin/clickhouse\r\nFri, Jan 28 2022 4:15:24 pm | 1. DB::IAccessStorage::throwNotFound(DB::IAccessEntity::Type, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const @ 0xfc079e2 in /usr/bin/clickhouse\r\nFri, Jan 28 2022 4:15:24 pm | 2. ? @ 0xfc48a3f in /usr/bin/clickhouse\r\nFri, Jan 28 2022 4:15:24 pm | 3. DB::RolesOrUsersSet::init(DB::ASTRolesOrUsersSet const&, DB::AccessControlManager const*, std::__1::optional<StrongTypedef<wide::integer<128ul, unsigned int>, DB::UUIDTag> > const&) @ 0xfc4856d in /usr/bin/clickhouse\r\nFri, Jan 28 2022 4:15:24 pm | 4. DB::InterpreterGrantQuery::execute() @ 0x1045391f in /usr/bin/clickhouse\r\nFri, Jan 28 2022 4:15:24 pm | 5. ? @ 0x1081bf04 in /usr/bin/clickhouse\r\nFri, Jan 28 2022 4:15:24 pm | 6. DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::shared_ptr<DB::Context>, bool, DB::QueryProcessingStage::Enum, bool) @ 0x1081a5a3 in /usr/bin/clickhouse\r\nFri, Jan 28 2022 4:15:24 pm | 7. DB::TCPHandler::runImpl() @ 0x110c08be in /usr/bin/clickhouse\r\nFri, Jan 28 2022 4:15:24 pm | 8. DB::TCPHandler::run() @ 0x110d3859 in /usr/bin/clickhouse\r\nFri, Jan 28 2022 4:15:24 pm | 9. Poco::Net::TCPServerConnection::start() @ 0x13c4ca2f in /usr/bin/clickhouse\r\nFri, Jan 28 2022 4:15:24 pm | 10. Poco::Net::TCPServerDispatcher::run() @ 0x13c4e4ba in /usr/bin/clickhouse\r\nFri, Jan 28 2022 4:15:24 pm | 11. Poco::PooledThread::run() @ 0x13d80739 in /usr/bin/clickhouse\r\nFri, Jan 28 2022 4:15:24 pm | 12. Poco::ThreadImpl::runnableEntry(void*) @ 0x13d7c9ca in /usr/bin/clickhouse\r\nFri, Jan 28 2022 4:15:24 pm | 13. start_thread @ 0x9609 in /usr/lib/x86_64-linux-gnu/libpthread-2.31.so\r\nFri, Jan 28 2022 4:15:24 pm | 14. __clone @ 0x122293 in /usr/lib/x86_64-linux-gnu/libc-2.31.so\r\nFri, Jan 28 2022 4:15:24 pm |  \r\nFri, Jan 28 2022 4:15:24 pm | 2022.01.28 16:15:24.025911 [ 38 ] {2065ac2e-e736-472d-8af3-484d85ca9c23} <Error> TCPHandler: Code: 511, e.displayText() = DB::Exception: There is no role `ccccc` in user directories, Stack trace:\r\nFri, Jan 28 2022 4:15:24 pm |  \r\nFri, Jan 28 2022 4:15:24 pm | 0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x8febd9a in /usr/bin/clickhouse\r\nFri, Jan 28 2022 4:15:24 pm | 1. DB::IAccessStorage::throwNotFound(DB::IAccessEntity::Type, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const @ 0xfc079e2 in /usr/bin/clickhouse\r\nFri, Jan 28 2022 4:15:24 pm | 2. ? @ 0xfc48a3f in /usr/bin/clickhouse\r\nFri, Jan 28 2022 4:15:24 pm | 3. DB::RolesOrUsersSet::init(DB::ASTRolesOrUsersSet const&, DB::AccessControlManager const*, std::__1::optional<StrongTypedef<wide::integer<128ul, unsigned int>, DB::UUIDTag> > const&) @ 0xfc4856d in /usr/bin/clickhouse\r\nFri, Jan 28 2022 4:15:24 pm | 4. DB::InterpreterGrantQuery::execute() @ 0x1045391f in /usr/bin/clickhouse\r\nFri, Jan 28 2022 4:15:24 pm | 5. ? @ 0x1081bf04 in /usr/bin/clickhouse\r\nFri, Jan 28 2022 4:15:24 pm | 6. DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::shared_ptr<DB::Context>, bool, DB::QueryProcessingStage::Enum, bool) @ 0x1081a5a3 in /usr/bin/clickhouse\r\nFri, Jan 28 2022 4:15:24 pm | 7. DB::TCPHandler::runImpl() @ 0x110c08be in /usr/bin/clickhouse\r\nFri, Jan 28 2022 4:15:24 pm | 8. DB::TCPHandler::run() @ 0x110d3859 in /usr/bin/clickhouse\r\nFri, Jan 28 2022 4:15:24 pm | 9. Poco::Net::TCPServerConnection::start() @ 0x13c4ca2f in /usr/bin/clickhouse\r\nFri, Jan 28 2022 4:15:24 pm | 10. Poco::Net::TCPServerDispatcher::run() @ 0x13c4e4ba in /usr/bin/clickhouse\r\nFri, Jan 28 2022 4:15:24 pm | 11. Poco::PooledThread::run() @ 0x13d80739 in /usr/bin/clickhouse\r\nFri, Jan 28 2022 4:15:24 pm | 12. Poco::ThreadImpl::runnableEntry(void*) @ 0x13d7c9ca in /usr/bin/clickhouse\r\nFri, Jan 28 2022 4:15:24 pm | 13. start_thread @ 0x9609 in /usr/lib/x86_64-linux-gnu/libpthread-2.31.so\r\nFri, Jan 28 2022 4:15:24 pm | 14. __clone @ 0x122293 in /usr/lib/x86_64-linux-gnu/libc-2.31.so\r\n```\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34118/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34118/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34117","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34117/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34117/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34117/events","html_url":"https://github.com/ClickHouse/ClickHouse/pull/34117","id":1117585303,"node_id":"PR_kwDOA5dJV84xvwpc","number":34117,"title":"Small improvement in schema inference from stdin in local","user":{"login":"Avogar","id":48961922,"node_id":"MDQ6VXNlcjQ4OTYxOTIy","avatar_url":"https://avatars.githubusercontent.com/u/48961922?v=4","gravatar_id":"","url":"https://api.github.com/users/Avogar","html_url":"https://github.com/Avogar","followers_url":"https://api.github.com/users/Avogar/followers","following_url":"https://api.github.com/users/Avogar/following{/other_user}","gists_url":"https://api.github.com/users/Avogar/gists{/gist_id}","starred_url":"https://api.github.com/users/Avogar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Avogar/subscriptions","organizations_url":"https://api.github.com/users/Avogar/orgs","repos_url":"https://api.github.com/users/Avogar/repos","events_url":"https://api.github.com/users/Avogar/events{/privacy}","received_events_url":"https://api.github.com/users/Avogar/received_events","type":"User","site_admin":false},"labels":[{"id":1876999755,"node_id":"MDU6TGFiZWwxODc2OTk5NzU1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/pr-not-for-changelog","name":"pr-not-for-changelog","color":"007700","default":false,"description":"This PR should not be mentioned in the changelog"}],"state":"open","locked":false,"assignee":{"login":"kitaisreal","id":22458333,"node_id":"MDQ6VXNlcjIyNDU4MzMz","avatar_url":"https://avatars.githubusercontent.com/u/22458333?v=4","gravatar_id":"","url":"https://api.github.com/users/kitaisreal","html_url":"https://github.com/kitaisreal","followers_url":"https://api.github.com/users/kitaisreal/followers","following_url":"https://api.github.com/users/kitaisreal/following{/other_user}","gists_url":"https://api.github.com/users/kitaisreal/gists{/gist_id}","starred_url":"https://api.github.com/users/kitaisreal/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kitaisreal/subscriptions","organizations_url":"https://api.github.com/users/kitaisreal/orgs","repos_url":"https://api.github.com/users/kitaisreal/repos","events_url":"https://api.github.com/users/kitaisreal/events{/privacy}","received_events_url":"https://api.github.com/users/kitaisreal/received_events","type":"User","site_admin":false},"assignees":[{"login":"kitaisreal","id":22458333,"node_id":"MDQ6VXNlcjIyNDU4MzMz","avatar_url":"https://avatars.githubusercontent.com/u/22458333?v=4","gravatar_id":"","url":"https://api.github.com/users/kitaisreal","html_url":"https://github.com/kitaisreal","followers_url":"https://api.github.com/users/kitaisreal/followers","following_url":"https://api.github.com/users/kitaisreal/following{/other_user}","gists_url":"https://api.github.com/users/kitaisreal/gists{/gist_id}","starred_url":"https://api.github.com/users/kitaisreal/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kitaisreal/subscriptions","organizations_url":"https://api.github.com/users/kitaisreal/orgs","repos_url":"https://api.github.com/users/kitaisreal/repos","events_url":"https://api.github.com/users/kitaisreal/events{/privacy}","received_events_url":"https://api.github.com/users/kitaisreal/received_events","type":"User","site_admin":false}],"milestone":null,"comments":3,"created_at":"2022-01-28T16:18:10Z","updated_at":"2022-01-28T17:07:22Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/pulls/34117","html_url":"https://github.com/ClickHouse/ClickHouse/pull/34117","diff_url":"https://github.com/ClickHouse/ClickHouse/pull/34117.diff","patch_url":"https://github.com/ClickHouse/ClickHouse/pull/34117.patch","merged_at":null},"body":"Changelog category (leave one):\r\n- Not for changelog (changelog entry is not required)\r\n\r\nSmall improvement in schema inference from stdin in local","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34117/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34117/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34115","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34115/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34115/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34115/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/34115","id":1117534849,"node_id":"I_kwDOA5dJV85CnDqB","number":34115,"title":"Consider checking out bitsetsort performance","user":{"login":"chhetripradeep","id":30620077,"node_id":"MDQ6VXNlcjMwNjIwMDc3","avatar_url":"https://avatars.githubusercontent.com/u/30620077?v=4","gravatar_id":"","url":"https://api.github.com/users/chhetripradeep","html_url":"https://github.com/chhetripradeep","followers_url":"https://api.github.com/users/chhetripradeep/followers","following_url":"https://api.github.com/users/chhetripradeep/following{/other_user}","gists_url":"https://api.github.com/users/chhetripradeep/gists{/gist_id}","starred_url":"https://api.github.com/users/chhetripradeep/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/chhetripradeep/subscriptions","organizations_url":"https://api.github.com/users/chhetripradeep/orgs","repos_url":"https://api.github.com/users/chhetripradeep/repos","events_url":"https://api.github.com/users/chhetripradeep/events{/privacy}","received_events_url":"https://api.github.com/users/chhetripradeep/received_events","type":"User","site_admin":false},"labels":[{"id":756395244,"node_id":"MDU6TGFiZWw3NTYzOTUyNDQ=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/performance","name":"performance","color":"c2e0c6","default":false,"description":null}],"state":"open","locked":false,"assignee":{"login":"kitaisreal","id":22458333,"node_id":"MDQ6VXNlcjIyNDU4MzMz","avatar_url":"https://avatars.githubusercontent.com/u/22458333?v=4","gravatar_id":"","url":"https://api.github.com/users/kitaisreal","html_url":"https://github.com/kitaisreal","followers_url":"https://api.github.com/users/kitaisreal/followers","following_url":"https://api.github.com/users/kitaisreal/following{/other_user}","gists_url":"https://api.github.com/users/kitaisreal/gists{/gist_id}","starred_url":"https://api.github.com/users/kitaisreal/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kitaisreal/subscriptions","organizations_url":"https://api.github.com/users/kitaisreal/orgs","repos_url":"https://api.github.com/users/kitaisreal/repos","events_url":"https://api.github.com/users/kitaisreal/events{/privacy}","received_events_url":"https://api.github.com/users/kitaisreal/received_events","type":"User","site_admin":false},"assignees":[{"login":"kitaisreal","id":22458333,"node_id":"MDQ6VXNlcjIyNDU4MzMz","avatar_url":"https://avatars.githubusercontent.com/u/22458333?v=4","gravatar_id":"","url":"https://api.github.com/users/kitaisreal","html_url":"https://github.com/kitaisreal","followers_url":"https://api.github.com/users/kitaisreal/followers","following_url":"https://api.github.com/users/kitaisreal/following{/other_user}","gists_url":"https://api.github.com/users/kitaisreal/gists{/gist_id}","starred_url":"https://api.github.com/users/kitaisreal/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kitaisreal/subscriptions","organizations_url":"https://api.github.com/users/kitaisreal/orgs","repos_url":"https://api.github.com/users/kitaisreal/repos","events_url":"https://api.github.com/users/kitaisreal/events{/privacy}","received_events_url":"https://api.github.com/users/kitaisreal/received_events","type":"User","site_admin":false}],"milestone":null,"comments":1,"created_at":"2022-01-28T15:31:04Z","updated_at":"2022-01-29T18:51:27Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"[BitSetSort](https://github.com/minjaehwang/bitsetsort) claims to perform better than pdqsort and std::sort for randomized inputs. I thought to open this issue to see if we can benefit from it.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34115/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34115/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34114","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34114/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34114/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34114/events","html_url":"https://github.com/ClickHouse/ClickHouse/pull/34114","id":1117526699,"node_id":"PR_kwDOA5dJV84xvkZH","number":34114,"title":"Combining our lexer with replxx for better multiple line editing","user":{"login":"amosbird","id":5085485,"node_id":"MDQ6VXNlcjUwODU0ODU=","avatar_url":"https://avatars.githubusercontent.com/u/5085485?v=4","gravatar_id":"","url":"https://api.github.com/users/amosbird","html_url":"https://github.com/amosbird","followers_url":"https://api.github.com/users/amosbird/followers","following_url":"https://api.github.com/users/amosbird/following{/other_user}","gists_url":"https://api.github.com/users/amosbird/gists{/gist_id}","starred_url":"https://api.github.com/users/amosbird/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/amosbird/subscriptions","organizations_url":"https://api.github.com/users/amosbird/orgs","repos_url":"https://api.github.com/users/amosbird/repos","events_url":"https://api.github.com/users/amosbird/events{/privacy}","received_events_url":"https://api.github.com/users/amosbird/received_events","type":"User","site_admin":false},"labels":[{"id":1304141686,"node_id":"MDU6TGFiZWwxMzA0MTQxNjg2","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/pr-improvement","name":"pr-improvement","color":"007700","default":false,"description":"Pull request with some product improvements"}],"state":"open","locked":false,"assignee":{"login":"alexey-milovidov","id":18581488,"node_id":"MDQ6VXNlcjE4NTgxNDg4","avatar_url":"https://avatars.githubusercontent.com/u/18581488?v=4","gravatar_id":"","url":"https://api.github.com/users/alexey-milovidov","html_url":"https://github.com/alexey-milovidov","followers_url":"https://api.github.com/users/alexey-milovidov/followers","following_url":"https://api.github.com/users/alexey-milovidov/following{/other_user}","gists_url":"https://api.github.com/users/alexey-milovidov/gists{/gist_id}","starred_url":"https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexey-milovidov/subscriptions","organizations_url":"https://api.github.com/users/alexey-milovidov/orgs","repos_url":"https://api.github.com/users/alexey-milovidov/repos","events_url":"https://api.github.com/users/alexey-milovidov/events{/privacy}","received_events_url":"https://api.github.com/users/alexey-milovidov/received_events","type":"User","site_admin":false},"assignees":[{"login":"alexey-milovidov","id":18581488,"node_id":"MDQ6VXNlcjE4NTgxNDg4","avatar_url":"https://avatars.githubusercontent.com/u/18581488?v=4","gravatar_id":"","url":"https://api.github.com/users/alexey-milovidov","html_url":"https://github.com/alexey-milovidov","followers_url":"https://api.github.com/users/alexey-milovidov/followers","following_url":"https://api.github.com/users/alexey-milovidov/following{/other_user}","gists_url":"https://api.github.com/users/alexey-milovidov/gists{/gist_id}","starred_url":"https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexey-milovidov/subscriptions","organizations_url":"https://api.github.com/users/alexey-milovidov/orgs","repos_url":"https://api.github.com/users/alexey-milovidov/repos","events_url":"https://api.github.com/users/alexey-milovidov/events{/privacy}","received_events_url":"https://api.github.com/users/alexey-milovidov/received_events","type":"User","site_admin":false}],"milestone":null,"comments":2,"created_at":"2022-01-28T15:23:13Z","updated_at":"2022-01-30T11:50:38Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/pulls/34114","html_url":"https://github.com/ClickHouse/ClickHouse/pull/34114","diff_url":"https://github.com/ClickHouse/ClickHouse/pull/34114.diff","patch_url":"https://github.com/ClickHouse/ClickHouse/pull/34114.patch","merged_at":null},"body":"Changelog category (leave one):\r\n- Improvement\r\n\r\nChangelog entry (a user-readable short description of the changes that goes to CHANGELOG.md):\r\nImproving the experience of multiple line editing for clickhouse-client. This is a follow-up of https://github.com/ClickHouse/ClickHouse/pull/31123\r\n\r\nThis PR also contains replxx bump https://github.com/ClickHouse-Extras/replxx/pull/19 which fixes https://github.com/ClickHouse/ClickHouse/issues/32399\r\n\r\nNOTE: This PR extends our lexer in that `\\G` has a special type: `TokenType::VerticalDelimiter`\r\n\r\nNOTE: Make sure `--highlight` is on (default) to take full advantage.\r\n\r\nNOTE: This PR also ignores case for history search and completion.  (The feature was reverted when we switch to upstream replxx, now it's available officially)\r\n\r\n> Information about CI checks: https://clickhouse.tech/docs/en/development/continuous-integration/\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34114/reactions","total_count":2,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34114/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34113","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34113/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34113/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34113/events","html_url":"https://github.com/ClickHouse/ClickHouse/pull/34113","id":1117447385,"node_id":"PR_kwDOA5dJV84xvTrl","number":34113,"title":"Fix data race in StorageFile","user":{"login":"Avogar","id":48961922,"node_id":"MDQ6VXNlcjQ4OTYxOTIy","avatar_url":"https://avatars.githubusercontent.com/u/48961922?v=4","gravatar_id":"","url":"https://api.github.com/users/Avogar","html_url":"https://github.com/Avogar","followers_url":"https://api.github.com/users/Avogar/followers","following_url":"https://api.github.com/users/Avogar/following{/other_user}","gists_url":"https://api.github.com/users/Avogar/gists{/gist_id}","starred_url":"https://api.github.com/users/Avogar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Avogar/subscriptions","organizations_url":"https://api.github.com/users/Avogar/orgs","repos_url":"https://api.github.com/users/Avogar/repos","events_url":"https://api.github.com/users/Avogar/events{/privacy}","received_events_url":"https://api.github.com/users/Avogar/received_events","type":"User","site_admin":false},"labels":[{"id":1302792342,"node_id":"MDU6TGFiZWwxMzAyNzkyMzQy","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/pr-bugfix","name":"pr-bugfix","color":"ff4080","default":false,"description":"Pull request with bugfix, not backported by default"}],"state":"open","locked":false,"assignee":{"login":"tavplubix","id":14847450,"node_id":"MDQ6VXNlcjE0ODQ3NDUw","avatar_url":"https://avatars.githubusercontent.com/u/14847450?v=4","gravatar_id":"","url":"https://api.github.com/users/tavplubix","html_url":"https://github.com/tavplubix","followers_url":"https://api.github.com/users/tavplubix/followers","following_url":"https://api.github.com/users/tavplubix/following{/other_user}","gists_url":"https://api.github.com/users/tavplubix/gists{/gist_id}","starred_url":"https://api.github.com/users/tavplubix/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tavplubix/subscriptions","organizations_url":"https://api.github.com/users/tavplubix/orgs","repos_url":"https://api.github.com/users/tavplubix/repos","events_url":"https://api.github.com/users/tavplubix/events{/privacy}","received_events_url":"https://api.github.com/users/tavplubix/received_events","type":"User","site_admin":false},"assignees":[{"login":"tavplubix","id":14847450,"node_id":"MDQ6VXNlcjE0ODQ3NDUw","avatar_url":"https://avatars.githubusercontent.com/u/14847450?v=4","gravatar_id":"","url":"https://api.github.com/users/tavplubix","html_url":"https://github.com/tavplubix","followers_url":"https://api.github.com/users/tavplubix/followers","following_url":"https://api.github.com/users/tavplubix/following{/other_user}","gists_url":"https://api.github.com/users/tavplubix/gists{/gist_id}","starred_url":"https://api.github.com/users/tavplubix/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tavplubix/subscriptions","organizations_url":"https://api.github.com/users/tavplubix/orgs","repos_url":"https://api.github.com/users/tavplubix/repos","events_url":"https://api.github.com/users/tavplubix/events{/privacy}","received_events_url":"https://api.github.com/users/tavplubix/received_events","type":"User","site_admin":false}],"milestone":null,"comments":1,"created_at":"2022-01-28T14:07:32Z","updated_at":"2022-01-28T17:49:51Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/pulls/34113","html_url":"https://github.com/ClickHouse/ClickHouse/pull/34113","diff_url":"https://github.com/ClickHouse/ClickHouse/pull/34113.diff","patch_url":"https://github.com/ClickHouse/ClickHouse/pull/34113.patch","merged_at":null},"body":"Changelog category (leave one):\r\n- Bug Fix (user-visible misbehaviour in official stable or prestable release)\r\n\r\n\r\nChangelog entry (a user-readable short description of the changes that goes to CHANGELOG.md):\r\nFix possible data race in StorageFile that was introduced in https://github.com/ClickHouse/ClickHouse/pull/33960. Closes https://github.com/ClickHouse/ClickHouse/issues/34111","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34113/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34113/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34111","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34111/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34111/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34111/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/34111","id":1117402560,"node_id":"I_kwDOA5dJV85CmjXA","number":34111,"title":"Data race in `StorageFile::read`","user":{"login":"tavplubix","id":14847450,"node_id":"MDQ6VXNlcjE0ODQ3NDUw","avatar_url":"https://avatars.githubusercontent.com/u/14847450?v=4","gravatar_id":"","url":"https://api.github.com/users/tavplubix","html_url":"https://github.com/tavplubix","followers_url":"https://api.github.com/users/tavplubix/followers","following_url":"https://api.github.com/users/tavplubix/following{/other_user}","gists_url":"https://api.github.com/users/tavplubix/gists{/gist_id}","starred_url":"https://api.github.com/users/tavplubix/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tavplubix/subscriptions","organizations_url":"https://api.github.com/users/tavplubix/orgs","repos_url":"https://api.github.com/users/tavplubix/repos","events_url":"https://api.github.com/users/tavplubix/events{/privacy}","received_events_url":"https://api.github.com/users/tavplubix/received_events","type":"User","site_admin":false},"labels":[{"id":1955634273,"node_id":"MDU6TGFiZWwxOTU1NjM0Mjcz","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/testing","name":"testing","color":"c9a224","default":false,"description":"Special issue with list of bugs found by CI"}],"state":"open","locked":false,"assignee":{"login":"Avogar","id":48961922,"node_id":"MDQ6VXNlcjQ4OTYxOTIy","avatar_url":"https://avatars.githubusercontent.com/u/48961922?v=4","gravatar_id":"","url":"https://api.github.com/users/Avogar","html_url":"https://github.com/Avogar","followers_url":"https://api.github.com/users/Avogar/followers","following_url":"https://api.github.com/users/Avogar/following{/other_user}","gists_url":"https://api.github.com/users/Avogar/gists{/gist_id}","starred_url":"https://api.github.com/users/Avogar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Avogar/subscriptions","organizations_url":"https://api.github.com/users/Avogar/orgs","repos_url":"https://api.github.com/users/Avogar/repos","events_url":"https://api.github.com/users/Avogar/events{/privacy}","received_events_url":"https://api.github.com/users/Avogar/received_events","type":"User","site_admin":false},"assignees":[{"login":"Avogar","id":48961922,"node_id":"MDQ6VXNlcjQ4OTYxOTIy","avatar_url":"https://avatars.githubusercontent.com/u/48961922?v=4","gravatar_id":"","url":"https://api.github.com/users/Avogar","html_url":"https://github.com/Avogar","followers_url":"https://api.github.com/users/Avogar/followers","following_url":"https://api.github.com/users/Avogar/following{/other_user}","gists_url":"https://api.github.com/users/Avogar/gists{/gist_id}","starred_url":"https://api.github.com/users/Avogar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Avogar/subscriptions","organizations_url":"https://api.github.com/users/Avogar/orgs","repos_url":"https://api.github.com/users/Avogar/repos","events_url":"https://api.github.com/users/Avogar/events{/privacy}","received_events_url":"https://api.github.com/users/Avogar/received_events","type":"User","site_admin":false}],"milestone":null,"comments":0,"created_at":"2022-01-28T13:24:38Z","updated_at":"2022-01-28T13:25:48Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"https://s3.amazonaws.com/clickhouse-test-reports/0/277fe4e1c4eaf45708c4eedc640136d387c7f869/stateless_tests__thread__actions__[1/3].html\r\n\r\n```\r\nWARNING: ThreadSanitizer: data race (pid=386)\r\n  Read of size 8 at 0x7b6800b60370 by thread T458:\r\n    #0 std::__1::unique_ptr<DB::ReadBuffer, std::__1::default_delete<DB::ReadBuffer> >::release() obj-x86_64-linux-gnu/../contrib/libcxx/include/memory:1648:26 (clickhouse+0x18c06640)\r\n    #1 std::__1::unique_ptr<DB::ReadBuffer, std::__1::default_delete<DB::ReadBuffer> >::unique_ptr(std::__1::unique_ptr<DB::ReadBuffer, std::__1::default_delete<DB::ReadBuffer> >&&) obj-x86_64-linux-gnu/../contrib/libcxx/include/memory:1554:20 (clickhouse+0x18c06640)\r\n    #2 void std::__1::allocator<DB::StorageFileSource>::construct<DB::StorageFileSource, std::__1::shared_ptr<DB::StorageFile>&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>&, unsigned long&, std::__1::shared_ptr<DB::StorageFileSource::FilesInfo>&, DB::ColumnsDescription, std::__1::unique_ptr<DB::ReadBuffer, std::__1::default_delete<DB::ReadBuffer> > >(DB::StorageFileSource*, std::__1::shared_ptr<DB::StorageFile>&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>&, unsigned long&, std::__1::shared_ptr<DB::StorageFileSource::FilesInfo>&, DB::ColumnsDescription&&, std::__1::unique_ptr<DB::ReadBuffer, std::__1::default_delete<DB::ReadBuffer> >&&) obj-x86_64-linux-gnu/../contrib/libcxx/include/memory:886:32 (clickhouse+0x18c06640)\r\n    #3 void std::__1::allocator_traits<std::__1::allocator<DB::StorageFileSource> >::__construct<DB::StorageFileSource, std::__1::shared_ptr<DB::StorageFile>&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>&, unsigned long&, std::__1::shared_ptr<DB::StorageFileSource::FilesInfo>&, DB::ColumnsDescription, std::__1::unique_ptr<DB::ReadBuffer, std::__1::default_delete<DB::ReadBuffer> > >(std::__1::integral_constant<bool, true>, std::__1::allocator<DB::StorageFileSource>&, DB::StorageFileSource*, std::__1::shared_ptr<DB::StorageFile>&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>&, unsigned long&, std::__1::shared_ptr<DB::StorageFileSource::FilesInfo>&, DB::ColumnsDescription&&, std::__1::unique_ptr<DB::ReadBuffer, std::__1::default_delete<DB::ReadBuffer> >&&) obj-x86_64-linux-gnu/../contrib/libcxx/include/__memory/allocator_traits.h:519:21 (clickhouse+0x18c0006d)\r\n    #4 void std::__1::allocator_traits<std::__1::allocator<DB::StorageFileSource> >::construct<DB::StorageFileSource, std::__1::shared_ptr<DB::StorageFile>&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>&, unsigned long&, std::__1::shared_ptr<DB::StorageFileSource::FilesInfo>&, DB::ColumnsDescription, std::__1::unique_ptr<DB::ReadBuffer, std::__1::default_delete<DB::ReadBuffer> > >(std::__1::allocator<DB::StorageFileSource>&, DB::StorageFileSource*, std::__1::shared_ptr<DB::StorageFile>&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>&, unsigned long&, std::__1::shared_ptr<DB::StorageFileSource::FilesInfo>&, DB::ColumnsDescription&&, std::__1::unique_ptr<DB::ReadBuffer, std::__1::default_delete<DB::ReadBuffer> >&&) obj-x86_64-linux-gnu/../contrib/libcxx/include/__memory/allocator_traits.h:481:14 (clickhouse+0x18c0006d)\r\n    #5 std::__1::__shared_ptr_emplace<DB::StorageFileSource, std::__1::allocator<DB::StorageFileSource> >::__shared_ptr_emplace<std::__1::shared_ptr<DB::StorageFile>&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>&, unsigned long&, std::__1::shared_ptr<DB::StorageFileSource::FilesInfo>&, DB::ColumnsDescription, std::__1::unique_ptr<DB::ReadBuffer, std::__1::default_delete<DB::ReadBuffer> > >(std::__1::allocator<DB::StorageFileSource>, std::__1::shared_ptr<DB::StorageFile>&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>&, unsigned long&, std::__1::shared_ptr<DB::StorageFileSource::FilesInfo>&, DB::ColumnsDescription&&, std::__1::unique_ptr<DB::ReadBuffer, std::__1::default_delete<DB::ReadBuffer> >&&) obj-x86_64-linux-gnu/../contrib/libcxx/include/memory:2594:9 (clickhouse+0x18c0006d)\r\n    #6 std::__1::shared_ptr<DB::StorageFileSource> std::__1::allocate_shared<DB::StorageFileSource, std::__1::allocator<DB::StorageFileSource>, std::__1::shared_ptr<DB::StorageFile>&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>&, unsigned long&, std::__1::shared_ptr<DB::StorageFileSource::FilesInfo>&, DB::ColumnsDescription, std::__1::unique_ptr<DB::ReadBuffer, std::__1::default_delete<DB::ReadBuffer> >, void>(std::__1::allocator<DB::StorageFileSource> const&, std::__1::shared_ptr<DB::StorageFile>&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>&, unsigned long&, std::__1::shared_ptr<DB::StorageFileSource::FilesInfo>&, DB::ColumnsDescription&&, std::__1::unique_ptr<DB::ReadBuffer, std::__1::default_delete<DB::ReadBuffer> >&&) obj-x86_64-linux-gnu/../contrib/libcxx/include/memory:3360:55 (clickhouse+0x18c0006d)\r\n    #7 std::__1::shared_ptr<DB::StorageFileSource> std::__1::make_shared<DB::StorageFileSource, std::__1::shared_ptr<DB::StorageFile>&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>&, unsigned long&, std::__1::shared_ptr<DB::StorageFileSource::FilesInfo>&, DB::ColumnsDescription, std::__1::unique_ptr<DB::ReadBuffer, std::__1::default_delete<DB::ReadBuffer> >, void>(std::__1::shared_ptr<DB::StorageFile>&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>&, unsigned long&, std::__1::shared_ptr<DB::StorageFileSource::FilesInfo>&, DB::ColumnsDescription&&, std::__1::unique_ptr<DB::ReadBuffer, std::__1::default_delete<DB::ReadBuffer> >&&) obj-x86_64-linux-gnu/../contrib/libcxx/include/memory:3369:12 (clickhouse+0x18c0006d)\r\n    #8 DB::StorageFile::read(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::SelectQueryInfo&, std::__1::shared_ptr<DB::Context const>, DB::QueryProcessingStage::Enum, unsigned long, unsigned int) obj-x86_64-linux-gnu/../src/Storages/StorageFile.cpp:623:28 (clickhouse+0x18c0006d)\r\n    #9 DB::IStorage::read(DB::QueryPlan&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::SelectQueryInfo&, std::__1::shared_ptr<DB::Context const>, DB::QueryProcessingStage::Enum, unsigned long, unsigned int) obj-x86_64-linux-gnu/../src/Storages/IStorage.cpp:113:17 (clickhouse+0x18b99ce3)\r\n    #10 DB::InterpreterSelectQuery::executeFetchColumns(DB::QueryProcessingStage::Enum, DB::QueryPlan&) obj-x86_64-linux-gnu/../src/Interpreters/InterpreterSelectQuery.cpp:1981:18 (clickhouse+0x18239423)\r\n    #11 DB::InterpreterSelectQuery::executeImpl(DB::QueryPlan&, std::__1::optional<DB::Pipe>) obj-x86_64-linux-gnu/../src/Interpreters/InterpreterSelectQuery.cpp:1033:9 (clickhouse+0x18231d7a)\r\n    #12 DB::InterpreterSelectQuery::buildQueryPlan(DB::QueryPlan&) obj-x86_64-linux-gnu/../src/Interpreters/InterpreterSelectQuery.cpp:576:5 (clickhouse+0x18231577)\r\n    #13 DB::ClusterProxy::(anonymous namespace)::createLocalPlan(std::__1::shared_ptr<DB::IAST> const&, DB::Block const&, std::__1::shared_ptr<DB::Context const>, DB::QueryProcessingStage::Enum, unsigned int, unsigned int) obj-x86_64-linux-gnu/../src/Interpreters/ClusterProxy/SelectStreamFactory.cpp:84:17 (clickhouse+0x18be340b)\r\n    #14 DB::ClusterProxy::SelectStreamFactory::createForShard(DB::Cluster::ShardInfo const&, std::__1::shared_ptr<DB::IAST> const&, DB::StorageID const&, std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::vector<std::__1::unique_ptr<DB::QueryPlan, std::__1::default_delete<DB::QueryPlan> >, std::__1::allocator<std::__1::unique_ptr<DB::QueryPlan, std::__1::default_delete<DB::QueryPlan> > > >&, std::__1::vector<DB::ClusterProxy::IStreamFactory::Shard, std::__1::allocator<DB::ClusterProxy::IStreamFactory::Shard> >&, unsigned int)::$_0::operator()() const obj-x86_64-linux-gnu/../src/Interpreters/ClusterProxy/SelectStreamFactory.cpp:105:34 (clickhouse+0x18be340b)\r\n    #15 DB::ClusterProxy::SelectStreamFactory::createForShard(DB::Cluster::ShardInfo const&, std::__1::shared_ptr<DB::IAST> const&, DB::StorageID const&, std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::vector<std::__1::unique_ptr<DB::QueryPlan, std::__1::default_delete<DB::QueryPlan> >, std::__1::allocator<std::__1::unique_ptr<DB::QueryPlan, std::__1::default_delete<DB::QueryPlan> > > >&, std::__1::vector<DB::ClusterProxy::IStreamFactory::Shard, std::__1::allocator<DB::ClusterProxy::IStreamFactory::Shard> >&, unsigned int) obj-x86_64-linux-gnu/../src/Interpreters/ClusterProxy/SelectStreamFactory.cpp:161:13 (clickhouse+0x18be1e2a)\r\n    #16 DB::ClusterProxy::executeQuery(DB::QueryPlan&, DB::Block const&, DB::QueryProcessingStage::Enum, DB::StorageID const&, std::__1::shared_ptr<DB::IAST> const&, DB::ClusterProxy::IStreamFactory&, Poco::Logger*, std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryInfo const&, std::__1::shared_ptr<DB::ExpressionActions> const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::shared_ptr<DB::Cluster> const&) obj-x86_64-linux-gnu/../src/Interpreters/ClusterProxy/executeQuery.cpp:167:24 (clickhouse+0x18be5bb5)\r\n    #17 DB::StorageDistributed::read(DB::QueryPlan&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::SelectQueryInfo&, std::__1::shared_ptr<DB::Context const>, DB::QueryProcessingStage::Enum, unsigned long, unsigned int) obj-x86_64-linux-gnu/../src/Storages/StorageDistributed.cpp:647:5 (clickhouse+0x18bcfed2)\r\n    #18 DB::StorageDistributed::read(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::SelectQueryInfo&, std::__1::shared_ptr<DB::Context const>, DB::QueryProcessingStage::Enum, unsigned long, unsigned int) obj-x86_64-linux-gnu/../src/Storages/StorageDistributed.cpp:600:5 (clickhouse+0x18bcf2ce)\r\n    #19 DB::StorageMerge::createSources(std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::SelectQueryInfo&, DB::QueryProcessingStage::Enum const&, unsigned long, DB::Block const&, std::__1::vector<DB::StorageMerge::AliasData, std::__1::allocator<DB::StorageMerge::AliasData> > const&, std::__1::tuple<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<DB::IStorage>, std::__1::shared_ptr<DB::RWLockImpl::LockHolderImpl>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >&, std::__1::shared_ptr<DB::Context>, unsigned long, bool, bool, bool) obj-x86_64-linux-gnu/../src/Storages/StorageMerge.cpp:457:25 (clickhouse+0x18c8cbff)\r\n    #20 DB::StorageMerge::read(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::SelectQueryInfo&, std::__1::shared_ptr<DB::Context const>, DB::QueryProcessingStage::Enum, unsigned long, unsigned int) obj-x86_64-linux-gnu/../src/Storages/StorageMerge.cpp:383:28 (clickhouse+0x18c89e55)\r\n    #21 DB::IStorage::read(DB::QueryPlan&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::SelectQueryInfo&, std::__1::shared_ptr<DB::Context const>, DB::QueryProcessingStage::Enum, unsigned long, unsigned int) obj-x86_64-linux-gnu/../src/Storages/IStorage.cpp:113:17 (clickhouse+0x18b99ce3)\r\n    #22 DB::InterpreterSelectQuery::executeFetchColumns(DB::QueryProcessingStage::Enum, DB::QueryPlan&) obj-x86_64-linux-gnu/../src/Interpreters/InterpreterSelectQuery.cpp:1981:18 (clickhouse+0x18239423)\r\n    #23 DB::InterpreterSelectQuery::executeImpl(DB::QueryPlan&, std::__1::optional<DB::Pipe>) obj-x86_64-linux-gnu/../src/Interpreters/InterpreterSelectQuery.cpp:1033:9 (clickhouse+0x18231d7a)\r\n    #24 DB::InterpreterSelectQuery::buildQueryPlan(DB::QueryPlan&) obj-x86_64-linux-gnu/../src/Interpreters/InterpreterSelectQuery.cpp:576:5 (clickhouse+0x18231577)\r\n    #25 DB::InterpreterSelectWithUnionQuery::buildQueryPlan(DB::QueryPlan&) obj-x86_64-linux-gnu/../src/Interpreters/InterpreterSelectWithUnionQuery.cpp:264:38 (clickhouse+0x1856aaf6)\r\n    #26 DB::InterpreterSelectQuery::executeFetchColumns(DB::QueryProcessingStage::Enum, DB::QueryPlan&) obj-x86_64-linux-gnu/../src/Interpreters/InterpreterSelectQuery.cpp:1902:31 (clickhouse+0x18238446)\r\n    #27 DB::InterpreterSelectQuery::executeImpl(DB::QueryPlan&, std::__1::optional<DB::Pipe>) obj-x86_64-linux-gnu/../src/Interpreters/InterpreterSelectQuery.cpp:1033:9 (clickhouse+0x18231d7a)\r\n    #28 DB::InterpreterSelectQuery::buildQueryPlan(DB::QueryPlan&) obj-x86_64-linux-gnu/../src/Interpreters/InterpreterSelectQuery.cpp:576:5 (clickhouse+0x18231577)\r\n    #29 DB::InterpreterSelectWithUnionQuery::buildQueryPlan(DB::QueryPlan&) obj-x86_64-linux-gnu/../src/Interpreters/InterpreterSelectWithUnionQuery.cpp:274:37 (clickhouse+0x1856afe7)\r\n    #30 DB::StorageView::read(DB::QueryPlan&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::SelectQueryInfo&, std::__1::shared_ptr<DB::Context const>, DB::QueryProcessingStage::Enum, unsigned long, unsigned int) obj-x86_64-linux-gnu/../src/Storages/StorageView.cpp:145:17 (clickhouse+0x18dd7eab)\r\n    #31 DB::InterpreterSelectQuery::executeFetchColumns(DB::QueryProcessingStage::Enum, DB::QueryPlan&) obj-x86_64-linux-gnu/../src/Interpreters/InterpreterSelectQuery.cpp:1981:18 (clickhouse+0x18239423)\r\n    #32 DB::InterpreterSelectQuery::executeImpl(DB::QueryPlan&, std::__1::optional<DB::Pipe>) obj-x86_64-linux-gnu/../src/Interpreters/InterpreterSelectQuery.cpp:1033:9 (clickhouse+0x18231d7a)\r\n    #33 DB::InterpreterSelectQuery::buildQueryPlan(DB::QueryPlan&) obj-x86_64-linux-gnu/../src/Interpreters/InterpreterSelectQuery.cpp:576:5 (clickhouse+0x18231577)\r\n    #34 DB::InterpreterSelectWithUnionQuery::buildQueryPlan(DB::QueryPlan&) obj-x86_64-linux-gnu/../src/Interpreters/InterpreterSelectWithUnionQuery.cpp:264:38 (clickhouse+0x1856aaf6)\r\n    #35 DB::InterpreterSelectWithUnionQuery::execute() obj-x86_64-linux-gnu/../src/Interpreters/InterpreterSelectWithUnionQuery.cpp:331:5 (clickhouse+0x1856bbf8)\r\n    #36 DB::executeQueryImpl(char const*, char const*, std::__1::shared_ptr<DB::Context>, bool, DB::QueryProcessingStage::Enum, DB::ReadBuffer*) obj-x86_64-linux-gnu/../src/Interpreters/executeQuery.cpp:666:36 (clickhouse+0x187ddd4c)\r\n    #37 DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::shared_ptr<DB::Context>, bool, DB::QueryProcessingStage::Enum) obj-x86_64-linux-gnu/../src/Interpreters/executeQuery.cpp:985:30 (clickhouse+0x187dba61)\r\n    #38 DB::TCPHandler::runImpl() obj-x86_64-linux-gnu/../src/Server/TCPHandler.cpp:333:24 (clickhouse+0x193ec0b8)\r\n    #39 DB::TCPHandler::run() obj-x86_64-linux-gnu/../src/Server/TCPHandler.cpp:1909:9 (clickhouse+0x19401627)\r\n    #40 Poco::Net::TCPServerConnection::start() obj-x86_64-linux-gnu/../contrib/poco/Net/src/TCPServerConnection.cpp:43:3 (clickhouse+0x1c434da2)\r\n    #41 Poco::Net::TCPServerDispatcher::run() obj-x86_64-linux-gnu/../contrib/poco/Net/src/TCPServerDispatcher.cpp:115:20 (clickhouse+0x1c435612)\r\n    #42 Poco::PooledThread::run() obj-x86_64-linux-gnu/../contrib/poco/Foundation/src/ThreadPool.cpp:199:14 (clickhouse+0x1c68c935)\r\n    #43 Poco::(anonymous namespace)::RunnableHolder::run() obj-x86_64-linux-gnu/../contrib/poco/Foundation/src/Thread.cpp:55:11 (clickhouse+0x1c68aacf)\r\n    #44 Poco::ThreadImpl::runnableEntry(void*) obj-x86_64-linux-gnu/../contrib/poco/Foundation/src/Thread_POSIX.cpp:345:27 (clickhouse+0x1c689147)\r\n\r\n  Previous write of size 8 at 0x7b6800b60370 by thread T1069:\r\n    #0 std::__1::unique_ptr<DB::ReadBuffer, std::__1::default_delete<DB::ReadBuffer> >::release() obj-x86_64-linux-gnu/../contrib/libcxx/include/memory:1649:20 (clickhouse+0x18c0664b)\r\n    #1 std::__1::unique_ptr<DB::ReadBuffer, std::__1::default_delete<DB::ReadBuffer> >::unique_ptr(std::__1::unique_ptr<DB::ReadBuffer, std::__1::default_delete<DB::ReadBuffer> >&&) obj-x86_64-linux-gnu/../contrib/libcxx/include/memory:1554:20 (clickhouse+0x18c0664b)\r\n    #2 void std::__1::allocator<DB::StorageFileSource>::construct<DB::StorageFileSource, std::__1::shared_ptr<DB::StorageFile>&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>&, unsigned long&, std::__1::shared_ptr<DB::StorageFileSource::FilesInfo>&, DB::ColumnsDescription, std::__1::unique_ptr<DB::ReadBuffer, std::__1::default_delete<DB::ReadBuffer> > >(DB::StorageFileSource*, std::__1::shared_ptr<DB::StorageFile>&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>&, unsigned long&, std::__1::shared_ptr<DB::StorageFileSource::FilesInfo>&, DB::ColumnsDescription&&, std::__1::unique_ptr<DB::ReadBuffer, std::__1::default_delete<DB::ReadBuffer> >&&) obj-x86_64-linux-gnu/../contrib/libcxx/include/memory:886:32 (clickhouse+0x18c0664b)\r\n    #3 void std::__1::allocator_traits<std::__1::allocator<DB::StorageFileSource> >::__construct<DB::StorageFileSource, std::__1::shared_ptr<DB::StorageFile>&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>&, unsigned long&, std::__1::shared_ptr<DB::StorageFileSource::FilesInfo>&, DB::ColumnsDescription, std::__1::unique_ptr<DB::ReadBuffer, std::__1::default_delete<DB::ReadBuffer> > >(std::__1::integral_constant<bool, true>, std::__1::allocator<DB::StorageFileSource>&, DB::StorageFileSource*, std::__1::shared_ptr<DB::StorageFile>&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>&, unsigned long&, std::__1::shared_ptr<DB::StorageFileSource::FilesInfo>&, DB::ColumnsDescription&&, std::__1::unique_ptr<DB::ReadBuffer, std::__1::default_delete<DB::ReadBuffer> >&&) obj-x86_64-linux-gnu/../contrib/libcxx/include/__memory/allocator_traits.h:519:21 (clickhouse+0x18c0006d)\r\n    #4 void std::__1::allocator_traits<std::__1::allocator<DB::StorageFileSource> >::construct<DB::StorageFileSource, std::__1::shared_ptr<DB::StorageFile>&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>&, unsigned long&, std::__1::shared_ptr<DB::StorageFileSource::FilesInfo>&, DB::ColumnsDescription, std::__1::unique_ptr<DB::ReadBuffer, std::__1::default_delete<DB::ReadBuffer> > >(std::__1::allocator<DB::StorageFileSource>&, DB::StorageFileSource*, std::__1::shared_ptr<DB::StorageFile>&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>&, unsigned long&, std::__1::shared_ptr<DB::StorageFileSource::FilesInfo>&, DB::ColumnsDescription&&, std::__1::unique_ptr<DB::ReadBuffer, std::__1::default_delete<DB::ReadBuffer> >&&) obj-x86_64-linux-gnu/../contrib/libcxx/include/__memory/allocator_traits.h:481:14 (clickhouse+0x18c0006d)\r\n    #5 std::__1::__shared_ptr_emplace<DB::StorageFileSource, std::__1::allocator<DB::StorageFileSource> >::__shared_ptr_emplace<std::__1::shared_ptr<DB::StorageFile>&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>&, unsigned long&, std::__1::shared_ptr<DB::StorageFileSource::FilesInfo>&, DB::ColumnsDescription, std::__1::unique_ptr<DB::ReadBuffer, std::__1::default_delete<DB::ReadBuffer> > >(std::__1::allocator<DB::StorageFileSource>, std::__1::shared_ptr<DB::StorageFile>&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>&, unsigned long&, std::__1::shared_ptr<DB::StorageFileSource::FilesInfo>&, DB::ColumnsDescription&&, std::__1::unique_ptr<DB::ReadBuffer, std::__1::default_delete<DB::ReadBuffer> >&&) obj-x86_64-linux-gnu/../contrib/libcxx/include/memory:2594:9 (clickhouse+0x18c0006d)\r\n    #6 std::__1::shared_ptr<DB::StorageFileSource> std::__1::allocate_shared<DB::StorageFileSource, std::__1::allocator<DB::StorageFileSource>, std::__1::shared_ptr<DB::StorageFile>&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>&, unsigned long&, std::__1::shared_ptr<DB::StorageFileSource::FilesInfo>&, DB::ColumnsDescription, std::__1::unique_ptr<DB::ReadBuffer, std::__1::default_delete<DB::ReadBuffer> >, void>(std::__1::allocator<DB::StorageFileSource> const&, std::__1::shared_ptr<DB::StorageFile>&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>&, unsigned long&, std::__1::shared_ptr<DB::StorageFileSource::FilesInfo>&, DB::ColumnsDescription&&, std::__1::unique_ptr<DB::ReadBuffer, std::__1::default_delete<DB::ReadBuffer> >&&) obj-x86_64-linux-gnu/../contrib/libcxx/include/memory:3360:55 (clickhouse+0x18c0006d)\r\n    #7 std::__1::shared_ptr<DB::StorageFileSource> std::__1::make_shared<DB::StorageFileSource, std::__1::shared_ptr<DB::StorageFile>&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>&, unsigned long&, std::__1::shared_ptr<DB::StorageFileSource::FilesInfo>&, DB::ColumnsDescription, std::__1::unique_ptr<DB::ReadBuffer, std::__1::default_delete<DB::ReadBuffer> >, void>(std::__1::shared_ptr<DB::StorageFile>&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>&, unsigned long&, std::__1::shared_ptr<DB::StorageFileSource::FilesInfo>&, DB::ColumnsDescription&&, std::__1::unique_ptr<DB::ReadBuffer, std::__1::default_delete<DB::ReadBuffer> >&&) obj-x86_64-linux-gnu/../contrib/libcxx/include/memory:3369:12 (clickhouse+0x18c0006d)\r\n    #8 DB::StorageFile::read(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::SelectQueryInfo&, std::__1::shared_ptr<DB::Context const>, DB::QueryProcessingStage::Enum, unsigned long, unsigned int) obj-x86_64-linux-gnu/../src/Storages/StorageFile.cpp:623:28 (clickhouse+0x18c0006d)\r\n    #9 DB::IStorage::read(DB::QueryPlan&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::SelectQueryInfo&, std::__1::shared_ptr<DB::Context const>, DB::QueryProcessingStage::Enum, unsigned long, unsigned int) obj-x86_64-linux-gnu/../src/Storages/IStorage.cpp:113:17 (clickhouse+0x18b99ce3)\r\n    #10 DB::InterpreterSelectQuery::executeFetchColumns(DB::QueryProcessingStage::Enum, DB::QueryPlan&) obj-x86_64-linux-gnu/../src/Interpreters/InterpreterSelectQuery.cpp:1981:18 (clickhouse+0x18239423)\r\n    #11 DB::InterpreterSelectQuery::executeImpl(DB::QueryPlan&, std::__1::optional<DB::Pipe>) obj-x86_64-linux-gnu/../src/Interpreters/InterpreterSelectQuery.cpp:1033:9 (clickhouse+0x18231d7a)\r\n    #12 DB::InterpreterSelectQuery::buildQueryPlan(DB::QueryPlan&) obj-x86_64-linux-gnu/../src/Interpreters/InterpreterSelectQuery.cpp:576:5 (clickhouse+0x18231577)\r\n    #13 DB::ClusterProxy::(anonymous namespace)::createLocalPlan(std::__1::shared_ptr<DB::IAST> const&, DB::Block const&, std::__1::shared_ptr<DB::Context const>, DB::QueryProcessingStage::Enum, unsigned int, unsigned int) obj-x86_64-linux-gnu/../src/Interpreters/ClusterProxy/SelectStreamFactory.cpp:84:17 (clickhouse+0x18be340b)\r\n    #14 DB::ClusterProxy::SelectStreamFactory::createForShard(DB::Cluster::ShardInfo const&, std::__1::shared_ptr<DB::IAST> const&, DB::StorageID const&, std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::vector<std::__1::unique_ptr<DB::QueryPlan, std::__1::default_delete<DB::QueryPlan> >, std::__1::allocator<std::__1::unique_ptr<DB::QueryPlan, std::__1::default_delete<DB::QueryPlan> > > >&, std::__1::vector<DB::ClusterProxy::IStreamFactory::Shard, std::__1::allocator<DB::ClusterProxy::IStreamFactory::Shard> >&, unsigned int)::$_0::operator()() const obj-x86_64-linux-gnu/../src/Interpreters/ClusterProxy/SelectStreamFactory.cpp:105:34 (clickhouse+0x18be340b)\r\n    #15 DB::ClusterProxy::SelectStreamFactory::createForShard(DB::Cluster::ShardInfo const&, std::__1::shared_ptr<DB::IAST> const&, DB::StorageID const&, std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::vector<std::__1::unique_ptr<DB::QueryPlan, std::__1::default_delete<DB::QueryPlan> >, std::__1::allocator<std::__1::unique_ptr<DB::QueryPlan, std::__1::default_delete<DB::QueryPlan> > > >&, std::__1::vector<DB::ClusterProxy::IStreamFactory::Shard, std::__1::allocator<DB::ClusterProxy::IStreamFactory::Shard> >&, unsigned int) obj-x86_64-linux-gnu/../src/Interpreters/ClusterProxy/SelectStreamFactory.cpp:161:13 (clickhouse+0x18be1e2a)\r\n    #16 DB::ClusterProxy::executeQuery(DB::QueryPlan&, DB::Block const&, DB::QueryProcessingStage::Enum, DB::StorageID const&, std::__1::shared_ptr<DB::IAST> const&, DB::ClusterProxy::IStreamFactory&, Poco::Logger*, std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryInfo const&, std::__1::shared_ptr<DB::ExpressionActions> const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::shared_ptr<DB::Cluster> const&) obj-x86_64-linux-gnu/../src/Interpreters/ClusterProxy/executeQuery.cpp:167:24 (clickhouse+0x18be5bb5)\r\n    #17 DB::StorageDistributed::read(DB::QueryPlan&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::SelectQueryInfo&, std::__1::shared_ptr<DB::Context const>, DB::QueryProcessingStage::Enum, unsigned long, unsigned int) obj-x86_64-linux-gnu/../src/Storages/StorageDistributed.cpp:647:5 (clickhouse+0x18bcfed2)\r\n    #18 DB::StorageDistributed::read(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::SelectQueryInfo&, std::__1::shared_ptr<DB::Context const>, DB::QueryProcessingStage::Enum, unsigned long, unsigned int) obj-x86_64-linux-gnu/../src/Storages/StorageDistributed.cpp:600:5 (clickhouse+0x18bcf2ce)\r\n    #19 DB::StorageMerge::createSources(std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::SelectQueryInfo&, DB::QueryProcessingStage::Enum const&, unsigned long, DB::Block const&, std::__1::vector<DB::StorageMerge::AliasData, std::__1::allocator<DB::StorageMerge::AliasData> > const&, std::__1::tuple<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<DB::IStorage>, std::__1::shared_ptr<DB::RWLockImpl::LockHolderImpl>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >&, std::__1::shared_ptr<DB::Context>, unsigned long, bool, bool, bool) obj-x86_64-linux-gnu/../src/Storages/StorageMerge.cpp:457:25 (clickhouse+0x18c8cbff)\r\n    #20 DB::StorageMerge::read(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::SelectQueryInfo&, std::__1::shared_ptr<DB::Context const>, DB::QueryProcessingStage::Enum, unsigned long, unsigned int) obj-x86_64-linux-gnu/../src/Storages/StorageMerge.cpp:383:28 (clickhouse+0x18c89e55)\r\n    #21 DB::IStorage::read(DB::QueryPlan&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::SelectQueryInfo&, std::__1::shared_ptr<DB::Context const>, DB::QueryProcessingStage::Enum, unsigned long, unsigned int) obj-x86_64-linux-gnu/../src/Storages/IStorage.cpp:113:17 (clickhouse+0x18b99ce3)\r\n    #22 DB::InterpreterSelectQuery::executeFetchColumns(DB::QueryProcessingStage::Enum, DB::QueryPlan&) obj-x86_64-linux-gnu/../src/Interpreters/InterpreterSelectQuery.cpp:1981:18 (clickhouse+0x18239423)\r\n    #23 DB::InterpreterSelectQuery::executeImpl(DB::QueryPlan&, std::__1::optional<DB::Pipe>) obj-x86_64-linux-gnu/../src/Interpreters/InterpreterSelectQuery.cpp:1033:9 (clickhouse+0x18231d7a)\r\n    #24 DB::InterpreterSelectQuery::buildQueryPlan(DB::QueryPlan&) obj-x86_64-linux-gnu/../src/Interpreters/InterpreterSelectQuery.cpp:576:5 (clickhouse+0x18231577)\r\n    #25 DB::InterpreterSelectWithUnionQuery::buildQueryPlan(DB::QueryPlan&) obj-x86_64-linux-gnu/../src/Interpreters/InterpreterSelectWithUnionQuery.cpp:264:38 (clickhouse+0x1856aaf6)\r\n    #26 DB::InterpreterSelectQuery::executeFetchColumns(DB::QueryProcessingStage::Enum, DB::QueryPlan&) obj-x86_64-linux-gnu/../src/Interpreters/InterpreterSelectQuery.cpp:1902:31 (clickhouse+0x18238446)\r\n    #27 DB::InterpreterSelectQuery::executeImpl(DB::QueryPlan&, std::__1::optional<DB::Pipe>) obj-x86_64-linux-gnu/../src/Interpreters/InterpreterSelectQuery.cpp:1033:9 (clickhouse+0x18231d7a)\r\n    #28 DB::InterpreterSelectQuery::buildQueryPlan(DB::QueryPlan&) obj-x86_64-linux-gnu/../src/Interpreters/InterpreterSelectQuery.cpp:576:5 (clickhouse+0x18231577)\r\n    #29 DB::InterpreterSelectWithUnionQuery::buildQueryPlan(DB::QueryPlan&) obj-x86_64-linux-gnu/../src/Interpreters/InterpreterSelectWithUnionQuery.cpp:274:37 (clickhouse+0x1856afe7)\r\n    #30 DB::StorageView::read(DB::QueryPlan&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::SelectQueryInfo&, std::__1::shared_ptr<DB::Context const>, DB::QueryProcessingStage::Enum, unsigned long, unsigned int) obj-x86_64-linux-gnu/../src/Storages/StorageView.cpp:145:17 (clickhouse+0x18dd7eab)\r\n    #31 DB::InterpreterSelectQuery::executeFetchColumns(DB::QueryProcessingStage::Enum, DB::QueryPlan&) obj-x86_64-linux-gnu/../src/Interpreters/InterpreterSelectQuery.cpp:1981:18 (clickhouse+0x18239423)\r\n    #32 DB::InterpreterSelectQuery::executeImpl(DB::QueryPlan&, std::__1::optional<DB::Pipe>) obj-x86_64-linux-gnu/../src/Interpreters/InterpreterSelectQuery.cpp:1033:9 (clickhouse+0x18231d7a)\r\n    #33 DB::InterpreterSelectQuery::buildQueryPlan(DB::QueryPlan&) obj-x86_64-linux-gnu/../src/Interpreters/InterpreterSelectQuery.cpp:576:5 (clickhouse+0x18231577)\r\n    #34 DB::InterpreterSelectWithUnionQuery::buildQueryPlan(DB::QueryPlan&) obj-x86_64-linux-gnu/../src/Interpreters/InterpreterSelectWithUnionQuery.cpp:264:38 (clickhouse+0x1856aaf6)\r\n    #35 DB::InterpreterSelectWithUnionQuery::execute() obj-x86_64-linux-gnu/../src/Interpreters/InterpreterSelectWithUnionQuery.cpp:331:5 (clickhouse+0x1856bbf8)\r\n    #36 DB::executeQueryImpl(char const*, char const*, std::__1::shared_ptr<DB::Context>, bool, DB::QueryProcessingStage::Enum, DB::ReadBuffer*) obj-x86_64-linux-gnu/../src/Interpreters/executeQuery.cpp:666:36 (clickhouse+0x187ddd4c)\r\n    #37 DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::shared_ptr<DB::Context>, bool, DB::QueryProcessingStage::Enum) obj-x86_64-linux-gnu/../src/Interpreters/executeQuery.cpp:985:30 (clickhouse+0x187dba61)\r\n    #38 DB::TCPHandler::runImpl() obj-x86_64-linux-gnu/../src/Server/TCPHandler.cpp:333:24 (clickhouse+0x193ec0b8)\r\n    #39 DB::TCPHandler::run() obj-x86_64-linux-gnu/../src/Server/TCPHandler.cpp:1909:9 (clickhouse+0x19401627)\r\n    #40 Poco::Net::TCPServerConnection::start() obj-x86_64-linux-gnu/../contrib/poco/Net/src/TCPServerConnection.cpp:43:3 (clickhouse+0x1c434da2)\r\n    #41 Poco::Net::TCPServerDispatcher::run() obj-x86_64-linux-gnu/../contrib/poco/Net/src/TCPServerDispatcher.cpp:115:20 (clickhouse+0x1c435612)\r\n    #42 Poco::PooledThread::run() obj-x86_64-linux-gnu/../contrib/poco/Foundation/src/ThreadPool.cpp:199:14 (clickhouse+0x1c68c935)\r\n    #43 Poco::(anonymous namespace)::RunnableHolder::run() obj-x86_64-linux-gnu/../contrib/poco/Foundation/src/Thread.cpp:55:11 (clickhouse+0x1c68aacf)\r\n    #44 Poco::ThreadImpl::runnableEntry(void*) obj-x86_64-linux-gnu/../contrib/poco/Foundation/src/Thread_POSIX.cpp:345:27 (clickhouse+0x1c689147)\r\n\r\n  Location is heap block of size 1400 at 0x7b6800b5fe00 allocated by thread T238:\r\n    #0 operator new(unsigned long) <null> (clickhouse+0xa9ee4d8)\r\n    #1 std::__1::shared_ptr<DB::StorageFile> shared_ptr_helper<DB::StorageFile>::create<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::StorageFile::CommonArguments&>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::StorageFile::CommonArguments&) obj-x86_64-linux-gnu/../base/base/../base/shared_ptr_helper.h:17:35 (clickhouse+0x18c0d9e8)\r\n    #2 DB::registerStorageFile(DB::StorageFactory&)::$_3::operator()(DB::StorageFactory::Arguments const&) const obj-x86_64-linux-gnu/../src/Storages/StorageFile.cpp:1034:24 (clickhouse+0x18c0511b)\r\n    #3 decltype(std::__1::forward<DB::registerStorageFile(DB::StorageFactory&)::$_3&>(fp)(std::__1::forward<DB::StorageFactory::Arguments const&>(fp0))) std::__1::__invoke<DB::registerStorageFile(DB::StorageFactory&)::$_3&, DB::StorageFactory::Arguments const&>(DB::registerStorageFile(DB::StorageFactory&)::$_3&, DB::StorageFactory::Arguments const&) obj-x86_64-linux-gnu/../contrib/libcxx/include/type_traits:3676:1 (clickhouse+0x18c0511b)\r\n    #4 std::__1::shared_ptr<DB::IStorage> std::__1::__invoke_void_return_wrapper<std::__1::shared_ptr<DB::IStorage> >::__call<DB::registerStorageFile(DB::StorageFactory&)::$_3&, DB::StorageFactory::Arguments const&>(DB::registerStorageFile(DB::StorageFactory&)::$_3&, DB::StorageFactory::Arguments const&) obj-x86_64-linux-gnu/../contrib/libcxx/include/__functional_base:317:16 (clickhouse+0x18c0511b)\r\n    #5 std::__1::__function::__default_alloc_func<DB::registerStorageFile(DB::StorageFactory&)::$_3, std::__1::shared_ptr<DB::IStorage> (DB::StorageFactory::Arguments const&)>::operator()(DB::StorageFactory::Arguments const&) obj-x86_64-linux-gnu/../contrib/libcxx/include/functional:1608:12 (clickhouse+0x18c0511b)\r\n    #6 std::__1::shared_ptr<DB::IStorage> std::__1::__function::__policy_invoker<std::__1::shared_ptr<DB::IStorage> (DB::StorageFactory::Arguments const&)>::__call_impl<std::__1::__function::__default_alloc_func<DB::registerStorageFile(DB::StorageFactory&)::$_3, std::__1::shared_ptr<DB::IStorage> (DB::StorageFactory::Arguments const&)> >(std::__1::__function::__policy_storage const*, DB::StorageFactory::Arguments const&) obj-x86_64-linux-gnu/../contrib/libcxx/include/functional:2089:16 (clickhouse+0x18c0511b)\r\n    #7 std::__1::__function::__policy_func<std::__1::shared_ptr<DB::IStorage> (DB::StorageFactory::Arguments const&)>::operator()(DB::StorageFactory::Arguments const&) const obj-x86_64-linux-gnu/../contrib/libcxx/include/functional:2221:16 (clickhouse+0x18bf8db5)\r\n    #8 std::__1::function<std::__1::shared_ptr<DB::IStorage> (DB::StorageFactory::Arguments const&)>::operator()(DB::StorageFactory::Arguments const&) const obj-x86_64-linux-gnu/../contrib/libcxx/include/functional:2560:12 (clickhouse+0x18bf8db5)\r\n    #9 DB::StorageFactory::get(DB::ASTCreateQuery const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::shared_ptr<DB::Context>, std::__1::shared_ptr<DB::Context>, DB::ColumnsDescription const&, DB::ConstraintsDescription const&, bool) const obj-x86_64-linux-gnu/../src/Storages/StorageFactory.cpp:225:16 (clickhouse+0x18bf8db5)\r\n    #10 DB::InterpreterCreateQuery::doCreateTable(DB::ASTCreateQuery&, DB::InterpreterCreateQuery::TableProperties const&) obj-x86_64-linux-gnu/../src/Interpreters/InterpreterCreateQuery.cpp:1095:42 (clickhouse+0x17dc8f45)\r\n    #11 DB::InterpreterCreateQuery::createTable(DB::ASTCreateQuery&) obj-x86_64-linux-gnu/../src/Interpreters/InterpreterCreateQuery.cpp:979:20 (clickhouse+0x17dc4896)\r\n    #12 DB::InterpreterCreateQuery::execute() obj-x86_64-linux-gnu/../src/Interpreters/InterpreterCreateQuery.cpp:1336:16 (clickhouse+0x17dcb19e)\r\n    #13 DB::executeQueryImpl(char const*, char const*, std::__1::shared_ptr<DB::Context>, bool, DB::QueryProcessingStage::Enum, DB::ReadBuffer*) obj-x86_64-linux-gnu/../src/Interpreters/executeQuery.cpp:666:36 (clickhouse+0x187ddd4c)\r\n    #14 DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::shared_ptr<DB::Context>, bool, DB::QueryProcessingStage::Enum) obj-x86_64-linux-gnu/../src/Interpreters/executeQuery.cpp:985:30 (clickhouse+0x187dba61)\r\n    #15 DB::TCPHandler::runImpl() obj-x86_64-linux-gnu/../src/Server/TCPHandler.cpp:333:24 (clickhouse+0x193ec0b8)\r\n    #16 DB::TCPHandler::run() obj-x86_64-linux-gnu/../src/Server/TCPHandler.cpp:1909:9 (clickhouse+0x19401627)\r\n    #17 Poco::Net::TCPServerConnection::start() obj-x86_64-linux-gnu/../contrib/poco/Net/src/TCPServerConnection.cpp:43:3 (clickhouse+0x1c434da2)\r\n    #18 Poco::Net::TCPServerDispatcher::run() obj-x86_64-linux-gnu/../contrib/poco/Net/src/TCPServerDispatcher.cpp:115:20 (clickhouse+0x1c435612)\r\n    #19 Poco::PooledThread::run() obj-x86_64-linux-gnu/../contrib/poco/Foundation/src/ThreadPool.cpp:199:14 (clickhouse+0x1c68c935)\r\n    #20 Poco::(anonymous namespace)::RunnableHolder::run() obj-x86_64-linux-gnu/../contrib/poco/Foundation/src/Thread.cpp:55:11 (clickhouse+0x1c68aacf)\r\n    #21 Poco::ThreadImpl::runnableEntry(void*) obj-x86_64-linux-gnu/../contrib/poco/Foundation/src/Thread_POSIX.cpp:345:27 (clickhouse+0x1c689147)\r\n\r\n  Thread T458 'TCPHandler' (tid=39364, running) created by thread T223 at:\r\n    #0 pthread_create <null> (clickhouse+0xa97979d)\r\n    #1 Poco::ThreadImpl::startImpl(Poco::SharedPtr<Poco::Runnable, Poco::ReferenceCounter, Poco::ReleasePolicy<Poco::Runnable> >) obj-x86_64-linux-gnu/../contrib/poco/Foundation/src/Thread_POSIX.cpp:202:6 (clickhouse+0x1c688b95)\r\n    #2 Poco::Thread::start(Poco::Runnable&) obj-x86_64-linux-gnu/../contrib/poco/Foundation/src/Thread.cpp:128:2 (clickhouse+0x1c68a40c)\r\n    #3 Poco::PooledThread::start() obj-x86_64-linux-gnu/../contrib/poco/Foundation/src/ThreadPool.cpp:85:10 (clickhouse+0x1c68e746)\r\n    #4 Poco::ThreadPool::getThread() obj-x86_64-linux-gnu/../contrib/poco/Foundation/src/ThreadPool.cpp:461:14 (clickhouse+0x1c68e746)\r\n    #5 Poco::ThreadPool::startWithPriority(Poco::Thread::Priority, Poco::Runnable&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) obj-x86_64-linux-gnu/../contrib/poco/Foundation/src/ThreadPool.cpp:365:2 (clickhouse+0x1c68eb47)\r\n    #6 Poco::Net::TCPServerDispatcher::enqueue(Poco::Net::StreamSocket const&) obj-x86_64-linux-gnu/../contrib/poco/Net/src/TCPServerDispatcher.cpp:152:17 (clickhouse+0x1c435b0e)\r\n    #7 Poco::Net::TCPServer::run() obj-x86_64-linux-gnu/../contrib/poco/Net/src/TCPServer.cpp:148:21 (clickhouse+0x1c434627)\r\n    #8 Poco::(anonymous namespace)::RunnableHolder::run() obj-x86_64-linux-gnu/../contrib/poco/Foundation/src/Thread.cpp:55:11 (clickhouse+0x1c68aacf)\r\n    #9 Poco::ThreadImpl::runnableEntry(void*) obj-x86_64-linux-gnu/../contrib/poco/Foundation/src/Thread_POSIX.cpp:345:27 (clickhouse+0x1c689147)\r\n\r\n  Thread T1069 'TCPHandler' (tid=45462, running) created by thread T223 at:\r\n    #0 pthread_create <null> (clickhouse+0xa97979d)\r\n    #1 Poco::ThreadImpl::startImpl(Poco::SharedPtr<Poco::Runnable, Poco::ReferenceCounter, Poco::ReleasePolicy<Poco::Runnable> >) obj-x86_64-linux-gnu/../contrib/poco/Foundation/src/Thread_POSIX.cpp:202:6 (clickhouse+0x1c688b95)\r\n    #2 Poco::Thread::start(Poco::Runnable&) obj-x86_64-linux-gnu/../contrib/poco/Foundation/src/Thread.cpp:128:2 (clickhouse+0x1c68a40c)\r\n    #3 Poco::PooledThread::start() obj-x86_64-linux-gnu/../contrib/poco/Foundation/src/ThreadPool.cpp:85:10 (clickhouse+0x1c68e746)\r\n    #4 Poco::ThreadPool::getThread() obj-x86_64-linux-gnu/../contrib/poco/Foundation/src/ThreadPool.cpp:461:14 (clickhouse+0x1c68e746)\r\n    #5 Poco::ThreadPool::startWithPriority(Poco::Thread::Priority, Poco::Runnable&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) obj-x86_64-linux-gnu/../contrib/poco/Foundation/src/ThreadPool.cpp:365:2 (clickhouse+0x1c68eb47)\r\n    #6 Poco::Net::TCPServerDispatcher::enqueue(Poco::Net::StreamSocket const&) obj-x86_64-linux-gnu/../contrib/poco/Net/src/TCPServerDispatcher.cpp:152:17 (clickhouse+0x1c435b0e)\r\n    #7 Poco::Net::TCPServer::run() obj-x86_64-linux-gnu/../contrib/poco/Net/src/TCPServer.cpp:148:21 (clickhouse+0x1c434627)\r\n    #8 Poco::(anonymous namespace)::RunnableHolder::run() obj-x86_64-linux-gnu/../contrib/poco/Foundation/src/Thread.cpp:55:11 (clickhouse+0x1c68aacf)\r\n    #9 Poco::ThreadImpl::runnableEntry(void*) obj-x86_64-linux-gnu/../contrib/poco/Foundation/src/Thread_POSIX.cpp:345:27 (clickhouse+0x1c689147)\r\n\r\n  Thread T238 'TCPHandler' (tid=657, running) created by thread T221 at:\r\n    #0 pthread_create <null> (clickhouse+0xa97979d)\r\n    #1 Poco::ThreadImpl::startImpl(Poco::SharedPtr<Poco::Runnable, Poco::ReferenceCounter, Poco::ReleasePolicy<Poco::Runnable> >) obj-x86_64-linux-gnu/../contrib/poco/Foundation/src/Thread_POSIX.cpp:202:6 (clickhouse+0x1c688b95)\r\n    #2 Poco::Thread::start(Poco::Runnable&) obj-x86_64-linux-gnu/../contrib/poco/Foundation/src/Thread.cpp:128:2 (clickhouse+0x1c68a40c)\r\n    #3 Poco::PooledThread::start() obj-x86_64-linux-gnu/../contrib/poco/Foundation/src/ThreadPool.cpp:85:10 (clickhouse+0x1c68e746)\r\n    #4 Poco::ThreadPool::getThread() obj-x86_64-linux-gnu/../contrib/poco/Foundation/src/ThreadPool.cpp:461:14 (clickhouse+0x1c68e746)\r\n    #5 Poco::ThreadPool::startWithPriority(Poco::Thread::Priority, Poco::Runnable&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) obj-x86_64-linux-gnu/../contrib/poco/Foundation/src/ThreadPool.cpp:365:2 (clickhouse+0x1c68eb47)\r\n    #6 Poco::Net::TCPServerDispatcher::enqueue(Poco::Net::StreamSocket const&) obj-x86_64-linux-gnu/../contrib/poco/Net/src/TCPServerDispatcher.cpp:152:17 (clickhouse+0x1c435b0e)\r\n    #7 Poco::Net::TCPServer::run() obj-x86_64-linux-gnu/../contrib/poco/Net/src/TCPServer.cpp:148:21 (clickhouse+0x1c434627)\r\n    #8 Poco::(anonymous namespace)::RunnableHolder::run() obj-x86_64-linux-gnu/../contrib/poco/Foundation/src/Thread.cpp:55:11 (clickhouse+0x1c68aacf)\r\n    #9 Poco::ThreadImpl::runnableEntry(void*) obj-x86_64-linux-gnu/../contrib/poco/Foundation/src/Thread_POSIX.cpp:345:27 (clickhouse+0x1c689147)\r\n\r\nSUMMARY: ThreadSanitizer: data race obj-x86_64-linux-gnu/../contrib/libcxx/include/memory:1648:26 in std::__1::unique_ptr<DB::ReadBuffer, std::__1::default_delete<DB::ReadBuffer> >::release()\r\n```\r\n\r\nProbably related to #33960, cc: @Avogar \r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34111/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34111/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34100","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34100/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34100/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34100/events","html_url":"https://github.com/ClickHouse/ClickHouse/pull/34100","id":1117397851,"node_id":"PR_kwDOA5dJV84xvJE4","number":34100,"title":"Backport #33984 to 21.11: Fix segfault while parsing corrupted ORC file","user":{"login":"robot-clickhouse","id":41385210,"node_id":"MDQ6VXNlcjQxMzg1MjEw","avatar_url":"https://avatars.githubusercontent.com/u/41385210?v=4","gravatar_id":"","url":"https://api.github.com/users/robot-clickhouse","html_url":"https://github.com/robot-clickhouse","followers_url":"https://api.github.com/users/robot-clickhouse/followers","following_url":"https://api.github.com/users/robot-clickhouse/following{/other_user}","gists_url":"https://api.github.com/users/robot-clickhouse/gists{/gist_id}","starred_url":"https://api.github.com/users/robot-clickhouse/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/robot-clickhouse/subscriptions","organizations_url":"https://api.github.com/users/robot-clickhouse/orgs","repos_url":"https://api.github.com/users/robot-clickhouse/repos","events_url":"https://api.github.com/users/robot-clickhouse/events{/privacy}","received_events_url":"https://api.github.com/users/robot-clickhouse/received_events","type":"User","site_admin":false},"labels":[{"id":1316518062,"node_id":"MDU6TGFiZWwxMzE2NTE4MDYy","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/pr-backport","name":"pr-backport","color":"5fadcc","default":false,"description":"Changes, backported to release branch. Do not use manually - automated use only!"}],"state":"open","locked":false,"assignee":{"login":"Avogar","id":48961922,"node_id":"MDQ6VXNlcjQ4OTYxOTIy","avatar_url":"https://avatars.githubusercontent.com/u/48961922?v=4","gravatar_id":"","url":"https://api.github.com/users/Avogar","html_url":"https://github.com/Avogar","followers_url":"https://api.github.com/users/Avogar/followers","following_url":"https://api.github.com/users/Avogar/following{/other_user}","gists_url":"https://api.github.com/users/Avogar/gists{/gist_id}","starred_url":"https://api.github.com/users/Avogar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Avogar/subscriptions","organizations_url":"https://api.github.com/users/Avogar/orgs","repos_url":"https://api.github.com/users/Avogar/repos","events_url":"https://api.github.com/users/Avogar/events{/privacy}","received_events_url":"https://api.github.com/users/Avogar/received_events","type":"User","site_admin":false},"assignees":[{"login":"Avogar","id":48961922,"node_id":"MDQ6VXNlcjQ4OTYxOTIy","avatar_url":"https://avatars.githubusercontent.com/u/48961922?v=4","gravatar_id":"","url":"https://api.github.com/users/Avogar","html_url":"https://github.com/Avogar","followers_url":"https://api.github.com/users/Avogar/followers","following_url":"https://api.github.com/users/Avogar/following{/other_user}","gists_url":"https://api.github.com/users/Avogar/gists{/gist_id}","starred_url":"https://api.github.com/users/Avogar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Avogar/subscriptions","organizations_url":"https://api.github.com/users/Avogar/orgs","repos_url":"https://api.github.com/users/Avogar/repos","events_url":"https://api.github.com/users/Avogar/events{/privacy}","received_events_url":"https://api.github.com/users/Avogar/received_events","type":"User","site_admin":false}],"milestone":null,"comments":0,"created_at":"2022-01-28T13:20:16Z","updated_at":"2022-01-28T13:20:20Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/pulls/34100","html_url":"https://github.com/ClickHouse/ClickHouse/pull/34100","diff_url":"https://github.com/ClickHouse/ClickHouse/pull/34100.diff","patch_url":"https://github.com/ClickHouse/ClickHouse/pull/34100.patch","merged_at":null},"body":"Original pull-request #33984\nCherry-pick pull-request #34087\n\nThis pull-request is a last step of an automated backporting.\nTreat it as a standard pull-request: look at the checks and resolve conflicts.\nMerge it only if you intend to backport changes to the target branch, otherwise just close it.\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34100/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34100/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34099","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34099/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34099/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34099/events","html_url":"https://github.com/ClickHouse/ClickHouse/pull/34099","id":1117397533,"node_id":"PR_kwDOA5dJV84xvJAU","number":34099,"title":"Backport #33984 to 21.12: Fix segfault while parsing corrupted ORC file","user":{"login":"robot-clickhouse","id":41385210,"node_id":"MDQ6VXNlcjQxMzg1MjEw","avatar_url":"https://avatars.githubusercontent.com/u/41385210?v=4","gravatar_id":"","url":"https://api.github.com/users/robot-clickhouse","html_url":"https://github.com/robot-clickhouse","followers_url":"https://api.github.com/users/robot-clickhouse/followers","following_url":"https://api.github.com/users/robot-clickhouse/following{/other_user}","gists_url":"https://api.github.com/users/robot-clickhouse/gists{/gist_id}","starred_url":"https://api.github.com/users/robot-clickhouse/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/robot-clickhouse/subscriptions","organizations_url":"https://api.github.com/users/robot-clickhouse/orgs","repos_url":"https://api.github.com/users/robot-clickhouse/repos","events_url":"https://api.github.com/users/robot-clickhouse/events{/privacy}","received_events_url":"https://api.github.com/users/robot-clickhouse/received_events","type":"User","site_admin":false},"labels":[{"id":1316518062,"node_id":"MDU6TGFiZWwxMzE2NTE4MDYy","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/pr-backport","name":"pr-backport","color":"5fadcc","default":false,"description":"Changes, backported to release branch. Do not use manually - automated use only!"}],"state":"open","locked":false,"assignee":{"login":"Avogar","id":48961922,"node_id":"MDQ6VXNlcjQ4OTYxOTIy","avatar_url":"https://avatars.githubusercontent.com/u/48961922?v=4","gravatar_id":"","url":"https://api.github.com/users/Avogar","html_url":"https://github.com/Avogar","followers_url":"https://api.github.com/users/Avogar/followers","following_url":"https://api.github.com/users/Avogar/following{/other_user}","gists_url":"https://api.github.com/users/Avogar/gists{/gist_id}","starred_url":"https://api.github.com/users/Avogar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Avogar/subscriptions","organizations_url":"https://api.github.com/users/Avogar/orgs","repos_url":"https://api.github.com/users/Avogar/repos","events_url":"https://api.github.com/users/Avogar/events{/privacy}","received_events_url":"https://api.github.com/users/Avogar/received_events","type":"User","site_admin":false},"assignees":[{"login":"Avogar","id":48961922,"node_id":"MDQ6VXNlcjQ4OTYxOTIy","avatar_url":"https://avatars.githubusercontent.com/u/48961922?v=4","gravatar_id":"","url":"https://api.github.com/users/Avogar","html_url":"https://github.com/Avogar","followers_url":"https://api.github.com/users/Avogar/followers","following_url":"https://api.github.com/users/Avogar/following{/other_user}","gists_url":"https://api.github.com/users/Avogar/gists{/gist_id}","starred_url":"https://api.github.com/users/Avogar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Avogar/subscriptions","organizations_url":"https://api.github.com/users/Avogar/orgs","repos_url":"https://api.github.com/users/Avogar/repos","events_url":"https://api.github.com/users/Avogar/events{/privacy}","received_events_url":"https://api.github.com/users/Avogar/received_events","type":"User","site_admin":false}],"milestone":null,"comments":0,"created_at":"2022-01-28T13:19:58Z","updated_at":"2022-01-28T13:20:03Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/pulls/34099","html_url":"https://github.com/ClickHouse/ClickHouse/pull/34099","diff_url":"https://github.com/ClickHouse/ClickHouse/pull/34099.diff","patch_url":"https://github.com/ClickHouse/ClickHouse/pull/34099.patch","merged_at":null},"body":"Original pull-request #33984\nCherry-pick pull-request #34088\n\nThis pull-request is a last step of an automated backporting.\nTreat it as a standard pull-request: look at the checks and resolve conflicts.\nMerge it only if you intend to backport changes to the target branch, otherwise just close it.\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34099/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34099/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34098","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34098/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34098/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34098/events","html_url":"https://github.com/ClickHouse/ClickHouse/pull/34098","id":1117397251,"node_id":"PR_kwDOA5dJV84xvI8a","number":34098,"title":"Backport #33984 to 22.1: Fix segfault while parsing corrupted ORC file","user":{"login":"robot-clickhouse","id":41385210,"node_id":"MDQ6VXNlcjQxMzg1MjEw","avatar_url":"https://avatars.githubusercontent.com/u/41385210?v=4","gravatar_id":"","url":"https://api.github.com/users/robot-clickhouse","html_url":"https://github.com/robot-clickhouse","followers_url":"https://api.github.com/users/robot-clickhouse/followers","following_url":"https://api.github.com/users/robot-clickhouse/following{/other_user}","gists_url":"https://api.github.com/users/robot-clickhouse/gists{/gist_id}","starred_url":"https://api.github.com/users/robot-clickhouse/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/robot-clickhouse/subscriptions","organizations_url":"https://api.github.com/users/robot-clickhouse/orgs","repos_url":"https://api.github.com/users/robot-clickhouse/repos","events_url":"https://api.github.com/users/robot-clickhouse/events{/privacy}","received_events_url":"https://api.github.com/users/robot-clickhouse/received_events","type":"User","site_admin":false},"labels":[{"id":1316518062,"node_id":"MDU6TGFiZWwxMzE2NTE4MDYy","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/pr-backport","name":"pr-backport","color":"5fadcc","default":false,"description":"Changes, backported to release branch. Do not use manually - automated use only!"}],"state":"open","locked":false,"assignee":{"login":"Avogar","id":48961922,"node_id":"MDQ6VXNlcjQ4OTYxOTIy","avatar_url":"https://avatars.githubusercontent.com/u/48961922?v=4","gravatar_id":"","url":"https://api.github.com/users/Avogar","html_url":"https://github.com/Avogar","followers_url":"https://api.github.com/users/Avogar/followers","following_url":"https://api.github.com/users/Avogar/following{/other_user}","gists_url":"https://api.github.com/users/Avogar/gists{/gist_id}","starred_url":"https://api.github.com/users/Avogar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Avogar/subscriptions","organizations_url":"https://api.github.com/users/Avogar/orgs","repos_url":"https://api.github.com/users/Avogar/repos","events_url":"https://api.github.com/users/Avogar/events{/privacy}","received_events_url":"https://api.github.com/users/Avogar/received_events","type":"User","site_admin":false},"assignees":[{"login":"Avogar","id":48961922,"node_id":"MDQ6VXNlcjQ4OTYxOTIy","avatar_url":"https://avatars.githubusercontent.com/u/48961922?v=4","gravatar_id":"","url":"https://api.github.com/users/Avogar","html_url":"https://github.com/Avogar","followers_url":"https://api.github.com/users/Avogar/followers","following_url":"https://api.github.com/users/Avogar/following{/other_user}","gists_url":"https://api.github.com/users/Avogar/gists{/gist_id}","starred_url":"https://api.github.com/users/Avogar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Avogar/subscriptions","organizations_url":"https://api.github.com/users/Avogar/orgs","repos_url":"https://api.github.com/users/Avogar/repos","events_url":"https://api.github.com/users/Avogar/events{/privacy}","received_events_url":"https://api.github.com/users/Avogar/received_events","type":"User","site_admin":false}],"milestone":null,"comments":0,"created_at":"2022-01-28T13:19:43Z","updated_at":"2022-01-28T13:19:47Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/pulls/34098","html_url":"https://github.com/ClickHouse/ClickHouse/pull/34098","diff_url":"https://github.com/ClickHouse/ClickHouse/pull/34098.diff","patch_url":"https://github.com/ClickHouse/ClickHouse/pull/34098.patch","merged_at":null},"body":"Original pull-request #33984\nCherry-pick pull-request #34085\n\nThis pull-request is a last step of an automated backporting.\nTreat it as a standard pull-request: look at the checks and resolve conflicts.\nMerge it only if you intend to backport changes to the target branch, otherwise just close it.\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34098/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34098/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34097","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34097/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34097/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34097/events","html_url":"https://github.com/ClickHouse/ClickHouse/pull/34097","id":1117396927,"node_id":"PR_kwDOA5dJV84xvI32","number":34097,"title":"Backport #33984 to 21.8: Fix segfault while parsing corrupted ORC file","user":{"login":"robot-clickhouse","id":41385210,"node_id":"MDQ6VXNlcjQxMzg1MjEw","avatar_url":"https://avatars.githubusercontent.com/u/41385210?v=4","gravatar_id":"","url":"https://api.github.com/users/robot-clickhouse","html_url":"https://github.com/robot-clickhouse","followers_url":"https://api.github.com/users/robot-clickhouse/followers","following_url":"https://api.github.com/users/robot-clickhouse/following{/other_user}","gists_url":"https://api.github.com/users/robot-clickhouse/gists{/gist_id}","starred_url":"https://api.github.com/users/robot-clickhouse/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/robot-clickhouse/subscriptions","organizations_url":"https://api.github.com/users/robot-clickhouse/orgs","repos_url":"https://api.github.com/users/robot-clickhouse/repos","events_url":"https://api.github.com/users/robot-clickhouse/events{/privacy}","received_events_url":"https://api.github.com/users/robot-clickhouse/received_events","type":"User","site_admin":false},"labels":[{"id":1316518062,"node_id":"MDU6TGFiZWwxMzE2NTE4MDYy","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/pr-backport","name":"pr-backport","color":"5fadcc","default":false,"description":"Changes, backported to release branch. Do not use manually - automated use only!"}],"state":"open","locked":false,"assignee":{"login":"Avogar","id":48961922,"node_id":"MDQ6VXNlcjQ4OTYxOTIy","avatar_url":"https://avatars.githubusercontent.com/u/48961922?v=4","gravatar_id":"","url":"https://api.github.com/users/Avogar","html_url":"https://github.com/Avogar","followers_url":"https://api.github.com/users/Avogar/followers","following_url":"https://api.github.com/users/Avogar/following{/other_user}","gists_url":"https://api.github.com/users/Avogar/gists{/gist_id}","starred_url":"https://api.github.com/users/Avogar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Avogar/subscriptions","organizations_url":"https://api.github.com/users/Avogar/orgs","repos_url":"https://api.github.com/users/Avogar/repos","events_url":"https://api.github.com/users/Avogar/events{/privacy}","received_events_url":"https://api.github.com/users/Avogar/received_events","type":"User","site_admin":false},"assignees":[{"login":"Avogar","id":48961922,"node_id":"MDQ6VXNlcjQ4OTYxOTIy","avatar_url":"https://avatars.githubusercontent.com/u/48961922?v=4","gravatar_id":"","url":"https://api.github.com/users/Avogar","html_url":"https://github.com/Avogar","followers_url":"https://api.github.com/users/Avogar/followers","following_url":"https://api.github.com/users/Avogar/following{/other_user}","gists_url":"https://api.github.com/users/Avogar/gists{/gist_id}","starred_url":"https://api.github.com/users/Avogar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Avogar/subscriptions","organizations_url":"https://api.github.com/users/Avogar/orgs","repos_url":"https://api.github.com/users/Avogar/repos","events_url":"https://api.github.com/users/Avogar/events{/privacy}","received_events_url":"https://api.github.com/users/Avogar/received_events","type":"User","site_admin":false}],"milestone":null,"comments":0,"created_at":"2022-01-28T13:19:26Z","updated_at":"2022-01-28T13:19:30Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/pulls/34097","html_url":"https://github.com/ClickHouse/ClickHouse/pull/34097","diff_url":"https://github.com/ClickHouse/ClickHouse/pull/34097.diff","patch_url":"https://github.com/ClickHouse/ClickHouse/pull/34097.patch","merged_at":null},"body":"Original pull-request #33984\nCherry-pick pull-request #34086\n\nThis pull-request is a last step of an automated backporting.\nTreat it as a standard pull-request: look at the checks and resolve conflicts.\nMerge it only if you intend to backport changes to the target branch, otherwise just close it.\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34097/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34097/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34096","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34096/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34096/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34096/events","html_url":"https://github.com/ClickHouse/ClickHouse/pull/34096","id":1117384824,"node_id":"PR_kwDOA5dJV84xvGS9","number":34096,"title":"Fix race between mergeSelectingTask and queue reinitialization","user":{"login":"tavplubix","id":14847450,"node_id":"MDQ6VXNlcjE0ODQ3NDUw","avatar_url":"https://avatars.githubusercontent.com/u/14847450?v=4","gravatar_id":"","url":"https://api.github.com/users/tavplubix","html_url":"https://github.com/tavplubix","followers_url":"https://api.github.com/users/tavplubix/followers","following_url":"https://api.github.com/users/tavplubix/following{/other_user}","gists_url":"https://api.github.com/users/tavplubix/gists{/gist_id}","starred_url":"https://api.github.com/users/tavplubix/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tavplubix/subscriptions","organizations_url":"https://api.github.com/users/tavplubix/orgs","repos_url":"https://api.github.com/users/tavplubix/repos","events_url":"https://api.github.com/users/tavplubix/events{/privacy}","received_events_url":"https://api.github.com/users/tavplubix/received_events","type":"User","site_admin":false},"labels":[{"id":1302792342,"node_id":"MDU6TGFiZWwxMzAyNzkyMzQy","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/pr-bugfix","name":"pr-bugfix","color":"ff4080","default":false,"description":"Pull request with bugfix, not backported by default"},{"id":1985666421,"node_id":"MDU6TGFiZWwxOTg1NjY2NDIx","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/pr-must-backport","name":"pr-must-backport","color":"ff0000","default":false,"description":"Pull request should be backported intentionally. Use this label with great care!"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-01-28T13:07:34Z","updated_at":"2022-01-28T13:14:18Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/pulls/34096","html_url":"https://github.com/ClickHouse/ClickHouse/pull/34096","diff_url":"https://github.com/ClickHouse/ClickHouse/pull/34096.diff","patch_url":"https://github.com/ClickHouse/ClickHouse/pull/34096.patch","merged_at":null},"body":"Changelog category (leave one):\r\n- Bug Fix (user-visible misbehaviour in official stable or prestable release)\r\n\r\n\r\nChangelog entry (a user-readable short description of the changes that goes to CHANGELOG.md):\r\nFixed minor race condition that might cause \"intersecting parts\" error in extremely rare cases after ZooKeeper connection loss.\r\n\r\n\r\nDetailed description:\r\nhttps://s3.amazonaws.com/clickhouse-test-reports/33665/16adcc166608b922f7351a8eedcfb483d63d7513/stress_test__debug__actions_.html\r\nSee also #34013\r\n\r\nConnection was lost on attempt to [update log_pointer](https://github.com/ClickHouse/ClickHouse/blob/aee034a5979ea2b4439aa25a0570b591604e65ad/src/Storages/MergeTree/ReplicatedMergeTreeQueue.cpp#L671). Log pointer was successfully updated in ZooKeeper, but `queue-0000000020` was not added into in-memory queue. \r\n```\r\n2022.01.15 23:07:15.308960 [ 777 ] {} <Error> test_98ynp9.r4: void DB::StorageReplicatedMergeTree::queueUpdatingTask(): Code: 999. Coordination::Exception: Connection loss. (KEEPER_EXCEPTION), Stack trace (when copying this message, always include the lines below):\r\n\r\n0. ./obj-x86_64-linux-gnu/../contrib/libcxx/include/exception:133: std::exception::capture() @ 0x1610c9c2 in /usr/bin/clickhouse\r\n1. ./obj-x86_64-linux-gnu/../contrib/libcxx/include/exception:111: std::exception::exception() @ 0x1610c993 in /usr/bin/clickhouse\r\n2. ./obj-x86_64-linux-gnu/../contrib/poco/Foundation/src/Exception.cpp:27: Poco::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int) @ 0x288e1f00 in /usr/bin/clickhouse\r\n3. ./obj-x86_64-linux-gnu/../src/Common/Exception.cpp:55: DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x160ee46e in /usr/bin/clickhouse\r\n4. ./obj-x86_64-linux-gnu/../src/Common/ZooKeeper/IKeeper.cpp:25: Coordination::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, Coordination::Error, int) @ 0x24c77f4f in /usr/bin/clickhouse\r\n5. ./obj-x86_64-linux-gnu/../src/Common/ZooKeeper/IKeeper.cpp:41: Coordination::Exception::Exception(Coordination::Error) @ 0x24c78461 in /usr/bin/clickhouse\r\n6. ./obj-x86_64-linux-gnu/../src/Common/ZooKeeper/ZooKeeper.cpp:1098: zkutil::KeeperMultiException::check(Coordination::Error, std::__1::vector<std::__1::shared_ptr<Coordination::Request>, std::__1::allocator<std::__1::shared_ptr<Coordination::Request> > > const&, std::__1::vector<std::__1::shared_ptr<Coordination::Response>, std::__1::allocator<std::__1::shared_ptr<Coordination::Response> > > const&) @ 0x24c81794 in /usr/bin/clickhouse\r\n7. ./obj-x86_64-linux-gnu/../src/Common/ZooKeeper/ZooKeeper.cpp:611: zkutil::ZooKeeper::multi(std::__1::vector<std::__1::shared_ptr<Coordination::Request>, std::__1::allocator<std::__1::shared_ptr<Coordination::Request> > > const&) @ 0x24c8167f in /usr/bin/clickhouse\r\n8. ./obj-x86_64-linux-gnu/../src/Storages/MergeTree/ReplicatedMergeTreeQueue.cpp:670: DB::ReplicatedMergeTreeQueue::pullLogsToQueue(std::__1::shared_ptr<zkutil::ZooKeeper>, std::__1::function<void (Coordination::WatchResponse const&)>, DB::ReplicatedMergeTreeQueue::PullLogsReason) @ 0x242ae6bc in /usr/bin/clickhouse\r\n9. ./obj-x86_64-linux-gnu/../src/Storages/StorageReplicatedMergeTree.cpp:2773: DB::StorageReplicatedMergeTree::queueUpdatingTask() @ 0x23c20165 in /usr/bin/clickhouse\r\n```\r\n\r\nIt's not a problem, because `queue-0000000020` was reloaded from queue later when connection was restored:\r\n```\r\n2022.01.15 23:07:24.541640 [ 763 ] {} <Test> test_98ynp9.r4 (ReplicatedMergeTreeQueue): Insert entry queue-0000000020 to queue with type MERGE_PARTS with virtual parts [all_1_28_2]\r\n```\r\n\r\nBut `mergeSelectingTask` was executed before queue reinitialization has finished:\r\n```\r\n2022.01.15 23:07:24.387149 [ 750 ] {} <Debug> test_98ynp9.r4 (MergerMutator): Selected 9 parts from all_1_15_1 to all_31_31_0\r\n```\r\n\r\nIt constructed `ReplicatedMergeTreeMergePredicate` that called `pullLogsToQueue`, but it was a noop, because `queue-0000000020` entry already present in the queue in ZooKeeper (but it does not present in in-memory queue and that's why `queue.virtual_parts` and `merges_version` were not consistent).\r\n\r\nThis bug was introduced in #32140 and was partially fixed in #32389, but I forgot about another similar case.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34096/reactions","total_count":2,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34096/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34095","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34095/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34095/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34095/events","html_url":"https://github.com/ClickHouse/ClickHouse/pull/34095","id":1117348387,"node_id":"PR_kwDOA5dJV84xu-td","number":34095,"title":"#33584 filtering shebang line from --queries-file","user":{"login":"egor-sivokhin2001","id":98153984,"node_id":"U_kgDOBdm2AA","avatar_url":"https://avatars.githubusercontent.com/u/98153984?v=4","gravatar_id":"","url":"https://api.github.com/users/egor-sivokhin2001","html_url":"https://github.com/egor-sivokhin2001","followers_url":"https://api.github.com/users/egor-sivokhin2001/followers","following_url":"https://api.github.com/users/egor-sivokhin2001/following{/other_user}","gists_url":"https://api.github.com/users/egor-sivokhin2001/gists{/gist_id}","starred_url":"https://api.github.com/users/egor-sivokhin2001/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/egor-sivokhin2001/subscriptions","organizations_url":"https://api.github.com/users/egor-sivokhin2001/orgs","repos_url":"https://api.github.com/users/egor-sivokhin2001/repos","events_url":"https://api.github.com/users/egor-sivokhin2001/events{/privacy}","received_events_url":"https://api.github.com/users/egor-sivokhin2001/received_events","type":"User","site_admin":false},"labels":[{"id":1309674771,"node_id":"MDU6TGFiZWwxMzA5Njc0Nzcx","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/pr-feature","name":"pr-feature","color":"007700","default":false,"description":"Pull request with new product feature"},{"id":1807683251,"node_id":"MDU6TGFiZWwxODA3NjgzMjUx","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/doc-alert","name":"doc-alert","color":"e51068","default":false,"description":"PR where any documentation work is needed or proceeded"},{"id":3627025164,"node_id":"LA_kwDOA5dJV87YMAMM","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/can%20be%20tested","name":"can be tested","color":"1d76db","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2022-01-28T12:27:14Z","updated_at":"2022-01-29T13:55:34Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/pulls/34095","html_url":"https://github.com/ClickHouse/ClickHouse/pull/34095","diff_url":"https://github.com/ClickHouse/ClickHouse/pull/34095.diff","patch_url":"https://github.com/ClickHouse/ClickHouse/pull/34095.patch","merged_at":null},"body":"Changelog category (leave one):\r\n- New Feature\r\n\r\nChangelog entry (a user-readable short description of the changes that goes to CHANGELOG.md):\r\nFiltering `shebang` line from `--queries-file` to support shebang.\r\n\r\n> Information about CI checks: https://clickhouse.tech/docs/en/development/continuous-integration/\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34095/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34095/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34094","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34094/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34094/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34094/events","html_url":"https://github.com/ClickHouse/ClickHouse/pull/34094","id":1117348129,"node_id":"PR_kwDOA5dJV84xu-p8","number":34094,"title":"Update index.md","user":{"login":"Tarasovych","id":24782123,"node_id":"MDQ6VXNlcjI0NzgyMTIz","avatar_url":"https://avatars.githubusercontent.com/u/24782123?v=4","gravatar_id":"","url":"https://api.github.com/users/Tarasovych","html_url":"https://github.com/Tarasovych","followers_url":"https://api.github.com/users/Tarasovych/followers","following_url":"https://api.github.com/users/Tarasovych/following{/other_user}","gists_url":"https://api.github.com/users/Tarasovych/gists{/gist_id}","starred_url":"https://api.github.com/users/Tarasovych/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Tarasovych/subscriptions","organizations_url":"https://api.github.com/users/Tarasovych/orgs","repos_url":"https://api.github.com/users/Tarasovych/repos","events_url":"https://api.github.com/users/Tarasovych/events{/privacy}","received_events_url":"https://api.github.com/users/Tarasovych/received_events","type":"User","site_admin":false},"labels":[{"id":1310920248,"node_id":"MDU6TGFiZWwxMzEwOTIwMjQ4","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/pr-documentation","name":"pr-documentation","color":"007700","default":false,"description":"Documentation PRs for the specific code PR"}],"state":"open","locked":false,"assignee":{"login":"evillique","id":43110995,"node_id":"MDQ6VXNlcjQzMTEwOTk1","avatar_url":"https://avatars.githubusercontent.com/u/43110995?v=4","gravatar_id":"","url":"https://api.github.com/users/evillique","html_url":"https://github.com/evillique","followers_url":"https://api.github.com/users/evillique/followers","following_url":"https://api.github.com/users/evillique/following{/other_user}","gists_url":"https://api.github.com/users/evillique/gists{/gist_id}","starred_url":"https://api.github.com/users/evillique/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/evillique/subscriptions","organizations_url":"https://api.github.com/users/evillique/orgs","repos_url":"https://api.github.com/users/evillique/repos","events_url":"https://api.github.com/users/evillique/events{/privacy}","received_events_url":"https://api.github.com/users/evillique/received_events","type":"User","site_admin":false},"assignees":[{"login":"evillique","id":43110995,"node_id":"MDQ6VXNlcjQzMTEwOTk1","avatar_url":"https://avatars.githubusercontent.com/u/43110995?v=4","gravatar_id":"","url":"https://api.github.com/users/evillique","html_url":"https://github.com/evillique","followers_url":"https://api.github.com/users/evillique/followers","following_url":"https://api.github.com/users/evillique/following{/other_user}","gists_url":"https://api.github.com/users/evillique/gists{/gist_id}","starred_url":"https://api.github.com/users/evillique/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/evillique/subscriptions","organizations_url":"https://api.github.com/users/evillique/orgs","repos_url":"https://api.github.com/users/evillique/repos","events_url":"https://api.github.com/users/evillique/events{/privacy}","received_events_url":"https://api.github.com/users/evillique/received_events","type":"User","site_admin":false}],"milestone":null,"comments":2,"created_at":"2022-01-28T12:26:58Z","updated_at":"2022-01-28T12:52:19Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/pulls/34094","html_url":"https://github.com/ClickHouse/ClickHouse/pull/34094","diff_url":"https://github.com/ClickHouse/ClickHouse/pull/34094.diff","patch_url":"https://github.com/ClickHouse/ClickHouse/pull/34094.patch","merged_at":null},"body":"Changelog category (leave one):\r\n- Documentation (changelog entry is not required)","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34094/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34094/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34092","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34092/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34092/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34092/events","html_url":"https://github.com/ClickHouse/ClickHouse/pull/34092","id":1117296991,"node_id":"PR_kwDOA5dJV84xuzwh","number":34092,"title":"Randomize some settings in functional tests","user":{"login":"Avogar","id":48961922,"node_id":"MDQ6VXNlcjQ4OTYxOTIy","avatar_url":"https://avatars.githubusercontent.com/u/48961922?v=4","gravatar_id":"","url":"https://api.github.com/users/Avogar","html_url":"https://github.com/Avogar","followers_url":"https://api.github.com/users/Avogar/followers","following_url":"https://api.github.com/users/Avogar/following{/other_user}","gists_url":"https://api.github.com/users/Avogar/gists{/gist_id}","starred_url":"https://api.github.com/users/Avogar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Avogar/subscriptions","organizations_url":"https://api.github.com/users/Avogar/orgs","repos_url":"https://api.github.com/users/Avogar/repos","events_url":"https://api.github.com/users/Avogar/events{/privacy}","received_events_url":"https://api.github.com/users/Avogar/received_events","type":"User","site_admin":false},"labels":[{"id":1309693854,"node_id":"MDU6TGFiZWwxMzA5NjkzODU0","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/pr-build","name":"pr-build","color":"007700","default":false,"description":"Pull request with build/testing/packaging improvement"}],"state":"open","locked":false,"assignee":{"login":"alexey-milovidov","id":18581488,"node_id":"MDQ6VXNlcjE4NTgxNDg4","avatar_url":"https://avatars.githubusercontent.com/u/18581488?v=4","gravatar_id":"","url":"https://api.github.com/users/alexey-milovidov","html_url":"https://github.com/alexey-milovidov","followers_url":"https://api.github.com/users/alexey-milovidov/followers","following_url":"https://api.github.com/users/alexey-milovidov/following{/other_user}","gists_url":"https://api.github.com/users/alexey-milovidov/gists{/gist_id}","starred_url":"https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexey-milovidov/subscriptions","organizations_url":"https://api.github.com/users/alexey-milovidov/orgs","repos_url":"https://api.github.com/users/alexey-milovidov/repos","events_url":"https://api.github.com/users/alexey-milovidov/events{/privacy}","received_events_url":"https://api.github.com/users/alexey-milovidov/received_events","type":"User","site_admin":false},"assignees":[{"login":"alexey-milovidov","id":18581488,"node_id":"MDQ6VXNlcjE4NTgxNDg4","avatar_url":"https://avatars.githubusercontent.com/u/18581488?v=4","gravatar_id":"","url":"https://api.github.com/users/alexey-milovidov","html_url":"https://github.com/alexey-milovidov","followers_url":"https://api.github.com/users/alexey-milovidov/followers","following_url":"https://api.github.com/users/alexey-milovidov/following{/other_user}","gists_url":"https://api.github.com/users/alexey-milovidov/gists{/gist_id}","starred_url":"https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexey-milovidov/subscriptions","organizations_url":"https://api.github.com/users/alexey-milovidov/orgs","repos_url":"https://api.github.com/users/alexey-milovidov/repos","events_url":"https://api.github.com/users/alexey-milovidov/events{/privacy}","received_events_url":"https://api.github.com/users/alexey-milovidov/received_events","type":"User","site_admin":false}],"milestone":null,"comments":12,"created_at":"2022-01-28T11:27:40Z","updated_at":"2022-01-29T09:43:51Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/pulls/34092","html_url":"https://github.com/ClickHouse/ClickHouse/pull/34092","diff_url":"https://github.com/ClickHouse/ClickHouse/pull/34092.diff","patch_url":"https://github.com/ClickHouse/ClickHouse/pull/34092.patch","merged_at":null},"body":"Changelog category (leave one):\r\n\r\n- Build/Testing/Packaging Improvement\r\n\r\n\r\n\r\nChangelog entry (a user-readable short description of the changes that goes to CHANGELOG.md):\r\nRandomize some settings in functional tests. This closes #32268.\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34092/reactions","total_count":3,"+1":0,"-1":0,"laugh":0,"hooray":3,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34092/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34091","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34091/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34091/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34091/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/34091","id":1117255518,"node_id":"I_kwDOA5dJV85Cl_de","number":34091,"title":"unknown serialization kind on distributed table","user":{"login":"Tiaonmmn","id":17075857,"node_id":"MDQ6VXNlcjE3MDc1ODU3","avatar_url":"https://avatars.githubusercontent.com/u/17075857?v=4","gravatar_id":"","url":"https://api.github.com/users/Tiaonmmn","html_url":"https://github.com/Tiaonmmn","followers_url":"https://api.github.com/users/Tiaonmmn/followers","following_url":"https://api.github.com/users/Tiaonmmn/following{/other_user}","gists_url":"https://api.github.com/users/Tiaonmmn/gists{/gist_id}","starred_url":"https://api.github.com/users/Tiaonmmn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Tiaonmmn/subscriptions","organizations_url":"https://api.github.com/users/Tiaonmmn/orgs","repos_url":"https://api.github.com/users/Tiaonmmn/repos","events_url":"https://api.github.com/users/Tiaonmmn/events{/privacy}","received_events_url":"https://api.github.com/users/Tiaonmmn/received_events","type":"User","site_admin":false},"labels":[{"id":1575085465,"node_id":"MDU6TGFiZWwxNTc1MDg1NDY1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/unexpected%20behaviour","name":"unexpected behaviour","color":"e088ca","default":false,"description":""},{"id":1634829961,"node_id":"MDU6TGFiZWwxNjM0ODI5OTYx","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-distributed","name":"comp-distributed","color":"b5bcff","default":false,"description":"Distributed tables"}],"state":"open","locked":false,"assignee":{"login":"CurtizJ","id":20361854,"node_id":"MDQ6VXNlcjIwMzYxODU0","avatar_url":"https://avatars.githubusercontent.com/u/20361854?v=4","gravatar_id":"","url":"https://api.github.com/users/CurtizJ","html_url":"https://github.com/CurtizJ","followers_url":"https://api.github.com/users/CurtizJ/followers","following_url":"https://api.github.com/users/CurtizJ/following{/other_user}","gists_url":"https://api.github.com/users/CurtizJ/gists{/gist_id}","starred_url":"https://api.github.com/users/CurtizJ/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/CurtizJ/subscriptions","organizations_url":"https://api.github.com/users/CurtizJ/orgs","repos_url":"https://api.github.com/users/CurtizJ/repos","events_url":"https://api.github.com/users/CurtizJ/events{/privacy}","received_events_url":"https://api.github.com/users/CurtizJ/received_events","type":"User","site_admin":false},"assignees":[{"login":"CurtizJ","id":20361854,"node_id":"MDQ6VXNlcjIwMzYxODU0","avatar_url":"https://avatars.githubusercontent.com/u/20361854?v=4","gravatar_id":"","url":"https://api.github.com/users/CurtizJ","html_url":"https://github.com/CurtizJ","followers_url":"https://api.github.com/users/CurtizJ/followers","following_url":"https://api.github.com/users/CurtizJ/following{/other_user}","gists_url":"https://api.github.com/users/CurtizJ/gists{/gist_id}","starred_url":"https://api.github.com/users/CurtizJ/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/CurtizJ/subscriptions","organizations_url":"https://api.github.com/users/CurtizJ/orgs","repos_url":"https://api.github.com/users/CurtizJ/repos","events_url":"https://api.github.com/users/CurtizJ/events{/privacy}","received_events_url":"https://api.github.com/users/CurtizJ/received_events","type":"User","site_admin":false}],"milestone":null,"comments":5,"created_at":"2022-01-28T10:45:12Z","updated_at":"2022-01-29T01:08:30Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"\r\n**Describe the unexpected behaviour**\r\nAfter upgraded to ClickHouse 22.1.3 revision 54455,when using distributed table to insert data,errors occured in log.\r\n\r\n**How to reproduce**\r\nVersion:ClickHouse 22.1.3.7\r\n\r\n**Expected behavior**\r\nAfter upgraded to ClickHouse 22.1.3 revision 54455,when using distributed table to insert data,errors occured in log.\r\nCluster's ClickHouse version are the same,22.1.3.7.\r\n\r\n**Error message and/or stacktrace**\r\n2022.01.28 18:39:41.098174 [ 80700 ] {} <Error> XXX.YYYY.DirectoryMonitor: Code: 246. DB::Exception: Unknown serialization kind 99: While sending /clickhouse/store/4db/4db5491f-555c-4c9d-8db5-491f555cbc9d/shard7_replica1/1571210.bin. (CORRUPTED_DATA), Stack trace (when copying this message, always include the lines below):\r\n\r\n0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0xa82d07a in /usr/bin/clickhouse\r\n1. DB::SerializationInfo::deserializeFromKindsBinary(DB::ReadBuffer&) @ 0x1326c09c in /usr/bin/clickhouse\r\n2. DB::NativeReader::read() @ 0x14826428 in /usr/bin/clickhouse\r\n3. ? @ 0x14195913 in /usr/bin/clickhouse\r\n4. DB::StorageDistributedDirectoryMonitor::processFile(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) @ 0x1419391a in /usr/bin/clickhouse\r\n5. DB::StorageDistributedDirectoryMonitor::run() @ 0x1418fa78 in /usr/bin/clickhouse\r\n6. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x12f8470e in /usr/bin/clickhouse\r\n7. DB::BackgroundSchedulePool::threadFunction() @ 0x12f870a7 in /usr/bin/clickhouse\r\n8. ? @ 0x12f88170 in /usr/bin/clickhouse\r\n9. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0xa86f4b7 in /usr/bin/clickhouse\r\n10. ? @ 0xa872ebd in /usr/bin/clickhouse\r\n11. start_thread @ 0x7ea5 in /usr/lib64/libpthread-2.17.so\r\n12. __clone @ 0xfeb0d in /usr/lib64/libc-2.17.so\r\n (version 22.1.3.7 (official build))\r\n\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34091/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34091/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34089","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34089/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34089/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34089/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/34089","id":1117246124,"node_id":"I_kwDOA5dJV85Cl9Ks","number":34089,"title":"Data duplication in `PART MOVE TO SHARD` feature","user":{"login":"AlmostIvanSidorov","id":85959395,"node_id":"MDQ6VXNlcjg1OTU5Mzk1","avatar_url":"https://avatars.githubusercontent.com/u/85959395?v=4","gravatar_id":"","url":"https://api.github.com/users/AlmostIvanSidorov","html_url":"https://github.com/AlmostIvanSidorov","followers_url":"https://api.github.com/users/AlmostIvanSidorov/followers","following_url":"https://api.github.com/users/AlmostIvanSidorov/following{/other_user}","gists_url":"https://api.github.com/users/AlmostIvanSidorov/gists{/gist_id}","starred_url":"https://api.github.com/users/AlmostIvanSidorov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/AlmostIvanSidorov/subscriptions","organizations_url":"https://api.github.com/users/AlmostIvanSidorov/orgs","repos_url":"https://api.github.com/users/AlmostIvanSidorov/repos","events_url":"https://api.github.com/users/AlmostIvanSidorov/events{/privacy}","received_events_url":"https://api.github.com/users/AlmostIvanSidorov/received_events","type":"User","site_admin":false},"labels":[{"id":1575085465,"node_id":"MDU6TGFiZWwxNTc1MDg1NDY1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/unexpected%20behaviour","name":"unexpected behaviour","color":"e088ca","default":false,"description":""},{"id":2673090580,"node_id":"MDU6TGFiZWwyNjczMDkwNTgw","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/bug%20experimental","name":"bug experimental","color":"E99695","default":false,"description":"Bug in the feature that should not be used in production"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2022-01-28T10:36:32Z","updated_at":"2022-01-30T14:05:16Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"I wrote a test for  `PART MOVE TO SHARD` runs multiple times and received some unexpected behavior.\r\n\r\n**Test description:**\r\n1) Create a table\r\n2) Make 2 rows insert on one shard and 1 row insert on some other\r\n3) Stop Merges\r\n4) Create Distributed table\r\n5) Receive part UUID\r\n6) Move this part multiple times\r\n7) Make concurrent check on the number of rows\r\n\r\n**How to reproduce**\r\n1) CREATE TABLE IF NOT EXISTS {table_name} on CLUSTER {cluster_name}\r\n                                                (v UInt64) \"\r\n                                                ENGINE = {table_engine}('/clickhouse/tables/replicated/{shard}/{table_name}', '{replica}') \r\n                                                ORDER BY tuple() \r\n                                                SETTINGS assign_part_uuids=1,\r\n                                                part_moves_between_shards_enable=1,\r\n                                                part_moves_between_shards_delay_seconds=2;\r\n\r\n2) INSERT INTO {table_name} VALUES ({value}) - 2 rows  on one shard and 1 row on some other\r\n\r\n3) SYSTEM STOP MERGES {table_name} - on all nodes\r\n\r\n4) CREATE TABLE IF NOT EXISTS {table_name_d} as {table_name} \r\n                                                    ENGINE = Distributed({cluster_name}, currentDatabase(), {table_name})\r\n5) SELECT uuid FROM system.parts where name = 'all_0_0_0'\r\n\r\n6) SELECT name FROM system.parts where uuid = '{part_uuid}'\r\n    ALTER TABLE {table_name} MOVE PART name TO SHARD '/clickhouse/tables/replicated/{shard1}/{table_name}' - multiple times\r\n\r\n7) select count() from {table_name_d}\r\n\r\n* ClickHouse server version to use\r\n22.1.2\r\n* Queries to run that lead to an unexpected result\r\nselect count() from {table_name_d}\r\n\r\nResult: 4\r\n\r\n**Expected behavior**\r\nResult: 3\r\n\r\n**Additional information**\r\nIf make retries some time result becomes correct. The test gives the correct result if put part_moves_between_shards_delay_seconds=0.\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34089/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34089/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34084","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34084/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34084/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34084/events","html_url":"https://github.com/ClickHouse/ClickHouse/pull/34084","id":1117232682,"node_id":"PR_kwDOA5dJV84xumKu","number":34084,"title":"Cherry pick #33984 to 21.3: Fix segfault while parsing corrupted ORC file","user":{"login":"robot-clickhouse","id":41385210,"node_id":"MDQ6VXNlcjQxMzg1MjEw","avatar_url":"https://avatars.githubusercontent.com/u/41385210?v=4","gravatar_id":"","url":"https://api.github.com/users/robot-clickhouse","html_url":"https://github.com/robot-clickhouse","followers_url":"https://api.github.com/users/robot-clickhouse/followers","following_url":"https://api.github.com/users/robot-clickhouse/following{/other_user}","gists_url":"https://api.github.com/users/robot-clickhouse/gists{/gist_id}","starred_url":"https://api.github.com/users/robot-clickhouse/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/robot-clickhouse/subscriptions","organizations_url":"https://api.github.com/users/robot-clickhouse/orgs","repos_url":"https://api.github.com/users/robot-clickhouse/repos","events_url":"https://api.github.com/users/robot-clickhouse/events{/privacy}","received_events_url":"https://api.github.com/users/robot-clickhouse/received_events","type":"User","site_admin":false},"labels":[{"id":1211037461,"node_id":"MDU6TGFiZWwxMjExMDM3NDYx","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/do%20not%20test","name":"do not test","color":"e99695","default":false,"description":"disable testing on pull request"},{"id":1827370124,"node_id":"MDU6TGFiZWwxODI3MzcwMTI0","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/pr-cherrypick","name":"pr-cherrypick","color":"5fadcc","default":false,"description":"Cherry-pick of merge-commit before backporting. Do not use manually - automated use only!"}],"state":"open","locked":false,"assignee":{"login":"Avogar","id":48961922,"node_id":"MDQ6VXNlcjQ4OTYxOTIy","avatar_url":"https://avatars.githubusercontent.com/u/48961922?v=4","gravatar_id":"","url":"https://api.github.com/users/Avogar","html_url":"https://github.com/Avogar","followers_url":"https://api.github.com/users/Avogar/followers","following_url":"https://api.github.com/users/Avogar/following{/other_user}","gists_url":"https://api.github.com/users/Avogar/gists{/gist_id}","starred_url":"https://api.github.com/users/Avogar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Avogar/subscriptions","organizations_url":"https://api.github.com/users/Avogar/orgs","repos_url":"https://api.github.com/users/Avogar/repos","events_url":"https://api.github.com/users/Avogar/events{/privacy}","received_events_url":"https://api.github.com/users/Avogar/received_events","type":"User","site_admin":false},"assignees":[{"login":"Avogar","id":48961922,"node_id":"MDQ6VXNlcjQ4OTYxOTIy","avatar_url":"https://avatars.githubusercontent.com/u/48961922?v=4","gravatar_id":"","url":"https://api.github.com/users/Avogar","html_url":"https://github.com/Avogar","followers_url":"https://api.github.com/users/Avogar/followers","following_url":"https://api.github.com/users/Avogar/following{/other_user}","gists_url":"https://api.github.com/users/Avogar/gists{/gist_id}","starred_url":"https://api.github.com/users/Avogar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Avogar/subscriptions","organizations_url":"https://api.github.com/users/Avogar/orgs","repos_url":"https://api.github.com/users/Avogar/repos","events_url":"https://api.github.com/users/Avogar/events{/privacy}","received_events_url":"https://api.github.com/users/Avogar/received_events","type":"User","site_admin":false}],"milestone":null,"comments":0,"created_at":"2022-01-28T10:23:08Z","updated_at":"2022-01-28T10:23:14Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/pulls/34084","html_url":"https://github.com/ClickHouse/ClickHouse/pull/34084","diff_url":"https://github.com/ClickHouse/ClickHouse/pull/34084.diff","patch_url":"https://github.com/ClickHouse/ClickHouse/pull/34084.patch","merged_at":null},"body":"Original pull-request #33984\n\nThis pull-request is a first step of an automated backporting.\nIt contains changes like after calling a local command `git cherry-pick`.\nIf you intend to continue backporting this changes, then resolve all conflicts if any.\nOtherwise, if you do not want to backport them, then just close this pull-request.\n\nThe check results does not matter at this step - you can safely ignore them.\nAlso this pull-request will be merged automatically as it reaches the mergeable state, but you always can merge it manually.\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34084/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34084/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34083","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34083/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34083/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34083/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/34083","id":1117209923,"node_id":"I_kwDOA5dJV85Cl0VD","number":34083,"title":"NUMA memory skew between two nodes","user":{"login":"taiyang-li","id":8181003,"node_id":"MDQ6VXNlcjgxODEwMDM=","avatar_url":"https://avatars.githubusercontent.com/u/8181003?v=4","gravatar_id":"","url":"https://api.github.com/users/taiyang-li","html_url":"https://github.com/taiyang-li","followers_url":"https://api.github.com/users/taiyang-li/followers","following_url":"https://api.github.com/users/taiyang-li/following{/other_user}","gists_url":"https://api.github.com/users/taiyang-li/gists{/gist_id}","starred_url":"https://api.github.com/users/taiyang-li/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/taiyang-li/subscriptions","organizations_url":"https://api.github.com/users/taiyang-li/orgs","repos_url":"https://api.github.com/users/taiyang-li/repos","events_url":"https://api.github.com/users/taiyang-li/events{/privacy}","received_events_url":"https://api.github.com/users/taiyang-li/received_events","type":"User","site_admin":false},"labels":[{"id":386401510,"node_id":"MDU6TGFiZWwzODY0MDE1MTA=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/question","name":"question","color":"bfdadc","default":true,"description":""},{"id":1006992822,"node_id":"MDU6TGFiZWwxMDA2OTkyODIy","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/operations","name":"operations","color":"7fe8ba","default":false,"description":""},{"id":1669010018,"node_id":"MDU6TGFiZWwxNjY5MDEwMDE4","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/question-answered","name":"question-answered","color":"bfdadc","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2022-01-28T09:59:00Z","updated_at":"2022-01-28T10:21:58Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"@alexey-milovidov  I found NUMA memory skew between two nodes when running clickhouse-server in production environment.  \r\nIt is strange that metrics of different NUMA nodes is skew, not as expected in https://github.com/ClickHouse/ClickHouse/issues/338. But I can't find where the problem is. I'am not quite familiar with numa, need your help, thanks very much in advance. \r\n> Query execution is done with multiple threads and each thread allocates almost equal amout of memory. It means that memory will spread on all available NUMA-nodes almost uniformly.   \r\n``` \r\n$ sudo numastat `pidof clickhouse-server`   -n \r\n\r\nPer-node process memory usage (in MBs) for PID 25763 (clickhouse-serv)\r\n                           Node 0          Node 1           Total\r\n                  --------------- --------------- ---------------\r\nHuge                         0.00            0.00            0.00\r\nHeap                         0.00            0.00            0.00\r\nStack                        0.01            0.12            0.13\r\nPrivate                  56228.03        29977.67        86205.70\r\n----------------  --------------- --------------- ---------------\r\nTotal                    56228.04        29977.79        86205.83\r\n\r\nPer-node numastat info (in MBs):\r\n                          Node 0          Node 1           Total\r\n                 --------------- --------------- ---------------\r\nNuma_Hit           1450492672.54   1063118489.64   2513611162.18\r\nNuma_Miss            64454679.71    304944127.27    369398806.98\r\nNuma_Foreign        304944127.27     64454679.71    369398806.98\r\nInterleave_Hit            467.96          469.17          937.13\r\nLocal_Node         1450491515.14   1063120834.69   2513612349.83\r\nOther_Node           64455837.11    304941782.22    369397619.33\r\n\r\n\r\n$ numactl --hardware \r\navailable: 2 nodes (0-1)\r\nnode 0 cpus: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71\r\nnode 0 size: 257467 MB\r\nnode 0 free: 8442 MB\r\nnode 1 cpus: 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95\r\nnode 1 size: 258039 MB\r\nnode 1 free: 16464 MB\r\nnode distances:\r\nnode   0   1 \r\n  0:  10  21 \r\n  1:  21  10 \r\n```\r\n\r\n\r\nThe numa policy of the system is `MPOL_DEFAULT` with value 0, detected by this code:\r\n``` cpp\r\n// gcc main.c -lnuma\r\n#include <numa.h>\r\n\r\nint main() \r\n{\r\nint numa_node = -1;\r\nget_mempolicy(&numa_node, NULL, 0, NULL, 0);\r\nprintf(\"%d\\n\", numa_node);\r\nreturn 0;\r\n}\r\n```\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34083/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34083/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34081","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34081/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34081/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34081/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/34081","id":1117131237,"node_id":"I_kwDOA5dJV85ClhHl","number":34081,"title":"maxsplit argument for splitByChar","user":{"login":"filimonov","id":1549571,"node_id":"MDQ6VXNlcjE1NDk1NzE=","avatar_url":"https://avatars.githubusercontent.com/u/1549571?v=4","gravatar_id":"","url":"https://api.github.com/users/filimonov","html_url":"https://github.com/filimonov","followers_url":"https://api.github.com/users/filimonov/followers","following_url":"https://api.github.com/users/filimonov/following{/other_user}","gists_url":"https://api.github.com/users/filimonov/gists{/gist_id}","starred_url":"https://api.github.com/users/filimonov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/filimonov/subscriptions","organizations_url":"https://api.github.com/users/filimonov/orgs","repos_url":"https://api.github.com/users/filimonov/repos","events_url":"https://api.github.com/users/filimonov/events{/privacy}","received_events_url":"https://api.github.com/users/filimonov/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":644208617,"node_id":"MDU6TGFiZWw2NDQyMDg2MTc=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/easy%20task","name":"easy task","color":"0e8a16","default":false,"description":"Good for first contributors"}],"state":"open","locked":false,"assignee":{"login":"taiyang-li","id":8181003,"node_id":"MDQ6VXNlcjgxODEwMDM=","avatar_url":"https://avatars.githubusercontent.com/u/8181003?v=4","gravatar_id":"","url":"https://api.github.com/users/taiyang-li","html_url":"https://github.com/taiyang-li","followers_url":"https://api.github.com/users/taiyang-li/followers","following_url":"https://api.github.com/users/taiyang-li/following{/other_user}","gists_url":"https://api.github.com/users/taiyang-li/gists{/gist_id}","starred_url":"https://api.github.com/users/taiyang-li/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/taiyang-li/subscriptions","organizations_url":"https://api.github.com/users/taiyang-li/orgs","repos_url":"https://api.github.com/users/taiyang-li/repos","events_url":"https://api.github.com/users/taiyang-li/events{/privacy}","received_events_url":"https://api.github.com/users/taiyang-li/received_events","type":"User","site_admin":false},"assignees":[{"login":"taiyang-li","id":8181003,"node_id":"MDQ6VXNlcjgxODEwMDM=","avatar_url":"https://avatars.githubusercontent.com/u/8181003?v=4","gravatar_id":"","url":"https://api.github.com/users/taiyang-li","html_url":"https://github.com/taiyang-li","followers_url":"https://api.github.com/users/taiyang-li/followers","following_url":"https://api.github.com/users/taiyang-li/following{/other_user}","gists_url":"https://api.github.com/users/taiyang-li/gists{/gist_id}","starred_url":"https://api.github.com/users/taiyang-li/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/taiyang-li/subscriptions","organizations_url":"https://api.github.com/users/taiyang-li/orgs","repos_url":"https://api.github.com/users/taiyang-li/repos","events_url":"https://api.github.com/users/taiyang-li/events{/privacy}","received_events_url":"https://api.github.com/users/taiyang-li/received_events","type":"User","site_admin":false}],"milestone":null,"comments":2,"created_at":"2022-01-28T08:33:17Z","updated_at":"2022-01-30T01:12:12Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"body":"Similar to https://docs.python.org/3/library/stdtypes.html?highlight=split#str.split \r\n\r\nUse case:\r\n```\r\nkey=\"value_with_equal=_sign_in it\"\r\n```\r\n\r\nExpected result:\r\n\r\n```\r\nSELECT splitByChar(s, '=', 1)\r\n['key', '\"value_with_equal=_sign_in it\"']\r\n```","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34081/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34081/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34078","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34078/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34078/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34078/events","html_url":"https://github.com/ClickHouse/ClickHouse/pull/34078","id":1117086920,"node_id":"PR_kwDOA5dJV84xuHzP","number":34078,"title":"Fix distributed subquery max_query_size limitation inconsistency","user":{"login":"godliness","id":10972761,"node_id":"MDQ6VXNlcjEwOTcyNzYx","avatar_url":"https://avatars.githubusercontent.com/u/10972761?v=4","gravatar_id":"","url":"https://api.github.com/users/godliness","html_url":"https://github.com/godliness","followers_url":"https://api.github.com/users/godliness/followers","following_url":"https://api.github.com/users/godliness/following{/other_user}","gists_url":"https://api.github.com/users/godliness/gists{/gist_id}","starred_url":"https://api.github.com/users/godliness/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/godliness/subscriptions","organizations_url":"https://api.github.com/users/godliness/orgs","repos_url":"https://api.github.com/users/godliness/repos","events_url":"https://api.github.com/users/godliness/events{/privacy}","received_events_url":"https://api.github.com/users/godliness/received_events","type":"User","site_admin":false},"labels":[{"id":1302792342,"node_id":"MDU6TGFiZWwxMzAyNzkyMzQy","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/pr-bugfix","name":"pr-bugfix","color":"ff4080","default":false,"description":"Pull request with bugfix, not backported by default"},{"id":3627025164,"node_id":"LA_kwDOA5dJV87YMAMM","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/can%20be%20tested","name":"can be tested","color":"1d76db","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2022-01-28T07:31:57Z","updated_at":"2022-01-30T12:15:56Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/pulls/34078","html_url":"https://github.com/ClickHouse/ClickHouse/pull/34078","diff_url":"https://github.com/ClickHouse/ClickHouse/pull/34078.diff","patch_url":"https://github.com/ClickHouse/ClickHouse/pull/34078.patch","merged_at":null},"body":"Changelog category (leave one):\r\n- Bug Fix (user-visible misbehaviour in official stable or prestable release)\r\n\r\n\r\nChangelog entry (a user-readable short description of the changes that goes to CHANGELOG.md):\r\nFix distributed subquery max_query_size limitation inconsistency\r\n\r\n\r\n> Information about CI checks: https://clickhouse.tech/docs/en/development/continuous-integration/\r\n\r\n\r\n**When insert distributed table under max_query_size limitation**:\r\n`insert into demo values ('11', 11, 'haha')` sql clause will be rewrite to `INSERT INTO default.demo(name, id, dt) VALUES` and send to local node from distributed node. when max_query_size set to 26, distributed node can parse the sql but local node not, because local node received the longer sql.\r\nSo we only let the initial node to check the max_query_size, secondary node for distributed table do not need to check it.\r\n\r\n**How to reproduce**:\r\n\r\n```\r\n./clickhouse-client\r\n\r\ndrop table if exists demo_local;\r\nCREATE TABLE default.demo_local\r\n(\r\n    `name` String,\r\n    `id` UInt32,\r\n    `dt` String\r\n)\r\n\r\nENGINE = MergeTree\r\nPARTITION BY dt\r\nORDER BY name\r\nSETTINGS index_granularity = 8192\r\n\r\ndrop table if exists demo;\r\nCREATE TABLE default.demo\r\n(\r\n    `name` String,\r\n    `id` UInt32,\r\n    `dt` String\r\n)\r\nENGINE = Distributed('store', 'default', 'demo_local', rand())\r\n\r\nset max_query_size=25;\r\ninsert into demo values ('11', 11, 'haha');\r\n\r\nSyntax error: failed at position 21 ('values'):\r\n\r\ninsert into demo001 values ('11', 11, 'haha');\r\n\r\nMax query size exceeded: 'values'\r\n========================================\r\nset max_query_size=26;\r\ninsert into demo values ('11', 11, 'haha');\r\n\r\nReceived exception from server (version 21.11.3):\r\nCode: 62. DB::Exception: Received from localhost:9000. DB::Exception: Received from chi-ck-store-1-0.share-store.svc.cluster.local:9000. DB::Exception: Syntax error: failed at position 21 ('demo001'): demo001 (name, id, dt) VALUES. Max query size exceeded: 'demo001'. (SYNTAX_ERROR)\r\n```\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34078/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34078/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34077","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34077/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34077/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34077/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/34077","id":1117063036,"node_id":"I_kwDOA5dJV85ClQd8","number":34077,"title":"Cannot find alias column when query a merge-distributed table","user":{"login":"xqliang","id":4370917,"node_id":"MDQ6VXNlcjQzNzA5MTc=","avatar_url":"https://avatars.githubusercontent.com/u/4370917?v=4","gravatar_id":"","url":"https://api.github.com/users/xqliang","html_url":"https://github.com/xqliang","followers_url":"https://api.github.com/users/xqliang/followers","following_url":"https://api.github.com/users/xqliang/following{/other_user}","gists_url":"https://api.github.com/users/xqliang/gists{/gist_id}","starred_url":"https://api.github.com/users/xqliang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xqliang/subscriptions","organizations_url":"https://api.github.com/users/xqliang/orgs","repos_url":"https://api.github.com/users/xqliang/repos","events_url":"https://api.github.com/users/xqliang/events{/privacy}","received_events_url":"https://api.github.com/users/xqliang/received_events","type":"User","site_admin":false},"labels":[{"id":3260776666,"node_id":"MDU6TGFiZWwzMjYwNzc2NjY2","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/potential%20bug","name":"potential bug","color":"ffc080","default":false,"description":"To be reviewed by developers and confirmed/rejected."}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-01-28T06:54:48Z","updated_at":"2022-01-28T06:54:48Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"When I query an alias column of a merge-distributed table,  I got the following error: `Received exception from server (version 22.1.3): Code: 8. DB::Exception: Received from localhost:9000. DB::Exception: Cannot find column `id2` in source stream, there are only columns: [id]. (THERE_IS_NO_COLUMN)`\r\n\r\n**How to reproduce**\r\n\r\nClickHouse server version: 22.1.3.7\r\n\r\n```sql\r\nCREATE TABLE part1_local (id Int32, id2 Int32 ALIAS id) ENGINE=Memory;\r\nCREATE TABLE part2_local AS part1_local ENGINE=Memory;\r\nCREATE TABLE merge_local (id Int32, id2 Int32) ENGINE=Merge(currentDatabase(), '^part.+_local$');\r\n\r\nCREATE TABLE part1_all AS part1_local ENGINE=Distributed('cluster01', currentDatabase(), part1_local, rand());\r\nCREATE TABLE part2_all AS part1_local ENGINE=Distributed('cluster01', currentDatabase(), part2_local, rand());\r\nCREATE TABLE merge_all (id Int32, id2 Int32) ENGINE=Merge(currentDatabase(), '^part.+_all$');\r\n\r\nINSERT INTO part1_local VALUES (1);\r\nINSERT INTO part2_local VALUES (2);\r\n```\r\n\r\n```sql\r\n> SELECT id, id2 FROM part1_local;\r\n┌─id─┬─id2─┐\r\n│  1 │   1 │\r\n└────┴─────┘\r\n> SELECT id, id2 FROM part1_all;\r\n┌─id─┬─id2─┐\r\n│  1 │   1 │\r\n└────┴─────┘\r\n\r\n\r\n> SELECT id, id2 FROM part2_local;\r\n┌─id─┬─id2─┐\r\n│  2 │   2 │\r\n└────┴─────┘\r\n> SELECT id, id2 FROM part2_all;\r\n┌─id─┬─id2─┐\r\n│  2 │   2 │\r\n└────┴─────┘\r\n\r\n\r\n> SELECT id, id2 FROM merge_local;\r\n┌─id─┬─id2─┐\r\n│  1 │   1 │\r\n└────┴─────┘\r\n┌─id─┬─id2─┐\r\n│  2 │   2 │\r\n└────┴─────┘\r\n\r\n> SELECT id, id2 FROM merge_all;\r\nReceived exception from server (version 22.1.3):\r\nCode: 8. DB::Exception: Received from localhost:9000. DB::Exception: Cannot find column `id2` in source stream,\r\nthere are only columns: [id]. (THERE_IS_NO_COLUMN)\r\n```","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34077/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34077/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34073","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34073/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34073/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34073/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/34073","id":1116776407,"node_id":"I_kwDOA5dJV85CkKfX","number":34073,"title":"Get Exception while query from Nested Array table in CH version 21.11.2.2 and upper","user":{"login":"sulayliu","id":65028492,"node_id":"MDQ6VXNlcjY1MDI4NDky","avatar_url":"https://avatars.githubusercontent.com/u/65028492?v=4","gravatar_id":"","url":"https://api.github.com/users/sulayliu","html_url":"https://github.com/sulayliu","followers_url":"https://api.github.com/users/sulayliu/followers","following_url":"https://api.github.com/users/sulayliu/following{/other_user}","gists_url":"https://api.github.com/users/sulayliu/gists{/gist_id}","starred_url":"https://api.github.com/users/sulayliu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sulayliu/subscriptions","organizations_url":"https://api.github.com/users/sulayliu/orgs","repos_url":"https://api.github.com/users/sulayliu/repos","events_url":"https://api.github.com/users/sulayliu/events{/privacy}","received_events_url":"https://api.github.com/users/sulayliu/received_events","type":"User","site_admin":false},"labels":[{"id":1575085465,"node_id":"MDU6TGFiZWwxNTc1MDg1NDY1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/unexpected%20behaviour","name":"unexpected behaviour","color":"e088ca","default":false,"description":""}],"state":"open","locked":false,"assignee":{"login":"CurtizJ","id":20361854,"node_id":"MDQ6VXNlcjIwMzYxODU0","avatar_url":"https://avatars.githubusercontent.com/u/20361854?v=4","gravatar_id":"","url":"https://api.github.com/users/CurtizJ","html_url":"https://github.com/CurtizJ","followers_url":"https://api.github.com/users/CurtizJ/followers","following_url":"https://api.github.com/users/CurtizJ/following{/other_user}","gists_url":"https://api.github.com/users/CurtizJ/gists{/gist_id}","starred_url":"https://api.github.com/users/CurtizJ/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/CurtizJ/subscriptions","organizations_url":"https://api.github.com/users/CurtizJ/orgs","repos_url":"https://api.github.com/users/CurtizJ/repos","events_url":"https://api.github.com/users/CurtizJ/events{/privacy}","received_events_url":"https://api.github.com/users/CurtizJ/received_events","type":"User","site_admin":false},"assignees":[{"login":"CurtizJ","id":20361854,"node_id":"MDQ6VXNlcjIwMzYxODU0","avatar_url":"https://avatars.githubusercontent.com/u/20361854?v=4","gravatar_id":"","url":"https://api.github.com/users/CurtizJ","html_url":"https://github.com/CurtizJ","followers_url":"https://api.github.com/users/CurtizJ/followers","following_url":"https://api.github.com/users/CurtizJ/following{/other_user}","gists_url":"https://api.github.com/users/CurtizJ/gists{/gist_id}","starred_url":"https://api.github.com/users/CurtizJ/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/CurtizJ/subscriptions","organizations_url":"https://api.github.com/users/CurtizJ/orgs","repos_url":"https://api.github.com/users/CurtizJ/repos","events_url":"https://api.github.com/users/CurtizJ/events{/privacy}","received_events_url":"https://api.github.com/users/CurtizJ/received_events","type":"User","site_admin":false}],"milestone":null,"comments":0,"created_at":"2022-01-27T21:55:45Z","updated_at":"2022-01-27T23:14:03Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Clickhouse version 21.10.6.2,21.10.5.3 and lower:\r\n```\r\nCREATE TABLE repro (\r\n`id` UInt64,\r\n`version` UInt16,\r\n`conversations.id` Array(UInt64),\r\n`conversations.routings.id` Array(Array(UInt64))\r\n)\r\nENGINE = ReplacingMergeTree(version)\r\nORDER BY (id)\r\nSETTINGS min_bytes_for_wide_part = 0, min_rows_for_wide_part = 0;\r\n\r\nINSERT INTO repro (`id`, `version`, `conversations.id`, `conversations.routings.id`)\r\nVALUES (1, 1, [1], [[1]]);\r\n\r\nselect * from repro;\r\n\r\n┌─id─┬─version─┬─conversations.id─┬─conversations.routings.id─┐\r\n│  1 │       1 │ [1]              │ [[1]]                     │\r\n└────┴─────────┴──────────────────┴───────────────────────────┘\r\n\r\n```\r\nCH version: 21.11.2.2 and upper:\r\n\r\n```\r\nCREATE TABLE repro (\r\n`id` UInt64,\r\n`version` UInt16,\r\n`conversations.id` Array(UInt64),\r\n`conversations.routings.id` Array(Array(UInt64))\r\n)\r\nENGINE = ReplacingMergeTree(version)\r\nORDER BY (id)\r\nSETTINGS min_bytes_for_wide_part = 0, min_rows_for_wide_part = 0;\r\n\r\nINSERT INTO repro (`id`, `version`, `conversations.id`, `conversations.routings.id`)\r\nVALUES (1, 1, [1], [[1]]);\r\n\r\nselect * from repro;\r\n\r\nReceived exception from server (version 21.11.2):                        <------------- unexpected, it should have results.\r\nCode: 44. DB::Exception: Received from localhost:9000. DB::Exception: There is no subcolumn routings.id in type Nested(id UInt64, `routings.id` Array(UInt64)): While executing MergeTreeInOrder. (ILLEGAL_COLUMN)\r\n\r\n```\r\n\r\n**Unexpected Behaviour:**\r\nIt should not have an exception in the select query.\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34073/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34073/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34071","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34071/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34071/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34071/events","html_url":"https://github.com/ClickHouse/ClickHouse/pull/34071","id":1116717660,"node_id":"PR_kwDOA5dJV84xs72N","number":34071,"title":"Performance check build AVX512","user":{"login":"kitaisreal","id":22458333,"node_id":"MDQ6VXNlcjIyNDU4MzMz","avatar_url":"https://avatars.githubusercontent.com/u/22458333?v=4","gravatar_id":"","url":"https://api.github.com/users/kitaisreal","html_url":"https://github.com/kitaisreal","followers_url":"https://api.github.com/users/kitaisreal/followers","following_url":"https://api.github.com/users/kitaisreal/following{/other_user}","gists_url":"https://api.github.com/users/kitaisreal/gists{/gist_id}","starred_url":"https://api.github.com/users/kitaisreal/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kitaisreal/subscriptions","organizations_url":"https://api.github.com/users/kitaisreal/orgs","repos_url":"https://api.github.com/users/kitaisreal/repos","events_url":"https://api.github.com/users/kitaisreal/events{/privacy}","received_events_url":"https://api.github.com/users/kitaisreal/received_events","type":"User","site_admin":false},"labels":[{"id":1876999755,"node_id":"MDU6TGFiZWwxODc2OTk5NzU1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/pr-not-for-changelog","name":"pr-not-for-changelog","color":"007700","default":false,"description":"This PR should not be mentioned in the changelog"},{"id":2250495937,"node_id":"MDU6TGFiZWwyMjUwNDk1OTM3","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/force%20tests","name":"force tests","color":"59d16d","default":false,"description":"Force test ignoring fast test output. Also forces full perf test run."}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2022-01-27T20:41:35Z","updated_at":"2022-01-28T11:54:09Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/pulls/34071","html_url":"https://github.com/ClickHouse/ClickHouse/pull/34071","diff_url":"https://github.com/ClickHouse/ClickHouse/pull/34071.diff","patch_url":"https://github.com/ClickHouse/ClickHouse/pull/34071.patch","merged_at":null},"body":"Changelog category (leave one):\r\n- Not for changelog (changelog entry is not required)\r\n\r\nCheck performance with AVX512 instructions enabled.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34071/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34071/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34070","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34070/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34070/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34070/events","html_url":"https://github.com/ClickHouse/ClickHouse/pull/34070","id":1116717467,"node_id":"PR_kwDOA5dJV84xs7zn","number":34070,"title":"Performance check build AVX2","user":{"login":"kitaisreal","id":22458333,"node_id":"MDQ6VXNlcjIyNDU4MzMz","avatar_url":"https://avatars.githubusercontent.com/u/22458333?v=4","gravatar_id":"","url":"https://api.github.com/users/kitaisreal","html_url":"https://github.com/kitaisreal","followers_url":"https://api.github.com/users/kitaisreal/followers","following_url":"https://api.github.com/users/kitaisreal/following{/other_user}","gists_url":"https://api.github.com/users/kitaisreal/gists{/gist_id}","starred_url":"https://api.github.com/users/kitaisreal/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kitaisreal/subscriptions","organizations_url":"https://api.github.com/users/kitaisreal/orgs","repos_url":"https://api.github.com/users/kitaisreal/repos","events_url":"https://api.github.com/users/kitaisreal/events{/privacy}","received_events_url":"https://api.github.com/users/kitaisreal/received_events","type":"User","site_admin":false},"labels":[{"id":1876999755,"node_id":"MDU6TGFiZWwxODc2OTk5NzU1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/pr-not-for-changelog","name":"pr-not-for-changelog","color":"007700","default":false,"description":"This PR should not be mentioned in the changelog"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-01-27T20:41:19Z","updated_at":"2022-01-27T20:41:21Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/pulls/34070","html_url":"https://github.com/ClickHouse/ClickHouse/pull/34070","diff_url":"https://github.com/ClickHouse/ClickHouse/pull/34070.diff","patch_url":"https://github.com/ClickHouse/ClickHouse/pull/34070.patch","merged_at":null},"body":"Changelog category (leave one):\r\n- Not for changelog (changelog entry is not required)\r\n\r\nCheck performance with AVX2 instructions enabled.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34070/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34070/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34069","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34069/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34069/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34069/events","html_url":"https://github.com/ClickHouse/ClickHouse/pull/34069","id":1116717239,"node_id":"PR_kwDOA5dJV84xs7wZ","number":34069,"title":"Performance check build AVX","user":{"login":"kitaisreal","id":22458333,"node_id":"MDQ6VXNlcjIyNDU4MzMz","avatar_url":"https://avatars.githubusercontent.com/u/22458333?v=4","gravatar_id":"","url":"https://api.github.com/users/kitaisreal","html_url":"https://github.com/kitaisreal","followers_url":"https://api.github.com/users/kitaisreal/followers","following_url":"https://api.github.com/users/kitaisreal/following{/other_user}","gists_url":"https://api.github.com/users/kitaisreal/gists{/gist_id}","starred_url":"https://api.github.com/users/kitaisreal/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kitaisreal/subscriptions","organizations_url":"https://api.github.com/users/kitaisreal/orgs","repos_url":"https://api.github.com/users/kitaisreal/repos","events_url":"https://api.github.com/users/kitaisreal/events{/privacy}","received_events_url":"https://api.github.com/users/kitaisreal/received_events","type":"User","site_admin":false},"labels":[{"id":1876999755,"node_id":"MDU6TGFiZWwxODc2OTk5NzU1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/pr-not-for-changelog","name":"pr-not-for-changelog","color":"007700","default":false,"description":"This PR should not be mentioned in the changelog"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-01-27T20:41:00Z","updated_at":"2022-01-27T20:41:02Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/pulls/34069","html_url":"https://github.com/ClickHouse/ClickHouse/pull/34069","diff_url":"https://github.com/ClickHouse/ClickHouse/pull/34069.diff","patch_url":"https://github.com/ClickHouse/ClickHouse/pull/34069.patch","merged_at":null},"body":"Changelog category (leave one):\r\n- Not for changelog (changelog entry is not required)\r\n\r\nCheck performance with AVX instructions enabled.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34069/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34069/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34067","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34067/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34067/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34067/events","html_url":"https://github.com/ClickHouse/ClickHouse/pull/34067","id":1116545981,"node_id":"PR_kwDOA5dJV84xsYM9","number":34067,"title":"Fix  `parallel_view_processing=0` and `view_duration_ms` in views log","user":{"login":"Algunenano","id":664253,"node_id":"MDQ6VXNlcjY2NDI1Mw==","avatar_url":"https://avatars.githubusercontent.com/u/664253?v=4","gravatar_id":"","url":"https://api.github.com/users/Algunenano","html_url":"https://github.com/Algunenano","followers_url":"https://api.github.com/users/Algunenano/followers","following_url":"https://api.github.com/users/Algunenano/following{/other_user}","gists_url":"https://api.github.com/users/Algunenano/gists{/gist_id}","starred_url":"https://api.github.com/users/Algunenano/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Algunenano/subscriptions","organizations_url":"https://api.github.com/users/Algunenano/orgs","repos_url":"https://api.github.com/users/Algunenano/repos","events_url":"https://api.github.com/users/Algunenano/events{/privacy}","received_events_url":"https://api.github.com/users/Algunenano/received_events","type":"User","site_admin":false},"labels":[{"id":1302792342,"node_id":"MDU6TGFiZWwxMzAyNzkyMzQy","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/pr-bugfix","name":"pr-bugfix","color":"ff4080","default":false,"description":"Pull request with bugfix, not backported by default"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-01-27T17:22:25Z","updated_at":"2022-01-27T17:22:28Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/pulls/34067","html_url":"https://github.com/ClickHouse/ClickHouse/pull/34067","diff_url":"https://github.com/ClickHouse/ClickHouse/pull/34067.diff","patch_url":"https://github.com/ClickHouse/ClickHouse/pull/34067.patch","merged_at":null},"body":"Changelog category (leave one):\r\n- Bug Fix (user-visible misbehaviour in official stable or prestable release)\r\n\r\nChangelog entry (a user-readable short description of the changes that goes to CHANGELOG.md):\r\n- Fixes `parallel_view_processing=0` not working when inserting into a table using `VALUES`.\r\n- Fixes `view_duration_ms` in the `query_views_log` not being set correctly for materialized views.\r\n\r\n> Information about CI checks: https://clickhouse.tech/docs/en/development/continuous-integration/\r\n\r\nI'm not 100% sure about the first fix. It works and it makes sense but I feel I'm missing something since now there are 2 places where the limits are set (here and in InterpreterInsertQuery::execute() in some cases).\r\n\r\nBoth issues come from the large refactor done in 21.11, so they only affect 21.11+\r\ncc @KochetovNicolai \r\nCloses https://github.com/ClickHouse/ClickHouse/issues/34061\r\nCloses https://github.com/ClickHouse/ClickHouse/issues/33961","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34067/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34067/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34066","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34066/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34066/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34066/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/34066","id":1116534373,"node_id":"I_kwDOA5dJV85CjPZl","number":34066,"title":"Trace context information is not propagated from GRPC clients","user":{"login":"andremarianiello","id":3359229,"node_id":"MDQ6VXNlcjMzNTkyMjk=","avatar_url":"https://avatars.githubusercontent.com/u/3359229?v=4","gravatar_id":"","url":"https://api.github.com/users/andremarianiello","html_url":"https://github.com/andremarianiello","followers_url":"https://api.github.com/users/andremarianiello/followers","following_url":"https://api.github.com/users/andremarianiello/following{/other_user}","gists_url":"https://api.github.com/users/andremarianiello/gists{/gist_id}","starred_url":"https://api.github.com/users/andremarianiello/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andremarianiello/subscriptions","organizations_url":"https://api.github.com/users/andremarianiello/orgs","repos_url":"https://api.github.com/users/andremarianiello/repos","events_url":"https://api.github.com/users/andremarianiello/events{/privacy}","received_events_url":"https://api.github.com/users/andremarianiello/received_events","type":"User","site_admin":false},"labels":[{"id":1397894054,"node_id":"MDU6TGFiZWwxMzk3ODk0MDU0","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/unfinished%20code","name":"unfinished code","color":"ff8800","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-01-27T17:10:51Z","updated_at":"2022-01-27T17:11:37Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"**Describe the unexpected behaviour**\r\nTrace context information is extracted from HTTP client headers, but not GRPC client metadata. This breaks GRPC traces.\r\n\r\n**Expected behavior**\r\nI would expect clickhouse to use GRPC client-provided metadata (`traceparent` and optionally `tracestate`) when creating child spans. \r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34066/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34066/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34065","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34065/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34065/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34065/events","html_url":"https://github.com/ClickHouse/ClickHouse/pull/34065","id":1116525682,"node_id":"PR_kwDOA5dJV84xsT8Q","number":34065,"title":"Support UUID in MsgPack format","user":{"login":"Avogar","id":48961922,"node_id":"MDQ6VXNlcjQ4OTYxOTIy","avatar_url":"https://avatars.githubusercontent.com/u/48961922?v=4","gravatar_id":"","url":"https://api.github.com/users/Avogar","html_url":"https://github.com/Avogar","followers_url":"https://api.github.com/users/Avogar/followers","following_url":"https://api.github.com/users/Avogar/following{/other_user}","gists_url":"https://api.github.com/users/Avogar/gists{/gist_id}","starred_url":"https://api.github.com/users/Avogar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Avogar/subscriptions","organizations_url":"https://api.github.com/users/Avogar/orgs","repos_url":"https://api.github.com/users/Avogar/repos","events_url":"https://api.github.com/users/Avogar/events{/privacy}","received_events_url":"https://api.github.com/users/Avogar/received_events","type":"User","site_admin":false},"labels":[{"id":1304141686,"node_id":"MDU6TGFiZWwxMzA0MTQxNjg2","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/pr-improvement","name":"pr-improvement","color":"007700","default":false,"description":"Pull request with some product improvements"}],"state":"open","locked":false,"assignee":{"login":"CurtizJ","id":20361854,"node_id":"MDQ6VXNlcjIwMzYxODU0","avatar_url":"https://avatars.githubusercontent.com/u/20361854?v=4","gravatar_id":"","url":"https://api.github.com/users/CurtizJ","html_url":"https://github.com/CurtizJ","followers_url":"https://api.github.com/users/CurtizJ/followers","following_url":"https://api.github.com/users/CurtizJ/following{/other_user}","gists_url":"https://api.github.com/users/CurtizJ/gists{/gist_id}","starred_url":"https://api.github.com/users/CurtizJ/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/CurtizJ/subscriptions","organizations_url":"https://api.github.com/users/CurtizJ/orgs","repos_url":"https://api.github.com/users/CurtizJ/repos","events_url":"https://api.github.com/users/CurtizJ/events{/privacy}","received_events_url":"https://api.github.com/users/CurtizJ/received_events","type":"User","site_admin":false},"assignees":[{"login":"CurtizJ","id":20361854,"node_id":"MDQ6VXNlcjIwMzYxODU0","avatar_url":"https://avatars.githubusercontent.com/u/20361854?v=4","gravatar_id":"","url":"https://api.github.com/users/CurtizJ","html_url":"https://github.com/CurtizJ","followers_url":"https://api.github.com/users/CurtizJ/followers","following_url":"https://api.github.com/users/CurtizJ/following{/other_user}","gists_url":"https://api.github.com/users/CurtizJ/gists{/gist_id}","starred_url":"https://api.github.com/users/CurtizJ/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/CurtizJ/subscriptions","organizations_url":"https://api.github.com/users/CurtizJ/orgs","repos_url":"https://api.github.com/users/CurtizJ/repos","events_url":"https://api.github.com/users/CurtizJ/events{/privacy}","received_events_url":"https://api.github.com/users/CurtizJ/received_events","type":"User","site_admin":false}],"milestone":null,"comments":0,"created_at":"2022-01-27T17:03:35Z","updated_at":"2022-01-28T14:34:42Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/pulls/34065","html_url":"https://github.com/ClickHouse/ClickHouse/pull/34065","diff_url":"https://github.com/ClickHouse/ClickHouse/pull/34065.diff","patch_url":"https://github.com/ClickHouse/ClickHouse/pull/34065.patch","merged_at":null},"body":"Changelog category (leave one):\r\n- Improvement\r\n\r\n\r\nChangelog entry (a user-readable short description of the changes that goes to CHANGELOG.md):\r\nAdd UUID suport in MsgPack input/output format.\r\n\r\nDetailed description / Documentation draft:\r\nThere are 3 ways to output UUID in MsgPack format, that are controlled by setting `output_format_msgpack_uuid_representation`:\r\n- As a string of 36 bytes. Setting value: `str`.\r\n- As 16-bytes binary (note that UUID binary representation here is the same as in Native and RowBinary formats). Setting value: `bin`.\r\n- As extention with ExtType = 2 (see the specification here https://github.com/tarantool/doc/issues/1227). Setting value: `ext` default).\r\n\r\nMsgPack input format supports all 3 variants.\r\nCloses https://github.com/ClickHouse/ClickHouse/issues/33756","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34065/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34065/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34064","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34064/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34064/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34064/events","html_url":"https://github.com/ClickHouse/ClickHouse/pull/34064","id":1116494763,"node_id":"PR_kwDOA5dJV84xsNhy","number":34064,"title":"Propagate trace context from GRPC calls","user":{"login":"andremarianiello","id":3359229,"node_id":"MDQ6VXNlcjMzNTkyMjk=","avatar_url":"https://avatars.githubusercontent.com/u/3359229?v=4","gravatar_id":"","url":"https://api.github.com/users/andremarianiello","html_url":"https://github.com/andremarianiello","followers_url":"https://api.github.com/users/andremarianiello/followers","following_url":"https://api.github.com/users/andremarianiello/following{/other_user}","gists_url":"https://api.github.com/users/andremarianiello/gists{/gist_id}","starred_url":"https://api.github.com/users/andremarianiello/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andremarianiello/subscriptions","organizations_url":"https://api.github.com/users/andremarianiello/orgs","repos_url":"https://api.github.com/users/andremarianiello/repos","events_url":"https://api.github.com/users/andremarianiello/events{/privacy}","received_events_url":"https://api.github.com/users/andremarianiello/received_events","type":"User","site_admin":false},"labels":[{"id":1304141686,"node_id":"MDU6TGFiZWwxMzA0MTQxNjg2","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/pr-improvement","name":"pr-improvement","color":"007700","default":false,"description":"Pull request with some product improvements"},{"id":3627025164,"node_id":"LA_kwDOA5dJV87YMAMM","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/can%20be%20tested","name":"can be tested","color":"1d76db","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2022-01-27T16:35:46Z","updated_at":"2022-01-28T19:27:12Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/pulls/34064","html_url":"https://github.com/ClickHouse/ClickHouse/pull/34064","diff_url":"https://github.com/ClickHouse/ClickHouse/pull/34064.diff","patch_url":"https://github.com/ClickHouse/ClickHouse/pull/34064.patch","merged_at":null},"body":"Changelog category (leave one):\r\n- Improvement\r\n\r\nChangelog entry (a user-readable short description of the changes that goes to CHANGELOG.md):\r\n\r\nTracing context is now propagated from GRPC client metadata.\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34064/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34064/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34063","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34063/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34063/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34063/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/34063","id":1116418674,"node_id":"I_kwDOA5dJV85CizJy","number":34063,"title":"WHERE non_null_key_column = null AND some_column > 0 index doesnt work","user":{"login":"UnamedRus","id":9449405,"node_id":"MDQ6VXNlcjk0NDk0MDU=","avatar_url":"https://avatars.githubusercontent.com/u/9449405?v=4","gravatar_id":"","url":"https://api.github.com/users/UnamedRus","html_url":"https://github.com/UnamedRus","followers_url":"https://api.github.com/users/UnamedRus/followers","following_url":"https://api.github.com/users/UnamedRus/following{/other_user}","gists_url":"https://api.github.com/users/UnamedRus/gists{/gist_id}","starred_url":"https://api.github.com/users/UnamedRus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/UnamedRus/subscriptions","organizations_url":"https://api.github.com/users/UnamedRus/orgs","repos_url":"https://api.github.com/users/UnamedRus/repos","events_url":"https://api.github.com/users/UnamedRus/events{/privacy}","received_events_url":"https://api.github.com/users/UnamedRus/received_events","type":"User","site_admin":false},"labels":[{"id":756395244,"node_id":"MDU6TGFiZWw3NTYzOTUyNDQ=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/performance","name":"performance","color":"c2e0c6","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-01-27T15:46:05Z","updated_at":"2022-01-27T15:46:28Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"**Describe the situation**\r\nORDER BY index doesn't work in case we have more than 1 condition in WHERE\r\n\r\n**How to reproduce**\r\n\r\n```\r\nCREATE TABLE test_null_filter\r\n(\r\n    `key` UInt64,\r\n    `value` UInt32\r\n)\r\nENGINE = MergeTree\r\nORDER BY key\r\n\r\n\r\nINSERT INTO test_null_filter SELECT\r\n    number,\r\n    number\r\nFROM numbers(10000000)\r\n\r\n\r\n┌─version()─┐\r\n│ 21.12.4.1 │\r\n└───────────┘\r\n\r\nSELECT count()\r\nFROM test_null_filter\r\nWHERE (key = NULL) AND (value > 0)\r\n\r\nQuery id: 7086661c-9145-44f3-9083-09b645e93c9a\r\n\r\n┌─count()─┐\r\n│       0 │\r\n└─────────┘\r\n\r\n1 rows in set. Elapsed: 0.097 sec. Processed 10.00 million rows, 120.00 MB (103.31 million rows/s., 1.24 GB/s.)\r\n\r\nSELECT count()\r\nFROM test_null_filter\r\nWHERE key = NULL\r\n\r\nQuery id: 9269c370-5ac5-4931-88d3-b46bacd681b1\r\n\r\n┌─count()─┐\r\n│       0 │\r\n└─────────┘\r\n\r\n1 rows in set. Elapsed: 0.004 sec.\r\n\r\n\r\n\r\n┌─version()─┐\r\n│ 21.8.13.6 │\r\n└───────────┘\r\n\r\nSELECT count()\r\nFROM test_null_filter\r\nWHERE (key = NULL) AND (value > 0)\r\n\r\nQuery id: 170ef4ae-d394-443f-85b8-d0ab97bc4632\r\n\r\n┌─count()─┐\r\n│       0 │\r\n└─────────┘\r\n\r\n1 rows in set. Elapsed: 0.096 sec. Processed 10.00 million rows, 120.00 MB (103.93 million rows/s., 1.25 GB/s.)\r\n\r\n\r\nSELECT count()\r\nFROM test_null_filter\r\nWHERE key = NULL\r\n\r\nQuery id: d205120a-247b-4623-a088-57f2d2640005\r\n\r\n┌─count()─┐\r\n│       0 │\r\n└─────────┘\r\n\r\n1 rows in set. Elapsed: 0.007 sec.\r\n```","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34063/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34063/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34061","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34061/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34061/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34061/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/34061","id":1116234700,"node_id":"I_kwDOA5dJV85CiGPM","number":34061,"title":"query_views_log view_duration_ms is always 0","user":{"login":"Algunenano","id":664253,"node_id":"MDQ6VXNlcjY2NDI1Mw==","avatar_url":"https://avatars.githubusercontent.com/u/664253?v=4","gravatar_id":"","url":"https://api.github.com/users/Algunenano","html_url":"https://github.com/Algunenano","followers_url":"https://api.github.com/users/Algunenano/followers","following_url":"https://api.github.com/users/Algunenano/following{/other_user}","gists_url":"https://api.github.com/users/Algunenano/gists{/gist_id}","starred_url":"https://api.github.com/users/Algunenano/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Algunenano/subscriptions","organizations_url":"https://api.github.com/users/Algunenano/orgs","repos_url":"https://api.github.com/users/Algunenano/repos","events_url":"https://api.github.com/users/Algunenano/events{/privacy}","received_events_url":"https://api.github.com/users/Algunenano/received_events","type":"User","site_admin":false},"labels":[{"id":386401508,"node_id":"MDU6TGFiZWwzODY0MDE1MDg=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/help%20wanted","name":"help wanted","color":"128A0C","default":true,"description":null},{"id":1365579236,"node_id":"MDU6TGFiZWwxMzY1NTc5MjM2","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/minor","name":"minor","color":"FFF8F8","default":false,"description":"Priority: minor"},{"id":3260776666,"node_id":"MDU6TGFiZWwzMjYwNzc2NjY2","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/potential%20bug","name":"potential bug","color":"ffc080","default":false,"description":"To be reviewed by developers and confirmed/rejected."}],"state":"open","locked":false,"assignee":{"login":"Algunenano","id":664253,"node_id":"MDQ6VXNlcjY2NDI1Mw==","avatar_url":"https://avatars.githubusercontent.com/u/664253?v=4","gravatar_id":"","url":"https://api.github.com/users/Algunenano","html_url":"https://github.com/Algunenano","followers_url":"https://api.github.com/users/Algunenano/followers","following_url":"https://api.github.com/users/Algunenano/following{/other_user}","gists_url":"https://api.github.com/users/Algunenano/gists{/gist_id}","starred_url":"https://api.github.com/users/Algunenano/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Algunenano/subscriptions","organizations_url":"https://api.github.com/users/Algunenano/orgs","repos_url":"https://api.github.com/users/Algunenano/repos","events_url":"https://api.github.com/users/Algunenano/events{/privacy}","received_events_url":"https://api.github.com/users/Algunenano/received_events","type":"User","site_admin":false},"assignees":[{"login":"Algunenano","id":664253,"node_id":"MDQ6VXNlcjY2NDI1Mw==","avatar_url":"https://avatars.githubusercontent.com/u/664253?v=4","gravatar_id":"","url":"https://api.github.com/users/Algunenano","html_url":"https://github.com/Algunenano","followers_url":"https://api.github.com/users/Algunenano/followers","following_url":"https://api.github.com/users/Algunenano/following{/other_user}","gists_url":"https://api.github.com/users/Algunenano/gists{/gist_id}","starred_url":"https://api.github.com/users/Algunenano/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Algunenano/subscriptions","organizations_url":"https://api.github.com/users/Algunenano/orgs","repos_url":"https://api.github.com/users/Algunenano/repos","events_url":"https://api.github.com/users/Algunenano/events{/privacy}","received_events_url":"https://api.github.com/users/Algunenano/received_events","type":"User","site_admin":false}],"milestone":null,"comments":3,"created_at":"2022-01-27T13:46:44Z","updated_at":"2022-01-27T15:42:04Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"```sql\r\nCREATE TABLE IF NOT EXISTS a (a Int64) ENGINE=Memory;\r\nCREATE TABLE IF NOT EXISTS b (a Int64) ENGINE=Memory;\r\nCREATE MATERIALIZED VIEW IF NOT EXISTS mv1 TO b AS Select sleepEachRow(0.1) as a FROM a;\r\nCREATE MATERIALIZED VIEW IF NOT EXISTS mv2 TO b AS Select sleepEachRow(0.1) as a FROM a;\r\nCREATE MATERIALIZED VIEW IF NOT EXISTS mv3 TO b AS Select sleepEachRow(0.1) as a FROM a;\r\nCREATE MATERIALIZED VIEW IF NOT EXISTS mv4 TO b AS Select sleepEachRow(0.1) as a FROM a;\r\nCREATE MATERIALIZED VIEW IF NOT EXISTS mv5 TO b AS Select sleepEachRow(0.1) as a FROM a;\r\n\r\n-- INSERT USING VALUES\r\nINSERT INTO a VALUES(1);\r\nSYSTEM FLUSH LOGS;\r\n\r\nSELECT query_duration_ms >= 500\r\nFROM system.query_log\r\nWHERE\r\n      current_database = currentDatabase()\r\n  AND event_date >= yesterday()\r\n  AND query LIKE '-- INSERT USING VALUES%'\r\n  AND type = 'QueryFinish'\r\nLIMIT 1;\r\n\r\nWITH\r\n(\r\n    SELECT initial_query_id\r\n    FROM system.query_log\r\n    WHERE\r\n            current_database = currentDatabase()\r\n      AND event_date >= yesterday()\r\n      AND query LIKE '-- INSERT USING VALUES%'\r\n    LIMIT 1\r\n) AS q_id\r\nSELECT view_duration_ms >= 100\r\nFROM system.query_views_log\r\nWHERE initial_query_id = q_id;\r\n```\r\n\r\nThis should return all 1's for the views since they are taking at the very least 100 ms to execute. Nevertheless, for 21.11+ all view_duration_ms are 0.\r\n\r\n* 21.9.4.35: OK\r\n* 21.10.4.26: OK\r\n* 21.11.5.33: KO\r\n* 21.12.2.17: KO\r\n* 22.1.3.7: KO\r\n* master: KO","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34061/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34061/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34057","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34057/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34057/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34057/events","html_url":"https://github.com/ClickHouse/ClickHouse/pull/34057","id":1116117383,"node_id":"PR_kwDOA5dJV84xq7lS","number":34057,"title":"Less flaky test_inconsistent_parts_if_drop_while_replica_not_active","user":{"login":"Algunenano","id":664253,"node_id":"MDQ6VXNlcjY2NDI1Mw==","avatar_url":"https://avatars.githubusercontent.com/u/664253?v=4","gravatar_id":"","url":"https://api.github.com/users/Algunenano","html_url":"https://github.com/Algunenano","followers_url":"https://api.github.com/users/Algunenano/followers","following_url":"https://api.github.com/users/Algunenano/following{/other_user}","gists_url":"https://api.github.com/users/Algunenano/gists{/gist_id}","starred_url":"https://api.github.com/users/Algunenano/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Algunenano/subscriptions","organizations_url":"https://api.github.com/users/Algunenano/orgs","repos_url":"https://api.github.com/users/Algunenano/repos","events_url":"https://api.github.com/users/Algunenano/events{/privacy}","received_events_url":"https://api.github.com/users/Algunenano/received_events","type":"User","site_admin":false},"labels":[{"id":1876999755,"node_id":"MDU6TGFiZWwxODc2OTk5NzU1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/pr-not-for-changelog","name":"pr-not-for-changelog","color":"007700","default":false,"description":"This PR should not be mentioned in the changelog"}],"state":"open","locked":false,"assignee":{"login":"qoega","id":2159081,"node_id":"MDQ6VXNlcjIxNTkwODE=","avatar_url":"https://avatars.githubusercontent.com/u/2159081?v=4","gravatar_id":"","url":"https://api.github.com/users/qoega","html_url":"https://github.com/qoega","followers_url":"https://api.github.com/users/qoega/followers","following_url":"https://api.github.com/users/qoega/following{/other_user}","gists_url":"https://api.github.com/users/qoega/gists{/gist_id}","starred_url":"https://api.github.com/users/qoega/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/qoega/subscriptions","organizations_url":"https://api.github.com/users/qoega/orgs","repos_url":"https://api.github.com/users/qoega/repos","events_url":"https://api.github.com/users/qoega/events{/privacy}","received_events_url":"https://api.github.com/users/qoega/received_events","type":"User","site_admin":false},"assignees":[{"login":"qoega","id":2159081,"node_id":"MDQ6VXNlcjIxNTkwODE=","avatar_url":"https://avatars.githubusercontent.com/u/2159081?v=4","gravatar_id":"","url":"https://api.github.com/users/qoega","html_url":"https://github.com/qoega","followers_url":"https://api.github.com/users/qoega/followers","following_url":"https://api.github.com/users/qoega/following{/other_user}","gists_url":"https://api.github.com/users/qoega/gists{/gist_id}","starred_url":"https://api.github.com/users/qoega/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/qoega/subscriptions","organizations_url":"https://api.github.com/users/qoega/orgs","repos_url":"https://api.github.com/users/qoega/repos","events_url":"https://api.github.com/users/qoega/events{/privacy}","received_events_url":"https://api.github.com/users/qoega/received_events","type":"User","site_admin":false}],"milestone":null,"comments":2,"created_at":"2022-01-27T11:51:19Z","updated_at":"2022-01-27T20:09:15Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/pulls/34057","html_url":"https://github.com/ClickHouse/ClickHouse/pull/34057","diff_url":"https://github.com/ClickHouse/ClickHouse/pull/34057.diff","patch_url":"https://github.com/ClickHouse/ClickHouse/pull/34057.patch","merged_at":null},"body":"Changelog category (leave one):\r\n- Not for changelog (changelog entry is not required)\r\n\r\n\r\nChangelog entry (a user-readable short description of the changes that goes to CHANGELOG.md):\r\n...\r\n\r\n\r\n> Information about CI checks: https://clickhouse.tech/docs/en/development/continuous-integration/\r\n\r\nTry to fix the issues in the test when a merge happens before node1 is up. This could produce that node1 gets the 40 rows by cloning the new merged part but still has the other 2 in the queue until it discards them.\r\n\r\nAlso, wait until node2 has started sending any data before checking for the count.\r\n\r\nCloses https://github.com/ClickHouse/ClickHouse/issues/34053","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34057/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34057/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34056","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34056/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34056/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34056/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/34056","id":1116113278,"node_id":"I_kwDOA5dJV85Chol-","number":34056,"title":"Cannot use `*` inside expression in ALTER query","user":{"login":"alexey-milovidov","id":18581488,"node_id":"MDQ6VXNlcjE4NTgxNDg4","avatar_url":"https://avatars.githubusercontent.com/u/18581488?v=4","gravatar_id":"","url":"https://api.github.com/users/alexey-milovidov","html_url":"https://github.com/alexey-milovidov","followers_url":"https://api.github.com/users/alexey-milovidov/followers","following_url":"https://api.github.com/users/alexey-milovidov/following{/other_user}","gists_url":"https://api.github.com/users/alexey-milovidov/gists{/gist_id}","starred_url":"https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexey-milovidov/subscriptions","organizations_url":"https://api.github.com/users/alexey-milovidov/orgs","repos_url":"https://api.github.com/users/alexey-milovidov/repos","events_url":"https://api.github.com/users/alexey-milovidov/events{/privacy}","received_events_url":"https://api.github.com/users/alexey-milovidov/received_events","type":"User","site_admin":false},"labels":[{"id":386401507,"node_id":"MDU6TGFiZWwzODY0MDE1MDc=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/enhancement","name":"enhancement","color":"84b6eb","default":true,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2022-01-27T11:46:48Z","updated_at":"2022-01-27T16:11:55Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"```\r\nALTER TABLE test.hits\r\n    ADD COLUMN `all` String MATERIALIZED formatRow('TSV', *)\r\n\r\nQuery id: 3dacbf60-4a10-48e9-b48b-a8b9db6974ef\r\n\r\n\r\n0 rows in set. Elapsed: 0.017 sec. \r\n\r\nReceived exception from server (version 22.2.1):\r\nCode: 47. DB::Exception: Received from localhost:9000. DB::Exception: Unknown identifier: *; there are columns: 'TSV': While processing _CAST(formatRow('TSV', *) AS all_tmp_alter1720335579804109044, 'String') AS `all`: default expression and column type are incompatible.. (UNKNOWN_IDENTIFIER)\r\n```","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34056/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34056/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34055","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34055/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34055/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34055/events","html_url":"https://github.com/ClickHouse/ClickHouse/pull/34055","id":1116099872,"node_id":"PR_kwDOA5dJV84xq32X","number":34055,"title":"Add groupSortedArray() function","user":{"login":"palegre-tiny","id":96050375,"node_id":"U_kgDOBbmcxw","avatar_url":"https://avatars.githubusercontent.com/u/96050375?v=4","gravatar_id":"","url":"https://api.github.com/users/palegre-tiny","html_url":"https://github.com/palegre-tiny","followers_url":"https://api.github.com/users/palegre-tiny/followers","following_url":"https://api.github.com/users/palegre-tiny/following{/other_user}","gists_url":"https://api.github.com/users/palegre-tiny/gists{/gist_id}","starred_url":"https://api.github.com/users/palegre-tiny/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/palegre-tiny/subscriptions","organizations_url":"https://api.github.com/users/palegre-tiny/orgs","repos_url":"https://api.github.com/users/palegre-tiny/repos","events_url":"https://api.github.com/users/palegre-tiny/events{/privacy}","received_events_url":"https://api.github.com/users/palegre-tiny/received_events","type":"User","site_admin":false},"labels":[{"id":3627025164,"node_id":"LA_kwDOA5dJV87YMAMM","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/can%20be%20tested","name":"can be tested","color":"1d76db","default":false,"description":""}],"state":"open","locked":false,"assignee":{"login":"evillique","id":43110995,"node_id":"MDQ6VXNlcjQzMTEwOTk1","avatar_url":"https://avatars.githubusercontent.com/u/43110995?v=4","gravatar_id":"","url":"https://api.github.com/users/evillique","html_url":"https://github.com/evillique","followers_url":"https://api.github.com/users/evillique/followers","following_url":"https://api.github.com/users/evillique/following{/other_user}","gists_url":"https://api.github.com/users/evillique/gists{/gist_id}","starred_url":"https://api.github.com/users/evillique/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/evillique/subscriptions","organizations_url":"https://api.github.com/users/evillique/orgs","repos_url":"https://api.github.com/users/evillique/repos","events_url":"https://api.github.com/users/evillique/events{/privacy}","received_events_url":"https://api.github.com/users/evillique/received_events","type":"User","site_admin":false},"assignees":[{"login":"evillique","id":43110995,"node_id":"MDQ6VXNlcjQzMTEwOTk1","avatar_url":"https://avatars.githubusercontent.com/u/43110995?v=4","gravatar_id":"","url":"https://api.github.com/users/evillique","html_url":"https://github.com/evillique","followers_url":"https://api.github.com/users/evillique/followers","following_url":"https://api.github.com/users/evillique/following{/other_user}","gists_url":"https://api.github.com/users/evillique/gists{/gist_id}","starred_url":"https://api.github.com/users/evillique/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/evillique/subscriptions","organizations_url":"https://api.github.com/users/evillique/orgs","repos_url":"https://api.github.com/users/evillique/repos","events_url":"https://api.github.com/users/evillique/events{/privacy}","received_events_url":"https://api.github.com/users/evillique/received_events","type":"User","site_admin":false}],"milestone":null,"comments":4,"created_at":"2022-01-27T11:31:48Z","updated_at":"2022-01-27T18:46:08Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/pulls/34055","html_url":"https://github.com/ClickHouse/ClickHouse/pull/34055","diff_url":"https://github.com/ClickHouse/ClickHouse/pull/34055.diff","patch_url":"https://github.com/ClickHouse/ClickHouse/pull/34055.patch","merged_at":null},"body":"\r\nChangelog category (leave one):\r\n\r\nNew Feature\r\n\r\nChangelog entry (a user-readable short description of the changes that goes to CHANGELOG.md):\r\nNew aggregation function groupSortedArray to obtain an array of first N values.\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34055/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34055/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34053","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34053/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34053/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34053/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/34053","id":1116023579,"node_id":"I_kwDOA5dJV85ChSsb","number":34053,"title":"Flaky test: test_inconsistent_parts_if_drop_while_replica_not_active","user":{"login":"Algunenano","id":664253,"node_id":"MDQ6VXNlcjY2NDI1Mw==","avatar_url":"https://avatars.githubusercontent.com/u/664253?v=4","gravatar_id":"","url":"https://api.github.com/users/Algunenano","html_url":"https://github.com/Algunenano","followers_url":"https://api.github.com/users/Algunenano/followers","following_url":"https://api.github.com/users/Algunenano/following{/other_user}","gists_url":"https://api.github.com/users/Algunenano/gists{/gist_id}","starred_url":"https://api.github.com/users/Algunenano/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Algunenano/subscriptions","organizations_url":"https://api.github.com/users/Algunenano/orgs","repos_url":"https://api.github.com/users/Algunenano/repos","events_url":"https://api.github.com/users/Algunenano/events{/privacy}","received_events_url":"https://api.github.com/users/Algunenano/received_events","type":"User","site_admin":false},"labels":[{"id":1955634273,"node_id":"MDU6TGFiZWwxOTU1NjM0Mjcz","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/testing","name":"testing","color":"c9a224","default":false,"description":"Special issue with list of bugs found by CI"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2022-01-27T10:16:17Z","updated_at":"2022-01-27T11:27:27Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Looking at the runs of this test in master it seems to be having some issues:\r\n\r\n```\r\nSELECT\r\n  toDate(check_start_time) as date,\r\n  count() all_runs,\r\n  countIf(check_status != 'success' AND test_status not in ('OK', 'SKIPPED', '')) failures\r\nFROM `gh-data`.checks\r\nWHERE\r\n    check_start_time between now() - interval 60 day and now()\r\n    AND pull_request_number = 0\r\n    and test_name LIKE '%test_inconsistent_parts_if_drop_while_replica_not_active%'\r\nGROUP BY date\r\nHAVING failures > 0\r\nORDER BY date ASC\r\n```\r\n\r\ndate | all_runs | failures\r\n-- | -- | --\r\n2021-11-30 | 34 | 1\r\n2021-12-11 | 43 | 1\r\n2021-12-14 | 49 | 4\r\n2021-12-15 | 43 | 6\r\n2021-12-16 | 156 | 6\r\n2021-12-25 | 39 | 1\r\n2022-01-17 | 42 | 2\r\n2022-01-18 | 36 | 3\r\n2022-01-19 | 54 | 2\r\n2022-01-20 | 82 | 2\r\n2022-01-21 | 80 | 2\r\n2022-01-22 | 51 | 2\r\n2022-01-23 | 36 | 3\r\n2022-01-24 | 36 | 2\r\n2022-01-25 | 33 | 6\r\n2022-01-26 | 30 | 2\r\n\r\n\r\nIt's not a lot but the test seems flaky enough to bother in PRs like https://github.com/ClickHouse/ClickHouse/pull/33958, https://github.com/ClickHouse/ClickHouse/pull/33260 and many others. There are 64 PRs with a failure in that test, and 17 where it has failed 2 or more times.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34053/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34053/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34046","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34046/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34046/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34046/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/34046","id":1115683245,"node_id":"I_kwDOA5dJV85Cf_mt","number":34046,"title":"Is it possible to convert json string to map type","user":{"login":"jasgok","id":5706445,"node_id":"MDQ6VXNlcjU3MDY0NDU=","avatar_url":"https://avatars.githubusercontent.com/u/5706445?v=4","gravatar_id":"","url":"https://api.github.com/users/jasgok","html_url":"https://github.com/jasgok","followers_url":"https://api.github.com/users/jasgok/followers","following_url":"https://api.github.com/users/jasgok/following{/other_user}","gists_url":"https://api.github.com/users/jasgok/gists{/gist_id}","starred_url":"https://api.github.com/users/jasgok/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jasgok/subscriptions","organizations_url":"https://api.github.com/users/jasgok/orgs","repos_url":"https://api.github.com/users/jasgok/repos","events_url":"https://api.github.com/users/jasgok/events{/privacy}","received_events_url":"https://api.github.com/users/jasgok/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-01-27T01:59:00Z","updated_at":"2022-01-27T01:59:27Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"I use Map type to store metric like `{\"new_user_count\": 10, \"revenue\": 100}` ,\r\ndata is dump from amazon redshift Super type (dictionary)，and will dump as json string.\r\nbut it's tricky to convert json string to Map, like this :\r\n\r\n```sql\r\nselect \r\n  col1\r\n  , col2\r\n  , JSONExtractKeysAndValues(metric, 'UInt64') as t1\r\n  , cast((arrayMap(x->x.1, t1), arrayMap(x->x.2, t1)), 'Map(String, UInt64)') as metric2\r\nfrom table_name\r\n```\r\n\r\nIs it possible to convert json string to map type\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34046/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34046/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34044","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34044/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34044/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34044/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/34044","id":1115633621,"node_id":"I_kwDOA5dJV85CfzfV","number":34044,"title":"Windowed Materialized View using hop does not create overlapping windows.","user":{"login":"RossRothenstine","id":1435260,"node_id":"MDQ6VXNlcjE0MzUyNjA=","avatar_url":"https://avatars.githubusercontent.com/u/1435260?v=4","gravatar_id":"","url":"https://api.github.com/users/RossRothenstine","html_url":"https://github.com/RossRothenstine","followers_url":"https://api.github.com/users/RossRothenstine/followers","following_url":"https://api.github.com/users/RossRothenstine/following{/other_user}","gists_url":"https://api.github.com/users/RossRothenstine/gists{/gist_id}","starred_url":"https://api.github.com/users/RossRothenstine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/RossRothenstine/subscriptions","organizations_url":"https://api.github.com/users/RossRothenstine/orgs","repos_url":"https://api.github.com/users/RossRothenstine/repos","events_url":"https://api.github.com/users/RossRothenstine/events{/privacy}","received_events_url":"https://api.github.com/users/RossRothenstine/received_events","type":"User","site_admin":false},"labels":[{"id":1575085465,"node_id":"MDU6TGFiZWwxNTc1MDg1NDY1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/unexpected%20behaviour","name":"unexpected behaviour","color":"e088ca","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-01-27T00:24:45Z","updated_at":"2022-01-27T00:25:10Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Hello.\r\n\r\nGiven the following schema, I would expect a Materialized View with hop defined to \"hop\" the \"window interval\" every \"hop interval\". Presently it seems to just hop the window interval instead of hopping the hop interval. \r\n\r\nYou will see from my data below that from my windowed view, I am seeing only window_interval aligned results in the destination, and no results of hopping. It looks suspiciously like a tumble instead of a hop. \r\n\r\nGiven the time period of 00:16 to 00:18, with a window interval of 60 seconds, and a hop interval of 10s, am I correct to assume the proper entries would contain records for [00:16:00, 00:17:00], [00:16:10, 00:17:10], [00:16:20, 00:17:20], etc.\r\n\r\n```sql\r\n:) SELECT version()\r\n\r\nSELECT version()\r\n\r\nQuery id: f474ec7a-af51-4980-b5b9-55cd68c05224\r\n\r\n┌─version()─┐\r\n│ 22.1.3.7  │\r\n└───────────┘\r\n\r\n1 rows in set. Elapsed: 0.004 sec.\r\n\r\nCREATE TABLE hop_data(\r\n    timestamp Timestamp,\r\n    val int\r\n) Engine = TinyLog\r\n\r\nCREATE TABLE hop_test(\r\n    hop_start DateTime,\r\n    hop_end DateTime,\r\n    sum_val int\r\n) Engine = TinyLog\r\n\r\nCREATE WINDOW VIEW hop_test_wv\r\nTO hop_test\r\nAS\r\nSELECT \r\n    hopStart(w_id) AS hop_start,\r\n    hopEnd(w_id) AS hop_end,\r\n    SUM(val) AS sum_val\r\nFROM\r\n    hop_data\r\nGROUP BY hop(timestamp, INTERVAL 10 SECOND, INTERVAL 60 SECOND) AS w_id\r\nSETTINGS allow_experimental_window_view = 1\r\n\r\n-- Insert a few data points.\r\n INSERT INTO hop_data VALUES (now(), 1);\r\n \r\n :) SELECT * FROM hop_data;\r\n\r\nSELECT *\r\nFROM hop_data\r\n\r\nQuery id: e03f25fb-9b78-4f39-9cc2-81894ec74f7d\r\n\r\n┌───────────timestamp─┬─val─┐\r\n│ 2022-01-27 00:16:16 │   1 │\r\n│ 2022-01-27 00:16:21 │   1 │\r\n│ 2022-01-27 00:16:22 │   1 │\r\n│ 2022-01-27 00:16:25 │   1 │\r\n│ 2022-01-27 00:16:26 │   1 │\r\n│ 2022-01-27 00:16:28 │   1 │\r\n│ 2022-01-27 00:16:30 │   1 │\r\n│ 2022-01-27 00:16:31 │   1 │\r\n│ 2022-01-27 00:16:31 │   1 │\r\n│ 2022-01-27 00:17:11 │   1 │\r\n│ 2022-01-27 00:17:11 │   1 │\r\n└─────────────────────┴─────┘\r\n\r\n11 rows in set. Elapsed: 0.006 sec.\r\n\r\n:) SELECT * FROM hop_test;\r\n\r\nSELECT *\r\nFROM hop_test\r\n\r\nQuery id: e7d8c3a8-c467-419e-8d01-3706dff1d2e1\r\n\r\n┌───────────hop_start─┬─────────────hop_end─┬─sum_val─┐\r\n│ 2022-01-27 00:16:00 │ 2022-01-27 00:17:00 │       9 │\r\n│ 2022-01-27 00:17:00 │ 2022-01-27 00:18:00 │       2 │\r\n└─────────────────────┴─────────────────────┴─────────┘\r\n```","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34044/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34044/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34038","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34038/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34038/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34038/events","html_url":"https://github.com/ClickHouse/ClickHouse/pull/34038","id":1115397288,"node_id":"PR_kwDOA5dJV84xoomt","number":34038,"title":"Backport #33988 to 22.1: Fix clickhouse server start when replicated access storage depend on keeper","user":{"login":"robot-clickhouse","id":41385210,"node_id":"MDQ6VXNlcjQxMzg1MjEw","avatar_url":"https://avatars.githubusercontent.com/u/41385210?v=4","gravatar_id":"","url":"https://api.github.com/users/robot-clickhouse","html_url":"https://github.com/robot-clickhouse","followers_url":"https://api.github.com/users/robot-clickhouse/followers","following_url":"https://api.github.com/users/robot-clickhouse/following{/other_user}","gists_url":"https://api.github.com/users/robot-clickhouse/gists{/gist_id}","starred_url":"https://api.github.com/users/robot-clickhouse/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/robot-clickhouse/subscriptions","organizations_url":"https://api.github.com/users/robot-clickhouse/orgs","repos_url":"https://api.github.com/users/robot-clickhouse/repos","events_url":"https://api.github.com/users/robot-clickhouse/events{/privacy}","received_events_url":"https://api.github.com/users/robot-clickhouse/received_events","type":"User","site_admin":false},"labels":[{"id":1316518062,"node_id":"MDU6TGFiZWwxMzE2NTE4MDYy","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/pr-backport","name":"pr-backport","color":"5fadcc","default":false,"description":"Changes, backported to release branch. Do not use manually - automated use only!"}],"state":"open","locked":false,"assignee":{"login":"alesapin","id":3684697,"node_id":"MDQ6VXNlcjM2ODQ2OTc=","avatar_url":"https://avatars.githubusercontent.com/u/3684697?v=4","gravatar_id":"","url":"https://api.github.com/users/alesapin","html_url":"https://github.com/alesapin","followers_url":"https://api.github.com/users/alesapin/followers","following_url":"https://api.github.com/users/alesapin/following{/other_user}","gists_url":"https://api.github.com/users/alesapin/gists{/gist_id}","starred_url":"https://api.github.com/users/alesapin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alesapin/subscriptions","organizations_url":"https://api.github.com/users/alesapin/orgs","repos_url":"https://api.github.com/users/alesapin/repos","events_url":"https://api.github.com/users/alesapin/events{/privacy}","received_events_url":"https://api.github.com/users/alesapin/received_events","type":"User","site_admin":false},"assignees":[{"login":"alesapin","id":3684697,"node_id":"MDQ6VXNlcjM2ODQ2OTc=","avatar_url":"https://avatars.githubusercontent.com/u/3684697?v=4","gravatar_id":"","url":"https://api.github.com/users/alesapin","html_url":"https://github.com/alesapin","followers_url":"https://api.github.com/users/alesapin/followers","following_url":"https://api.github.com/users/alesapin/following{/other_user}","gists_url":"https://api.github.com/users/alesapin/gists{/gist_id}","starred_url":"https://api.github.com/users/alesapin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alesapin/subscriptions","organizations_url":"https://api.github.com/users/alesapin/orgs","repos_url":"https://api.github.com/users/alesapin/repos","events_url":"https://api.github.com/users/alesapin/events{/privacy}","received_events_url":"https://api.github.com/users/alesapin/received_events","type":"User","site_admin":false}],"milestone":null,"comments":0,"created_at":"2022-01-26T19:19:50Z","updated_at":"2022-01-26T19:19:55Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/pulls/34038","html_url":"https://github.com/ClickHouse/ClickHouse/pull/34038","diff_url":"https://github.com/ClickHouse/ClickHouse/pull/34038.diff","patch_url":"https://github.com/ClickHouse/ClickHouse/pull/34038.patch","merged_at":null},"body":"Original pull-request #33988\nCherry-pick pull-request #34029\n\nThis pull-request is a last step of an automated backporting.\nTreat it as a standard pull-request: look at the checks and resolve conflicts.\nMerge it only if you intend to backport changes to the target branch, otherwise just close it.\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34038/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34038/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34037","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34037/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34037/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34037/events","html_url":"https://github.com/ClickHouse/ClickHouse/pull/34037","id":1115394616,"node_id":"PR_kwDOA5dJV84xooCl","number":34037,"title":"Added support for CREATE TEMPORARY FUNCTION","user":{"login":"kitaisreal","id":22458333,"node_id":"MDQ6VXNlcjIyNDU4MzMz","avatar_url":"https://avatars.githubusercontent.com/u/22458333?v=4","gravatar_id":"","url":"https://api.github.com/users/kitaisreal","html_url":"https://github.com/kitaisreal","followers_url":"https://api.github.com/users/kitaisreal/followers","following_url":"https://api.github.com/users/kitaisreal/following{/other_user}","gists_url":"https://api.github.com/users/kitaisreal/gists{/gist_id}","starred_url":"https://api.github.com/users/kitaisreal/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kitaisreal/subscriptions","organizations_url":"https://api.github.com/users/kitaisreal/orgs","repos_url":"https://api.github.com/users/kitaisreal/repos","events_url":"https://api.github.com/users/kitaisreal/events{/privacy}","received_events_url":"https://api.github.com/users/kitaisreal/received_events","type":"User","site_admin":false},"labels":[{"id":1304141686,"node_id":"MDU6TGFiZWwxMzA0MTQxNjg2","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/pr-improvement","name":"pr-improvement","color":"007700","default":false,"description":"Pull request with some product improvements"}],"state":"open","locked":false,"assignee":{"login":"KochetovNicolai","id":4092911,"node_id":"MDQ6VXNlcjQwOTI5MTE=","avatar_url":"https://avatars.githubusercontent.com/u/4092911?v=4","gravatar_id":"","url":"https://api.github.com/users/KochetovNicolai","html_url":"https://github.com/KochetovNicolai","followers_url":"https://api.github.com/users/KochetovNicolai/followers","following_url":"https://api.github.com/users/KochetovNicolai/following{/other_user}","gists_url":"https://api.github.com/users/KochetovNicolai/gists{/gist_id}","starred_url":"https://api.github.com/users/KochetovNicolai/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/KochetovNicolai/subscriptions","organizations_url":"https://api.github.com/users/KochetovNicolai/orgs","repos_url":"https://api.github.com/users/KochetovNicolai/repos","events_url":"https://api.github.com/users/KochetovNicolai/events{/privacy}","received_events_url":"https://api.github.com/users/KochetovNicolai/received_events","type":"User","site_admin":false},"assignees":[{"login":"KochetovNicolai","id":4092911,"node_id":"MDQ6VXNlcjQwOTI5MTE=","avatar_url":"https://avatars.githubusercontent.com/u/4092911?v=4","gravatar_id":"","url":"https://api.github.com/users/KochetovNicolai","html_url":"https://github.com/KochetovNicolai","followers_url":"https://api.github.com/users/KochetovNicolai/followers","following_url":"https://api.github.com/users/KochetovNicolai/following{/other_user}","gists_url":"https://api.github.com/users/KochetovNicolai/gists{/gist_id}","starred_url":"https://api.github.com/users/KochetovNicolai/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/KochetovNicolai/subscriptions","organizations_url":"https://api.github.com/users/KochetovNicolai/orgs","repos_url":"https://api.github.com/users/KochetovNicolai/repos","events_url":"https://api.github.com/users/KochetovNicolai/events{/privacy}","received_events_url":"https://api.github.com/users/KochetovNicolai/received_events","type":"User","site_admin":false}],"milestone":null,"comments":1,"created_at":"2022-01-26T19:16:36Z","updated_at":"2022-01-27T10:07:37Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/pulls/34037","html_url":"https://github.com/ClickHouse/ClickHouse/pull/34037","diff_url":"https://github.com/ClickHouse/ClickHouse/pull/34037.diff","patch_url":"https://github.com/ClickHouse/ClickHouse/pull/34037.patch","merged_at":null},"body":"Changelog category (leave one):\r\n- Improvement\r\n\r\n\r\nChangelog entry (a user-readable short description of the changes that goes to CHANGELOG.md):\r\nAdded support for `CREATE TEMPORARY FUNCTION`.\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34037/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34037/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34036","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34036/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34036/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34036/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/34036","id":1115363181,"node_id":"I_kwDOA5dJV85Cexdt","number":34036,"title":"MaterializedPostgres stuck if one of the table doesn't contain primary key, crash when attach/detach table","user":{"login":"kokizzu","id":1061610,"node_id":"MDQ6VXNlcjEwNjE2MTA=","avatar_url":"https://avatars.githubusercontent.com/u/1061610?v=4","gravatar_id":"","url":"https://api.github.com/users/kokizzu","html_url":"https://github.com/kokizzu","followers_url":"https://api.github.com/users/kokizzu/followers","following_url":"https://api.github.com/users/kokizzu/following{/other_user}","gists_url":"https://api.github.com/users/kokizzu/gists{/gist_id}","starred_url":"https://api.github.com/users/kokizzu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kokizzu/subscriptions","organizations_url":"https://api.github.com/users/kokizzu/orgs","repos_url":"https://api.github.com/users/kokizzu/repos","events_url":"https://api.github.com/users/kokizzu/events{/privacy}","received_events_url":"https://api.github.com/users/kokizzu/received_events","type":"User","site_admin":false},"labels":[{"id":1234601830,"node_id":"MDU6TGFiZWwxMjM0NjAxODMw","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/crash","name":"crash","color":"082b68","default":false,"description":"Crash / segfault / abort"},{"id":2673090580,"node_id":"MDU6TGFiZWwyNjczMDkwNTgw","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/bug%20experimental","name":"bug experimental","color":"E99695","default":false,"description":"Bug in the feature that should not be used in production"}],"state":"open","locked":false,"assignee":{"login":"kssenii","id":54203879,"node_id":"MDQ6VXNlcjU0MjAzODc5","avatar_url":"https://avatars.githubusercontent.com/u/54203879?v=4","gravatar_id":"","url":"https://api.github.com/users/kssenii","html_url":"https://github.com/kssenii","followers_url":"https://api.github.com/users/kssenii/followers","following_url":"https://api.github.com/users/kssenii/following{/other_user}","gists_url":"https://api.github.com/users/kssenii/gists{/gist_id}","starred_url":"https://api.github.com/users/kssenii/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kssenii/subscriptions","organizations_url":"https://api.github.com/users/kssenii/orgs","repos_url":"https://api.github.com/users/kssenii/repos","events_url":"https://api.github.com/users/kssenii/events{/privacy}","received_events_url":"https://api.github.com/users/kssenii/received_events","type":"User","site_admin":false},"assignees":[{"login":"kssenii","id":54203879,"node_id":"MDQ6VXNlcjU0MjAzODc5","avatar_url":"https://avatars.githubusercontent.com/u/54203879?v=4","gravatar_id":"","url":"https://api.github.com/users/kssenii","html_url":"https://github.com/kssenii","followers_url":"https://api.github.com/users/kssenii/followers","following_url":"https://api.github.com/users/kssenii/following{/other_user}","gists_url":"https://api.github.com/users/kssenii/gists{/gist_id}","starred_url":"https://api.github.com/users/kssenii/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kssenii/subscriptions","organizations_url":"https://api.github.com/users/kssenii/orgs","repos_url":"https://api.github.com/users/kssenii/repos","events_url":"https://api.github.com/users/kssenii/events{/privacy}","received_events_url":"https://api.github.com/users/kssenii/received_events","type":"User","site_admin":false}],"milestone":null,"comments":13,"created_at":"2022-01-26T18:43:43Z","updated_at":"2022-01-27T19:31:21Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"> You have to provide the following information whenever possible.\r\n\r\n**Describe what's wrong**\r\n```sql\r\nCREATE DATABASE IF NOT EXISTS db1\r\nENGINE = MaterializedPostgreSQL('x-x-db-production.x.us-west-2.rds.amazonaws.com', 'x', 'rw_user', 'xxx');\r\nSHOW TABLES FROM db1;\r\n```\r\nthe database source is RDS, after executing those command the clickhouse-client suddenly closed.\r\n\r\n**Does it reproduce on recent release?**\r\n\r\nyes, this is the most recent release\r\n```\r\nClickHouse client version 22.1.3.7 (official build).\r\nConnecting to localhost:9000 as user default.\r\nConnected to ClickHouse server version 22.1.3 revision 54455.\r\n```\r\n\r\n**Enable crash reporting**\r\n\r\n> If possible, change \"enabled\" to true in \"send_crash_reports\" section in `config.xml`:\r\n\r\nok done\r\n\r\n**How to reproduce**\r\n1. create materializepostgres database from rds\r\n2. after few seconds it shows:\r\n```shell\r\nConnecting to localhost:9000 as user default.\r\nException on client:\r\nCode: 210. DB::NetException: Connection refused (localhost:9000). (NETWORK_ERROR)\r\n```\r\n3. the server logs shows:\r\n```\r\n2022.01.26 18:31:54.861183 [ 19100 ] {} <Fatal> Application: Child process was terminated by signal 9 (KILL). If it is not done by 'forcestop' command or manually, the possible cause is OOM Killer (see 'dmesg' and look at the '/var/log/kern.log' for the details).\r\n2022.01.26 18:32:26.943725 [ 23856 ] {} <Warning> Application: Calculated checksum of the binary: 38FD0E3944230CBD1E0C1028A9D68C83. There is no information about the reference checksum.\r\n2022.01.26 18:32:29.034545 [ 24010 ] {} <Warning> PostgreSQLReplicationHandler: Publication solo_prod_ch_publication already exists and tables list is empty. Assuming publication is correct.\r\n2022.01.26 18:32:29.066844 [ 24010 ] {} <Error> void DB::PostgreSQLReplicationHandler::startSynchronization(bool): Code: 60. DB::Exception: Table solo_prod.user_push_tokens doesn't exist: while loading table solofunds.user_push_tokens. (UNKNOWN_TABLE), Stack trace (when copying this message, always include the lines below):\r\n\r\n0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0xa82d07a in /usr/bin/clickhouse\r\n1. DB::Exception::Exception<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&&) @ 0xa89b823 in /usr/bin/clickhouse\r\n2. void std::__1::__optional_storage_base<DB::Exception, false>::__construct<int const&, char const (&) [23], std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(int const&, char const (&) [23], std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&&) @ 0x1352ac0f in /usr/bin/clickhouse\r\n3. DB::DatabaseCatalog::getTableImpl(DB::StorageID const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Exception>*) const @ 0x13519082 in /usr/bin/clickhouse\r\n4. DB::DatabaseCatalog::getTable(DB::StorageID const&, std::__1::shared_ptr<DB::Context const>) const @ 0x1352126b in /usr/bin/clickhouse\r\n5. DB::StorageMaterializedPostgreSQL::getNested() const @ 0x132f2c25 in /usr/bin/clickhouse\r\n6. DB::PostgreSQLReplicationHandler::startSynchronization(bool) @ 0x132d640e in /usr/bin/clickhouse\r\n7. DB::DatabaseMaterializedPostgreSQL::startSynchronization() @ 0x132c435f in /usr/bin/clickhouse\r\n8. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x12f8470e in /usr/bin/clickhouse\r\n9. DB::BackgroundSchedulePool::threadFunction() @ 0x12f870a7 in /usr/bin/clickhouse\r\n10. ? @ 0x12f88170 in /usr/bin/clickhouse\r\n11. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0xa86f4b7 in /usr/bin/clickhouse\r\n12. ? @ 0xa872ebd in /usr/bin/clickhouse\r\n13. ? @ 0x7f10e173c609 in ?\r\n14. __clone @ 0x7f10e1663293 in ?\r\n(version 22.1.3.7 (official build))\r\n```\r\n4. open new clickchouse-client, it would stuck before the prompt\r\n5. open another clickhouse-client, then both now shows the query prompt\r\n\r\n* Which ClickHouse server version to use:  `22.1.3.7`\r\n* Non-default settings, if any\r\n```\r\n<allow_experimental_database_materialized_postgresql>1</allow_experimental_database_materialized_postgresql>\r\n```\r\n* `CREATE TABLE` statements for all tables involved\r\n```sql\r\nCREATE DATABASE IF NOT EXISTS db1\r\nENGINE = MaterializedPostgreSQL('x-x-db-production.x.us-west-2.rds.amazonaws.com', 'x', 'rw_user', 'xxx');\r\n```\r\n* Queries to run that lead to unexpected result\r\nthat create table, after crash it would only shows 5-10 tables (first crash only show 10, i drop table and create again, it only show 5 tables):\r\n```\r\n5 rows in set. Elapsed: 0.002 sec.\r\n```\r\n\r\n**Expected behavior**\r\n\r\n1. not crashing\r\n2. if crash it would resume\r\n3. if table has no replica identity it should keep going with other tables\r\n\r\n> A clear and concise description of what you expected to happen.\r\n\r\n**Error message and/or stacktrace**\r\n\r\n> If applicable, add screenshots to help explain your problem.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34036/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34036/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34035","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34035/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34035/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34035/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/34035","id":1115349789,"node_id":"I_kwDOA5dJV85CeuMd","number":34035,"title":"Re-implement `select count()` optimization.","user":{"login":"KochetovNicolai","id":4092911,"node_id":"MDQ6VXNlcjQwOTI5MTE=","avatar_url":"https://avatars.githubusercontent.com/u/4092911?v=4","gravatar_id":"","url":"https://api.github.com/users/KochetovNicolai","html_url":"https://github.com/KochetovNicolai","followers_url":"https://api.github.com/users/KochetovNicolai/followers","following_url":"https://api.github.com/users/KochetovNicolai/following{/other_user}","gists_url":"https://api.github.com/users/KochetovNicolai/gists{/gist_id}","starred_url":"https://api.github.com/users/KochetovNicolai/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/KochetovNicolai/subscriptions","organizations_url":"https://api.github.com/users/KochetovNicolai/orgs","repos_url":"https://api.github.com/users/KochetovNicolai/repos","events_url":"https://api.github.com/users/KochetovNicolai/events{/privacy}","received_events_url":"https://api.github.com/users/KochetovNicolai/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null}],"state":"open","locked":false,"assignee":{"login":"KochetovNicolai","id":4092911,"node_id":"MDQ6VXNlcjQwOTI5MTE=","avatar_url":"https://avatars.githubusercontent.com/u/4092911?v=4","gravatar_id":"","url":"https://api.github.com/users/KochetovNicolai","html_url":"https://github.com/KochetovNicolai","followers_url":"https://api.github.com/users/KochetovNicolai/followers","following_url":"https://api.github.com/users/KochetovNicolai/following{/other_user}","gists_url":"https://api.github.com/users/KochetovNicolai/gists{/gist_id}","starred_url":"https://api.github.com/users/KochetovNicolai/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/KochetovNicolai/subscriptions","organizations_url":"https://api.github.com/users/KochetovNicolai/orgs","repos_url":"https://api.github.com/users/KochetovNicolai/repos","events_url":"https://api.github.com/users/KochetovNicolai/events{/privacy}","received_events_url":"https://api.github.com/users/KochetovNicolai/received_events","type":"User","site_admin":false},"assignees":[{"login":"KochetovNicolai","id":4092911,"node_id":"MDQ6VXNlcjQwOTI5MTE=","avatar_url":"https://avatars.githubusercontent.com/u/4092911?v=4","gravatar_id":"","url":"https://api.github.com/users/KochetovNicolai","html_url":"https://github.com/KochetovNicolai","followers_url":"https://api.github.com/users/KochetovNicolai/followers","following_url":"https://api.github.com/users/KochetovNicolai/following{/other_user}","gists_url":"https://api.github.com/users/KochetovNicolai/gists{/gist_id}","starred_url":"https://api.github.com/users/KochetovNicolai/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/KochetovNicolai/subscriptions","organizations_url":"https://api.github.com/users/KochetovNicolai/orgs","repos_url":"https://api.github.com/users/KochetovNicolai/repos","events_url":"https://api.github.com/users/KochetovNicolai/events{/privacy}","received_events_url":"https://api.github.com/users/KochetovNicolai/received_events","type":"User","site_admin":false}],"milestone":null,"comments":1,"created_at":"2022-01-26T18:27:03Z","updated_at":"2022-01-27T09:23:07Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"Now, while running `select count() from merge_tree_table`, select would not read any data. This is a useful optimization implemented by @amosbird. It is implemented inside `InterpreterSelectQuery`:\r\nhttps://github.com/ClickHouse/ClickHouse/blob/6c71a7c40f1ea6816ab2b9ce42ba4290ff47cb83/src/Interpreters/InterpreterSelectQuery.cpp#L1757-L1822\r\n\r\nIf query is simple enough, we just ask storage directly then umber of rows it has, and in case of `MergeTree*` it's calculated from metainfo. This optimisation is limited however. E.g. it does not work for subqueries or views.\r\n\r\nWe can reimplement this optimization on query plan level. The plan is:\r\n1. Allow to read an empty set of columns from storage.\r\n2. Allow to specify an empty set of columns for `InterpreterSelectQuery` and, probably, `ASTSelectQuery`.\r\n3. In `ReadFromStorage` step, if there are no columns to read from storage, generate a `Chunk` with no columns and non-zero rows value.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34035/reactions","total_count":2,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34035/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34033","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34033/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34033/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34033/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/34033","id":1115305880,"node_id":"I_kwDOA5dJV85CejeY","number":34033,"title":"~CurrentlyExecuting() downcast of misaligned address","user":{"login":"Algunenano","id":664253,"node_id":"MDQ6VXNlcjY2NDI1Mw==","avatar_url":"https://avatars.githubusercontent.com/u/664253?v=4","gravatar_id":"","url":"https://api.github.com/users/Algunenano","html_url":"https://github.com/Algunenano","followers_url":"https://api.github.com/users/Algunenano/followers","following_url":"https://api.github.com/users/Algunenano/following{/other_user}","gists_url":"https://api.github.com/users/Algunenano/gists{/gist_id}","starred_url":"https://api.github.com/users/Algunenano/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Algunenano/subscriptions","organizations_url":"https://api.github.com/users/Algunenano/orgs","repos_url":"https://api.github.com/users/Algunenano/repos","events_url":"https://api.github.com/users/Algunenano/events{/privacy}","received_events_url":"https://api.github.com/users/Algunenano/received_events","type":"User","site_admin":false},"labels":[{"id":1955634273,"node_id":"MDU6TGFiZWwxOTU1NjM0Mjcz","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/testing","name":"testing","color":"c9a224","default":false,"description":"Special issue with list of bugs found by CI"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2022-01-26T17:41:17Z","updated_at":"2022-01-27T09:12:47Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"It appeared in https://github.com/ClickHouse/ClickHouse/pull/33958 CI but it doesn't seem related to the changes and I couldn't reproduce it locally by running these same tests.\r\n\r\nCI run: https://s3.amazonaws.com/clickhouse-test-reports/33958/a48b9ca349e01f9ae1b8b1abbefa1be987341d51/stateless_tests__ubsan__actions_.html\r\n\r\nStderr: https://s3.amazonaws.com/clickhouse-test-reports/33958/a48b9ca349e01f9ae1b8b1abbefa1be987341d51/stateless_tests__ubsan__actions_/stderr.log\r\n\r\nUBSan error message:\r\n```\r\n../contrib/libcxx/include/__tree:2543:22: runtime error: downcast of misaligned address 0x000000000055 for type 'std::__tree_node<std::__value_type<std::string, std::shared_ptr<DB::ReplicatedMergeTreeLogEntry>>, void *>', which requires 8 byte alignment\r\n0x000000000055: note: pointer points here\r\n<memory cannot be printed>\r\n    #0 0x209cdcb0 in std::__1::__tree_iterator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<DB::ReplicatedMergeTreeLogEntry> >, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<DB::ReplicatedMergeTreeLogEntry> >, void*>*, long> std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<DB::ReplicatedMergeTreeLogEntry> >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<DB::ReplicatedMergeTreeLogEntry> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<DB::ReplicatedMergeTreeLogEntry> > > >::__lower_bound<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<DB::ReplicatedMergeTreeLogEntry> >, void*>*, std::__1::__tree_end_node<std::__1::__tree_node_base<void*>*>*) obj-x86_64-linux-gnu/../contrib/libcxx/include/__tree:2543:22\r\n    #1 0x209cdb09 in std::__1::__tree_iterator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<DB::ReplicatedMergeTreeLogEntry> >, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<DB::ReplicatedMergeTreeLogEntry> >, void*>*, long> std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<DB::ReplicatedMergeTreeLogEntry> >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<DB::ReplicatedMergeTreeLogEntry> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<DB::ReplicatedMergeTreeLogEntry> > > >::find<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) obj-x86_64-linux-gnu/../contrib/libcxx/include/__tree:2466:20\r\n    #2 0x209b5df8 in unsigned long std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<DB::ReplicatedMergeTreeLogEntry> >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<DB::ReplicatedMergeTreeLogEntry> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<DB::ReplicatedMergeTreeLogEntry> > > >::__erase_unique<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) obj-x86_64-linux-gnu/../contrib/libcxx/include/__tree:2442:20\r\n    #3 0x209b5df8 in std::__1::map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<DB::ReplicatedMergeTreeLogEntry>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<DB::ReplicatedMergeTreeLogEntry> > > >::erase(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) obj-x86_64-linux-gnu/../contrib/libcxx/include/map:1306:25\r\n    #4 0x209b5df8 in DB::ReplicatedMergeTreeQueue::CurrentlyExecuting::~CurrentlyExecuting() obj-x86_64-linux-gnu/../src/Storages/MergeTree/ReplicatedMergeTreeQueue.cpp:1433:33\r\n    #5 0x209ce2fc in std::__1::default_delete<DB::ReplicatedMergeTreeQueue::CurrentlyExecuting>::operator()(DB::ReplicatedMergeTreeQueue::CurrentlyExecuting*) const obj-x86_64-linux-gnu/../contrib/libcxx/include/memory:1397:5\r\n    #6 0x209ce2fc in std::__1::unique_ptr<DB::ReplicatedMergeTreeQueue::CurrentlyExecuting, std::__1::default_delete<DB::ReplicatedMergeTreeQueue::CurrentlyExecuting> >::reset(DB::ReplicatedMergeTreeQueue::CurrentlyExecuting*) obj-x86_64-linux-gnu/../contrib/libcxx/include/memory:1658:7\r\n    #7 0x209ce2fc in std::__1::unique_ptr<DB::ReplicatedMergeTreeQueue::CurrentlyExecuting, std::__1::default_delete<DB::ReplicatedMergeTreeQueue::CurrentlyExecuting> >::~unique_ptr() obj-x86_64-linux-gnu/../contrib/libcxx/include/memory:1612:19\r\n    #8 0x209ce2fc in DB::ReplicatedMergeTreeQueue::SelectedEntry::~SelectedEntry() obj-x86_64-linux-gnu/../src/Storages/MergeTree/ReplicatedMergeTreeQueue.h:342:12\r\n    #9 0x209ce2fc in std::__1::allocator<DB::ReplicatedMergeTreeQueue::SelectedEntry>::destroy(DB::ReplicatedMergeTreeQueue::SelectedEntry*) obj-x86_64-linux-gnu/../contrib/libcxx/include/memory:891:15\r\n    #10 0x209ce2fc in void std::__1::allocator_traits<std::__1::allocator<DB::ReplicatedMergeTreeQueue::SelectedEntry> >::__destroy<DB::ReplicatedMergeTreeQueue::SelectedEntry>(std::__1::integral_constant<bool, true>, std::__1::allocator<DB::ReplicatedMergeTreeQueue::SelectedEntry>&, DB::ReplicatedMergeTreeQueue::SelectedEntry*) obj-x86_64-linux-gnu/../contrib/libcxx/include/__memory/allocator_traits.h:539:21\r\n    #11 0x209ce2fc in void std::__1::allocator_traits<std::__1::allocator<DB::ReplicatedMergeTreeQueue::SelectedEntry> >::destroy<DB::ReplicatedMergeTreeQueue::SelectedEntry>(std::__1::allocator<DB::ReplicatedMergeTreeQueue::SelectedEntry>&, DB::ReplicatedMergeTreeQueue::SelectedEntry*) obj-x86_64-linux-gnu/../contrib/libcxx/include/__memory/allocator_traits.h:487:14\r\n    #12 0x209ce2fc in std::__1::__shared_ptr_emplace<DB::ReplicatedMergeTreeQueue::SelectedEntry, std::__1::allocator<DB::ReplicatedMergeTreeQueue::SelectedEntry> >::__on_zero_shared() obj-x86_64-linux-gnu/../contrib/libcxx/include/memory:2611:9\r\n    #13 0xe6bdb75 in std::__1::__shared_count::__release_shared() obj-x86_64-linux-gnu/../contrib/libcxx/include/memory:2475:9\r\n    #14 0xe6bdaa4 in std::__1::__shared_weak_count::__release_shared() obj-x86_64-linux-gnu/../contrib/libcxx/include/memory:2517:27\r\n    #15 0x206e520d in DB::MergeFromLogEntryTask::~MergeFromLogEntryTask() obj-x86_64-linux-gnu/../src/Storages/MergeTree/MergeFromLogEntryTask.h:16:7\r\n    #16 0x2042976d in std::__1::default_delete<DB::MergeFromLogEntryTask>::operator()(DB::MergeFromLogEntryTask*) const obj-x86_64-linux-gnu/../contrib/libcxx/include/memory:1397:5\r\n    #17 0x2042976d in std::__1::__shared_ptr_pointer<DB::MergeFromLogEntryTask*, std::__1::shared_ptr<DB::MergeFromLogEntryTask>::__shared_ptr_default_delete<DB::MergeFromLogEntryTask, DB::MergeFromLogEntryTask>, std::__1::allocator<DB::MergeFromLogEntryTask> >::__on_zero_shared() obj-x86_64-linux-gnu/../contrib/libcxx/include/memory:2565:5\r\n    #18 0xe6bdb75 in std::__1::__shared_count::__release_shared() obj-x86_64-linux-gnu/../contrib/libcxx/include/memory:2475:9\r\n    #19 0xe6bdaa4 in std::__1::__shared_weak_count::__release_shared() obj-x86_64-linux-gnu/../contrib/libcxx/include/memory:2517:27\r\n    #20 0xe6bdb75 in std::__1::__shared_count::__release_shared() obj-x86_64-linux-gnu/../contrib/libcxx/include/memory:2475:9\r\n    #21 0xe6bda3d in std::__1::__shared_weak_count::__release_shared() obj-x86_64-linux-gnu/../contrib/libcxx/include/memory:2517:27\r\n    #22 0x20722e60 in DB::MergeTreeBackgroundExecutor<DB::MergeMutateRuntimeQueue>::routine(std::__1::shared_ptr<DB::TaskRuntimeData>)::'lambda'()::~() obj-x86_64-linux-gnu/../src/Storages/MergeTree/MergeTreeBackgroundExecutor.cpp:77:30\r\n    #23 0x20722e60 in DB::MergeTreeBackgroundExecutor<DB::MergeMutateRuntimeQueue>::routine(std::__1::shared_ptr<DB::TaskRuntimeData>) obj-x86_64-linux-gnu/../src/Storages/MergeTree/MergeTreeBackgroundExecutor.cpp:150:1\r\n    #24 0x207232b0 in DB::MergeTreeBackgroundExecutor<DB::MergeMutateRuntimeQueue>::threadFunction() obj-x86_64-linux-gnu/../src/Storages/MergeTree/MergeTreeBackgroundExecutor.cpp:176:13\r\n    #25 0xe779b98 in std::__1::__function::__policy_func<void ()>::operator()() const obj-x86_64-linux-gnu/../contrib/libcxx/include/functional:2221:16\r\n    #26 0xe779b98 in std::__1::function<void ()>::operator()() const obj-x86_64-linux-gnu/../contrib/libcxx/include/functional:2560:12\r\n    #27 0xe779b98 in ThreadPoolImpl<ThreadFromGlobalPool>::worker(std::__1::__list_iterator<ThreadFromGlobalPool, void*>) obj-x86_64-linux-gnu/../src/Common/ThreadPool.cpp:274:17\r\n    #28 0xe77d447 in void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()::operator()() const obj-x86_64-linux-gnu/../src/Common/ThreadPool.cpp:139:73\r\n    #29 0xe77d447 in decltype(std::__1::forward<void>(fp)()) std::__1::__invoke_constexpr<void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()&>(void&&) obj-x86_64-linux-gnu/../contrib/libcxx/include/type_traits:3682:1\r\n    #30 0xe77d447 in decltype(auto) std::__1::__apply_tuple_impl<void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()&, std::__1::tuple<>&>(void&&, std::__1::tuple<>&, std::__1::__tuple_indices<>) obj-x86_64-linux-gnu/../contrib/libcxx/include/tuple:1415:1\r\n    #31 0xe77d447 in decltype(auto) std::__1::apply<void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()&, std::__1::tuple<>&>(void&&, std::__1::tuple<>&) obj-x86_64-linux-gnu/../contrib/libcxx/include/tuple:1424:1\r\n    #32 0xe77d447 in ThreadFromGlobalPool::ThreadFromGlobalPool<void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>(void&&)::'lambda'()::operator()() obj-x86_64-linux-gnu/../src/Common/ThreadPool.h:188:13\r\n    #33 0xe778539 in std::__1::__function::__policy_func<void ()>::operator()() const obj-x86_64-linux-gnu/../contrib/libcxx/include/functional:2221:16\r\n    #34 0xe778539 in std::__1::function<void ()>::operator()() const obj-x86_64-linux-gnu/../contrib/libcxx/include/functional:2560:12\r\n    #35 0xe778539 in ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) obj-x86_64-linux-gnu/../src/Common/ThreadPool.cpp:274:17\r\n    #36 0xe77b0e1 in void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()::operator()() const obj-x86_64-linux-gnu/../src/Common/ThreadPool.cpp:139:73\r\n    #37 0xe77b0e1 in decltype(std::__1::forward<void>(fp)()) std::__1::__invoke<void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>(void&&) obj-x86_64-linux-gnu/../contrib/libcxx/include/type_traits:3676:1\r\n    #38 0xe77b0e1 in void std::__1::__thread_execute<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>(std::__1::tuple<void, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>&, std::__1::__tuple_indices<>) obj-x86_64-linux-gnu/../contrib/libcxx/include/thread:280:5\r\n    #39 0xe77b0e1 in void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()> >(void*) obj-x86_64-linux-gnu/../contrib/libcxx/include/thread:291:5\r\n    #40 0x7f3719247608 in start_thread (/lib/x86_64-linux-gnu/libpthread.so.0+0x9608)\r\n    #41 0x7f371916e292 in __clone (/lib/x86_64-linux-gnu/libc.so.6+0x122292)\r\n\r\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../contrib/libcxx/include/__tree:2543:22 in \r\n```\r\n\r\nCH error:\r\n```\r\n2022.01.25 12:28:17.363604 [ 242573 ] {} <Fatal> BaseDaemon: ########################################\r\n2022.01.25 12:28:17.363635 [ 242573 ] {} <Fatal> BaseDaemon: (version 22.2.1.3246, build id: CBDB113AD207E3F3) (from thread 390) (no query) Received signal Unknown signal (-3)\r\n2022.01.25 12:28:17.363646 [ 242573 ] {} <Fatal> BaseDaemon: Sanitizer trap.\r\n2022.01.25 12:28:17.363673 [ 242573 ] {} <Fatal> BaseDaemon: Stack trace: 0xe6d558a 0x1eb1af71 0xe695e56 0xe6a281f 0x209cdcb1 0x209cdb0a 0x209b5df9 0x209ce2fd 0xe6bdb76 0xe6bdaa5 0x206e520e 0x2042976e 0xe6bdb76 0xe6bdaa5 0xe6bdb76 0xe6bda3e 0x20722e61 0x207232b1 0xe779b99 0xe77d448 0xe77853a 0xe77b0e2 0x7f3719247609 0x7f371916e293\r\n2022.01.25 12:28:17.371653 [ 242573 ] {} <Fatal> BaseDaemon: 0.1. inlined from ./obj-x86_64-linux-gnu/../src/Common/StackTrace.cpp:305: StackTrace::tryCapture()\r\n2022.01.25 12:28:17.371671 [ 242573 ] {} <Fatal> BaseDaemon: 0. ../src/Common/StackTrace.cpp:266: StackTrace::StackTrace() @ 0xe6d558a in /usr/bin/clickhouse\r\n2022.01.25 12:28:17.389134 [ 242573 ] {} <Fatal> BaseDaemon: 1. ./obj-x86_64-linux-gnu/../base/daemon/BaseDaemon.cpp:392: sanitizerDeathCallback() @ 0x1eb1af71 in /usr/bin/clickhouse\r\n2022.01.25 12:28:18.243362 [ 242573 ] {} <Fatal> BaseDaemon: 2. __sanitizer::Die() @ 0xe695e56 in /usr/bin/clickhouse\r\n2022.01.25 12:28:19.104127 [ 242573 ] {} <Fatal> BaseDaemon: 3. ? @ 0xe6a281f in /usr/bin/clickhouse\r\n2022.01.25 12:28:19.193385 [ 242573 ] {} <Fatal> BaseDaemon: 4. ./obj-x86_64-linux-gnu/../contrib/libcxx/include/__tree:0: std::__1::__tree_iterator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<DB::ReplicatedMergeTreeLogEntry> >, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<DB::ReplicatedMergeTreeLogEntry> >, void*>*, long> std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<DB::ReplicatedMergeTreeLogEntry> >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<DB::ReplicatedMergeTreeLogEntry> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<DB::ReplicatedMergeTreeLogEntry> > > >::__lower_bound<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<DB::ReplicatedMergeTreeLogEntry> >, void*>*, std::__1::__tree_end_node<std::__1::__tree_node_base<void*>*>*) @ 0x209cdcb1 in /usr/bin/clickhouse\r\n2022.01.25 12:28:19.267029 [ 242573 ] {} <Fatal> BaseDaemon: 5.1. inlined from ./obj-x86_64-linux-gnu/../contrib/libcxx/include/__tree:861: std::__1::operator==(std::__1::__tree_iterator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<DB::ReplicatedMergeTreeLogEntry> >, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<DB::ReplicatedMergeTreeLogEntry> >, void*>*, long> const&, std::__1::__tree_iterator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<DB::ReplicatedMergeTreeLogEntry> >, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<DB::ReplicatedMergeTreeLogEntry> >, void*>*, long> const&)\r\n2022.01.25 12:28:19.267071 [ 242573 ] {} <Fatal> BaseDaemon: 5.2. inlined from ../contrib/libcxx/include/__tree:864: std::__1::operator!=(std::__1::__tree_iterator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<DB::ReplicatedMergeTreeLogEntry> >, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<DB::ReplicatedMergeTreeLogEntry> >, void*>*, long> const&, std::__1::__tree_iterator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<DB::ReplicatedMergeTreeLogEntry> >, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<DB::ReplicatedMergeTreeLogEntry> >, void*>*, long> const&)\r\n2022.01.25 12:28:19.267086 [ 242573 ] {} <Fatal> BaseDaemon: 5. ../contrib/libcxx/include/__tree:2467: std::__1::__tree_iterator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<DB::ReplicatedMergeTreeLogEntry> >, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<DB::ReplicatedMergeTreeLogEntry> >, void*>*, long> std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<DB::ReplicatedMergeTreeLogEntry> >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<DB::ReplicatedMergeTreeLogEntry> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<DB::ReplicatedMergeTreeLogEntry> > > >::find<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) @ 0x209cdb0a in /usr/bin/clickhouse\r\n2022.01.25 12:28:19.337758 [ 242573 ] {} <Fatal> BaseDaemon: 6.1. inlined from ./obj-x86_64-linux-gnu/../contrib/libcxx/include/memory:1243: std::__1::__compressed_pair_elem<std::__1::__tree_end_node<std::__1::__tree_node_base<void*>*>, 0, false>::__get()\r\n2022.01.25 12:28:19.337794 [ 242573 ] {} <Fatal> BaseDaemon: 6.2. inlined from ../contrib/libcxx/include/memory:1329: std::__1::__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void*>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<DB::ReplicatedMergeTreeLogEntry> >, void*> > >::first()\r\n2022.01.25 12:28:19.337814 [ 242573 ] {} <Fatal> BaseDaemon: 6.3. inlined from ../contrib/libcxx/include/__tree:1038: std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<DB::ReplicatedMergeTreeLogEntry> >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<DB::ReplicatedMergeTreeLogEntry> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<DB::ReplicatedMergeTreeLogEntry> > > >::__end_node()\r\n2022.01.25 12:28:19.337845 [ 242573 ] {} <Fatal> BaseDaemon: 6.4. inlined from ../contrib/libcxx/include/__tree:1117: std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<DB::ReplicatedMergeTreeLogEntry> >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<DB::ReplicatedMergeTreeLogEntry> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<DB::ReplicatedMergeTreeLogEntry> > > >::end()\r\n2022.01.25 12:28:19.337865 [ 242573 ] {} <Fatal> BaseDaemon: 6.5. inlined from ../contrib/libcxx/include/__tree:2443: unsigned long std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<DB::ReplicatedMergeTreeLogEntry> >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<DB::ReplicatedMergeTreeLogEntry> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<DB::ReplicatedMergeTreeLogEntry> > > >::__erase_unique<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)\r\n2022.01.25 12:28:19.337884 [ 242573 ] {} <Fatal> BaseDaemon: 6.6. inlined from ../contrib/libcxx/include/map:1306: std::__1::map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<DB::ReplicatedMergeTreeLogEntry>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<DB::ReplicatedMergeTreeLogEntry> > > >::erase(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)\r\n2022.01.25 12:28:19.337896 [ 242573 ] {} <Fatal> BaseDaemon: 6. ../src/Storages/MergeTree/ReplicatedMergeTreeQueue.cpp:1433: DB::ReplicatedMergeTreeQueue::CurrentlyExecuting::~CurrentlyExecuting() @ 0x209b5df9 in /usr/bin/clickhouse\r\n2022.01.25 12:28:19.423153 [ 242573 ] {} <Fatal> BaseDaemon: 7.1. inlined from ./obj-x86_64-linux-gnu/../contrib/libcxx/include/memory:1397: std::__1::default_delete<DB::ReplicatedMergeTreeQueue::CurrentlyExecuting>::operator()(DB::ReplicatedMergeTreeQueue::CurrentlyExecuting*) const\r\n2022.01.25 12:28:19.423204 [ 242573 ] {} <Fatal> BaseDaemon: 7.2. inlined from ../contrib/libcxx/include/memory:1658: std::__1::unique_ptr<DB::ReplicatedMergeTreeQueue::CurrentlyExecuting, std::__1::default_delete<DB::ReplicatedMergeTreeQueue::CurrentlyExecuting> >::reset(DB::ReplicatedMergeTreeQueue::CurrentlyExecuting*)\r\n2022.01.25 12:28:19.423246 [ 242573 ] {} <Fatal> BaseDaemon: 7.3. inlined from ../contrib/libcxx/include/memory:1612: ~unique_ptr\r\n2022.01.25 12:28:19.423265 [ 242573 ] {} <Fatal> BaseDaemon: 7.4. inlined from ../src/Storages/MergeTree/ReplicatedMergeTreeQueue.h:342: ~SelectedEntry\r\n2022.01.25 12:28:19.423293 [ 242573 ] {} <Fatal> BaseDaemon: 7.5. inlined from ../contrib/libcxx/include/memory:891: std::__1::allocator<DB::ReplicatedMergeTreeQueue::SelectedEntry>::destroy(DB::ReplicatedMergeTreeQueue::SelectedEntry*)\r\n2022.01.25 12:28:19.423309 [ 242573 ] {} <Fatal> BaseDaemon: 7.6. inlined from ../contrib/libcxx/include/__memory/allocator_traits.h:539: void std::__1::allocator_traits<std::__1::allocator<DB::ReplicatedMergeTreeQueue::SelectedEntry> >::__destroy<DB::ReplicatedMergeTreeQueue::SelectedEntry>(std::__1::integral_constant<bool, true>, std::__1::allocator<DB::ReplicatedMergeTreeQueue::SelectedEntry>&, DB::ReplicatedMergeTreeQueue::SelectedEntry*)\r\n2022.01.25 12:28:19.423326 [ 242573 ] {} <Fatal> BaseDaemon: 7.7. inlined from ../contrib/libcxx/include/__memory/allocator_traits.h:487: void std::__1::allocator_traits<std::__1::allocator<DB::ReplicatedMergeTreeQueue::SelectedEntry> >::destroy<DB::ReplicatedMergeTreeQueue::SelectedEntry>(std::__1::allocator<DB::ReplicatedMergeTreeQueue::SelectedEntry>&, DB::ReplicatedMergeTreeQueue::SelectedEntry*)\r\n2022.01.25 12:28:19.423345 [ 242573 ] {} <Fatal> BaseDaemon: 7. ../contrib/libcxx/include/memory:2611: std::__1::__shared_ptr_emplace<DB::ReplicatedMergeTreeQueue::SelectedEntry, std::__1::allocator<DB::ReplicatedMergeTreeQueue::SelectedEntry> >::__on_zero_shared() @ 0x209ce2fd in /usr/bin/clickhouse\r\n2022.01.25 12:28:19.437988 [ 242573 ] {} <Fatal> BaseDaemon: 8. ./obj-x86_64-linux-gnu/../contrib/libcxx/include/memory:2474: std::__1::__shared_count::__release_shared() @ 0xe6bdb76 in /usr/bin/clickhouse\r\n2022.01.25 12:28:19.450863 [ 242573 ] {} <Fatal> BaseDaemon: 9. ./obj-x86_64-linux-gnu/../contrib/libcxx/include/memory:2517: std::__1::__shared_weak_count::__release_shared() @ 0xe6bdaa5 in /usr/bin/clickhouse\r\n2022.01.25 12:28:19.469671 [ 242573 ] {} <Fatal> BaseDaemon: 10. ./obj-x86_64-linux-gnu/../src/Storages/MergeTree/MergeFromLogEntryTask.h:16: DB::MergeFromLogEntryTask::~MergeFromLogEntryTask() @ 0x206e520e in /usr/bin/clickhouse\r\n2022.01.25 12:28:19.682020 [ 242573 ] {} <Fatal> BaseDaemon: 11. ./obj-x86_64-linux-gnu/../contrib/libcxx/include/memory:2566: std::__1::__shared_ptr_pointer<DB::MergeFromLogEntryTask*, std::__1::shared_ptr<DB::MergeFromLogEntryTask>::__shared_ptr_default_delete<DB::MergeFromLogEntryTask, DB::MergeFromLogEntryTask>, std::__1::allocator<DB::MergeFromLogEntryTask> >::__on_zero_shared() @ 0x2042976e in /usr/bin/clickhouse\r\n2022.01.25 12:28:19.694965 [ 242573 ] {} <Fatal> BaseDaemon: 12. ./obj-x86_64-linux-gnu/../contrib/libcxx/include/memory:2474: std::__1::__shared_count::__release_shared() @ 0xe6bdb76 in /usr/bin/clickhouse\r\n2022.01.25 12:28:19.707715 [ 242573 ] {} <Fatal> BaseDaemon: 13. ./obj-x86_64-linux-gnu/../contrib/libcxx/include/memory:2517: std::__1::__shared_weak_count::__release_shared() @ 0xe6bdaa5 in /usr/bin/clickhouse\r\n2022.01.25 12:28:19.720459 [ 242573 ] {} <Fatal> BaseDaemon: 14. ./obj-x86_64-linux-gnu/../contrib/libcxx/include/memory:2474: std::__1::__shared_count::__release_shared() @ 0xe6bdb76 in /usr/bin/clickhouse\r\n2022.01.25 12:28:19.733931 [ 242573 ] {} <Fatal> BaseDaemon: 15. ./obj-x86_64-linux-gnu/../contrib/libcxx/include/memory:2517: std::__1::__shared_weak_count::__release_shared() @ 0xe6bda3e in /usr/bin/clickhouse\r\n2022.01.25 12:28:19.742836 [ 242573 ] {} <Fatal> BaseDaemon: 16.1. inlined from ./obj-x86_64-linux-gnu/../src/Storages/MergeTree/MergeTreeBackgroundExecutor.cpp:0: ~\r\n2022.01.25 12:28:19.742861 [ 242573 ] {} <Fatal> BaseDaemon: 16. ../src/Storages/MergeTree/MergeTreeBackgroundExecutor.cpp:150: DB::MergeTreeBackgroundExecutor<DB::MergeMutateRuntimeQueue>::routine(std::__1::shared_ptr<DB::TaskRuntimeData>) @ 0x20722e61 in /usr/bin/clickhouse\r\n2022.01.25 12:28:19.751757 [ 242573 ] {} <Fatal> BaseDaemon: 17. ./obj-x86_64-linux-gnu/../src/Storages/MergeTree/MergeTreeBackgroundExecutor.cpp:177: DB::MergeTreeBackgroundExecutor<DB::MergeMutateRuntimeQueue>::threadFunction() @ 0x207232b1 in /usr/bin/clickhouse\r\n2022.01.25 12:28:19.762377 [ 242573 ] {} <Fatal> BaseDaemon: 18.1. inlined from ./obj-x86_64-linux-gnu/../contrib/libcxx/include/functional:2533: std::__1::function<void ()>::operator=(std::nullptr_t)\r\n2022.01.25 12:28:19.762400 [ 242573 ] {} <Fatal> BaseDaemon: 18. ../src/Common/ThreadPool.cpp:277: ThreadPoolImpl<ThreadFromGlobalPool>::worker(std::__1::__list_iterator<ThreadFromGlobalPool, void*>) @ 0xe779b99 in /usr/bin/clickhouse\r\n2022.01.25 12:28:19.771177 [ 242573 ] {} <Fatal> BaseDaemon: 19. ./obj-x86_64-linux-gnu/../src/Common/ThreadPool.cpp:0: ThreadFromGlobalPool::ThreadFromGlobalPool<void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>(void&&, void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()&&...)::'lambda'()::operator()() @ 0xe77d448 in /usr/bin/clickhouse\r\n2022.01.25 12:28:19.780906 [ 242573 ] {} <Fatal> BaseDaemon: 20.1. inlined from ./obj-x86_64-linux-gnu/../contrib/libcxx/include/functional:2533: std::__1::function<void ()>::operator=(std::nullptr_t)\r\n2022.01.25 12:28:19.780924 [ 242573 ] {} <Fatal> BaseDaemon: 20. ../src/Common/ThreadPool.cpp:277: ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0xe77853a in /usr/bin/clickhouse\r\n2022.01.25 12:28:19.792294 [ 242573 ] {} <Fatal> BaseDaemon: 21. ./obj-x86_64-linux-gnu/../src/Common/ThreadPool.cpp:0: void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()> >(void*) @ 0xe77b0e2 in /usr/bin/clickhouse\r\n2022.01.25 12:28:19.792318 [ 242573 ] {} <Fatal> BaseDaemon: 22. ? @ 0x7f3719247609 in ?\r\n2022.01.25 12:28:19.792330 [ 242573 ] {} <Fatal> BaseDaemon: 23. clone @ 0x7f371916e293 in ?\r\n2022.01.25 12:28:20.048797 [ 242573 ] {} <Fatal> BaseDaemon: Calculated checksum of the binary: 0B6C984AB34C1DC6F2804859892DB93B. There is no information about the reference checksum.\r\n```\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34033/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34033/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34031","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34031/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34031/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34031/events","html_url":"https://github.com/ClickHouse/ClickHouse/pull/34031","id":1115214302,"node_id":"PR_kwDOA5dJV84xoFbT","number":34031,"title":"Proper hardlink tracking of remote meta files","user":{"login":"amosbird","id":5085485,"node_id":"MDQ6VXNlcjUwODU0ODU=","avatar_url":"https://avatars.githubusercontent.com/u/5085485?v=4","gravatar_id":"","url":"https://api.github.com/users/amosbird","html_url":"https://github.com/amosbird","followers_url":"https://api.github.com/users/amosbird/followers","following_url":"https://api.github.com/users/amosbird/following{/other_user}","gists_url":"https://api.github.com/users/amosbird/gists{/gist_id}","starred_url":"https://api.github.com/users/amosbird/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/amosbird/subscriptions","organizations_url":"https://api.github.com/users/amosbird/orgs","repos_url":"https://api.github.com/users/amosbird/repos","events_url":"https://api.github.com/users/amosbird/events{/privacy}","received_events_url":"https://api.github.com/users/amosbird/received_events","type":"User","site_admin":false},"labels":[{"id":1304141686,"node_id":"MDU6TGFiZWwxMzA0MTQxNjg2","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/pr-improvement","name":"pr-improvement","color":"007700","default":false,"description":"Pull request with some product improvements"}],"state":"open","locked":false,"assignee":{"login":"kssenii","id":54203879,"node_id":"MDQ6VXNlcjU0MjAzODc5","avatar_url":"https://avatars.githubusercontent.com/u/54203879?v=4","gravatar_id":"","url":"https://api.github.com/users/kssenii","html_url":"https://github.com/kssenii","followers_url":"https://api.github.com/users/kssenii/followers","following_url":"https://api.github.com/users/kssenii/following{/other_user}","gists_url":"https://api.github.com/users/kssenii/gists{/gist_id}","starred_url":"https://api.github.com/users/kssenii/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kssenii/subscriptions","organizations_url":"https://api.github.com/users/kssenii/orgs","repos_url":"https://api.github.com/users/kssenii/repos","events_url":"https://api.github.com/users/kssenii/events{/privacy}","received_events_url":"https://api.github.com/users/kssenii/received_events","type":"User","site_admin":false},"assignees":[{"login":"kssenii","id":54203879,"node_id":"MDQ6VXNlcjU0MjAzODc5","avatar_url":"https://avatars.githubusercontent.com/u/54203879?v=4","gravatar_id":"","url":"https://api.github.com/users/kssenii","html_url":"https://github.com/kssenii","followers_url":"https://api.github.com/users/kssenii/followers","following_url":"https://api.github.com/users/kssenii/following{/other_user}","gists_url":"https://api.github.com/users/kssenii/gists{/gist_id}","starred_url":"https://api.github.com/users/kssenii/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kssenii/subscriptions","organizations_url":"https://api.github.com/users/kssenii/orgs","repos_url":"https://api.github.com/users/kssenii/repos","events_url":"https://api.github.com/users/kssenii/events{/privacy}","received_events_url":"https://api.github.com/users/kssenii/received_events","type":"User","site_admin":false}],"milestone":null,"comments":2,"created_at":"2022-01-26T16:25:20Z","updated_at":"2022-01-28T10:06:45Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/pulls/34031","html_url":"https://github.com/ClickHouse/ClickHouse/pull/34031","diff_url":"https://github.com/ClickHouse/ClickHouse/pull/34031.diff","patch_url":"https://github.com/ClickHouse/ClickHouse/pull/34031.patch","merged_at":null},"body":"Changelog category (leave one):\r\n- Improvement\r\n\r\nChangelog entry (a user-readable short description of the changes that goes to CHANGELOG.md):\r\nProper hardlink tracking of remote meta files. Mark as improvement because it's not a 100% fix.\r\n\r\nCurrently we use a `ref_count` field in meta file to track hardlinks, which is not thread-safe. Consider the following:\r\n\r\nFile X has three hardlinks: X1, X2, X3. We will have meta.ref_count = 2 (counting from 0).\r\n\r\nThen Thread A tries to remove X1 and Thread B tries to remove X2 simultaneously.\r\n\r\nBoth Thread A and Thread B read meta.ref_count = 2.\r\n\r\nBoth Thread A and Thread B decrement the reference in memory, and write it back. Now we have meta.ref_count = 1.\r\n\r\nBoth Thread A and Thread B remove the file. Now we have File X with only one reference: X3. \r\n\r\nThread C tries to remove X3, however, it notices that (meta.ref_count == 1) > 0. It only removes the local file.\r\n\r\nNow we have a dangling remote object.\r\n\r\ncc @kssenii \r\n\r\n> Information about CI checks: https://clickhouse.tech/docs/en/development/continuous-integration/\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34031/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34031/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34030","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34030/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34030/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34030/events","html_url":"https://github.com/ClickHouse/ClickHouse/pull/34030","id":1115213873,"node_id":"PR_kwDOA5dJV84xoFVy","number":34030,"title":"Cherry pick #33988 to 21.11: Fix clickhouse server start when replicated access storage depend on keeper","user":{"login":"robot-clickhouse","id":41385210,"node_id":"MDQ6VXNlcjQxMzg1MjEw","avatar_url":"https://avatars.githubusercontent.com/u/41385210?v=4","gravatar_id":"","url":"https://api.github.com/users/robot-clickhouse","html_url":"https://github.com/robot-clickhouse","followers_url":"https://api.github.com/users/robot-clickhouse/followers","following_url":"https://api.github.com/users/robot-clickhouse/following{/other_user}","gists_url":"https://api.github.com/users/robot-clickhouse/gists{/gist_id}","starred_url":"https://api.github.com/users/robot-clickhouse/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/robot-clickhouse/subscriptions","organizations_url":"https://api.github.com/users/robot-clickhouse/orgs","repos_url":"https://api.github.com/users/robot-clickhouse/repos","events_url":"https://api.github.com/users/robot-clickhouse/events{/privacy}","received_events_url":"https://api.github.com/users/robot-clickhouse/received_events","type":"User","site_admin":false},"labels":[{"id":1211037461,"node_id":"MDU6TGFiZWwxMjExMDM3NDYx","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/do%20not%20test","name":"do not test","color":"e99695","default":false,"description":"disable testing on pull request"},{"id":1827370124,"node_id":"MDU6TGFiZWwxODI3MzcwMTI0","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/pr-cherrypick","name":"pr-cherrypick","color":"5fadcc","default":false,"description":"Cherry-pick of merge-commit before backporting. Do not use manually - automated use only!"}],"state":"open","locked":false,"assignee":{"login":"alesapin","id":3684697,"node_id":"MDQ6VXNlcjM2ODQ2OTc=","avatar_url":"https://avatars.githubusercontent.com/u/3684697?v=4","gravatar_id":"","url":"https://api.github.com/users/alesapin","html_url":"https://github.com/alesapin","followers_url":"https://api.github.com/users/alesapin/followers","following_url":"https://api.github.com/users/alesapin/following{/other_user}","gists_url":"https://api.github.com/users/alesapin/gists{/gist_id}","starred_url":"https://api.github.com/users/alesapin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alesapin/subscriptions","organizations_url":"https://api.github.com/users/alesapin/orgs","repos_url":"https://api.github.com/users/alesapin/repos","events_url":"https://api.github.com/users/alesapin/events{/privacy}","received_events_url":"https://api.github.com/users/alesapin/received_events","type":"User","site_admin":false},"assignees":[{"login":"alesapin","id":3684697,"node_id":"MDQ6VXNlcjM2ODQ2OTc=","avatar_url":"https://avatars.githubusercontent.com/u/3684697?v=4","gravatar_id":"","url":"https://api.github.com/users/alesapin","html_url":"https://github.com/alesapin","followers_url":"https://api.github.com/users/alesapin/followers","following_url":"https://api.github.com/users/alesapin/following{/other_user}","gists_url":"https://api.github.com/users/alesapin/gists{/gist_id}","starred_url":"https://api.github.com/users/alesapin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alesapin/subscriptions","organizations_url":"https://api.github.com/users/alesapin/orgs","repos_url":"https://api.github.com/users/alesapin/repos","events_url":"https://api.github.com/users/alesapin/events{/privacy}","received_events_url":"https://api.github.com/users/alesapin/received_events","type":"User","site_admin":false}],"milestone":null,"comments":0,"created_at":"2022-01-26T16:24:55Z","updated_at":"2022-01-26T16:25:01Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/pulls/34030","html_url":"https://github.com/ClickHouse/ClickHouse/pull/34030","diff_url":"https://github.com/ClickHouse/ClickHouse/pull/34030.diff","patch_url":"https://github.com/ClickHouse/ClickHouse/pull/34030.patch","merged_at":null},"body":"Original pull-request #33988\n\nThis pull-request is a first step of an automated backporting.\nIt contains changes like after calling a local command `git cherry-pick`.\nIf you intend to continue backporting this changes, then resolve all conflicts if any.\nOtherwise, if you do not want to backport them, then just close this pull-request.\n\nThe check results does not matter at this step - you can safely ignore them.\nAlso this pull-request will be merged automatically as it reaches the mergeable state, but you always can merge it manually.\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34030/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34030/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34028","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34028/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34028/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34028/events","html_url":"https://github.com/ClickHouse/ClickHouse/pull/34028","id":1115213389,"node_id":"PR_kwDOA5dJV84xoFPV","number":34028,"title":"Cherry pick #33988 to 21.12: Fix clickhouse server start when replicated access storage depend on keeper","user":{"login":"robot-clickhouse","id":41385210,"node_id":"MDQ6VXNlcjQxMzg1MjEw","avatar_url":"https://avatars.githubusercontent.com/u/41385210?v=4","gravatar_id":"","url":"https://api.github.com/users/robot-clickhouse","html_url":"https://github.com/robot-clickhouse","followers_url":"https://api.github.com/users/robot-clickhouse/followers","following_url":"https://api.github.com/users/robot-clickhouse/following{/other_user}","gists_url":"https://api.github.com/users/robot-clickhouse/gists{/gist_id}","starred_url":"https://api.github.com/users/robot-clickhouse/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/robot-clickhouse/subscriptions","organizations_url":"https://api.github.com/users/robot-clickhouse/orgs","repos_url":"https://api.github.com/users/robot-clickhouse/repos","events_url":"https://api.github.com/users/robot-clickhouse/events{/privacy}","received_events_url":"https://api.github.com/users/robot-clickhouse/received_events","type":"User","site_admin":false},"labels":[{"id":1211037461,"node_id":"MDU6TGFiZWwxMjExMDM3NDYx","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/do%20not%20test","name":"do not test","color":"e99695","default":false,"description":"disable testing on pull request"},{"id":1827370124,"node_id":"MDU6TGFiZWwxODI3MzcwMTI0","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/pr-cherrypick","name":"pr-cherrypick","color":"5fadcc","default":false,"description":"Cherry-pick of merge-commit before backporting. Do not use manually - automated use only!"}],"state":"open","locked":false,"assignee":{"login":"alesapin","id":3684697,"node_id":"MDQ6VXNlcjM2ODQ2OTc=","avatar_url":"https://avatars.githubusercontent.com/u/3684697?v=4","gravatar_id":"","url":"https://api.github.com/users/alesapin","html_url":"https://github.com/alesapin","followers_url":"https://api.github.com/users/alesapin/followers","following_url":"https://api.github.com/users/alesapin/following{/other_user}","gists_url":"https://api.github.com/users/alesapin/gists{/gist_id}","starred_url":"https://api.github.com/users/alesapin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alesapin/subscriptions","organizations_url":"https://api.github.com/users/alesapin/orgs","repos_url":"https://api.github.com/users/alesapin/repos","events_url":"https://api.github.com/users/alesapin/events{/privacy}","received_events_url":"https://api.github.com/users/alesapin/received_events","type":"User","site_admin":false},"assignees":[{"login":"alesapin","id":3684697,"node_id":"MDQ6VXNlcjM2ODQ2OTc=","avatar_url":"https://avatars.githubusercontent.com/u/3684697?v=4","gravatar_id":"","url":"https://api.github.com/users/alesapin","html_url":"https://github.com/alesapin","followers_url":"https://api.github.com/users/alesapin/followers","following_url":"https://api.github.com/users/alesapin/following{/other_user}","gists_url":"https://api.github.com/users/alesapin/gists{/gist_id}","starred_url":"https://api.github.com/users/alesapin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alesapin/subscriptions","organizations_url":"https://api.github.com/users/alesapin/orgs","repos_url":"https://api.github.com/users/alesapin/repos","events_url":"https://api.github.com/users/alesapin/events{/privacy}","received_events_url":"https://api.github.com/users/alesapin/received_events","type":"User","site_admin":false}],"milestone":null,"comments":0,"created_at":"2022-01-26T16:24:28Z","updated_at":"2022-01-26T16:24:33Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/pulls/34028","html_url":"https://github.com/ClickHouse/ClickHouse/pull/34028","diff_url":"https://github.com/ClickHouse/ClickHouse/pull/34028.diff","patch_url":"https://github.com/ClickHouse/ClickHouse/pull/34028.patch","merged_at":null},"body":"Original pull-request #33988\n\nThis pull-request is a first step of an automated backporting.\nIt contains changes like after calling a local command `git cherry-pick`.\nIf you intend to continue backporting this changes, then resolve all conflicts if any.\nOtherwise, if you do not want to backport them, then just close this pull-request.\n\nThe check results does not matter at this step - you can safely ignore them.\nAlso this pull-request will be merged automatically as it reaches the mergeable state, but you always can merge it manually.\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34028/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34028/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34027","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34027/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34027/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34027/events","html_url":"https://github.com/ClickHouse/ClickHouse/pull/34027","id":1115213122,"node_id":"PR_kwDOA5dJV84xoFL6","number":34027,"title":"Cherry pick #33988 to 21.3: Fix clickhouse server start when replicated access storage depend on keeper","user":{"login":"robot-clickhouse","id":41385210,"node_id":"MDQ6VXNlcjQxMzg1MjEw","avatar_url":"https://avatars.githubusercontent.com/u/41385210?v=4","gravatar_id":"","url":"https://api.github.com/users/robot-clickhouse","html_url":"https://github.com/robot-clickhouse","followers_url":"https://api.github.com/users/robot-clickhouse/followers","following_url":"https://api.github.com/users/robot-clickhouse/following{/other_user}","gists_url":"https://api.github.com/users/robot-clickhouse/gists{/gist_id}","starred_url":"https://api.github.com/users/robot-clickhouse/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/robot-clickhouse/subscriptions","organizations_url":"https://api.github.com/users/robot-clickhouse/orgs","repos_url":"https://api.github.com/users/robot-clickhouse/repos","events_url":"https://api.github.com/users/robot-clickhouse/events{/privacy}","received_events_url":"https://api.github.com/users/robot-clickhouse/received_events","type":"User","site_admin":false},"labels":[{"id":1211037461,"node_id":"MDU6TGFiZWwxMjExMDM3NDYx","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/do%20not%20test","name":"do not test","color":"e99695","default":false,"description":"disable testing on pull request"},{"id":1827370124,"node_id":"MDU6TGFiZWwxODI3MzcwMTI0","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/pr-cherrypick","name":"pr-cherrypick","color":"5fadcc","default":false,"description":"Cherry-pick of merge-commit before backporting. Do not use manually - automated use only!"}],"state":"open","locked":false,"assignee":{"login":"alesapin","id":3684697,"node_id":"MDQ6VXNlcjM2ODQ2OTc=","avatar_url":"https://avatars.githubusercontent.com/u/3684697?v=4","gravatar_id":"","url":"https://api.github.com/users/alesapin","html_url":"https://github.com/alesapin","followers_url":"https://api.github.com/users/alesapin/followers","following_url":"https://api.github.com/users/alesapin/following{/other_user}","gists_url":"https://api.github.com/users/alesapin/gists{/gist_id}","starred_url":"https://api.github.com/users/alesapin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alesapin/subscriptions","organizations_url":"https://api.github.com/users/alesapin/orgs","repos_url":"https://api.github.com/users/alesapin/repos","events_url":"https://api.github.com/users/alesapin/events{/privacy}","received_events_url":"https://api.github.com/users/alesapin/received_events","type":"User","site_admin":false},"assignees":[{"login":"alesapin","id":3684697,"node_id":"MDQ6VXNlcjM2ODQ2OTc=","avatar_url":"https://avatars.githubusercontent.com/u/3684697?v=4","gravatar_id":"","url":"https://api.github.com/users/alesapin","html_url":"https://github.com/alesapin","followers_url":"https://api.github.com/users/alesapin/followers","following_url":"https://api.github.com/users/alesapin/following{/other_user}","gists_url":"https://api.github.com/users/alesapin/gists{/gist_id}","starred_url":"https://api.github.com/users/alesapin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alesapin/subscriptions","organizations_url":"https://api.github.com/users/alesapin/orgs","repos_url":"https://api.github.com/users/alesapin/repos","events_url":"https://api.github.com/users/alesapin/events{/privacy}","received_events_url":"https://api.github.com/users/alesapin/received_events","type":"User","site_admin":false}],"milestone":null,"comments":0,"created_at":"2022-01-26T16:24:13Z","updated_at":"2022-01-26T16:24:18Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/pulls/34027","html_url":"https://github.com/ClickHouse/ClickHouse/pull/34027","diff_url":"https://github.com/ClickHouse/ClickHouse/pull/34027.diff","patch_url":"https://github.com/ClickHouse/ClickHouse/pull/34027.patch","merged_at":null},"body":"Original pull-request #33988\n\nThis pull-request is a first step of an automated backporting.\nIt contains changes like after calling a local command `git cherry-pick`.\nIf you intend to continue backporting this changes, then resolve all conflicts if any.\nOtherwise, if you do not want to backport them, then just close this pull-request.\n\nThe check results does not matter at this step - you can safely ignore them.\nAlso this pull-request will be merged automatically as it reaches the mergeable state, but you always can merge it manually.\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34027/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34027/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34026","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34026/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34026/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34026/events","html_url":"https://github.com/ClickHouse/ClickHouse/pull/34026","id":1115212880,"node_id":"PR_kwDOA5dJV84xoFIr","number":34026,"title":"Cherry pick #33988 to 21.8: Fix clickhouse server start when replicated access storage depend on keeper","user":{"login":"robot-clickhouse","id":41385210,"node_id":"MDQ6VXNlcjQxMzg1MjEw","avatar_url":"https://avatars.githubusercontent.com/u/41385210?v=4","gravatar_id":"","url":"https://api.github.com/users/robot-clickhouse","html_url":"https://github.com/robot-clickhouse","followers_url":"https://api.github.com/users/robot-clickhouse/followers","following_url":"https://api.github.com/users/robot-clickhouse/following{/other_user}","gists_url":"https://api.github.com/users/robot-clickhouse/gists{/gist_id}","starred_url":"https://api.github.com/users/robot-clickhouse/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/robot-clickhouse/subscriptions","organizations_url":"https://api.github.com/users/robot-clickhouse/orgs","repos_url":"https://api.github.com/users/robot-clickhouse/repos","events_url":"https://api.github.com/users/robot-clickhouse/events{/privacy}","received_events_url":"https://api.github.com/users/robot-clickhouse/received_events","type":"User","site_admin":false},"labels":[{"id":1211037461,"node_id":"MDU6TGFiZWwxMjExMDM3NDYx","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/do%20not%20test","name":"do not test","color":"e99695","default":false,"description":"disable testing on pull request"},{"id":1827370124,"node_id":"MDU6TGFiZWwxODI3MzcwMTI0","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/pr-cherrypick","name":"pr-cherrypick","color":"5fadcc","default":false,"description":"Cherry-pick of merge-commit before backporting. Do not use manually - automated use only!"}],"state":"open","locked":false,"assignee":{"login":"alesapin","id":3684697,"node_id":"MDQ6VXNlcjM2ODQ2OTc=","avatar_url":"https://avatars.githubusercontent.com/u/3684697?v=4","gravatar_id":"","url":"https://api.github.com/users/alesapin","html_url":"https://github.com/alesapin","followers_url":"https://api.github.com/users/alesapin/followers","following_url":"https://api.github.com/users/alesapin/following{/other_user}","gists_url":"https://api.github.com/users/alesapin/gists{/gist_id}","starred_url":"https://api.github.com/users/alesapin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alesapin/subscriptions","organizations_url":"https://api.github.com/users/alesapin/orgs","repos_url":"https://api.github.com/users/alesapin/repos","events_url":"https://api.github.com/users/alesapin/events{/privacy}","received_events_url":"https://api.github.com/users/alesapin/received_events","type":"User","site_admin":false},"assignees":[{"login":"alesapin","id":3684697,"node_id":"MDQ6VXNlcjM2ODQ2OTc=","avatar_url":"https://avatars.githubusercontent.com/u/3684697?v=4","gravatar_id":"","url":"https://api.github.com/users/alesapin","html_url":"https://github.com/alesapin","followers_url":"https://api.github.com/users/alesapin/followers","following_url":"https://api.github.com/users/alesapin/following{/other_user}","gists_url":"https://api.github.com/users/alesapin/gists{/gist_id}","starred_url":"https://api.github.com/users/alesapin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alesapin/subscriptions","organizations_url":"https://api.github.com/users/alesapin/orgs","repos_url":"https://api.github.com/users/alesapin/repos","events_url":"https://api.github.com/users/alesapin/events{/privacy}","received_events_url":"https://api.github.com/users/alesapin/received_events","type":"User","site_admin":false}],"milestone":null,"comments":0,"created_at":"2022-01-26T16:23:58Z","updated_at":"2022-01-26T16:24:04Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/pulls/34026","html_url":"https://github.com/ClickHouse/ClickHouse/pull/34026","diff_url":"https://github.com/ClickHouse/ClickHouse/pull/34026.diff","patch_url":"https://github.com/ClickHouse/ClickHouse/pull/34026.patch","merged_at":null},"body":"Original pull-request #33988\n\nThis pull-request is a first step of an automated backporting.\nIt contains changes like after calling a local command `git cherry-pick`.\nIf you intend to continue backporting this changes, then resolve all conflicts if any.\nOtherwise, if you do not want to backport them, then just close this pull-request.\n\nThe check results does not matter at this step - you can safely ignore them.\nAlso this pull-request will be merged automatically as it reaches the mergeable state, but you always can merge it manually.\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34026/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34026/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34025","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34025/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34025/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34025/events","html_url":"https://github.com/ClickHouse/ClickHouse/pull/34025","id":1115155562,"node_id":"PR_kwDOA5dJV84xn5I-","number":34025,"title":"Hold time lock while assigning clear_old_temporary_directories task","user":{"login":"amosbird","id":5085485,"node_id":"MDQ6VXNlcjUwODU0ODU=","avatar_url":"https://avatars.githubusercontent.com/u/5085485?v=4","gravatar_id":"","url":"https://api.github.com/users/amosbird","html_url":"https://github.com/amosbird","followers_url":"https://api.github.com/users/amosbird/followers","following_url":"https://api.github.com/users/amosbird/following{/other_user}","gists_url":"https://api.github.com/users/amosbird/gists{/gist_id}","starred_url":"https://api.github.com/users/amosbird/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/amosbird/subscriptions","organizations_url":"https://api.github.com/users/amosbird/orgs","repos_url":"https://api.github.com/users/amosbird/repos","events_url":"https://api.github.com/users/amosbird/events{/privacy}","received_events_url":"https://api.github.com/users/amosbird/received_events","type":"User","site_admin":false},"labels":[{"id":1304141686,"node_id":"MDU6TGFiZWwxMzA0MTQxNjg2","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/pr-improvement","name":"pr-improvement","color":"007700","default":false,"description":"Pull request with some product improvements"}],"state":"open","locked":false,"assignee":{"login":"nikitamikhaylov","id":25705399,"node_id":"MDQ6VXNlcjI1NzA1Mzk5","avatar_url":"https://avatars.githubusercontent.com/u/25705399?v=4","gravatar_id":"","url":"https://api.github.com/users/nikitamikhaylov","html_url":"https://github.com/nikitamikhaylov","followers_url":"https://api.github.com/users/nikitamikhaylov/followers","following_url":"https://api.github.com/users/nikitamikhaylov/following{/other_user}","gists_url":"https://api.github.com/users/nikitamikhaylov/gists{/gist_id}","starred_url":"https://api.github.com/users/nikitamikhaylov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nikitamikhaylov/subscriptions","organizations_url":"https://api.github.com/users/nikitamikhaylov/orgs","repos_url":"https://api.github.com/users/nikitamikhaylov/repos","events_url":"https://api.github.com/users/nikitamikhaylov/events{/privacy}","received_events_url":"https://api.github.com/users/nikitamikhaylov/received_events","type":"User","site_admin":false},"assignees":[{"login":"nikitamikhaylov","id":25705399,"node_id":"MDQ6VXNlcjI1NzA1Mzk5","avatar_url":"https://avatars.githubusercontent.com/u/25705399?v=4","gravatar_id":"","url":"https://api.github.com/users/nikitamikhaylov","html_url":"https://github.com/nikitamikhaylov","followers_url":"https://api.github.com/users/nikitamikhaylov/followers","following_url":"https://api.github.com/users/nikitamikhaylov/following{/other_user}","gists_url":"https://api.github.com/users/nikitamikhaylov/gists{/gist_id}","starred_url":"https://api.github.com/users/nikitamikhaylov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nikitamikhaylov/subscriptions","organizations_url":"https://api.github.com/users/nikitamikhaylov/orgs","repos_url":"https://api.github.com/users/nikitamikhaylov/repos","events_url":"https://api.github.com/users/nikitamikhaylov/events{/privacy}","received_events_url":"https://api.github.com/users/nikitamikhaylov/received_events","type":"User","site_admin":false}],"milestone":null,"comments":0,"created_at":"2022-01-26T15:32:03Z","updated_at":"2022-01-27T10:49:06Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/pulls/34025","html_url":"https://github.com/ClickHouse/ClickHouse/pull/34025","diff_url":"https://github.com/ClickHouse/ClickHouse/pull/34025.diff","patch_url":"https://github.com/ClickHouse/ClickHouse/pull/34025.patch","merged_at":null},"body":"Changelog category (leave one):\r\n- Improvement\r\n\r\nChangelog entry (a user-readable short description of the changes that goes to CHANGELOG.md):\r\nHold time lock while assigning tasks to clear old temporary directories in StorageMergeTree. \r\n\r\n\r\n> Information about CI checks: https://clickhouse.tech/docs/en/development/continuous-integration/\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34025/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34025/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34024","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34024/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34024/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34024/events","html_url":"https://github.com/ClickHouse/ClickHouse/pull/34024","id":1115153685,"node_id":"PR_kwDOA5dJV84xn4va","number":34024,"title":"make systemd to use EnvironmentFile","user":{"login":"den-crane","id":19737682,"node_id":"MDQ6VXNlcjE5NzM3Njgy","avatar_url":"https://avatars.githubusercontent.com/u/19737682?v=4","gravatar_id":"","url":"https://api.github.com/users/den-crane","html_url":"https://github.com/den-crane","followers_url":"https://api.github.com/users/den-crane/followers","following_url":"https://api.github.com/users/den-crane/following{/other_user}","gists_url":"https://api.github.com/users/den-crane/gists{/gist_id}","starred_url":"https://api.github.com/users/den-crane/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/den-crane/subscriptions","organizations_url":"https://api.github.com/users/den-crane/orgs","repos_url":"https://api.github.com/users/den-crane/repos","events_url":"https://api.github.com/users/den-crane/events{/privacy}","received_events_url":"https://api.github.com/users/den-crane/received_events","type":"User","site_admin":false},"labels":[{"id":1876999755,"node_id":"MDU6TGFiZWwxODc2OTk5NzU1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/pr-not-for-changelog","name":"pr-not-for-changelog","color":"007700","default":false,"description":"This PR should not be mentioned in the changelog"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-01-26T15:30:25Z","updated_at":"2022-01-26T15:35:33Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/pulls/34024","html_url":"https://github.com/ClickHouse/ClickHouse/pull/34024","diff_url":"https://github.com/ClickHouse/ClickHouse/pull/34024.diff","patch_url":"https://github.com/ClickHouse/ClickHouse/pull/34024.patch","merged_at":null},"body":"initV script uses /etc/default/clickhouse\r\n\r\nthis PR adds the same functionality to systemD script\r\n\r\n> EnvironmentFile=-/etc/default/clickhouse\r\n\r\n`-` means that  `/etc/default/clickhouse` is optional\r\n\r\nI'll document it later.\r\n\r\nI don't see how to do CI tests for `clickhouse-server restart`, so no tests. (I tested it manually)\r\n\r\nslightly backward incompatible change: `/etc/default/clickhouse` should contain only K/V `param=value`, it's not a bash script anymore.\r\n\r\nChangelog category (leave one):\r\n- Not for changelog (changelog entry is not required)\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34024/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34024/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34023","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34023/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34023/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34023/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/34023","id":1115137996,"node_id":"I_kwDOA5dJV85Cd6fM","number":34023,"title":"Populate the _raw_message virtual kafka column for non-exception ","user":{"login":"johnnyleitrim","id":4570406,"node_id":"MDQ6VXNlcjQ1NzA0MDY=","avatar_url":"https://avatars.githubusercontent.com/u/4570406?v=4","gravatar_id":"","url":"https://api.github.com/users/johnnyleitrim","html_url":"https://github.com/johnnyleitrim","followers_url":"https://api.github.com/users/johnnyleitrim/followers","following_url":"https://api.github.com/users/johnnyleitrim/following{/other_user}","gists_url":"https://api.github.com/users/johnnyleitrim/gists{/gist_id}","starred_url":"https://api.github.com/users/johnnyleitrim/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/johnnyleitrim/subscriptions","organizations_url":"https://api.github.com/users/johnnyleitrim/orgs","repos_url":"https://api.github.com/users/johnnyleitrim/repos","events_url":"https://api.github.com/users/johnnyleitrim/events{/privacy}","received_events_url":"https://api.github.com/users/johnnyleitrim/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-01-26T15:17:18Z","updated_at":"2022-01-26T15:17:18Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"**Use case**\r\n\r\nI would like to be able to store the full kafka message in a column when using the kafka engine. At the moment, the `_raw_message` virtual column is only populated in the kafka engine if there was [an exception handling the message](https://github.com/ClickHouse/ClickHouse/blob/87574e8bf60887f9b7df1e13b6bbdc3020a549ea/src/Storages/Kafka/KafkaSource.cpp#L178).\r\n\r\nSome of our messages contain 50+ fields. We'd like to be able to store the original message along with some dimensions we extract from the message (stored as separate columns). Something like this:\r\n\r\n```sql\r\nCREATE TABLE topic (\r\n    name String,\r\n    address String\r\n) ENGINE = Kafka('localhost:9092', 'topic', 'group1', 'JSONEachRow');\r\n\r\nCREATE TABLE people (\r\n    name String,\r\n    address String,\r\n    raw String\r\n) ENGINE = Log();\r\n\r\nCREATE MATERIALIZED VIEW consumer TO people AS SELECT name, address, _raw_message AS raw FROM topic;\r\n```\r\n\r\n**Describe the solution you'd like**\r\n\r\nIt would be useful if it was possible to configure the engine to populate the `_raw_message` virtual column in all cases; not just when an exception occurs. Something like: `SETTINGS kafka_populate_raw_message=true;`\r\n\r\n**Additional context**\r\n\r\nSee #33993 for additional context\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34023/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34023/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34022","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34022/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34022/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34022/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/34022","id":1115105050,"node_id":"I_kwDOA5dJV85Cdyca","number":34022,"title":"Max length of IPv6 text representation","user":{"login":"dearfl","id":14127940,"node_id":"MDQ6VXNlcjE0MTI3OTQw","avatar_url":"https://avatars.githubusercontent.com/u/14127940?v=4","gravatar_id":"","url":"https://api.github.com/users/dearfl","html_url":"https://github.com/dearfl","followers_url":"https://api.github.com/users/dearfl/followers","following_url":"https://api.github.com/users/dearfl/following{/other_user}","gists_url":"https://api.github.com/users/dearfl/gists{/gist_id}","starred_url":"https://api.github.com/users/dearfl/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dearfl/subscriptions","organizations_url":"https://api.github.com/users/dearfl/orgs","repos_url":"https://api.github.com/users/dearfl/repos","events_url":"https://api.github.com/users/dearfl/events{/privacy}","received_events_url":"https://api.github.com/users/dearfl/received_events","type":"User","site_admin":false},"labels":[{"id":386401510,"node_id":"MDU6TGFiZWwzODY0MDE1MTA=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/question","name":"question","color":"bfdadc","default":true,"description":""},{"id":1546440057,"node_id":"MDU6TGFiZWwxNTQ2NDQwMDU3","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/development","name":"development","color":"fc80df","default":false,"description":"Developement process & source code & implementation details"},{"id":1669010018,"node_id":"MDU6TGFiZWwxNjY5MDEwMDE4","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/question-answered","name":"question-answered","color":"bfdadc","default":false,"description":""},{"id":3761121284,"node_id":"LA_kwDOA5dJV87gLigE","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/support-services","name":"support-services","color":"1A70E6","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2022-01-26T14:48:34Z","updated_at":"2022-01-27T15:16:28Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"https://github.com/ClickHouse/ClickHouse/blob/289a51b61d636e9b2ac98dc912d4d1894cc31e2e/src/Common/formatIPv6.h#L14\r\n\r\nAccording to this [link](https://stackoverflow.com/questions/166132/maximum-length-of-the-textual-representation-of-an-ipv6-address), the Maxiumn length of IPv6 textual representation should be 45.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34022/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34022/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34021","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34021/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34021/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34021/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/34021","id":1115100684,"node_id":"I_kwDOA5dJV85CdxYM","number":34021,"title":"Introspection for S3 metadata of MergeTree tables over S3.","user":{"login":"alesapin","id":3684697,"node_id":"MDQ6VXNlcjM2ODQ2OTc=","avatar_url":"https://avatars.githubusercontent.com/u/3684697?v=4","gravatar_id":"","url":"https://api.github.com/users/alesapin","html_url":"https://github.com/alesapin","followers_url":"https://api.github.com/users/alesapin/followers","following_url":"https://api.github.com/users/alesapin/following{/other_user}","gists_url":"https://api.github.com/users/alesapin/gists{/gist_id}","starred_url":"https://api.github.com/users/alesapin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alesapin/subscriptions","organizations_url":"https://api.github.com/users/alesapin/orgs","repos_url":"https://api.github.com/users/alesapin/repos","events_url":"https://api.github.com/users/alesapin/events{/privacy}","received_events_url":"https://api.github.com/users/alesapin/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-01-26T14:45:31Z","updated_at":"2022-01-26T14:45:31Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"We need to add some introspection table (or extend `system.parts`) which will allow to get some metainformation about parts paths on S3.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34021/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34021/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34018","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34018/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34018/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34018/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/34018","id":1115026738,"node_id":"I_kwDOA5dJV85CdfUy","number":34018,"title":"s3Cluster doesn't kill child queries if fails","user":{"login":"simpl1g","id":1674393,"node_id":"MDQ6VXNlcjE2NzQzOTM=","avatar_url":"https://avatars.githubusercontent.com/u/1674393?v=4","gravatar_id":"","url":"https://api.github.com/users/simpl1g","html_url":"https://github.com/simpl1g","followers_url":"https://api.github.com/users/simpl1g/followers","following_url":"https://api.github.com/users/simpl1g/following{/other_user}","gists_url":"https://api.github.com/users/simpl1g/gists{/gist_id}","starred_url":"https://api.github.com/users/simpl1g/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/simpl1g/subscriptions","organizations_url":"https://api.github.com/users/simpl1g/orgs","repos_url":"https://api.github.com/users/simpl1g/repos","events_url":"https://api.github.com/users/simpl1g/events{/privacy}","received_events_url":"https://api.github.com/users/simpl1g/received_events","type":"User","site_admin":false},"labels":[{"id":845267693,"node_id":"MDU6TGFiZWw4NDUyNjc2OTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/st-need-info","name":"st-need-info","color":"e5b890","default":false,"description":"We need extra data to continue"},{"id":3260776666,"node_id":"MDU6TGFiZWwzMjYwNzc2NjY2","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/potential%20bug","name":"potential bug","color":"ffc080","default":false,"description":"To be reviewed by developers and confirmed/rejected."}],"state":"open","locked":false,"assignee":{"login":"nikitamikhaylov","id":25705399,"node_id":"MDQ6VXNlcjI1NzA1Mzk5","avatar_url":"https://avatars.githubusercontent.com/u/25705399?v=4","gravatar_id":"","url":"https://api.github.com/users/nikitamikhaylov","html_url":"https://github.com/nikitamikhaylov","followers_url":"https://api.github.com/users/nikitamikhaylov/followers","following_url":"https://api.github.com/users/nikitamikhaylov/following{/other_user}","gists_url":"https://api.github.com/users/nikitamikhaylov/gists{/gist_id}","starred_url":"https://api.github.com/users/nikitamikhaylov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nikitamikhaylov/subscriptions","organizations_url":"https://api.github.com/users/nikitamikhaylov/orgs","repos_url":"https://api.github.com/users/nikitamikhaylov/repos","events_url":"https://api.github.com/users/nikitamikhaylov/events{/privacy}","received_events_url":"https://api.github.com/users/nikitamikhaylov/received_events","type":"User","site_admin":false},"assignees":[{"login":"nikitamikhaylov","id":25705399,"node_id":"MDQ6VXNlcjI1NzA1Mzk5","avatar_url":"https://avatars.githubusercontent.com/u/25705399?v=4","gravatar_id":"","url":"https://api.github.com/users/nikitamikhaylov","html_url":"https://github.com/nikitamikhaylov","followers_url":"https://api.github.com/users/nikitamikhaylov/followers","following_url":"https://api.github.com/users/nikitamikhaylov/following{/other_user}","gists_url":"https://api.github.com/users/nikitamikhaylov/gists{/gist_id}","starred_url":"https://api.github.com/users/nikitamikhaylov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nikitamikhaylov/subscriptions","organizations_url":"https://api.github.com/users/nikitamikhaylov/orgs","repos_url":"https://api.github.com/users/nikitamikhaylov/repos","events_url":"https://api.github.com/users/nikitamikhaylov/events{/privacy}","received_events_url":"https://api.github.com/users/nikitamikhaylov/received_events","type":"User","site_admin":false}],"milestone":null,"comments":3,"created_at":"2022-01-26T13:35:07Z","updated_at":"2022-01-27T17:21:31Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Hi, I noticed that we have 2 queries in cluster that are running for few days and it happens that they are children of failed queries\r\n\r\nInitial query, started at `2022-01-20 06:00:05.485922`, query_id = `16ABA5B4D52323FF`\r\n\r\n```sql\r\nINSERT INTO ReplicatedMergeTree\r\nSELECT *\r\nFROM s3Cluster(... 'CSVWithNames', ..., 'gzip')\r\nSETTINGS format_csv_allow_single_quotes = 0, max_threads = 32, max_insert_threads = 16\r\n``` \r\nThis query failed at `2022-01-20 06:02:03.644609`. Exception in initial query\r\n\r\n```\r\nCode: 225, e.displayText() = DB::Exception: Received from r1s4-clickhouse-int.appodeal.com:9000. DB::Exception: ZooKeeper session has been expired.. Stack trace:\r\n\r\n0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x8fdc69a in /usr/bin/clickhouse\r\n1. ? @ 0x10e858bf in /usr/bin/clickhouse\r\n2. DB::ReplicatedMergeTreeBlockOutputStream::commitPart(std::__1::shared_ptr<zkutil::ZooKeeper>&, std::__1::shared_ptr<DB::IMergeTreeDataPart>&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) @ 0x10e85988 in /usr/bin/clickhouse\r\n3. DB::ReplicatedMergeTreeBlockOutputStream::write(DB::Block const&) @ 0x10e8501d in /usr/bin/clickhouse\r\n4. DB::PushingToViewsBlockOutputStream::write(DB::Block const&) @ 0x103df8f2 in /usr/bin/clickhouse\r\n5. DB::AddingDefaultBlockOutputStream::write(DB::Block const&) @ 0x103e9c2b in /usr/bin/clickhouse\r\n6. DB::SquashingBlockOutputStream::write(DB::Block const&) @ 0x103ea1f4 in /usr/bin/clickhouse\r\n7. ? @ 0x100eedfe in /usr/bin/clickhouse\r\n8. DB::TCPHandler::receiveData(bool) @ 0x110488a7 in /usr/bin/clickhouse\r\n9. DB::TCPHandler::receivePacket() @ 0x1103df8c in /usr/bin/clickhouse\r\n10. DB::TCPHandler::readDataNext(unsigned long, long) @ 0x1104023f in /usr/bin/clickhouse\r\n11. DB::TCPHandler::processInsertQuery(DB::Settings const&) @ 0x1103e5fe in /usr/bin/clickhouse\r\n12. DB::TCPHandler::runImpl() @ 0x11036e87 in /usr/bin/clickhouse\r\n13. DB::TCPHandler::run() @ 0x11049c19 in /usr/bin/clickhouse\r\n14. Poco::Net::TCPServerConnection::start() @ 0x13bc14ef in /usr/bin/clickhouse\r\n15. Poco::Net::TCPServerDispatcher::run() @ 0x13bc2f7a in /usr/bin/clickhouse\r\n16. Poco::PooledThread::run() @ 0x13cf51f9 in /usr/bin/clickhouse\r\n17. Poco::ThreadImpl::runnableEntry(void*) @ 0x13cf148a in /usr/bin/clickhouse\r\n18. start_thread @ 0x9609 in /usr/lib/x86_64-linux-gnu/libpthread-2.31.so\r\n19. clone @ 0x122293 in /usr/lib/x86_64-linux-gnu/libc-2.31.so\r\n: Insertion status:\r\nWrote 567 blocks and 579201 rows on shard 0 replica 0, r1s1-clickhouse-int:9000 (average 28 ms per block, the slowest block 2678 ms)\r\nWrote 567 blocks and 578639 rows on shard 1 replica 0, r1s2-clickhouse-int:9000 (average 21 ms per block, the slowest block 460 ms)\r\nWrote 567 blocks and 579232 rows on shard 2 replica 0, r1s3-clickhouse-int:9000 (average 23 ms per block, the slowest block 178 ms)\r\nWrote 566 blocks and 576759 rows on shard 3 replica 0, r1s4-clickhouse-int:9000 (average 112 ms per block, the slowest block 50108 ms)\r\nWrote 567 blocks and 579192 rows on shard 4 replica 0, r1s5-clickhouse-int:9000 (average 26 ms per block, the slowest block 205 ms)\r\nWrote 567 blocks and 577952 rows on shard 5 replica 0, r1s6-clickhouse-int:9000 (average 27 ms per block, the slowest block 196 ms)\r\n: While executing SinkToOutputStream (version 21.8.11.4 (official build))\r\nstack_trace:                           0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x8fdc69a in /usr/bin/clickhouse\r\n1. DB::readException(DB::ReadBuffer&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool) @ 0x903c3f4 in /usr/bin/clickhouse\r\n2. DB::Connection::receiveException() const @ 0x10f58f02 in /usr/bin/clickhouse\r\n3. DB::Connection::receivePacket() @ 0x10f62ca9 in /usr/bin/clickhouse\r\n4. DB::RemoteBlockOutputStream::write(DB::Block const&) @ 0x10c6b7e0 in /usr/bin/clickhouse\r\n5. ? @ 0x10c782b8 in /usr/bin/clickhouse\r\n6. ThreadPoolImpl<ThreadFromGlobalPool>::worker(std::__1::__list_iterator<ThreadFromGlobalPool, void*>) @ 0x9020038 in /usr/bin/clickhouse\r\n7. ThreadFromGlobalPool::ThreadFromGlobalPool<void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>(void&&, void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()&&...)::'lambda'()::operator()() @ 0x9021bdf in /usr/bin/clickhouse\r\n8. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x901d31f in /usr/bin/clickhouse\r\n9. ? @ 0x9020c03 in /usr/bin/clickhouse\r\n10. start_thread @ 0x9609 in /usr/lib/x86_64-linux-gnu/libpthread-2.31.so\r\n11. clone @ 0x122293 in /usr/lib/x86_64-linux-gnu/libc-2.31.so\r\n```\r\n\r\n6 days later subquery is still running on one of the shards\r\n\r\n```sql\r\nSELECT elapsed\r\nFROM system.processes\r\nWHERE initial_query_id = '16ABA5B4D52323FF'\r\n\r\n┌──────────elapsed─┐\r\n│ 545270.871147581 │\r\n└──────────────────┘\r\n\r\n```\r\n\r\nVersion of ClickHouse 21.8.11.4\r\n\r\n\r\n**How to reproduce**\r\nI'm not sure if it is possible to reproduce, just killing initial query in the middle of the process doesn't reproduce this case. We are using `s3Cluster` for around 40 days in production and this case appeared 2 times.\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34018/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34018/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34017","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34017/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34017/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34017/events","html_url":"https://github.com/ClickHouse/ClickHouse/pull/34017","id":1115025674,"node_id":"PR_kwDOA5dJV84xnd3T","number":34017,"title":"Add schema inference for values() table function.","user":{"login":"Avogar","id":48961922,"node_id":"MDQ6VXNlcjQ4OTYxOTIy","avatar_url":"https://avatars.githubusercontent.com/u/48961922?v=4","gravatar_id":"","url":"https://api.github.com/users/Avogar","html_url":"https://github.com/Avogar","followers_url":"https://api.github.com/users/Avogar/followers","following_url":"https://api.github.com/users/Avogar/following{/other_user}","gists_url":"https://api.github.com/users/Avogar/gists{/gist_id}","starred_url":"https://api.github.com/users/Avogar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Avogar/subscriptions","organizations_url":"https://api.github.com/users/Avogar/orgs","repos_url":"https://api.github.com/users/Avogar/repos","events_url":"https://api.github.com/users/Avogar/events{/privacy}","received_events_url":"https://api.github.com/users/Avogar/received_events","type":"User","site_admin":false},"labels":[{"id":1304141686,"node_id":"MDU6TGFiZWwxMzA0MTQxNjg2","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/pr-improvement","name":"pr-improvement","color":"007700","default":false,"description":"Pull request with some product improvements"}],"state":"open","locked":false,"assignee":{"login":"alexey-milovidov","id":18581488,"node_id":"MDQ6VXNlcjE4NTgxNDg4","avatar_url":"https://avatars.githubusercontent.com/u/18581488?v=4","gravatar_id":"","url":"https://api.github.com/users/alexey-milovidov","html_url":"https://github.com/alexey-milovidov","followers_url":"https://api.github.com/users/alexey-milovidov/followers","following_url":"https://api.github.com/users/alexey-milovidov/following{/other_user}","gists_url":"https://api.github.com/users/alexey-milovidov/gists{/gist_id}","starred_url":"https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexey-milovidov/subscriptions","organizations_url":"https://api.github.com/users/alexey-milovidov/orgs","repos_url":"https://api.github.com/users/alexey-milovidov/repos","events_url":"https://api.github.com/users/alexey-milovidov/events{/privacy}","received_events_url":"https://api.github.com/users/alexey-milovidov/received_events","type":"User","site_admin":false},"assignees":[{"login":"alexey-milovidov","id":18581488,"node_id":"MDQ6VXNlcjE4NTgxNDg4","avatar_url":"https://avatars.githubusercontent.com/u/18581488?v=4","gravatar_id":"","url":"https://api.github.com/users/alexey-milovidov","html_url":"https://github.com/alexey-milovidov","followers_url":"https://api.github.com/users/alexey-milovidov/followers","following_url":"https://api.github.com/users/alexey-milovidov/following{/other_user}","gists_url":"https://api.github.com/users/alexey-milovidov/gists{/gist_id}","starred_url":"https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexey-milovidov/subscriptions","organizations_url":"https://api.github.com/users/alexey-milovidov/orgs","repos_url":"https://api.github.com/users/alexey-milovidov/repos","events_url":"https://api.github.com/users/alexey-milovidov/events{/privacy}","received_events_url":"https://api.github.com/users/alexey-milovidov/received_events","type":"User","site_admin":false}],"milestone":null,"comments":3,"created_at":"2022-01-26T13:33:54Z","updated_at":"2022-01-28T09:52:19Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/pulls/34017","html_url":"https://github.com/ClickHouse/ClickHouse/pull/34017","diff_url":"https://github.com/ClickHouse/ClickHouse/pull/34017.diff","patch_url":"https://github.com/ClickHouse/ClickHouse/pull/34017.patch","merged_at":null},"body":"Changelog category (leave one):\r\n- Improvement\r\n\r\n\r\nChangelog entry (a user-readable short description of the changes that goes to CHANGELOG.md):\r\nAdd schema inference for values() table function. Closes https://github.com/ClickHouse/ClickHouse/issues/33811\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34017/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34017/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34014","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34014/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34014/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34014/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/34014","id":1114973836,"node_id":"I_kwDOA5dJV85CdSaM","number":34014,"title":"system.metrics name='Query' and system.metric_log CurrentMetric_Query gauge doesn't calculate anymore","user":{"login":"Slach","id":105560,"node_id":"MDQ6VXNlcjEwNTU2MA==","avatar_url":"https://avatars.githubusercontent.com/u/105560?v=4","gravatar_id":"","url":"https://api.github.com/users/Slach","html_url":"https://github.com/Slach","followers_url":"https://api.github.com/users/Slach/followers","following_url":"https://api.github.com/users/Slach/following{/other_user}","gists_url":"https://api.github.com/users/Slach/gists{/gist_id}","starred_url":"https://api.github.com/users/Slach/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Slach/subscriptions","organizations_url":"https://api.github.com/users/Slach/orgs","repos_url":"https://api.github.com/users/Slach/repos","events_url":"https://api.github.com/users/Slach/events{/privacy}","received_events_url":"https://api.github.com/users/Slach/received_events","type":"User","site_admin":false},"labels":[{"id":3260776666,"node_id":"MDU6TGFiZWwzMjYwNzc2NjY2","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/potential%20bug","name":"potential bug","color":"ffc080","default":false,"description":"To be reviewed by developers and confirmed/rejected."}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2022-01-26T12:38:46Z","updated_at":"2022-01-26T16:08:01Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"**Describe what's wrong**\r\nQuery metric doesn't calculate anymore\r\n```sql\r\nSELECT * FROM system.metrics WHERE metric='Query'\r\n```\r\nalways return value=0 \r\n\r\n```sql\r\nSELECT event_time, CurrentMetrics_Query FROM system.metric_log WHERE CurrentMetrics_Query>0\r\n```\r\nalways return 0 rows\r\n\r\nI check these queries during run following script in separate terminal\r\n```bash\r\nclickhouse-client -q \"SELECT sleepEachRow(1),now() FROM numbers(60)\"\r\n```\r\n\r\n**Does it reproduce on recent release?**\r\nYes it reproduce on 22.1 and 21.12\r\nAnd doesn't reproduce on 21.11\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34014/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34014/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34011","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34011/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34011/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34011/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/34011","id":1114918907,"node_id":"I_kwDOA5dJV85CdE_7","number":34011,"title":"Query Cache","user":{"login":"alexey-milovidov","id":18581488,"node_id":"MDQ6VXNlcjE4NTgxNDg4","avatar_url":"https://avatars.githubusercontent.com/u/18581488?v=4","gravatar_id":"","url":"https://api.github.com/users/alexey-milovidov","html_url":"https://github.com/alexey-milovidov","followers_url":"https://api.github.com/users/alexey-milovidov/followers","following_url":"https://api.github.com/users/alexey-milovidov/following{/other_user}","gists_url":"https://api.github.com/users/alexey-milovidov/gists{/gist_id}","starred_url":"https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexey-milovidov/subscriptions","organizations_url":"https://api.github.com/users/alexey-milovidov/orgs","repos_url":"https://api.github.com/users/alexey-milovidov/repos","events_url":"https://api.github.com/users/alexey-milovidov/events{/privacy}","received_events_url":"https://api.github.com/users/alexey-milovidov/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-01-26T11:33:12Z","updated_at":"2022-01-26T12:19:52Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"**Use case**\r\n\r\nProvide quick answer and avoid excessive computations if the same query is requested more than once in a short period of time.\r\n\r\n**Requirements**\r\n\r\nA setting (all settings are on query level) for tuneable cache usage with three options: - don't use cache; - use cache if data exists but don't put new items into cache (passive cache usage); - use cache and put new items into it.\r\n\r\nA setting for max item size to be put in cache, in number of records and number of bytes. E.g. put results not bigger than 1 MB and not bigger than 100 000 records. It should not prevent streaming queries, e.g. we can stream data into cache, and discard its storage if it is too large.\r\n\r\nA setting to control the max lifetime of data that will be put in cache if not invalidated earlier.\r\n\r\nA setting to control what data in cache will be accepted: not older than specified time; not older than specified time after related tables were modified.\r\nNote that we will not control every possible modification of the related tables.\r\n\r\nA setting to enable or disable cache sharing per user as extra security measure. If disabled, then user will be included in the cache key.\r\n\r\nCache can be stored both in memory and in filesystem. There should be separate knobs to control the max size of each parts.\r\n\r\nData in memory is stored in a sequence of Blocks with optional compression (like in Memory tables). Data on disk is stored in files in a dedicated directory (like `query_cache`), one file per item, named with the hash of cache key (UInt128) with control on the maximum number of files. Files are placed into subdirs by first 12bit of the hash. The files are compressed (and checksummed) as usual, with lz4 by default and an option to change it with a setting.\r\n\r\nData is moved to filesystem from memory instead of eviction and put back on first access.\r\n\r\nA setting to control should we put and use result from cache if query contains non deterministic functions like `rand` or `now`.\r\n\r\nA setting to enable minimum number of query runs before the result will be put in cache. E.g. put result in cache only on second run of the same query.\r\n\r\nA setting to put the result in cache only if query was hard to run (time to first result block?).\r\n\r\nCache key should use hashed query AST or query pipeline and every setting that may affect query behavior. As it can be difficult to determine, better to simply hash all the settings.\r\n\r\nTables and columns access control is always performed before going to cache.\r\n\r\nA setting to enable or disable caching for secondary queries of distributed queries and dictionaries.\r\n\r\nCache eviction strategy can be simple LRU or it can include a priority setting to roughly balance cache usage by some proportion based on priorities.\r\n\r\nPer user limits on total usable cache size.\r\n\r\nAllow to enable cache for subqueries. Allow to enable cache of data before LIMIT by speculatively fetching more records. E.g. if user run a query with LIMIT 10, we can fetch 1000 records and then get the result for subsequent query with LIMIT 10, 10.\r\n\r\nSynchronize concurrent queries that can reuse results of each other by stealing blocks of data that are going to be put in cache.\r\n\r\nSystem commands to drop query cache.\r\n\r\nInvalidation of cache in the filesystem during server upgrade - not necessary.\r\n\r\n**Additional context**\r\n\r\nMySQL used to have query cache, but it was so terrible, that is was deprecated and finally removed.\r\n\r\nPostgreSQL does not have query cache although there are 3rd party tools for that.\r\n\r\nClickHouse cache is already available in [chproxy](https://github.com/ContentSquare/chproxy)","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34011/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34011/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34010","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34010/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34010/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34010/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/34010","id":1114893631,"node_id":"I_kwDOA5dJV85Cc-0_","number":34010,"title":"arrayCompact: higher-order ?","user":{"login":"snar","id":4403355,"node_id":"MDQ6VXNlcjQ0MDMzNTU=","avatar_url":"https://avatars.githubusercontent.com/u/4403355?v=4","gravatar_id":"","url":"https://api.github.com/users/snar","html_url":"https://github.com/snar","followers_url":"https://api.github.com/users/snar/followers","following_url":"https://api.github.com/users/snar/following{/other_user}","gists_url":"https://api.github.com/users/snar/gists{/gist_id}","starred_url":"https://api.github.com/users/snar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/snar/subscriptions","organizations_url":"https://api.github.com/users/snar/orgs","repos_url":"https://api.github.com/users/snar/repos","events_url":"https://api.github.com/users/snar/events{/privacy}","received_events_url":"https://api.github.com/users/snar/received_events","type":"User","site_admin":false},"labels":[{"id":1575085465,"node_id":"MDU6TGFiZWwxNTc1MDg1NDY1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/unexpected%20behaviour","name":"unexpected behaviour","color":"e088ca","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2022-01-26T11:05:09Z","updated_at":"2022-01-26T11:36:12Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"\r\n**Describe the unexpected behaviour**\r\n\r\nCurrent implementation of arrayCompact does not behave as other higher-order functions: it accepts lambda function as its first argument, but then it compacts array returned by lambda, not original array (see below for example).\r\n\r\n**How to reproduce**\r\n* Which ClickHouse server version to use\r\n\r\nAny modern\r\n\r\n* Queries to run that lead to unexpected result\r\n\r\nselect arrayCompact(x -> x.2 , groupArray(tuple(number, intDiv(number, 3) % 3))) from numbers(10);\r\n\r\n**Expected behavior**\r\n\r\narrayCompact shall follow normal higher-order functons way and use results of lambda function ([0,0,0,1,1,1,2,2,2,0]) to compact original array ([(0,0),(1,0),(2,0),(3,1),(4,1),(5,1),(6,2),(7,2),(8,2),(9,0)]) into [(0,0),(3,1),(6,2),(9,0)]\r\n\r\n**Additional context**\r\n\r\nUse case: timeseries (time, value) with lots of repeated values that shall be compacted into (first time, value) when value repeats.\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34010/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34010/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34006","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34006/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34006/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34006/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/34006","id":1114830893,"node_id":"I_kwDOA5dJV85Ccvgt","number":34006,"title":"Schema Inference For Freeform Text Formats","user":{"login":"alexey-milovidov","id":18581488,"node_id":"MDQ6VXNlcjE4NTgxNDg4","avatar_url":"https://avatars.githubusercontent.com/u/18581488?v=4","gravatar_id":"","url":"https://api.github.com/users/alexey-milovidov","html_url":"https://github.com/alexey-milovidov","followers_url":"https://api.github.com/users/alexey-milovidov/followers","following_url":"https://api.github.com/users/alexey-milovidov/following{/other_user}","gists_url":"https://api.github.com/users/alexey-milovidov/gists{/gist_id}","starred_url":"https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexey-milovidov/subscriptions","organizations_url":"https://api.github.com/users/alexey-milovidov/orgs","repos_url":"https://api.github.com/users/alexey-milovidov/repos","events_url":"https://api.github.com/users/alexey-milovidov/events{/privacy}","received_events_url":"https://api.github.com/users/alexey-milovidov/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-01-26T09:57:33Z","updated_at":"2022-01-26T12:43:24Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"Continuation of #14450.\r\n\r\n**Use case**\r\n\r\nParse application logs without specifying the structure.\r\nParse tabular dumps with unknown format and delimiters.\r\nExtract data from HTML tables.\r\n\r\n**Context**\r\n\r\nThis task is not well defined and there is no clear well-known solution.\r\nEvery year in every database conference there is a paper about how to solve this task.\r\nTypical solutions are tricky and error-prone. We don't pretend to be any better.\r\n\r\nSome decent implementations exists, like https://github.com/tstack/lnav\r\nThey are usually represented by a bunch of heuristics and fine tuning for special cases.\r\n\r\n**Requirements**\r\n\r\nIt should be good enough to parse newline delimited JSON, array of JSON objects and arrays,\r\nparse CSV with arbitrary delimiters including whitespaces, parse ClickHouse Pretty format automatically,\r\ndetermine if CSV contains header or not, determine optional fields in JSON,\r\ndetermine types including strings, numbers and DateTimes in various formats,\r\nparse application logs similar to ClickHouse logs,\r\nallow error recovery with sync to next record,\r\ncorrectly distinguish various escaping methods, like `\"CSV \"\"style\"\"\"` and `\"C-\\\"style\\\"\"`.\r\n\r\n**Describe the solution you'd like**\r\n\r\nFirst focus on special case when data is represented by newline delimited records.\r\nNote: it rules out CSV with header, array of JSON objects, and even TSV produced by mysqldump.\r\nBut still ok for application logs.\r\n\r\nData can be parsed with *Matchers*. A matcher can recognize and parse some data type according to some rules.\r\nExamples: parse integer; parse string in double quotes with C-style escaping; parse all the remaining bytes until end of line into a String. Also it can skip some bytes without producing any output. Examples: whitespaces; comma; punctuation characters.\r\n\r\nMatchers can be modified with *Combinators*, for example, for any matcher we can have *Optional* of it that can parse empty string.\r\nAdditional option is to structure matchers as a tree. For example, a matcher can recognize XML element, but it will require subtree of other matchers to recognize the content.\r\n\r\nMatcher also produce some score about how specific was the match. For example, successful parsing of double quoted string is better than eating the rest of the line into a string.\r\n\r\nFor every line of input data we can have possibly infinite set of ways how it can be parsed by a sequence of matchers. We should have a method to lazily iterate over this infinite set in some order that mostly correspond with the score (more specific options first).\r\n\r\nMatchers can also have partial order by generalization. For example, a matcher for floating point number can also match unsigned integers.\r\n\r\nTo recognize the structure, we can take first N (like 100) lines, and start simultaneous iteration over sets of possible sequences of matchers for every line while saving successful solutions. We can also iterate infinite number of lines with \"diagonal method\". Then we can incrementally pick solutions that are identical for every line or pick near identical solutions and generalize them, then sort possible solutions by some aggregate score.\r\n\r\n**Additional context**\r\n\r\nThis is too heavy, not sure if it will work and if it is possible to implement.\r\n\r\nThis method can recognize Dates like 2000-01-01 as a sequence of three integers. This is acceptable.\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34006/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34006/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34005","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34005/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34005/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34005/events","html_url":"https://github.com/ClickHouse/ClickHouse/pull/34005","id":1114822834,"node_id":"PR_kwDOA5dJV84xmzAY","number":34005,"title":"Supports all types of SYSTEM query ON CLUSTER clause.","user":{"login":"nicelulu","id":18606973,"node_id":"MDQ6VXNlcjE4NjA2OTcz","avatar_url":"https://avatars.githubusercontent.com/u/18606973?v=4","gravatar_id":"","url":"https://api.github.com/users/nicelulu","html_url":"https://github.com/nicelulu","followers_url":"https://api.github.com/users/nicelulu/followers","following_url":"https://api.github.com/users/nicelulu/following{/other_user}","gists_url":"https://api.github.com/users/nicelulu/gists{/gist_id}","starred_url":"https://api.github.com/users/nicelulu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nicelulu/subscriptions","organizations_url":"https://api.github.com/users/nicelulu/orgs","repos_url":"https://api.github.com/users/nicelulu/repos","events_url":"https://api.github.com/users/nicelulu/events{/privacy}","received_events_url":"https://api.github.com/users/nicelulu/received_events","type":"User","site_admin":false},"labels":[{"id":1304141686,"node_id":"MDU6TGFiZWwxMzA0MTQxNjg2","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/pr-improvement","name":"pr-improvement","color":"007700","default":false,"description":"Pull request with some product improvements"},{"id":3627025164,"node_id":"LA_kwDOA5dJV87YMAMM","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/can%20be%20tested","name":"can be tested","color":"1d76db","default":false,"description":""}],"state":"open","locked":false,"assignee":{"login":"tavplubix","id":14847450,"node_id":"MDQ6VXNlcjE0ODQ3NDUw","avatar_url":"https://avatars.githubusercontent.com/u/14847450?v=4","gravatar_id":"","url":"https://api.github.com/users/tavplubix","html_url":"https://github.com/tavplubix","followers_url":"https://api.github.com/users/tavplubix/followers","following_url":"https://api.github.com/users/tavplubix/following{/other_user}","gists_url":"https://api.github.com/users/tavplubix/gists{/gist_id}","starred_url":"https://api.github.com/users/tavplubix/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tavplubix/subscriptions","organizations_url":"https://api.github.com/users/tavplubix/orgs","repos_url":"https://api.github.com/users/tavplubix/repos","events_url":"https://api.github.com/users/tavplubix/events{/privacy}","received_events_url":"https://api.github.com/users/tavplubix/received_events","type":"User","site_admin":false},"assignees":[{"login":"tavplubix","id":14847450,"node_id":"MDQ6VXNlcjE0ODQ3NDUw","avatar_url":"https://avatars.githubusercontent.com/u/14847450?v=4","gravatar_id":"","url":"https://api.github.com/users/tavplubix","html_url":"https://github.com/tavplubix","followers_url":"https://api.github.com/users/tavplubix/followers","following_url":"https://api.github.com/users/tavplubix/following{/other_user}","gists_url":"https://api.github.com/users/tavplubix/gists{/gist_id}","starred_url":"https://api.github.com/users/tavplubix/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tavplubix/subscriptions","organizations_url":"https://api.github.com/users/tavplubix/orgs","repos_url":"https://api.github.com/users/tavplubix/repos","events_url":"https://api.github.com/users/tavplubix/events{/privacy}","received_events_url":"https://api.github.com/users/tavplubix/received_events","type":"User","site_admin":false}],"milestone":null,"comments":4,"created_at":"2022-01-26T09:48:27Z","updated_at":"2022-01-30T11:59:23Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/pulls/34005","html_url":"https://github.com/ClickHouse/ClickHouse/pull/34005","diff_url":"https://github.com/ClickHouse/ClickHouse/pull/34005.diff","patch_url":"https://github.com/ClickHouse/ClickHouse/pull/34005.patch","merged_at":null},"body":"Changelog category (leave one):\r\n- Improvement\r\n\r\n\r\n\r\nChangelog entry (a user-readable short description of the changes that goes to CHANGELOG.md):\r\n\r\nSupports all types of SYSTEM query ON CLUSTER clause.\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34005/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34005/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34004","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34004/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34004/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34004/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/34004","id":1114794400,"node_id":"I_kwDOA5dJV85Ccmmg","number":34004,"title":"Postgres odbc connection issues after upgrade to 21.12.3.32","user":{"login":"namepunk","id":14871018,"node_id":"MDQ6VXNlcjE0ODcxMDE4","avatar_url":"https://avatars.githubusercontent.com/u/14871018?v=4","gravatar_id":"","url":"https://api.github.com/users/namepunk","html_url":"https://github.com/namepunk","followers_url":"https://api.github.com/users/namepunk/followers","following_url":"https://api.github.com/users/namepunk/following{/other_user}","gists_url":"https://api.github.com/users/namepunk/gists{/gist_id}","starred_url":"https://api.github.com/users/namepunk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/namepunk/subscriptions","organizations_url":"https://api.github.com/users/namepunk/orgs","repos_url":"https://api.github.com/users/namepunk/repos","events_url":"https://api.github.com/users/namepunk/events{/privacy}","received_events_url":"https://api.github.com/users/namepunk/received_events","type":"User","site_admin":false},"labels":[{"id":1575085465,"node_id":"MDU6TGFiZWwxNTc1MDg1NDY1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/unexpected%20behaviour","name":"unexpected behaviour","color":"e088ca","default":false,"description":""}],"state":"open","locked":false,"assignee":{"login":"kssenii","id":54203879,"node_id":"MDQ6VXNlcjU0MjAzODc5","avatar_url":"https://avatars.githubusercontent.com/u/54203879?v=4","gravatar_id":"","url":"https://api.github.com/users/kssenii","html_url":"https://github.com/kssenii","followers_url":"https://api.github.com/users/kssenii/followers","following_url":"https://api.github.com/users/kssenii/following{/other_user}","gists_url":"https://api.github.com/users/kssenii/gists{/gist_id}","starred_url":"https://api.github.com/users/kssenii/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kssenii/subscriptions","organizations_url":"https://api.github.com/users/kssenii/orgs","repos_url":"https://api.github.com/users/kssenii/repos","events_url":"https://api.github.com/users/kssenii/events{/privacy}","received_events_url":"https://api.github.com/users/kssenii/received_events","type":"User","site_admin":false},"assignees":[{"login":"kssenii","id":54203879,"node_id":"MDQ6VXNlcjU0MjAzODc5","avatar_url":"https://avatars.githubusercontent.com/u/54203879?v=4","gravatar_id":"","url":"https://api.github.com/users/kssenii","html_url":"https://github.com/kssenii","followers_url":"https://api.github.com/users/kssenii/followers","following_url":"https://api.github.com/users/kssenii/following{/other_user}","gists_url":"https://api.github.com/users/kssenii/gists{/gist_id}","starred_url":"https://api.github.com/users/kssenii/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kssenii/subscriptions","organizations_url":"https://api.github.com/users/kssenii/orgs","repos_url":"https://api.github.com/users/kssenii/repos","events_url":"https://api.github.com/users/kssenii/events{/privacy}","received_events_url":"https://api.github.com/users/kssenii/received_events","type":"User","site_admin":false}],"milestone":null,"comments":2,"created_at":"2022-01-26T09:17:43Z","updated_at":"2022-01-27T08:48:40Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"After upgrade clickhouse server from  20.9.2.20 to 21.12.3.32 i have issues with postgres odbc connection.\r\nPeriodically, after 2-3 days of work, connection to postgres is lost, i see error\r\n\r\n> Received exception from server (version 21.12.3):\r\nCode: 86. DB::Exception: Received from node1:9000. DB::Exception: Received error from remote server /?connection_string=DSN%3Dinga_pg&max_block_size=65505. HTTP status code: 500 Internal Server Error, body: �std::exception. Code: 1001, type: nanodbc::database_error, e.what() = ../contrib/nanodbc/nanodbc/nanodbc.cpp:1626: 4270: no connection to the server\r\n;\r\nno connection to the server\r\n ,. (RECEIVED_ERROR_FROM_REMOTE_IO_SERVER)\r\n\r\nAfter server restart error disapeared.\r\nIf i check connection from console all is ok\r\n\r\n> isql -v inga_pg\r\n+---------------------------------------+\r\n| Connected!                            |\r\n|                                       |\r\n| sql-statement                         |\r\n| help [tablename]                      |\r\n| quit                                  |\r\n|                                       |\r\n+---------------------------------------+\r\n\r\nif i check from clickhouse i get an error until I restart the server.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34004/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34004/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34003","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34003/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34003/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34003/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/34003","id":1114789749,"node_id":"I_kwDOA5dJV85Ccld1","number":34003,"title":"when output data is large how to read","user":{"login":"AnberLu","id":15904680,"node_id":"MDQ6VXNlcjE1OTA0Njgw","avatar_url":"https://avatars.githubusercontent.com/u/15904680?v=4","gravatar_id":"","url":"https://api.github.com/users/AnberLu","html_url":"https://github.com/AnberLu","followers_url":"https://api.github.com/users/AnberLu/followers","following_url":"https://api.github.com/users/AnberLu/following{/other_user}","gists_url":"https://api.github.com/users/AnberLu/gists{/gist_id}","starred_url":"https://api.github.com/users/AnberLu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/AnberLu/subscriptions","organizations_url":"https://api.github.com/users/AnberLu/orgs","repos_url":"https://api.github.com/users/AnberLu/repos","events_url":"https://api.github.com/users/AnberLu/events{/privacy}","received_events_url":"https://api.github.com/users/AnberLu/received_events","type":"User","site_admin":false},"labels":[{"id":386401510,"node_id":"MDU6TGFiZWwzODY0MDE1MTA=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/question","name":"question","color":"bfdadc","default":true,"description":""},{"id":845267693,"node_id":"MDU6TGFiZWw4NDUyNjc2OTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/st-need-info","name":"st-need-info","color":"e5b890","default":false,"description":"We need extra data to continue"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2022-01-26T09:12:53Z","updated_at":"2022-01-26T14:42:47Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"When the output data is particularly large, how to read while writing，like  buffer Stream","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34003/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34003/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34000","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34000/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34000/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34000/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/34000","id":1114753940,"node_id":"I_kwDOA5dJV85CccuU","number":34000,"title":"Why changing nullable values to double cause  Clickhouse tables became read-only frequently?","user":{"login":"qinglin","id":1820978,"node_id":"MDQ6VXNlcjE4MjA5Nzg=","avatar_url":"https://avatars.githubusercontent.com/u/1820978?v=4","gravatar_id":"","url":"https://api.github.com/users/qinglin","html_url":"https://github.com/qinglin","followers_url":"https://api.github.com/users/qinglin/followers","following_url":"https://api.github.com/users/qinglin/following{/other_user}","gists_url":"https://api.github.com/users/qinglin/gists{/gist_id}","starred_url":"https://api.github.com/users/qinglin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/qinglin/subscriptions","organizations_url":"https://api.github.com/users/qinglin/orgs","repos_url":"https://api.github.com/users/qinglin/repos","events_url":"https://api.github.com/users/qinglin/events{/privacy}","received_events_url":"https://api.github.com/users/qinglin/received_events","type":"User","site_admin":false},"labels":[{"id":386401510,"node_id":"MDU6TGFiZWwzODY0MDE1MTA=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/question","name":"question","color":"bfdadc","default":true,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-01-26T08:30:24Z","updated_at":"2022-01-26T08:56:04Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Hi, Guys, I have been working with clickhouse for a while and clickhouse is running pretty well on our prod environment, but last week, I tried to change the value of 5 columns from null to a double value, and the affected rows are about 3600, the sql is like `'alter table XXX update columnA = 1.11 where timestamp = '2022-01-01 08:00:00'` (The original columnA value is null)\r\n\r\nThen wired things happen, all the prod clickhouse tables became read-only mode, I checked the log and found the zookeeper is complaining about out of memory, after I increased the jvm of zookeeper, the tables are still kept read-only mode, so I checked the zookeeper nodes and found a `mutation znode` containing huge amount of data in the table I tried to do mutation operations. After I deleted the mutation znode, clickhouse gradually became stable but still slow. \r\n\r\nIt's after I checked the replication-queue table in system database, and delete the /queue znode in zookeeper, the clickhouse insert and read speed became much faster, I think it's because too much merging operations stuck in the queue made clickhouse insertion became much slower. \r\n\r\nSo finally our clickhouse is working well again now in the prod environment, but I still did not get it, why my mutation operations of changing null values to double would cause this tragedy? \r\n\r\nDoes anyone has any idea about this issue? \r\n\r\n![image](https://user-images.githubusercontent.com/1820978/151128834-8b1f5814-0504-46f6-a181-994cc61452b0.png)\r\nThe zookeeper queue znode causing insertion very slow\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34000/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/34000/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33996","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33996/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33996/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33996/events","html_url":"https://github.com/ClickHouse/ClickHouse/pull/33996","id":1114577041,"node_id":"PR_kwDOA5dJV84xmAuJ","number":33996,"title":"reduce signal_pipe_buf_size ","user":{"login":"save-my-heart","id":20410503,"node_id":"MDQ6VXNlcjIwNDEwNTAz","avatar_url":"https://avatars.githubusercontent.com/u/20410503?v=4","gravatar_id":"","url":"https://api.github.com/users/save-my-heart","html_url":"https://github.com/save-my-heart","followers_url":"https://api.github.com/users/save-my-heart/followers","following_url":"https://api.github.com/users/save-my-heart/following{/other_user}","gists_url":"https://api.github.com/users/save-my-heart/gists{/gist_id}","starred_url":"https://api.github.com/users/save-my-heart/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/save-my-heart/subscriptions","organizations_url":"https://api.github.com/users/save-my-heart/orgs","repos_url":"https://api.github.com/users/save-my-heart/repos","events_url":"https://api.github.com/users/save-my-heart/events{/privacy}","received_events_url":"https://api.github.com/users/save-my-heart/received_events","type":"User","site_admin":false},"labels":[{"id":1304141686,"node_id":"MDU6TGFiZWwxMzA0MTQxNjg2","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/pr-improvement","name":"pr-improvement","color":"007700","default":false,"description":"Pull request with some product improvements"},{"id":3627025164,"node_id":"LA_kwDOA5dJV87YMAMM","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/can%20be%20tested","name":"can be tested","color":"1d76db","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2022-01-26T03:02:57Z","updated_at":"2022-01-29T22:29:02Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/pulls/33996","html_url":"https://github.com/ClickHouse/ClickHouse/pull/33996","diff_url":"https://github.com/ClickHouse/ClickHouse/pull/33996.diff","patch_url":"https://github.com/ClickHouse/ClickHouse/pull/33996.patch","merged_at":null},"body":"Changelog category (leave one):\r\n- Improvement\r\n\r\n\r\nChangelog entry (a user-readable short description of the changes that goes to CHANGELOG.md):\r\n\r\n- ensure the `signal_pipe_buf_size` is <= `PIPE_BUF`.\r\n- extract query_id & query from `ThreadStatus` if possible.\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33996/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33996/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33994","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33994/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33994/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33994/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33994","id":1114373179,"node_id":"I_kwDOA5dJV85Ca_w7","number":33994,"title":"Upgrade triggers old mutations","user":{"login":"electrical","id":271677,"node_id":"MDQ6VXNlcjI3MTY3Nw==","avatar_url":"https://avatars.githubusercontent.com/u/271677?v=4","gravatar_id":"","url":"https://api.github.com/users/electrical","html_url":"https://github.com/electrical","followers_url":"https://api.github.com/users/electrical/followers","following_url":"https://api.github.com/users/electrical/following{/other_user}","gists_url":"https://api.github.com/users/electrical/gists{/gist_id}","starred_url":"https://api.github.com/users/electrical/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/electrical/subscriptions","organizations_url":"https://api.github.com/users/electrical/orgs","repos_url":"https://api.github.com/users/electrical/repos","events_url":"https://api.github.com/users/electrical/events{/privacy}","received_events_url":"https://api.github.com/users/electrical/received_events","type":"User","site_admin":false},"labels":[{"id":1575085465,"node_id":"MDU6TGFiZWwxNTc1MDg1NDY1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/unexpected%20behaviour","name":"unexpected behaviour","color":"e088ca","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2022-01-25T21:19:36Z","updated_at":"2022-01-28T16:18:18Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"**Describe the unexpected behaviour**\r\nWe recently upgraded from 21.3.14.1 to 21.8.13.6\r\nAfter the upgrade one of our nodes ( main node ) suddenly wants to run a mutation that was run over a week ago.\r\nIn the hopes to solve it we created a missing temporary table for that mutation and now it wants to run a mutation that's a month old.\r\n\r\nWe have a 5 node setup existing out of 3 clusters. main single node which contains all the data and 2 clusters each having 2 nodes which replicate data from the main node.\r\n\r\nIts unclear why Clickhouse suddenly wants to run old migrations that were finished successfully.\r\nAlso, the error is continues and fills up the logfile quite fast.\r\n\r\n**Error message and/or stacktrace**\r\nhttps://gist.github.com/electrical/339c47a51f0fe51771362b16ddde5c54\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33994/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33994/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33991","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33991/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33991/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33991/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33991","id":1114261225,"node_id":"I_kwDOA5dJV85Cakbp","number":33991,"title":"Integrate h3.polyfill ","user":{"login":"dchimeno","id":36852967,"node_id":"MDQ6VXNlcjM2ODUyOTY3","avatar_url":"https://avatars.githubusercontent.com/u/36852967?v=4","gravatar_id":"","url":"https://api.github.com/users/dchimeno","html_url":"https://github.com/dchimeno","followers_url":"https://api.github.com/users/dchimeno/followers","following_url":"https://api.github.com/users/dchimeno/following{/other_user}","gists_url":"https://api.github.com/users/dchimeno/gists{/gist_id}","starred_url":"https://api.github.com/users/dchimeno/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dchimeno/subscriptions","organizations_url":"https://api.github.com/users/dchimeno/orgs","repos_url":"https://api.github.com/users/dchimeno/repos","events_url":"https://api.github.com/users/dchimeno/events{/privacy}","received_events_url":"https://api.github.com/users/dchimeno/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-01-25T19:09:24Z","updated_at":"2022-01-25T19:09:24Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"\r\n**Use case**\r\n\r\n> Being able to use h3.polyfill https://h3geo.org/docs/api/regions/#polyfill \r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33991/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33991/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33989","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33989/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33989/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33989/events","html_url":"https://github.com/ClickHouse/ClickHouse/pull/33989","id":1113945448,"node_id":"PR_kwDOA5dJV84xj81W","number":33989,"title":"Low Cardinality returns different types for equal functions","user":{"login":"varadarajkumar","id":65994812,"node_id":"MDQ6VXNlcjY1OTk0ODEy","avatar_url":"https://avatars.githubusercontent.com/u/65994812?v=4","gravatar_id":"","url":"https://api.github.com/users/varadarajkumar","html_url":"https://github.com/varadarajkumar","followers_url":"https://api.github.com/users/varadarajkumar/followers","following_url":"https://api.github.com/users/varadarajkumar/following{/other_user}","gists_url":"https://api.github.com/users/varadarajkumar/gists{/gist_id}","starred_url":"https://api.github.com/users/varadarajkumar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/varadarajkumar/subscriptions","organizations_url":"https://api.github.com/users/varadarajkumar/orgs","repos_url":"https://api.github.com/users/varadarajkumar/repos","events_url":"https://api.github.com/users/varadarajkumar/events{/privacy}","received_events_url":"https://api.github.com/users/varadarajkumar/received_events","type":"User","site_admin":false},"labels":[{"id":1876999755,"node_id":"MDU6TGFiZWwxODc2OTk5NzU1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/pr-not-for-changelog","name":"pr-not-for-changelog","color":"007700","default":false,"description":"This PR should not be mentioned in the changelog"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2022-01-25T14:19:08Z","updated_at":"2022-01-28T20:52:58Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/pulls/33989","html_url":"https://github.com/ClickHouse/ClickHouse/pull/33989","diff_url":"https://github.com/ClickHouse/ClickHouse/pull/33989.diff","patch_url":"https://github.com/ClickHouse/ClickHouse/pull/33989.patch","merged_at":null},"body":"Changelog category (leave one):\r\n- Not for changelog\r\n\r\nChangelog entry (a user-readable short description of the changes that goes to CHANGELOG.md):\r\n\r\nIn ClickHouse, Since equals function in Clickhouse could return both LowCardinality(UInt8) and UInt8 type result depending on the data type in the equals function, There is chance  sometimes run into type conversion errors.\r\n\r\nProblem Description: The result of same functions giving different outputs. \r\nExample : \r\nequals(toLowCardinality('foo') , 'foo') is returning LowCardinality(UInt8)\r\nequals('foo', 'foo') is returning UInt8.\r\nwhich is inconsistent.\r\n\r\nSolution:\r\nTo address this inconsistency, checking whether either of the argument is LowCardinality type and passing to equals function and if they are different then changing them to same type. if both are LowCardinality type, CH works as usual. Also it wont have any negative impact on other dictionary types as the condition is very specific two equals function.\r\n\r\ni think Clickhouse should use LowCardinality(UInt8) in the underlying implementation for better performance, but the type of the final result should be consistent datatype like UInt8.\r\n\r\nI have verified below scenarios and giving consistent result with the fix:\r\n\r\nDesc table(select 'a'='a') returning UInt8\r\nDesc table(select toLowCardinality('a')='a') returning UInt8\r\nSELECT toTypeName(if(toLowCardinality('a') LIKE 'a', 1, 2)) returns UInt8\r\nSELECT toTypeName(if('a' LIKE 'a', 1, 2)) returning UInt8\r\n\r\nThere is an issue raised for the same:  https://github.com/ClickHouse/ClickHouse/issues/6432\r\n\r\n> Information about CI checks: https://clickhouse.tech/docs/en/development/continuous-integration/\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33989/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33989/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33985","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33985/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33985/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33985/events","html_url":"https://github.com/ClickHouse/ClickHouse/pull/33985","id":1113821062,"node_id":"PR_kwDOA5dJV84xjigm","number":33985,"title":"Improve backup and restore","user":{"login":"vitlibar","id":45142681,"node_id":"MDQ6VXNlcjQ1MTQyNjgx","avatar_url":"https://avatars.githubusercontent.com/u/45142681?v=4","gravatar_id":"","url":"https://api.github.com/users/vitlibar","html_url":"https://github.com/vitlibar","followers_url":"https://api.github.com/users/vitlibar/followers","following_url":"https://api.github.com/users/vitlibar/following{/other_user}","gists_url":"https://api.github.com/users/vitlibar/gists{/gist_id}","starred_url":"https://api.github.com/users/vitlibar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vitlibar/subscriptions","organizations_url":"https://api.github.com/users/vitlibar/orgs","repos_url":"https://api.github.com/users/vitlibar/repos","events_url":"https://api.github.com/users/vitlibar/events{/privacy}","received_events_url":"https://api.github.com/users/vitlibar/received_events","type":"User","site_admin":false},"labels":[{"id":1211037461,"node_id":"MDU6TGFiZWwxMjExMDM3NDYx","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/do%20not%20test","name":"do not test","color":"e99695","default":false,"description":"disable testing on pull request"},{"id":1304141686,"node_id":"MDU6TGFiZWwxMzA0MTQxNjg2","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/pr-improvement","name":"pr-improvement","color":"007700","default":false,"description":"Pull request with some product improvements"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-01-25T12:19:47Z","updated_at":"2022-01-29T10:48:33Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":true,"pull_request":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/pulls/33985","html_url":"https://github.com/ClickHouse/ClickHouse/pull/33985","diff_url":"https://github.com/ClickHouse/ClickHouse/pull/33985.diff","patch_url":"https://github.com/ClickHouse/ClickHouse/pull/33985.patch","merged_at":null},"body":"Changelog category:\r\n- Improvement\r\n\r\nChangelog entry:\r\nTODO","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33985/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33985/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33982","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33982/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33982/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33982/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33982","id":1113751652,"node_id":"I_kwDOA5dJV85CYoBk","number":33982,"title":"startsWith function for arrays","user":{"login":"altvod","id":10007896,"node_id":"MDQ6VXNlcjEwMDA3ODk2","avatar_url":"https://avatars.githubusercontent.com/u/10007896?v=4","gravatar_id":"","url":"https://api.github.com/users/altvod","html_url":"https://github.com/altvod","followers_url":"https://api.github.com/users/altvod/followers","following_url":"https://api.github.com/users/altvod/following{/other_user}","gists_url":"https://api.github.com/users/altvod/gists{/gist_id}","starred_url":"https://api.github.com/users/altvod/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/altvod/subscriptions","organizations_url":"https://api.github.com/users/altvod/orgs","repos_url":"https://api.github.com/users/altvod/repos","events_url":"https://api.github.com/users/altvod/events{/privacy}","received_events_url":"https://api.github.com/users/altvod/received_events","type":"User","site_admin":false},"labels":[{"id":386401508,"node_id":"MDU6TGFiZWwzODY0MDE1MDg=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/help%20wanted","name":"help wanted","color":"128A0C","default":true,"description":null},{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":1507871495,"node_id":"MDU6TGFiZWwxNTA3ODcxNDk1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/st-community-taken","name":"st-community-taken","color":"e5b890","default":false,"description":"External developer is working on that"}],"state":"open","locked":false,"assignee":{"login":"usurai","id":9886192,"node_id":"MDQ6VXNlcjk4ODYxOTI=","avatar_url":"https://avatars.githubusercontent.com/u/9886192?v=4","gravatar_id":"","url":"https://api.github.com/users/usurai","html_url":"https://github.com/usurai","followers_url":"https://api.github.com/users/usurai/followers","following_url":"https://api.github.com/users/usurai/following{/other_user}","gists_url":"https://api.github.com/users/usurai/gists{/gist_id}","starred_url":"https://api.github.com/users/usurai/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/usurai/subscriptions","organizations_url":"https://api.github.com/users/usurai/orgs","repos_url":"https://api.github.com/users/usurai/repos","events_url":"https://api.github.com/users/usurai/events{/privacy}","received_events_url":"https://api.github.com/users/usurai/received_events","type":"User","site_admin":false},"assignees":[{"login":"usurai","id":9886192,"node_id":"MDQ6VXNlcjk4ODYxOTI=","avatar_url":"https://avatars.githubusercontent.com/u/9886192?v=4","gravatar_id":"","url":"https://api.github.com/users/usurai","html_url":"https://github.com/usurai","followers_url":"https://api.github.com/users/usurai/followers","following_url":"https://api.github.com/users/usurai/following{/other_user}","gists_url":"https://api.github.com/users/usurai/gists{/gist_id}","starred_url":"https://api.github.com/users/usurai/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/usurai/subscriptions","organizations_url":"https://api.github.com/users/usurai/orgs","repos_url":"https://api.github.com/users/usurai/repos","events_url":"https://api.github.com/users/usurai/events{/privacy}","received_events_url":"https://api.github.com/users/usurai/received_events","type":"User","site_admin":false}],"milestone":null,"comments":5,"created_at":"2022-01-25T11:09:42Z","updated_at":"2022-01-26T08:09:03Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Support for arrays in `startsWith` (and, maybe, `endsWith`)\r\n\r\n**Use case**\r\n\r\nWould be quite useful for handling tree-like structured data where the node paths are specified as arrays of names or IDs.\r\n\r\n**Describe the solution you'd like**\r\n\r\nThe desired behavior would be like this:\r\n```\r\nstartsWith([1, 2, 3, 4], [1, 2])  -- true (1)\r\nstartsWith(['qwe', 'rty', 'ui', 'op'], ['qwe', 'rty'])  -- true (1)\r\nstartsWith([1, 2, 3, 4], [2, 4])  -- false (0)\r\nstartsWith([1, 1, 2, 2], [1, 2])  -- false (0)\r\n```\r\n\r\nAnd similarly, for `endsWith`\r\n\r\n**Describe alternatives you've considered**\r\n\r\nSomething like `arraySlice(first, 1, length(second)) = second`\r\n\r\nBut `startsWith` would be much more readable, harder to make a mistake in and, probably, can be better optimized (i.e. might not have to create new objects like `arraySlice` does)","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33982/reactions","total_count":4,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":3,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33982/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33965","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33965/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33965/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33965/events","html_url":"https://github.com/ClickHouse/ClickHouse/pull/33965","id":1113202682,"node_id":"PR_kwDOA5dJV84xhj5h","number":33965,"title":"Support `flatten_nested=0` in table function `generateRandom`","user":{"login":"CurtizJ","id":20361854,"node_id":"MDQ6VXNlcjIwMzYxODU0","avatar_url":"https://avatars.githubusercontent.com/u/20361854?v=4","gravatar_id":"","url":"https://api.github.com/users/CurtizJ","html_url":"https://github.com/CurtizJ","followers_url":"https://api.github.com/users/CurtizJ/followers","following_url":"https://api.github.com/users/CurtizJ/following{/other_user}","gists_url":"https://api.github.com/users/CurtizJ/gists{/gist_id}","starred_url":"https://api.github.com/users/CurtizJ/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/CurtizJ/subscriptions","organizations_url":"https://api.github.com/users/CurtizJ/orgs","repos_url":"https://api.github.com/users/CurtizJ/repos","events_url":"https://api.github.com/users/CurtizJ/events{/privacy}","received_events_url":"https://api.github.com/users/CurtizJ/received_events","type":"User","site_admin":false},"labels":[{"id":1304141686,"node_id":"MDU6TGFiZWwxMzA0MTQxNjg2","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/pr-improvement","name":"pr-improvement","color":"007700","default":false,"description":"Pull request with some product improvements"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-01-24T22:20:14Z","updated_at":"2022-01-24T23:40:49Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"draft":true,"pull_request":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/pulls/33965","html_url":"https://github.com/ClickHouse/ClickHouse/pull/33965","diff_url":"https://github.com/ClickHouse/ClickHouse/pull/33965.diff","patch_url":"https://github.com/ClickHouse/ClickHouse/pull/33965.patch","merged_at":null},"body":"Changelog category (leave one):\r\n- Improvement\r\n\r\nChangelog entry (a user-readable short description of the changes that goes to CHANGELOG.md):\r\nSupport `flatten_nested=0` in table function `generateRandom` to generate columns of type `Nested` with multiple levels of nested.\r\n\r\nCloses #33836.\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33965/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33965/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33964","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33964/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33964/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33964/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33964","id":1113167548,"node_id":"I_kwDOA5dJV85CWZa8","number":33964,"title":"Wrong s3 object content type for large files","user":{"login":"den-crane","id":19737682,"node_id":"MDQ6VXNlcjE5NzM3Njgy","avatar_url":"https://avatars.githubusercontent.com/u/19737682?v=4","gravatar_id":"","url":"https://api.github.com/users/den-crane","html_url":"https://github.com/den-crane","followers_url":"https://api.github.com/users/den-crane/followers","following_url":"https://api.github.com/users/den-crane/following{/other_user}","gists_url":"https://api.github.com/users/den-crane/gists{/gist_id}","starred_url":"https://api.github.com/users/den-crane/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/den-crane/subscriptions","organizations_url":"https://api.github.com/users/den-crane/orgs","repos_url":"https://api.github.com/users/den-crane/repos","events_url":"https://api.github.com/users/den-crane/events{/privacy}","received_events_url":"https://api.github.com/users/den-crane/received_events","type":"User","site_admin":false},"labels":[{"id":1575085465,"node_id":"MDU6TGFiZWwxNTc1MDg1NDY1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/unexpected%20behaviour","name":"unexpected behaviour","color":"e088ca","default":false,"description":""},{"id":2020016497,"node_id":"MDU6TGFiZWwyMDIwMDE2NDk3","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-s3","name":"comp-s3","color":"b5bcff","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-01-24T21:37:36Z","updated_at":"2022-01-24T22:32:40Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"body":"Connected to ClickHouse server version 21.13.1 revision 54455.\r\n\r\n```\r\nINSERT INTO FUNCTION s3('https://s3.us-east-1.amazonaws.com/dzhuravlev/small_file.xml.gz', 'XML', \r\n'number UInt64', 'gz') SELECT * FROM numbers(10);\r\n\r\nINSERT INTO FUNCTION s3('https://s3.us-east-1.amazonaws.com/dzhuravlev/large_file.xml.gz','XML', \r\n'number UInt64','gz') SELECT * from numbers(1e8);\r\n\r\naws s3api head-object --bucket  dzhuravlev  --key small_file.xml.gz\r\n{\r\n    \"AcceptRanges\": \"bytes\",\r\n    \"LastModified\": \"Mon, 24 Jan 2022 21:28:50 GMT\",\r\n    \"ContentLength\": 262,\r\n    \"ETag\": \"\\\"667796620f85cd6bad6957ea01d29548\\\"\",\r\n    \"ContentType\": \"binary/octet-stream\",\r\n    \"Metadata\": {}\r\n}\r\n\r\naws s3api head-object --bucket  dzhuravlev --key large_file.xml.gz\r\n{\r\n    \"AcceptRanges\": \"bytes\",\r\n    \"LastModified\": \"Mon, 24 Jan 2022 21:29:08 GMT\",\r\n    \"ContentLength\": 261909920,\r\n    \"ETag\": \"\\\"829dbc9697bcffd1528e8e6f55c564f4-8\\\"\",\r\n    \"ContentType\": \"application/xml\",                      ---<<<<<<<<<<<-- expected \"ContentType\": \"binary/octet-stream\",\r\n    \"Metadata\": {}\r\n}\r\n```\r\n\r\nSo it seems that if the object size is bigger than 32MB then Clickhouse sets the wrong ContentType `application/xml` instead of `binary/octet-stream`.\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33964/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33964/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33961","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33961/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33961/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33961/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33961","id":1113023542,"node_id":"I_kwDOA5dJV85CV2Q2","number":33961,"title":"parallel_view_processing=0 is does not work with INSERT INTO table VALUES","user":{"login":"Algunenano","id":664253,"node_id":"MDQ6VXNlcjY2NDI1Mw==","avatar_url":"https://avatars.githubusercontent.com/u/664253?v=4","gravatar_id":"","url":"https://api.github.com/users/Algunenano","html_url":"https://github.com/Algunenano","followers_url":"https://api.github.com/users/Algunenano/followers","following_url":"https://api.github.com/users/Algunenano/following{/other_user}","gists_url":"https://api.github.com/users/Algunenano/gists{/gist_id}","starred_url":"https://api.github.com/users/Algunenano/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Algunenano/subscriptions","organizations_url":"https://api.github.com/users/Algunenano/orgs","repos_url":"https://api.github.com/users/Algunenano/repos","events_url":"https://api.github.com/users/Algunenano/events{/privacy}","received_events_url":"https://api.github.com/users/Algunenano/received_events","type":"User","site_admin":false},"labels":[{"id":3260776666,"node_id":"MDU6TGFiZWwzMjYwNzc2NjY2","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/potential%20bug","name":"potential bug","color":"ffc080","default":false,"description":"To be reviewed by developers and confirmed/rejected."}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-01-24T18:59:51Z","updated_at":"2022-01-24T19:00:21Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Comes from https://github.com/ClickHouse/ClickHouse/pull/33951#discussion_r791027950\r\n\r\n```\r\nCREATE TABLE a (a Int64) ENGINE=Memory;\r\nCREATE TABLE b (a Int64) ENGINE=Memory;\r\nCREATE MATERIALIZED VIEW mv1 TO b AS Select sleep(1) as a FROM a;\r\nCREATE MATERIALIZED VIEW mv2 TO b AS Select sleep(1) as a FROM a;\r\nCREATE MATERIALIZED VIEW mv3 TO b AS Select sleep(1) as a FROM a;\r\nCREATE MATERIALIZED VIEW mv4 TO b AS Select sleep(1) as a FROM a;\r\nCREATE MATERIALIZED VIEW mv5 TO b AS Select sleep(1) as a FROM a;\r\nCREATE MATERIALIZED VIEW mv6 TO b AS Select sleep(1) as a FROM a;\r\nCREATE MATERIALIZED VIEW mv7 TO b AS Select sleep(1) as a FROM a;\r\nCREATE MATERIALIZED VIEW mv8 TO b AS Select sleep(1) as a FROM a;\r\nCREATE MATERIALIZED VIEW mv9 TO b AS Select sleep(1) as a FROM a;\r\nCREATE MATERIALIZED VIEW mv10 TO b AS Select sleep(1) as a FROM a;\r\n```\r\n\r\n```\r\nINSERT INTO a SELECT * FROM system.one;\r\n```\r\nTakes 10 seconds as expected.\r\n\r\n```\r\nINSERT INTO a VALUES(1);\r\n```\r\nTakes 1 second, which is unexpected and means that the MVs are being executed in parallel even though `parallel_view_processing == 0`.\r\n\r\nFails for 21.11+","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33961/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33961/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33958","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33958/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33958/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33958/events","html_url":"https://github.com/ClickHouse/ClickHouse/pull/33958","id":1112900366,"node_id":"PR_kwDOA5dJV84xgkUI","number":33958,"title":"Scalar cache improvements","user":{"login":"Algunenano","id":664253,"node_id":"MDQ6VXNlcjY2NDI1Mw==","avatar_url":"https://avatars.githubusercontent.com/u/664253?v=4","gravatar_id":"","url":"https://api.github.com/users/Algunenano","html_url":"https://github.com/Algunenano","followers_url":"https://api.github.com/users/Algunenano/followers","following_url":"https://api.github.com/users/Algunenano/following{/other_user}","gists_url":"https://api.github.com/users/Algunenano/gists{/gist_id}","starred_url":"https://api.github.com/users/Algunenano/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Algunenano/subscriptions","organizations_url":"https://api.github.com/users/Algunenano/orgs","repos_url":"https://api.github.com/users/Algunenano/repos","events_url":"https://api.github.com/users/Algunenano/events{/privacy}","received_events_url":"https://api.github.com/users/Algunenano/received_events","type":"User","site_admin":false},"labels":[{"id":1309683578,"node_id":"MDU6TGFiZWwxMzA5NjgzNTc4","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/pr-performance","name":"pr-performance","color":"007700","default":false,"description":"Pull request with some performance improvements"}],"state":"open","locked":false,"assignee":{"login":"KochetovNicolai","id":4092911,"node_id":"MDQ6VXNlcjQwOTI5MTE=","avatar_url":"https://avatars.githubusercontent.com/u/4092911?v=4","gravatar_id":"","url":"https://api.github.com/users/KochetovNicolai","html_url":"https://github.com/KochetovNicolai","followers_url":"https://api.github.com/users/KochetovNicolai/followers","following_url":"https://api.github.com/users/KochetovNicolai/following{/other_user}","gists_url":"https://api.github.com/users/KochetovNicolai/gists{/gist_id}","starred_url":"https://api.github.com/users/KochetovNicolai/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/KochetovNicolai/subscriptions","organizations_url":"https://api.github.com/users/KochetovNicolai/orgs","repos_url":"https://api.github.com/users/KochetovNicolai/repos","events_url":"https://api.github.com/users/KochetovNicolai/events{/privacy}","received_events_url":"https://api.github.com/users/KochetovNicolai/received_events","type":"User","site_admin":false},"assignees":[{"login":"KochetovNicolai","id":4092911,"node_id":"MDQ6VXNlcjQwOTI5MTE=","avatar_url":"https://avatars.githubusercontent.com/u/4092911?v=4","gravatar_id":"","url":"https://api.github.com/users/KochetovNicolai","html_url":"https://github.com/KochetovNicolai","followers_url":"https://api.github.com/users/KochetovNicolai/followers","following_url":"https://api.github.com/users/KochetovNicolai/following{/other_user}","gists_url":"https://api.github.com/users/KochetovNicolai/gists{/gist_id}","starred_url":"https://api.github.com/users/KochetovNicolai/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/KochetovNicolai/subscriptions","organizations_url":"https://api.github.com/users/KochetovNicolai/orgs","repos_url":"https://api.github.com/users/KochetovNicolai/repos","events_url":"https://api.github.com/users/KochetovNicolai/events{/privacy}","received_events_url":"https://api.github.com/users/KochetovNicolai/received_events","type":"User","site_admin":false}],"milestone":null,"comments":6,"created_at":"2022-01-24T16:54:13Z","updated_at":"2022-01-28T13:47:58Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/pulls/33958","html_url":"https://github.com/ClickHouse/ClickHouse/pull/33958","diff_url":"https://github.com/ClickHouse/ClickHouse/pull/33958.diff","patch_url":"https://github.com/ClickHouse/ClickHouse/pull/33958.patch","merged_at":null},"body":"Changelog category (leave one):\r\n- Performance Improvement\r\n\r\nChangelog entry (a user-readable short description of the changes that goes to CHANGELOG.md):\r\n- Adds profile events (`ScalarSubqueries*`) to monitor the scalar subquery cache. These are mostly useful for debugging purposes.\r\n- Fixes a bug where `ASTSelectQuery::clone()` was returning children in different order. This improves the hit ratio of the scalar cache with global CTEs.\r\n- Reworks and reintroduces the scalar cache to MV execution. This was buggy and was partially removed in 22.1 but it was still possible to get incorrect results even then. Now each MV block has a local cache for the scalar subqueries that use the source table and share a global cache for those subqueries that don't.\r\n\r\n> Information about CI checks: https://clickhouse.tech/docs/en/development/continuous-integration/\r\n\r\nTagging this as a performance improvement since the initial idea was to recover the scalar cache in MVs (that I removed in https://github.com/ClickHouse/ClickHouse/pull/32811) but along the way I found and fixed several bugs in the scalar cache itself that I've fixed it here.\r\n\r\nIn terms of reintroducing properly that scalar cache to MVs it does so by:\r\n- `IInterpreterUnionOrSelectQuery` now has a value to mark if the query is using the context view source for anything. This is necessary because we want to know if we can cache the value of the scalar subquery forever or just in a per executed block basis.\r\n- `ExecuteScalarSubqueriesMatcher::data` now have 2 sets of scalar caches. The normal one (independent from views) and a local one (that uses views).\r\n- `ExecuteScalarSubqueriesMatcher` visitor will now first check it's local cache, then the normal cache and, if both miss and we know **the query is not using a block view** (i.e MV execution), then it will check the context cache. If it fails to find anything cached then it will generate the block normally and add it to either the normal cache or the local cache (depending on whether it uses a view source or not). Later on, the `InterpreterSelectQuery` will push the normal scalars to the context too so they can be shared. This way we get independent scalars cached for all rows in a MV and dependent scalars cached only for the rows of the block that was used to generate them. Seems like a better situation than pre-22.1 were everything was cached, or 22.1 where nothing was cached. \r\n\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33958/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33958/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33955","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33955/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33955/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33955/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33955","id":1112815625,"node_id":"I_kwDOA5dJV85CVDgJ","number":33955,"title":"External dictionary enhancements for source: HTTP and layout: Direct","user":{"login":"wedi-dev","id":5107123,"node_id":"MDQ6VXNlcjUxMDcxMjM=","avatar_url":"https://avatars.githubusercontent.com/u/5107123?v=4","gravatar_id":"","url":"https://api.github.com/users/wedi-dev","html_url":"https://github.com/wedi-dev","followers_url":"https://api.github.com/users/wedi-dev/followers","following_url":"https://api.github.com/users/wedi-dev/following{/other_user}","gists_url":"https://api.github.com/users/wedi-dev/gists{/gist_id}","starred_url":"https://api.github.com/users/wedi-dev/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wedi-dev/subscriptions","organizations_url":"https://api.github.com/users/wedi-dev/orgs","repos_url":"https://api.github.com/users/wedi-dev/repos","events_url":"https://api.github.com/users/wedi-dev/events{/privacy}","received_events_url":"https://api.github.com/users/wedi-dev/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":{"login":"kitaisreal","id":22458333,"node_id":"MDQ6VXNlcjIyNDU4MzMz","avatar_url":"https://avatars.githubusercontent.com/u/22458333?v=4","gravatar_id":"","url":"https://api.github.com/users/kitaisreal","html_url":"https://github.com/kitaisreal","followers_url":"https://api.github.com/users/kitaisreal/followers","following_url":"https://api.github.com/users/kitaisreal/following{/other_user}","gists_url":"https://api.github.com/users/kitaisreal/gists{/gist_id}","starred_url":"https://api.github.com/users/kitaisreal/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kitaisreal/subscriptions","organizations_url":"https://api.github.com/users/kitaisreal/orgs","repos_url":"https://api.github.com/users/kitaisreal/repos","events_url":"https://api.github.com/users/kitaisreal/events{/privacy}","received_events_url":"https://api.github.com/users/kitaisreal/received_events","type":"User","site_admin":false},"assignees":[{"login":"kitaisreal","id":22458333,"node_id":"MDQ6VXNlcjIyNDU4MzMz","avatar_url":"https://avatars.githubusercontent.com/u/22458333?v=4","gravatar_id":"","url":"https://api.github.com/users/kitaisreal","html_url":"https://github.com/kitaisreal","followers_url":"https://api.github.com/users/kitaisreal/followers","following_url":"https://api.github.com/users/kitaisreal/following{/other_user}","gists_url":"https://api.github.com/users/kitaisreal/gists{/gist_id}","starred_url":"https://api.github.com/users/kitaisreal/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kitaisreal/subscriptions","organizations_url":"https://api.github.com/users/kitaisreal/orgs","repos_url":"https://api.github.com/users/kitaisreal/repos","events_url":"https://api.github.com/users/kitaisreal/events{/privacy}","received_events_url":"https://api.github.com/users/kitaisreal/received_events","type":"User","site_admin":false}],"milestone":null,"comments":7,"created_at":"2022-01-24T15:45:47Z","updated_at":"2022-01-28T08:45:32Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Clickhouse external dictionaries are very powerful and I was wondering if they can be even more powerful.\r\n\r\nBackground: we have a project where we need to connect different types of data from various sources. We have tested using DBMS sources of Dictionaries but we need more flexibility and because of the sizes of external storages we cannot cache data in RAM of Clickhouse machines. That's why we prepared POC of the solution using Source HTTP and layout Direct, which looks very promising. I decided to ask on Telegram if anybody would be also interested in those ideas and got some attention, so here is the issue where I hope we can discuss about them.\r\n\r\n**I want to emphasise that we focus only on HTTP Source and Direct Layout scenario - some of the ideas probably can fit to other scenarios, but here let's try not to discuss them.**\r\n\r\nGenerally speaking we would like to propose making HTTP Source with Direct Layout as flexible as possible. So we could attach high performance API which would deliver data from any source implemented in the API. It could even be single HTTP Dictionary which could return any data you actually need.\r\n\r\nHere are the ideas:\r\n\r\n1. HTTP source with Direct layout querying only requested attribute - now it asks for whole row (every attribute)\r\n\r\nThis would optimise performance of cases where Dictionary has many attributes - they would not be fetched unnecessarily.\r\n\r\n2. dynamic attributes for direct layout - so you do not need to specify structure but can ask for any attribute\r\n\r\nThis would be also a game changer. It could be used in other sources too. We would have ability to attach high performance application as HTTP source and ask for any attribute - inner routing of the application could even understand where different attributes are stored, so we could use single Dictionary for returning data from eg. Aerospike or FoundationDB according to requested attribute.\r\nIn case of missing attribute setting or parameter for default value.\r\n\r\n3. remove the constraint to use only UInt64 as primary_key for HTTP Source with Direct Layout - any String or Number should be accepted\r\n\r\nThis would make it easier to adopt any existing source as a Dictionary without the need of hashing column to UInt64 and preparing source with matching Hashes.\r\n\r\n3. some way to understand/debug use of external dictionaries especially with HTTP source and Direct layout \r\n\r\nMaking a query in some debug mode we would like to get a summary of how many requests where made by the Dictionary and may be how many different keys were asked. Now it's hard to tell if query is making requests to the Dictionary for every row if it's used in where condition with other conditions, or it's optimised to query the Dict only if other nonDict conditions are met - it's only one case. \r\nIt would be great if the query_id where in the HTTP request so may be we could calculate some stats in the application.\r\n\r\n4. settings for HTTP source and Direct layout - which would guarantee more that the query will succeed than the speed\r\n\r\nAssume we have over 100TB of data with 500 mln users having different attributes - we would like be able to query whole set using Dictionary HTTP with Direct layout, so that:\r\n- query would eventually end with success taking as much time as needed\r\n- query would make requests to HTTP source through the dictionary as needed but respecting some throttling\r\n- settings for max retries and default value maybe?\r\n- acceptable ratio of broken requests\r\n- cache during query or not + RAM limit\r\n\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33955/reactions","total_count":4,"+1":4,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33955/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33953","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33953/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33953/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33953/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33953","id":1112721563,"node_id":"I_kwDOA5dJV85CUsib","number":33953,"title":"Config option to enable/disable auth type \"plaintext_password\"  for user ACL","user":{"login":"HeenaBansal2009","id":86018844,"node_id":"MDQ6VXNlcjg2MDE4ODQ0","avatar_url":"https://avatars.githubusercontent.com/u/86018844?v=4","gravatar_id":"","url":"https://api.github.com/users/HeenaBansal2009","html_url":"https://github.com/HeenaBansal2009","followers_url":"https://api.github.com/users/HeenaBansal2009/followers","following_url":"https://api.github.com/users/HeenaBansal2009/following{/other_user}","gists_url":"https://api.github.com/users/HeenaBansal2009/gists{/gist_id}","starred_url":"https://api.github.com/users/HeenaBansal2009/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/HeenaBansal2009/subscriptions","organizations_url":"https://api.github.com/users/HeenaBansal2009/orgs","repos_url":"https://api.github.com/users/HeenaBansal2009/repos","events_url":"https://api.github.com/users/HeenaBansal2009/events{/privacy}","received_events_url":"https://api.github.com/users/HeenaBansal2009/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-01-24T14:28:07Z","updated_at":"2022-01-24T14:29:26Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"\r\n**Use case**\r\nCurrently Clickhouse allows authetication_type : NO_password ,  plaintext_password  , SHA_256 and SHA_1 type , LDAP , Kerberos of passwords in user settings.\r\nConfiguration change to allow enable/disable usage of cleartext_password for Access management in user profile. \r\n\r\n**Reason**\r\nplaintext_password is easy to configure but unsafe . \r\n\r\n\r\n**Describe the solution you'd like**\r\n\r\n- < enable_plaintext_password =0>\r\n\r\nAlter/Create user identified with plaintext_password should not be allowed.\r\nCREATE/ALTER USER IF NOT EXISTS XYZ\r\n  IDENTIFIED WITH plaintext_password BY 'summer#1' HOST ANY DEFAULT ROLE --> Error \r\n\r\n-  Error is expected when user tries to set cleartext_password if enable_plaintext_password is disabled.\r\n\r\n- ConfigReloading should be take-in to consideration.\r\n\r\n\r\n**Describe alternatives you've considered**\r\n\r\n\r\n- Add a build  flag option to enable/disable plaintext password auth-type - @alexey-milovidov  suggested to have a  config option which is more suitable for backward-compatibility and migration to higher version of clickhouse.\r\n\r\n\r\n**Additional context**\r\nThis feature is not considering “NO_password” auth type.(can be done as next step)\r\nThis feature doesn’t consider the protocol level disabling of plain_text password. \r\n\r\nLet me know what do you feel about this feature. I am planning to implement this - please pour in your suggestions/questions.\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33953/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33953/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33948","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33948/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33948/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33948/events","html_url":"https://github.com/ClickHouse/ClickHouse/pull/33948","id":1112548096,"node_id":"PR_kwDOA5dJV84xfZhI","number":33948,"title":"Do not use clickhouse-test.deb in stateless CI checks","user":{"login":"qoega","id":2159081,"node_id":"MDQ6VXNlcjIxNTkwODE=","avatar_url":"https://avatars.githubusercontent.com/u/2159081?v=4","gravatar_id":"","url":"https://api.github.com/users/qoega","html_url":"https://github.com/qoega","followers_url":"https://api.github.com/users/qoega/followers","following_url":"https://api.github.com/users/qoega/following{/other_user}","gists_url":"https://api.github.com/users/qoega/gists{/gist_id}","starred_url":"https://api.github.com/users/qoega/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/qoega/subscriptions","organizations_url":"https://api.github.com/users/qoega/orgs","repos_url":"https://api.github.com/users/qoega/repos","events_url":"https://api.github.com/users/qoega/events{/privacy}","received_events_url":"https://api.github.com/users/qoega/received_events","type":"User","site_admin":false},"labels":[{"id":1309693854,"node_id":"MDU6TGFiZWwxMzA5NjkzODU0","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/pr-build","name":"pr-build","color":"007700","default":false,"description":"Pull request with build/testing/packaging improvement"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2022-01-24T11:55:11Z","updated_at":"2022-01-25T11:43:56Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/pulls/33948","html_url":"https://github.com/ClickHouse/ClickHouse/pull/33948","diff_url":"https://github.com/ClickHouse/ClickHouse/pull/33948.diff","patch_url":"https://github.com/ClickHouse/ClickHouse/pull/33948.patch","merged_at":null},"body":"Changelog category (leave one):\r\n- Build/Testing/Packaging Improvement\r\n\r\n\r\nChangelog entry (a user-readable short description of the changes that goes to CHANGELOG.md):\r\nclickhouse-test.deb is not used in stateless CI checks.\r\n\r\nRepo is checked out anyway and it is easier to use repo locally and not support this deb packages in CI.\r\n\r\n> Information about CI checks: https://clickhouse.tech/docs/en/development/continuous-integration/\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33948/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33948/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33947","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33947/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33947/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33947/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33947","id":1112543096,"node_id":"I_kwDOA5dJV85CUA94","number":33947,"title":"How to achieve data re-balancing in Clickhouse automatically  after  new shard is added?","user":{"login":"surajmachamasi","id":84307751,"node_id":"MDQ6VXNlcjg0MzA3NzUx","avatar_url":"https://avatars.githubusercontent.com/u/84307751?v=4","gravatar_id":"","url":"https://api.github.com/users/surajmachamasi","html_url":"https://github.com/surajmachamasi","followers_url":"https://api.github.com/users/surajmachamasi/followers","following_url":"https://api.github.com/users/surajmachamasi/following{/other_user}","gists_url":"https://api.github.com/users/surajmachamasi/gists{/gist_id}","starred_url":"https://api.github.com/users/surajmachamasi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/surajmachamasi/subscriptions","organizations_url":"https://api.github.com/users/surajmachamasi/orgs","repos_url":"https://api.github.com/users/surajmachamasi/repos","events_url":"https://api.github.com/users/surajmachamasi/events{/privacy}","received_events_url":"https://api.github.com/users/surajmachamasi/received_events","type":"User","site_admin":false},"labels":[{"id":386401510,"node_id":"MDU6TGFiZWwzODY0MDE1MTA=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/question","name":"question","color":"bfdadc","default":true,"description":""},{"id":3761121284,"node_id":"LA_kwDOA5dJV87gLigE","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/support-services","name":"support-services","color":"1A70E6","default":false,"description":""}],"state":"open","locked":false,"assignee":{"login":"gingerwizard","id":12695796,"node_id":"MDQ6VXNlcjEyNjk1Nzk2","avatar_url":"https://avatars.githubusercontent.com/u/12695796?v=4","gravatar_id":"","url":"https://api.github.com/users/gingerwizard","html_url":"https://github.com/gingerwizard","followers_url":"https://api.github.com/users/gingerwizard/followers","following_url":"https://api.github.com/users/gingerwizard/following{/other_user}","gists_url":"https://api.github.com/users/gingerwizard/gists{/gist_id}","starred_url":"https://api.github.com/users/gingerwizard/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gingerwizard/subscriptions","organizations_url":"https://api.github.com/users/gingerwizard/orgs","repos_url":"https://api.github.com/users/gingerwizard/repos","events_url":"https://api.github.com/users/gingerwizard/events{/privacy}","received_events_url":"https://api.github.com/users/gingerwizard/received_events","type":"User","site_admin":false},"assignees":[{"login":"gingerwizard","id":12695796,"node_id":"MDQ6VXNlcjEyNjk1Nzk2","avatar_url":"https://avatars.githubusercontent.com/u/12695796?v=4","gravatar_id":"","url":"https://api.github.com/users/gingerwizard","html_url":"https://github.com/gingerwizard","followers_url":"https://api.github.com/users/gingerwizard/followers","following_url":"https://api.github.com/users/gingerwizard/following{/other_user}","gists_url":"https://api.github.com/users/gingerwizard/gists{/gist_id}","starred_url":"https://api.github.com/users/gingerwizard/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gingerwizard/subscriptions","organizations_url":"https://api.github.com/users/gingerwizard/orgs","repos_url":"https://api.github.com/users/gingerwizard/repos","events_url":"https://api.github.com/users/gingerwizard/events{/privacy}","received_events_url":"https://api.github.com/users/gingerwizard/received_events","type":"User","site_admin":false}],"milestone":null,"comments":1,"created_at":"2022-01-24T11:49:44Z","updated_at":"2022-01-25T09:23:25Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"currently i have 2 shards up and running and i have added new shard.  but the problem is, i want to distribute all existing data to each shards equally and automatically and all the existing data should be re-balanced to each shards. \r\nso how to achieve it? \r\n\r\none shard storage is 99 % and shard 2 90% so we added 3rd shard. so will it rebalance the data on addition of shards ?\r\nand how does the CH behaves on this situation?","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33947/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33947/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33945","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33945/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33945/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33945/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33945","id":1112494735,"node_id":"I_kwDOA5dJV85CT1KP","number":33945,"title":"parallel_distributed_insert_select + cluster('xxx',view())","user":{"login":"UnamedRus","id":9449405,"node_id":"MDQ6VXNlcjk0NDk0MDU=","avatar_url":"https://avatars.githubusercontent.com/u/9449405?v=4","gravatar_id":"","url":"https://api.github.com/users/UnamedRus","html_url":"https://github.com/UnamedRus","followers_url":"https://api.github.com/users/UnamedRus/followers","following_url":"https://api.github.com/users/UnamedRus/following{/other_user}","gists_url":"https://api.github.com/users/UnamedRus/gists{/gist_id}","starred_url":"https://api.github.com/users/UnamedRus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/UnamedRus/subscriptions","organizations_url":"https://api.github.com/users/UnamedRus/orgs","repos_url":"https://api.github.com/users/UnamedRus/repos","events_url":"https://api.github.com/users/UnamedRus/events{/privacy}","received_events_url":"https://api.github.com/users/UnamedRus/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2022-01-24T11:04:41Z","updated_at":"2022-01-25T11:03:58Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"**Use case**\r\n\r\nRun view on each shard individually and insert into local node.\r\n\r\n**Describe the solution you'd like**\r\n\r\n```sql\r\n\r\nINSERT INTO FUNCTION cluster('all-sharded', map, output, key_2) SELECT *\r\nFROM cluster('all-sharded', view(\r\n    SELECT *\r\n    FROM map.input\r\n    WHERE (key_1 % 2) = toUInt32(getMacro('all-sharded-shard'))\r\n))\r\nSETTINGS parallel_distributed_insert_select = 2\r\n\r\nQuery id: 0ef3707f-2b74-4367-bf6d-82939a64e0f2\r\n\r\n\r\n0 rows in set. Elapsed: 0.002 sec.\r\n\r\nReceived exception from server (version 21.11.10):\r\nCode: 60. DB::Exception: Received from localhost:9000. DB::Exception: Both table name and UUID are empty. (UNKNOWN_TABLE)\r\n```","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33945/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33945/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33944","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33944/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33944/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33944/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33944","id":1112487504,"node_id":"I_kwDOA5dJV85CTzZQ","number":33944,"title":"mapPopulateSeries LOGICAL_ERROR","user":{"login":"UnamedRus","id":9449405,"node_id":"MDQ6VXNlcjk0NDk0MDU=","avatar_url":"https://avatars.githubusercontent.com/u/9449405?v=4","gravatar_id":"","url":"https://api.github.com/users/UnamedRus","html_url":"https://github.com/UnamedRus","followers_url":"https://api.github.com/users/UnamedRus/followers","following_url":"https://api.github.com/users/UnamedRus/following{/other_user}","gists_url":"https://api.github.com/users/UnamedRus/gists{/gist_id}","starred_url":"https://api.github.com/users/UnamedRus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/UnamedRus/subscriptions","organizations_url":"https://api.github.com/users/UnamedRus/orgs","repos_url":"https://api.github.com/users/UnamedRus/repos","events_url":"https://api.github.com/users/UnamedRus/events{/privacy}","received_events_url":"https://api.github.com/users/UnamedRus/received_events","type":"User","site_admin":false},"labels":[{"id":3260776666,"node_id":"MDU6TGFiZWwzMjYwNzc2NjY2","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/potential%20bug","name":"potential bug","color":"ffc080","default":false,"description":"To be reviewed by developers and confirmed/rejected."}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-01-24T10:59:47Z","updated_at":"2022-01-24T10:59:47Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"**Describe what's wrong**\r\n\r\n\r\n**How to reproduce**\r\n\r\n\r\n```sql\r\n\r\nSELECT mapPopulateSeries(range(10), range(10), toUInt8(number))\r\nFROM numbers(10)\r\nLIMIT 1\r\n\r\nQuery id: 5eb2e3fb-26a0-4a17-8a37-9714d35095bd\r\n\r\n┌─mapPopulateSeries(range(10), range(10), toUInt8(number))─┐\r\n│ ([0],[0])                                                │\r\n└──────────────────────────────────────────────────────────┘\r\n┌─mapPopulateSeries(range(10), range(10), toUInt8(number))─┐\r\n│ ([0],[0])                                                │\r\n└──────────────────────────────────────────────────────────┘\r\n\r\n2 rows in set. Elapsed: 0.004 sec.\r\n\r\nSELECT mapPopulateSeries(range(900), range(900), materialize(1000)).2\r\nFROM numbers(100)\r\nFORMAT `Null`\r\n\r\nQuery id: 6418bf79-5d29-4709-86d6-7bdee9b7c9f7\r\n\r\n← Progress: 0.00 rows, 0.00 B (0.00 rows/s., 0.00 B/s.)\r\n1 rows in set. Elapsed: 0.014 sec.\r\n\r\nReceived exception from server (version 21.13.1):\r\nCode: 49. DB::Exception: Received from localhost:9000. DB::Exception: Invalid number of rows in Chunk column Array(UInt16) position 0: expected 100, got 1. (LOGICAL_ERROR)\r\n\r\nSELECT mapPopulateSeries(range(900), range(900), toUInt16(number)).2\r\nFROM numbers(100)\r\nLIMIT 1000\r\n\r\n┌─tupleElement(mapPopulateSeries(range(900), range(900), toUInt16(number)), 2)─┐\r\n│ [0]                                                                          │\r\n└──────────────────────────────────────────────────────────────────────────────┘\r\n→ Progress: 0.00 rows, 0.00 B (0.00 rows/s., 0.00 B/s.)\r\n1 rows in set. Elapsed: 0.007 sec.\r\n\r\nReceived exception from server (version 21.13.1):\r\nCode: 49. DB::Exception: Received from localhost:9000. DB::Exception: Invalid number of rows in Chunk column Array(UInt16) position 0: expected 100, got 1. (LOGICAL_ERROR)\r\n\r\nSELECT mapPopulateSeries(range(10), range(10), toUInt16(number))\r\nFROM numbers(10)\r\nLIMIT 1\r\n\r\nQuery id: 7b6d6e3d-19f1-489b-93a7-022eaa507af4\r\n\r\n\r\n0 rows in set. Elapsed: 0.003 sec.\r\n\r\nReceived exception from server (version 21.13.1):\r\nCode: 43. DB::Exception: Received from localhost:9000. DB::Exception: Max key type in mapPopulateSeries should be same as keys type: While processing mapPopulateSeries(range(10), range(10), toUInt16(number)). (ILLEGAL_TYPE_OF_ARGUMENT)\r\n```\r\n\r\n**Expected behavior**\r\n\r\n> A clear and concise description of what you expected to happen.\r\n\r\n**Error message and/or stacktrace**\r\n\r\n```\r\nCode: 49. DB::Exception: Received from localhost:9000. DB::Exception: Invalid number of rows in Chunk column Array(UInt16) position 0: expected 100, got 1. (LOGICAL_ERROR)\r\n```","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33944/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33944/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33935","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33935/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33935/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33935/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33935","id":1112165779,"node_id":"I_kwDOA5dJV85CSk2T","number":33935,"title":"A setting to allow case insensitive column, table and database names.","user":{"login":"alexey-milovidov","id":18581488,"node_id":"MDQ6VXNlcjE4NTgxNDg4","avatar_url":"https://avatars.githubusercontent.com/u/18581488?v=4","gravatar_id":"","url":"https://api.github.com/users/alexey-milovidov","html_url":"https://github.com/alexey-milovidov","followers_url":"https://api.github.com/users/alexey-milovidov/followers","following_url":"https://api.github.com/users/alexey-milovidov/following{/other_user}","gists_url":"https://api.github.com/users/alexey-milovidov/gists{/gist_id}","starred_url":"https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexey-milovidov/subscriptions","organizations_url":"https://api.github.com/users/alexey-milovidov/orgs","repos_url":"https://api.github.com/users/alexey-milovidov/repos","events_url":"https://api.github.com/users/alexey-milovidov/events{/privacy}","received_events_url":"https://api.github.com/users/alexey-milovidov/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-01-24T04:43:37Z","updated_at":"2022-01-24T04:50:04Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"**Use case**\r\n\r\nCompatibility with legacy tools and users.\r\n\r\n**Describe the solution you'd like**\r\n\r\nA group of settings `enable_case_insensitive_columns`, `enable_case_insensitive_tables`, `enable_case_insensitive_databases`.\r\nIt is better to have separate settings, because we may want to enable something else in future (e.g. functions).\r\n\r\nWe will maintain a map from lowercased name.\r\n\r\nThe name will be found only if:\r\n- there is no exact match;\r\n- the match for lowercased name is not ambiguous.\r\n\r\nIf the match is ambiguous, the error message should clearly indicate it and list all the options.\r\nWe can try to find lowercased name even if the corresponding setting is not enabled - only to provide better error message about the possible match.\r\n\r\nIt is enough to support ASCII only, because full Unicode support will require locales:\r\nhttps://languagelog.ldc.upenn.edu/nll/?p=73\r\n\r\nWe can restrict case insensitive matching only if the identifier is not quoted.\r\n\r\n**Describe alternatives you've considered**\r\n\r\n1. Not doing that.\r\n2. We can also implement per-table and per-database option for case insensitivity, for example - for INFORMATION_SCHEMA.\r\n\r\n**Additional context**\r\n\r\nhttps://news.ycombinator.com/item?id=30040104\r\n\r\nWe also should admit that case sensitiveness (what ClickHouse is doing) is undoubtedly better.\r\n\r\nPlease put :eyes: reaction if you don't want this feature to be implemented.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33935/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33935/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33934","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33934/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33934/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33934/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33934","id":1112114597,"node_id":"I_kwDOA5dJV85CSYWl","number":33934,"title":"clickhouse supports viewfs","user":{"login":"michael1589","id":9250127,"node_id":"MDQ6VXNlcjkyNTAxMjc=","avatar_url":"https://avatars.githubusercontent.com/u/9250127?v=4","gravatar_id":"","url":"https://api.github.com/users/michael1589","html_url":"https://github.com/michael1589","followers_url":"https://api.github.com/users/michael1589/followers","following_url":"https://api.github.com/users/michael1589/following{/other_user}","gists_url":"https://api.github.com/users/michael1589/gists{/gist_id}","starred_url":"https://api.github.com/users/michael1589/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/michael1589/subscriptions","organizations_url":"https://api.github.com/users/michael1589/orgs","repos_url":"https://api.github.com/users/michael1589/repos","events_url":"https://api.github.com/users/michael1589/events{/privacy}","received_events_url":"https://api.github.com/users/michael1589/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2022-01-24T03:13:14Z","updated_at":"2022-01-24T09:12:55Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"\r\n> Currently clickhouse doesn't support viewfs\r\n\r\n> There're two solutions:\r\n1.Map viewfs to hdfs, clickhouse already supported hdfs\r\n2.Develop a viewfs engine which like hdfs engine.\r\n\r\nDo we have a plan to do this or viewfs solution can be accepted?","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33934/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33934/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33933","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33933/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33933/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33933/events","html_url":"https://github.com/ClickHouse/ClickHouse/pull/33933","id":1112107951,"node_id":"PR_kwDOA5dJV84xd8mv","number":33933,"title":"fix local metadata differ zk metadata","user":{"login":"sunny19930321","id":20608540,"node_id":"MDQ6VXNlcjIwNjA4NTQw","avatar_url":"https://avatars.githubusercontent.com/u/20608540?v=4","gravatar_id":"","url":"https://api.github.com/users/sunny19930321","html_url":"https://github.com/sunny19930321","followers_url":"https://api.github.com/users/sunny19930321/followers","following_url":"https://api.github.com/users/sunny19930321/following{/other_user}","gists_url":"https://api.github.com/users/sunny19930321/gists{/gist_id}","starred_url":"https://api.github.com/users/sunny19930321/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sunny19930321/subscriptions","organizations_url":"https://api.github.com/users/sunny19930321/orgs","repos_url":"https://api.github.com/users/sunny19930321/repos","events_url":"https://api.github.com/users/sunny19930321/events{/privacy}","received_events_url":"https://api.github.com/users/sunny19930321/received_events","type":"User","site_admin":false},"labels":[{"id":1302792342,"node_id":"MDU6TGFiZWwxMzAyNzkyMzQy","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/pr-bugfix","name":"pr-bugfix","color":"ff4080","default":false,"description":"Pull request with bugfix, not backported by default"},{"id":3627025164,"node_id":"LA_kwDOA5dJV87YMAMM","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/can%20be%20tested","name":"can be tested","color":"1d76db","default":false,"description":""}],"state":"open","locked":false,"assignee":{"login":"alesapin","id":3684697,"node_id":"MDQ6VXNlcjM2ODQ2OTc=","avatar_url":"https://avatars.githubusercontent.com/u/3684697?v=4","gravatar_id":"","url":"https://api.github.com/users/alesapin","html_url":"https://github.com/alesapin","followers_url":"https://api.github.com/users/alesapin/followers","following_url":"https://api.github.com/users/alesapin/following{/other_user}","gists_url":"https://api.github.com/users/alesapin/gists{/gist_id}","starred_url":"https://api.github.com/users/alesapin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alesapin/subscriptions","organizations_url":"https://api.github.com/users/alesapin/orgs","repos_url":"https://api.github.com/users/alesapin/repos","events_url":"https://api.github.com/users/alesapin/events{/privacy}","received_events_url":"https://api.github.com/users/alesapin/received_events","type":"User","site_admin":false},"assignees":[{"login":"alesapin","id":3684697,"node_id":"MDQ6VXNlcjM2ODQ2OTc=","avatar_url":"https://avatars.githubusercontent.com/u/3684697?v=4","gravatar_id":"","url":"https://api.github.com/users/alesapin","html_url":"https://github.com/alesapin","followers_url":"https://api.github.com/users/alesapin/followers","following_url":"https://api.github.com/users/alesapin/following{/other_user}","gists_url":"https://api.github.com/users/alesapin/gists{/gist_id}","starred_url":"https://api.github.com/users/alesapin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alesapin/subscriptions","organizations_url":"https://api.github.com/users/alesapin/orgs","repos_url":"https://api.github.com/users/alesapin/repos","events_url":"https://api.github.com/users/alesapin/events{/privacy}","received_events_url":"https://api.github.com/users/alesapin/received_events","type":"User","site_admin":false}],"milestone":null,"comments":2,"created_at":"2022-01-24T03:03:46Z","updated_at":"2022-01-29T05:31:55Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/pulls/33933","html_url":"https://github.com/ClickHouse/ClickHouse/pull/33933","diff_url":"https://github.com/ClickHouse/ClickHouse/pull/33933.diff","patch_url":"https://github.com/ClickHouse/ClickHouse/pull/33933.patch","merged_at":null},"body":"- Changelog category (leave one):\r\nparse ZK metadata and compare it with local metadata\r\nparse primary key, partition key, order key, sample key, and TTL\r\n\r\n- Bug Fix (user-visible misbehaviour in official stable or prestable release)\r\nfix: https://github.com/ClickHouse/ClickHouse/issues/33932","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33933/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33933/timeline","performed_via_github_app":null}]
