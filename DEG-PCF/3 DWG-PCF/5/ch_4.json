[{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32902","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32902/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32902/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32902/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/32902","id":1083021863,"node_id":"I_kwDOA5dJV85AjZon","number":32902,"title":"MaterializedPostgreSQL table cannot be freezed","user":{"login":"zvonand","id":32552679,"node_id":"MDQ6VXNlcjMyNTUyNjc5","avatar_url":"https://avatars.githubusercontent.com/u/32552679?v=4","gravatar_id":"","url":"https://api.github.com/users/zvonand","html_url":"https://github.com/zvonand","followers_url":"https://api.github.com/users/zvonand/followers","following_url":"https://api.github.com/users/zvonand/following{/other_user}","gists_url":"https://api.github.com/users/zvonand/gists{/gist_id}","starred_url":"https://api.github.com/users/zvonand/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zvonand/subscriptions","organizations_url":"https://api.github.com/users/zvonand/orgs","repos_url":"https://api.github.com/users/zvonand/repos","events_url":"https://api.github.com/users/zvonand/events{/privacy}","received_events_url":"https://api.github.com/users/zvonand/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":2763098588,"node_id":"MDU6TGFiZWwyNzYzMDk4NTg4","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-postgresql","name":"comp-postgresql","color":"b5bcff","default":false,"description":""}],"state":"open","locked":false,"assignee":{"login":"kssenii","id":54203879,"node_id":"MDQ6VXNlcjU0MjAzODc5","avatar_url":"https://avatars.githubusercontent.com/u/54203879?v=4","gravatar_id":"","url":"https://api.github.com/users/kssenii","html_url":"https://github.com/kssenii","followers_url":"https://api.github.com/users/kssenii/followers","following_url":"https://api.github.com/users/kssenii/following{/other_user}","gists_url":"https://api.github.com/users/kssenii/gists{/gist_id}","starred_url":"https://api.github.com/users/kssenii/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kssenii/subscriptions","organizations_url":"https://api.github.com/users/kssenii/orgs","repos_url":"https://api.github.com/users/kssenii/repos","events_url":"https://api.github.com/users/kssenii/events{/privacy}","received_events_url":"https://api.github.com/users/kssenii/received_events","type":"User","site_admin":false},"assignees":[{"login":"kssenii","id":54203879,"node_id":"MDQ6VXNlcjU0MjAzODc5","avatar_url":"https://avatars.githubusercontent.com/u/54203879?v=4","gravatar_id":"","url":"https://api.github.com/users/kssenii","html_url":"https://github.com/kssenii","followers_url":"https://api.github.com/users/kssenii/followers","following_url":"https://api.github.com/users/kssenii/following{/other_user}","gists_url":"https://api.github.com/users/kssenii/gists{/gist_id}","starred_url":"https://api.github.com/users/kssenii/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kssenii/subscriptions","organizations_url":"https://api.github.com/users/kssenii/orgs","repos_url":"https://api.github.com/users/kssenii/repos","events_url":"https://api.github.com/users/kssenii/events{/privacy}","received_events_url":"https://api.github.com/users/kssenii/received_events","type":"User","site_admin":false}],"milestone":null,"comments":0,"created_at":"2021-12-17T08:48:55Z","updated_at":"2022-01-15T23:33:16Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"### Table from MaterializedPostgreSQL database cannot be freezed:\r\n\r\nIn Postgres:\r\n```SQL\r\nCREATE DATABASE mydb;\r\nCREATE TABLE MyTable (id INTEGER PRIMARY KEY, name VARCHAR(10));  # In mydb, of course\r\nINSERT INTO MyTable (id, name) VALUES (1, 'qwertyuiop');\r\n```\r\n\r\nIn ClickHouse:\r\n```SQL\r\nclickhouse1 :) CREATE DATABASE psql ENGINE = MaterializedPostgreSQL('postgres:5432', 'mydb', 'test', 'qwerty')\r\n\r\nOk.\r\n\r\nclickhouse1 :) SHOW TABLES FROM psql\r\n\r\n┌─name────┐\r\n│ mytable │\r\n└─────────┘\r\n\r\nclickhouse1 :) show create table psql.mytable\r\n\r\n┌─statement─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┐\r\n│ CREATE TABLE psql.mytable\r\n(\r\n    `id` Int32,\r\n    `name` Nullable(String),\r\n    `_sign` Int8() MATERIALIZED 1,\r\n    `_version` UInt64() MATERIALIZED 1\r\n)\r\nENGINE = ReplacingMergeTree(_version)\r\nORDER BY tuple(id) │\r\n└───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┘\r\n\r\nclickhouse1 :) ALTER TABLE psql.mytable FREEZE\r\n\r\nReceived exception from server (version 21.11.5):\r\nCode: 48. DB::Exception: Received from localhost:9000. DB::Exception: Table engine MaterializedPostgreSQL doesn't support partitioning. (NOT_IMPLEMENTED)\r\n\r\n```\r\n\r\n\r\n### Meanwhile, MaterializedMySQL supports doing the same:\r\n\r\nIn MySQL:\r\n```SQL\r\nCREATE DATABASE mydb;\r\nCREATE TABLE mydb.MyTable (id INT PRIMARY KEY, name VARCHAR(10));\r\nINSERT INTO mydb.MyTable VALUES (1, 'qwertyuiop');\r\n```\r\n\r\nIn ClickHouse:\r\n```SQL\r\nclickhouse1 :) CREATE DATABASE mysql ENGINE = MaterializedMySQL('mysql:3306', 'mydb', 'root', 'qwerty') SETTINGS allows_query_when_mysql_lost=true, max_wait_time_when_mysql_unavailable=10000\r\n\r\nOk.\r\n\r\nclickhouse1 :) show tables from mysql\r\n\r\n┌─name────┐\r\n│ MyTable │\r\n└─────────┘\r\n\r\n\r\nclickhouse1 :) show create table mysql.MyTable\r\n\r\n┌─statement──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┐\r\n│ CREATE TABLE mysql.MyTable\r\n(\r\n    `id` Int32,\r\n    `name` Nullable(String),\r\n    `_sign` Int8 MATERIALIZED 1,\r\n    `_version` UInt64 MATERIALIZED 1,\r\n    INDEX _version _version TYPE minmax GRANULARITY 1\r\n)\r\nENGINE = ReplacingMergeTree(_version)\r\nPARTITION BY intDiv(id, 4294967)\r\nORDER BY tuple(id)\r\nSETTINGS index_granularity = 8192 │\r\n└────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┘\r\n\r\nclickhouse1 :) alter table mysql.MyTable freeze\r\n\r\nOk.\r\n\r\n```","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32902/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32902/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32899","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32899/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32899/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32899/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/32899","id":1082858660,"node_id":"I_kwDOA5dJV85Aixyk","number":32899,"title":"About the Avro Map data structure is not unsupported in ClickHouse","user":{"login":"Veryfirefly","id":20528475,"node_id":"MDQ6VXNlcjIwNTI4NDc1","avatar_url":"https://avatars.githubusercontent.com/u/20528475?v=4","gravatar_id":"","url":"https://api.github.com/users/Veryfirefly","html_url":"https://github.com/Veryfirefly","followers_url":"https://api.github.com/users/Veryfirefly/followers","following_url":"https://api.github.com/users/Veryfirefly/following{/other_user}","gists_url":"https://api.github.com/users/Veryfirefly/gists{/gist_id}","starred_url":"https://api.github.com/users/Veryfirefly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Veryfirefly/subscriptions","organizations_url":"https://api.github.com/users/Veryfirefly/orgs","repos_url":"https://api.github.com/users/Veryfirefly/repos","events_url":"https://api.github.com/users/Veryfirefly/events{/privacy}","received_events_url":"https://api.github.com/users/Veryfirefly/received_events","type":"User","site_admin":false},"labels":[{"id":1397894054,"node_id":"MDU6TGFiZWwxMzk3ODk0MDU0","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/unfinished%20code","name":"unfinished code","color":"ff8800","default":false,"description":""},{"id":3068847854,"node_id":"MDU6TGFiZWwzMDY4ODQ3ODU0","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-map-datatype","name":"comp-map-datatype","color":"b5bcff","default":false,"description":"Relates to Map datatype"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2021-12-17T03:55:27Z","updated_at":"2022-01-24T05:30:28Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"In the project, I use kafka to insert data into clickhouse, which is undoubtedly very convenient and efficient, but because the data may involve field changes, it makes it very inconvenient for clickhouse to upgrade the data type compatible, so we decided Use AvroConfluent's data format, and use schema-registry for schema constraints.\r\n\r\nWhen using AvroConfluent, I encountered a problem that the Map data structure is not compatible with the processing. After some inspection, I found that ClickHouse does not support processing the Map data structure in Avro.\r\n\r\nSo is it possible to support the processing of the Map data structure in Avro in ClickHouse? If it can’t be realized, can I ask the reason why it can’t be realized?\r\n\r\nLooking forward to your answer, thank you very much!\r\n\r\n## My environment\r\n\r\n- Docker Version: 20.10.11\r\n- ClickHouse Verseion: 21.11.7.9 (Standalone Mode)\r\n- Kafka Version: 2.6.0 (Cluster Mode 3 brokers)\r\n- Confluent Schema-Registry Version: 6.2.0\r\n\r\n> My avro schema\r\n\r\n``` json\r\n{\r\n  \"name\": \"AccountRecord\",\r\n  \"type\": \"record\",\r\n  \"fields\": [\r\n    {\r\n      \"name\": \"account\",\r\n      \"type\": \"string\"\r\n    },\r\n    {\r\n      \"name\": \"age\",\r\n      \"type\": \"int\"\r\n    },\r\n    {\r\n      \"name\": \"createTime\",\r\n      \"type\": \"long\"\r\n    },\r\n    {\r\n      \"name\": \"currency\",\r\n      \"type\": {\r\n        \"type\": \"map\",\r\n        \"values\": \"int\"\r\n      }\r\n    }\r\n  ]\r\n}\r\n```\r\n\r\n> My json data\r\n``` json\r\n{\r\n  \"createTime\":1639626783,\r\n  \"currency\":{\r\n    \"RUB\":9999,\r\n    \"CNY\":9000,\r\n    \"EUR\":800,\r\n    \"USD\":500\r\n  },\r\n  \"account\": \"1151f0b7-e562-480d-a193-a0a14572e32e\",\r\n  \"age\": 26\r\n}\r\n```\r\n\r\n> My kafka engine table\r\n``` sql\r\nCREATE TABLE kafka_incompatible_map_account\r\n(\r\n    account     String,\r\n    age         UInt8,\r\n    createTime  UInt64,\r\n    currency    Map(String, UInt32)\r\n) ENGINE = Kafka\r\n    SETTINGS  kafka_broker_list = '192.168.1.29:9092, 192.168.1.30:9092, 192.168.1.31:9092',\r\n          kafka_topic_list = 'avro.incompatible.map.account',\r\n          kafka_group_name = 'avro.incompatible.map.account.group.v1',\r\n          kafka_format = 'AvroConfluent',\r\n          kafka_num_consumers = 1;\r\n```\r\n\r\n> My MergeTree engine table\r\n``` sql\r\nCREATE TABLE t_incompatible_map_account\r\n(\r\n    account     String,\r\n    age         UInt8,\r\n    createTime  UInt64,\r\n    currency    Map(String, UInt32)\r\n) ENGINE = MergeTree()\r\n    PARTITION BY toYYYYMMDD(toDateTime(createTime))\r\n    ORDER BY createTime;\r\n```\r\n\r\n> My materialized view\r\n``` sql\r\nCREATE MATERIALIZED VIEW mv_incompatible_map_account TO t_incompatible_map_account\r\nAS\r\nSELECT account,\r\n       age,\r\n       createTime,\r\n       currency\r\nFROM  kafka_incompatible_map_account;\r\n```\r\n\r\n> My clickhouse-server.err.log\r\n``` text\r\n2021.12.16 12:48:47.906824 [ 125 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 44. DB::Exception: Type Map(String, UInt32) is not compatible with Avro map:\r\n{\r\n    \"type\": \"map\",\r\n    \"values\": \"int\"\r\n}: column currency: while parsing Kafka message (topic: experiment.account.record, partition: 0, offset: 0)': While executing Kafka. (ILLEGAL_COLUMN), Stack trace (when copying this message, always include the lines below):\r\n\r\n0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b6c254 in /usr/bin/clickhouse\r\n1. DB::AvroDeserializer::createDeserializeFn(std::__1::shared_ptr<avro::Node>, std::__1::shared_ptr<DB::IDataType const>) @ 0x131a554a in /usr/bin/clickhouse\r\n2. DB::AvroDeserializer::createAction(DB::Block const&, std::__1::shared_ptr<avro::Node> const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) @ 0x131a77fb in /usr/bin/clickhouse\r\n3. DB::AvroDeserializer::createAction(DB::Block const&, std::__1::shared_ptr<avro::Node> const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) @ 0x131a7cf2 in /usr/bin/clickhouse\r\n4. DB::AvroDeserializer::AvroDeserializer(DB::Block const&, avro::ValidSchema, bool) @ 0x131a99a9 in /usr/bin/clickhouse\r\n5. DB::AvroConfluentRowInputFormat::getOrCreateDeserializer(unsigned int) @ 0x131abe66 in /usr/bin/clickhouse\r\n6. DB::AvroConfluentRowInputFormat::readRow(std::__1::vector<COW<DB::IColumn>::mutable_ptr<DB::IColumn>, std::__1::allocator<COW<DB::IColumn>::mutable_ptr<DB::IColumn> > >&, DB::RowReadExtension&) @ 0x131ab91b in /usr/bin/clickhouse\r\n7. DB::IRowInputFormat::generate() @ 0x131c2648 in /usr/bin/clickhouse\r\n8. DB::ISource::tryGenerate() @ 0x1315c675 in /usr/bin/clickhouse\r\n9. DB::ISource::work() @ 0x1315c23a in /usr/bin/clickhouse\r\n10. DB::StreamingFormatExecutor::execute() @ 0x13185aa2 in /usr/bin/clickhouse\r\n11. DB::KafkaSource::generateImpl() @ 0x12bff68f in /usr/bin/clickhouse\r\n12. DB::KafkaSource::generate() @ 0x12c01baf in /usr/bin/clickhouse\r\n13. DB::ISource::tryGenerate() @ 0x1315c675 in /usr/bin/clickhouse\r\n14. DB::ISource::work() @ 0x1315c23a in /usr/bin/clickhouse\r\n15. DB::SourceWithProgress::work() @ 0x13373402 in /usr/bin/clickhouse\r\n16. ? @ 0x13177e1b in /usr/bin/clickhouse\r\n17. DB::PipelineExecutor::executeStepImpl(unsigned long, unsigned long, std::__1::atomic<bool>*) @ 0x13173dd1 in /usr/bin/clickhouse\r\n18. DB::PipelineExecutor::executeImpl(unsigned long) @ 0x1317196f in /usr/bin/clickhouse\r\n19. DB::PipelineExecutor::execute(unsigned long) @ 0x13171739 in /usr/bin/clickhouse\r\n20. DB::CompletedPipelineExecutor::execute() @ 0x1316d70f in /usr/bin/clickhouse\r\n21. DB::StorageKafka::streamToViews() @ 0x12bf59da in /usr/bin/clickhouse\r\n22. DB::StorageKafka::threadFunc(unsigned long) @ 0x12bf3868 in /usr/bin/clickhouse\r\n23. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f07cce in /usr/bin/clickhouse\r\n24. DB::BackgroundSchedulePool::threadFunction() @ 0x11f0a6a7 in /usr/bin/clickhouse\r\n25. ? @ 0x11f0b613 in /usr/bin/clickhouse\r\n26. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bae317 in /usr/bin/clickhouse\r\n27. ? @ 0x9bb1d1d in /usr/bin/clickhouse\r\n28. start_thread @ 0x9609 in /usr/lib/x86_64-linux-gnu/libpthread-2.31.so\r\n29. clone @ 0x122293 in /usr/lib/x86_64-linux-gnu/libc-2.31.so\r\n (version 21.11.7.9 (official build))\r\n```","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32899/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32899/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32898","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32898/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32898/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32898/events","html_url":"https://github.com/ClickHouse/ClickHouse/pull/32898","id":1082837933,"node_id":"PR_kwDOA5dJV84v-2EQ","number":32898,"title":"Fix the bug that the toDatetime function overflows","user":{"login":"marising","id":8611398,"node_id":"MDQ6VXNlcjg2MTEzOTg=","avatar_url":"https://avatars.githubusercontent.com/u/8611398?v=4","gravatar_id":"","url":"https://api.github.com/users/marising","html_url":"https://github.com/marising","followers_url":"https://api.github.com/users/marising/followers","following_url":"https://api.github.com/users/marising/following{/other_user}","gists_url":"https://api.github.com/users/marising/gists{/gist_id}","starred_url":"https://api.github.com/users/marising/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/marising/subscriptions","organizations_url":"https://api.github.com/users/marising/orgs","repos_url":"https://api.github.com/users/marising/repos","events_url":"https://api.github.com/users/marising/events{/privacy}","received_events_url":"https://api.github.com/users/marising/received_events","type":"User","site_admin":false},"labels":[{"id":1304141686,"node_id":"MDU6TGFiZWwxMzA0MTQxNjg2","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/pr-improvement","name":"pr-improvement","color":"007700","default":false,"description":"Pull request with some product improvements"},{"id":3627025164,"node_id":"LA_kwDOA5dJV87YMAMM","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/can%20be%20tested","name":"can be tested","color":"1d76db","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2021-12-17T03:08:33Z","updated_at":"2022-01-30T00:09:35Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/pulls/32898","html_url":"https://github.com/ClickHouse/ClickHouse/pull/32898","diff_url":"https://github.com/ClickHouse/ClickHouse/pull/32898.diff","patch_url":"https://github.com/ClickHouse/ClickHouse/pull/32898.patch","merged_at":null},"body":"Changelog category (leave one):\r\n- Improvement\r\n\r\nChangelog entry (a user-readable short description of the changes that goes to CHANGELOG.md):\r\n\r\nFix the bug that the toDatetime function overflows. When the date string is very large, it will be converted to 1970.\r\n\r\nDetailed description / Documentation draft:\r\n\r\n#32833\r\n\r\nWhen `time_t time` is negative, it will be directly converted to UInt32 instead of 0\r\n\r\n> By adding documentation, you'll allow users to try your new feature immediately, not when someone else will have time to document it later. Documentation is necessary for all features that affect user experience in any way. You can add brief documentation draft above, or add documentation right into your patch as Markdown files in [docs](https://github.com/ClickHouse/ClickHouse/tree/master/docs) folder.\r\n\r\n> If you are doing this for the first time, it's recommended to read the lightweight [Contributing to ClickHouse Documentation](https://github.com/ClickHouse/ClickHouse/tree/master/docs/README.md) guide first.\r\n\r\n\r\n> Information about CI checks: https://clickhouse.tech/docs/en/development/continuous-integration/\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32898/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32898/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32896","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32896/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32896/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32896/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/32896","id":1082803731,"node_id":"I_kwDOA5dJV85AikYT","number":32896,"title":"Connection reset by peer when importing data from CSV","user":{"login":"Sallery-X","id":45587738,"node_id":"MDQ6VXNlcjQ1NTg3NzM4","avatar_url":"https://avatars.githubusercontent.com/u/45587738?v=4","gravatar_id":"","url":"https://api.github.com/users/Sallery-X","html_url":"https://github.com/Sallery-X","followers_url":"https://api.github.com/users/Sallery-X/followers","following_url":"https://api.github.com/users/Sallery-X/following{/other_user}","gists_url":"https://api.github.com/users/Sallery-X/gists{/gist_id}","starred_url":"https://api.github.com/users/Sallery-X/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Sallery-X/subscriptions","organizations_url":"https://api.github.com/users/Sallery-X/orgs","repos_url":"https://api.github.com/users/Sallery-X/repos","events_url":"https://api.github.com/users/Sallery-X/events{/privacy}","received_events_url":"https://api.github.com/users/Sallery-X/received_events","type":"User","site_admin":false},"labels":[{"id":386401510,"node_id":"MDU6TGFiZWwzODY0MDE1MTA=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/question","name":"question","color":"bfdadc","default":true,"description":""},{"id":845267693,"node_id":"MDU6TGFiZWw4NDUyNjc2OTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/st-need-info","name":"st-need-info","color":"e5b890","default":false,"description":"We need extra data to continue"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2021-12-17T02:01:07Z","updated_at":"2021-12-17T06:25:51Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"https://stackoverflow.com/questions/56156682/clickhouse-import-data-from-csv-dbnetexception-connection-reset-by-peer-whil\r\nI try to set max_memory_usage, it didn't work","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32896/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32896/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32887","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32887/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32887/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32887/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/32887","id":1082748657,"node_id":"I_kwDOA5dJV85AiW7x","number":32887,"title":"Kafka Engine returns 401 Authentication issue when connecting to Confluent schema registry with a URL-encoded basic authentication URL","user":{"login":"zhenzhongxu","id":2775108,"node_id":"MDQ6VXNlcjI3NzUxMDg=","avatar_url":"https://avatars.githubusercontent.com/u/2775108?v=4","gravatar_id":"","url":"https://api.github.com/users/zhenzhongxu","html_url":"https://github.com/zhenzhongxu","followers_url":"https://api.github.com/users/zhenzhongxu/followers","following_url":"https://api.github.com/users/zhenzhongxu/following{/other_user}","gists_url":"https://api.github.com/users/zhenzhongxu/gists{/gist_id}","starred_url":"https://api.github.com/users/zhenzhongxu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zhenzhongxu/subscriptions","organizations_url":"https://api.github.com/users/zhenzhongxu/orgs","repos_url":"https://api.github.com/users/zhenzhongxu/repos","events_url":"https://api.github.com/users/zhenzhongxu/events{/privacy}","received_events_url":"https://api.github.com/users/zhenzhongxu/received_events","type":"User","site_admin":false},"labels":[{"id":386401508,"node_id":"MDU6TGFiZWwzODY0MDE1MDg=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/help%20wanted","name":"help wanted","color":"128A0C","default":true,"description":null},{"id":1334071168,"node_id":"MDU6TGFiZWwxMzM0MDcxMTY4","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-kafka","name":"comp-kafka","color":"b5bcff","default":false,"description":"Kafka Engine"},{"id":1575085465,"node_id":"MDU6TGFiZWwxNTc1MDg1NDY1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/unexpected%20behaviour","name":"unexpected behaviour","color":"e088ca","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":10,"created_at":"2021-12-17T00:11:00Z","updated_at":"2021-12-29T18:17:01Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"**Describe the unexpected behavior**\r\nI was using Kafka engine to connect a Kafka topic, everything works with a JSON topic. When I switch to using Avro and need to connect to the Confluent cloud schema registry using a `URL-encoded basic authentication enabled URL`, I got 401 authentication error.  \r\n\r\n**How to reproduce**\r\n* Which ClickHouse server version to use\r\n21.5.5.12 (i tried on 21.12.2.17 as well and it didn't work either)\r\n\r\n* Non-default settings, if any\r\nformat_avro_schema_registry_url\r\n\r\n* `CREATE TABLE` statements for all tables involved\r\nI used the below create table command. Please note in `format_avro_schema_registry_url` I had to url-encode the secret because it contains `/`. The raw url provided in format_avro_schema_registry_url works in the browser.\r\n\r\nCREATE TABLE demo (\r\n    session_id String,\r\n    event_time DateTime('US/Pacific') Codec(DoubleDelta, LZ4)\r\n)\r\nENGINE = Kafka()\r\nSETTINGS\r\nkafka_broker_list = 'pkc-pgq85.us-west-2.aws.confluent.cloud:9092',\r\nkafka_topic_list = 'topic',\r\nkafka_group_name = 'cgname',\r\nkafka_format = 'AvroConfluent',\r\nformat_avro_schema_registry_url = 'https://OZIHXXXXXXXXXX:WIs%2F8x2BngyrahGkl%2B%2FR%2ByOX8a95pi%XXXXXXXXXXXXXX@psrc-gn6wr.us-east-2.aws.confluent.cloud';\r\n\r\n\r\n\r\n* Sample data for all these tables, use [clickhouse-obfuscator](https://github.com/ClickHouse/ClickHouse/blob/master/programs/obfuscator/Obfuscator.cpp#L42-L80) if necessary\r\n* Queries to run that lead to unexpected result\r\n\r\n**Expected behavior**\r\nA clear and concise description of what you expected to happen.\r\nI would expect either a different configuration for providing authentication information or make the url-encoded basic authentication url work. \r\n\r\n**Error message and/or stacktrace**\r\nIf applicable, add screenshots to help explain your problem.\r\n\r\nI noticed the following in the logs\r\n```[ 11764 ] \r\n{}\r\n <Error> void DB::StorageKafka::threadFunc(size_t): Code: 86, e.displayText() = DB::Exception: Received error from remote server /schemas/ids/100017. HTTP status code: 401 Unauthorized, body: \r\n{\r\n    \"error_code\": 401,\r\n    \"message\": \"Unauthorized\"\r\n}\r\n: while fetching schema id = 100017: while parsing Kafka message (topic: predictions-keystroke-demo, partition: 1, offset: 9025)', Stack trace (when copying this message, always include the lines below):\r\n```\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32887/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32887/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32863","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32863/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32863/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32863/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/32863","id":1082604321,"node_id":"I_kwDOA5dJV85Ahzsh","number":32863,"title":"clickhouse-keeper not installed by Debian package 21.11.6.7","user":{"login":"FedericoCeratto","id":91576,"node_id":"MDQ6VXNlcjkxNTc2","avatar_url":"https://avatars.githubusercontent.com/u/91576?v=4","gravatar_id":"","url":"https://api.github.com/users/FedericoCeratto","html_url":"https://github.com/FedericoCeratto","followers_url":"https://api.github.com/users/FedericoCeratto/followers","following_url":"https://api.github.com/users/FedericoCeratto/following{/other_user}","gists_url":"https://api.github.com/users/FedericoCeratto/gists{/gist_id}","starred_url":"https://api.github.com/users/FedericoCeratto/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/FedericoCeratto/subscriptions","organizations_url":"https://api.github.com/users/FedericoCeratto/orgs","repos_url":"https://api.github.com/users/FedericoCeratto/repos","events_url":"https://api.github.com/users/FedericoCeratto/events{/privacy}","received_events_url":"https://api.github.com/users/FedericoCeratto/received_events","type":"User","site_admin":false},"labels":[{"id":845247686,"node_id":"MDU6TGFiZWw4NDUyNDc2ODY=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/usability","name":"usability","color":"ebf28c","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2021-12-16T20:12:04Z","updated_at":"2022-01-20T04:01:46Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Hello,\r\nThe `clickhouse-server` Debian package at version `21.11.6.7` installs the following binaries without clickhouse-keeper (and without a systemd unit file to run it):\r\n```\r\n/usr/bin/clickhouse-report\r\n/usr/bin/clickhouse-copier\r\n/usr/bin/clickhouse-server\r\n```\r\n(Workaround: create a symlink to /usr/bin/clickhouse-server)","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32863/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32863/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32855","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32855/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32855/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32855/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/32855","id":1082232975,"node_id":"I_kwDOA5dJV85AgZCP","number":32855,"title":"X-ClickHouse-Query-Id header is not filled for DDL / errors and other type of queries","user":{"login":"filimonov","id":1549571,"node_id":"MDQ6VXNlcjE1NDk1NzE=","avatar_url":"https://avatars.githubusercontent.com/u/1549571?v=4","gravatar_id":"","url":"https://api.github.com/users/filimonov","html_url":"https://github.com/filimonov","followers_url":"https://api.github.com/users/filimonov/followers","following_url":"https://api.github.com/users/filimonov/following{/other_user}","gists_url":"https://api.github.com/users/filimonov/gists{/gist_id}","starred_url":"https://api.github.com/users/filimonov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/filimonov/subscriptions","organizations_url":"https://api.github.com/users/filimonov/orgs","repos_url":"https://api.github.com/users/filimonov/repos","events_url":"https://api.github.com/users/filimonov/events{/privacy}","received_events_url":"https://api.github.com/users/filimonov/received_events","type":"User","site_admin":false},"labels":[{"id":1481327553,"node_id":"MDU6TGFiZWwxNDgxMzI3NTUz","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-http","name":"comp-http","color":"b5bcff","default":false,"description":"http protocol related"},{"id":1575085465,"node_id":"MDU6TGFiZWwxNTc1MDg1NDY1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/unexpected%20behaviour","name":"unexpected behaviour","color":"e088ca","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-12-16T14:02:30Z","updated_at":"2022-01-03T10:46:07Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"body":"We have query id for every query. But for some reason it's not sent via HTTP headers in many cases.\r\n\r\n```\r\necho 'create table y (a UInt8) engine=Log' | curl -D- 'http://localhost:8123/' --data-binary @-\r\nHTTP/1.1 200 OK\r\nDate: Thu, 16 Dec 2021 13:59:35 GMT\r\nConnection: Keep-Alive\r\nContent-Type: text/plain; charset=UTF-8\r\nX-ClickHouse-Server-Display-Name: laptop-5591\r\nTransfer-Encoding: chunked\r\nKeep-Alive: timeout=3\r\nX-ClickHouse-Summary: {\"read_rows\":\"0\",\"read_bytes\":\"0\",\"written_rows\":\"0\",\"written_bytes\":\"0\",\"total_rows_to_read\":\"0\"}\r\n\r\necho 'SELECT * FROM sdsldfjalskdjf' | curl -D- 'http://localhost:8123/' --data-binary @-\r\nHTTP/1.1 404 Not Found\r\nDate: Thu, 16 Dec 2021 13:59:46 GMT\r\nConnection: Keep-Alive\r\nContent-Type: text/plain; charset=UTF-8\r\nX-ClickHouse-Server-Display-Name: laptop-5591\r\nTransfer-Encoding: chunked\r\nX-ClickHouse-Exception-Code: 60\r\nKeep-Alive: timeout=3\r\nX-ClickHouse-Summary: {\"read_rows\":\"0\",\"read_bytes\":\"0\",\"written_rows\":\"0\",\"written_bytes\":\"0\",\"total_rows_to_read\":\"0\"}\r\n\r\nCode: 60. DB::Exception: Table default.sdsldfjalskdjf doesn't exist. (UNKNOWN_TABLE) (version 21.12.1.8856 (official build))\r\n\r\necho 'SYSTEM STOP MERGES x;' | curl -D- 'http://localhost:8123/' --data-binary @-\r\nHTTP/1.1 200 OK\r\nDate: Thu, 16 Dec 2021 13:58:15 GMT\r\nConnection: Keep-Alive\r\nContent-Type: text/plain; charset=UTF-8\r\nX-ClickHouse-Server-Display-Name: dbdbd37d2b79\r\nTransfer-Encoding: chunked\r\nKeep-Alive: timeout=3\r\nX-ClickHouse-Summary: {\"read_rows\":\"0\",\"read_bytes\":\"0\",\"written_rows\":\"0\",\"written_bytes\":\"0\",\"total_rows_to_read\":\"0\"}\r\n```\r\n\r\n\r\nBut for inserts / selects it's ok:\r\n```\r\necho 'select * from numbers(10)' | curl -D- 'http://localhost:8123/' --data-binary @-\r\nHTTP/1.1 200 OK\r\nDate: Thu, 16 Dec 2021 13:56:01 GMT\r\nConnection: Keep-Alive\r\nContent-Type: text/tab-separated-values; charset=UTF-8\r\nX-ClickHouse-Server-Display-Name: dbdbd37d2b79\r\nTransfer-Encoding: chunked\r\nX-ClickHouse-Query-Id: 62f634ba-e829-4999-8740-15c425174c2a\r\nX-ClickHouse-Format: TabSeparated\r\nX-ClickHouse-Timezone: UTC\r\nKeep-Alive: timeout=3\r\nX-ClickHouse-Summary: {\"read_rows\":\"0\",\"read_bytes\":\"0\",\"written_rows\":\"0\",\"written_bytes\":\"0\",\"total_rows_to_read\":\"0\"}\r\n\r\n0\r\n1\r\n2\r\n3\r\n4\r\n5\r\n6\r\n7\r\n8\r\n9\r\n\r\necho 'INSERT INTO y VALUES (1)' | curl -D- 'http://localhost:8123/' --data-binary @-\r\nHTTP/1.1 200 OK\r\nDate: Thu, 16 Dec 2021 13:58:30 GMT\r\nConnection: Keep-Alive\r\nContent-Type: text/tab-separated-values; charset=UTF-8\r\nX-ClickHouse-Server-Display-Name: dbdbd37d2b79\r\nTransfer-Encoding: chunked\r\nX-ClickHouse-Query-Id: dfd9ed85-0d4f-4d51-86ce-0ae499fb9e2c\r\nX-ClickHouse-Format: TabSeparated\r\nX-ClickHouse-Timezone: UTC\r\nKeep-Alive: timeout=3\r\nX-ClickHouse-Summary: {\"read_rows\":\"0\",\"read_bytes\":\"0\",\"written_rows\":\"0\",\"written_bytes\":\"0\",\"total_rows_to_read\":\"0\"}\r\n```","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32855/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32855/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32853","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32853/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32853/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32853/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/32853","id":1082227638,"node_id":"I_kwDOA5dJV85AgXu2","number":32853,"title":"Inserts via web UI work in non-obvious way","user":{"login":"vpanfilov","id":11993879,"node_id":"MDQ6VXNlcjExOTkzODc5","avatar_url":"https://avatars.githubusercontent.com/u/11993879?v=4","gravatar_id":"","url":"https://api.github.com/users/vpanfilov","html_url":"https://github.com/vpanfilov","followers_url":"https://api.github.com/users/vpanfilov/followers","following_url":"https://api.github.com/users/vpanfilov/following{/other_user}","gists_url":"https://api.github.com/users/vpanfilov/gists{/gist_id}","starred_url":"https://api.github.com/users/vpanfilov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vpanfilov/subscriptions","organizations_url":"https://api.github.com/users/vpanfilov/orgs","repos_url":"https://api.github.com/users/vpanfilov/repos","events_url":"https://api.github.com/users/vpanfilov/events{/privacy}","received_events_url":"https://api.github.com/users/vpanfilov/received_events","type":"User","site_admin":false},"labels":[{"id":1575085465,"node_id":"MDU6TGFiZWwxNTc1MDg1NDY1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/unexpected%20behaviour","name":"unexpected behaviour","color":"e088ca","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2021-12-16T13:57:35Z","updated_at":"2021-12-16T20:53:26Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"I tried to copy table from one CH instance to another via Clickhouse web UI. THe query looked like this:\r\n```sql\r\nINSERT INTO <db>.<table> SELECT * FROM remote('<ip>', '<db>', '<table>')\r\n```\r\nBut only 8192 rows was inserted. It seems that web UI adds LIMIT clause to INSERT queries as well, which is non-obvious.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32853/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32853/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32851","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32851/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32851/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32851/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/32851","id":1082196265,"node_id":"I_kwDOA5dJV85AgQEp","number":32851,"title":"Document the types of virtual columns and _error","user":{"login":"ppecheux","id":33228518,"node_id":"MDQ6VXNlcjMzMjI4NTE4","avatar_url":"https://avatars.githubusercontent.com/u/33228518?v=4","gravatar_id":"","url":"https://api.github.com/users/ppecheux","html_url":"https://github.com/ppecheux","followers_url":"https://api.github.com/users/ppecheux/followers","following_url":"https://api.github.com/users/ppecheux/following{/other_user}","gists_url":"https://api.github.com/users/ppecheux/gists{/gist_id}","starred_url":"https://api.github.com/users/ppecheux/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ppecheux/subscriptions","organizations_url":"https://api.github.com/users/ppecheux/orgs","repos_url":"https://api.github.com/users/ppecheux/repos","events_url":"https://api.github.com/users/ppecheux/events{/privacy}","received_events_url":"https://api.github.com/users/ppecheux/received_events","type":"User","site_admin":false},"labels":[{"id":785082162,"node_id":"MDU6TGFiZWw3ODUwODIxNjI=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-documentation","name":"comp-documentation","color":"b5bcff","default":false,"description":"Used to run automatic builds of the documentation"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-12-16T13:26:02Z","updated_at":"2021-12-16T13:26:02Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"\r\nSuggestions to improve [kafka table ](https://clickhouse.com/docs/en/engines/table-engines/integrations/kafka/#virtual-columns)\r\n\r\n* document types of virtual columns because you cannot see them using `describe`\r\n* document the new virtual column `_error` \r\n\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32851/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32851/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32821","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32821/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32821/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32821/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/32821","id":1081608672,"node_id":"I_kwDOA5dJV85AeAng","number":32821,"title":"Cleanup submodules.","user":{"login":"alexey-milovidov","id":18581488,"node_id":"MDQ6VXNlcjE4NTgxNDg4","avatar_url":"https://avatars.githubusercontent.com/u/18581488?v=4","gravatar_id":"","url":"https://api.github.com/users/alexey-milovidov","html_url":"https://github.com/alexey-milovidov","followers_url":"https://api.github.com/users/alexey-milovidov/followers","following_url":"https://api.github.com/users/alexey-milovidov/following{/other_user}","gists_url":"https://api.github.com/users/alexey-milovidov/gists{/gist_id}","starred_url":"https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexey-milovidov/subscriptions","organizations_url":"https://api.github.com/users/alexey-milovidov/orgs","repos_url":"https://api.github.com/users/alexey-milovidov/repos","events_url":"https://api.github.com/users/alexey-milovidov/events{/privacy}","received_events_url":"https://api.github.com/users/alexey-milovidov/received_events","type":"User","site_admin":false},"labels":[{"id":521113272,"node_id":"MDU6TGFiZWw1MjExMTMyNzI=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/build","name":"build","color":"800000","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2021-12-15T23:27:23Z","updated_at":"2021-12-30T07:58:09Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"1. Ensure that no recursive submodules exists.\r\n2. If there are, remove nested submodules.\r\n3. If needed, move the submodule to ClickHouse-Extras org.\r\n4. Add style check that will grep .gitmodules inside the submodules.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32821/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32821/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32819","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32819/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32819/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32819/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/32819","id":1081562786,"node_id":"I_kwDOA5dJV85Ad1ai","number":32819,"title":"Multiple columns as primary key for EmbeddedRocksDB ","user":{"login":"ramazanpolat","id":3527695,"node_id":"MDQ6VXNlcjM1Mjc2OTU=","avatar_url":"https://avatars.githubusercontent.com/u/3527695?v=4","gravatar_id":"","url":"https://api.github.com/users/ramazanpolat","html_url":"https://github.com/ramazanpolat","followers_url":"https://api.github.com/users/ramazanpolat/followers","following_url":"https://api.github.com/users/ramazanpolat/following{/other_user}","gists_url":"https://api.github.com/users/ramazanpolat/gists{/gist_id}","starred_url":"https://api.github.com/users/ramazanpolat/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ramazanpolat/subscriptions","organizations_url":"https://api.github.com/users/ramazanpolat/orgs","repos_url":"https://api.github.com/users/ramazanpolat/repos","events_url":"https://api.github.com/users/ramazanpolat/events{/privacy}","received_events_url":"https://api.github.com/users/ramazanpolat/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":644208617,"node_id":"MDU6TGFiZWw2NDQyMDg2MTc=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/easy%20task","name":"easy task","color":"0e8a16","default":false,"description":"Good for first contributors"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2021-12-15T22:13:06Z","updated_at":"2021-12-16T12:34:46Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"**Use case**\r\n\r\nRight now, we can only have one column for EmbeddedRocksDB.\r\n```sql\r\nCREATE TABLE table(\r\n    `device_id` Int32,\r\n   \r\n    ...,\r\n    `is_deleted` UInt8 DEFAULT 0\r\n)\r\nENGINE = EmbeddedRocksDB\r\nPRIMARY KEY (column1, column2)\r\n```\r\n\r\n```\r\nCode: 36. DB::Exception: Received from localhost:9000. DB::Exception: StorageEmbeddedRocksDB must \r\nrequire one column in primary key. (BAD_ARGUMENTS)\r\n```\r\n\r\n\r\nI use EmbeddedRocksDB as \"last point table\" for measurements for the latest point in time. It is more convinient than using a MV of AggregatingMergeTree having a complex query with `argMax` and `GROUP BY`. Just one MV watching inserts on base table to write to an EmbeddedRocksDB table with a simple select statement. The problem is, an EmbeddedRocksDB table can only have one column as a key. So my above solution only works for the base tables that has only one column in `ORDER BY`.\r\n\r\nIf it would be possible to have an EmbeddedRocksDB table with multiple columns as primary key, then we could have a nice solution for \"last point queries\".","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32819/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32819/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32787","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32787/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32787/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32787/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/32787","id":1080547279,"node_id":"I_kwDOA5dJV85AZ9fP","number":32787,"title":"Metrics/Event category by user error/system error. ","user":{"login":"zheyu001","id":89370467,"node_id":"MDQ6VXNlcjg5MzcwNDY3","avatar_url":"https://avatars.githubusercontent.com/u/89370467?v=4","gravatar_id":"","url":"https://api.github.com/users/zheyu001","html_url":"https://github.com/zheyu001","followers_url":"https://api.github.com/users/zheyu001/followers","following_url":"https://api.github.com/users/zheyu001/following{/other_user}","gists_url":"https://api.github.com/users/zheyu001/gists{/gist_id}","starred_url":"https://api.github.com/users/zheyu001/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zheyu001/subscriptions","organizations_url":"https://api.github.com/users/zheyu001/orgs","repos_url":"https://api.github.com/users/zheyu001/repos","events_url":"https://api.github.com/users/zheyu001/events{/privacy}","received_events_url":"https://api.github.com/users/zheyu001/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-12-15T04:19:34Z","updated_at":"2021-12-15T04:19:34Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"> (you don't have to strictly follow this form)\r\n\r\n**Use case**\r\nWe are trying to build a dashboard for our clusters. One major metric is availability. We are using queries availability to reflect cluster availability, because that's one of the most important things from the point of cluster user's view. Clickhouse does provide failed query count. But it doesn't provide more details about failed query/succeed query. So if a user fired a query with in-correct syntax or queried a table without appropriate permission, it doesn't means availability drop. But if somehow the network(within cluster)/hardware is broken that means availability drop and will lead to query failure. So is there any chance we can tag the query to identify if its failure is caused by user error or system error? Kind of like return 4XX / 5XX for http request. In this way we can get better sense about the availability of our clusters. \r\n\r\nIf you have better suggestions about availability metrics, I'm all ears. Thanks!\r\n\r\n**Describe the solution you'd like**\r\n\r\n> A clear and concise description of what you want to happen.\r\n\r\nA tag or something to describe failure query is caused by user error/system error. \r\n\r\n**Describe alternatives you've considered**\r\n\r\n> A clear and concise description of any alternative solutions or features you've considered.\r\n\r\nN/A\r\n**Additional context**\r\n\r\n> Add any other context or screenshots about the feature request here.\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32787/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32787/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32775","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32775/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32775/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32775/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/32775","id":1080247116,"node_id":"I_kwDOA5dJV85AY0NM","number":32775,"title":"Encryption of memory addresses.","user":{"login":"alexey-milovidov","id":18581488,"node_id":"MDQ6VXNlcjE4NTgxNDg4","avatar_url":"https://avatars.githubusercontent.com/u/18581488?v=4","gravatar_id":"","url":"https://api.github.com/users/alexey-milovidov","html_url":"https://github.com/alexey-milovidov","followers_url":"https://api.github.com/users/alexey-milovidov/followers","following_url":"https://api.github.com/users/alexey-milovidov/following{/other_user}","gists_url":"https://api.github.com/users/alexey-milovidov/gists{/gist_id}","starred_url":"https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexey-milovidov/subscriptions","organizations_url":"https://api.github.com/users/alexey-milovidov/orgs","repos_url":"https://api.github.com/users/alexey-milovidov/repos","events_url":"https://api.github.com/users/alexey-milovidov/events{/privacy}","received_events_url":"https://api.github.com/users/alexey-milovidov/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":1006992822,"node_id":"MDU6TGFiZWwxMDA2OTkyODIy","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/operations","name":"operations","color":"7fe8ba","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-12-14T21:04:08Z","updated_at":"2021-12-14T21:04:08Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"The user can easily get symbol addresses in memory (or in object file?) by looking at the stack trace of any exception, looking into the `system.errors`, `system.trace_log`, `system.stack_trace` tables.\r\n\r\nThis allows to do ASLR bypass.\r\nNote that we don't have ASLR for main ClickHouse binary, but it is still used for glibc shared objects.\r\n\r\nOne of proposed solutions is to implement assymetric encryption of memory addresses under a setting.\r\nSo, we will be able to decrypt and analyze the addresses if our public key is used.\r\nIt is in question if it will still be possible to keep 64bit values for the addresses or we will have to make the values wider.\r\n\r\nAlso this task may become irrelevant if we will do static linking with Musl.\r\nBut maybe we will have to turn on PIE for ASLR anyway.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32775/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32775/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32774","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32774/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32774/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32774/events","html_url":"https://github.com/ClickHouse/ClickHouse/pull/32774","id":1080235314,"node_id":"PR_kwDOA5dJV84v2Seq","number":32774,"title":"Lightweight delete","user":{"login":"Enmk","id":1110183,"node_id":"MDQ6VXNlcjExMTAxODM=","avatar_url":"https://avatars.githubusercontent.com/u/1110183?v=4","gravatar_id":"","url":"https://api.github.com/users/Enmk","html_url":"https://github.com/Enmk","followers_url":"https://api.github.com/users/Enmk/followers","following_url":"https://api.github.com/users/Enmk/following{/other_user}","gists_url":"https://api.github.com/users/Enmk/gists{/gist_id}","starred_url":"https://api.github.com/users/Enmk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Enmk/subscriptions","organizations_url":"https://api.github.com/users/Enmk/orgs","repos_url":"https://api.github.com/users/Enmk/repos","events_url":"https://api.github.com/users/Enmk/events{/privacy}","received_events_url":"https://api.github.com/users/Enmk/received_events","type":"User","site_admin":false},"labels":[{"id":1309674771,"node_id":"MDU6TGFiZWwxMzA5Njc0Nzcx","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/pr-feature","name":"pr-feature","color":"007700","default":false,"description":"Pull request with new product feature"},{"id":1807683251,"node_id":"MDU6TGFiZWwxODA3NjgzMjUx","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/doc-alert","name":"doc-alert","color":"e51068","default":false,"description":"PR where any documentation work is needed or proceeded"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2021-12-14T20:57:12Z","updated_at":"2022-01-13T22:31:02Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"draft":true,"pull_request":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/pulls/32774","html_url":"https://github.com/ClickHouse/ClickHouse/pull/32774","diff_url":"https://github.com/ClickHouse/ClickHouse/pull/32774.diff","patch_url":"https://github.com/ClickHouse/ClickHouse/pull/32774.patch","merged_at":null},"body":"Changelog category (leave one):\r\n- New Feature\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32774/reactions","total_count":5,"+1":5,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32774/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32773","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32773/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32773/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32773/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/32773","id":1080177637,"node_id":"I_kwDOA5dJV85AYjPl","number":32773,"title":"TSan fails to unmap memory and gets SIGILL, server crashes with SIGSEGV","user":{"login":"tavplubix","id":14847450,"node_id":"MDQ6VXNlcjE0ODQ3NDUw","avatar_url":"https://avatars.githubusercontent.com/u/14847450?v=4","gravatar_id":"","url":"https://api.github.com/users/tavplubix","html_url":"https://github.com/tavplubix","followers_url":"https://api.github.com/users/tavplubix/followers","following_url":"https://api.github.com/users/tavplubix/following{/other_user}","gists_url":"https://api.github.com/users/tavplubix/gists{/gist_id}","starred_url":"https://api.github.com/users/tavplubix/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tavplubix/subscriptions","organizations_url":"https://api.github.com/users/tavplubix/orgs","repos_url":"https://api.github.com/users/tavplubix/repos","events_url":"https://api.github.com/users/tavplubix/events{/privacy}","received_events_url":"https://api.github.com/users/tavplubix/received_events","type":"User","site_admin":false},"labels":[{"id":1955634273,"node_id":"MDU6TGFiZWwxOTU1NjM0Mjcz","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/testing","name":"testing","color":"c9a224","default":false,"description":"Special issue with list of bugs found by CI"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-12-14T20:18:57Z","updated_at":"2021-12-14T20:18:57Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"https://s3.amazonaws.com/clickhouse-test-reports/0/2cf545642350f4395c42699d45db5700c3e28743/stress_test__thread__actions_.html\r\n\r\nserver log:\r\n```\r\n/var/log/clickhouse-server/clickhouse-server.log.2:2021.12.14 22:12:47.259360 [ 15452 ] {} <Fatal> BaseDaemon: ########################################\r\n/var/log/clickhouse-server/clickhouse-server.log.2:2021.12.14 22:12:47.266199 [ 15452 ] {} <Fatal> BaseDaemon: (version 21.13.1.433, build id: 452363989B152D94) (from thread 5352) (query_id: 3030a300-7f92-4701-adf0-d9fe3d85c8c6) Received signal Unknown signal (-3)\r\n/var/log/clickhouse-server/clickhouse-server.log.2:2021.12.14 22:12:47.270865 [ 15452 ] {} <Fatal> BaseDaemon: Sanitizer trap.\r\n/var/log/clickhouse-server/clickhouse-server.log.2:2021.12.14 22:12:47.287707 [ 15452 ] {} <Fatal> BaseDaemon: Stack trace: 0x9e55793 0x15811586 0x9d7c2f6 0x9df4189 0x9deb126 0x9deba21 0x9d93859 0x9e73bd7 0x9e738f8 0x15b793ed 0x15de559d 0x15d9dd26 0x173de074 0x173dcdbb 0x17a2b04b 0x17a30eda 0x17a2f400 0x17a21ac0 0x17a22bd7 0x17a211c9 0x176c8a35 0x176c84f3 0x17967dca 0x176ef6cf 0x176e16c1 0x176e28b5 0x9e7a5ce 0x9e7dd91 0x9d94e3d 0x7f8d20bb3609 0x7f8d20ada293\r\n/var/log/clickhouse-server/clickhouse-server.log.2:2021.12.14 22:12:57.025441 [ 513 ] {} <Fatal> Application: Child process was terminated by signal 11.\r\n```\r\n\r\ngdb log:\r\n```\r\n2021-12-14 22:12:47 Thread 23 \"MergeMutate\" received signal SIGILL, Illegal instruction.\r\n2021-12-14 22:12:47 [Switching to Thread 0x7f8c8d8a5700 (LWP 547)]\r\n2021-12-14 22:12:47 0x0000000009d7c3f8 in __sanitizer::CheckFailed(char const*, int, char const*, unsigned long long, unsigned long long) ()\r\n2021-12-14 22:12:47 #0  0x0000000009d7c3f8 in __sanitizer::CheckFailed(char const*, int, char const*, unsigned long long, unsigned long long) ()\r\n2021-12-14 22:12:47 No symbol table info available.\r\n2021-12-14 22:12:47 #1  0x0000000009d76dcf in __sanitizer::UnmapOrDie(void*, unsigned long) ()\r\n2021-12-14 22:12:47 No symbol table info available.\r\n2021-12-14 22:12:47 #2  0x0000000009d7045b in __sanitizer::ReadFileToBuffer(char const*, char**, unsigned long*, unsigned long*, unsigned long, int*) ()\r\n2021-12-14 22:12:47 No symbol table info available.\r\n2021-12-14 22:12:47 #3  0x0000000009d79b94 in __sanitizer::ReadProcMaps(__sanitizer::ProcSelfMapsBuff*) ()\r\n2021-12-14 22:12:47 No symbol table info available.\r\n2021-12-14 22:12:47 #4  0x0000000009d792ca in __sanitizer::MemoryMappingLayout::MemoryMappingLayout(bool) ()\r\n2021-12-14 22:12:47 No symbol table info available.\r\n2021-12-14 22:12:47 #5  0x0000000009d7d3ad in __sanitizer::ListOfModules::fallbackInit() ()\r\n2021-12-14 22:12:47 No symbol table info available.\r\n2021-12-14 22:12:47 #6  0x0000000009d83d41 in __sanitizer::Symbolizer::FindModuleForAddress(unsigned long) ()\r\n2021-12-14 22:12:47 No symbol table info available.\r\n2021-12-14 22:12:47 #7  0x0000000009d838f8 in __sanitizer::Symbolizer::SymbolizePC(unsigned long) ()\r\n2021-12-14 22:12:47 No symbol table info available.\r\n2021-12-14 22:12:47 #8  0x0000000009e0018e in __tsan::SymbolizeStack(__sanitizer::StackTrace) ()\r\n2021-12-14 22:12:47 No symbol table info available.\r\n2021-12-14 22:12:47 #9  0x0000000009e03c6d in __tsan::PrintCurrentStackSlow(unsigned long) ()\r\n2021-12-14 22:12:47 No symbol table info available.\r\n2021-12-14 22:12:47 #10 0x0000000009df0966 in __tsan::CheckUnwind() ()\r\n2021-12-14 22:12:47 No symbol table info available.\r\n2021-12-14 22:12:47 #11 0x0000000009d7c3e5 in __sanitizer::CheckFailed(char const*, int, char const*, unsigned long long, unsigned long long) ()\r\n2021-12-14 22:12:47 No symbol table info available.\r\n2021-12-14 22:12:47 #12 0x0000000009d76dcf in __sanitizer::UnmapOrDie(void*, unsigned long) ()\r\n2021-12-14 22:12:47 No symbol table info available.\r\n2021-12-14 22:12:47 #13 0x0000000009deb92e in __tsan::user_free(__tsan::ThreadState*, unsigned long, void*, bool) ()\r\n2021-12-14 22:12:47 No symbol table info available.\r\n2021-12-14 22:12:47 #14 0x0000000009d93e0b in free ()\r\n2021-12-14 22:12:47 No symbol table info available.\r\n2021-12-14 22:12:47 #15 0x0000000009e73ff2 in Allocator<false, false>::freeNoTrack (this=this@entry=0x7b24009e6fe0, buf=buf@entry=0x7f8978364000, size=size@entry=1048591) at ../src/Common/Allocator.h:257\r\n2021-12-14 22:12:47 No locals.\r\n2021-12-14 22:12:47 #16 0x0000000009e73e98 in Allocator<false, false>::free (this=0x7b24009e6fe0, buf=0x7f8978364000, size=1048591) at ../src/Common/Allocator.h:105\r\n2021-12-14 22:12:47 No locals.\r\n2021-12-14 22:12:47 #17 0x0000000009e812f0 in DB::Memory<Allocator<false, false> >::dealloc (this=0x7b24009e6fe0) at ../src/IO/BufferWithOwnMemory.h:136\r\n2021-12-14 22:12:47 No locals.\r\n2021-12-14 22:12:47 #18 DB::Memory<Allocator<false, false> >::~Memory (this=0x7b24009e6fe0) at ../src/IO/BufferWithOwnMemory.h:48\r\n2021-12-14 22:12:47 No locals.\r\n2021-12-14 22:12:47 #19 DB::BufferWithOwnMemory<DB::WriteBuffer>::~BufferWithOwnMemory (this=<optimized out>) at ../src/IO/BufferWithOwnMemory.h:146\r\n2021-12-14 22:12:47 No locals.\r\n2021-12-14 22:12:47 #20 DB::WriteBufferFromFileDescriptor::~WriteBufferFromFileDescriptor (this=<optimized out>) at ../src/IO/WriteBufferFromFileDescriptor.cpp:98\r\n2021-12-14 22:12:47 No locals.\r\n2021-12-14 22:12:47 #21 0x0000000009f50600 in DB::WriteBufferFromFile::~WriteBufferFromFile (this=0x7b24009e6fa0) at ../src/IO/WriteBufferFromFile.cpp:76\r\n2021-12-14 22:12:47 No locals.\r\n2021-12-14 22:12:47 #22 DB::WriteBufferFromFile::~WriteBufferFromFile (this=0x7b24009e6fa0) at ../src/IO/WriteBufferFromFile.cpp:73\r\n2021-12-14 22:12:47 No locals.\r\n2021-12-14 22:12:47 #23 0x00000000171e641e in std::__1::default_delete<DB::WriteBufferFromFileBase>::operator() (__ptr=0x7b24009e6fa0, this=<optimized out>) at ../contrib/libcxx/include/memory:1397\r\n2021-12-14 22:12:47 No locals.\r\n2021-12-14 22:12:47 #24 std::__1::unique_ptr<DB::WriteBufferFromFileBase, std::__1::default_delete<DB::WriteBufferFromFileBase> >::reset (__p=0x0, this=<optimized out>) at ../contrib/libcxx/include/memory:1658\r\n2021-12-14 22:12:47         __tmp = 0x7b24009e6fa0\r\n2021-12-14 22:12:47 #25 std::__1::unique_ptr<DB::WriteBufferFromFileBase, std::__1::default_delete<DB::WriteBufferFromFileBase> >::~unique_ptr (this=<optimized out>) at ../contrib/libcxx/include/memory:1612\r\n2021-12-14 22:12:48 No locals.\r\n2021-12-14 22:12:48 #26 DB::DataPartsExchange::Fetcher::downloadBaseOrProjectionPartToDisk (this=this@entry=0x7b84002618a8, replica_path=..., part_download_path=..., sync=false, disk=..., in=..., checksums=..., throttler=...) at ../src/Storages/MergeTree/DataPartsExchange.cpp:678\r\n2021-12-14 22:12:48         i = 5\r\n2021-12-14 22:12:48         files = <optimized out>\r\n2021-12-14 22:12:48 #27 0x00000000171e4e83 in DB::DataPartsExchange::Fetcher::downloadPartToDisk (this=this@entry=0x7b84002618a8, part_name=..., replica_path=..., to_detached=false, tmp_prefix_=..., sync=false, disk=..., in=..., projections=0, checksums=..., throttler=...) at ../src/Storages/MergeTree/DataPartsExchange.cpp:734\r\n2021-12-14 22:12:49         TMP_PREFIX = {<std::__1::__basic_string_common<true>> = {<No data fields>}, static __short_mask = 128, static __long_mask = 9223372036854775808, __r_ = {<std::__1::__compressed_pair_elem<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, 0, false>> = {__value_ = {{__l = {__data_ = 0x637465662d706d74 <error: Cannot access memory at address 0x637465662d706d74>, __size_ = 24424, __cap_ = 720575940379279360}, __s = {__data_ = \"tmp-fetch_\", '\\000' <repeats 12 times>, {<std::__1::__padding<char, 1>> = {<No data fields>}, __size_ = 10 '\\n'}}, __r = {__words = {7166464396576714100, 24424, 720575940379279360}}}}}, <std::__1::__compressed_pair_elem<std::__1::allocator<char>, 1, true>> = {<std::__1::allocator<char>> = {<No data fields>}, <No data fields>}, <No data fields>}, static npos = 18446744073709551615}\r\n2021-12-14 22:12:49         tmp_prefix = {<std::__1::__basic_string_common<true>> = {<No data fields>}, static __short_mask = 128, static __long_mask = 9223372036854775808, __r_ = {<std::__1::__compressed_pair_elem<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, 0, false>> = {__value_ = {{__l = {__data_ = 0x637465662d706d74 <error: Cannot access memory at address 0x637465662d706d74>, __size_ = 24424, __cap_ = 720575940379279360}, __s = {__data_ = \"tmp-fetch_\", '\\000' <repeats 12 times>, {<std::__1::__padding<char, 1>> = {<No data fields>}, __size_ = 10 '\\n'}}, __r = {__words = {7166464396576714100, 24424, 720575940379279360}}}}}, <std::__1::__compressed_pair_elem<std::__1::allocator<char>, 1, true>> = {<std::__1::allocator<char>> = {<No data fields>}, <No data fields>}, <No data fields>}, static npos = 18446744073709551615}\r\n2021-12-14 22:12:49         part_relative_path = {<std::__1::__basic_string_common<true>> = {<No data fields>}, static __short_mask = 128, static __long_mask = 9223372036854775808, __r_ = {<std::__1::__compressed_pair_elem<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, 0, false>> = {__value_ = {{__l = {__data_ = 0x7b0c00264ff0 \"tmp-fetch_all_47_47_0_55\", __size_ = 24, __cap_ = 9223372036854775856}, __s = {__data_ = \"\\360O&\\000\\f{\\000\\000\\030\\000\\000\\000\\000\\000\\000\\000\\060\\000\\000\\000\\000\\000\", {<std::__1::__padding<char, 1>> = {<No data fields>}, __size_ = 128 '\\200'}}, __r = {__words = {135291472334832, 24, 9223372036854775856}}}}}, <std::__1::__compressed_pair_elem<std::__1::allocator<char>, 1, true>> = {<std::__1::allocator<char>> = {<No data fields>}, <No data fields>}, <No data fields>}, static npos = 18446744073709551615}\r\n2021-12-14 22:12:49         part_download_path = {<std::__1::__basic_string_common<true>> = {<No data fields>}, static __short_mask = 128, static __long_mask = 9223372036854775808, __r_ = {<std::__1::__compressed_pair_elem<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, 0, false>> = {__value_ = {{__l = {__data_ = 0x7b18008a12c0 \"store/0d5/0d56dc9c-9798-41e7-8d56-dc9c979831e7/tmp-fetch_all_47_47_0_55/\", __size_ = 72, __cap_ = 9223372036854775904}, __s = {__data_ = \"\\300\\022\\212\\000\\030{\\000\\000H\\000\\000\\000\\000\\000\\000\\000`\\000\\000\\000\\000\\000\", {<std::__1::__padding<char, 1>> = {<No data fields>}, __size_ = 128 '\\200'}}, __r = {__words = {135343018480320, 72, 9223372036854775904}}}}}, <std::__1::__compressed_pair_elem<std::__1::allocator<char>, 1, true>> = {<std::__1::allocator<char>> = {<No data fields>}, <No data fields>}, <No data fields>}, static npos = 18446744073709551615}\r\n2021-12-14 22:12:49         volume = {__ptr_ = 0x0, __cntrl_ = 0x0}\r\n2021-12-14 22:12:49         new_data_part = {__ptr_ = 0xc8c1500000000000, __cntrl_ = 0x7f88ca723054}\r\n2021-12-14 22:12:49         sync_guard = {__ptr_ = {<std::__1::__compressed_pair_elem<DB::ISyncGuard*, 0, false>> = {__value_ = 0x0}, <std::__1::__compressed_pair_elem<std::__1::default_delete<DB::ISyncGuard>, 1, true>> = {<std::__1::default_delete<DB::ISyncGuard>> = {<No data fields>}, <No data fields>}, <No data fields>}}\r\n2021-12-14 22:12:49         metric_increment = {what = <optimized out>, amount = 1}\r\n2021-12-14 22:12:49 #28 0x00000000171dff4b in DB::DataPartsExchange::Fetcher::fetchPart (this=0x0, metadata_snapshot=..., context=..., part_name=..., replica_path=..., host=..., port=9009, timeouts=..., user=..., password=..., interserver_scheme=..., throttler=..., to_detached=false, tmp_prefix_=..., tagger_ptr=0x7f8c8d85cbb0, try_zero_copy=<optimized out>, disk=...) at ../src/Storages/MergeTree/DataPartsExchange.cpp:549\r\n2021-12-14 22:12:49         part_info = {partition_id = {<std::__1::__basic_string_common<true>> = {<No data fields>}, static __short_mask = 128, static __long_mask = 9223372036854775808, __r_ = {<std::__1::__compressed_pair_elem<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, 0, false>> = {__value_ = {{__l = {__data_ = 0x6c6c61 \"F\\326\\025\", __size_ = 0, __cap_ = 216172782113783808}, __s = {__data_ = \"all\", '\\000' <repeats 19 times>, {<std::__1::__padding<char, 1>> = {<No data fields>}, __size_ = 3 '\\003'}}, __r = {__words = {7105633, 0, 216172782113783808}}}}}, <std::__1::__compressed_pair_elem<std::__1::allocator<char>, 1, true>> = {<std::__1::allocator<char>> = {<No data fields>}, <No data fields>}, <No data fields>}, static npos = 18446744073709551615}, min_block = 47, max_block = 47, level = 0, mutation = 55, use_leagcy_max_level = false, static MAX_LEVEL = 999999999, static MAX_BLOCK_NUMBER = 999999999, static LEGACY_MAX_LEVEL = 4294967295}\r\n2021-12-14 22:12:49         data_settings = {__ptr_ = 0x7b68001bfc00, __cntrl_ = 0x7b08004a0080}\r\n2021-12-14 22:12:49         uri = {static RESERVED_PATH = {<std::__1::__basic_string_common<true>> = {<No data fields>}, static __short_mask = 128, static __long_mask = 9223372036854775808, __r_ = {<std::__1::__compressed_pair_elem<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, 0, false>> = {__value_ = {{__l = {__data_ = 0x233f <error: Cannot access memory at address 0x233f>, __size_ = 0, __cap_ = 144115188075855872}, __s = {__data_ = \"?#\", '\\000' <repeats 20 times>, {<std::__1::__padding<char, 1>> = {<No data fields>}, __size_ = 2 '\\002'}}, __r = {__words = {9023, 0, 144115188075855872}}}}}, <std::__1::__compressed_pair_elem<std::__1::allocator<char>, 1, true>> = {<std::__1::allocator<char>> = {<No data fields>}, <No data fields>}, <No data fields>}, static npos = 18446744073709551615}, static RESERVED_QUERY = {<std::__1::__basic_string_common<true>> = {<No data fields>}, static __short_mask = 128, static __long_mask = 9223372036854775808, __r_ = {<std::__1::__compressed_pair_elem<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, 0, false>> = {__value_ = {{__l = {__data_ = 0x402b3b3a2f233f <error: Cannot access memory at address 0x402b3b3a2f233f>, __size_ = 0, __cap_ = 504403158265495552}, __s = {__data_ = \"?#/:;+@\", '\\000' <repeats 15 times>, {<std::__1::__padding<char, 1>> = {<No data fields>}, __size_ = 7 '\\a'}}, __r = {__words = {18061931888714559, 0, 504403158265495552}}}}}, <std::__1::__compressed_pair_elem<std::__1::allocator<char>, 1, true>> = {<std::__1::allocator<char>> = {<No data fields>}, <No data fields>}, <No data fields>}, static npos = 18446744073709551615}, static RESERVED_QUERY_PARAM = {<std::__1::__basic_string_common<true>> = {<No data fields>}, static __short_mask = 128, static __long_mask = 9223372036854775808, __r_ = {<std::__1::__compressed_pair_elem<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, 0, false>> = {__value_ = {{__l = {__data_ = 0x26402b3b3a2f233f <error: Cannot access memory at address 0x26402b3b3a2f233f>, __size_ = 61, __cap_ = 648518346341351424}, __s = {__data_ = \"?#/:;+@&=\", '\\000' <repeats 13 times>, {<std::__1::__padding<char, 1>> = {<No data fields>}, __size_ = 9 '\\t'}}, __r = {__words = {2756250505329976127, 61, 648518346341351424}}}}}, <std::__1::__compressed_pair_elem<std::__1::allocator<char>, 1, true>> = {<std::__1::allocator<char>> = {<No data fields>}, <No data fields>}, <No data fields>}, static npos = 18446744073709551615}, static RESERVED_FRAGMENT = {<std::__1::__basic_string_common<true>> = {<No data fields>}, static __short_mask = 128, static __long_mask = 9223372036854775808, __r_ = {<std::__1::__compressed_pair_elem<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, 0, false>> = {__value_ = {{__l = {__data_ = 0x0, __size_ = 0, __cap_ = 0}, __s = {__data_ = '\\000' <repeats 22 times>, {<std::__1::__padding<char, 1>> = {<No data fields>}, __size_ = 0 '\\000'}}, __r = {__words = {0, 0, 0}}}}}, <std::__1::__compressed_pair_elem<std::__1::allocator<char>, 1, true>> = {<std::__1::allocator<char>> = {<No data fields>}, <No data fields>}, <No data fields>}, static npos = 18446744073709551615}, static ILLEGAL = {<std::__1::__basic_string_common<true>> = {<No data fields>}, static __short_mask = 128, static __long_mask = 9223372036854775808, __r_ = {<std::__1::__compressed_pair_elem<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, 0, false>> = {__value_ = {{__l = {__data_ = 0x225c7c7d7b3e3c25 <error: Cannot access memory at address 0x225c7c7d7b3e3c25>, __size_ = 2605658008086208606, __cap_ = 1369094286726748972}, __s = {__data_ = \"%<>{}|\\\\\\\"^`!*'()$,[]\\000\\000\\000\", {<std::__1::__padding<char, 1>> = {<No data fields>}, __size_ = 19 '\\023'}}, __r = {__words = {2475990773527362597, 2605658008086208606, 1369094286726748972}}}}}, <std::__1::__compressed_pair_elem<std::__1::allocator<char>, 1, true>> = {<std::__1::allocator<char>> = {<No data fields>}, <No data fields>}, <No data fields>}, static npos = 18446744073709551615}, _scheme = {<std::__1::__basic_string_common<true>> = {<No data fields>}, static __short_mask = 128, static __long_mask = 9223372036854775808, __r_ = {<std::__1::__compressed_pair_elem<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, 0, false>> = {__value_ = {{__l = {__data_ = 0x70747468 <error: Cannot access memory at address 0x70747468>, __size_ = 140722268654996, __cap_ = 288230376151711748}, __s = {__data_ = \"http\\000\\000\\000\\000\\224\\315\\325t\\374\\177\\000\\000\\004\\000\\000\\000\\000\\000\", {<std::__1::__padding<char, 1>> = {<No data fields>}, __size_ = 4 '\\004'}}, __r = {__words = {1886680168, 140722268654996, 288230376151711748}}}}}, <std::__1::__compressed_pair_elem<std::__1::allocator<char>, 1, true>> = {<std::__1::allocator<char>> = {<No data fields>}, <No data fields>}, <No data fields>}, static npos = 18446744073709551615}, _userInfo = {<std::__1::__basic_string_common<true>> = {<No data fields>}, static __short_mask = 128, static __long_mask = 9223372036854775808, __r_ = {<std::__1::__compressed_pair_elem<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, 0, false>> = {__value_ = {{__l = {__data_ = 0x0, __size_ = 0, __cap_ = 0}, __s = {__data_ = '\\000' <repeats 22 times>, {<std::__1::__padding<char, 1>> = {<No data fields>}, __size_ = 0 '\\000'}}, __r = {__words = {0, 0, 0}}}}}, <std::__1::__compressed_pair_elem<std::__1::allocator<char>, 1, true>> = {<std::__1::allocator<char>> = {<No data fields>}, <No data fields>}, <No data fields>}, static npos = 18446744073709551615}, _host = {<std::__1::__basic_string_common<true>> = {<No data fields>}, static __short_mask = 128, static __long_mask = 9223372036854775808, __r_ = {<std::__1::__compressed_pair_elem<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, 0, false>> = {__value_ = {{__l = {__data_ = 0x3732616536656131 <error: Cannot access memory at address 0x3732616536656131>, __size_ = 876176484, __cap_ = 864691128455135232}, __s = {__data_ = \"1ae6ea27dd94\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\", {<std::__1::__padding<char, 1>> = {<No data fields>}, __size_ = 12 '\\f'}}, __r = {__words = {3977348508253774129, 876176484, 864691128455135232}}}}}, <std::__1::__compressed_pair_elem<std::__1::allocator<char>, 1, true>> = {<std::__1::allocator<char>> = {<No data fields>}, <No data fields>}, <No data fields>}, static npos = 18446744073709551615}, _port = 9009, _path = {<std::__1::__basic_string_common<true>> = {<No data fields>}, static __short_mask = 128, static __long_mask = 9223372036854775808, __r_ = {<std::__1::__compressed_pair_elem<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, 0, false>> = {__value_ = {{__l = {__data_ = 0x0, __size_ = 0, __cap_ = 0}, __s = {__data_ = '\\000' <repeats 22 times>, {<std::__1::__padding<char, 1>> = {<No data fields>}, __size_ = 0 '\\000'}}, __r = {__words = {0, 0, 0}}}}}, <std::__1::__compressed_pair_elem<std::__1::allocator<char>, 1, true>> = {<std::__1::allocator<char>> = {<No data fields>}, <No data fields>}, <No data fields>}, static npos = 18446744073709551615}, _query = {<std::__1::__basic_string_common<true>> = {<No data fields>}, static __short_mask = 128, static __long_mask = 9223372036854775808, __r_ = {<std::__1::__compressed_pair_elem<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, 0, false>> = {__value_ = {{__l = {__data_ = 0x7b480065c400 \"endpoint=DataPartsExchange%3A%2Fclickhouse%2Ftables%2F01079_parallel_alter_modify_zookeeper_long_test_7ts6hs%2Fconcurrent_alter_mt%2Freplicas%2F4&part=all_47_47_0_55&client_protocol_version=7&compress\"..., __size_ = 206, __cap_ = 9223372036854776192}, __s = {__data_ = \"\\000\\304e\\000H{\\000\\000\\316\\000\\000\\000\\000\\000\\000\\000\\200\\001\\000\\000\\000\\000\", {<std::__1::__padding<char, 1>> = {<No data fields>}, __size_ = 128 '\\200'}}, __r = {__words = {135549174531072, 206, 9223372036854776192}}}}}, <std::__1::__compressed_pair_elem<std::__1::allocator<char>, 1, true>> = {<std::__1::allocator<char>> = {<No data fields>}, <No data fields>}, <No data fields>}, static npos = 18446744073709551615}, _fragment = {<std::__1::__basic_string_common<true>> = {<No data fields>}, static __short_mask = 128, static __long_mask = 9223372036854775808, __r_ = {<std::__1::__compressed_pair_elem<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, 0, false>> = {__value_ = {{__l = {__data_ = 0x0, __size_ = 0, __cap_ = 0}, __s = {__data_ = '\\000' <repeats 22 times>, {<std::__1::__padding<char, 1>> = {<No data fields>}, __size_ = 0 '\\000'}}, __r = {__words = {0, 0, 0}}}}}, <std::__1::__compressed_pair_elem<std::__1::allocator<char>, 1, true>> = {<std::__1::allocator<char>> = {<No data fields>}, <No data fields>}, <No data fields>}, static npos = 18446744073709551615}}\r\n2021-12-14 22:12:49         capability = {<std::__1::__vector_base<std::__1::string, std::__1::allocator<std::__1::string> >> = {<std::__1::__vector_base_common<true>> = {<No data fields>}, __begin_ = 0x0, __end_ = 0x0, __end_cap_ = {<std::__1::__compressed_pair_elem<std::__1::string*, 0, false>> = {__value_ = 0x0}, <std::__1::__compressed_pair_elem<std::__1::allocator<std::__1::string>, 1, true>> = {<std::__1::allocator<std::__1::string>> = {<No data fields>}, <No data fields>}, <No data fields>}}, <No data fields>}\r\n2021-12-14 22:12:49         creds = {static SCHEME = {<std::__1::__basic_string_common<true>> = {<No data fields>}, static __short_mask = 128, static __long_mask = 9223372036854775808, __r_ = {<std::__1::__compressed_pair_elem<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, 0, false>> = {__value_ = {{__l = {__data_ = 0x6369736142 <error: Cannot access memory at address 0x6369736142>, __size_ = 0, __cap_ = 360287970189639680}, __s = {__data_ = \"Basic\", '\\000' <repeats 17 times>, {<std::__1::__padding<char, 1>> = {<No data fields>}, __size_ = 5 '\\005'}}, __r = {__words = {426970931522, 0, 360287970189639680}}}}}, <std::__1::__compressed_pair_elem<std::__1::allocator<char>, 1, true>> = {<std::__1::allocator<char>> = {<No data fields>}, <No data fields>}, <No data fields>}, static npos = 18446744073709551615}, _username = {<std::__1::__basic_string_common<true>> = {<No data fields>}, static __short_mask = 128, static __long_mask = 9223372036854775808, __r_ = {<std::__1::__compressed_pair_elem<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, 0, false>> = {__value_ = {{__l = {__data_ = 0x0, __size_ = 0, __cap_ = 0}, __s = {__data_ = '\\000' <repeats 22 times>, {<std::__1::__padding<char, 1>> = {<No data fields>}, __size_ = 0 '\\000'}}, __r = {__words = {0, 0, 0}}}}}, <std::__1::__compressed_pair_elem<std::__1::allocator<char>, 1, true>> = {<std::__1::allocator<char>> = {<No data fields>}, <No data fields>}, <No data fields>}, static npos = 18446744073709551615}, _password = {<std::__1::__basic_string_common<true>> = {<No data fields>}, static __short_mask = 128, static __long_mask = 9223372036854775808, __r_ = {<std::__1::__compressed_pair_elem<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, 0, false>> = {__value_ = {{__l = {__data_ = 0x0, __size_ = 0, __cap_ = 0}, __s = {__data_ = '\\000' <repeats 22 times>, {<std::__1::__padding<char, 1>> = {<No data fields>}, __size_ = 0 '\\000'}}, __r = {__words = {0, 0, 0}}}}}, <std::__1::__compressed_pair_elem<std::__1::allocator<char>, 1, true>> = {<std::__1::allocator<char>> = {<No data fields>}, <No data fields>}, <No data fields>}, static npos = 18446744073709551615}}\r\n2021-12-14 22:12:49         in = {<DB::detail::ReadWriteBufferFromHTTPBase<std::__1::shared_ptr<DB::UpdatablePooledSession> >> = {<DB::SeekableReadBufferWithSize> = {<DB::SeekableReadBuffer> = {<DB::ReadBuffer> = {<DB::BufferBase> = {pos = 0x7f88ca723323 \"\\vprimary.idx\\020\", bytes = 0, working_buffer = {begin_pos = 0x7f88ca723000 \"\\335\", end_pos = 0x7f88ca723357 \"\"}, internal_buffer = {begin_pos = 0x7f88ca723000 \"\\335\", end_pos = 0x7f88ca723357 \"\"}, padded = false}, _vptr$ReadBuffer = 0x54b40d8 <vtable for DB::PooledReadWriteBufferFromHTTP+16>, nextimpl_working_buffer_offset = 0}, <No data fields>}, read_type = DB::SeekableReadBufferWithSize::ReadType::DEFAULT, file_size = {<std::__1::__optional_move_assign_base<unsigned long, true>> = {<std::__1::__optional_copy_assign_base<unsigned long, true>> = {<std::__1::__optional_move_base<unsigned long, true>> = {<std::__1::__optional_copy_base<unsigned long, true>> = {<std::__1::__optional_storage_base<unsigned long, false>> = {<std::__1::__optional_destruct_base<unsigned long, true>> = {{__null_state_ = 0 '\\000', __val_ = 58503346544384}, __engaged_ = false}, <No data fields>}, <No data fields>}, <No data fields>}, <No data fields>}, <No data fields>}, <std::__1::__sfinae_ctor_base<true, true>> = {<No data fields>}, <std::__1::__sfinae_assign_base<true, true>> = {<No data fields>}, <No data fields>}}, uri = {static RESERVED_PATH = {<std::__1::__basic_string_common<true>> = {<No data fields>}, static __short_mask = 128, static __long_mask = 9223372036854775808, __r_ = {<std::__1::__compressed_pair_elem<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, 0, false>> = {__value_ = {{__l = {__data_ = 0x233f <error: Cannot access memory at address 0x233f>, __size_ = 0, __cap_ = 144115188075855872}, __s = {__data_ = \"?#\", '\\000' <repeats 20 times>, {<std::__1::__padding<char, 1>> = {<No data fields>}, __size_ = 2 '\\002'}}, __r = {__words = {9023, 0, 144115188075855872}}}}}, <std::__1::__compressed_pair_elem<std::__1::allocator<char>, 1, true>> = {<std::__1::allocator<char>> = {<No data fields>}, <No data fields>}, <No data fields>}, static npos = 18446744073709551615}, static RESERVED_QUERY = {<std::__1::__basic_string_common<true>> = {<No data fields>}, static __short_mask = 128, static __long_mask = 9223372036854775808, __r_ = {<std::__1::__compressed_pair_elem<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, 0, false>> = {__value_ = {{__l = {__data_ = 0x402b3b3a2f233f <error: Cannot access memory at address 0x402b3b3a2f233f>, __size_ = 0, __cap_ = 504403158265495552}, __s = {__data_ = \"?#/:;+@\", '\\000' <repeats 15 times>, {<std::__1::__padding<char, 1>> = {<No data fields>}, __size_ = 7 '\\a'}}, __r = {__words = {18061931888714559, 0, 504403158265495552}}}}}, <std::__1::__compressed_pair_elem<std::__1::allocator<char>, 1, true>> = {<std::__1::allocator<char>> = {<No data fields>}, <No data fields>}, <No data fields>}, static npos = 18446744073709551615}, static RESERVED_QUERY_PARAM = {<std::__1::__basic_string_common<true>> = {<No data fields>}, static __short_mask = 128, static __long_mask = 9223372036854775808, __r_ = {<std::__1::__compressed_pair_elem<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, 0, false>> = {__value_ = {{__l = {__data_ = 0x26402b3b3a2f233f <error: Cannot access memory at address 0x26402b3b3a2f233f>, __size_ = 61, __cap_ = 648518346341351424}, __s = {__data_ = \"?#/:;+@&=\", '\\000' <repeats 13 times>, {<std::__1::__padding<char, 1>> = {<No data fields>}, __size_ = 9 '\\t'}}, __r = {__words = {2756250505329976127, 61, 648518346341351424}}}}}, <std::__1::__compressed_pair_elem<std::__1::allocator<char>, 1, true>> = {<std::__1::allocator<char>> = {<No data fields>}, <No data fields>}, <No data fields>}, static npos = 18446744073709551615}, static RESERVED_FRAGMENT = {<std::__1::__basic_string_common<true>> = {<No data fields>}, static __short_mask = 128, static __long_mask = 9223372036854775808, __r_ = {<std::__1::__compressed_pair_elem<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, 0, false>> = {__value_ = {{__l = {__data_ = 0x0, __size_ = 0, __cap_ = 0}, __s = {__data_ = '\\000' <repeats 22 times>, {<std::__1::__padding<char, 1>> = {<No data fields>}, __size_ = 0 '\\000'}}, __r = {__words = {0, 0, 0}}}}}, <std::__1::__compressed_pair_elem<std::__1::allocator<char>, 1, true>> = {<std::__1::allocator<char>> = {<No data fields>}, <No data fields>}, <No data fields>}, static npos = 18446744073709551615}, static ILLEGAL = {<std::__1::__basic_string_common<true>> = {<No data fields>}, static __short_mask = 128, static __long_mask = 9223372036854775808, __r_ = {<std::__1::__compressed_pair_elem<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, 0, false>> = {__value_ = {{__l = {__data_ = 0x225c7c7d7b3e3c25 <error: Cannot access memory at address 0x225c7c7d7b3e3c25>, __size_ = 2605658008086208606, __cap_ = 1369094286726748972}, __s = {__data_ = \"%<>{}|\\\\\\\"^`!*'()$,[]\\000\\000\\000\", {<std::__1::__padding<char, 1>> = {<No data fields>}, __size_ = 19 '\\023'}}, __r = {__words = {2475990773527362597, 2605658008086208606, 1369094286726748972}}}}}, <std::__1::__compressed_pair_elem<std::__1::allocator<char>, 1, true>> = {<std::__1::allocator<char>> = {<No data fields>}, <No data fields>}, <No data fields>}, static npos = 18446744073709551615}, _scheme = {<std::__1::__basic_string_common<true>> = {<No data fields>}, static __short_mask = 128, static __long_mask = 9223372036854775808, __r_ = {<std::__1::__compressed_pair_elem<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, 0, false>> = {__value_ = {{__l = {__data_ = 0x70747468 <error: Cannot access memory at address 0x70747468>, __size_ = 140722268654996, __cap_ = 288230376151711748}, __s = {__data_ = \"http\\000\\000\\000\\000\\224\\315\\325t\\374\\177\\000\\000\\004\\000\\000\\000\\000\\000\", {<std::__1::__padding<char, 1>> = {<No data fields>}, __size_ = 4 '\\004'}}, __r = {__words = {1886680168, 140722268654996, 288230376151711748}}}}}, <std::__1::__compressed_pair_elem<std::__1::allocator<char>, 1, true>> = {<std::__1::allocator<char>> = {<No data fields>}, <No data fields>}, <No data fields>}, static npos = 18446744073709551615}, _userInfo = {<std::__1::__basic_string_common<true>> = {<No data fields>}, static __short_mask = 128, static __long_mask = 9223372036854775808, __r_ = {<std::__1::__compressed_pair_elem<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, 0, false>> = {__value_ = {{__l = {__data_ = 0x0, __size_ = 0, __cap_ = 0}, __s = {__data_ = '\\000' <repeats 22 times>, {<std::__1::__padding<char, 1>> = {<No data fields>}, __size_ = 0 '\\000'}}, __r = {__words = {0, 0, 0}}}}}, <std::__1::__compressed_pair_elem<std::__1::allocator<char>, 1, true>> = {<std::__1::allocator<char>> = {<No data fields>}, <No data fields>}, <No data fields>}, static npos = 18446744073709551615}, _host = {<std::__1::__basic_string_common<true>> = {<No data fields>}, static __short_mask = 128, static __long_mask = 9223372036854775808, __r_ = {<std::__1::__compressed_pair_elem<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, 0, false>> = {__value_ = {{__l = {__data_ = 0x3732616536656131 <error: Cannot access memory at address 0x3732616536656131>, __size_ = 876176484, __cap_ = 864691128455135232}, __s = {__data_ = \"1ae6ea27dd94\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\", {<std::__1::__padding<char, 1>> = {<No data fields>}, __size_ = 12 '\\f'}}, __r = {__words = {3977348508253774129, 876176484, 864691128455135232}}}}}, <std::__1::__compressed_pair_elem<std::__1::allocator<char>, 1, true>> = {<std::__1::allocator<char>> = {<No data fields>}, <No data fields>}, <No data fields>}, static npos = 18446744073709551615}, _port = 9009, _path = {<std::__1::__basic_string_common<true>> = {<No data fields>}, static __short_mask = 128, static __long_mask = 9223372036854775808, __r_ = {<std::__1::__compressed_pair_elem<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, 0, false>> = {__value_ = {{__l = {__data_ = 0x0, __size_ = 0, __cap_ = 0}, __s = {__data_ = '\\000' <repeats 22 times>, {<std::__1::__padding<char, 1>> = {<No data fields>}, __size_ = 0 '\\000'}}, __r = {__words = {0, 0, 0}}}}}, <std::__1::__compressed_pair_elem<std::__1::allocator<char>, 1, true>> = {<std::__1::allocator<char>> = {<No data fields>}, <No data fields>}, <No data fields>}, static npos = 18446744073709551615}, _query = {<std::__1::__basic_string_common<true>> = {<No data fields>}, static __short_mask = 128, static __long_mask = 9223372036854775808, __r_ = {<std::__1::__compressed_pair_elem<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, 0, false>> = {__value_ = {{__l = {__data_ = 0x7b34007c72f0 \"endpoint=DataPartsExchange%3A%2Fclickhouse%2Ftables%2F01079_parallel_alter_modify_zookeeper_long_test_7ts6hs%2Fconcurrent_alter_mt%2Freplicas%2F4&part=all_47_47_0_55&client_protocol_version=7&compress\"..., __size_ = 206, __cap_ = 9223372036854776016}, __s = {__data_ = \"\\360r|\\000\\064{\\000\\000\\316\\000\\000\\000\\000\\000\\000\\000\\320\\000\\000\\000\\000\\000\", {<std::__1::__padding<char, 1>> = {<No data fields>}, __size_ = 128 '\\200'}}, __r = {__words = {135463276671728, 206, 9223372036854776016}}}}}, <std::__1::__compressed_pair_elem<std::__1::allocator<char>, 1, true>> = {<std::__1::allocator<char>> = {<No data fields>}, <No data fields>}, <No data fields>}, static npos = 18446744073709551615}, _fragment = {<std::__1::__basic_string_common<true>> = {<No data fields>}, static __short_mask = 128, static __long_mask = 9223372036854775808, __r_ = {<std::__1::__compressed_pair_elem<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, 0, false>> = {__value_ = {{__l = {__data_ = 0x0, __size_ = 0, __cap_ = 0}, __s = {__data_ = '\\000' <repeats 22 times>, {<std::__1::__padding<char, 1>> = {<No data fields>}, __size_ = 0 '\\000'}}, __r = {__words = {0, 0, 0}}}}}, <std::__1::__compressed_pair_elem<std::__1::allocator<char>, 1, true>> = {<std::__1::allocator<char>> = {<No data fields>}, <No data fields>}, <No data fields>}, static npos = 18446744073709551615}}, method = {<std::__1::__basic_string_common<true>> = {<No data fields>}, static __short_mask = 128, static __long_mask = 9223372036854775808, __r_ = {<std::__1::__compressed_pair_elem<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, 0, false>> = {__value_ = {{__l = {__data_ = 0x54534f50 <error: Cannot access memory at address 0x54534f50>, __size_ = 0, __cap_ = 288230376151711744}, __s = {__data_ = \"POST\", '\\000' <repeats 18 times>, {<std::__1::__padding<char, 1>> = {<No data fields>}, __size_ = 4 '\\004'}}, __r = {__words = {1414745936, 0, 288230376151711744}}}}}, <std::__1::__compressed_pair_elem<std::__1::allocator<char>, 1, true>> = {<std::__1::allocator<char>> = {<No data fields>}, <No data fields>}, <No data fields>}, static npos = 18446744073709551615}, content_encoding = {<std::__1::__basic_string_common<true>> = {<No data fields>}, static __short_mask = 128, static __long_mask = 9223372036854775808, __r_ = {<std::__1::__compressed_pair_elem<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, 0, false>> = {__value_ = {{__l = {__data_ = 0x7b4000c19b00 \"Sending request to http://1ae6ea27dd94:9009/?endpoint=DataPartsExchange%3A%2Fclickhouse%2Ftables%2F01079_parallel_alter_modify_zookeeper_long_test_7ts6hs%2Fconcurrent_alter_mt%2Freplicas%2F4&part=all_\"..., __size_ = 251, __cap_ = 256}, __s = {__data_ = \"\\000\\233\\301\\000@{\\000\\000\\373\\000\\000\\000\\000\\000\\000\\000\\000\\001\\000\\000\\000\\000\", {<std::__1::__padding<char, 1>> = {<No data fields>}, __size_ = 0 '\\000'}}, __r = {__words = {135514820811520, 251, 256}}}}}, <std::__1::__compressed_pair_elem<std::__1::allocator<char>, 1, true>> = {<std::__1::allocator<char>> = {<No data fields>}, <No data fields>}, <No data fields>}, static npos = 18446744073709551615}, session = {__ptr_ = 0x7b4400a3a358, __cntrl_ = 0x7b4400a3a340}, istr = 0x7b4400c56790, impl = {__ptr_ = {<std::__1::__compressed_pair_elem<DB::ReadBuffer*, 0, false>> = {__value_ = 0x7b1c001cbd70}, <std::__1::__compressed_pair_elem<std::__1::default_delete<DB::ReadBuffer>, 1, true>> = {<std::__1::default_delete<DB::ReadBuffer>> = {<No data fields>}, <No data fields>}, <No data fields>}}, out_stream_callback = {<std::__1::__function::__maybe_derive_from_unary_function<void (std::__1::ostream &)>> = {<std::__1::unary_function<std::__1::ostream&, void>> = {<No data fields>}, <No data fields>}, <std::__1::__function::__maybe_derive_from_binary_function<void (std::__1::ostream &)>> = {<No data fields>}, __f_ = {__buf_ = {__small = \"\\020>\\224\\035\\000\\000\\000\\000@\\367\\205\\215\\214\\177\\000\", __large = 0x1d943e10 <__sanitizer::theDepot>}, __invoker_ = {__call_ = 0x1315fc60 <std::__1::__function::__policy_invoker<void (std::__1::basic_ostream<char, std::__1::char_traits<char> >&)>::__call_empty(std::__1::__function::__policy_storage const*, std::__1::basic_ostream<char, std::__1::char_traits<char> >&)>}, __policy_ = 0x4c6ff98 <std::__1::__function::__policy::__create_empty()::__policy_>}}, credentials = @0x7f8c8d85c6f0, cookies = {<std::__1::__vector_base<Poco::Net::HTTPCookie, std::__1::allocator<Poco::Net::HTTPCookie> >> = {<std::__1::__vector_base_common<true>> = {<No data fields>}, __begin_ = 0x7b2c00c7fc10, __end_ = 0x7b2c00c7fcb8, __end_cap_ = {<std::__1::__compressed_pair_elem<Poco::Net::HTTPCookie*, 0, false>> = {__value_ = 0x7b2c00c7fcb8}, <std::__1::__compressed_pair_elem<std::__1::allocator<Poco::Net::HTTPCookie>, 1, true>> = {<std::__1::allocator<Poco::Net::HTTPCookie>> = {<No data fields>}, <No data fields>}, <No data fields>}}, <No data fields>}, http_header_entries = {<std::__1::__vector_base<std::__1::tuple<std::__1::string, std::__1::string>, std::__1::allocator<std::__1::tuple<std::__1::string, std::__1::string> > >> = {<std::__1::__vector_base_common<true>> = {<No data fields>}, __begin_ = 0x0, __end_ = 0x0, __end_cap_ = {<std::__1::__compressed_pair_elem<std::__1::tuple<std::__1::string, std::__1::string>*, 0, false>> = {__value_ = 0x0}, <std::__1::__compressed_pair_elem<std::__1::allocator<std::__1::tuple<std::__1::string, std::__1::string> >, 1, true>> = {<std::__1::allocator<std::__1::tuple<std::__1::string, std::__1::string> >> = {<No data fields>}, <No data fields>}, <No data fields>}}, <No data fields>}, remote_host_filter = {is_allow_by_default = true, primary_hosts = {__table_ = {__bucket_list_ = {__ptr_ = {<std::__1::__compressed_pair_elem<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::string, void*>*>**, 0, false>> = {__value_ = 0x0}, <std::__1::__compressed_pair_elem<std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::string, void*>*>*> >, 1, false>> = {__value_ = {__data_ = {<std::__1::__compressed_pair_elem<unsigned long, 0, false>> = {__value_ = 0}, <std::__1::__compressed_pair_elem<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::string, void*>*>*>, 1, true>> = {<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::string, void*>*>*>> = {<No data fields>}, <No data fields>}, <No data fields>}}}, <No data fields>}}, __p1_ = {<std::__1::__compressed_pair_elem<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::string, void*>*>, 0, false>> = {__value_ = {__next_ = 0x0}}, <std::__1::__compressed_pair_elem<std::__1::allocator<std::__1::__hash_node<std::__1::string, void*> >, 1, true>> = {<std::__1::allocator<std::__1::__hash_node<std::__1::string, void*> >> = {<No data fields>}, <No data fields>}, <No data fields>}, __p2_ = {<std::__1::__compressed_pair_elem<unsigned long, 0, false>> = {__value_ = 0}, <std::__1::__compressed_pair_elem<std::__1::hash<std::__1::string>, 1, true>> = {<std::__1::hash<std::__1::string>> = {<std::__1::unary_function<std::__1::string, unsigned long>> = {<No data fields>}, <No data fields>}, <No data fields>}, <No data fields>}, __p3_ = {<std::__1::__compressed_pair_elem<float, 0, false>> = {__value_ = 1}, <std::__1::__compressed_pair_elem<std::__1::equal_to<std::__1::string>, 1, true>> = {<std::__1::equal_to<std::__1::string>> = {<std::__1::binary_function<std::__1::string, std::__1::string, bool>> = {<No data fields>}, <No data fields>}, <No data fields>}, <No data fields>}}}, regexp_hosts = {<std::__1::__vector_base<std::__1::string, std::__1::allocator<std::__1::string> >> = {<std::__1::__vector_base_common<true>> = {<No data fields>}, __begin_ = 0x0, __end_ = 0x0, __end_cap_ = {<std::__1::__compressed_pair_elem<std::__1::string*, 0, false>> = {__value_ = 0x0}, <std::__1::__compressed_pair_elem<std::__1::allocator<std::__1::string>, 1, true>> = {<std::__1::allocator<std::__1::string>> = {<No data fields>}, <No data fields>}, <No data fields>}}, <No data fields>}}, next_callback = {<std::__1::__function::__maybe_derive_from_unary_function<void (unsigned long)>> = {<std::__1::unary_function<unsigned long, void>> = {<No data fields>}, <No data fields>}, <std::__1::__function::__maybe_derive_from_binary_function<void (unsigned long)>> = {<No data fields>}, __f_ = {__buf_ = {__small = \"`|\\v\\000\\b{\\000\\000\\026\\\"\\336\\t\\000\\000\\000\", __large = 0x7b08000b7c60}, __invoker_ = {__call_ = 0x171e7320 <std::__1::__function::__policy_invoker<void (unsigned long)>::__call_impl<std::__1::__function::__default_alloc_func<DB::DataPartsExchange::(anonymous namespace)::ReplicatedFetchReadCallback, void (unsigned long)> >(std::__1::__function::__policy_storage const*, unsigned long)>}, __policy_ = 0x54b2cb0 <std::__1::__function::__policy::__choose_policy<std::__1::__function::__default_alloc_func<DB::DataPartsExchange::(anonymous namespace)::ReplicatedFetchReadCallback, void (unsigned long)> >(std::__1::integral_constant<bool, true>)::__policy_>}}, buffer_size = 1048576, use_external_buffer = false, offset_from_begin_pos = 855, read_range = {begin = 0, end = {<std::__1::__optional_move_assign_base<unsigned long, true>> = {<std::__1::__optional_copy_assign_base<unsigned long, true>> = {<std::__1::__optional_move_base<unsigned long, true>> = {<std::__1::__optional_copy_base<unsigned long, true>> = {<std::__1::__optional_storage_base<unsigned long, false>> = {<std::__1::__optional_destruct_base<unsigned long, true>> = {{__null_state_ = 0 '\\000', __val_ = 140241646515968}, __engaged_ = false}, <No data fields>}, <No data fields>}, <No data fields>}, <No data fields>}, <No data fields>}, <std::__1::__sfinae_ctor_base<true, true>> = {<No data fields>}, <std::__1::__sfinae_assign_base<true, true>> = {<No data fields>}, <No data fields>}}, exception = {__ptr_ = 0x0}, retry_with_range_header = false, saved_uri_redirect = {<std::__1::__optional_move_assign_base<Poco::URI, false>> = {<std::__1::__optional_copy_assign_base<Poco::URI, false>> = {<std::__1::__optional_move_base<Poco::URI, false>> = {<std::__1::__optional_copy_base<Poco::URI, false>> = {<std::__1::__optional_storage_base<Poco::URI, false>> = {<std::__1::__optional_destruct_base<Poco::URI, false>> = {{__null_state_ = 0 '\\000', __val_ = {static RESERVED_PATH = {<std::__1::__basic_string_common<true>> = {<No data fields>}, static __short_mask = 128, static __long_mask = 9223372036854775808, __r_ = {<std::__1::__compressed_pair_elem<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, 0, false>> = {__value_ = {{__l = {__data_ = 0x233f <error: Cannot access memory at address 0x233f>, __size_ = 0, __cap_ = 144115188075855872}, __s = {__data_ = \"?#\", '\\000' <repeats 20 times>, {<std::__1::__padding<char, 1>> = {<No data fields>}, __size_ = 2 '\\002'}}, __r = {__words = {9023, 0, 144115188075855872}}}}}, <std::__1::__compressed_pair_elem<std::__1::allocator<char>, 1, true>> = {<std::__1::allocator<char>> = {<No data fields>}, <No data fields>}, <No data fields>}, static npos = 18446744073709551615}, static RESERVED_QUERY = {<std::__1::__basic_string_common<true>> = {<No data fields>}, static __short_mask = 128, static __long_mask = 9223372036854775808, __r_ = {<std::__1::__compressed_pair_elem<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, 0, false>> = {__value_ = {{__l = {__data_ = 0x402b3b3a2f233f <error: Cannot access memory at address 0x402b3b3a2f233f>, __size_ = 0, __cap_ = 504403158265495552}, __s = {__data_ = \"?#/:;+@\", '\\000' <repeats 15 times>, {<std::__1::__padding<char, 1>> = {<No data fields>}, __size_ = 7 '\\a'}}, __r = {__words = {18061931888714559, 0, 504403158265495552}}}}}, <std::__1::__compressed_pair_elem<std::__1::allocator<char>, 1, true>> = {<std::__1::allocator<char>> = {<No data fields>}, <No data fields>}, <No data fields>}, static npos = 18446744073709551615}, static RESERVED_QUERY_PARAM = {<std::__1::__basic_string_common<true>> = {<No data fields>}, static __short_mask = 128, static __long_mask = 9223372036854775808, __r_ = {<std::__1::__compressed_pair_elem<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, 0, false>> = {__value_ = {{__l = {__data_ = 0x26402b3b3a2f233f <error: Cannot access memory at address 0x26402b3b3a2f233f>, __size_ = 61, __cap_ = 648518346341351424}, __s = {__data_ = \"?#/:;+@&=\", '\\000' <repeats 13 times>, {<std::__1::__padding<char, 1>> = {<No data fields>}, __size_ = 9 '\\t'}}, __r = {__words = {2756250505329976127, 61, 648518346341351424}}}}}, <std::__1::__compressed_pair_elem<std::__1::allocator<char>, 1, true>> = {<std::__1::allocator<char>> = {<No data fields>}, <No data fields>}, <No data fields>}, static npos = 18446744073709551615}, static RESERVED_FRAGMENT = {<std::__1::__basic_string_common<true>> = {<No data fields>}, static __short_mask = 128, static __long_mask = 9223372036854775808, __r_ = {<std::__1::__compressed_pair_elem<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, 0, false>> = {__value_ = {{__l = {__data_ = 0x0, __size_ = 0, __cap_ = 0}, __s = {__data_ = '\\000' <repeats 22 times>, {<std::__1::__padding<char, 1>> = {<No data fields>}, __size_ = 0 '\\000'}}, __r = {__words = {0, 0, 0}}}}}, <std::__1::__compressed_pair_elem<std::__1::allocator<char>, 1, true>> = {<std::__1::allocator<char>> = {<No data fields>}, <No data fields>}, <No data fields>}, static npos = 18446744073709551615}, static ILLEGAL = {<std::__1::__basic_string_common<true>> = {<No data fields>}, static __short_mask = 128, static __long_mask = 9223372036854775808, __r_ = {<std::__1::__compressed_pair_elem<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, 0, false>> = {__value_ = {{__l = {__data_ = 0x225c7c7d7b3e3c25 <error: Cannot access memory at address 0x225c7c7d7b3e3c25>, __size_ = 2605658008086208606, __cap_ = 1369094286726748972}, __s = {__data_ = \"%<>{}|\\\\\\\"^`!*'()$,[]\\000\\000\\000\", {<std::__1::__padding<char, 1>> = {<No data fields>}, __size_ = 19 '\\023'}}, __r = {__words = {2475990773527362597, 2605658008086208606, 1369094286726748972}}}}}, <std::__1::__compressed_pair_elem<std::__1::allocator<char>, 1, true>> = {<std::__1::allocator<char>> = {<No data fields>}, <No data fields>}, <No data fields>}, static npos = 18446744073709551615}, _scheme = {<std::__1::__basic_string_common<true>> = {<No data fields>}, static __short_mask = 128, static __long_mask = 9223372036854775808, __r_ = {<std::__1::__compressed_pair_elem<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, 0, false>> = {__value_ = {{__l = {__data_ = 0x9de2200 <__tsan_atomic64_fetch_add+48> \"\\017\\205#\\002\", __size_ = 140235496718336, __cap_ = 165154519}, __s = {__data_ = \"\\000\\\"\\336\\t\\000\\000\\000\\000\\000\\200\\367\\036\\213\\177\\000\\000\\327\\016\\330\\t\\000\\000\", {<std::__1::__padding<char, 1>> = {<No data fields>}, __size_ = 0 '\\000'}}, __r = {__words = {165552640, 140235496718336, 165154519}}}}}, <std::__1::__compressed_pair_elem<std::__1::allocator<char>, 1, true>> = {<std::__1::allocator<char>> = {<No data fields>}, <No data fields>}, <No data fields>}, static npos = 18446744073709551615}, _userInfo = {<std::__1::__basic_string_common<true>> = {<No data fields>}, static __short_mask = 128, static __long_mask = 9223372036854775808, __r_ = {<std::__1::__compressed_pair_elem<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, 0, false>> = {__value_ = {{__l = {__data_ = 0x7f8c8d85f740 \"\\335\\v\\356\\005\", __size_ = 165617426, __cap_ = 140241646516032}, __s = {__data_ = \"@\\367\\205\\215\\214\\177\\000\\000\\022\\037\\337\\t\\000\\000\\000\\000@\\367\\205\\215\\214\\177\", {<std::__1::__padding<char, 1>> = {<No data fields>}, __size_ = 0 '\\000'}}, __r = {__words = {140241646516032, 165617426, 140241646516032}}}}}, <std::__1::__compressed_pair_elem<std::__1::allocator<char>, 1, true>> = {<std::__1::allocator<char>> = {<No data fields>}, <No data fields>}, <No data fields>}, static npos = 18446744073709551615}, _host = {<std::__1::__basic_string_common<true>> = {<No data fields>}, static __short_mask = 128, static __long_mask = 9223372036854775808, __r_ = {<std::__1::__compressed_pair_elem<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, 0, false>> = {__value_ = {{__l = {__data_ = 0x7f8b1ef922f0 \"\", __size_ = 140235496825520, __cap_ = 165077283}, __s = {__data_ = \"\\360\\\"\\371\\036\\213\\177\\000\\000\\260\\\"\\371\\036\\213\\177\\000\\000#\\341\\326\\t\\000\\000\", {<std::__1::__padding<char, 1>> = {<No data fields>}, __size_ = 0 '\\000'}}, __r = {__words = {140235496825584, 140235496825520, 165077283}}}}}, <std::__1::__compressed_pair_elem<std::__1::allocator<char>, 1, true>> = {<std::__1::allocator<char>> = {<No data fields>}, <No data fields>}, <No data fields>}, static npos = 18446744073709551615}, _port = 8880, _path = {<std::__1::__basic_string_common<true>> = {<No data fields>}, static __short_mask = 128, static __long_mask = 9223372036854775808, __r_ = {<std::__1::__compressed_pair_elem<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, 0, false>> = {__value_ = {{__l = {__data_ = 0x9dfcaed <__tsan::DDMutexInit(__tsan::ThreadState*, unsigned long, __tsan::SyncVar*)+93> \"H\\213C\\030H\\301\\340\\060H\\v\\003H\\271\\377\\377\\377\\377\\377\\377\\377\\017H!\\301H\\211KPH\\203\\304\\060[\\303\\314UAWAVAUATSPA\\211\\314H\\211\\323H\\211\\365I\\211\\377I\\275\", __size_ = 140235496718336, __cap_ = 495073128}, __s = {__data_ = \"\\355\\312\\337\\t\\000\\000\\000\\000\\000\\200\\367\\036\\213\\177\\000\\000h7\\202\\035\\000\\000\", {<std::__1::__padding<char, 1>> = {<No data fields>}, __size_ = 0 '\\000'}}, __r = {__words = {165661421, 140235496718336, 495073128}}}}}, <std::__1::__compressed_pair_elem<std::__1::allocator<char>, 1, true>> = {<std::__1::allocator<char>> = {<No data fields>}, <No data fields>}, <No data fields>}, static npos = 18446744073709551615}, _query = {<std::__1::__basic_string_common<true>> = {<No data fields>}, static __short_mask = 128, static __long_mask = 9223372036854775808, __r_ = {<std::__1::__compressed_pair_elem<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, 0, false>> = {__value_ = {{__l = {__data_ = 0x7f8c8d85c748 \"\\377M\\n\", __size_ = 89307656, __cap_ = 24}, __s = {__data_ = \"H\\307\\205\\215\\214\\177\\000\\000\\b\\272R\\005\\000\\000\\000\\000\\030\\000\\000\\000\\000\\000\", {<std::__1::__padding<char, 1>> = {<No data fields>}, __size_ = 0 '\\000'}}, __r = {__words = {140241646503752, 89307656, 24}}}}}, <std::__1::__compressed_pair_elem<std::__1::allocator<char>, 1, true>> = {<std::__1::allocator<char>> = {<No data fields>}, <No data fields>}, <No data fields>}, static npos = 18446744073709551615}, _fragment = {<std::__1::__basic_string_common<true>> = {<No data fields>}, static __short_mask = 128, static __long_mask = 9223372036854775808, __r_ = {<std::__1::__compressed_pair_elem<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, 0, false>> = {__value_ = {{__l = {__data_ = 0x17b847a1 <Coordination::ZooKeeperRequest::~ZooKeeperRequest()+1089> \"H\\201\\304\\310\", __size_ = 140241646516032, __cap_ = 165703007}, __s = {__data_ = \"\\241G\\270\\027\\000\\000\\000\\000@\\367\\205\\215\\214\\177\\000\\000_m\\340\\t\\000\\000\", {<std::__1::__padding<char, 1>> = {<No data fields>}, __size_ = 0 '\\000'}}, __r = {__words = {397952929, 140241646516032, 165703007}}}}}, <std::__1::__compressed_pair_elem<std::__1::allocator<char>, 1, true>> = {<std::__1::allocator<char>> = {<No data fields>}, <No data fields>}, <No data fields>}, static npos = 18446744073709551615}}}, __engaged_ = false}, <No data fields>}, <No data fields>}, <No data fields>}, <No data fields>}, <No data fields>}, <std::__1::__sfinae_ctor_base<true, true>> = {<No data fields>}, <std::__1::__sfinae_assign_base<true, true>> = {<No data fields>}, <No data fields>}, settings = {local_fs_method = DB::LocalFSReadMethod::pread, remote_fs_method = DB::RemoteFSReadMethod::read, local_fs_buffer_size = 1048576, remote_fs_buffer_size = 1048576, local_fs_prefetch = false, remote_fs_prefetch = false, direct_io_threshold = 0, mmap_threshold = 0, mmap_cache = 0x0, priority = 0, remote_fs_read_max_backoff_ms = 10000, remote_fs_read_backoff_max_tries = 4, remote_read_min_bytes_for_seek = 1048576, http_max_tries = 1, http_retry_initial_backoff_ms = 100, http_retry_max_backoff_ms = 1600, must_read_until_position = false}, log = 0x7b1000331c80}, <No data fields>}\r\n2021-12-14 22:12:49         part_type = {<std::__1::__basic_string_common<true>> = {<No data fields>}, static __short_mask = 128, static __long_mask = 9223372036854775808, __r_ = {<std::__1::__compressed_pair_elem<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, 0, false>> = {__value_ = {{__l = {__data_ = 0x746361706d6f43 <error: Cannot access memory at address 0x746361706d6f43>, __size_ = 24, __cap_ = 504403158265495600}, __s = {__data_ = \"Compact\\000\\030\\000\\000\\000\\000\\000\\000\\000\\060\\000\\000\\000\\000\\000\", {<std::__1::__padding<char, 1>> = {<No data fields>}, __size_ = 7 '\\a'}}, __r = {__words = {32760367447633731, 24, 504403158265495600}}}}}, <std::__1::__compressed_pair_elem<std::__1::allocator<char>, 1, true>> = {<std::__1::allocator<char>> = {<No data fields>}, <No data fields>}, <No data fields>}, static npos = 18446744073709551615}\r\n2021-12-14 22:12:49         part_uuid = {t = {items = {0, 0}}}\r\n2021-12-14 22:12:49         remote_fs_metadata = {<std::__1::__basic_string_common<true>> = {<No data fields>}, static __short_mask = 128, static __long_mask = 9223372036854775808, __r_ = {<std::__1::__compressed_pair_elem<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, 0, false>> = {__value_ = {{__l = {__data_ = 0x0, __size_ = 0, __cap_ = 0}, __s = {__data_ = '\\000' <repeats 22 times>, {<std::__1::__padding<char, 1>> = {<No data fields>}, __size_ = 0 '\\000'}}, __r = {__words = {0, 0, 0}}}}}, <std::__1::__compressed_pair_elem<std::__1::allocator<char>, 1, true>> = {<std::__1::allocator<char>> = {<No data fields>}, <No data fields>}, <No data fields>}, static npos = 18446744073709551615}\r\n2021-12-14 22:12:49         storage_id = {database_name = {<std::__1::__basic_string_common<true>> = {<No data fields>}, static __short_mask = 128, static __long_mask = 9223372036854775808, __r_ = {<std::__1::__compressed_pair_elem<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, 0, false>> = {__value_ = {{__l = {__data_ = 0x7374375f74736574 <error: Cannot access memory at address 0x7374375f74736574>, __size_ = 7563318, __cap_ = 792633534417207296}, __s = {__data_ = \"test_7ts6hs\", '\\000' <repeats 11 times>, {<std::__1::__padding<char, 1>> = {<No data fields>}, __size_ = 11 '\\v'}}, __r = {__words = {8319335294775289204, 7563318, 792633534417207296}}}}}, <std::__1::__compressed_pair_elem<std::__1::allocator<char>, 1, true>> = {<std::__1::allocator<char>> = {<No data fields>}, <No data fields>}, <No data fields>}, static npos = 18446744073709551615}, table_name = {<std::__1::__basic_string_common<true>> = {<No data fields>}, static __short_mask = 128, static __long_mask = 9223372036854775808, __r_ = {<std::__1::__compressed_pair_elem<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, 0, false>> = {__value_ = {{__l = {__data_ = 0x65727275636e6f63 <error: Cannot access memory at address 0x65727275636e6f63>, __size_ = 8243122701810496622, __cap_ = 1513209695441284447}, __s = {__data_ = \"concurrent_alter_mt_3\\000\", {<std::__1::__padding<char, 1>> = {<No data fields>}, __size_ = 21 '\\025'}}, __r = {__words = {7310030993680658275, 8243122701810496622, 1513209695441284447}}}}}, <std::__1::__compressed_pair_elem<std::__1::allocator<char>, 1, true>> = {<std::__1::allocator<char>> = {<No data fields>}, <No data fields>}, <No data fields>}, static npos = 18446744073709551615}, uuid = {t = {items = {961198135606526439, 10184570172461298151}}}}\r\n2021-12-14 22:12:49         new_part_path = {<std::__1::__basic_string_common<true>> = {<No data fields>}, static __short_mask = 128, static __long_mask = 9223372036854775808, __r_ = {<std::__1::__compressed_pair_elem<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, 0, false>> = {__value_ = {{__l = {__data_ = 0x7b18008a1260 \"/var/lib/clickhouse/store/0d5/0d56dc9c-9798-41e7-8d56-dc9c979831e7/all_47_47_0_55/\", __size_ = 82, __cap_ = 9223372036854775904}, __s = {__data_ = \"`\\022\\212\\000\\030{\\000\\000R\\000\\000\\000\\000\\000\\000\\000`\\000\\000\\000\\000\\000\", {<std::__1::__padding<char, 1>> = {<No data fields>}, __size_ = 128 '\\200'}}, __r = {__words = {135343018480224, 82, 9223372036854775904}}}}}, <std::__1::__compressed_pair_elem<std::__1::allocator<char>, 1, true>> = {<std::__1::allocator<char>> = {<No data fields>}, <No data fields>}, <No data fields>}, static npos = 18446744073709551615}\r\n2021-12-14 22:12:49         entry = {__ptr_ = {<std::__1::__compressed_pair_elem<DB::BackgroundProcessListEntry<DB::ReplicatedFetchListElement, DB::ReplicatedFetchInfo>*, 0, false>> = {__value_ = 0x7b08000b7c60}, <std::__1::__compressed_pair_elem<std::__1::default_delete<DB::BackgroundProcessListEntry<DB::ReplicatedFetchListElement, DB::ReplicatedFetchInfo> >, 1, true>> = {<std::__1::default_delete<DB::BackgroundProcessListEntry<DB::ReplicatedFetchListElement, DB::ReplicatedFetchInfo> >> = {<No data fields>}, <No data fields>}, <No data fields>}}\r\n2021-12-14 22:12:49         checksums = {files = {__tree_ = {__begin_node_ = 0x7b1c006595e0, __pair1_ = {<std::__1::__compressed_pair_elem<std::__1::__tree_end_node<std::__1::__tree_node_base<void*>*>, 0, false>> = {__value_ = {__left_ = 0x7b1c00110dd0}}, <std::__1::__compressed_pair_elem<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::string, DB::MergeTreeDataPartChecksum>, void*> >, 1, true>> = {<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::string, DB::MergeTreeDataPartChecksum>, void*> >> = {<No data fields>}, <No data fields>}, <No data fields>}, __pair3_ = {<std::__1::__compressed_pair_elem<unsigned long, 0, false>> = {__value_ = 3}, <std::__1::__compressed_pair_elem<std::__1::__map_value_compare<std::__1::string, std::__1::__value_type<std::__1::string, DB::MergeTreeDataPartChecksum>, std::__1::less<std::__1::string>, true>, 1, true>> = {<std::__1::__map_value_compare<std::__1::string, std::__1::__value_type<std::__1::string, DB::MergeTreeDataPartChecksum>, std::__1::less<std::__1::string>, true>> = {<std::__1::less<std::__1::string>> = {<std::__1::binary_function<std::__1::string, std::__1::string, bool>> = {<No data fields>}, <No data fields>}, <No data fields>}, <No data fields>}, <No data fields>}}}}\r\n2021-12-14 22:12:49         reservation = <optimized out>\r\n2021-12-14 22:12:49         sum_files_size = <optimized out>\r\n2021-12-14 22:12:49         sync = <optimized out>\r\n2021-12-14 22:12:49         projections = 0\r\n2021-12-14 22:12:49         server_protocol_version = <optimized out>\r\n2021-12-14 22:12:49 #29 0x000000001704195c in DB::StorageReplicatedMergeTree::fetchPart(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool, unsigned long, std::__1::shared_ptr<zkutil::ZooKeeper>)::$_19::operator()() const (this=0x7b4000c19500) at ../src/Storages/StorageReplicatedMergeTree.cpp:3881\r\n2021-12-14 22:12:49 No locals.\r\n2021-12-14 22:12:49 #30 std::__1::__invoke<DB::StorageReplicatedMergeTree::fetchPart(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool, unsigned long, std::__1::shared_ptr<zkutil::ZooKeeper>)::$_19&> (__f=...) at ../contrib/libcxx/include/type_traits:3676\r\n2021-12-14 22:12:49 No locals.\r\n2021-12-14 22:12:49 #31 std::__1::__invoke_void_return_wrapper<std::__1::shared_ptr<DB::IMergeTreeDataPart> >::__call<DB::StorageReplicatedMergeTree::fetchPart(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool, unsigned long, std::__1::shared_ptr<zkutil::ZooKeeper>)::$_19&>(DB::StorageReplicatedMergeTree::fetchPart(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool, unsigned long, std::__1::shared_ptr<zkutil::ZooKeeper>)::$_19&) (__args=...) at ../contrib/libcxx/include/__functional_base:317\r\n2021-12-14 22:12:49 No locals.\r\n2021-12-14 22:12:49 #32 std::__1::__function::__default_alloc_func<DB::StorageReplicatedMergeTree::fetchPart(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool, unsigned long, std::__1::shared_ptr<zkutil::ZooKeeper>)::$_19, std::__1::shared_ptr<DB::IMergeTreeDataPart> ()>::operator()() (this=0x7b4000c19500) at ../contrib/libcxx/include/functional:1608\r\n2021-12-14 22:12:49 No locals.\r\n2021-12-14 22:12:49 #33 std::__1::__function::__policy_invoker<std::__1::shared_ptr<DB::IMergeTreeDataPart> ()>::__call_impl<std::__1::__function::__default_alloc_func<DB::StorageReplicatedMergeTree::fetchPart(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool, unsigned long, std::__1::shared_ptr<zkutil::ZooKeeper>)::$_19, std::__1::shared_ptr<DB::IMergeTreeDataPart> ()> >(std::__1::__function::__policy_storage const*) (__buf=<optimized out>) at ../contrib/libcxx/include/functional:2089\r\n2021-12-14 22:12:49         __f = 0x7b4000c19500\r\n2021-12-14 22:12:49 #34 0x0000000016fc5b05 in std::__1::__function::__policy_func<std::__1::shared_ptr<DB::IMergeTreeDataPart> ()>::operator()() const (this=0x7f8c8d85cfa8) at ../contrib/libcxx/include/functional:2221\r\n2021-12-14 22:12:49 No locals.\r\n2021-12-14 22:12:49 #35 std::__1::function<std::__1::shared_ptr<DB::IMergeTreeDataPart> ()>::operator()() const (this=0x7f8c8d85cfa8) at ../contrib/libcxx/include/functional:2560\r\n2021-12-14 22:12:49 No locals.\r\n2021-12-14 22:12:49 #36 DB::StorageReplicatedMergeTree::fetchPart (this=<optimized out>, this@entry=0x7b8400260c00, part_name=..., metadata_snapshot=..., source_replica_path=..., to_detached=<optimized out>, quorum=quorum@entry=0, zookeeper_=...) at ../src/Storages/StorageReplicatedMergeTree.cpp:3902\r\n2021-12-14 22:12:50         zookeeper = {__ptr_ = 0x7b3801934418, __cntrl_ = 0x7b3801934400}\r\n2021-12-14 22:12:50         part_info = {partition_id = {<std::__1::__basic_string_common<true>> = {<No data fields>}, static __short_mask = 128, static __long_mask = 9223372036854775808, __r_ = {<std::__1::__compressed_pair_elem<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, 0, false>> = {__value_ = {{__l = {__data_ = 0x6c6c61 \"F\\326\\025\", __size_ = 0, __cap_ = 216172782113783808}, __s = {__data_ = \"all\", '\\000' <repeats 19 times>, {<std::__1::__padding<char, 1>> = {<No data fields>}, __size_ = 3 '\\003'}}, __r = {__words = {7105633, 0, 216172782113783808}}}}}, <std::__1::__compressed_pair_elem<std::__1::allocator<char>, 1, true>> = {<std::__1::allocator<char>> = {<No data fields>}, <No data fields>}, <No data fields>}, static npos = 18446744073709551615}, min_block = 47, max_block = 47, level = 0, mutation = 55, use_leagcy_max_level = false, static MAX_LEVEL = 999999999, static MAX_BLOCK_NUMBER = 999999999, static LEGACY_MAX_LEVEL = 4294967295}\r\n2021-12-14 22:12:50         scope_exit3796 = {static is_nullable = <optimized out>, function = {this = 0x7b8400260c00, part_name = @0x7f8c8d85d188}}\r\n2021-12-14 22:12:50         table_lock_holder = {__ptr_ = 0x7b18009c4878, __cntrl_ = 0x7b18009c4860}\r\n2021-12-14 22:12:50         stopwatch = {start_ns = 8143859940835, stop_ns = 0, clock_type = 1, is_running = true}\r\n2021-12-14 22:12:50         part = {__ptr_ = 0x0, __cntrl_ = 0x0}\r\n2021-12-14 22:12:50         replaced_parts = {<std::__1::__vector_base<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const> > >> = {<std::__1::__vector_base_common<true>> = {<No data fields>}, __begin_ = 0x0, __end_ = 0x0, __end_cap_ = {<std::__1::__compressed_pair_elem<std::__1::shared_ptr<DB::IMergeTreeDataPart const>*, 0, false>> = {__value_ = 0x0}, <std::__1::__compressed_pair_elem<std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const> >, 1, true>> = {<std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const> >> = {<No data fields>}, <No data fields>}, <No data fields>}}, <No data fields>}\r\n2021-12-14 22:12:50         write_part_log = {this = 0x7b8400260c00, stopwatch = @0x7f8c8d85cb48, part_name = @0x7f8c8d85d188, part = @0x7f8c8d85cdb0, replaced_parts = @0x7f8c8d85cdd0}\r\n2021-12-14 22:12:50         part_to_clone = {__ptr_ = 0x0, __cntrl_ = 0x0}\r\n2021-12-14 22:12:50         address = {host = {<std::__1::__basic_string_common<true>> = {<No data fields>}, static __short_mask = 128, static __long_mask = 9223372036854775808, __r_ = {<std::__1::__compressed_pair_elem<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, 0, false>> = {__value_ = {{__l = {__data_ = 0x3732616536656131 <error: Cannot access memory at address 0x3732616536656131>, __size_ = 876176484, __cap_ = 864691128455135232}, __s = {__data_ = \"1ae6ea27dd94\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\", {<std::__1::__padding<char, 1>> = {<No data fields>}, __size_ = 12 '\\f'}}, __r = {__words = {3977348508253774129, 876176484, 864691128455135232}}}}}, <std::__1::__compressed_pair_elem<std::__1::allocator<char>, 1, true>> = {<std::__1::allocator<char>> = {<No data fields>}, <No data fields>}, <No data fields>}, static npos = 18446744073709551615}, replication_port = 9009, queries_port = 9000, database = {<std::__1::__basic_string_common<true>> = {<No data fields>}, static __short_mask = 128, static __long_mask = 9223372036854775808, __r_ = {<std::__1::__compressed_pair_elem<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, 0, false>> = {__value_ = {{__l = {__data_ = 0x7374375f74736574 <error: Cannot access memory at address 0x7374375f74736574>, __size_ = 7563318, __cap_ = 792633534417207296}, __s = {__data_ = \"test_7ts6hs\", '\\000' <repeats 11 times>, {<std::__1::__padding<char, 1>> = {<No data fields>}, __size_ = 11 '\\v'}}, __r = {__words = {8319335294775289204, 7563318, 792633534417207296}}}}}, <std::__1::__compressed_pair_elem<std::__1::allocator<char>, 1, true>> = {<std::__1::allocator<char>> = {<No data fields>}, <No data fields>}, <No data fields>}, static npos = 18446744073709551615}, table = {<std::__1::__basic_string_common<true>> = {<No data fields>}, static __short_mask = 128, static __long_mask = 9223372036854775808, __r_ = {<std::__1::__compressed_pair_elem<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, 0, false>> = {__value_ = {{__l = {__data_ = 0x65727275636e6f63 <error: Cannot access memory at address 0x65727275636e6f63>, __size_ = 8243122701810496622, __cap_ = 1513209699736251743}, __s = {__data_ = \"concurrent_alter_mt_4\\000\", {<std::__1::__padding<char, 1>> = {<No data fields>}, __size_ = 21 '\\025'}}, __r = {__words = {7310030993680658275, 8243122701810496622, 1513209699736251743}}}}}, <std::__1::__compressed_pair_elem<std::__1::allocator<char>, 1, true>> = {<std::__1::allocator<char>> = {<No data fields>}, <No data fields>}, <No data fields>}, static npos = 18446744073709551615}, scheme = {<std::__1::__basic_string_common<true>> = {<No data fields>}, static __short_mask = 128, static __long_mask = 9223372036854775808, __r_ = {<std::__1::__compressed_pair_elem<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, 0, false>> = {__value_ = {{__l = {__data_ = 0x70747468 <error: Cannot access memory at address 0x70747468>, __size_ = 0, __cap_ = 288230376151711744}, __s = {__data_ = \"http\", '\\000' <repeats 18 times>, {<std::__1::__padding<char, 1>> = {<No data fields>}, __size_ = 4 '\\004'}}, __r = {__words = {1886680168, 0, 288230376151711744}}}}}, <std::__1::__compressed_pair_elem<std::__1::allocator<char>, 1, true>> = {<std::__1::allocator<char>> = {<No data fields>}, <No data fields>}, <No data fields>}, static npos = 18446744073709551615}}\r\n2021-12-14 22:12:50         timeouts = {connection_timeout = {static MILLISECONDS = 1000, static SECONDS = 1000000, static MINUTES = 60000000, static HOURS = 3600000000, static DAYS = 86400000000, _span = 1000000}, send_timeout = {static MILLISECONDS = 1000, static SECONDS = 1000000, static MINUTES = 60000000, static HOURS = 3600000000, static DAYS = 86400000000, _span = 60000000}, receive_timeout = {static MILLISECONDS = 1000, static SECONDS = 1000000, static MINUTES = 60000000, static HOURS = 3600000000, static DAYS = 86400000000, _span = 60000000}, tcp_keep_alive_timeout = {static MILLISECONDS = 1000, static SECONDS = 1000000, static MINUTES = 60000000, static HOURS = 3600000000, static DAYS = 86400000000, _span = 290000000}, http_keep_alive_timeout = {static MILLISECONDS = 1000, static SECONDS = 1000000, static MINUTES = 60000000, static HOURS = 3600000000, static DAYS = 86400000000, _span = 3000000}, secure_connection_timeout = {static MILLISECONDS = 1000, static SECONDS = 1000000, static MINUTES = 60000000, static HOURS = 3600000000, static DAYS = 86400000000, _span = 1000000}, hedged_connection_timeout = {static MILLISECONDS = 1000, static SECONDS = 1000000, static MINUTES = 60000000, static HOURS = 3600000000, static DAYS = 86400000000, _span = 60000000}, receive_data_timeout = {static MILLISECONDS = 1000, static SECONDS = 1000000, static MINUTES = 60000000, static HOURS = 3600000000, static DAYS = 86400000000, _span = 60000000}}\r\n2021-12-14 22:12:50         tagger_ptr = {<std::__1::__optional_move_assign_base<DB::CurrentlySubmergingEmergingTagger, false>> = {<std::__1::__optional_copy_assign_base<DB::CurrentlySubmergingEmergingTagger, false>> = {<std::__1::__optional_move_base<DB::CurrentlySubmergingEmergingTagger, false>> = {<std::__1::__optional_copy_base<DB::CurrentlySubmergingEmergingTagger, false>> = {<std::__1::__optional_storage_base<DB::CurrentlySubmergingEmergingTagger, false>> = {<std::__1::__optional_destruct_base<DB::CurrentlySubmergingEmergingTagger, false>> = {{__null_state_ = 0 '\\000', __val_ = {storage = @0x6c6c00, emerging_part_name = {<std::__1::__basic_string_common<true>> = {<No data fields>}, static __short_mask = 128, static __long_mask = 9223372036854775808, __r_ = {<std::__1::__compressed_pair_elem<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, 0, false>> = {__value_ = {{__l = {__data_ = 0x0, __size_ = 216172782113783808, __cap_ = 47}, __s = {__data_ = '\\000' <repeats 15 times>, \"\\003/\\000\\000\\000\\000\\000\", {<std::__1::__padding<char, 1>> = {<No data fields>}, __size_ = 0 '\\000'}}, __r = {__words = {0, 216172782113783808, 47}}}}}, <std::__1::__compressed_pair_elem<std::__1::allocator<char>, 1, true>> = {<std::__1::allocator<char>> = {<No data fields>}, <No data fields>}, <No data fields>}, static npos = 18446744073709551615}, submerging_parts = {<std::__1::__vector_base<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const> > >> = {<std::__1::__vector_base_common<true>> = {<No data fields>}, __begin_ = 0x2f, __end_ = 0x7b3800000000, __end_cap_ = {<std::__1::__compressed_pair_elem<std::__1::shared_ptr<DB::IMergeTreeDataPart const>*, 0, false>> = {__value_ = 0x0}, <std::__1::__compressed_pair_elem<std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const> >, 1, true>> = {<std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const> >> = {<No data fields>}, <No data fields>}, <No data fields>}}, <No data fields>}, log = 0x173b4200 <DB::MergeTreePartInfo::tryParsePartName(std::__1::basic_string_view<char, std::__1::char_traits<char> >, StrongTypedef<unsigned int, DB::MergeTreeDataFormatVersionTag>)+864>}}, __engaged_ = false}, <No data fields>}, <No data fields>}, <No data fields>}, <No data fields>}, <No data fields>}, <std::__1::__sfinae_ctor_base<true, true>> = {<No data fields>}, <std::__1::__sfinae_assign_base<false, false>> = {<No data fields>}, <No data fields>}\r\n2021-12-14 22:12:50         get_part = {<std::__1::__function::__maybe_derive_from_unary_function<std::__1::shared_ptr<DB::IMergeTreeDataPart> ()>> = {<No data fields>}, <std::__1::__function::__maybe_derive_from_binary_function<std::__1::shared_ptr<DB::IMergeTreeDataPart> ()>> = {<No data fields>}, __f_ = {__buf_ = {__small = \"\\000\\225\\301\\000@{\\000\\000\\001\\000\\000\\000\\000\\000\\000\", __large = 0x7b4000c19500}, __invoker_ = {__call_ = 0x170415a0 <std::__1::__function::__policy_invoker<std::__1::shared_ptr<DB::IMergeTreeDataPart> ()>::__call_impl<std::__1::__function::__default_alloc_func<DB::StorageReplicatedMergeTree::fetchPart(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool, unsigned long, std::__1::shared_ptr<zkutil::ZooKeeper>)::$_19, std::__1::shared_ptr<DB::IMergeTreeDataPart> ()> >(std::__1::__function::__policy_storage const*)>}, __policy_ = 0x54a4618 <std::__1::__function::__policy::__choose_policy<std::__1::__function::__default_alloc_func<DB::StorageReplicatedMergeTree::fetchPart(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool, unsigned long, std::__1::shared_ptr<zkutil::ZooKeeper>)::$_19, std::__1::shared_ptr<DB::IMergeTreeDataPart> ()> >(std::__1::integral_constant<bool, false>)::__policy_>}}\r\n2021-12-14 22:12:50         interserver_scheme = {<std::__1::__basic_string_common<true>> = {<No data fields>}, static __short_mask = 128, static __long_mask = 9223372036854775808, __r_ = {<std::__1::__compressed_pair_elem<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, 0, false>> = {__value_ = {{__l = {__data_ = 0x70747468 <error: Cannot access memory at address 0x70747468>, __size_ = <optimized out>, __cap_ = 288230376151711748}, __s = {__data_ = {104 'h', 116 't', 116 't', 112 'p', 0 '\\000', 0 '\\000', 0 '\\000', 0 '\\000', <optimized out>, <optimized out>, <optimized out>, <optimized out>, <optimized out>, <optimized out>, <optimized out>, <optimized out>, 4 '\\004', 0 '\\000', 0 '\\000', 0 '\\000', 0 '\\000', 0 '\\000', 0 '\\000'}, {<std::__1::__padding<char, 1>> = {<No data fields>}, __size_ = 4 '\\004'}}, __r = {__words = {1886680168, <optimized out>, 288230376151711748}}}}}, <std::__1::__compressed_pair_elem<std::__1::allocator<char>, 1, true>> = {<std::__1::allocator<char>> = {<No data fields>}, <No data fields>}, <No data fields>}, static npos = 18446744073709551615}\r\n2021-12-14 22:12:50         credentials = {__ptr_ = <optimized out>, __cntrl_ = 0x7b080000f020}\r\n2021-12-14 22:12:50         e = <optimized out>\r\n2021-12-14 22:12:50 #37 0x0000000016fba61d in DB::StorageReplicatedMergeTree::executeFetch (this=<optimized out>, entry=...) at ../src/Storages/StorageReplicatedMergeTree.cpp:1734\r\n2021-12-14 22:12:50         part_name = {<std::__1::__basic_string_common<true>> = {<No data fields>}, static __short_mask = 128, static __long_mask = 9223372036854775808, __r_ = {<std::__1::__compressed_pair_elem<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, 0, false>> = {__value_ = {{__l = {__data_ = 0x345f37345f6c6c61 <error: Cannot access memory at address 0x345f37345f6c6c61>, __size_ = 58503346544439, __cap_ = 1008806316530991104}, __s = {__data_ = \"all_47_47_0_55\\000\\000\\000\\000\\000\\000\\000\\000\", {<std::__1::__padding<char, 1>> = {<No data fields>}, __size_ = 14 '\\016'}}, __r = {__words = {3773795710838533217, 58503346544439, 1008806316530991104}}}}}, <std::__1::__compressed_pair_elem<std::__1::allocator<char>, 1, true>> = {<std::__1::allocator<char>> = {<No data fields>}, <No data fields>}, <No data fields>}, static npos = 18446744073709551615}\r\n2021-12-14 22:12:50         e = <optimized out>\r\n2021-12-14 22:12:50         replica = {<std::__1::__basic_string_common<true>> = {<No data fields>}, static __short_mask = 128, static __long_mask = 9223372036854775808, __r_ = {<std::__1::__compressed_pair_elem<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, 0, false>> = {__value_ = {{__l = {__data_ = 0x34 <error: Cannot access memory at address 0x34>, __size_ = 0, __cap_ = 72057594037927936}, __s = {__data_ = \"4\", '\\000' <repeats 21 times>, {<std::__1::__padding<char, 1>> = {<No data fields>}, __size_ = 1 '\\001'}}, __r = {__words = {52, 0, 72057594037927936}}}}}, <std::__1::__compressed_pair_elem<std::__1::allocator<char>, 1, true>> = {<std::__1::allocator<char>> = {<No data fields>}, <No data fields>}, <No data fields>}, static npos = 18446744073709551615}\r\n2021-12-14 22:12:50         storage_settings_ptr = {__ptr_ = 0x7b68001bfc00, __cntrl_ = 0x7b08004a0080}\r\n2021-12-14 22:12:50         metadata_snapshot = {__ptr_ = 0x7b7000271800, __cntrl_ = 0x7b0800423d20}\r\n2021-12-14 22:12:50 #38 0x000000001746c54a in DB::ReplicatedMergeMutateTaskBase::executeImpl()::$_1::operator()() const (this=<optimized out>) at ../src/Storages/MergeTree/ReplicatedMergeMutateTaskBase.cpp:145\r\n2021-12-14 22:12:50 No locals.\r\n2021-12-14 22:12:50 #39 DB::ReplicatedMergeMutateTaskBase::executeImpl (this=this@entry=0x7b4801aa2a00) at ../src/Storages/MergeTree/ReplicatedMergeMutateTaskBase.cpp:168\r\n2021-12-14 22:12:51         res = false\r\n2021-12-14 22:12:51         switcher = {__ptr_ = {<std::__1::__compressed_pair_elem<DB::MemoryTrackerThreadSwitcher*, 0, false>> = {__value_ = 0x0}, <std::__1::__compressed_pair_elem<std::__1::default_delete<DB::MemoryTrackerThreadSwitcher>, 1, true>> = {<std::__1::default_delete<DB::MemoryTrackerThreadSwitcher>> = {<No data fields>}, <No data fields>}, <No data fields>}}\r\n2021-12-14 22:12:51         remove_processed_entry = {this = 0x7b4801aa2a00}\r\n2021-12-14 22:12:51         execute_fetch = {this = 0x7b4801aa2a00, remove_processed_entry = @0x7f8c8d85d4c0}\r\n2021-12-14 22:12:51 #40 0x000000001746b510 in DB::ReplicatedMergeMutateTaskBase::executeStep (this=0x7b4801aa2a00) at ../src/Storages/MergeTree/ReplicatedMergeMutateTaskBase.cpp:41\r\n2021-12-14 22:12:51         e = <optimized out>\r\n2021-12-14 22:12:51         saved_exception = {__ptr_ = 0x0}\r\n2021-12-14 22:12:51 #41 0x0000000017277f8b in DB::MergeTreeBackgroundExecutor<DB::MergeMutateRuntimeQueue>::routine (this=this@entry=0x7b4c00001340, item=...) at ../src/Storages/MergeTree/MergeTreeBackgroundExecutor.cpp:87\r\n2021-12-14 22:12:51         erase_from_active = {this = 0x7b4c00001340, item = {__ptr_ = 0x7b280042aff8, __cntrl_ = 0x7b280042afe0}}\r\n2021-12-14 22:12:51         need_execute_again = false\r\n2021-12-14 22:12:51 #42 0x0000000017278bc6 in DB::MergeTreeBackgroundExecutor<DB::MergeMutateRuntimeQueue>::threadFunction (this=0x0) at ../src/Storages/MergeTree/MergeTreeBackgroundExecutor.cpp:176\r\n2021-12-14 22:12:51         item = {__ptr_ = 0x0, __cntrl_ = 0x0}\r\n2021-12-14 22:12:51 #43 0x000000001727dc42 in DB::MergeTreeBackgroundExecutor<DB::MergeMutateRuntimeQueue>::MergeTreeBackgroundExecutor(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, unsigned long, unsigned long, unsigned long)::{lambda()#1}::operator()() const (this=0x7f8c8d85d8a8) at ../src/Storages/MergeTree/MergeTreeBackgroundExecutor.h:184\r\n2021-12-14 22:12:51 No locals.\r\n2021-12-14 22:12:51 #44 std::__1::__invoke<DB::MergeTreeBackgroundExecutor<DB::MergeMutateRuntimeQueue>::MergeTreeBackgroundExecutor(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, unsigned long, unsigned long, unsigned long)::{lambda()#1}&> (__f=...) at ../contrib/libcxx/include/type_traits:3676\r\n2021-12-14 22:12:51 No locals.\r\n2021-12-14 22:12:51 #45 std::__1::__invoke_void_return_wrapper<void>::__call<DB::MergeTreeBackgroundExecutor<DB::MergeMutateRuntimeQueue>::MergeTreeBackgroundExecutor(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, unsigned long, unsigned long, unsigned long)::{lambda()#1}&>(DB::MergeTreeBackgroundExecutor<DB::MergeMutateRuntimeQueue>::MergeTreeBackgroundExecutor(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, unsigned long, unsigned long, unsigned long)::{lambda()#1}&) (__args=...) at ../contrib/libcxx/include/__functional_base:348\r\n2021-12-14 22:12:51 No locals.\r\n2021-12-14 22:12:51 #46 std::__1::__function::__default_alloc_func<DB::MergeTreeBackgroundExecutor<DB::MergeMutateRuntimeQueue>::MergeTreeBackgroundExecutor(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, unsigned long, unsigned long, unsigned long)::{lambda()#1}, void ()>::operator()() (this=0x7f8c8d85d8a8) at ../contrib/libcxx/include/functional:1608\r\n2021-12-14 22:12:51 No locals.\r\n2021-12-14 22:12:51 #47 std::__1::__function::__policy_invoker<void ()>::__call_impl<std::__1::__function::__default_alloc_func<DB::MergeTreeBackgroundExecutor<DB::MergeMutateRuntimeQueue>::MergeTreeBackgroundExecutor(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, unsigned long, unsigned long, unsigned long)::{lambda()#1}, void ()> >(std::__1::__function::__policy_storage const*) (__buf=0x7f8c8d85d8a8) at ../contrib/libcxx/include/functional:2089\r\n2021-12-14 22:12:51         __f = 0x7f8c8d85d8a8\r\n2021-12-14 22:12:51 #48 0x0000000009e7cf58 in std::__1::__function::__policy_func<void ()>::operator()() const (this=0x7f8c8d85d8a8) at ../contrib/libcxx/include/functional:2221\r\n2021-12-14 22:12:51 No locals.\r\n2021-12-14 22:12:51 #49 std::__1::function<void ()>::operator()() const (this=0x7f8c8d85d8a8) at ../contrib/libcxx/include/functional:2560\r\n2021-12-14 22:12:51 No locals.\r\n2021-12-14 22:12:51 #50 ThreadPoolImpl<ThreadFromGlobalPool>::worker (this=this@entry=0x7b4c00001410, thread_it=thread_it@entry=...) at ../src/Common/ThreadPool.cpp:274\r\n2021-12-14 22:12:51         metric_active_threads = {what = <optimized out>, amount = 1}\r\n2021-12-14 22:12:51         job = {<std::__1::__function::__maybe_derive_from_unary_function<void ()>> = {<No data fields>}, <std::__1::__function::__maybe_derive_from_binary_function<void ()>> = {<No data fields>}, __f_ = {__buf_ = {__small = \"@\\023\\000\\000L{\\000\\000\\370\\277\\325t\\374\\177\\000\", __large = 0x7b4c00001340}, __invoker_ = {__call_ = 0x1727dc20 <std::__1::__function::__policy_invoker<void ()>::__call_impl<std::__1::__function::__default_alloc_func<DB::MergeTreeBackgroundExecutor<DB::MergeMutateRuntimeQueue>::MergeTreeBackgroundExecutor(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, unsigned long, unsigned long, unsigned long)::{lambda()#1}, void ()> >(std::__1::__function::__policy_storage const*)>}, __policy_ = 0x54b9440 <std::__1::__function::__policy::__choose_policy<std::__1::__function::__default_alloc_func<DB::MergeTreeBackgroundExecutor<DB::MergeMutateRuntimeQueue>::MergeTreeBackgroundExecutor(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, unsigned long, unsigned long, unsigned long)::{lambda()#1}, void ()> >(std::__1::integral_constant<bool, true>)::__policy_>}}\r\n2021-12-14 22:12:51         need_shutdown = <optimized out>\r\n2021-12-14 22:12:51         metric_all_threads = {what = <optimized out>, amount = 1}\r\n2021-12-14 22:12:51 #51 0x0000000009e7f519 in ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::{lambda()#2}::operator()() const (this=<optimized out>) at ../src/Common/ThreadPool.cpp:139\r\n2021-12-14 22:12:51 No locals.\r\n2021-12-14 22:12:51 #52 std::__1::__invoke_constexpr<ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::{lambda()#2}&> (__f=...) at ../contrib/libcxx/include/type_traits:3682\r\n2021-12-14 22:12:51 No locals.\r\n2021-12-14 22:12:51 #53 std::__1::__apply_tuple_impl<ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::{lambda()#2}&, std::__1::tuple<>&>(ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::{lambda()#2}&, std::__1::tuple<>&, std::__1::__tuple_indices<>) (__f=..., __t=...) at ../contrib/libcxx/include/tuple:1415\r\n2021-12-14 22:12:51 No locals.\r\n2021-12-14 22:12:51 #54 std::__1::apply<ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::{lambda()#2}&, std::__1::tuple<>&>(ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::{lambda()#2}&, std::__1::tuple<>&) (__f=..., __t=...) at ../contrib/libcxx/include/tuple:1424\r\n2021-12-14 22:12:51 No locals.\r\n2021-12-14 22:12:51 #55 ThreadFromGlobalPool::ThreadFromGlobalPool<ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::{lambda()#2}>(ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::{lambda()#2}&&)::{lambda()#1}::operator()() (this=0x7b10000166c0) at ../src/Common/ThreadPool.h:188\r\n2021-12-14 22:12:52         event = {__ptr_ = 0x7b2000003e18, __cntrl_ = 0x7b2000003e00}\r\n2021-12-14 22:12:52         scope_exit176 = {static is_nullable = false, function = {event = @0x7f8c8d85db68}}\r\n2021-12-14 22:12:52         thread_status = {<boost::noncopyable_::noncopyable> = {<boost::noncopyable_::base_token> = {<No data fields>}, <No data fields>}, thread_id = 547, os_thread_priority = 0, performance_counters = {counters = 0x7b7000130000, counters_holder = {__ptr_ = {<std::__1::__compressed_pair_elem<std::__1::atomic<unsigned long>*, 0, false>> = {__value_ = 0x7b7000130000}, <std::__1::__compressed_pair_elem<std::__1::default_delete<std::__1::atomic<unsigned long> []>, 1, true>> = {<std::__1::default_delete<std::__1::atomic<unsigned long> []>> = {<No data fields>}, <No data fields>}, <No data fields>}}, parent = 0x20c60f28 <ProfileEvents::global_counters>, level = VariableContext::Thread, static num_counters = 235}, memory_tracker = {amount = {<std::__1::__atomic_base<long, true>> = {<std::__1::__atomic_base<long, false>> = {__a_ = {<std::__1::__cxx_atomic_base_impl<long>> = {__a_value = 4214987}, <No data fields>}, static is_always_lock_free = <optimized out>}, <No data fields>}, <No data fields>}, peak = {<std::__1::__atomic_base<long, true>> = {<std::__1::__atomic_base<long, false>> = {__a_ = {<std::__1::__cxx_atomic_base_impl<long>> = {__a_value = 17915967}, <No data fields>}, static is_always_lock_free = <optimized out>}, <No data fields>}, <No data fields>}, hard_limit = {<std::__1::__atomic_base<long, true>> = {<std::__1::__atomic_base<long, false>> = {__a_ = {<std::__1::__cxx_atomic_base_impl<long>> = {__a_value = 0}, <No data fields>}, static is_always_lock_free = <optimized out>}, <No data fields>}, <No data fields>}, profiler_limit = {<std::__1::__atomic_base<long, true>> = {<std::__1::__atomic_base<long, false>> = {__a_ = {<std::__1::__cxx_atomic_base_impl<long>> = {__a_value = 0}, <No data fields>}, static is_always_lock_free = <optimized out>}, <No data fields>}, <No data fields>}, profiler_step = 0, fault_probability = 0, sample_probability = 0, parent = {<std::__1::__atomic_base<MemoryTracker*, false>> = {__a_ = {<std::__1::__cxx_atomic_base_impl<MemoryTracker*>> = {__a_value = 0x20c611a8 <total_memory_tracker>}, <No data fields>}, static is_always_lock_free = <optimized out>}, <No data fields>}, metric = {<std::__1::__atomic_base<unsigned long, true>> = {<std::__1::__atomic_base<unsigned long, false>> = {__a_ = {<std::__1::__cxx_atomic_base_impl<unsigned long>> = {__a_value = 75}, <No data fields>}, static is_always_lock_free = <optimized out>}, <No data fields>}, <No data fields>}, description_ptr = {<std::__1::__atomic_base<char const*, false>> = {__a_ = {<std::__1::__cxx_atomic_base_impl<char const*>> = {__a_value = 0x4c2ee6c \"(for thread)\"}, <No data fields>}, static is_always_lock_free = <optimized out>}, <No data fields>}, static USAGE_EVENT_NAME = <optimized out>, level = VariableContext::Thread}, untracked_memory = 2097438, untracked_memory_limit = 4194304, progress_in = {read_rows = {<std::__1::__atomic_base<unsigned long, true>> = {<std::__1::__atomic_base<unsigned long, false>> = {__a_ = {<std::__1::__cxx_atomic_base_impl<unsigned long>> = {__a_value = 0}, <No data fields>}, static is_always_lock_free = <optimized out>}, <No data fields>}, <No data fields>}, read_bytes = {<std::__1::__atomic_base<unsigned long, true>> = {<std::__1::__atomic_base<unsigned long, false>> = {__a_ = {<std::__1::__cxx_atomic_base_impl<unsigned long>> = {__a_value = 0}, <No data fields>}, static is_always_lock_free = <optimized out>}, <No data fields>}, <No data fields>}, read_raw_bytes = {<std::__1::__atomic_base<unsigned long, true>> = {<std::__1::__atomic_base<unsigned long, false>> = {__a_ = {<std::__1::__cxx_atomic_base_impl<unsigned long>> = {__a_value = 0}, <No data fields>}, static is_always_lock_free = <optimized out>}, <No data fields>}, <No data fields>}, total_rows_to_read = {<std::__1::__atomic_base<unsigned long, true>> = {<std::__1::__atomic_base<unsigned long, false>> = {__a_ = {<std::__1::__cxx_atomic_base_impl<unsigned long>> = {__a_value = 0}, <No data fields>}, static is_always_lock_free = <optimized out>}, <No data fields>}, <No data fields>}, total_raw_bytes_to_read = {<std::__1::__atomic_base<unsigned long, true>> = {<std::__1::__atomic_base<unsigned long, false>> = {__a_ = {<std::__1::__cxx_atomic_base_impl<unsigned long>> = {__a_value = 0}, <No data fields>}, static is_always_lock_free = <optimized out>}, <No data fields>}, <No data fields>}, written_rows = {<std::__1::__atomic_base<unsigned long, true>> = {<std::__1::__atomic_base<unsigned long, false>> = {__a_ = {<std::__1::__cxx_atomic_base_impl<unsigned long>> = {__a_value = 0}, <No data fields>}, static is_always_lock_free = <optimized out>}, <No data fields>}, <No data fields>}, written_bytes = {<std::__1::__atomic_base<unsigned long, true>> = {<std::__1::__atomic_base<unsigned long, false>> = {__a_ = {<std::__1::__cxx_atomic_base_impl<unsigned long>> = {__a_value = 0}, <No data fields>}, static is_always_lock_free = <optimized out>}, <No data fields>}, <No data fields>}}, progress_out = {read_rows = {<std::__1::__atomic_base<unsigned long, true>> = {<std::__1::__atomic_base<unsigned long, false>> = {__a_ = {<std::__1::__cxx_atomic_base_impl<unsigned long>> = {__a_value = 0}, <No data fields>}, static is_always_lock_free = <optimized out>}, <No data fields>}, <No data fields>}, read_bytes = {<std::__1::__atomic_base<unsigned long, true>> = {<std::__1::__atomic_base<unsigned long, false>> = {__a_ = {<std::__1::__cxx_atomic_base_impl<unsigned long>> = {__a_value = 0}, <No data fields>}, static is_always_lock_free = <optimized out>}, <No data fields>}, <No data fields>}, read_raw_bytes = {<std::__1::__atomic_base<unsigned long, true>> = {<std::__1::__atomic_base<unsigned long, false>> = {__a_ = {<std::__1::__cxx_atomic_base_impl<unsigned long>> = {__a_value = 0}, <No data fields>}, static is_always_lock_free = <optimized out>}, <No data fields>}, <No data fields>}, total_rows_to_read = {<std::__1::__atomic_base<unsigned long, true>> = {<std::__1::__atomic_base<unsigned long, false>> = {__a_ = {<std::__1::__cxx_atomic_base_impl<unsigned long>> = {__a_value = 0}, <No data fields>}, static is_always_lock_free = <optimized out>}, <No data fields>}, <No data fields>}, total_raw_bytes_to_read = {<std::__1::__atomic_base<unsigned long, true>> = {<std::__1::__atomic_base<unsigned long, false>> = {__a_ = {<std::__1::__cxx_atomic_base_impl<unsigned long>> = {__a_value = 0}, <No data fields>}, static is_always_lock_free = <optimized out>}, <No data fields>}, <No data fields>}, written_rows = {<std::__1::__atomic_base<unsigned long, true>> = {<std::__1::__atomic_base<unsigned long, false>> = {__a_ = {<std::__1::__cxx_atomic_base_impl<unsigned long>> = {__a_value = 0}, <No data fields>}, static is_always_lock_free = <optimized out>}, <No data fields>}, <No data fields>}, written_bytes = {<std::__1::__atomic_base<unsigned long, true>> = {<std::__1::__atomic_base<unsigned long, false>> = {__a_ = {<std::__1::__cxx_atomic_base_impl<unsigned long>> = {__a_value = 0}, <No data fields>}, static is_always_lock_free = <optimized out>}, <No data fields>}, <No data fields>}}, deleter = {<std::__1::__function::__maybe_derive_from_unary_function<void ()>> = {<No data fields>}, <std::__1::__function::__maybe_derive_from_binary_function<void ()>> = {<No data fields>}, __f_ = {__buf_ = {__small = \"\\000\\000\\000\\000\\000\\000\\000\\000\\250\\332\\205\\215\\214\\177\\000\", __large = 0x0}, __invoker_ = {__call_ = 0x9e69780 <std::__1::__function::__policy_invoker<void ()>::__call_empty(std::__1::__function::__policy_storage const*)>}, __policy_ = 0x4c6ff98 <std::__1::__function::__policy::__create_empty()::__policy_>}}, thread_trace_context = {trace_id = {t = {items = {0, 0}}}, span_id = 0, tracestate = {<std::__1::__basic_string_common<true>> = {<No data fields>}, static __short_mask = 128, static __long_mask = 9223372036854775808, __r_ = {<std::__1::__compressed_pair_elem<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, 0, false>> = {__value_ = {{__l = {__data_ = 0x0, __size_ = 0, __cap_ = 0}, __s = {__data_ = '\\000' <repeats 22 times>, {<std::__1::__padding<char, 1>> = {<No data fields>}, __size_ = 0 '\\000'}}, __r = {__words = {0, 0, 0}}}}}, <std::__1::__compressed_pair_elem<std::__1::allocator<char>, 1, true>> = {<std::__1::allocator<char>> = {<No data fields>}, <No data fields>}, <No data fields>}, static npos = 18446744073709551615}, trace_flags = 0 '\\000'}, thread_group = {__ptr_ = 0x0, __cntrl_ = 0x0}, thread_state = {<std::__1::__atomic_base<int, true>> = {<std::__1::__atomic_base<int, false>> = {__a_ = {<std::__1::__cxx_atomic_base_impl<int>> = {__a_value = 0}, <No data fields>}, static is_always_lock_free = <optimized out>}, <No data fields>}, <No data fields>}, global_context = {__ptr_ = 0x0, __cntrl_ = 0x0}, query_context = {__ptr_ = 0x0, __cntrl_ = 0x0}, query_id = {<std::__1::__basic_string_common<true>> = {<No data fields>}, static __short_mask = 128, static __long_mask = 9223372036854775808, __r_ = {<std::__1::__compressed_pair_elem<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, 0, false>> = {__value_ = {{__l = {__data_ = 0x7b1000414040 \"\", __size_ = 0, __cap_ = 9223372036854775872}, __s = {__data_ = \"@@A\\000\\020{\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000@\\000\\000\\000\\000\\000\", {<std::__1::__padding<char, 1>> = {<No data fields>}, __size_ = 128 '\\200'}}, __r = {__words = {135308653969472, 0, 9223372036854775872}}}}}, <std::__1::__compressed_pair_elem<std::__1::allocator<char>, 1, true>> = {<std::__1::allocator<char>> = {<No data fields>}, <No data fields>}, <No data fields>}, static npos = 18446744073709551615}, logs_queue_ptr = {__ptr_ = 0x0, __cntrl_ = 0x0}, profile_queue_ptr = {__ptr_ = 0x0, __cntrl_ = 0x0}, performance_counters_finalized = false, query_start_time_nanoseconds = 0, query_start_time_microseconds = 0, query_start_time = 0, queries_started = 0, query_profiler_real = {__ptr_ = {<std::__1::__compressed_pair_elem<DB::QueryProfilerReal*, 0, false>> = {__value_ = 0x0}, <std::__1::__compressed_pair_elem<std::__1::default_delete<DB::QueryProfilerReal>, 1, true>> = {<std::__1::default_delete<DB::QueryProfilerReal>> = {<No data fields>}, <No data fields>}, <No data fields>}}, query_profiler_cpu = {__ptr_ = {<std::__1::__compressed_pair_elem<DB::QueryProfilerCPU*, 0, false>> = {__value_ = 0x0}, <std::__1::__compressed_pair_elem<std::__1::default_delete<DB::QueryProfilerCPU>, 1, true>> = {<std::__1::default_delete<DB::QueryProfilerCPU>> = {<No data fields>}, <No data fields>}, <No data fields>}}, log = 0x7b100000a440, last_rusage = {__ptr_ = {<std::__1::__compressed_pair_elem<DB::RUsageCounters*, 0, false>> = {__value_ = 0x7b0c0002b350}, <std::__1::__compressed_pair_elem<std::__1::default_delete<DB::RUsageCounters>, 1, true>> = {<std::__1::default_delete<DB::RUsageCounters>> = {<No data fields>}, <No data fields>}, <No data fields>}}, taskstats = {__ptr_ = {<std::__1::__compressed_pair_elem<DB::TasksStatsCounters*, 0, false>> = {__value_ = 0x0}, <std::__1::__compressed_pair_elem<std::__1::default_delete<DB::TasksStatsCounters>, 1, true>> = {<std::__1::default_delete<DB::TasksStatsCounters>> = {<No data fields>}, <No data fields>}, <No data fields>}}, fatal_error_callback = {<std::__1::__function::__maybe_derive_from_unary_function<void ()>> = {<No data fields>}, <std::__1::__function::__maybe_derive_from_binary_function<void ()>> = {<No data fields>}, __f_ = {__buf_ = {__small = \"\\000\\000\\000\\000\\000\\000\\000\\000\\250\\036\\222\\034\\215\\177\\000\", __large = 0x0}, __invoker_ = {__call_ = 0x9e69780 <std::__1::__function::__policy_invoker<void ()>::__call_empty(std::__1::__function::__policy_storage const*)>}, __policy_ = 0x4c6ff98 <std::__1::__function::__policy::__create_empty()::__policy_>}}, query_profiler_enabled = true}\r\n2021-12-14 22:12:52         function = {this = 0x7b4c00001410, it = {__ptr_ = 0x7b0c00075e40}}\r\n2021-12-14 22:12:52         arguments = <optimized out>\r\n2021-12-14 22:12:52 #56 0x0000000009e7f3c2 in std::__1::__invoke<ThreadFromGlobalPool::ThreadFromGlobalPool<ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::{lambda()#2}>(ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::{lambda()#2}&&)::{lambda()#1}&> (__f=...) at ../contrib/libcxx/include/type_traits:3676\r\n2021-12-14 22:12:52 No locals.\r\n2021-12-14 22:12:52 #57 std::__1::__invoke_void_return_wrapper<void>::__call<ThreadFromGlobalPool::ThreadFromGlobalPool<ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::{lambda()#2}>(ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::{lambda()#2}&&)::{lambda()#1}&>(ThreadFromGlobalPool::ThreadFromGlobalPool<ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::{lambda()#2}>(ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::{lambda()#2}&&)::{lambda()#1}&) (__args=...) at ../contrib/libcxx/include/__functional_base:348\r\n2021-12-14 22:12:52 No locals.\r\n2021-12-14 22:12:52 #58 std::__1::__function::__default_alloc_func<ThreadFromGlobalPool::ThreadFromGlobalPool<ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::{lambda()#2}>(ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::{lambda()#2}&&)::{lambda()#1}, void ()>::operator()() (this=0x0) at ../contrib/libcxx/include/functional:1608\r\n2021-12-14 22:12:52 No locals.\r\n2021-12-14 22:12:52 #59 std::__1::__function::__policy_invoker<void ()>::__call_impl<std::__1::__function::__default_alloc_func<ThreadFromGlobalPool::ThreadFromGlobalPool<ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::{lambda()#2}>(ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::{lambda()#2}&&)::{lambda()#1}, void ()> >(std::__1::__function::__policy_storage const*) (__buf=0x7f8c8d85dc98) at ../contrib/libcxx/include/functional:2089\r\n2021-12-14 22:12:52         __f = 0x0\r\n2021-12-14 22:12:52 #60 0x0000000009e7a5ce in std::__1::__function::__policy_func<void ()>::operator()() const (this=0x7f8c8d85dc98) at ../contrib/libcxx/include/functional:2221\r\n2021-12-14 22:12:52 No locals.\r\n2021-12-14 22:12:52 #61 std::__1::function<void ()>::operator()() const (this=0x7f8c8d85dc98) at ../contrib/libcxx/include/functional:2560\r\n2021-12-14 22:12:52 No locals.\r\n2021-12-14 22:12:52 #62 ThreadPoolImpl<std::__1::thread>::worker (this=this@entry=0x7b3c00007800, thread_it=...) at ../src/Common/ThreadPool.cpp:274\r\n2021-12-14 22:12:52         metric_active_threads = {what = <optimized out>, amount = 1}\r\n2021-12-14 22:12:52         job = {<std::__1::__function::__maybe_derive_from_unary_function<void ()>> = {<No data fields>}, <std::__1::__function::__maybe_derive_from_binary_function<void ()>> = {<No data fields>}, __f_ = {__buf_ = {__small = \"\\300f\\001\\000\\020{\\000\\000\\340\\373\\000\\000\\b{\\000\", __large = 0x7b10000166c0}, __invoker_ = {__call_ = 0x9e7f3a0 <std::__1::__function::__policy_invoker<void ()>::__call_impl<std::__1::__function::__default_alloc_func<ThreadFromGlobalPool::ThreadFromGlobalPool<ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::{lambda()#2}>(ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::{lambda()#2}&&)::{lambda()#1}, void ()> >(std::__1::__function::__policy_storage const*)>}, __policy_ = 0x4c72880 <std::__1::__function::__policy::__choose_policy<std::__1::__function::__default_alloc_func<ThreadFromGlobalPool::ThreadFromGlobalPool<ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::{lambda()#2}>(ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::{lambda()#2}&&)::{lambda()#1}, void ()> >(std::__1::integral_constant<bool, false>)::__policy_>}}\r\n2021-12-14 22:12:52         need_shutdown = <optimized out>\r\n2021-12-14 22:12:52         metric_all_threads = {what = <optimized out>, amount = 1}\r\n2021-12-14 22:12:52 #63 0x0000000009e7dd91 in ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::{lambda()#2}::operator()() const (this=0x7b080000fb88) at ../src/Common/ThreadPool.cpp:139\r\n2021-12-14 22:12:52 No locals.\r\n2021-12-14 22:12:52 #64 std::__1::__invoke<ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::{lambda()#2}> (__f=...) at ../contrib/libcxx/include/type_traits:3676\r\n2021-12-14 22:12:52 No locals.\r\n2021-12-14 22:12:52 #65 std::__1::__thread_execute<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::{lambda()#2}>(std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::{lambda()#2}>&, std::__1::__tuple_indices<>) (__t=...) at ../contrib/libcxx/include/thread:280\r\n2021-12-14 22:12:52 No locals.\r\n2021-12-14 22:12:52 #66 std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::{lambda()#2}> >(std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::{lambda()#2}>) (__vp=0x7b080000fb80) at ../contrib/libcxx/include/thread:291\r\n2021-12-14 22:12:52         __p = {__ptr_ = {<std::__1::__compressed_pair_elem<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, (lambda at ../src/Common/ThreadPool.cpp:139:42)> *, 0, false>> = {__value_ = 0x7b080000fb80}, <std::__1::__compressed_pair_elem<std::__1::default_delete<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, (lambda at ../src/Common/ThreadPool.cpp:139:42)> >, 1, true>> = {<std::__1::default_delete<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, (lambda at ../src/Common/ThreadPool.cpp:139:42)> >> = {<No data fields>}, <No data fields>}, <No data fields>}}\r\n2021-12-14 22:12:52 #67 0x0000000009d94e3d in __tsan_thread_start_func ()\r\n2021-12-14 22:12:52 No symbol table info available.\r\n2021-12-14 22:12:52 #68 0x00007f8d20bb3609 in start_thread () from /lib/x86_64-linux-gnu/libpthread.so.0\r\n2021-12-14 22:12:52 No symbol table info available.\r\n2021-12-14 22:12:52 #69 0x00007f8d20ada293 in clone () from /lib/x86_64-linux-gnu/libc.so.6\r\n2021-12-14 22:12:52 No symbol table info available.\r\n2021-12-14 22:12:52 No symbol table info available.\r\n2021-12-14 22:12:52 [Inferior 1 (process 515) detached]\r\n```","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32773/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32773/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32754","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32754/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32754/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32754/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/32754","id":1079863642,"node_id":"I_kwDOA5dJV85AXWla","number":32754,"title":"This query is slow.","user":{"login":"alexey-milovidov","id":18581488,"node_id":"MDQ6VXNlcjE4NTgxNDg4","avatar_url":"https://avatars.githubusercontent.com/u/18581488?v=4","gravatar_id":"","url":"https://api.github.com/users/alexey-milovidov","html_url":"https://github.com/alexey-milovidov","followers_url":"https://api.github.com/users/alexey-milovidov/followers","following_url":"https://api.github.com/users/alexey-milovidov/following{/other_user}","gists_url":"https://api.github.com/users/alexey-milovidov/gists{/gist_id}","starred_url":"https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexey-milovidov/subscriptions","organizations_url":"https://api.github.com/users/alexey-milovidov/orgs","repos_url":"https://api.github.com/users/alexey-milovidov/repos","events_url":"https://api.github.com/users/alexey-milovidov/events{/privacy}","received_events_url":"https://api.github.com/users/alexey-milovidov/received_events","type":"User","site_admin":false},"labels":[{"id":756395244,"node_id":"MDU6TGFiZWw3NTYzOTUyNDQ=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/performance","name":"performance","color":"c2e0c6","default":false,"description":null},{"id":1365579236,"node_id":"MDU6TGFiZWwxMzY1NTc5MjM2","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/minor","name":"minor","color":"FFF8F8","default":false,"description":"Priority: minor"},{"id":2104602822,"node_id":"MDU6TGFiZWwyMTA0NjAyODIy","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/fuzz","name":"fuzz","color":"abc4ea","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2021-12-14T15:00:17Z","updated_at":"2021-12-19T12:00:30Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"This query spend one second before returning an error:\r\n\r\n```\r\nSELECT arrayWithConstant(96142475, ['qMUF']);\r\n```\r\n\r\nIt opens a possibility of DoS.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32754/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32754/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32753","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32753/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32753/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32753/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/32753","id":1079847841,"node_id":"I_kwDOA5dJV85AXSuh","number":32753,"title":"Projections don't work with views ","user":{"login":"den-crane","id":19737682,"node_id":"MDQ6VXNlcjE5NzM3Njgy","avatar_url":"https://avatars.githubusercontent.com/u/19737682?v=4","gravatar_id":"","url":"https://api.github.com/users/den-crane","html_url":"https://github.com/den-crane","followers_url":"https://api.github.com/users/den-crane/followers","following_url":"https://api.github.com/users/den-crane/following{/other_user}","gists_url":"https://api.github.com/users/den-crane/gists{/gist_id}","starred_url":"https://api.github.com/users/den-crane/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/den-crane/subscriptions","organizations_url":"https://api.github.com/users/den-crane/orgs","repos_url":"https://api.github.com/users/den-crane/repos","events_url":"https://api.github.com/users/den-crane/events{/privacy}","received_events_url":"https://api.github.com/users/den-crane/received_events","type":"User","site_admin":false},"labels":[{"id":1575085465,"node_id":"MDU6TGFiZWwxNTc1MDg1NDY1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/unexpected%20behaviour","name":"unexpected behaviour","color":"e088ca","default":false,"description":""},{"id":3045757785,"node_id":"MDU6TGFiZWwzMDQ1NzU3Nzg1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-projections","name":"comp-projections","color":"b5bcff","default":false,"description":""}],"state":"open","locked":false,"assignee":{"login":"amosbird","id":5085485,"node_id":"MDQ6VXNlcjUwODU0ODU=","avatar_url":"https://avatars.githubusercontent.com/u/5085485?v=4","gravatar_id":"","url":"https://api.github.com/users/amosbird","html_url":"https://github.com/amosbird","followers_url":"https://api.github.com/users/amosbird/followers","following_url":"https://api.github.com/users/amosbird/following{/other_user}","gists_url":"https://api.github.com/users/amosbird/gists{/gist_id}","starred_url":"https://api.github.com/users/amosbird/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/amosbird/subscriptions","organizations_url":"https://api.github.com/users/amosbird/orgs","repos_url":"https://api.github.com/users/amosbird/repos","events_url":"https://api.github.com/users/amosbird/events{/privacy}","received_events_url":"https://api.github.com/users/amosbird/received_events","type":"User","site_admin":false},"assignees":[{"login":"amosbird","id":5085485,"node_id":"MDQ6VXNlcjUwODU0ODU=","avatar_url":"https://avatars.githubusercontent.com/u/5085485?v=4","gravatar_id":"","url":"https://api.github.com/users/amosbird","html_url":"https://github.com/amosbird","followers_url":"https://api.github.com/users/amosbird/followers","following_url":"https://api.github.com/users/amosbird/following{/other_user}","gists_url":"https://api.github.com/users/amosbird/gists{/gist_id}","starred_url":"https://api.github.com/users/amosbird/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/amosbird/subscriptions","organizations_url":"https://api.github.com/users/amosbird/orgs","repos_url":"https://api.github.com/users/amosbird/repos","events_url":"https://api.github.com/users/amosbird/events{/privacy}","received_events_url":"https://api.github.com/users/amosbird/received_events","type":"User","site_admin":false}],"milestone":null,"comments":1,"created_at":"2021-12-14T14:46:27Z","updated_at":"2021-12-14T15:41:43Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"body":"```sql\r\nCREATE TABLE t ( x String, y String, v Float64 ) ENGINE=MergeTree ORDER BY (x, y);\r\nALTER TABLE t ADD PROJECTION tp ( SELECT x, SUM(v) GROUP BY x );\r\nCREATE VIEW v AS SELECT * FROM t;\r\nINSERT INTO t (x, y, v) SELECT randomStringUTF8(1), randomStringUTF8(1), number FROM numbers(10000000);\r\n\r\nSELECT x, SUM(v) FROM t GROUP BY x FORMAT Null \r\nSETTINGS allow_experimental_projection_optimization=1, force_optimize_projection=1;\r\nOk.\r\n0 rows in set. Elapsed: 0.102 sec. Processed 2.01 million rows, 65.84 MB (19.75 million rows/s., 646.96 MB/s.)\r\n\r\n\r\nSELECT x, SUM(v) FROM v GROUP BY x FORMAT Null \r\nSETTINGS allow_experimental_projection_optimization=1, force_optimize_projection=1;\r\n\r\nReceived exception from server (version 21.12.1):\r\nCode: 584. DB::Exception: Received from localhost:9000. \r\nDB::Exception: No projection is used when allow_experimental_projection_optimization = 1 \r\nand force_optimize_projection = 1. (PROJECTION_NOT_USED)\r\n```","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32753/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32753/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32748","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32748/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32748/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32748/events","html_url":"https://github.com/ClickHouse/ClickHouse/pull/32748","id":1079727715,"node_id":"PR_kwDOA5dJV84v0l-6","number":32748,"title":"Support `optimize_read_in_order` if prefix of sorting key is already sorted","user":{"login":"CurtizJ","id":20361854,"node_id":"MDQ6VXNlcjIwMzYxODU0","avatar_url":"https://avatars.githubusercontent.com/u/20361854?v=4","gravatar_id":"","url":"https://api.github.com/users/CurtizJ","html_url":"https://github.com/CurtizJ","followers_url":"https://api.github.com/users/CurtizJ/followers","following_url":"https://api.github.com/users/CurtizJ/following{/other_user}","gists_url":"https://api.github.com/users/CurtizJ/gists{/gist_id}","starred_url":"https://api.github.com/users/CurtizJ/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/CurtizJ/subscriptions","organizations_url":"https://api.github.com/users/CurtizJ/orgs","repos_url":"https://api.github.com/users/CurtizJ/repos","events_url":"https://api.github.com/users/CurtizJ/events{/privacy}","received_events_url":"https://api.github.com/users/CurtizJ/received_events","type":"User","site_admin":false},"labels":[{"id":1304141686,"node_id":"MDU6TGFiZWwxMzA0MTQxNjg2","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/pr-improvement","name":"pr-improvement","color":"007700","default":false,"description":"Pull request with some product improvements"}],"state":"open","locked":false,"assignee":{"login":"serxa","id":1014716,"node_id":"MDQ6VXNlcjEwMTQ3MTY=","avatar_url":"https://avatars.githubusercontent.com/u/1014716?v=4","gravatar_id":"","url":"https://api.github.com/users/serxa","html_url":"https://github.com/serxa","followers_url":"https://api.github.com/users/serxa/followers","following_url":"https://api.github.com/users/serxa/following{/other_user}","gists_url":"https://api.github.com/users/serxa/gists{/gist_id}","starred_url":"https://api.github.com/users/serxa/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/serxa/subscriptions","organizations_url":"https://api.github.com/users/serxa/orgs","repos_url":"https://api.github.com/users/serxa/repos","events_url":"https://api.github.com/users/serxa/events{/privacy}","received_events_url":"https://api.github.com/users/serxa/received_events","type":"User","site_admin":false},"assignees":[{"login":"serxa","id":1014716,"node_id":"MDQ6VXNlcjEwMTQ3MTY=","avatar_url":"https://avatars.githubusercontent.com/u/1014716?v=4","gravatar_id":"","url":"https://api.github.com/users/serxa","html_url":"https://github.com/serxa","followers_url":"https://api.github.com/users/serxa/followers","following_url":"https://api.github.com/users/serxa/following{/other_user}","gists_url":"https://api.github.com/users/serxa/gists{/gist_id}","starred_url":"https://api.github.com/users/serxa/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/serxa/subscriptions","organizations_url":"https://api.github.com/users/serxa/orgs","repos_url":"https://api.github.com/users/serxa/repos","events_url":"https://api.github.com/users/serxa/events{/privacy}","received_events_url":"https://api.github.com/users/serxa/received_events","type":"User","site_admin":false}],"milestone":null,"comments":2,"created_at":"2021-12-14T12:59:09Z","updated_at":"2022-01-26T08:32:15Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/pulls/32748","html_url":"https://github.com/ClickHouse/ClickHouse/pull/32748","diff_url":"https://github.com/ClickHouse/ClickHouse/pull/32748.diff","patch_url":"https://github.com/ClickHouse/ClickHouse/pull/32748.patch","merged_at":null},"body":"Changelog category (leave one):\r\n- Improvement\r\n\r\nChangelog entry (a user-readable short description of the changes that goes to CHANGELOG.md):\r\nSupport `optimize_read_in_order` if prefix of sorting key is already sorted. E.g. if we have sorting key `ORDER BY (a, b)` in table and query with `WHERE a = const ORDER BY b` clauses, now it will be applied reading in order of sorting key instead of full sort.\r\n\r\nResolves #7102.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32748/reactions","total_count":2,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32748/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32743","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32743/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32743/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32743/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/32743","id":1079499262,"node_id":"I_kwDOA5dJV85AV9n-","number":32743,"title":"Inconsistent table names Error where having left join both inside & outside a view function","user":{"login":"kilik52","id":37238,"node_id":"MDQ6VXNlcjM3MjM4","avatar_url":"https://avatars.githubusercontent.com/u/37238?v=4","gravatar_id":"","url":"https://api.github.com/users/kilik52","html_url":"https://github.com/kilik52","followers_url":"https://api.github.com/users/kilik52/followers","following_url":"https://api.github.com/users/kilik52/following{/other_user}","gists_url":"https://api.github.com/users/kilik52/gists{/gist_id}","starred_url":"https://api.github.com/users/kilik52/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kilik52/subscriptions","organizations_url":"https://api.github.com/users/kilik52/orgs","repos_url":"https://api.github.com/users/kilik52/repos","events_url":"https://api.github.com/users/kilik52/events{/privacy}","received_events_url":"https://api.github.com/users/kilik52/received_events","type":"User","site_admin":false},"labels":[{"id":3260776666,"node_id":"MDU6TGFiZWwzMjYwNzc2NjY2","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/potential%20bug","name":"potential bug","color":"ffc080","default":false,"description":"To be reviewed by developers and confirmed/rejected."}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-12-14T09:13:35Z","updated_at":"2021-12-14T09:13:35Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"> You have to provide the following information whenever possible.\r\n\r\nWhen having left join both inside & outside a view function, it will raise Inconsistent table names Error\r\n\r\n> A clear and concise description of what works not as it is supposed to.\r\n\r\n**How to reproduce**\r\n\r\n* Which ClickHouse server version to use\r\n\r\nClickHouse server version 21.11.6 revision 54450\r\n\r\n* Which interface to use, if matters\r\n* Non-default settings, if any\r\n* `CREATE TABLE` statements for all tables involved\r\n\r\n````\r\ncreate table distributor (id String, name String)　Engine=MergeTree() Order By id;\r\ncreate table product (id String, name String)　Engine=MergeTree() Order By id;\r\n\r\ncreate table sales (id String, distributor String, product String, amount Float32) Engine=MergeTree() Order By id;\r\n````\r\n\r\n* Queries to run that lead to unexpected result\r\n\r\n````sql\r\nSELECT *\r\nFROM view(\r\n    SELECT *\r\n    FROM sales\r\n    LEFT JOIN distributor ON distributor.id = sales.distributor\r\n) AS newSales\r\nLEFT JOIN product ON product.id = newSales.product\r\n````\r\n\r\n**Expected behavior**\r\n\r\nquery successfully executed\r\n\r\n**Error message and/or stacktrace**\r\n\r\nReceived exception from server (version 21.11.6):\r\nCode: 49. DB::Exception: Received from localhost:9000. DB::Exception: Inconsistent table names: While processing SELECT * FROM sales LEFT JOIN distributor ON distributor.id = sales.distributor. \r\n\r\n\r\n**Additional context**\r\n\r\nthe query will successfully executed If i put both left join clause inside the view function. Same as both outside the view function.\r\nbut for some reason, i cannot do that.\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32743/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32743/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32741","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32741/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32741/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32741/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/32741","id":1079388184,"node_id":"I_kwDOA5dJV85AVigY","number":32741,"title":"show tables didnt work in arm","user":{"login":"azjiajiajia","id":61373033,"node_id":"MDQ6VXNlcjYxMzczMDMz","avatar_url":"https://avatars.githubusercontent.com/u/61373033?v=4","gravatar_id":"","url":"https://api.github.com/users/azjiajiajia","html_url":"https://github.com/azjiajiajia","followers_url":"https://api.github.com/users/azjiajiajia/followers","following_url":"https://api.github.com/users/azjiajiajia/following{/other_user}","gists_url":"https://api.github.com/users/azjiajiajia/gists{/gist_id}","starred_url":"https://api.github.com/users/azjiajiajia/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/azjiajiajia/subscriptions","organizations_url":"https://api.github.com/users/azjiajiajia/orgs","repos_url":"https://api.github.com/users/azjiajiajia/repos","events_url":"https://api.github.com/users/azjiajiajia/events{/privacy}","received_events_url":"https://api.github.com/users/azjiajiajia/received_events","type":"User","site_admin":false},"labels":[{"id":1507860028,"node_id":"MDU6TGFiZWwxNTA3ODYwMDI4","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/st-need-repro","name":"st-need-repro","color":"e5b890","default":false,"description":"We were not able to reproduce the problem, please help us."},{"id":1575085465,"node_id":"MDU6TGFiZWwxNTc1MDg1NDY1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/unexpected%20behaviour","name":"unexpected behaviour","color":"e088ca","default":false,"description":""},{"id":2402913184,"node_id":"MDU6TGFiZWwyNDAyOTEzMTg0","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-aarch64","name":"comp-aarch64","color":"b5bcff","default":false,"description":"arm / aarch platform specific"}],"state":"open","locked":false,"assignee":{"login":"Felixoid","id":3025537,"node_id":"MDQ6VXNlcjMwMjU1Mzc=","avatar_url":"https://avatars.githubusercontent.com/u/3025537?v=4","gravatar_id":"","url":"https://api.github.com/users/Felixoid","html_url":"https://github.com/Felixoid","followers_url":"https://api.github.com/users/Felixoid/followers","following_url":"https://api.github.com/users/Felixoid/following{/other_user}","gists_url":"https://api.github.com/users/Felixoid/gists{/gist_id}","starred_url":"https://api.github.com/users/Felixoid/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Felixoid/subscriptions","organizations_url":"https://api.github.com/users/Felixoid/orgs","repos_url":"https://api.github.com/users/Felixoid/repos","events_url":"https://api.github.com/users/Felixoid/events{/privacy}","received_events_url":"https://api.github.com/users/Felixoid/received_events","type":"User","site_admin":false},"assignees":[{"login":"Felixoid","id":3025537,"node_id":"MDQ6VXNlcjMwMjU1Mzc=","avatar_url":"https://avatars.githubusercontent.com/u/3025537?v=4","gravatar_id":"","url":"https://api.github.com/users/Felixoid","html_url":"https://github.com/Felixoid","followers_url":"https://api.github.com/users/Felixoid/followers","following_url":"https://api.github.com/users/Felixoid/following{/other_user}","gists_url":"https://api.github.com/users/Felixoid/gists{/gist_id}","starred_url":"https://api.github.com/users/Felixoid/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Felixoid/subscriptions","organizations_url":"https://api.github.com/users/Felixoid/orgs","repos_url":"https://api.github.com/users/Felixoid/repos","events_url":"https://api.github.com/users/Felixoid/events{/privacy}","received_events_url":"https://api.github.com/users/Felixoid/received_events","type":"User","site_admin":false}],"milestone":null,"comments":3,"created_at":"2021-12-14T07:06:45Z","updated_at":"2022-01-11T15:05:15Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"show tables didnt work in arm\r\n\r\ni add more than 60 tables in database\r\nthen some tables disappear,but i can still find them by using select * from xxxx","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32741/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32741/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32723","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32723/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32723/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32723/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/32723","id":1078875730,"node_id":"I_kwDOA5dJV85ATlZS","number":32723,"title":"partition does not match max_time in system.parts.","user":{"login":"xuyatian","id":15261812,"node_id":"MDQ6VXNlcjE1MjYxODEy","avatar_url":"https://avatars.githubusercontent.com/u/15261812?v=4","gravatar_id":"","url":"https://api.github.com/users/xuyatian","html_url":"https://github.com/xuyatian","followers_url":"https://api.github.com/users/xuyatian/followers","following_url":"https://api.github.com/users/xuyatian/following{/other_user}","gists_url":"https://api.github.com/users/xuyatian/gists{/gist_id}","starred_url":"https://api.github.com/users/xuyatian/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xuyatian/subscriptions","organizations_url":"https://api.github.com/users/xuyatian/orgs","repos_url":"https://api.github.com/users/xuyatian/repos","events_url":"https://api.github.com/users/xuyatian/events{/privacy}","received_events_url":"https://api.github.com/users/xuyatian/received_events","type":"User","site_admin":false},"labels":[{"id":386401510,"node_id":"MDU6TGFiZWwzODY0MDE1MTA=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/question","name":"question","color":"bfdadc","default":true,"description":""},{"id":1575085465,"node_id":"MDU6TGFiZWwxNTc1MDg1NDY1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/unexpected%20behaviour","name":"unexpected behaviour","color":"e088ca","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2021-12-13T19:01:59Z","updated_at":"2021-12-14T04:58:59Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"\r\n**Describe the unexpected behaviour**\r\nI have a table which is partitioned by toYYYYMMDD(time). when I query from system.parts, I find the partition dose not match the max_time:\r\n**partition: 20211018, max_time:2021-10-19 02:56:11**\r\n\r\n**full query result:**\r\npartition:                             **20211018**\r\nname:                                  20211018_2639186_2651454_23\r\nuuid:                                  00000000-0000-0000-0000-000000000000\r\npart_type:                             Wide\r\nactive:                                1\r\nmarks:                                 732\r\nrows:                                  5896248\r\nbytes_on_disk:                         499082245\r\ndata_compressed_bytes:                 495308034\r\ndata_uncompressed_bytes:               2526307624\r\nmarks_bytes:                           3759552\r\nmodification_time:                     2021-10-26 08:31:50\r\nremove_time:                           1969-12-31 19:00:00\r\nrefcount:                              1\r\nmin_date:                              1970-01-01\r\nmax_date:                              1970-01-01\r\nmin_time:                              2021-10-18 04:28:54\r\nmax_time:                              **2021-10-19 02:56:11** ----> why 2021-10-19??\r\npartition_id:                          20211018\r\nmin_block_number:                      2639186\r\nmax_block_number:                      2651454\r\nlevel:                                 23\r\ndata_version:                          2639186\r\nprimary_key_bytes_in_memory:           14640\r\nprimary_key_bytes_in_memory_allocated: 20480\r\nis_frozen:                             0\r\ndatabase:                              siem\r\ntable:                                 __priv_adom3\r\nengine:                                MergeTree\r\ndisk_name:                             default\r\npath:                                  /drive0/private/clickhouse/store/e47/e473e5d0-3efd-4cfd-81b0-b7e0f8f3a01e/20211018_2639186_2651454_23/\r\nhash_of_all_files:                     fe118601fffbd29e077e44c24061016b\r\nhash_of_uncompressed_files:            7f3170d6a44d086f119f736c069bc861\r\nuncompressed_hash_of_compressed_files: 3dc4a2272dd206e76e897ef75dc85333\r\ndelete_ttl_info_min:                   1969-12-31 19:00:00\r\ndelete_ttl_info_max:                   1969-12-31 19:00:00\r\nmove_ttl_info.expression:              []\r\nmove_ttl_info.min:                     []\r\nmove_ttl_info.max:                     []\r\ndefault_compression_codec:             LZ4\r\nrecompression_ttl_info.expression:     []\r\nrecompression_ttl_info.min:            []\r\nrecompression_ttl_info.max:            []\r\ngroup_by_ttl_info.expression:          []\r\ngroup_by_ttl_info.min:                 []\r\ngroup_by_ttl_info.max:                 []\r\nrows_where_ttl_info.expression:        []\r\nrows_where_ttl_info.min:               []\r\nrows_where_ttl_info.max:               []\r\n\r\n\r\n**How to reproduce**\r\n* Which ClickHouse server version to use\r\n   21.8.5\r\n* Which interface to use, if matters\r\n* Non-default settings, if any\r\n  ┌─name────────────────────────────┬─value───────┐\r\n│ max_insert_block_size           │ 10485760    │\r\n│ max_threads                     │ 1           │\r\n│ load_balancing                  │ random      │\r\n│ max_memory_usage                │ 10000000000 │\r\n│ max_partitions_per_insert_block │ 1000        │\r\n│ allow_drop_detached             │ 1           │\r\n└─────────────────────────────────┴─────────────┘\r\n* `CREATE TABLE` statements for all tables involved\r\nATTACH TABLE __priv_adom3                                                                                             \r\n(                                               \r\n    `adom_oid` UInt32 CODEC(LZ4),                                                                                     \r\n    `itime` DateTime CODEC(LZ4),                 \r\n    `loguid` UInt64 CODEC(LZ4),                                                                                       \r\n    `epid` UInt32 CODEC(LZ4),                                                                                         \r\n    `euid` UInt32 CODEC(LZ4),                                                                                         \r\n    `data_parsername` LowCardinality(String) CODEC(LZ4),                                                              \r\n    `data_sourceid` LowCardinality(String) CODEC(LZ4), \r\n    `data_sourcename` LowCardinality(Nullable(String)) CODEC(LZ4), \r\n    `data_sourcetype` LowCardinality(String) CODEC(LZ4),                                                              \r\n    `data_sourceversion` LowCardinality(Nullable(String)) CODEC(LZ4), \r\n    `data_timestamp` DateTime CODEC(DoubleDelta, LZ4),                                                                \r\n    `app_cat` LowCardinality(Nullable(String)) CODEC(LZ4),                                                            \r\n    `app_id` Nullable(UInt32) CODEC(LZ4),                                                                             \r\n    `app_name` Nullable(String) CODEC(LZ4),                                                                           \r\n    `app_proc` Nullable(String) CODEC(LZ4),                                                                           \r\n    `app_ref` Nullable(String) CODEC(LZ4),           \r\n    `app_service` LowCardinality(Nullable(String)) CODEC(LZ4), \r\n    `app_state` Nullable(String) CODEC(LZ4),    \r\n    `app_ver` Nullable(String) CODEC(LZ4),                                                                            \r\n    `dns_query` Nullable(String) CODEC(LZ4),                                                                          \r\n    `dns_querytype` LowCardinality(Nullable(String)) CODEC(LZ4),                                                      \r\n    `dns_response` Nullable(String) CODEC(LZ4),                                                                       \r\n    `dst_domain` LowCardinality(Nullable(String)) CODEC(LZ4),                                                         \r\n    `dst_geo` LowCardinality(Nullable(String)) CODEC(LZ4),       \r\n    `dst_intf` LowCardinality(Nullable(String)) CODEC(LZ4),                                                           \r\n    `dst_ip` Nullable(IPv6) CODEC(LZ4),         \r\n    `dst_mac` LowCardinality(Nullable(String)) CODEC(LZ4),                                                            \r\n    `dst_natip` Nullable(IPv6) CODEC(LZ4),       \r\n    `dst_natport` Nullable(UInt16) CODEC(LZ4),                                                                        \r\n    `dst_port` Nullable(UInt16) CODEC(LZ4),                                                                           \r\n    `event_action` LowCardinality(Nullable(String)) CODEC(LZ4), \r\n    `event_id` Nullable(UInt32) CODEC(LZ4),                                                                           \r\n    `event_message` Nullable(String) CODEC(LZ4), \r\n    `event_outcome` LowCardinality(Nullable(String)) CODEC(LZ4), \r\n    `event_policy` Nullable(String) CODEC(LZ4),                                                                       \r\n    `event_profile` Nullable(String) CODEC(LZ4),    \r\n    `event_ref` Nullable(String) CODEC(LZ4),                                                                          \r\n    `event_severity` LowCardinality(Nullable(String)) CODEC(LZ4),                                                     \r\n    `event_subtype` LowCardinality(Nullable(String)) CODEC(LZ4),                                                      \r\n    `event_type` LowCardinality(Nullable(String)) CODEC(LZ4), \r\n    `file_accessetime` Nullable(DateTime) CODEC(LZ4), \r\n    `file_createtime` Nullable(DateTime) CODEC(LZ4), \r\n    `file_ext` LowCardinality(Nullable(String)) CODEC(LZ4),  \r\n    `file_hash` Nullable(String) CODEC(LZ4), \r\n    `file_hashtype` LowCardinality(Nullable(String)) CODEC(LZ4), \r\n    `file_name` Nullable(String) CODEC(LZ4), \r\n    `file_path` Nullable(String) CODEC(LZ4), \r\n    `file_size` Nullable(String) CODEC(LZ4), \r\n    `host_classification` LowCardinality(Nullable(String)) CODEC(LZ4), \r\n    `host_hwvendor` LowCardinality(Nullable(String)) CODEC(LZ4), \r\n    `host_hwver` LowCardinality(Nullable(String)) CODEC(LZ4), \r\n    `host_ip` Nullable(IPv6) CODEC(LZ4), \r\n    `host_location` Nullable(String) CODEC(LZ4), \r\n    `host_mac` Nullable(String) CODEC(LZ4), \r\n    `host_name` LowCardinality(Nullable(String)) CODEC(LZ4), \r\n    `host_osfamily` LowCardinality(Nullable(String)) CODEC(LZ4), \r\n    `host_osname` LowCardinality(Nullable(String)) CODEC(LZ4), \r\n    `host_osver` LowCardinality(Nullable(String)) CODEC(LZ4), \r\n    `host_owner` Nullable(String) CODEC(LZ4), \r\n    `host_type` LowCardinality(Nullable(String)) CODEC(LZ4), \r\n    `host_uid` LowCardinality(Nullable(String)) CODEC(LZ4),  \r\n    `http_cookie` Nullable(String) CODEC(LZ4), \r\n    `http_method` LowCardinality(Nullable(String)) CODEC(LZ4), \r\n    `http_referer` Nullable(String) CODEC(LZ4), \r\n    `http_url` Nullable(String) CODEC(LZ4), \r\n    `http_useragent` LowCardinality(Nullable(String)) CODEC(LZ4), \r\n    `mail_from` Nullable(String) CODEC(LZ4), \r\n    `mail_size` Nullable(UInt32) CODEC(LZ4), \r\n    `mail_subject` Nullable(String) CODEC(LZ4), \r\n    `mail_to` Nullable(String) CODEC(LZ4), \r\n    `net_direction` LowCardinality(Nullable(String)) CODEC(LZ4), \r\n    `net_name` LowCardinality(Nullable(String)) CODEC(LZ4),  \r\n    `net_payloadid` Nullable(UInt32) CODEC(LZ4), \r\n    `net_proto` LowCardinality(Nullable(String)) CODEC(LZ4), \r\n    `net_rcvdpkts` Nullable(UInt64) CODEC(LZ4), \r\n    `net_recvbytes` Nullable(UInt64) CODEC(LZ4), \r\n    `net_sentbytes` Nullable(UInt64) CODEC(LZ4), \r\n    `net_sentpkts` Nullable(UInt64) CODEC(LZ4), \r\n    `net_sessionduration` Nullable(UInt32) CODEC(LZ4), \r\n    `net_sessionid` Nullable(String) CODEC(LZ4), \r\n    `net_ssid` LowCardinality(Nullable(String)) CODEC(LZ4),  \r\n    `src_domain` LowCardinality(Nullable(String)) CODEC(LZ4), \r\n    `src_geo` LowCardinality(Nullable(String)) CODEC(LZ4),  \r\n    `src_intf` LowCardinality(Nullable(String)) CODEC(LZ4),  \r\n    `src_ip` Nullable(IPv6) CODEC(LZ4), \r\n    `src_mac` LowCardinality(Nullable(String)) CODEC(LZ4),  \r\n    `src_natip` Nullable(IPv6) CODEC(LZ4), \r\n    `src_natport` Nullable(UInt16) CODEC(LZ4), \r\n    `src_port` Nullable(UInt16) CODEC(LZ4), \r\n    `threat_action` LowCardinality(Nullable(String)) CODEC(LZ4), \r\n    `threat_direction` LowCardinality(Nullable(String)) CODEC(LZ4), \r\n    `threat_id` LowCardinality(Nullable(String)) CODEC(LZ4), \r\n    `threat_name` LowCardinality(Nullable(String)) CODEC(LZ4), \r\n    `threat_pattern` Nullable(String) CODEC(LZ4), \r\n    `threat_ref` Nullable(String) CODEC(LZ4), \r\n    `threat_score` Nullable(UInt32) CODEC(LZ4), \r\n    `threat_severity` LowCardinality(Nullable(String)) CODEC(LZ4), \r\n    `threat_type` LowCardinality(Nullable(String)) CODEC(LZ4), \r\n    `user_authtype` LowCardinality(Nullable(String)) CODEC(LZ4), \r\n    `user_classification` LowCardinality(Nullable(String)) CODEC(LZ4),                                                                                                                                                                  \r\n    `user_domain` LowCardinality(Nullable(String)) CODEC(LZ4),                                                                                                                                                                          \r\n    `user_email` Nullable(String) CODEC(LZ4),                                                                       \r\n    `user_group` LowCardinality(Nullable(String)) CODEC(LZ4),                                                                                                                                                                           \r\n    `user_id` Nullable(String) CODEC(LZ4),                                                                          \r\n    `user_location` LowCardinality(Nullable(String)) CODEC(LZ4),                                                                                                                                                                        \r\n    `user_name` Nullable(String) CODEC(LZ4),                                                                        \r\n    `user_org` LowCardinality(Nullable(String)) CODEC(LZ4),                                                                                                                                                                             \r\n    `user_phone` Nullable(String) CODEC(LZ4),                                                                       \r\n    `user_role` LowCardinality(Nullable(String)) CODEC(LZ4),                                                                                                                                                                            \r\n    `user_social` Nullable(String) CODEC(LZ4)                                                                       \r\n)                                                                                                                   \r\nENGINE = MergeTree()                                                                                                \r\nPARTITION BY toYYYYMMDD(itime)                                                                                      \r\nORDER BY (adom_oid, itime, intHash32(itime), loguid)                                                                \r\nSAMPLE BY intHash32(itime)                                                                                          \r\nSETTINGS index_granularity = 8192 \r\n* Sample data for all these tables, use [clickhouse-obfuscator]\r\n* Queries to run that lead to unexpected result\r\nselect * from system.parts\r\n\r\n**Expected behavior**\r\n  the partition should match the max_time.\r\n\r\n**Error message and/or stacktrace**\r\nIf applicable, add screenshots to help explain your problem.\r\n\r\n**Additional context**\r\nAdd any other context about the problem here.\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32723/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32723/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32648","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32648/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32648/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32648/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/32648","id":1078262197,"node_id":"I_kwDOA5dJV85ARPm1","number":32648,"title":"Error when using quantileDeterministicMerge","user":{"login":"nicolasblaye","id":10774503,"node_id":"MDQ6VXNlcjEwNzc0NTAz","avatar_url":"https://avatars.githubusercontent.com/u/10774503?v=4","gravatar_id":"","url":"https://api.github.com/users/nicolasblaye","html_url":"https://github.com/nicolasblaye","followers_url":"https://api.github.com/users/nicolasblaye/followers","following_url":"https://api.github.com/users/nicolasblaye/following{/other_user}","gists_url":"https://api.github.com/users/nicolasblaye/gists{/gist_id}","starred_url":"https://api.github.com/users/nicolasblaye/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nicolasblaye/subscriptions","organizations_url":"https://api.github.com/users/nicolasblaye/orgs","repos_url":"https://api.github.com/users/nicolasblaye/repos","events_url":"https://api.github.com/users/nicolasblaye/events{/privacy}","received_events_url":"https://api.github.com/users/nicolasblaye/received_events","type":"User","site_admin":false},"labels":[{"id":1546506700,"node_id":"MDU6TGFiZWwxNTQ2NTA2NzAw","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-functions","name":"comp-functions","color":"b5bcff","default":false,"description":"Relates to some SQL function"},{"id":3260776666,"node_id":"MDU6TGFiZWwzMjYwNzc2NjY2","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/potential%20bug","name":"potential bug","color":"ffc080","default":false,"description":"To be reviewed by developers and confirmed/rejected."}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":8,"created_at":"2021-12-13T09:10:21Z","updated_at":"2021-12-14T14:52:21Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Hello everyone,\r\n\r\nWhen using quantileDeterministicMerge or quantileDeterministicMergeState functions, I get this error message:\r\n\r\n`quantileDeterministicMerge(0.25)((Ecpm25thQuantileBuffer))`\r\n> DB::Exception: Aggregate function quantileDeterministic requires two arguments.\r\n\r\n`quantileDeterministicMerge(0.25)((Ecpm25thQuantileBuffer, 606))`\r\n> DB::Exception: Illegal type Tuple(AggregateFunction(quantile(0.25), Decimal(18, 9)), UInt16) of argument for aggregate function with Merge suffix must be AggregateFunction(...).\r\n\r\nI have the same behavior when I want to use quantileDeterministicMergeState.\r\n\r\nWe are using version 21.8.10.19, I tried this using the clickhouse-client.\r\nEcpm25thQuantileBuffer is an `AggregateFunction(quantile(0.25), Decimal(18, 9))`\r\n\r\nTo recreate:\r\n`CREATE TABLE quantileTest(a UInt32) ENGINE MergeTree PRIMARY KEY a`\r\n`INSERT INTO quantileTest VALUES (1), (2), (3), (4)`\r\n`SELECT quantileDeterministicMergeState(0.25)(a, 606) FROM quantileTest`\r\n`SELECT quantileDeterministicMergeState(0.25)(a) FROM quantileTest`\r\n\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32648/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32648/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32639","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32639/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32639/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32639/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/32639","id":1078045772,"node_id":"I_kwDOA5dJV85AQaxM","number":32639,"title":"The group by field is not correctly identified during aggregation query","user":{"login":"h1k","id":32011256,"node_id":"MDQ6VXNlcjMyMDExMjU2","avatar_url":"https://avatars.githubusercontent.com/u/32011256?v=4","gravatar_id":"","url":"https://api.github.com/users/h1k","html_url":"https://github.com/h1k","followers_url":"https://api.github.com/users/h1k/followers","following_url":"https://api.github.com/users/h1k/following{/other_user}","gists_url":"https://api.github.com/users/h1k/gists{/gist_id}","starred_url":"https://api.github.com/users/h1k/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/h1k/subscriptions","organizations_url":"https://api.github.com/users/h1k/orgs","repos_url":"https://api.github.com/users/h1k/repos","events_url":"https://api.github.com/users/h1k/events{/privacy}","received_events_url":"https://api.github.com/users/h1k/received_events","type":"User","site_admin":false},"labels":[{"id":386401505,"node_id":"MDU6TGFiZWwzODY0MDE1MDU=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/bug","name":"bug","color":"ee0701","default":true,"description":"Confirmed user-visible misbehaviour in official release"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2021-12-13T03:32:47Z","updated_at":"2021-12-15T14:00:25Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"**Describe what's wrong**\r\nThe group by field is not correctly identified during aggregation query\r\n\r\n**Does it reproduce on recent release?**\r\n21.8.12.29-lts\r\n**How to reproduce**\r\n* Which ClickHouse server version to use\r\n21.8.10.19-lts , 21.8.12.29-lts\r\n```\r\ncreate table groupby_test(id Int8)\r\nengine=MergeTree\r\nOrder by tuple();\r\n```\r\n```\r\ninsert into groupby_test values (1),(2);\r\n```\r\n```\r\nselect multiIf(1=2 and id>0,1,2) as a ,sum(id) from  groupby_test GROUP BY a;\r\n```\r\n**Expected behavior**\r\n| 2 | 3 |\r\n**Error message and/or stacktrace**\r\nColumn `id` is not under aggregate function and not in GROUP BY: While processing mulitIf((1=2) AND id>0,1,2) as a,sum(id).","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32639/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32639/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32590","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32590/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32590/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32590/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/32590","id":1077696811,"node_id":"I_kwDOA5dJV85APFkr","number":32590,"title":"optimize_distributed_group_by_sharding_key allow to push more than 1 subquery to remote shard","user":{"login":"UnamedRus","id":9449405,"node_id":"MDQ6VXNlcjk0NDk0MDU=","avatar_url":"https://avatars.githubusercontent.com/u/9449405?v=4","gravatar_id":"","url":"https://api.github.com/users/UnamedRus","html_url":"https://github.com/UnamedRus","followers_url":"https://api.github.com/users/UnamedRus/followers","following_url":"https://api.github.com/users/UnamedRus/following{/other_user}","gists_url":"https://api.github.com/users/UnamedRus/gists{/gist_id}","starred_url":"https://api.github.com/users/UnamedRus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/UnamedRus/subscriptions","organizations_url":"https://api.github.com/users/UnamedRus/orgs","repos_url":"https://api.github.com/users/UnamedRus/repos","events_url":"https://api.github.com/users/UnamedRus/events{/privacy}","received_events_url":"https://api.github.com/users/UnamedRus/received_events","type":"User","site_admin":false},"labels":[{"id":756395244,"node_id":"MDU6TGFiZWw3NTYzOTUyNDQ=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/performance","name":"performance","color":"c2e0c6","default":false,"description":null},{"id":1365579236,"node_id":"MDU6TGFiZWwxMzY1NTc5MjM2","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/minor","name":"minor","color":"FFF8F8","default":false,"description":"Priority: minor"}],"state":"open","locked":false,"assignee":{"login":"azat","id":430798,"node_id":"MDQ6VXNlcjQzMDc5OA==","avatar_url":"https://avatars.githubusercontent.com/u/430798?v=4","gravatar_id":"","url":"https://api.github.com/users/azat","html_url":"https://github.com/azat","followers_url":"https://api.github.com/users/azat/followers","following_url":"https://api.github.com/users/azat/following{/other_user}","gists_url":"https://api.github.com/users/azat/gists{/gist_id}","starred_url":"https://api.github.com/users/azat/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/azat/subscriptions","organizations_url":"https://api.github.com/users/azat/orgs","repos_url":"https://api.github.com/users/azat/repos","events_url":"https://api.github.com/users/azat/events{/privacy}","received_events_url":"https://api.github.com/users/azat/received_events","type":"User","site_admin":false},"assignees":[{"login":"azat","id":430798,"node_id":"MDQ6VXNlcjQzMDc5OA==","avatar_url":"https://avatars.githubusercontent.com/u/430798?v=4","gravatar_id":"","url":"https://api.github.com/users/azat","html_url":"https://github.com/azat","followers_url":"https://api.github.com/users/azat/followers","following_url":"https://api.github.com/users/azat/following{/other_user}","gists_url":"https://api.github.com/users/azat/gists{/gist_id}","starred_url":"https://api.github.com/users/azat/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/azat/subscriptions","organizations_url":"https://api.github.com/users/azat/orgs","repos_url":"https://api.github.com/users/azat/repos","events_url":"https://api.github.com/users/azat/events{/privacy}","received_events_url":"https://api.github.com/users/azat/received_events","type":"User","site_admin":false}],"milestone":null,"comments":0,"created_at":"2021-12-12T02:03:24Z","updated_at":"2021-12-12T02:25:51Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"**Use case**\r\n\r\n```\r\nCREATE TABLE xxxx\r\n(\r\n    `key_1` UInt8, -- ~ low Cardinality  100 uniq values\r\n    `key_2` UInt32, -- ~ high cardinality 100 mil uniq values\r\n    `value` UInt64\r\n)\r\nENGINE = MergeTree\r\nORDER BY (key_1, key_2)\r\n\r\nCREATE TABLE xxxx_distr\r\n(\r\n    `key_1` UInt8, -- ~ low Cardinality  100 uniq values\r\n    `key_2` UInt32, -- ~ high cardinality 100 mil uniq values\r\n    `value` UInt64\r\n)\r\nENGINE = Distributed('cluster','default','xxxx', key_2)\r\n```\r\n\r\nAnd query like that:\r\n\r\n```\r\nSELECT\r\n    key_1,\r\n    sum(value)\r\nFROM\r\n(\r\n    SELECT\r\n        key_1,\r\n        key_2,\r\n        max(value)\r\n    FROM xxxx_distr\r\n    GROUP BY\r\n        key_1,\r\n        key_2\r\n)\r\nGROUP BY key_1\r\n```\r\n\r\nNow, ClickHouse will execute inner sub query on each shard and return ~ 100mil rows (one per each key_2).\r\nAnd if we would have more column in table, it can actually take significant time to send a lot of rows over network.\r\nBut because we do sharding by key_2, ClickHouse could push both sub queries to remote shard and merge result on initiator node. In that case only 100*(N shards) rows need's to be send over network.\r\n\r\nRight now it's possible to make this optimization by hand via view + cluster function, but it's more complicated.\r\n\r\n```\r\nSELECT\r\n    key_1,\r\n    sum(value)\r\nFROM cluster('cluster',view(\r\nSELECT\r\n    key_1,\r\n    sum(value) as value\r\nFROM\r\n(\r\n    SELECT\r\n        key_1,\r\n        key_2,\r\n        max(value) as value\r\n    FROM xxxx\r\n    GROUP BY\r\n        key_1,\r\n        key_2\r\n)\r\nGROUP BY key_1)) GROUP BY key_1\r\n```","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32590/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32590/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32570","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32570/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32570/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32570/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/32570","id":1077432055,"node_id":"I_kwDOA5dJV85AOE73","number":32570,"title":"DB::Exception: Single chunk is expected from view inner query","user":{"login":"alexeyrusnak","id":23140159,"node_id":"MDQ6VXNlcjIzMTQwMTU5","avatar_url":"https://avatars.githubusercontent.com/u/23140159?v=4","gravatar_id":"","url":"https://api.github.com/users/alexeyrusnak","html_url":"https://github.com/alexeyrusnak","followers_url":"https://api.github.com/users/alexeyrusnak/followers","following_url":"https://api.github.com/users/alexeyrusnak/following{/other_user}","gists_url":"https://api.github.com/users/alexeyrusnak/gists{/gist_id}","starred_url":"https://api.github.com/users/alexeyrusnak/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexeyrusnak/subscriptions","organizations_url":"https://api.github.com/users/alexeyrusnak/orgs","repos_url":"https://api.github.com/users/alexeyrusnak/repos","events_url":"https://api.github.com/users/alexeyrusnak/events{/privacy}","received_events_url":"https://api.github.com/users/alexeyrusnak/received_events","type":"User","site_admin":false},"labels":[{"id":845271686,"node_id":"MDU6TGFiZWw4NDUyNzE2ODY=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/backward%20compatibility","name":"backward compatibility","color":"28af63","default":false,"description":""},{"id":1507860028,"node_id":"MDU6TGFiZWwxNTA3ODYwMDI4","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/st-need-repro","name":"st-need-repro","color":"e5b890","default":false,"description":"We were not able to reproduce the problem, please help us."},{"id":3260776666,"node_id":"MDU6TGFiZWwzMjYwNzc2NjY2","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/potential%20bug","name":"potential bug","color":"ffc080","default":false,"description":"To be reviewed by developers and confirmed/rejected."}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2021-12-11T07:25:09Z","updated_at":"2021-12-13T09:10:56Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Hi \r\nAfter update from 21.10 to 21.11 we have a huge amount of “DB::Exception: Single chunk is expected from view inner query” in logs.\r\nI can`t reproduce it in lab (\r\n\r\nAny advice? Can I downgrade to 2.10? \r\n\r\n<details>\r\n<summary>Part of log</summary>\r\n\r\n```\r\n2021.12.11 00:00:08.801587 [ 2412316 ] {f0cb6c18-a5f5-45c3-bd11-765e4d1d8f32} <Error> TCPHandler: Code: 49. DB::Exception: Single chunk is expected from view inner query SELECT flow_start_date AS date, toStartOfHour(flow_start_time) AS hour, toStartOfInterval(flow_start_time, toIntervalMinute(toUInt8(dictGetStringOrDefault('settings_dic', 'value', tuple('FULLFLOW_AGG_LOG_GROUP_TIME_INTERVAL'), '15')))) AS time, from_subscriber, if(bitTest(reinterpretAsInt64(reverse(unhex(replaceOne(dictGetStringOrDefault('settings_dic', 'value', tuple('FULLFLOW_AGG_LOG_FIELDS_TO_SAVE_BITMASK'), '0'), '0x', '')))), 0), source_ip, '') AS source_ip, if(bitTest(reinterpretAsInt64(reverse(unhex(replaceOne(dictGetStringOrDefault('settings_dic', 'value', tuple('FULLFLOW_AGG_LOG_FIELDS_TO_SAVE_BITMASK'), '0'), '0x', '')))), 1), destination_ip, '') AS destination_ip, if(bitTest(reinterpretAsInt64(reverse(unhex(replaceOne(dictGetStringOrDefault('settings_dic', 'value', tuple('FULLFLOW_AGG_LOG_FIELDS_TO_SAVE_BITMASK'), '0'), '0x', '')))), 2), source_asnum, 0) AS source_asnum, if(bitTest(reinterpretAsInt64(reverse(unhex(replaceOne(dictGetStringOrDefault('settings_dic', 'value', tuple('FULLFLOW_AGG_LOG_FIELDS_TO_SAVE_BITMASK'), '0'), '0x', '')))), 3), destination_asnum, 0) AS destination_asnum, if(bitTest(reinterpretAsInt64(reverse(unhex(replaceOne(dictGetStringOrDefault('settings_dic', 'value', tuple('FULLFLOW_AGG_LOG_FIELDS_TO_SAVE_BITMASK'), '0'), '0x', '')))), 4), source_astitle, '') AS source_astitle, if(bitTest(reinterpretAsInt64(reverse(unhex(replaceOne(dictGetStringOrDefault('settings_dic', 'value', tuple('FULLFLOW_AGG_LOG_FIELDS_TO_SAVE_BITMASK'), '0'), '0x', '')))), 5), destination_astitle, '') AS destination_astitle, is_subscriber, is_excluded_subscriber, if(bitTest(reinterpretAsInt64(reverse(unhex(replaceOne(dictGetStringOrDefault('settings_dic', 'value', tuple('FULLFLOW_AGG_LOG_FIELDS_TO_SAVE_BITMASK'), '0'), '0x', '')))), 6), subscriber, '') AS subscriber, if(bitTest(reinterpretAsInt64(reverse(unhex(replaceOne(dictGetStringOrDefault('settings_dic', 'value', tuple('FULLFLOW_AGG_LOG_FIELDS_TO_SAVE_BITMASK'), '0'), '0x', '')))), 7), subscriber_login, '') AS subscriber_login, if(bitTest(reinterpretAsInt64(reverse(unhex(replaceOne(dictGetStringOrDefault('settings_dic', 'value', tuple('FULLFLOW_AGG_LOG_FIELDS_TO_SAVE_BITMASK'), '0'), '0x', '')))), 8), login, '') AS login, if(bitTest(reinterpretAsInt64(reverse(unhex(replaceOne(dictGetStringOrDefault('settings_dic', 'value', tuple('FULLFLOW_AGG_LOG_FIELDS_TO_SAVE_BITMASK'), '0'), '0x', '')))), 9), host_ip, '') AS host_ip, if(bitTest(reinterpretAsInt64(reverse(unhex(replaceOne(dictGetStringOrDefault('settings_dic', 'value', tuple('FULLFLOW_AGG_LOG_FIELDS_TO_SAVE_BITMASK'), '0'), '0x', '')))), 10), host, '') AS host, if(bitTest(reinterpretAsInt64(reverse(unhex(replaceOne(dictGetStringOrDefault('settings_dic', 'value', tuple('FULLFLOW_AGG_LOG_FIELDS_TO_SAVE_BITMASK'), '0'), '0x', '')))), 11), protocol_code, 0) AS protocol_code, if(bitTest(reinterpretAsInt64(reverse(unhex(replaceOne(dictGetStringOrDefault('settings_dic', 'value', tuple('FULLFLOW_AGG_LOG_FIELDS_TO_SAVE_BITMASK'), '0'), '0x', '')))), 12), protocol_identifier, 0) AS protocol_identifier, if(bitTest(reinterpretAsInt64(reverse(unhex(replaceOne(dictGetStringOrDefault('settings_dic', 'value', tuple('FULLFLOW_AGG_LOG_FIELDS_TO_SAVE_BITMASK'), '0'), '0x', '')))), 13), post_nat_source_ipv4, '') AS post_nat_source_ipv4, if(bitTest(reinterpretAsInt64(reverse(unhex(replaceOne(dictGetStringOrDefault('settings_dic', 'value', tuple('FULLFLOW_AGG_LOG_FIELDS_TO_SAVE_BITMASK'), '0'), '0x', '')))), 14), post_nat_source_port, 0) AS post_nat_source_port, if(bitTest(reinterpretAsInt64(reverse(unhex(replaceOne(dictGetStringOrDefault('settings_dic', 'value', tuple('FULLFLOW_AGG_LOG_FIELDS_TO_SAVE_BITMASK'), '0'), '0x', '')))), 15), dpi_id, 0) AS dpi_id, if(bitTest(reinterpretAsInt64(reverse(unhex(replaceOne(dictGetStringOrDefault('settings_dic', 'value', tuple('FULLFLOW_AGG_LOG_FIELDS_TO_SAVE_BITMASK'), '0'), '0x', '')))), 16), bridge_vchannel_num, 0) AS bridge_vchannel_num, if(bitTest(reinterpretAsInt64(reverse(unhex(replaceOne(dictGetStringOrDefault('settings_dic', 'value', tuple('FULLFLOW_AGG_LOG_FIELDS_TO_SAVE_BITMASK'), '0'), '0x', '')))), 17), ip_class_of_service, 0) AS ip_class_of_service, minState(flow_start_millisecond) AS flow_start_millisecond_min, minIfState(flow_start_millisecond, from_subscriber = 1) AS flow_start_millisecond_from_subscriber_min_if, minIfState(flow_start_millisecond, from_subscriber = 0) AS flow_start_millisecond_to_subscriber_min_if, maxState(flow_end_millisecond) AS flow_end_millisecond_max, maxIfState(flow_end_millisecond, from_subscriber = 1) AS flow_end_millisecond_from_subscriber_max_if, maxIfState(flow_end_millisecond, from_subscriber = 0) AS flow_end_millisecond_to_subscriber_max_if, countState() AS total_count, uniqState(session_id) AS session_id_uniq, sumIfState(octet_delta_count, from_subscriber = 1) AS octet_delta_count_from_subscriber_sum_if, sumIfState(octet_delta_count, from_subscriber = 0) AS octet_delta_count_to_subscriber_sum_if, sumState(octet_delta_count) AS octet_delta_count_sum, sumIfState(packet_delta_count, from_subscriber = 1) AS packet_delta_count_from_subscriber_sum_if, sumIfState(packet_delta_count, from_subscriber = 0) AS packet_delta_count_to_subscriber_sum_if, sumState(packet_delta_count) AS packet_delta_count_sum, anyHeavyState(ip_class_of_service) AS ip_class_of_service_any, avgIfState(packet_deliver_time, (from_subscriber = 1) AND (packet_deliver_time != 0)) AS rtt_from_subscriber_avg_if, avgIfState(packet_deliver_time, (from_subscriber = 0) AND (packet_deliver_time != 0)) AS rtt_to_subscriber_avg_if, avgIfState(packet_deliver_time, packet_deliver_time != 0) AS rtt_avg_if, medianIfState(packet_deliver_time, packet_deliver_time != 0) AS rtt_median_if, anyHeavyIfState(packet_deliver_time, (from_subscriber = 1) AND (packet_deliver_time != 0)) AS rtt_from_subscriber_any_heavy_if, anyHeavyIfState(packet_deliver_time, (from_subscriber = 0) AND (packet_deliver_time != 0)) AS rtt_to_subscriber_any_heavy_if, anyHeavyIfState(packet_deliver_time, packet_deliver_time != 0) AS rtt_any_heavy_if, avgIfState(repeat_delta_pack, (from_subscriber = 1) AND (repeat_delta_pack != 0)) AS retransmits_from_subscriber_avg_if, avgIfState(repeat_delta_pack, (from_subscriber = 0) AND (repeat_delta_pack != 0)) AS retransmits_to_subscriber_avg_if, avgIfState(repeat_delta_pack, repeat_delta_pack != 0) AS retransmits_avg_if, avgIfState(repeat_delta_pack / packet_delta_count, from_subscriber = 1) AS retransmits_rate_from_subscriber_avg_if, avgIfState(repeat_delta_pack / packet_delta_count, from_subscriber = 0) AS retransmits_rate_to_subscriber_avg_if, avgIfState(repeat_delta_pack / packet_delta_count, 1) AS retransmits_rate_avg_if, avgIfState(frgmt_delta_packs, frgmt_delta_packs != 0) AS fragments_avg_if FROM qoestor.fullflow WHERE (is_subscriber = 1) AND (is_excluded_subscriber = 0) GROUP BY date, hour, time, source_asnum, destination_asnum, source_astitle, destination_astitle, from_subscriber, is_subscriber, is_excluded_subscriber, source_ip, destination_ip, subscriber, subscriber_login, login, host_ip, host, protocol_identifier, protocol_code, post_nat_source_ipv4, post_nat_source_port, dpi_id, bridge_vchannel_num, ip_class_of_service ORDER BY time ASC: while pushing to view qoestor.fullflow_agg. (LOGICAL_ERROR), Stack trace (when copying this message, always include the lines below):\r\n\r\n0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse\r\n1. DB::Exception::Exception<std::__1::shared_ptr<DB::IAST> const&>(int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::shared_ptr<DB::IAST> const&) @ 0x1336b798 in /usr/bin/clickhouse\r\n2. DB::ExecutingInnerQueryFromViewTransform::transform(DB::Chunk&) @ 0x13365e7b in /usr/bin/clickhouse\r\n3. ? @ 0x132f7da9 in /usr/bin/clickhouse\r\n4. DB::ExceptionKeepingTransform::work() @ 0x132f789c in /usr/bin/clickhouse\r\n5. ? @ 0x1318565b in /usr/bin/clickhouse\r\n6. DB::PipelineExecutor::executeStepImpl(unsigned long, unsigned long, std::__1::atomic<bool>*) @ 0x13181611 in /usr/bin/clickhouse\r\n7. DB::PipelineExecutor::executeImpl(unsigned long) @ 0x1317f1af in /usr/bin/clickhouse\r\n8. DB::PipelineExecutor::execute(unsigned long) @ 0x1317ef79 in /usr/bin/clickhouse\r\n9. ? @ 0x1317b8eb in /usr/bin/clickhouse\r\n10. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse\r\n11. ? @ 0x9bb929d in /usr/bin/clickhouse\r\n12. start_thread @ 0x82de in /usr/lib64/libpthread-2.28.so\r\n13. clone @ 0xfbe83 in /usr/lib64/libc-2.28.so\r\n```\r\n\r\n\r\n\r\n</details>\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32570/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32570/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32513","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32513/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32513/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32513/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/32513","id":1076962769,"node_id":"I_kwDOA5dJV85AMSXR","number":32513,"title":"Roadmap 2022 (discussion)","user":{"login":"alexey-milovidov","id":18581488,"node_id":"MDQ6VXNlcjE4NTgxNDg4","avatar_url":"https://avatars.githubusercontent.com/u/18581488?v=4","gravatar_id":"","url":"https://api.github.com/users/alexey-milovidov","html_url":"https://github.com/alexey-milovidov","followers_url":"https://api.github.com/users/alexey-milovidov/followers","following_url":"https://api.github.com/users/alexey-milovidov/following{/other_user}","gists_url":"https://api.github.com/users/alexey-milovidov/gists{/gist_id}","starred_url":"https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexey-milovidov/subscriptions","organizations_url":"https://api.github.com/users/alexey-milovidov/orgs","repos_url":"https://api.github.com/users/alexey-milovidov/repos","events_url":"https://api.github.com/users/alexey-milovidov/events{/privacy}","received_events_url":"https://api.github.com/users/alexey-milovidov/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":785082162,"node_id":"MDU6TGFiZWw3ODUwODIxNjI=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-documentation","name":"comp-documentation","color":"b5bcff","default":false,"description":"Used to run automatic builds of the documentation"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":81,"created_at":"2021-12-10T15:26:49Z","updated_at":"2022-01-28T06:58:30Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"This is ClickHouse open-source roadmap 2022.\r\nDescriptions and links to be filled.\r\n\r\nThis roadmap does not cover the tasks related to infrastructure, orchestration, documentation, marketing, integrations, SaaS, drivers, etc.\r\n\r\nSee also:\r\n\r\nRoadmap 2021: [#17623](https://github.com/ClickHouse/ClickHouse/issues/17623)\r\nRoadmap 2020: [in Russian](https://github.com/ClickHouse/ClickHouse/blob/be29057de1835f6f4a17e03a422b45b81efe6833/docs/ru/whats-new/extended-roadmap.md)\r\n\r\n\r\n# Main Tasks\r\n\r\n### Make clickhouse-keeper Production Ready\r\n\r\nIt is already feature complete and being used in production.\r\nUpdate documentation to replace ZooKeeper with clickhouse-keeper everywhere.\r\n\r\n### Support for Backup and Restore\r\n\r\nBackup of tables, databases, servers and clusters.\r\nIncremental backups. Support for partial restore.\r\nSupport for pluggable backup storage options.\r\n\r\n### Semistructured Data\r\n\r\nJSON data type with automatic type inference and dynamic subcolumns.\r\n✔️ Sparse column format and optimization of functions for sparse columns. #22535\r\nDynamic selection of column format - full, const, sparse, low cardinality.\r\nHybrid wide/compact data part format for huge number of columns.\r\n\r\n### ✔️ Type Inference for Data Import\r\n\r\n✔️ Allow to skip column names and types if data format already contains schema (e.g. Parquet, Avro).\r\n✔️ Allow to infer types for text formats (e.g. CSV, TSV, JSONEachRow).\r\n\r\n#32455\r\n\r\n### Support for Transactions\r\n\r\nAtomic insert of more than one block or to more than one partition into MergeTree and ReplicatedMergeTree tables.\r\nAtomic insert into table and dependent materialized views. Atomic insert into multiple tables.\r\nMultiple SELECTs from one consistent snapshot.\r\nAtomic insert into distributed table.\r\n\r\n### Lightweight UPDATE/DELETE\r\n\r\nMake mutations more lightweight by using delete-masks.\r\nIt won't enable frequent UPDATE/DELETE like in OLTP databases, but will make it more close.\r\n\r\n### SQL Compatibility Improvements\r\n\r\nUntangle name resolution and query analysis.\r\nInitial support for correlated subqueries.\r\nAllow to use window functions inside expressions.\r\nAdd compatibility aliases for some window functions, etc.\r\nSupport for GROUPING SETS.\r\n\r\n### JOIN Improvements\r\n\r\nSupport for join reordering.\r\nExtend the cases when condition pushdown is applicable.\r\nConvert anti-join to NOT IN.\r\nUse table sorting for DISTINCT optimization.\r\nUse table sorting for merge JOIN.\r\nGrace hash join algorithm.\r\n\r\n### Resource Management\r\n\r\nMemory overcommit (sort and hard memory limits).\r\nEnable external GROUP BY and ORDER BY by default.\r\nIO operations scheduler with priorities.\r\nMake scalar subqueries accountable.\r\nCPU and network priorities.\r\n\r\n### Separation of Storage and Compute\r\n\r\n✔️ Parallel reading from replicas.\r\nDynamic cluster configuration with service discovery.\r\nCaching of data from object storage.\r\nSimplification of ReplicatedMergeTree.\r\nShared metadata storage.\r\n\r\n\r\n# Experimental and Intern Tasks\r\n\r\n### Streaming Queries\r\n\r\nFix POPULATE for materialized views.\r\nUnification of materialized views, live views and window views.\r\nAllow to set up subscriptions on top of all tables including Merge, Distributed.\r\nNormalization of Kafka tables with storing offsets in ClickHouse.\r\nSupport for exactly once consumption from Kafka, non-consuming reads and multiple consumers.\r\nStreaming queries with GROUP BY, ORDER BY with windowing criterias.\r\nPersistent queues on top of ClickHouse tables.\r\n\r\n### Integration with ML/AI\r\n\r\nIntegration with Tensorflow\r\nIntegration with MADLib\r\n\r\n### GPU Support\r\n\r\nCompile expressions to GPU\r\n\r\n### Unique Key Constraint\r\n\r\n### User Defined Data Types\r\n\r\n### Incremental aggregation in memory\r\n\r\n### Key-value data marts\r\n\r\n### Text Classification\r\n\r\n### Graph Processing\r\n\r\n### Foreign SQL Dialects in ClickHouse\r\n\r\nSupport for MySQL dialect or Apache Calcite as an option.\r\n\r\n### Batch Jobs and Refreshable Materialized Views\r\n\r\n### Embedded ClickHouse Engine\r\n\r\n### Data Hub\r\n\r\n\r\n# Build And Testing Improvements\r\n\r\n### Testing\r\n\r\nAdd tests for AArch64 builds.\r\nAutomated tests for backward compatibility.\r\nServer-side query fuzzer for all kind of tests.\r\nFuzzing of query settings in functional tests.\r\nSQL function based fuzzer.\r\nFuzzer of data formats.\r\nIntegrate with SQLogicTest.\r\nImport obfuscated queries from Yandex Metrica.\r\n\r\n### Builds\r\n\r\nDocker images for AArch64.\r\nEnable missing libraries for AArch64 builds.\r\nAdd and explore Musl builds.\r\nBuild all libraries with our own CMake files.\r\nEmbed root certificates to the binary.\r\nEmbed DNS resolver to the binary.\r\nAdd ClickHouse to Snap, so people will not install obsolete versions by accident.\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32513/reactions","total_count":86,"+1":38,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":22,"rocket":21,"eyes":5},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32513/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32509","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32509/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32509/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32509/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/32509","id":1076871504,"node_id":"I_kwDOA5dJV85AL8FQ","number":32509,"title":"Keep getting \"Coordination::Exception: Can't get data for node ... node doesn't exist (No node). (KEEPER_EXCEPTION) on cluster","user":{"login":"artemisiaohno","id":95919079,"node_id":"U_kgDOBbeb5w","avatar_url":"https://avatars.githubusercontent.com/u/95919079?v=4","gravatar_id":"","url":"https://api.github.com/users/artemisiaohno","html_url":"https://github.com/artemisiaohno","followers_url":"https://api.github.com/users/artemisiaohno/followers","following_url":"https://api.github.com/users/artemisiaohno/following{/other_user}","gists_url":"https://api.github.com/users/artemisiaohno/gists{/gist_id}","starred_url":"https://api.github.com/users/artemisiaohno/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/artemisiaohno/subscriptions","organizations_url":"https://api.github.com/users/artemisiaohno/orgs","repos_url":"https://api.github.com/users/artemisiaohno/repos","events_url":"https://api.github.com/users/artemisiaohno/events{/privacy}","received_events_url":"https://api.github.com/users/artemisiaohno/received_events","type":"User","site_admin":false},"labels":[{"id":1401894928,"node_id":"MDU6TGFiZWwxNDAxODk0OTI4","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-zookeeper","name":"comp-zookeeper","color":"b5bcff","default":false,"description":"Zookeeper"},{"id":1575085465,"node_id":"MDU6TGFiZWwxNTc1MDg1NDY1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/unexpected%20behaviour","name":"unexpected behaviour","color":"e088ca","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2021-12-10T13:52:21Z","updated_at":"2022-01-28T08:49:10Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"We have got the simplest clickhouse cluster setup: 2 shards, 2 replicas per shard. Data is written into a distributed table on a single node. We use the internal_replication method.\r\n\r\nSometimes we get an exception on write:\r\n```\r\nexecuteQuery: Code: 999. Coordination::Exception: Can't get data for node /clickhouse/tables/02/_experiment_session_events/blocks/202109-15_2708049193500530745_14379102412782329402: node doesn't exist (No node). (KEEPER_EXCEPTION) (version 21.11.4.14 (official build)) (from XXX:41600) (in query: INSERT INTO ml._experiment_session_events (date, experiment, \"a lot of fields\") VALUES), Stack trace (when copying this message, always include the lines below):\r\n\r\n0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b605d4 in /usr/bin/clickhouse\r\n1. Coordination::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, Coordination::Error, int) @ 0x134a60d5 in /usr/bin/clickhouse\r\n2. Coordination::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, Coordination::Error) @ 0x134a6416 in /usr/bin/clickhouse\r\n3. zkutil::ZooKeeper::get(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, Coordination::Stat*, std::__1::shared_ptr<Poco::Event> const&) @ 0x134b0ef2 in /usr/bin/clickhouse\r\n4. DB::ReplicatedMergeTreeSink::commitPart(std::__1::shared_ptr<zkutil::ZooKeeper>&, std::__1::shared_ptr<DB::IMergeTreeDataPart>&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__\r\n```\r\n\r\n```\r\ndb: version 21.11.4 revision 54450.\r\nzookeeper: apache-zookeeper-3.6.3-bin\r\n```\r\n\r\nour tables:\r\n```\r\n-- distributed\r\nCREATE TABLE ml.experiment_session_events\r\n(                      \r\n    `date` DateTime,\r\n    `experiment` UInt16,\r\n    ...\r\n)\r\nENGINE = Distributed('ml', 'ml', '_experiment_session_events', rand())\r\n\r\n-- local\r\nCREATE TABLE ml._experiment_session_events\r\n(                            \r\n    `date` DateTime,               \r\n    `experiment` UInt16,                                                                                                                                                                                           \r\n    ...\r\n)\r\nENGINE = ReplicatedSummingMergeTree('/clickhouse/tables/{shard}/_experiment_session_events', '{replica}', count)\r\nPARTITION BY (toYYYYMM(date), experiment, ...)\r\nORDER BY (toStartOfDay(date), experiment, ...)\r\nTTL date + toIntervalDay(730)\r\nSETTINGS index_granularity = 8192    \r\n```\r\n\r\nWe found out that probably there is a problem:\r\nhttps://github.com/ClickHouse/ClickHouse/blob/751b2f3a7cf68537ab442be2d52b3d5af43fdb5b/src/Storages/MergeTree/ReplicatedMergeTreeSink.cpp#L342\r\n\r\nBut it's hard to evaluate how bad it is. Is it ok to get this error? Should we try to change any settings? Thanks!","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32509/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32509/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32505","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32505/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32505/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32505/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/32505","id":1076782817,"node_id":"I_kwDOA5dJV85ALmbh","number":32505,"title":"Lazy marks loading","user":{"login":"nvartolomei","id":543193,"node_id":"MDQ6VXNlcjU0MzE5Mw==","avatar_url":"https://avatars.githubusercontent.com/u/543193?v=4","gravatar_id":"","url":"https://api.github.com/users/nvartolomei","html_url":"https://github.com/nvartolomei","followers_url":"https://api.github.com/users/nvartolomei/followers","following_url":"https://api.github.com/users/nvartolomei/following{/other_user}","gists_url":"https://api.github.com/users/nvartolomei/gists{/gist_id}","starred_url":"https://api.github.com/users/nvartolomei/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nvartolomei/subscriptions","organizations_url":"https://api.github.com/users/nvartolomei/orgs","repos_url":"https://api.github.com/users/nvartolomei/repos","events_url":"https://api.github.com/users/nvartolomei/events{/privacy}","received_events_url":"https://api.github.com/users/nvartolomei/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":1532016596,"node_id":"MDU6TGFiZWwxNTMyMDE2NTk2","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/memory","name":"memory","color":"e99695","default":false,"description":"When memory usage is higher than expected"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2021-12-10T12:12:29Z","updated_at":"2021-12-11T21:55:27Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"When ClickHouse reads MergeTree data from disk it uses [MergeTreeReaderStream](https://github.com/ClickHouse/ClickHouse/blob/master/src/Storages/MergeTree/MergeTreeReaderStream.cpp) for each column.\r\n\r\nData readers/streams are initialized before any actual data reading is done. MergeTreeReaderStream opens mark files to pre-compute a buffer size as an optimization for small reads.\r\n\r\nWhen [PREWHERE](https://clickhouse.com/docs/en/sql-reference/statements/select/prewhere/) feature is used some columns within some parts can get excluded from reads. In the case that happens, the initialization and marks reads done in MergeTreeReaderStream are thrown away.\r\n\r\nIt is possible to delay that initialization until the marks are actually needed (eg by moving the initilization from the constructor to a method which is called to initialize data_buffer). This improves performance in some edge cases where marks don't fit the cache and PREWHERE is very effective.\r\n\r\nOr, maybe the lazyness can be lifted even higher than MergeTreeReaderStream?\r\n\r\n_behaviour confirmed on 21.8_","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32505/reactions","total_count":3,"+1":3,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32505/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32495","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32495/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32495/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32495/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/32495","id":1076548690,"node_id":"I_kwDOA5dJV85AKtRS","number":32495,"title":"support some form of EXECUTE","user":{"login":"filimonov","id":1549571,"node_id":"MDQ6VXNlcjE1NDk1NzE=","avatar_url":"https://avatars.githubusercontent.com/u/1549571?v=4","gravatar_id":"","url":"https://api.github.com/users/filimonov","html_url":"https://github.com/filimonov","followers_url":"https://api.github.com/users/filimonov/followers","following_url":"https://api.github.com/users/filimonov/following{/other_user}","gists_url":"https://api.github.com/users/filimonov/gists{/gist_id}","starred_url":"https://api.github.com/users/filimonov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/filimonov/subscriptions","organizations_url":"https://api.github.com/users/filimonov/orgs","repos_url":"https://api.github.com/users/filimonov/repos","events_url":"https://api.github.com/users/filimonov/events{/privacy}","received_events_url":"https://api.github.com/users/filimonov/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2021-12-10T08:02:14Z","updated_at":"2021-12-11T21:58:03Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"body":"Usecase: one query generates some query parameters / or even a full query, which can be executed via EXECUTE statement in the same clickhouse session.\r\n\r\nAlternative: generate the query with one clickhouse-client instance and pass the query via pipe to another clickhouse-client instance.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32495/reactions","total_count":1,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":1},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32495/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32488","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32488/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32488/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32488/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/32488","id":1076010953,"node_id":"I_kwDOA5dJV85AIp_J","number":32488,"title":"PROJECTION different quantiles optimization support","user":{"login":"UnamedRus","id":9449405,"node_id":"MDQ6VXNlcjk0NDk0MDU=","avatar_url":"https://avatars.githubusercontent.com/u/9449405?v=4","gravatar_id":"","url":"https://api.github.com/users/UnamedRus","html_url":"https://github.com/UnamedRus","followers_url":"https://api.github.com/users/UnamedRus/followers","following_url":"https://api.github.com/users/UnamedRus/following{/other_user}","gists_url":"https://api.github.com/users/UnamedRus/gists{/gist_id}","starred_url":"https://api.github.com/users/UnamedRus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/UnamedRus/subscriptions","organizations_url":"https://api.github.com/users/UnamedRus/orgs","repos_url":"https://api.github.com/users/UnamedRus/repos","events_url":"https://api.github.com/users/UnamedRus/events{/privacy}","received_events_url":"https://api.github.com/users/UnamedRus/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2021-12-09T20:59:44Z","updated_at":"2021-12-10T07:20:15Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"**Use case**\r\nIn order to use PROJECTION, you need to pass the exact same parameters for quantile.\r\n\r\n\r\n**Describe the solution you'd like**\r\n\r\n```\r\nCREATE TABLE xxxx_proj_quant\r\n(\r\n    `key` UInt32,\r\n    `value` UInt32,\r\n    PROJECTION xxx\r\n    (\r\n        SELECT\r\n            key,\r\n            quantilesExact(0.1, 0.9)(value)\r\n        GROUP BY key\r\n    )\r\n)\r\nENGINE = MergeTree\r\nORDER BY key\r\n\r\nINSERT INTO xxxx_proj_quant SELECT\r\n    number % 10,\r\n    number\r\nFROM numbers(1000000)\r\n\r\nset allow_experimental_projection_optimization=1;\r\n\r\nSELECT\r\n    key,\r\n    quantilesExact(0.1, 0.9)(value)\r\nFROM xxxx_proj_quant\r\nGROUP BY key\r\n\r\n┌─key─┬─quantilesExact(0.1, 0.9)(value)─┐\r\n│   0 │ [100000,900000]                 │\r\n│   4 │ [100004,900004]                 │\r\n│   3 │ [100003,900003]                 │\r\n│   2 │ [100002,900002]                 │\r\n│   5 │ [100005,900005]                 │\r\n│   1 │ [100001,900001]                 │\r\n│   6 │ [100006,900006]                 │\r\n│   7 │ [100007,900007]                 │\r\n│   9 │ [100009,900009]                 │\r\n│   8 │ [100008,900008]                 │\r\n└─────┴─────────────────────────────────┘\r\n\r\n10 rows in set. Elapsed: 0.022 sec.\r\n\r\n\r\nSELECT\r\n    key,\r\n    quantilesExact(0.1, 0.8)(value)\r\nFROM xxxx_proj_quant\r\nGROUP BY key\r\n\r\n┌─key─┬─quantilesExact(0.1, 0.8)(value)─┐\r\n│   0 │ [100000,800000]                 │\r\n│   4 │ [100004,800004]                 │\r\n│   3 │ [100003,800003]                 │\r\n│   2 │ [100002,800002]                 │\r\n│   5 │ [100005,800005]                 │\r\n│   1 │ [100001,800001]                 │\r\n│   6 │ [100006,800006]                 │\r\n│   7 │ [100007,800007]                 │\r\n│   9 │ [100009,800009]                 │\r\n│   8 │ [100008,800008]                 │\r\n└─────┴─────────────────────────────────┘\r\n\r\n10 rows in set. Elapsed: 0.026 sec. Processed 1.00 million rows, 8.00 MB (38.26 million rows/s., 306.07 MB/s.)\r\n\r\n SELECT key, quantilesExact(0.1)(value) FROM xxxx_proj_quant GROUP BY key;\r\n\r\nSELECT\r\n    key,\r\n    quantilesExact(0.1)(value)\r\nFROM xxxx_proj_quant\r\nGROUP BY key\r\n\r\n┌─key─┬─quantilesExact(0.1)(value)─┐\r\n│   0 │ [100000]                   │\r\n│   4 │ [100004]                   │\r\n│   3 │ [100003]                   │\r\n│   2 │ [100002]                   │\r\n│   5 │ [100005]                   │\r\n│   1 │ [100001]                   │\r\n│   6 │ [100006]                   │\r\n│   7 │ [100007]                   │\r\n│   9 │ [100009]                   │\r\n│   8 │ [100008]                   │\r\n└─────┴────────────────────────────┘\r\n\r\n10 rows in set. Elapsed: 0.023 sec. Processed 1.00 million rows, 8.00 MB (43.89 million rows/s., 351.13 MB/s.)\r\n```\r\n\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32488/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32488/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32481","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32481/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32481/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32481/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/32481","id":1075899846,"node_id":"I_kwDOA5dJV85AIO3G","number":32481,"title":"dictGetChildren / dictGetDescendants are very slow and consume high amount of memory","user":{"login":"siradjev","id":10959667,"node_id":"MDQ6VXNlcjEwOTU5NjY3","avatar_url":"https://avatars.githubusercontent.com/u/10959667?v=4","gravatar_id":"","url":"https://api.github.com/users/siradjev","html_url":"https://github.com/siradjev","followers_url":"https://api.github.com/users/siradjev/followers","following_url":"https://api.github.com/users/siradjev/following{/other_user}","gists_url":"https://api.github.com/users/siradjev/gists{/gist_id}","starred_url":"https://api.github.com/users/siradjev/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/siradjev/subscriptions","organizations_url":"https://api.github.com/users/siradjev/orgs","repos_url":"https://api.github.com/users/siradjev/repos","events_url":"https://api.github.com/users/siradjev/events{/privacy}","received_events_url":"https://api.github.com/users/siradjev/received_events","type":"User","site_admin":false},"labels":[{"id":386401510,"node_id":"MDU6TGFiZWwzODY0MDE1MTA=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/question","name":"question","color":"bfdadc","default":true,"description":""},{"id":1365579236,"node_id":"MDU6TGFiZWwxMzY1NTc5MjM2","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/minor","name":"minor","color":"FFF8F8","default":false,"description":"Priority: minor"}],"state":"open","locked":false,"assignee":{"login":"kitaisreal","id":22458333,"node_id":"MDQ6VXNlcjIyNDU4MzMz","avatar_url":"https://avatars.githubusercontent.com/u/22458333?v=4","gravatar_id":"","url":"https://api.github.com/users/kitaisreal","html_url":"https://github.com/kitaisreal","followers_url":"https://api.github.com/users/kitaisreal/followers","following_url":"https://api.github.com/users/kitaisreal/following{/other_user}","gists_url":"https://api.github.com/users/kitaisreal/gists{/gist_id}","starred_url":"https://api.github.com/users/kitaisreal/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kitaisreal/subscriptions","organizations_url":"https://api.github.com/users/kitaisreal/orgs","repos_url":"https://api.github.com/users/kitaisreal/repos","events_url":"https://api.github.com/users/kitaisreal/events{/privacy}","received_events_url":"https://api.github.com/users/kitaisreal/received_events","type":"User","site_admin":false},"assignees":[{"login":"kitaisreal","id":22458333,"node_id":"MDQ6VXNlcjIyNDU4MzMz","avatar_url":"https://avatars.githubusercontent.com/u/22458333?v=4","gravatar_id":"","url":"https://api.github.com/users/kitaisreal","html_url":"https://github.com/kitaisreal","followers_url":"https://api.github.com/users/kitaisreal/followers","following_url":"https://api.github.com/users/kitaisreal/following{/other_user}","gists_url":"https://api.github.com/users/kitaisreal/gists{/gist_id}","starred_url":"https://api.github.com/users/kitaisreal/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kitaisreal/subscriptions","organizations_url":"https://api.github.com/users/kitaisreal/orgs","repos_url":"https://api.github.com/users/kitaisreal/repos","events_url":"https://api.github.com/users/kitaisreal/events{/privacy}","received_events_url":"https://api.github.com/users/kitaisreal/received_events","type":"User","site_admin":false}],"milestone":null,"comments":3,"created_at":"2021-12-09T19:01:44Z","updated_at":"2021-12-24T01:05:29Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"**Describe what's wrong**\r\n\r\ndictGetChildren / dictGetDescendants functions implemented in #22096 operates extremely slow in most of dictionaries of relatively large size (>100k), and consume high amount of memory. \r\n\r\n**Does it reproduce on recent release?**\r\n\r\nYes. 21.11.5.33\r\n\r\n**How to reproduce**\r\n\r\nDictionary creation\r\n```\r\n\r\ndrop table if exists default.hierdictsrc;\r\n\r\ncreate table default.hierdictsrc (parent UInt64, child UInt64) Engine=MergeTree ORDER BY tuple();\r\n\r\ninsert into default.hierdictsrc \r\nwith 80 as breadth\r\nselect parent, arrayJoin(child)+parent*breadth as child from (\r\n\t\tselect arrayJoin(range(0,breadth)) as parent, range(0,breadth) as child\r\n)\r\nUNION ALL\r\nwith 80 as breadth\r\nselect parent, arrayJoin(child)+parent*breadth as child from (\r\n\t\tselect arrayJoin(range(breadth,breadth*breadth)) as parent, range(0,breadth) as child\r\n)\r\nUNION ALL\r\nwith 80 as breadth\r\nselect parent, arrayJoin(child)+parent*breadth as child from (\r\n\t\tselect arrayJoin(range(breadth*breadth,breadth*breadth*breadth)) as parent, range(0,breadth) as child\r\n)\r\n;\r\n\r\nselect count(*) from default.hierdictsrc ;\r\ndrop dictionary if exists default.hierdict;\r\n\r\nCREATE DICTIONARY default.hierdict\r\n(\r\n    `child` UInt64,\r\n    `parent` UInt64 HIERARCHICAL\r\n)\r\nPRIMARY KEY child\r\nSOURCE(CLICKHOUSE(HOST 'localhost' PORT 9000 USER 'default' DB 'default' TABLE 'hierdictsrc'))\r\nLIFETIME(MIN 300 MAX 86400)\r\nLAYOUT(HASHED());\r\n\r\nsystem reload dictionary default.hierdict;\r\nselect * from system.dictionaries d where database='default';\r\n\r\n```\r\n\r\nQueries to check.\r\nSimple query to get direct children of a single element consumes 2GB RAM and 10 sec. \r\n \r\n```\r\nSELECT dictGetDescendants('default.hierdict', toUInt64(1))\r\nFORMAT `Null`\r\n\r\nQuery id: 6e982f9a-9665-4caf-8f6e-0576d9a752d9\r\n\r\n[V30LC-INCLKHSE5.pw.local] 2021.12.09 20:29:34.764536 [ 11723 ] {6e982f9a-9665-4caf-8f6e-0576d9a752d9} <Debug> executeQuery: (from [::1]:59362) SELECT dictGetDescendants('default.hierdict', toUInt64(1)) FORMAT `Null`;\r\n[V30LC-INCLKHSE5.pw.local] 2021.12.09 20:29:34.764837 [ 11723 ] {6e982f9a-9665-4caf-8f6e-0576d9a752d9} <Trace> ContextAccess (default): Access granted: dictGet ON default.hierdict\r\n[V30LC-INCLKHSE5.pw.local] 2021.12.09 20:29:35.588383 [ 11723 ] {6e982f9a-9665-4caf-8f6e-0576d9a752d9} <Debug> MemoryTracker: Current memory usage (for query): 1.00 GiB.\r\n[V30LC-INCLKHSE5.pw.local] 2021.12.09 20:29:44.312905 [ 11723 ] {6e982f9a-9665-4caf-8f6e-0576d9a752d9} <Trace> ContextAccess (default): Access granted: SELECT(dummy) ON system.one\r\n[V30LC-INCLKHSE5.pw.local] 2021.12.09 20:29:44.326528 [ 11723 ] {6e982f9a-9665-4caf-8f6e-0576d9a752d9} <Trace> InterpreterSelectQuery: FetchColumns -> Complete\r\n[V30LC-INCLKHSE5.pw.local] 2021.12.09 20:29:44.651035 [ 11723 ] {6e982f9a-9665-4caf-8f6e-0576d9a752d9} <Information> executeQuery: Read 1 rows, 1.00 B in 9.886447463 sec., 0 rows/sec., 0.10 B/sec.\r\n[V30LC-INCLKHSE5.pw.local] 2021.12.09 20:29:44.651093 [ 11723 ] {6e982f9a-9665-4caf-8f6e-0576d9a752d9} <Debug> MemoryTracker: Peak memory usage (for query): 1.99 GiB.\r\nOk.\r\n\r\n0 rows in set. Elapsed: 9.887 sec.\r\n\r\n```\r\n\r\nIt gets much worse if there are more levels in the array. It goes out of memory, moreover this query is not possible to cancel. \r\nSimilar issue with dictGetChildren. \r\n\r\n\r\nFor comparison - Reverse query using complex transforms but using dictGetHierarchy uses 140MB and 2.5 sec: \r\n```\r\nSELECT DISTINCT arrayJoin(hier) AS descendants\r\nFROM\r\n(\r\n    SELECT dictGetHierarchy('default.hierdict', toUInt64(child)) AS hier\r\n    FROM default.hierdictsrc\r\n    WHERE (lvl = 3) AND has(hier, 1)\r\n)\r\nWHERE descendants != 1\r\nFORMAT `Null`\r\n\r\nQuery id: 2b787507-11b6-4066-82eb-6ea6e984c842\r\n\r\n[V30LC-INCLKHSE5.pw.local] 2021.12.09 20:27:38.007316 [ 11723 ] {2b787507-11b6-4066-82eb-6ea6e984c842} <Debug> executeQuery: (from [::1]:59362) select distinct arrayJoin(hier) descendants from ( select dictGetHierarchy('default.hierdict',toUInt64(child)) hier from default.hierdictsrc where lvl=3 and has(hier,1) ) where descendants!=1 Format Null;\r\n[V30LC-INCLKHSE5.pw.local] 2021.12.09 20:27:38.007838 [ 11723 ] {2b787507-11b6-4066-82eb-6ea6e984c842} <Debug> InterpreterSelectQuery: MergeTreeWhereOptimizer: condition \"lvl = 3\" moved to PREWHERE\r\n[V30LC-INCLKHSE5.pw.local] 2021.12.09 20:27:38.008073 [ 11723 ] {2b787507-11b6-4066-82eb-6ea6e984c842} <Trace> ContextAccess (default): Access granted: SELECT(child, lvl) ON default.hierdictsrc\r\n[V30LC-INCLKHSE5.pw.local] 2021.12.09 20:27:38.008312 [ 11723 ] {2b787507-11b6-4066-82eb-6ea6e984c842} <Debug> InterpreterSelectQuery: MergeTreeWhereOptimizer: condition \"lvl = 3\" moved to PREWHERE\r\n[V30LC-INCLKHSE5.pw.local] 2021.12.09 20:27:38.008478 [ 11723 ] {2b787507-11b6-4066-82eb-6ea6e984c842} <Trace> ContextAccess (default): Access granted: SELECT(child, lvl) ON default.hierdictsrc\r\n[V30LC-INCLKHSE5.pw.local] 2021.12.09 20:27:38.008648 [ 11723 ] {2b787507-11b6-4066-82eb-6ea6e984c842} <Trace> InterpreterSelectQuery: FetchColumns -> Complete\r\n[V30LC-INCLKHSE5.pw.local] 2021.12.09 20:27:38.008691 [ 11723 ] {2b787507-11b6-4066-82eb-6ea6e984c842} <Trace> InterpreterSelectQuery: FetchColumns -> Complete\r\n[V30LC-INCLKHSE5.pw.local] 2021.12.09 20:27:38.008950 [ 11723 ] {2b787507-11b6-4066-82eb-6ea6e984c842} <Debug> default.hierdictsrc (SelectExecutor): Key condition: unknown, unknown, and, unknown, and\r\n[V30LC-INCLKHSE5.pw.local] 2021.12.09 20:27:38.009189 [ 11723 ] {2b787507-11b6-4066-82eb-6ea6e984c842} <Debug> default.hierdictsrc (SelectExecutor): Selected 2/2 parts by partition key, 2 parts by primary key, 5001/5001 marks by primary key, 5001 marks to read from 2 ranges\r\n[V30LC-INCLKHSE5.pw.local] 2021.12.09 20:27:38.009267 [ 11723 ] {2b787507-11b6-4066-82eb-6ea6e984c842} <Debug> default.hierdictsrc (SelectExecutor): Reading approx. 40960000 rows with 8 streams\r\n[V30LC-INCLKHSE5.pw.local] 2021.12.09 20:27:38.011944 [ 11877 ] {2b787507-11b6-4066-82eb-6ea6e984c842} <Trace> ContextAccess (default): Access granted: dictGet ON default.hierdict\r\n[V30LC-INCLKHSE5.pw.local] 2021.12.09 20:27:40.179778 [ 11723 ] {2b787507-11b6-4066-82eb-6ea6e984c842} <Information> executeQuery: Read 40960000 rows, 347.66 MiB in 2.172412619 sec., 18854613 rows/sec., 160.03 MiB/sec.\r\n[V30LC-INCLKHSE5.pw.local] 2021.12.09 20:27:40.179832 [ 11723 ] {2b787507-11b6-4066-82eb-6ea6e984c842} <Debug> MemoryTracker: Peak memory usage (for query): 127.83 MiB.\r\nOk.\r\n\r\n0 rows in set. Elapsed: 2.173 sec. Processed 40.96 million rows, 364.54 MB (18.85 million rows/s., 167.73 MB/s.)\r\n```\r\n\r\n\r\n**Expected behavior**\r\n\r\nPerformance was expected not to be degrading as it grows. \r\n\r\n\r\n\r\n**Additional context**\r\n\r\nThere is a also a regression about sparse hashed layout with hierarchical dictionary that may be related to this implementation. Separate ticket was opened: #32480 \r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32481/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32481/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32474","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32474/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32474/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32474/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/32474","id":1075830360,"node_id":"I_kwDOA5dJV85AH95Y","number":32474,"title":"AggregationCommon.h:97:35: runtime error: downcast of address which does not point to an object of type ColumnVectorHelper","user":{"login":"tavplubix","id":14847450,"node_id":"MDQ6VXNlcjE0ODQ3NDUw","avatar_url":"https://avatars.githubusercontent.com/u/14847450?v=4","gravatar_id":"","url":"https://api.github.com/users/tavplubix","html_url":"https://github.com/tavplubix","followers_url":"https://api.github.com/users/tavplubix/followers","following_url":"https://api.github.com/users/tavplubix/following{/other_user}","gists_url":"https://api.github.com/users/tavplubix/gists{/gist_id}","starred_url":"https://api.github.com/users/tavplubix/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tavplubix/subscriptions","organizations_url":"https://api.github.com/users/tavplubix/orgs","repos_url":"https://api.github.com/users/tavplubix/repos","events_url":"https://api.github.com/users/tavplubix/events{/privacy}","received_events_url":"https://api.github.com/users/tavplubix/received_events","type":"User","site_admin":false},"labels":[{"id":1955634273,"node_id":"MDU6TGFiZWwxOTU1NjM0Mjcz","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/testing","name":"testing","color":"c9a224","default":false,"description":"Special issue with list of bugs found by CI"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-12-09T17:36:06Z","updated_at":"2021-12-09T17:36:06Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"https://s3.amazonaws.com/clickhouse-test-reports/0/5b06e30ea2cb7d5abdfec2ae1bbaba0603aed09c/fuzzer_astfuzzerubsan,actions//report.html\r\n\r\n\r\n```\r\n2021.12.09 19:08:59.387460 [ 154 ] {fc5c622d-bb4a-4fb4-8e80-bc9dbc9a20c6} <Debug> executeQuery: (from [::ffff:127.0.0.1]:60978) SELECT 2., * FROM (SELECT 1024, 256 INTERSECT SELECT 100 AND inf, 256)\r\n2021.12.09 19:08:59.387670 [ 154 ] {fc5c622d-bb4a-4fb4-8e80-bc9dbc9a20c6} <Trace> ContextAccess (default): Access granted: SELECT(dummy) ON system.one\r\n2021.12.09 19:08:59.387839 [ 154 ] {fc5c622d-bb4a-4fb4-8e80-bc9dbc9a20c6} <Trace> ContextAccess (default): Access granted: SELECT(dummy) ON system.one\r\n2021.12.09 19:08:59.388012 [ 154 ] {fc5c622d-bb4a-4fb4-8e80-bc9dbc9a20c6} <Trace> ContextAccess (default): Access granted: SELECT(dummy) ON system.one\r\n2021.12.09 19:08:59.388167 [ 154 ] {fc5c622d-bb4a-4fb4-8e80-bc9dbc9a20c6} <Trace> ContextAccess (default): Access granted: SELECT(dummy) ON system.one\r\n2021.12.09 19:08:59.388334 [ 154 ] {fc5c622d-bb4a-4fb4-8e80-bc9dbc9a20c6} <Trace> InterpreterSelectQuery: FetchColumns -> Complete\r\n2021.12.09 19:08:59.388407 [ 154 ] {fc5c622d-bb4a-4fb4-8e80-bc9dbc9a20c6} <Trace> InterpreterSelectQuery: FetchColumns -> Complete\r\n2021.12.09 19:08:59.388494 [ 154 ] {fc5c622d-bb4a-4fb4-8e80-bc9dbc9a20c6} <Trace> InterpreterSelectQuery: FetchColumns -> Complete\r\n../src/Interpreters/AggregationCommon.h:97:35: runtime error: downcast of address 0x7f848038f4a0 which does not point to an object of type 'const DB::ColumnVectorHelper'\r\n0x7f848038f4a0: note: object is of type 'DB::ColumnConst'\r\n 00 00 00 00  10 e0 58 09 00 00 00 00  01 00 00 00 00 00 00 00  80 0b a5 f2 83 7f 00 00  01 00 00 00\r\n              ^~~~~~~~~~~~~~~~~~~~~~~\r\n              vptr for 'DB::ColumnConst'\r\n2021.12.09 19:09:00.386462 [ 179 ] {} <Trace> SystemLog (system.asynchronous_metric_log): Flushing system log, 1442 entries to flush up to offset 307464\r\n2021.12.09 19:09:00.388084 [ 179 ] {} <Debug> DiskLocal: Reserving 1.00 MiB on disk `default`, having unreserved 88.39 GiB.\r\n2021.12.09 19:09:00.388855 [ 179 ] {} <Trace> system.asynchronous_metric_log (746a6d9d-b6b5-4d4e-b46a-6d9db6b59d4e): Renaming temporary part tmp_insert_202112_213_213_0 to 202112_213_213_0.\r\n2021.12.09 19:09:00.389025 [ 282 ] {} <Debug> system.asynchronous_metric_log (746a6d9d-b6b5-4d4e-b46a-6d9db6b59d4e) (MergerMutator): Selected 2 parts from 202112_1_208_77 to 202112_209_209_0\r\n2021.12.09 19:09:00.389061 [ 179 ] {} <Trace> SystemLog (system.asynchronous_metric_log): Flushed system log up to offset 307464\r\n2021.12.09 19:09:00.389084 [ 282 ] {} <Debug> DiskLocal: Reserving 1.00 MiB on disk `default`, having unreserved 88.39 GiB.\r\n2021.12.09 19:09:00.389229 [ 114 ] {746a6d9d-b6b5-4d4e-b46a-6d9db6b59d4e::202112_1_209_78} <Debug> MergeTask::PrepareStage: Merging 2 parts: from 202112_1_208_77 to 202112_209_209_0 into Compact\r\n2021.12.09 19:09:00.389341 [ 114 ] {746a6d9d-b6b5-4d4e-b46a-6d9db6b59d4e::202112_1_209_78} <Debug> MergeTask::PrepareStage: Selected MergeAlgorithm: Horizontal\r\n2021.12.09 19:09:00.389440 [ 114 ] {746a6d9d-b6b5-4d4e-b46a-6d9db6b59d4e::202112_1_209_78} <Debug> MergeTreeSequentialSource: Reading 36 marks from part 202112_1_208_77, total 300254 rows starting from the beginning of the part\r\n2021.12.09 19:09:00.389642 [ 114 ] {746a6d9d-b6b5-4d4e-b46a-6d9db6b59d4e::202112_1_209_78} <Debug> MergeTreeSequentialSource: Reading 2 marks from part 202112_209_209_0, total 1442 rows starting from the beginning of the part\r\n2021.12.09 19:09:00.418689 [ 115 ] {746a6d9d-b6b5-4d4e-b46a-6d9db6b59d4e::202112_1_209_78} <Debug> MergeTask::MergeProjectionsStage: Merge sorted 301696 rows, containing 5 columns (5 merged, 0 gathered) in 0.029498074 sec., 10227650.795099368 rows/sec., 230.88 MiB/sec.\r\n2021.12.09 19:09:00.420247 [ 115 ] {746a6d9d-b6b5-4d4e-b46a-6d9db6b59d4e::202112_1_209_78} <Trace> system.asynchronous_metric_log (746a6d9d-b6b5-4d4e-b46a-6d9db6b59d4e): Renaming temporary part tmp_merge_202112_1_209_78 to 202112_1_209_78.\r\n2021.12.09 19:09:00.420355 [ 115 ] {746a6d9d-b6b5-4d4e-b46a-6d9db6b59d4e::202112_1_209_78} <Trace> system.asynchronous_metric_log (746a6d9d-b6b5-4d4e-b46a-6d9db6b59d4e) (MergerMutator): Merged 2 parts: from 202112_1_208_77 to 202112_209_209_0\r\n2021.12.09 19:09:00.420443 [ 115 ] {} <Debug> MemoryTracker: Peak memory usage Mutate/Merge: 4.00 MiB.\r\n    #0 0x1ad98ebf in void DB::fillFixedBatch<unsigned short, wide::integer<128ul, unsigned int> >(unsigned long, std::__1::vector<DB::IColumn const*, std::__1::allocator<DB::IColumn const*> > const&, std::__1::vector<unsigned long, std::__1::allocator<unsigned long> > const&, DB::PODArray<wide::integer<128ul, unsigned int>, 4096ul, Allocator<false, false>, 15ul, 16ul>&, unsigned long&) (/workspace/clickhouse+0x1ad98ebf)\r\n    #1 0x1ad981d1 in void DB::packFixedBatch<wide::integer<128ul, unsigned int> >(unsigned long, std::__1::vector<DB::IColumn const*, std::__1::allocator<DB::IColumn const*> > const&, std::__1::vector<unsigned long, std::__1::allocator<unsigned long> > const&, DB::PODArray<wide::integer<128ul, unsigned int>, 4096ul, Allocator<false, false>, 15ul, 16ul>&) (/workspace/clickhouse+0x1ad981d1)\r\n    #2 0x1e4828e0 in DB::ColumnsHashing::HashMethodKeysFixed<wide::integer<128ul, unsigned int>, wide::integer<128ul, unsigned int>, void, false, false, true, false>::HashMethodKeysFixed(std::__1::vector<DB::IColumn const*, std::__1::allocator<DB::IColumn const*> > const&, std::__1::vector<unsigned long, std::__1::allocator<unsigned long> > const&, std::__1::shared_ptr<DB::ColumnsHashing::HashMethodContext> const&) obj-x86_64-linux-gnu/../src/Common/ColumnsHashing.h:524:13\r\n    #3 0x1f846161 in void DB::IntersectOrExceptTransform::addToSet<DB::SetMethodKeysFixed<HashSetTable<wide::integer<128ul, unsigned int>, HashTableCell<wide::integer<128ul, unsigned int>, UInt128HashCRC32, HashTableNoState>, UInt128HashCRC32, HashTableGrower<8ul>, Allocator<true, true> >, false> >(DB::SetMethodKeysFixed<HashSetTable<wide::integer<128ul, unsigned int>, HashTableCell<wide::integer<128ul, unsigned int>, UInt128HashCRC32, HashTableNoState>, UInt128HashCRC32, HashTableGrower<8ul>, Allocator<true, true> >, false>&, std::__1::vector<DB::IColumn const*, std::__1::allocator<DB::IColumn const*> > const&, unsigned long, DB::SetVariantsTemplate<DB::NonClearableSet>&) const obj-x86_64-linux-gnu/../src/Processors/Transforms/IntersectOrExceptTransform.cpp:97:28\r\n    #4 0x1f842ca9 in DB::IntersectOrExceptTransform::accumulate(DB::Chunk) obj-x86_64-linux-gnu/../src/Processors/Transforms/IntersectOrExceptTransform.cpp:148:13\r\n    #5 0x1f8423ed in DB::IntersectOrExceptTransform::work() obj-x86_64-linux-gnu/../src/Processors/Transforms/IntersectOrExceptTransform.cpp:82:9\r\n    #6 0x1f404558 in DB::executeJob(DB::IProcessor*) obj-x86_64-linux-gnu/../src/Processors/Executors/ExecutionThreadContext.cpp:45:20\r\n    #7 0x1f4043e7 in DB::ExecutionThreadContext::executeTask() obj-x86_64-linux-gnu/../src/Processors/Executors/ExecutionThreadContext.cpp:63:9\r\n    #8 0x1f3f66c0 in DB::PipelineExecutor::executeStepImpl(unsigned long, std::__1::atomic<bool>*) obj-x86_64-linux-gnu/../src/Processors/Executors/PipelineExecutor.cpp:213:26\r\n    #9 0x1f3f7947 in DB::PipelineExecutor::executeSingleThread(unsigned long) obj-x86_64-linux-gnu/../src/Processors/Executors/PipelineExecutor.cpp:178:5\r\n    #10 0x1f3f7947 in DB::PipelineExecutor::executeImpl(unsigned long)::$_1::operator()() const obj-x86_64-linux-gnu/../src/Processors/Executors/PipelineExecutor.cpp:311:21\r\n    #11 0x1f3f7947 in decltype(std::__1::forward<DB::PipelineExecutor::executeImpl(unsigned long)::$_1&>(fp)()) std::__1::__invoke_constexpr<DB::PipelineExecutor::executeImpl(unsigned long)::$_1&>(DB::PipelineExecutor::executeImpl(unsigned long)::$_1&) obj-x86_64-linux-gnu/../contrib/libcxx/include/type_traits:3682:1\r\n    #12 0x1f3f7822 in decltype(auto) std::__1::__apply_tuple_impl<DB::PipelineExecutor::executeImpl(unsigned long)::$_1&, std::__1::tuple<>&>(DB::PipelineExecutor::executeImpl(unsigned long)::$_1&, std::__1::tuple<>&, std::__1::__tuple_indices<>) obj-x86_64-linux-gnu/../contrib/libcxx/include/tuple:1415:1\r\n    #13 0x1f3f7822 in decltype(auto) std::__1::apply<DB::PipelineExecutor::executeImpl(unsigned long)::$_1&, std::__1::tuple<>&>(DB::PipelineExecutor::executeImpl(unsigned long)::$_1&, std::__1::tuple<>&) obj-x86_64-linux-gnu/../contrib/libcxx/include/tuple:1424:1\r\n    #14 0x1f3f7822 in ThreadFromGlobalPool::ThreadFromGlobalPool<DB::PipelineExecutor::executeImpl(unsigned long)::$_1>(DB::PipelineExecutor::executeImpl(unsigned long)::$_1&&)::'lambda'()::operator()() obj-x86_64-linux-gnu/../src/Common/ThreadPool.h:188:13\r\n    #15 0x1f3f7822 in decltype(std::__1::forward<DB::PipelineExecutor::executeImpl(unsigned long)::$_1>(fp)()) std::__1::__invoke<ThreadFromGlobalPool::ThreadFromGlobalPool<DB::PipelineExecutor::executeImpl(unsigned long)::$_1>(DB::PipelineExecutor::executeImpl(unsigned long)::$_1&&)::'lambda'()&>(DB::PipelineExecutor::executeImpl(unsigned long)::$_1&&) obj-x86_64-linux-gnu/../contrib/libcxx/include/type_traits:3676:1\r\n    #16 0xde8bd19 in std::__1::__function::__policy_func<void ()>::operator()() const obj-x86_64-linux-gnu/../contrib/libcxx/include/functional:2221:16\r\n    #17 0xde8bd19 in std::__1::function<void ()>::operator()() const obj-x86_64-linux-gnu/../contrib/libcxx/include/functional:2560:12\r\n    #18 0xde8bd19 in ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) obj-x86_64-linux-gnu/../src/Common/ThreadPool.cpp:274:17\r\n    #19 0xde8e721 in void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()::operator()() const obj-x86_64-linux-gnu/../src/Common/ThreadPool.cpp:139:73\r\n    #20 0xde8e721 in decltype(std::__1::forward<void>(fp)()) std::__1::__invoke<void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>(void&&) obj-x86_64-linux-gnu/../contrib/libcxx/include/type_traits:3676:1\r\n    #21 0xde8e721 in void std::__1::__thread_execute<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>(std::__1::tuple<void, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>&, std::__1::__tuple_indices<>) obj-x86_64-linux-gnu/../contrib/libcxx/include/thread:280:5\r\n    #22 0xde8e721 in void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()> >(void*) obj-x86_64-linux-gnu/../contrib/libcxx/include/thread:291:5\r\n    #23 0x7f85ec463608 in start_thread /build/glibc-eX1tMB/glibc-2.31/nptl/pthread_create.c:477:8\r\n    #24 0x7f85ec38a292 in __clone /build/glibc-eX1tMB/glibc-2.31/misc/../sysdeps/unix/sysv/linux/x86_64/clone.S:95\r\n\r\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/Interpreters/AggregationCommon.h:97:35 in \r\n2021.12.09 19:09:00.694332 [ 107 ] {} <Trace> BaseDaemon: Received signal -3\r\n2021.12.09 19:09:00.694461 [ 352 ] {} <Fatal> BaseDaemon: ########################################\r\n2021.12.09 19:09:00.694534 [ 352 ] {} <Fatal> BaseDaemon: (version 21.13.1.44, build id: E2243E56E70863BB) (from thread 328) (query_id: fc5c622d-bb4a-4fb4-8e80-bc9dbc9a20c6) Received signal Unknown signal (-3)\r\n2021.12.09 19:09:00.694559 [ 352 ] {} <Fatal> BaseDaemon: Sanitizer trap.\r\n2021.12.09 19:09:00.694614 [ 352 ] {} <Fatal> BaseDaemon: Stack trace: 0xde5ceaa 0x1d37d991 0xde1d8d6 0xde2f619 0x1ad98ec0 0x1ad981d2 0x1e4828e1 0x1f846162 0x1f842caa 0x1f8423ee 0x1f404559 0x1f4043e8 0x1f3f66c1 0x1f3f7948 0x1f3f7823 0xde8bd1a 0xde8e722 0x7f85ec463609 0x7f85ec38a293\r\n2021.12.09 19:09:00.702629 [ 352 ] {} <Fatal> BaseDaemon: 0.1. inlined from ./obj-x86_64-linux-gnu/../src/Common/StackTrace.cpp:305: StackTrace::tryCapture()\r\n2021.12.09 19:09:00.702653 [ 352 ] {} <Fatal> BaseDaemon: 0. ../src/Common/StackTrace.cpp:266: StackTrace::StackTrace() @ 0xde5ceaa in /workspace/clickhouse\r\n2021.12.09 19:09:00.720028 [ 352 ] {} <Fatal> BaseDaemon: 1. ./obj-x86_64-linux-gnu/../base/daemon/BaseDaemon.cpp:391: sanitizerDeathCallback() @ 0x1d37d991 in /workspace/clickhouse\r\n2021.12.09 19:09:01.000105 [ 314 ] {} <Trace> AsynchronousMetrics: MemoryTracking: was 3.52 GiB, peak 9.57 GiB, will set to 3.58 GiB (RSS), difference: 71.23 MiB\r\n2021.12.09 19:09:01.500850 [ 352 ] {} <Fatal> BaseDaemon: 2. __sanitizer::Die() @ 0xde1d8d6 in /workspace/clickhouse\r\n2021.12.09 19:09:01.761253 [ 175 ] {} <Trace> SystemLog (system.trace_log): Flushing system log, 56 entries to flush up to offset 16247\r\n2021.12.09 19:09:01.762261 [ 175 ] {} <Debug> DiskLocal: Reserving 1.00 MiB on disk `default`, having unreserved 88.39 GiB.\r\n2021.12.09 19:09:01.762942 [ 175 ] {} <Trace> system.trace_log (41464490-b3a3-4132-8146-4490b3a35132): Renaming temporary part tmp_insert_202112_198_198_0 to 202112_198_198_0.\r\n2021.12.09 19:09:01.763152 [ 175 ] {} <Trace> SystemLog (system.trace_log): Flushed system log up to offset 16247\r\n2021.12.09 19:09:02.000100 [ 314 ] {} <Trace> AsynchronousMetrics: MemoryTracking: was 3.58 GiB, peak 9.57 GiB, will set to 3.84 GiB (RSS), difference: 264.16 MiB\r\n2021.12.09 19:09:02.267214 [ 352 ] {} <Fatal> BaseDaemon: 3. ? @ 0xde2f619 in /workspace/clickhouse\r\n2021.12.09 19:09:03.034073 [ 352 ] {} <Fatal> BaseDaemon: 4. void DB::fillFixedBatch<unsigned short, wide::integer<128ul, unsigned int> >(unsigned long, std::__1::vector<DB::IColumn const*, std::__1::allocator<DB::IColumn const*> > const&, std::__1::vector<unsigned long, std::__1::allocator<unsigned long> > const&, DB::PODArray<wide::integer<128ul, unsigned int>, 4096ul, Allocator<false, false>, 15ul, 16ul>&, unsigned long&) @ 0x1ad98ec0 in /workspace/clickhouse\r\n2021.12.09 19:09:03.170738 [ 173 ] {} <Trace> SystemLog (system.query_thread_log): Flushing system log, 866 entries to flush up to offset 142134\r\n2021.12.09 19:09:03.178071 [ 173 ] {} <Debug> DiskLocal: Reserving 1.00 MiB on disk `default`, having unreserved 88.39 GiB.\r\n2021.12.09 19:09:03.180819 [ 173 ] {} <Trace> system.query_thread_log (dd67b783-de12-49b6-9d67-b783de12e9b6): Renaming temporary part tmp_insert_202112_163_163_0 to 202112_163_163_0.\r\n2021.12.09 19:09:03.181261 [ 173 ] {} <Trace> SystemLog (system.query_thread_log): Flushed system log up to offset 142134\r\n2021.12.09 19:09:03.729417 [ 143 ] {} <Trace> system.trace_log (41464490-b3a3-4132-8146-4490b3a35132): Found 2 old parts to remove.\r\n2021.12.09 19:09:03.729457 [ 143 ] {} <Debug> system.trace_log (41464490-b3a3-4132-8146-4490b3a35132): Removing part from filesystem 202112_1_130_32\r\n2021.12.09 19:09:03.729736 [ 143 ] {} <Debug> system.trace_log (41464490-b3a3-4132-8146-4490b3a35132): Removing part from filesystem 202112_131_131_0\r\n2021.12.09 19:09:03.801282 [ 352 ] {} <Fatal> BaseDaemon: 5. void DB::packFixedBatch<wide::integer<128ul, unsigned int> >(unsigned long, std::__1::vector<DB::IColumn const*, std::__1::allocator<DB::IColumn const*> > const&, std::__1::vector<unsigned long, std::__1::allocator<unsigned long> > const&, DB::PODArray<wide::integer<128ul, unsigned int>, 4096ul, Allocator<false, false>, 15ul, 16ul>&) @ 0x1ad981d2 in /workspace/clickhouse\r\n2021.12.09 19:09:03.842168 [ 352 ] {} <Fatal> BaseDaemon: 6. ./obj-x86_64-linux-gnu/../src/Common/ColumnsHashing.h:524: DB::ColumnsHashing::HashMethodKeysFixed<wide::integer<128ul, unsigned int>, wide::integer<128ul, unsigned int>, void, false, false, true, false>::HashMethodKeysFixed(std::__1::vector<DB::IColumn const*, std::__1::allocator<DB::IColumn const*> > const&, std::__1::vector<unsigned long, std::__1::allocator<unsigned long> > const&, std::__1::shared_ptr<DB::ColumnsHashing::HashMethodContext> const&) @ 0x1e4828e1 in /workspace/clickhouse\r\n2021.12.09 19:09:03.862989 [ 352 ] {} <Fatal> BaseDaemon: 7. ./obj-x86_64-linux-gnu/../src/Processors/Transforms/IntersectOrExceptTransform.cpp:0: void DB::IntersectOrExceptTransform::addToSet<DB::SetMethodKeysFixed<HashSetTable<wide::integer<128ul, unsigned int>, HashTableCell<wide::integer<128ul, unsigned int>, UInt128HashCRC32, HashTableNoState>, UInt128HashCRC32, HashTableGrower<8ul>, Allocator<true, true> >, false> >(DB::SetMethodKeysFixed<HashSetTable<wide::integer<128ul, unsigned int>, HashTableCell<wide::integer<128ul, unsigned int>, UInt128HashCRC32, HashTableNoState>, UInt128HashCRC32, HashTableGrower<8ul>, Allocator<true, true> >, false>&, std::__1::vector<DB::IColumn const*, std::__1::allocator<DB::IColumn const*> > const&, unsigned long, DB::SetVariantsTemplate<DB::NonClearableSet>&) const @ 0x1f846162 in /workspace/clickhouse\r\n2021.12.09 19:09:03.882587 [ 352 ] {} <Fatal> BaseDaemon: 8. ./obj-x86_64-linux-gnu/../src/Processors/Transforms/IntersectOrExceptTransform.cpp:148: DB::IntersectOrExceptTransform::accumulate(DB::Chunk) @ 0x1f842caa in /workspace/clickhouse\r\n2021.12.09 19:09:03.902041 [ 352 ] {} <Fatal> BaseDaemon: 9.1. inlined from ./obj-x86_64-linux-gnu/../src/Processors/Chunk.h:32: ~Chunk\r\n2021.12.09 19:09:03.902070 [ 352 ] {} <Fatal> BaseDaemon: 9. ../src/Processors/Transforms/IntersectOrExceptTransform.cpp:82: DB::IntersectOrExceptTransform::work() @ 0x1f8423ee in /workspace/clickhouse\r\n2021.12.09 19:09:03.907724 [ 352 ] {} <Fatal> BaseDaemon: 10. ./obj-x86_64-linux-gnu/../src/Processors/Executors/ExecutionThreadContext.cpp:53: DB::executeJob(DB::IProcessor*) @ 0x1f404559 in /workspace/clickhouse\r\n2021.12.09 19:09:03.912849 [ 352 ] {} <Fatal> BaseDaemon: 11. ./obj-x86_64-linux-gnu/../src/Processors/Executors/ExecutionThreadContext.cpp:65: DB::ExecutionThreadContext::executeTask() @ 0x1f4043e8 in /workspace/clickhouse\r\n2021.12.09 19:09:03.927555 [ 352 ] {} <Fatal> BaseDaemon: 12. ./obj-x86_64-linux-gnu/../src/Processors/Executors/PipelineExecutor.cpp:213: DB::PipelineExecutor::executeStepImpl(unsigned long, std::__1::atomic<bool>*) @ 0x1f3f66c1 in /workspace/clickhouse\r\n2021.12.09 19:09:03.943592 [ 352 ] {} <Fatal> BaseDaemon: 13.1. inlined from ./obj-x86_64-linux-gnu/../contrib/libcxx/include/memory:2851: std::__1::shared_ptr<DB::ThreadGroupStatus>::operator bool() const\r\n2021.12.09 19:09:03.943618 [ 352 ] {} <Fatal> BaseDaemon: 13.2. inlined from ../src/Processors/Executors/PipelineExecutor.cpp:304: operator()\r\n2021.12.09 19:09:03.943636 [ 352 ] {} <Fatal> BaseDaemon: 13.3. inlined from ../base/base/../base/scope_guard.h:94: basic_scope_guard<DB::PipelineExecutor::executeImpl(unsigned long)::$_1::operator()() const::'lambda'()>::invoke()\r\n2021.12.09 19:09:03.943669 [ 352 ] {} <Fatal> BaseDaemon: 13.4. inlined from ../base/base/../base/scope_guard.h:44: ~basic_scope_guard\r\n2021.12.09 19:09:03.943706 [ 352 ] {} <Fatal> BaseDaemon: 13.5. inlined from ../src/Processors/Executors/PipelineExecutor.cpp:319: operator()\r\n2021.12.09 19:09:03.943743 [ 352 ] {} <Fatal> BaseDaemon: 13. ../contrib/libcxx/include/type_traits:3682: decltype(std::__1::forward<DB::PipelineExecutor::executeImpl(unsigned long)::$_1&>(fp)()) std::__1::__invoke_constexpr<DB::PipelineExecutor::executeImpl(unsigned long)::$_1&>(DB::PipelineExecutor::executeImpl(unsigned long)::$_1&) @ 0x1f3f7948 in /workspace/clickhouse\r\n2021.12.09 19:09:03.959563 [ 352 ] {} <Fatal> BaseDaemon: 14.1. inlined from ./obj-x86_64-linux-gnu/../contrib/libcxx/include/tuple:0: operator()\r\n2021.12.09 19:09:03.959587 [ 352 ] {} <Fatal> BaseDaemon: 14. ../contrib/libcxx/include/type_traits:3676: decltype(std::__1::forward<DB::PipelineExecutor::executeImpl(unsigned long)::$_1>(fp)()) std::__1::__invoke<ThreadFromGlobalPool::ThreadFromGlobalPool<DB::PipelineExecutor::executeImpl(unsigned long)::$_1>(DB::PipelineExecutor::executeImpl(unsigned long)::$_1&&)::'lambda'()&>(DB::PipelineExecutor::executeImpl(unsigned long)::$_1&&) @ 0x1f3f7823 in /workspace/clickhouse\r\n2021.12.09 19:09:03.969359 [ 352 ] {} <Fatal> BaseDaemon: 15.1. inlined from ./obj-x86_64-linux-gnu/../contrib/libcxx/include/functional:2533: std::__1::function<void ()>::operator=(std::nullptr_t)\r\n2021.12.09 19:09:03.969379 [ 352 ] {} <Fatal> BaseDaemon: 15. ../src/Common/ThreadPool.cpp:277: ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0xde8bd1a in /workspace/clickhouse\r\n2021.12.09 19:09:03.980747 [ 352 ] {} <Fatal> BaseDaemon: 16. ./obj-x86_64-linux-gnu/../src/Common/ThreadPool.cpp:0: void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()> >(void*) @ 0xde8e722 in /workspace/clickhouse\r\n2021.12.09 19:09:03.980771 [ 352 ] {} <Fatal> BaseDaemon: 17. ? @ 0x7f85ec463609 in ?\r\n2021.12.09 19:09:03.980814 [ 352 ] {} <Fatal> BaseDaemon: 18. __clone @ 0x7f85ec38a293 in ?\r\n2021.12.09 19:09:04.000093 [ 314 ] {} <Trace> AsynchronousMetrics: MemoryTracking: was 3.84 GiB, peak 9.57 GiB, will set to 3.87 GiB (RSS), difference: 32.32 MiB\r\n2021.12.09 19:09:04.217518 [ 352 ] {} <Fatal> BaseDaemon: Calculated checksum of the binary: 8142A36AB98199A5F585210D0B66F15A. There is no information about the reference checksum.\r\n```","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32474/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32474/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32465","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32465/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32465/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32465/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/32465","id":1075740842,"node_id":"I_kwDOA5dJV85AHoCq","number":32465,"title":"Enormously large query is slow if it is being run from Merge table with huge number of tables.","user":{"login":"alexey-milovidov","id":18581488,"node_id":"MDQ6VXNlcjE4NTgxNDg4","avatar_url":"https://avatars.githubusercontent.com/u/18581488?v=4","gravatar_id":"","url":"https://api.github.com/users/alexey-milovidov","html_url":"https://github.com/alexey-milovidov","followers_url":"https://api.github.com/users/alexey-milovidov/followers","following_url":"https://api.github.com/users/alexey-milovidov/following{/other_user}","gists_url":"https://api.github.com/users/alexey-milovidov/gists{/gist_id}","starred_url":"https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexey-milovidov/subscriptions","organizations_url":"https://api.github.com/users/alexey-milovidov/orgs","repos_url":"https://api.github.com/users/alexey-milovidov/repos","events_url":"https://api.github.com/users/alexey-milovidov/events{/privacy}","received_events_url":"https://api.github.com/users/alexey-milovidov/received_events","type":"User","site_admin":false},"labels":[{"id":756395244,"node_id":"MDU6TGFiZWw3NTYzOTUyNDQ=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/performance","name":"performance","color":"c2e0c6","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-12-09T16:04:17Z","updated_at":"2021-12-09T16:04:17Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"```\r\nSELECT uniqExact(order_customer_id), \r\n       uniqExact(order_customer_id), \r\n       sum(toInt64(visit_count)), \r\n       uniqExact(order_multiorder_id), \r\n       sum(toInt64(visit_count)), \r\n       sum(toInt64(visit_count)) AS sum_visit_count_ok, \r\n       sum(item_price_rub_numeric), \r\n       uniqExact(order_multiorder_id), \r\n       uniqExact(order_customer_id)\r\nFROM cubes.cubes_clickhouse__cube_end2end_union \r\nWHERE (addDays(CAST(date, 'DATE'), -1 * (((7 + if( \r\n        toDayOfWeek(date) = 7, 1, \r\n        toDayOfWeek(date) + 1)) - 2) % 7)) >= toDateTime('2021-10-04 00:00:00')) \r\n  AND (addDays(CAST(date, 'DATE'), -1 * (((7 + if( \r\n        toDayOfWeek(date) = 7, 1, \r\n        toDayOfWeek(date) + 1)) - 2) % 7)) < toDateTime('2021-12-13 00:00:00'))\r\n  /* crazy category filtering starts here */\r\n  AND (((multiIf((position(multiIf(cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                   cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                   cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                           'ymp_main-cat_dp_auto') > 0) OR (position(multiIf(\r\n                                                                             cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                             cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                             cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                     'ymp_cat_dp_auto') > 0) OR (position(multiIf(\r\n                                                                                                                  cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                                  cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                                  cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                          'ymp_offer_dp_auto') >\r\n                                                                                                 0), 'Авто', (position(\r\n                                                                                                                      multiIf(\r\n                                                                                                                              cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                                              cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                                              cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                                      'ymp_main-cat_dp_bt') >\r\n                                                                                                              0) OR\r\n                                                                                                             (position(\r\n                                                                                                                      multiIf(\r\n                                                                                                                              cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                                              cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                                              cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                                      'ymp_cat_dp_bt') >\r\n                                                                                                              0) OR\r\n                                                                                                             (position(\r\n                                                                                                                      multiIf(\r\n                                                                                                                              cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                                              cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                                              cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                                      'ymp_offer_dp_bt') >\r\n                                                                                                              0),\r\n                 'Бытовая техника', (position(multiIf(cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                      cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                      cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                              'ymp_main-cat_dp_dacha') > 0) OR (position(multiIf(\r\n                                                                                                 cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                 cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                 cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                         'ymp_cat_dp_dacha') > 0) OR\r\n                                    (position(multiIf(cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                      cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                      cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                              'ymp_offer_dp_dacha') > 0), 'Дача, сад, огород', (position(multiIf(\r\n                                                                                                                 cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                                 cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                                 cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                         'ymp_main-cat_dp_dety') >\r\n                                                                                                0) OR (position(multiIf(\r\n                                                                                                                        cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                                        cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                                        cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                                'ymp_cat_dp_dety') >\r\n                                                                                                       0) OR (position(\r\n                                                                                                                      multiIf(\r\n                                                                                                                              cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                                              cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                                              cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                                      'ymp_offer_dp_dety') >\r\n                                                                                                              0),\r\n                 'Детские товары', (position(multiIf(cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                     cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                     cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                             'ymp_main-cat_dp_dom') > 0) OR (position(multiIf(\r\n                                                                                              cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                              cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                              cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                      'ymp_cat_dp_dom') > 0) OR\r\n                                   (position(multiIf(cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                     cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                     cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                             'ymp_offer_dp_dom') > 0), 'Товары для дома', (position(multiIf(\r\n                                                                                                            cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                            cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                            cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                    'ymp_main-cat_dp_dosug') >\r\n                                                                                           0) OR (position(multiIf(\r\n                                                                                                                   cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                                   cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                                   cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                           'ymp_cat_dp_dosug') >\r\n                                                                                                  0) OR (position(\r\n                                                                                                                 multiIf(\r\n                                                                                                                         cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                                         cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                                         cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                                 'ymp_offer_dp_dosug') >\r\n                                                                                                         0),\r\n                 'Хобби и развлечения', (position(multiIf(\r\n                                                          cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                          cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                          cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                  'ymp_main-cat_dp_elektronika') > 0) OR (position(multiIf(\r\n                                                                                                           cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                           cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                           cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                   'ymp_cat_dp_elektronika') >\r\n                                                                                          0) OR (position(multiIf(\r\n                                                                                                                  cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                                  cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                                  cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                          'ymp_offer_dp_elektronika') >\r\n                                                                                                 0), 'Электроника',\r\n                 (position(multiIf(cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                   cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                   cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                           'ymp_main-cat_dp_knigi') > 0) OR (position(multiIf(\r\n                                                                              cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                              cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                              cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                      'ymp_cat_dp_knigi') > 0) OR (position(multiIf(\r\n                                                                                                                    cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                                    cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                                    cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                            'ymp_offer_dp_knigi') >\r\n                                                                                                   0), 'Книги',\r\n                 (position(multiIf(cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                   cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                   cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                           'ymp_main-cat_dp_komputer') > 0) OR (position(multiIf(\r\n                                                                                 cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                 cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                 cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                         'ymp_cat_dp_komputer') > 0) OR (position(\r\n                                                                                                                 multiIf(\r\n                                                                                                                         cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                                         cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                                         cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                                 'ymp_offer_dp_komputer') >\r\n                                                                                                         0),\r\n                 'Компьютерная техника', (position(multiIf(\r\n                                                           cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                           cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                           cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                   'ymp_main-cat_dp_krasota') > 0) OR (position(multiIf(\r\n                                                                                                        cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                        cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                        cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                'ymp_cat_dp_krasota') >\r\n                                                                                       0) OR (position(multiIf(\r\n                                                                                                               cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                               cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                               cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                       'ymp_offer_dp_krasota') >\r\n                                                                                              0), 'Красота', (position(\r\n                                                                                                                      multiIf(\r\n                                                                                                                              cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                                              cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                                              cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                                      'ymp_main-cat_dp_oborudovanie') >\r\n                                                                                                              0) OR\r\n                                                                                                             (position(\r\n                                                                                                                      multiIf(\r\n                                                                                                                              cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                                              cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                                              cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                                      'ymp_cat_dp_oborudovanie') >\r\n                                                                                                              0) OR\r\n                                                                                                             (position(\r\n                                                                                                                      multiIf(\r\n                                                                                                                              cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                                              cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                                              cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                                      'ymp_offer_dp_oborudovanie') >\r\n                                                                                                              0),\r\n                 'Оборудование', (position(multiIf(cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                   cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                   cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                           'ymp_main-cat_dp_odezhda') > 0) OR (position(multiIf(\r\n                                                                                                cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                        'ymp_cat_dp_odezhda') > 0) OR\r\n                                 (position(multiIf(cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                   cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                   cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                           'ymp_offer_dp_odezhda') > 0), 'Одежда, аксессуары, обувь', (position(multiIf(\r\n                                                                                                                        cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                                        cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                                        cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                                'ymp_main-cat_dp_produkti') >\r\n                                                                                                       0) OR (position(\r\n                                                                                                                      multiIf(\r\n                                                                                                                              cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                                              cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                                              cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                                      'ymp_cat_dp_produkti') >\r\n                                                                                                              0) OR\r\n                                                                                                      (position(multiIf(\r\n                                                                                                                        cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                                        cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                                        cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                                'ymp_offer_dp_produkti') >\r\n                                                                                                       0),\r\n                 'Продукты и напитки', (position(multiIf(\r\n                                                         cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                         cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                         cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                 'ymp_main-cat_dp_sport') > 0) OR (position(multiIf(\r\n                                                                                                    cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                    cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                    cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                            'ymp_cat_dp_sport') > 0) OR\r\n                                       (position(multiIf(\r\n                                                         cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                         cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                         cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                 'ymp_offer_dp_sport') > 0), 'Спорт и отдых', (position(multiIf(\r\n                                                                                                                cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                                cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                                cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                        'ymp_main-cat_dp_stroika') >\r\n                                                                                               0) OR (position(multiIf(\r\n                                                                                                                       cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                                       cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                                       cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                               'ymp_cat_dp_stroika') >\r\n                                                                                                      0) OR (position(\r\n                                                                                                                     multiIf(\r\n                                                                                                                             cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                                             cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                                             cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                                     'ymp_offer_dp_stroika') >\r\n                                                                                                             0),\r\n                 'Строительство и ремонт', (position(multiIf(\r\n                                                             cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                             cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                             cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                     'ymp_main-cat_dp_zdorovie') > 0) OR (position(multiIf(\r\n                                                                                                           cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                           cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                           cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                   'ymp_cat_dp_zdorovie') >\r\n                                                                                          0) OR (position(multiIf(\r\n                                                                                                                  cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                                  cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                                  cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                          'ymp_offer_dp_zdorovie') >\r\n                                                                                                 0), 'Здоровье',\r\n                 (position(multiIf(cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                   cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                   cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                           'ymp_main-cat_dp_zootovary') > 0) OR (position(multiIf(\r\n                                                                                  cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                  cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                  cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                          'ymp_cat_dp_zootovary') > 0) OR (position(\r\n                                                                                                                   multiIf(\r\n                                                                                                                           cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                                           cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                                           cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                                   'ymp_offer_dp_zootovary') >\r\n                                                                                                           0),\r\n                 'Товары для животных', (position(multiIf(\r\n                                                          cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                          cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                          cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                  'ymp_main-cat_dp_cvety') > 0) OR (position(multiIf(\r\n                                                                                                     cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                     cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                     cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                             'ymp_cat_dp_cvety') > 0) OR\r\n                                        (position(multiIf(\r\n                                                          cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                          cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                          cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                  'ymp_offer_dp_cvety') > 0), 'Цветы', ' Нет категории') >=\r\n         ' Нет категории') AND (multiIf((position(multiIf(\r\n                                                          cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                          cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                          cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                  'ymp_main-cat_dp_auto') > 0) OR (position(multiIf(\r\n                                                                                                    cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                    cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                    cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                            'ymp_cat_dp_auto') > 0) OR\r\n                                        (position(multiIf(\r\n                                                          cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                          cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                          cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                  'ymp_offer_dp_auto') > 0), 'Авто', (position(multiIf(\r\n                                                                                                       cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                       cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                       cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                               'ymp_main-cat_dp_bt') >\r\n                                                                                      0) OR (position(multiIf(\r\n                                                                                                              cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                              cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                              cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                      'ymp_cat_dp_bt') >\r\n                                                                                             0) OR (position(multiIf(\r\n                                                                                                                     cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                                     cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                                     cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                             'ymp_offer_dp_bt') >\r\n                                                                                                    0),\r\n                                        'Бытовая техника', (position(multiIf(\r\n                                                                             cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                             cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                             cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                     'ymp_main-cat_dp_dacha') > 0) OR (position(multiIf(\r\n                                                                                                                        cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                                        cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                                        cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                                'ymp_cat_dp_dacha') >\r\n                                                                                                       0) OR (position(\r\n                                                                                                                      multiIf(\r\n                                                                                                                              cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                                              cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                                              cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                                      'ymp_offer_dp_dacha') >\r\n                                                                                                              0),\r\n                                        'Дача, сад, огород', (position(multiIf(\r\n                                                                               cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                               cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                               cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                       'ymp_main-cat_dp_dety') > 0) OR (position(\r\n                                                                                                                multiIf(\r\n                                                                                                                        cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                                        cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                                        cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                                'ymp_cat_dp_dety') >\r\n                                                                                                        0) OR (position(\r\n                                                                                                                       multiIf(\r\n                                                                                                                               cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                                               cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                                               cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                                       'ymp_offer_dp_dety') >\r\n                                                                                                               0),\r\n                                        'Детские товары', (position(multiIf(\r\n                                                                            cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                            cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                            cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                    'ymp_main-cat_dp_dom') > 0) OR (position(multiIf(\r\n                                                                                                                     cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                                     cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                                     cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                             'ymp_cat_dp_dom') >\r\n                                                                                                    0) OR (position(\r\n                                                                                                                   multiIf(\r\n                                                                                                                           cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                                           cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                                           cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                                   'ymp_offer_dp_dom') >\r\n                                                                                                           0),\r\n                                        'Товары для дома', (position(multiIf(\r\n                                                                             cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                             cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                             cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                     'ymp_main-cat_dp_dosug') > 0) OR (position(multiIf(\r\n                                                                                                                        cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                                        cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                                        cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                                'ymp_cat_dp_dosug') >\r\n                                                                                                       0) OR (position(\r\n                                                                                                                      multiIf(\r\n                                                                                                                              cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                                              cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                                              cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                                      'ymp_offer_dp_dosug') >\r\n                                                                                                              0),\r\n                                        'Хобби и развлечения', (position(multiIf(\r\n                                                                                 cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                 cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                 cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                         'ymp_main-cat_dp_elektronika') > 0) OR\r\n                                                               (position(multiIf(\r\n                                                                                 cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                 cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                 cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                         'ymp_cat_dp_elektronika') > 0) OR (position(\r\n                                                                                                                    multiIf(\r\n                                                                                                                            cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                                            cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                                            cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                                    'ymp_offer_dp_elektronika') >\r\n                                                                                                            0),\r\n                                        'Электроника', (position(multiIf(\r\n                                                                         cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                         cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                         cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                 'ymp_main-cat_dp_knigi') > 0) OR (position(multiIf(\r\n                                                                                                                    cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                                    cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                                    cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                            'ymp_cat_dp_knigi') >\r\n                                                                                                   0) OR (position(\r\n                                                                                                                  multiIf(\r\n                                                                                                                          cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                                          cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                                          cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                                  'ymp_offer_dp_knigi') >\r\n                                                                                                          0), 'Книги',\r\n                                        (position(multiIf(\r\n                                                          cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                          cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                          cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                  'ymp_main-cat_dp_komputer') > 0) OR (position(multiIf(\r\n                                                                                                        cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                        cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                        cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                'ymp_cat_dp_komputer') >\r\n                                                                                       0) OR (position(multiIf(\r\n                                                                                                               cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                               cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                               cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                       'ymp_offer_dp_komputer') >\r\n                                                                                              0),\r\n                                        'Компьютерная техника', (position(multiIf(\r\n                                                                                  cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                  cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                  cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                          'ymp_main-cat_dp_krasota') > 0) OR (position(\r\n                                                                                                                      multiIf(\r\n                                                                                                                              cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                                              cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                                              cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                                      'ymp_cat_dp_krasota') >\r\n                                                                                                              0) OR\r\n                                                                (position(multiIf(\r\n                                                                                  cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                  cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                  cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                          'ymp_offer_dp_krasota') > 0), 'Красота',\r\n                                        (position(multiIf(\r\n                                                          cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                          cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                          cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                  'ymp_main-cat_dp_oborudovanie') > 0) OR (position(multiIf(\r\n                                                                                                            cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                            cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                            cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                    'ymp_cat_dp_oborudovanie') >\r\n                                                                                           0) OR (position(multiIf(\r\n                                                                                                                   cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                                   cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                                   cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                           'ymp_offer_dp_oborudovanie') >\r\n                                                                                                  0), 'Оборудование',\r\n                                        (position(multiIf(\r\n                                                          cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                          cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                          cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                  'ymp_main-cat_dp_odezhda') > 0) OR (position(multiIf(\r\n                                                                                                       cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                       cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                       cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                               'ymp_cat_dp_odezhda') >\r\n                                                                                      0) OR (position(multiIf(\r\n                                                                                                              cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                              cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                              cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                      'ymp_offer_dp_odezhda') >\r\n                                                                                             0),\r\n                                        'Одежда, аксессуары, обувь', (position(multiIf(\r\n                                                                                       cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                       cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                       cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                               'ymp_main-cat_dp_produkti') > 0) OR\r\n                                                                     (position(multiIf(\r\n                                                                                       cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                       cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                       cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                               'ymp_cat_dp_produkti') > 0) OR (position(\r\n                                                                                                                       multiIf(\r\n                                                                                                                               cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                                               cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                                               cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                                       'ymp_offer_dp_produkti') >\r\n                                                                                                               0),\r\n                                        'Продукты и напитки', (position(multiIf(\r\n                                                                                cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                        'ymp_main-cat_dp_sport') > 0) OR (position(\r\n                                                                                                                  multiIf(\r\n                                                                                                                          cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                                          cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                                          cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                                  'ymp_cat_dp_sport') >\r\n                                                                                                          0) OR\r\n                                                              (position(multiIf(\r\n                                                                                cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                        'ymp_offer_dp_sport') > 0), 'Спорт и отдых',\r\n                                        (position(multiIf(\r\n                                                          cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                          cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                          cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                  'ymp_main-cat_dp_stroika') > 0) OR (position(multiIf(\r\n                                                                                                       cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                       cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                       cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                               'ymp_cat_dp_stroika') >\r\n                                                                                      0) OR (position(multiIf(\r\n                                                                                                              cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                              cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                              cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                      'ymp_offer_dp_stroika') >\r\n                                                                                             0),\r\n                                        'Строительство и ремонт', (position(multiIf(\r\n                                                                                    cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                    cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                    cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                            'ymp_main-cat_dp_zdorovie') > 0) OR\r\n                                                                  (position(multiIf(\r\n                                                                                    cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                    cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                    cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                            'ymp_cat_dp_zdorovie') > 0) OR (position(\r\n                                                                                                                    multiIf(\r\n                                                                                                                            cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                                            cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                                            cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                                    'ymp_offer_dp_zdorovie') >\r\n                                                                                                            0),\r\n                                        'Здоровье', (position(multiIf(\r\n                                                                      cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                      cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                      cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                              'ymp_main-cat_dp_zootovary') > 0) OR (position(multiIf(\r\n                                                                                                                     cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                                     cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                                     cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                             'ymp_cat_dp_zootovary') >\r\n                                                                                                    0) OR (position(\r\n                                                                                                                   multiIf(\r\n                                                                                                                           cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                                           cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                                           cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                                   'ymp_offer_dp_zootovary') >\r\n                                                                                                           0),\r\n                                        'Товары для животных', (position(multiIf(\r\n                                                                                 cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                 cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                 cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                         'ymp_main-cat_dp_cvety') > 0) OR (position(\r\n                                                                                                                   multiIf(\r\n                                                                                                                           cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                                           cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                                           cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                                   'ymp_cat_dp_cvety') >\r\n                                                                                                           0) OR\r\n                                                               (position(multiIf(\r\n                                                                                 cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                 cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                 cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                         'ymp_offer_dp_cvety') > 0), 'Цветы',\r\n                                        ' Нет категории') <= 'Детские товары')) OR ((multiIf((position(multiIf(\r\n                                                                                                               cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                               cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                               cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                       'ymp_main-cat_dp_auto') >\r\n                                                                                              0) OR (position(multiIf(\r\n                                                                                                                      cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                                      cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                                      cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                              'ymp_cat_dp_auto') >\r\n                                                                                                     0) OR (position(\r\n                                                                                                                    multiIf(\r\n                                                                                                                            cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                                            cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                                            cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                                    'ymp_offer_dp_auto') >\r\n                                                                                                            0), 'Авто',\r\n                                                                                             (position(multiIf(\r\n                                                                                                               cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                               cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                               cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                       'ymp_main-cat_dp_bt') >\r\n                                                                                              0) OR (position(multiIf(\r\n                                                                                                                      cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                                      cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                                      cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                              'ymp_cat_dp_bt') >\r\n                                                                                                     0) OR (position(\r\n                                                                                                                    multiIf(\r\n                                                                                                                            cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                                            cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                                            cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                                    'ymp_offer_dp_bt') >\r\n                                                                                                            0),\r\n                                                                                             'Бытовая техника',\r\n                                                                                             (position(multiIf(\r\n                                                                                                               cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                               cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                               cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                       'ymp_main-cat_dp_dacha') >\r\n                                                                                              0) OR (position(multiIf(\r\n                                                                                                                      cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                                      cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                                      cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                              'ymp_cat_dp_dacha') >\r\n                                                                                                     0) OR (position(\r\n                                                                                                                    multiIf(\r\n                                                                                                                            cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                                            cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                                            cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                                    'ymp_offer_dp_dacha') >\r\n                                                                                                            0),\r\n                                                                                             'Дача, сад, огород',\r\n                                                                                             (position(multiIf(\r\n                                                                                                               cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                               cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                               cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                       'ymp_main-cat_dp_dety') >\r\n                                                                                              0) OR (position(multiIf(\r\n                                                                                                                      cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                                      cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                                      cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                              'ymp_cat_dp_dety') >\r\n                                                                                                     0) OR (position(\r\n                                                                                                                    multiIf(\r\n                                                                                                                            cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                                            cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                                            cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                                    'ymp_offer_dp_dety') >\r\n                                                                                                            0),\r\n                                                                                             'Детские товары',\r\n                                                                                             (position(multiIf(\r\n                                                                                                               cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                               cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                               cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                       'ymp_main-cat_dp_dom') >\r\n                                                                                              0) OR (position(multiIf(\r\n                                                                                                                      cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                                      cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                                      cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                              'ymp_cat_dp_dom') >\r\n                                                                                                     0) OR (position(\r\n                                                                                                                    multiIf(\r\n                                                                                                                            cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                                            cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                                            cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                                    'ymp_offer_dp_dom') >\r\n                                                                                                            0),\r\n                                                                                             'Товары для дома',\r\n                                                                                             (position(multiIf(\r\n                                                                                                               cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                               cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                               cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                       'ymp_main-cat_dp_dosug') >\r\n                                                                                              0) OR (position(multiIf(\r\n                                                                                                                      cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                                      cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                                      cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                              'ymp_cat_dp_dosug') >\r\n                                                                                                     0) OR (position(\r\n                                                                                                                    multiIf(\r\n                                                                                                                            cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                                            cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                                            cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                                    'ymp_offer_dp_dosug') >\r\n                                                                                                            0),\r\n                                                                                             'Хобби и развлечения',\r\n                                                                                             (position(multiIf(\r\n                                                                                                               cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                               cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                               cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                       'ymp_main-cat_dp_elektronika') >\r\n                                                                                              0) OR (position(multiIf(\r\n                                                                                                                      cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                                      cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                                      cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                              'ymp_cat_dp_elektronika') >\r\n                                                                                                     0) OR (position(\r\n                                                                                                                    multiIf(\r\n                                                                                                                            cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                                            cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                                            cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                                    'ymp_offer_dp_elektronika') >\r\n                                                                                                            0),\r\n                                                                                             'Электроника', (position(\r\n                                                                                                                     multiIf(\r\n                                                                                                                             cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                                             cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                                             cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                                     'ymp_main-cat_dp_knigi') >\r\n                                                                                                             0) OR\r\n                                                                                                            (position(\r\n                                                                                                                     multiIf(\r\n                                                                                                                             cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                                             cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                                             cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                                     'ymp_cat_dp_knigi') >\r\n                                                                                                             0) OR\r\n                                                                                                            (position(\r\n                                                                                                                     multiIf(\r\n                                                                                                                             cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                                             cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                                             cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                                     'ymp_offer_dp_knigi') >\r\n                                                                                                             0),\r\n                                                                                             'Книги', (position(multiIf(\r\n                                                                                                                        cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                                        cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                                        cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                                'ymp_main-cat_dp_komputer') >\r\n                                                                                                       0) OR (position(\r\n                                                                                                                      multiIf(\r\n                                                                                                                              cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                                              cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                                              cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                                      'ymp_cat_dp_komputer') >\r\n                                                                                                              0) OR\r\n                                                                                                      (position(multiIf(\r\n                                                                                                                        cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                                        cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                                        cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                                'ymp_offer_dp_komputer') >\r\n                                                                                                       0),\r\n                                                                                             'Компьютерная техника',\r\n                                                                                             (position(multiIf(\r\n                                                                                                               cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                               cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                               cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                       'ymp_main-cat_dp_krasota') >\r\n                                                                                              0) OR (position(multiIf(\r\n                                                                                                                      cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                                      cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                                      cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                              'ymp_cat_dp_krasota') >\r\n                                                                                                     0) OR (position(\r\n                                                                                                                    multiIf(\r\n                                                                                                                            cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                                            cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                                            cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                                    'ymp_offer_dp_krasota') >\r\n                                                                                                            0),\r\n                                                                                             'Красота', (position(\r\n                                                                                                                 multiIf(\r\n                                                                                                                         cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                                         cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                                         cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                                 'ymp_main-cat_dp_oborudovanie') >\r\n                                                                                                         0) OR\r\n                                                                                                        (position(\r\n                                                                                                                 multiIf(\r\n                                                                                                                         cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                                         cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                                         cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                                 'ymp_cat_dp_oborudovanie') >\r\n                                                                                                         0) OR\r\n                                                                                                        (position(\r\n                                                                                                                 multiIf(\r\n                                                                                                                         cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                                         cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                                         cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                                 'ymp_offer_dp_oborudovanie') >\r\n                                                                                                         0),\r\n                                                                                             'Оборудование', (position(\r\n                                                                                                                      multiIf(\r\n                                                                                                                              cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                                              cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                                              cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                                      'ymp_main-cat_dp_odezhda') >\r\n                                                                                                              0) OR\r\n                                                                                                             (position(\r\n                                                                                                                      multiIf(\r\n                                                                                                                              cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                                              cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                                              cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                                      'ymp_cat_dp_odezhda') >\r\n                                                                                                              0) OR\r\n                                                                                                             (position(\r\n                                                                                                                      multiIf(\r\n                                                                                                                              cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                                              cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                                              cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                                      'ymp_offer_dp_odezhda') >\r\n                                                                                                              0),\r\n                                                                                             'Одежда, аксессуары, обувь',\r\n                                                                                             (position(multiIf(\r\n                                                                                                               cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                               cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                               cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                       'ymp_main-cat_dp_produkti') >\r\n                                                                                              0) OR (position(multiIf(\r\n                                                                                                                      cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                                      cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                                      cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                              'ymp_cat_dp_produkti') >\r\n                                                                                                     0) OR (position(\r\n                                                                                                                    multiIf(\r\n                                                                                                                            cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                                            cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                                            cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                                    'ymp_offer_dp_produkti') >\r\n                                                                                                            0),\r\n                                                                                             'Продукты и напитки',\r\n                                                                                             (position(multiIf(\r\n                                                                                                               cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                               cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                               cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                       'ymp_main-cat_dp_sport') >\r\n                                                                                              0) OR (position(multiIf(\r\n                                                                                                                      cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                                      cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                                      cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                              'ymp_cat_dp_sport') >\r\n                                                                                                     0) OR (position(\r\n                                                                                                                    multiIf(\r\n                                                                                                                            cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                                            cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                                            cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                                    'ymp_offer_dp_sport') >\r\n                                                                                                            0),\r\n                                                                                             'Спорт и отдых', (position(\r\n                                                                                                                       multiIf(\r\n                                                                                                                               cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                                               cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                                               cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                                       'ymp_main-cat_dp_stroika') >\r\n                                                                                                               0) OR\r\n                                                                                                              (position(\r\n                                                                                                                       multiIf(\r\n                                                                                                                               cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                                               cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                                               cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                                       'ymp_cat_dp_stroika') >\r\n                                                                                                               0) OR\r\n                                                                                                              (position(\r\n                                                                                                                       multiIf(\r\n                                                                                                                               cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                                               cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                                               cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                                       'ymp_offer_dp_stroika') >\r\n                                                                                                               0),\r\n                                                                                             'Строительство и ремонт',\r\n                                                                                             (position(multiIf(\r\n                                                                                                               cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                               cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                               cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                       'ymp_main-cat_dp_zdorovie') >\r\n                                                                                              0) OR (position(multiIf(\r\n                                                                                                                      cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                                      cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                                      cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                              'ymp_cat_dp_zdorovie') >\r\n                                                                                                     0) OR (position(\r\n                                                                                                                    multiIf(\r\n                                                                                                                            cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                                            cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                                            cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                                    'ymp_offer_dp_zdorovie') >\r\n                                                                                                            0),\r\n                                                                                             'Здоровье', (position(\r\n                                                                                                                  multiIf(\r\n                                                                                                                          cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                                          cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                                          cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                                  'ymp_main-cat_dp_zootovary') >\r\n                                                                                                          0) OR\r\n                                                                                                         (position(\r\n                                                                                                                  multiIf(\r\n                                                                                                                          cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                                          cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                                          cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                                  'ymp_cat_dp_zootovary') >\r\n                                                                                                          0) OR\r\n                                                                                                         (position(\r\n                                                                                                                  multiIf(\r\n                                                                                                                          cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                                          cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                                          cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                                  'ymp_offer_dp_zootovary') >\r\n                                                                                                          0),\r\n                                                                                             'Товары для животных',\r\n                                                                                             (position(multiIf(\r\n                                                                                                               cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                               cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                               cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                       'ymp_main-cat_dp_cvety') >\r\n                                                                                              0) OR (position(multiIf(\r\n                                                                                                                      cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                                      cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                                      cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                              'ymp_cat_dp_cvety') >\r\n                                                                                                     0) OR (position(\r\n                                                                                                                    multiIf(\r\n                                                                                                                            cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                                            cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                                            cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                                    'ymp_offer_dp_cvety') >\r\n                                                                                                            0), 'Цветы',\r\n                                                                                             ' Нет категории') >=\r\n                                                                                     'Компьютерная техника') AND\r\n                                                                                    (multiIf((position(multiIf(\r\n                                                                                                               cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                               cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                               cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                       'ymp_main-cat_dp_auto') >\r\n                                                                                              0) OR (position(multiIf(\r\n                                                                                                                      cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                                      cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                                      cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                              'ymp_cat_dp_auto') >\r\n                                                                                                     0) OR (position(\r\n                                                                                                                    multiIf(\r\n                                                                                                                            cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                                            cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                                            cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                                    'ymp_offer_dp_auto') >\r\n                                                                                                            0), 'Авто',\r\n                                                                                             (position(multiIf(\r\n                                                                                                               cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                               cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                               cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                       'ymp_main-cat_dp_bt') >\r\n                                                                                              0) OR (position(multiIf(\r\n                                                                                                                      cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                                      cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                                      cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                              'ymp_cat_dp_bt') >\r\n                                                                                                     0) OR (position(\r\n                                                                                                                    multiIf(\r\n                                                                                                                            cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                                            cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                                            cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                                    'ymp_offer_dp_bt') >\r\n                                                                                                            0),\r\n                                                                                             'Бытовая техника',\r\n                                                                                             (position(multiIf(\r\n                                                                                                               cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                               cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                               cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                       'ymp_main-cat_dp_dacha') >\r\n                                                                                              0) OR (position(multiIf(\r\n                                                                                                                      cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                                      cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                                      cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                              'ymp_cat_dp_dacha') >\r\n                                                                                                     0) OR (position(\r\n                                                                                                                    multiIf(\r\n                                                                                                                            cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                                            cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                                            cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                                    'ymp_offer_dp_dacha') >\r\n                                                                                                            0),\r\n                                                                                             'Дача, сад, огород',\r\n                                                                                             (position(multiIf(\r\n                                                                                                               cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                               cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                               cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                       'ymp_main-cat_dp_dety') >\r\n                                                                                              0) OR (position(multiIf(\r\n                                                                                                                      cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                                      cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                                      cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                              'ymp_cat_dp_dety') >\r\n                                                                                                     0) OR (position(\r\n                                                                                                                    multiIf(\r\n                                                                                                                            cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                                            cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                                            cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                                    'ymp_offer_dp_dety') >\r\n                                                                                                            0),\r\n                                                                                             'Детские товары',\r\n                                                                                             (position(multiIf(\r\n                                                                                                               cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                               cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                               cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                       'ymp_main-cat_dp_dom') >\r\n                                                                                              0) OR (position(multiIf(\r\n                                                                                                                      cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                                      cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                                      cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                              'ymp_cat_dp_dom') >\r\n                                                                                                     0) OR (position(\r\n                                                                                                                    multiIf(\r\n                                                                                                                            cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                                            cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                                            cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                                    'ymp_offer_dp_dom') >\r\n                                                                                                            0),\r\n                                                                                             'Товары для дома',\r\n                                                                                             (position(multiIf(\r\n                                                                                                               cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                               cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                               cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                       'ymp_main-cat_dp_dosug') >\r\n                                                                                              0) OR (position(multiIf(\r\n                                                                                                                      cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                                      cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                                      cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                              'ymp_cat_dp_dosug') >\r\n                                                                                                     0) OR (position(\r\n                                                                                                                    multiIf(\r\n                                                                                                                            cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                                            cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                                            cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                                    'ymp_offer_dp_dosug') >\r\n                                                                                                            0),\r\n                                                                                             'Хобби и развлечения',\r\n                                                                                             (position(multiIf(\r\n                                                                                                               cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                               cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                               cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                       'ymp_main-cat_dp_elektronika') >\r\n                                                                                              0) OR (position(multiIf(\r\n                                                                                                                      cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                                      cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                                      cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                              'ymp_cat_dp_elektronika') >\r\n                                                                                                     0) OR (position(\r\n                                                                                                                    multiIf(\r\n                                                                                                                            cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                                            cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                                            cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                                    'ymp_offer_dp_elektronika') >\r\n                                                                                                            0),\r\n                                                                                             'Электроника', (position(\r\n                                                                                                                     multiIf(\r\n                                                                                                                             cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                                             cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                                             cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                                     'ymp_main-cat_dp_knigi') >\r\n                                                                                                             0) OR\r\n                                                                                                            (position(\r\n                                                                                                                     multiIf(\r\n                                                                                                                             cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                                             cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                                             cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                                     'ymp_cat_dp_knigi') >\r\n                                                                                                             0) OR\r\n                                                                                                            (position(\r\n                                                                                                                     multiIf(\r\n                                                                                                                             cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                                             cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                                             cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                                     'ymp_offer_dp_knigi') >\r\n                                                                                                             0),\r\n                                                                                             'Книги', (position(multiIf(\r\n                                                                                                                        cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                                        cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                                        cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                                'ymp_main-cat_dp_komputer') >\r\n                                                                                                       0) OR (position(\r\n                                                                                                                      multiIf(\r\n                                                                                                                              cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                                              cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                                              cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                                      'ymp_cat_dp_komputer') >\r\n                                                                                                              0) OR\r\n                                                                                                      (position(multiIf(\r\n                                                                                                                        cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                                        cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                                        cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                                'ymp_offer_dp_komputer') >\r\n                                                                                                       0),\r\n                                                                                             'Компьютерная техника',\r\n                                                                                             (position(multiIf(\r\n                                                                                                               cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                               cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                               cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                       'ymp_main-cat_dp_krasota') >\r\n                                                                                              0) OR (position(multiIf(\r\n                                                                                                                      cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                                      cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                                      cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                              'ymp_cat_dp_krasota') >\r\n                                                                                                     0) OR (position(\r\n                                                                                                                    multiIf(\r\n                                                                                                                            cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                                            cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                                            cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                                    'ymp_offer_dp_krasota') >\r\n                                                                                                            0),\r\n                                                                                             'Красота', (position(\r\n                                                                                                                 multiIf(\r\n                                                                                                                         cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                                         cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                                         cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                                 'ymp_main-cat_dp_oborudovanie') >\r\n                                                                                                         0) OR\r\n                                                                                                        (position(\r\n                                                                                                                 multiIf(\r\n                                                                                                                         cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                                         cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                                         cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                                 'ymp_cat_dp_oborudovanie') >\r\n                                                                                                         0) OR\r\n                                                                                                        (position(\r\n                                                                                                                 multiIf(\r\n                                                                                                                         cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                                         cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                                         cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                                 'ymp_offer_dp_oborudovanie') >\r\n                                                                                                         0),\r\n                                                                                             'Оборудование', (position(\r\n                                                                                                                      multiIf(\r\n                                                                                                                              cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                                              cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                                              cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                                      'ymp_main-cat_dp_odezhda') >\r\n                                                                                                              0) OR\r\n                                                                                                             (position(\r\n                                                                                                                      multiIf(\r\n                                                                                                                              cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                                              cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                                              cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                                      'ymp_cat_dp_odezhda') >\r\n                                                                                                              0) OR\r\n                                                                                                             (position(\r\n                                                                                                                      multiIf(\r\n                                                                                                                              cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                                              cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                                              cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                                      'ymp_offer_dp_odezhda') >\r\n                                                                                                              0),\r\n                                                                                             'Одежда, аксессуары, обувь',\r\n                                                                                             (position(multiIf(\r\n                                                                                                               cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                               cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                               cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                       'ymp_main-cat_dp_produkti') >\r\n                                                                                              0) OR (position(multiIf(\r\n                                                                                                                      cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                                      cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                                      cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                              'ymp_cat_dp_produkti') >\r\n                                                                                                     0) OR (position(\r\n                                                                                                                    multiIf(\r\n                                                                                                                            cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                                            cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                                            cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                                    'ymp_offer_dp_produkti') >\r\n                                                                                                            0),\r\n                                                                                             'Продукты и напитки',\r\n                                                                                             (position(multiIf(\r\n                                                                                                               cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                               cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                               cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                       'ymp_main-cat_dp_sport') >\r\n                                                                                              0) OR (position(multiIf(\r\n                                                                                                                      cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                                      cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                                      cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                              'ymp_cat_dp_sport') >\r\n                                                                                                     0) OR (position(\r\n                                                                                                                    multiIf(\r\n                                                                                                                            cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                                            cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                                            cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                                    'ymp_offer_dp_sport') >\r\n                                                                                                            0),\r\n                                                                                             'Спорт и отдых', (position(\r\n                                                                                                                       multiIf(\r\n                                                                                                                               cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                                               cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                                               cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                                       'ymp_main-cat_dp_stroika') >\r\n                                                                                                               0) OR\r\n                                                                                                              (position(\r\n                                                                                                                       multiIf(\r\n                                                                                                                               cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                                               cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                                               cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                                       'ymp_cat_dp_stroika') >\r\n                                                                                                               0) OR\r\n                                                                                                              (position(\r\n                                                                                                                       multiIf(\r\n                                                                                                                               cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                                               cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                                               cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                                       'ymp_offer_dp_stroika') >\r\n                                                                                                               0),\r\n                                                                                             'Строительство и ремонт',\r\n                                                                                             (position(multiIf(\r\n                                                                                                               cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                               cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                               cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                       'ymp_main-cat_dp_zdorovie') >\r\n                                                                                              0) OR (position(multiIf(\r\n                                                                                                                      cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                                      cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                                      cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                              'ymp_cat_dp_zdorovie') >\r\n                                                                                                     0) OR (position(\r\n                                                                                                                    multiIf(\r\n                                                                                                                            cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                                            cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                                            cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                                    'ymp_offer_dp_zdorovie') >\r\n                                                                                                            0),\r\n                                                                                             'Здоровье', (position(\r\n                                                                                                                  multiIf(\r\n                                                                                                                          cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                                          cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                                          cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                                  'ymp_main-cat_dp_zootovary') >\r\n                                                                                                          0) OR\r\n                                                                                                         (position(\r\n                                                                                                                  multiIf(\r\n                                                                                                                          cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                                          cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                                          cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                                  'ymp_cat_dp_zootovary') >\r\n                                                                                                          0) OR\r\n                                                                                                         (position(\r\n                                                                                                                  multiIf(\r\n                                                                                                                          cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                                          cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                                          cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                                  'ymp_offer_dp_zootovary') >\r\n                                                                                                          0),\r\n                                                                                             'Товары для животных',\r\n                                                                                             (position(multiIf(\r\n                                                                                                               cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                               cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                               cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                       'ymp_main-cat_dp_cvety') >\r\n                                                                                              0) OR (position(multiIf(\r\n                                                                                                                      cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                                      cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                                      cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                              'ymp_cat_dp_cvety') >\r\n                                                                                                     0) OR (position(\r\n                                                                                                                    multiIf(\r\n                                                                                                                            cubes_clickhouse__cube_end2end_union.e2e_record_type = 'install',\r\n                                                                                                                            cubes_clickhouse__cube_end2end_union.installation_source_path_new_tree_5,\r\n                                                                                                                            cubes_clickhouse__cube_end2end_union.e2e_lsc_source_path_new_tree_5),\r\n                                                                                                                    'ymp_offer_dp_cvety') >\r\n                                                                                                            0), 'Цветы',\r\n                                                                                             ' Нет категории') <=\r\n                                                                                     'Электроника')))\r\n  /* crazy category filtering ends here */\r\nGROUP BY addDays(CAST(date, 'DATE'), -1 * (((7 + if( \r\n        toDayOfWeek(date) = 7, 1, \r\n        toDayOfWeek(date) + 1)) - 2) % 7));\r\n```\r\n\r\n(we have permission to publish this query)\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32465/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32465/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32463","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32463/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32463/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32463/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/32463","id":1075727448,"node_id":"I_kwDOA5dJV85AHkxY","number":32463,"title":"bug in row policy IN_CLUASE","user":{"login":"mbtolou","id":6413705,"node_id":"MDQ6VXNlcjY0MTM3MDU=","avatar_url":"https://avatars.githubusercontent.com/u/6413705?v=4","gravatar_id":"","url":"https://api.github.com/users/mbtolou","html_url":"https://github.com/mbtolou","followers_url":"https://api.github.com/users/mbtolou/followers","following_url":"https://api.github.com/users/mbtolou/following{/other_user}","gists_url":"https://api.github.com/users/mbtolou/gists{/gist_id}","starred_url":"https://api.github.com/users/mbtolou/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mbtolou/subscriptions","organizations_url":"https://api.github.com/users/mbtolou/orgs","repos_url":"https://api.github.com/users/mbtolou/repos","events_url":"https://api.github.com/users/mbtolou/events{/privacy}","received_events_url":"https://api.github.com/users/mbtolou/received_events","type":"User","site_admin":false},"labels":[{"id":2011606513,"node_id":"MDU6TGFiZWwyMDExNjA2NTEz","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-rbac","name":"comp-rbac","color":"b5bcff","default":false,"description":"Access control related"},{"id":3260776666,"node_id":"MDU6TGFiZWwzMjYwNzc2NjY2","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/potential%20bug","name":"potential bug","color":"ffc080","default":false,"description":"To be reviewed by developers and confirmed/rejected."}],"state":"open","locked":false,"assignee":{"login":"vitlibar","id":45142681,"node_id":"MDQ6VXNlcjQ1MTQyNjgx","avatar_url":"https://avatars.githubusercontent.com/u/45142681?v=4","gravatar_id":"","url":"https://api.github.com/users/vitlibar","html_url":"https://github.com/vitlibar","followers_url":"https://api.github.com/users/vitlibar/followers","following_url":"https://api.github.com/users/vitlibar/following{/other_user}","gists_url":"https://api.github.com/users/vitlibar/gists{/gist_id}","starred_url":"https://api.github.com/users/vitlibar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vitlibar/subscriptions","organizations_url":"https://api.github.com/users/vitlibar/orgs","repos_url":"https://api.github.com/users/vitlibar/repos","events_url":"https://api.github.com/users/vitlibar/events{/privacy}","received_events_url":"https://api.github.com/users/vitlibar/received_events","type":"User","site_admin":false},"assignees":[{"login":"vitlibar","id":45142681,"node_id":"MDQ6VXNlcjQ1MTQyNjgx","avatar_url":"https://avatars.githubusercontent.com/u/45142681?v=4","gravatar_id":"","url":"https://api.github.com/users/vitlibar","html_url":"https://github.com/vitlibar","followers_url":"https://api.github.com/users/vitlibar/followers","following_url":"https://api.github.com/users/vitlibar/following{/other_user}","gists_url":"https://api.github.com/users/vitlibar/gists{/gist_id}","starred_url":"https://api.github.com/users/vitlibar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vitlibar/subscriptions","organizations_url":"https://api.github.com/users/vitlibar/orgs","repos_url":"https://api.github.com/users/vitlibar/repos","events_url":"https://api.github.com/users/vitlibar/events{/privacy}","received_events_url":"https://api.github.com/users/vitlibar/received_events","type":"User","site_admin":false}],"milestone":null,"comments":0,"created_at":"2021-12-09T15:51:55Z","updated_at":"2021-12-13T09:04:22Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"problem with this query:\r\n\r\n```sql\r\ndrop table if exists test.row_policy \r\n\r\ncreate table test.row_policy Engine = Memory\r\nas \r\nselect now() as d,'test' as s\r\n\r\nselect *\r\nfrom test.row_policy\r\n\r\n\r\nCREATE ROW POLICY filter ON test.row_policy USING ( s in  ( 'test') ) TO ALL;\r\n\r\nselect * from test.row_policy -- [ok] return 1 record \r\n\r\nDROP ROW POLICY IF EXISTS filter ON test.row_policy;\r\n\r\nCREATE ROW POLICY filter ON test.row_policy USING ( s in  (select 'test') ) TO ALL;\r\n\r\nselect * from test.row_policy -- [problem] return 0 record \r\n\r\n```","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32463/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32463/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32457","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32457/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32457/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32457/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/32457","id":1075601683,"node_id":"I_kwDOA5dJV85AHGET","number":32457,"title":"Broken: ODBC bridge + unixODBC + Oracle ODBC driver","user":{"login":"x052bb","id":58942073,"node_id":"MDQ6VXNlcjU4OTQyMDcz","avatar_url":"https://avatars.githubusercontent.com/u/58942073?v=4","gravatar_id":"","url":"https://api.github.com/users/x052bb","html_url":"https://github.com/x052bb","followers_url":"https://api.github.com/users/x052bb/followers","following_url":"https://api.github.com/users/x052bb/following{/other_user}","gists_url":"https://api.github.com/users/x052bb/gists{/gist_id}","starred_url":"https://api.github.com/users/x052bb/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/x052bb/subscriptions","organizations_url":"https://api.github.com/users/x052bb/orgs","repos_url":"https://api.github.com/users/x052bb/repos","events_url":"https://api.github.com/users/x052bb/events{/privacy}","received_events_url":"https://api.github.com/users/x052bb/received_events","type":"User","site_admin":false},"labels":[{"id":845271686,"node_id":"MDU6TGFiZWw4NDUyNzE2ODY=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/backward%20compatibility","name":"backward compatibility","color":"28af63","default":false,"description":""},{"id":2034738737,"node_id":"MDU6TGFiZWwyMDM0NzM4NzM3","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-odbc","name":"comp-odbc","color":"b5bcff","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2021-12-09T13:56:19Z","updated_at":"2021-12-10T10:25:56Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"(you don't have to strictly follow this form)\r\n\r\n**Describe the issue**\r\nClickhouse version: 21.11.5.33 (but also tried 21.9 with same effect)\r\n\r\nClickhouse connects to Oracle database (12) via ODBC. In 20.4 version of Clickhouse everything works as expected. Tried to upgrade to a newer version and it failed.\r\n\r\nExecuting query:\r\n\r\n`SELECT 1 FROM odbc('DSN=TEST','SYS','DUAL')`\r\n\r\nResult:\r\n\r\n`HYT0: [Oracle][ODBC]Timeout expired`\r\n\r\nLogs:\r\n\r\n```\r\n2021.12.09 13:09:41.683947 [ 312 ] {} <Trace> ODBCRequestHandlerFactory-factory: Request URI: /columns_info?connection_string=DSN%3DTEST&schema=SYS&table=DUAL&external_table_functions_use_nulls=true\r\n2021.12.09 13:09:41.684004 [ 312 ] {} <Trace> ODBCColumnsInfoHandler: Request URI: /columns_info?connection_string=DSN%3DTEST&schema=SYS&table=DUAL&external_table_functions_use_nulls=true\r\n2021.12.09 13:09:41.684015 [ 312 ] {} <Trace> ODBCColumnsInfoHandler: Got connection str 'DSN=TEST'\r\n2021.12.09 13:09:41.684558 [ 312 ] {} <Error> T DB::execute(nanodbc::ConnectionHolderPtr, std::function<T (nanodbc::connection &)>) [T = nanodbc::catalog::columns]: std::exception. Code: 1001, type: nanodbc::database_error, e.what() = ../contrib/nanodbc/nanodbc/nanodbc.cpp:4813: HYT0: [Oracle][ODBC]Timeout expired.                               , Stack trace (when copying this message, always include the lines below):\r\n\r\n0. ? @ 0x741e46d in ?\r\n1. ? @ 0x449be22 in /home/test/apps/releases/clickhouse-rhel/21.11.5.33-2/clickhouse/bin/clickhouse-odbc-bridge\r\n2. ? @ 0x449e7d4 in /home/test/apps/releases/clickhouse-rhel/21.11.5.33-2/clickhouse/bin/clickhouse-odbc-bridge\r\n3. ? @ 0x2deea95 in /home/test/apps/releases/clickhouse-rhel/21.11.5.33-2/clickhouse/bin/clickhouse-odbc-bridge\r\n4. ? @ 0x2de8486 in /home/test/apps/releases/clickhouse-rhel/21.11.5.33-2/clickhouse/bin/clickhouse-odbc-bridge\r\n5. ? @ 0x4369c08 in /home/test/apps/releases/clickhouse-rhel/21.11.5.33-2/clickhouse/bin/clickhouse-odbc-bridge\r\n6. ? @ 0x6270eaf in /home/test/apps/releases/clickhouse-rhel/21.11.5.33-2/clickhouse/bin/clickhouse-odbc-bridge\r\n7. ? @ 0x6273281 in /home/test/apps/releases/clickhouse-rhel/21.11.5.33-2/clickhouse/bin/clickhouse-odbc-bridge\r\n8. ? @ 0x73973c9 in ?\r\n9. ? @ 0x73956e0 in ?\r\n10. start_thread @ 0x7ea5 in /usr/lib64/libpthread-2.17.so\r\n11. __clone @ 0xfe9fd in /usr/lib64/libc-2.17.so\r\n (version 21.11.5.33 (official build))\r\n2021.12.09 13:09:41.684703 [ 312 ] {} <Warning> ODBCColumnsInfoHandler: Error getting columns from ODBC 'std::exception. Code: 1001, type: nanodbc::database_error, e.what() = ../contrib/nanodbc/nanodbc/nanodbc.cpp:4813: HYT0: [Oracle][ODBC]Timeout expired.                                (version 21.11.5.33 (official build))'\r\n2021.12.09 13:09:41.684764 [ 312 ] {} <Error> ODBCColumnsInfoHandler: std::exception. Code: 1001, type: nanodbc::database_error, e.what() = ../contrib/nanodbc/nanodbc/nanodbc.cpp:4813: HYT0: [Oracle][ODBC]Timeout expired.                               , Stack trace (when copying this message, always include the lines below):\r\n\r\n0. ? @ 0x741e46d in ?\r\n1. ? @ 0x449be22 in /home/test/apps/releases/clickhouse-rhel/21.11.5.33-2/clickhouse/bin/clickhouse-odbc-bridge\r\n2. ? @ 0x449e7d4 in /home/test/apps/releases/clickhouse-rhel/21.11.5.33-2/clickhouse/bin/clickhouse-odbc-bridge\r\n3. ? @ 0x2deea95 in /home/test/apps/releases/clickhouse-rhel/21.11.5.33-2/clickhouse/bin/clickhouse-odbc-bridge\r\n4. ? @ 0x2de8486 in /home/test/apps/releases/clickhouse-rhel/21.11.5.33-2/clickhouse/bin/clickhouse-odbc-bridge\r\n5. ? @ 0x4369c08 in /home/test/apps/releases/clickhouse-rhel/21.11.5.33-2/clickhouse/bin/clickhouse-odbc-bridge\r\n6. ? @ 0x6270eaf in /home/test/apps/releases/clickhouse-rhel/21.11.5.33-2/clickhouse/bin/clickhouse-odbc-bridge\r\n7. ? @ 0x6273281 in /home/test/apps/releases/clickhouse-rhel/21.11.5.33-2/clickhouse/bin/clickhouse-odbc-bridge\r\n8. ? @ 0x73973c9 in ?\r\n9. ? @ 0x73956e0 in ?\r\n10. start_thread @ 0x7ea5 in /usr/lib64/libpthread-2.17.so\r\n11. __clone @ 0xfe9fd in /usr/lib64/libc-2.17.so\r\n (version 21.11.5.33 (official build))\r\n```\r\n\r\nAdditional information:\r\n\r\n1. Combination of unixODBC + ODBC driver works fine, I'm able to connect & execute queries via _isql_\r\n\r\n2. I'm able to directly query _clickhouse-odbc-bridge_ as mentioned in https://clickhouse.com/docs/en/operations/utilities/odbc-bridge/\r\n\r\n```\r\ncurl -d \"query=SELECT 1 FROM DUAL\" --data-urlencode \"connection_string=DSN=TEST;DATABASE=SYS\" --data-urlencode \"sample_block=columns format version: 1\r\n1 columns:\r\n\\`ID\\` String\r\n\"  \"http://localhost:9018/\"\r\n```\r\n\r\nThe above works and returns _1_ as expected with the following in _clickhouse-odbc-bridge_ log:\r\n\r\n```\r\n2021.12.09 13:04:40.112721 [ 312 ] {} <Trace> ODBCRequestHandlerFactory-factory: Request URI: /\r\n2021.12.09 13:04:40.112778 [ 312 ] {} <Trace> ODBCHandler: Request URI: /\r\n2021.12.09 13:04:40.112810 [ 312 ] {} <Trace> ODBCHandler: Connection string: 'DSN=TEST;DATABASE=SYS'\r\n2021.12.09 13:04:40.420393 [ 312 ] {} <Trace> ODBCHandler: Query: SELECT 1 FROM DUAL\r\n```\r\n\r\n3. Contents of odbc.ini is simple\r\n\r\n```\r\n[TEST]\r\nDriver = /home/test/apps/instantclient/libsqora.so.12.1\r\nServerName=***\r\nUserID=***\r\nPassword=***\r\n```\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32457/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32457/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32451","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32451/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32451/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32451/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/32451","id":1075474255,"node_id":"I_kwDOA5dJV85AGm9P","number":32451,"title":"When writing concurrently，some request failed.","user":{"login":"Sallery-X","id":45587738,"node_id":"MDQ6VXNlcjQ1NTg3NzM4","avatar_url":"https://avatars.githubusercontent.com/u/45587738?v=4","gravatar_id":"","url":"https://api.github.com/users/Sallery-X","html_url":"https://github.com/Sallery-X","followers_url":"https://api.github.com/users/Sallery-X/followers","following_url":"https://api.github.com/users/Sallery-X/following{/other_user}","gists_url":"https://api.github.com/users/Sallery-X/gists{/gist_id}","starred_url":"https://api.github.com/users/Sallery-X/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Sallery-X/subscriptions","organizations_url":"https://api.github.com/users/Sallery-X/orgs","repos_url":"https://api.github.com/users/Sallery-X/repos","events_url":"https://api.github.com/users/Sallery-X/events{/privacy}","received_events_url":"https://api.github.com/users/Sallery-X/received_events","type":"User","site_admin":false},"labels":[{"id":386401510,"node_id":"MDU6TGFiZWwzODY0MDE1MTA=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/question","name":"question","color":"bfdadc","default":true,"description":""},{"id":1507860028,"node_id":"MDU6TGFiZWwxNTA3ODYwMDI4","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/st-need-repro","name":"st-need-repro","color":"e5b890","default":false,"description":"We were not able to reproduce the problem, please help us."}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2021-12-09T11:39:42Z","updated_at":"2021-12-10T19:59:43Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Version: 21.3-lts\r\nThe error as follows:\r\nDB::NetException: Connection reset by peer, while writing to socket (127.0.0.1:9000): data for INSERT was parsed from stdin","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32451/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32451/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32449","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32449/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32449/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32449/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/32449","id":1075456347,"node_id":"I_kwDOA5dJV85AGilb","number":32449,"title":"ODBC MSSQL error","user":{"login":"Chameleon13","id":17765027,"node_id":"MDQ6VXNlcjE3NzY1MDI3","avatar_url":"https://avatars.githubusercontent.com/u/17765027?v=4","gravatar_id":"","url":"https://api.github.com/users/Chameleon13","html_url":"https://github.com/Chameleon13","followers_url":"https://api.github.com/users/Chameleon13/followers","following_url":"https://api.github.com/users/Chameleon13/following{/other_user}","gists_url":"https://api.github.com/users/Chameleon13/gists{/gist_id}","starred_url":"https://api.github.com/users/Chameleon13/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Chameleon13/subscriptions","organizations_url":"https://api.github.com/users/Chameleon13/orgs","repos_url":"https://api.github.com/users/Chameleon13/repos","events_url":"https://api.github.com/users/Chameleon13/events{/privacy}","received_events_url":"https://api.github.com/users/Chameleon13/received_events","type":"User","site_admin":false},"labels":[{"id":2034738737,"node_id":"MDU6TGFiZWwyMDM0NzM4NzM3","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-odbc","name":"comp-odbc","color":"b5bcff","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2021-12-09T11:19:37Z","updated_at":"2021-12-10T18:41:52Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Try create external dictionary from mssql with odbc\r\nhttps://clickhouse.com/docs/en/sql-reference/dictionaries/external-dictionaries/external-dicts-dict-sources/#example-of-connecting-ms-sql-server\r\n\r\nodbc.ini:\r\n```\r\n[MSSQL]\r\n    Description     = FreeTDS\r\n    Driver          = FreeTDS\r\n    Servername      = MSSQL\r\n    Database        = ***\r\n    UID             = clickhouse\r\n    PWD             = ***\r\n    Port            = 1433\r\n```\r\n\r\nodbcinst.ini:\r\n```\r\n[FreeTDS]\r\n    Description     = FreeTDS\r\n    Driver          = /usr/lib/libtdsodbc.so\r\n    Setup           = /usr/lib/libtdsS.so\r\n    FileUsage       = 1\r\n    UsageCount      = 5\r\n```\r\n\r\nfreetds.conf:\r\n```\r\n[MSSQL]\r\nhost = ***\r\nport = 1433\r\ntds version = 7.0\r\nclient charset = UTF-8\r\n```\r\n\r\nQuery:\r\n```\r\nSELECT *\r\nFROM odbc('DSN=MSSQL;UID=***;PWD=***', '***')\r\nLIMIT 1\r\n```\r\n\r\nResult:\r\n```\r\nReceived exception from server (version 21.7.4):\r\nCode: 1000. DB::Exception: Received from localhost:9000. DB::Exception: No message received.\r\n```\r\n\r\nWhat is wrong?\r\nConnections from server with sqsh and isql working beautiful\r\nQuery from example:\r\n```\r\nCREATE DICTIONARY test (\r\n    k UInt64,\r\n    s String DEFAULT ''\r\n)\r\nPRIMARY KEY k\r\nSOURCE(ODBC(table 'dict' connection_string 'DSN=MSSQL;UID=test;PWD=test'))\r\nLAYOUT(FLAT())\r\nLIFETIME(MIN 300 MAX 360)\r\n```\r\nhaving exactly the same result","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32449/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32449/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32444","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32444/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32444/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32444/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/32444","id":1075377328,"node_id":"I_kwDOA5dJV85AGPSw","number":32444,"title":"Kafka engine doesn't check Nested columns length ","user":{"login":"yngvest","id":10130350,"node_id":"MDQ6VXNlcjEwMTMwMzUw","avatar_url":"https://avatars.githubusercontent.com/u/10130350?v=4","gravatar_id":"","url":"https://api.github.com/users/yngvest","html_url":"https://github.com/yngvest","followers_url":"https://api.github.com/users/yngvest/followers","following_url":"https://api.github.com/users/yngvest/following{/other_user}","gists_url":"https://api.github.com/users/yngvest/gists{/gist_id}","starred_url":"https://api.github.com/users/yngvest/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yngvest/subscriptions","organizations_url":"https://api.github.com/users/yngvest/orgs","repos_url":"https://api.github.com/users/yngvest/repos","events_url":"https://api.github.com/users/yngvest/events{/privacy}","received_events_url":"https://api.github.com/users/yngvest/received_events","type":"User","site_admin":false},"labels":[{"id":1365689344,"node_id":"MDU6TGFiZWwxMzY1Njg5MzQ0","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-foreign-db","name":"comp-foreign-db","color":"b5bcff","default":false,"description":"Integrations with other databases"},{"id":1575085465,"node_id":"MDU6TGFiZWwxNTc1MDg1NDY1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/unexpected%20behaviour","name":"unexpected behaviour","color":"e088ca","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2021-12-09T09:58:19Z","updated_at":"2021-12-13T09:35:46Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"**Describe what's wrong**\r\n\r\nWe have an `Engine=Kafka` table and regular table with same Nested structure and also materialized view for saving an incoming data.\r\nThe Kafka table permits Nested columns with different length, but target MergeTree table don't. Then if we insert data with different column lengths through Kafka table Clickhouse fails to store the data into the target table and become unable to store subsequent data.\r\n\r\n**Does it reproduce on recent release?**\r\n\r\nYes, it reproduces on 21.11.5.33\r\n\r\n**How to reproduce**\r\n\r\n- Use Clickhouse 21.11.5.33\r\n- Create following tables\r\n```\r\nCREATE TABLE kafka_queue (\r\n\tn Nested (\r\n\t\ta String,\r\n\t\tb String\r\n\t)\r\n) ENGINE = Kafka \r\nSETTINGS  kafka_broker_list = 'localhost:9092',\r\n    kafka_topic_list = 'nested',\r\n    kafka_group_name = 'nested',\r\n    kafka_format = 'JSONEachRow',\r\n    kafka_num_consumers = 1,\r\n    kafka_handle_error_mode = 'stream',\r\n    input_format_skip_unknown_fields = 1,\r\n    input_format_import_nested_json = 1;\r\n\r\nCREATE TABLE target (\r\n\tn Nested (\r\n\t\ta String,\r\n\t\tb String\r\n\t),\r\n\tts DateTime materialized now()\r\n) Engine=MergeTree\r\n\tORDER BY ts;\r\n\r\nCREATE TABLE target_invalid (\r\n\tmsg String,\r\n        err String,\r\n\tts DateTime materialized now()\r\n) Engine=MergeTree\r\n\tORDER BY ts;\r\n\r\nCREATE MATERIALIZED VIEW consumer TO target AS\r\nSELECT *\r\nFROM kafka_queue\r\nWHERE _error = '';\r\n\r\nCREATE MATERIALIZED VIEW invalid_consumer TO target_invalid AS\r\nSELECT _error as err, _raw_message as msg\r\nFROM kafka_queue\r\nWHERE _error != '';\r\n```\r\n\r\n- Produce json with different arrays length into the Kafka topic\r\n`{\"n\":{\"a\":[\"1\",\"2\"], \"b\":[\"3\"]}}`\r\n\r\n- Observe no data was written into `target_invalid` table and increasing error in system.errors\r\n`Elements 'n.a' and 'n.b' of Nested data structure 'n' (Array columns) have different array sizes.`\r\n\r\n- Produce following json and observe no data was written into `target` table\r\n`{\"n\":{\"a\":[\"1\",\"2\"], \"b\":[\"3\",\"4\"]}}`\r\n\r\n**Expected behavior**\r\n\r\nRow being added to the `target_invalid` table with json as msg and error as err columns. Subsequent kafka messages being written to the corresponding tables as well.\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32444/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32444/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32439","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32439/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32439/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32439/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/32439","id":1075306808,"node_id":"I_kwDOA5dJV85AF-E4","number":32439,"title":"Update AWS S3 SDK","user":{"login":"filimonov","id":1549571,"node_id":"MDQ6VXNlcjE1NDk1NzE=","avatar_url":"https://avatars.githubusercontent.com/u/1549571?v=4","gravatar_id":"","url":"https://api.github.com/users/filimonov","html_url":"https://github.com/filimonov","followers_url":"https://api.github.com/users/filimonov/followers","following_url":"https://api.github.com/users/filimonov/following{/other_user}","gists_url":"https://api.github.com/users/filimonov/gists{/gist_id}","starred_url":"https://api.github.com/users/filimonov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/filimonov/subscriptions","organizations_url":"https://api.github.com/users/filimonov/orgs","repos_url":"https://api.github.com/users/filimonov/repos","events_url":"https://api.github.com/users/filimonov/events{/privacy}","received_events_url":"https://api.github.com/users/filimonov/received_events","type":"User","site_admin":false},"labels":[{"id":521113272,"node_id":"MDU6TGFiZWw1MjExMTMyNzI=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/build","name":"build","color":"800000","default":false,"description":""},{"id":2020016497,"node_id":"MDU6TGFiZWwyMDIwMDE2NDk3","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-s3","name":"comp-s3","color":"b5bcff","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2021-12-09T08:47:55Z","updated_at":"2021-12-12T00:08:15Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"body":"> wondering on support for aws s3 object lambda - basically instead of providing with a bucket name, this functioanilty allows to provide a bucket ARN arn:aws:s3-object-lambda:eu-west-1:407416054022:accesspoint/test .\r\n> What happens in the background is that a request to an s3 object with GET, will first run a lambda funtion on the specified object. This is need for GDPR compliance.\r\n> with the current cpp sdk installed with version 21.8 I get the following error -\r\n> Custom endpoint is not compatible with Access Point ARN or Outposts ARN in Bucket field.\r\n> you can see here https://github.com/aws/aws-sdk-cpp/blob/e4223509ba1bcc5807dfb4f1afef01fdc83ad8c2/aws-cpp-sdk-s3/include/aws/s3/S3ARN.h#L27 that support was added to the SDK on 18/3/2021.\r\n> sdk version that introduced it is 1.8.168, while if I'm not mistaken the current sdk in use in CH is 1.7.321\r\n> \r\n> Any plans of bumping the SDK version soon ?","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32439/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32439/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32419","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32419/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32419/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32419/events","html_url":"https://github.com/ClickHouse/ClickHouse/pull/32419","id":1074850627,"node_id":"PR_kwDOA5dJV84vk6Or","number":32419,"title":"Release pull request for branch 21.12","user":{"login":"robot-clickhouse","id":41385210,"node_id":"MDQ6VXNlcjQxMzg1MjEw","avatar_url":"https://avatars.githubusercontent.com/u/41385210?v=4","gravatar_id":"","url":"https://api.github.com/users/robot-clickhouse","html_url":"https://github.com/robot-clickhouse","followers_url":"https://api.github.com/users/robot-clickhouse/followers","following_url":"https://api.github.com/users/robot-clickhouse/following{/other_user}","gists_url":"https://api.github.com/users/robot-clickhouse/gists{/gist_id}","starred_url":"https://api.github.com/users/robot-clickhouse/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/robot-clickhouse/subscriptions","organizations_url":"https://api.github.com/users/robot-clickhouse/orgs","repos_url":"https://api.github.com/users/robot-clickhouse/repos","events_url":"https://api.github.com/users/robot-clickhouse/events{/privacy}","received_events_url":"https://api.github.com/users/robot-clickhouse/received_events","type":"User","site_admin":false},"labels":[{"id":1261360622,"node_id":"MDU6TGFiZWwxMjYxMzYwNjIy","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/release","name":"release","color":"34d3a1","default":false,"description":"Label for release pull request"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-12-08T21:33:08Z","updated_at":"2022-01-23T15:40:39Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/pulls/32419","html_url":"https://github.com/ClickHouse/ClickHouse/pull/32419","diff_url":"https://github.com/ClickHouse/ClickHouse/pull/32419.diff","patch_url":"https://github.com/ClickHouse/ClickHouse/pull/32419.patch","merged_at":null},"body":"\nThis PullRequest is part of ClickHouse release cycle. It's used by CI system only. Don't perform any changes with it.\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32419/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32419/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32404","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32404/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32404/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32404/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/32404","id":1074541276,"node_id":"I_kwDOA5dJV85ADDLc","number":32404,"title":"Making some tables / databases readonly / attaching them in readonly mode.","user":{"login":"filimonov","id":1549571,"node_id":"MDQ6VXNlcjE1NDk1NzE=","avatar_url":"https://avatars.githubusercontent.com/u/1549571?v=4","gravatar_id":"","url":"https://api.github.com/users/filimonov","html_url":"https://github.com/filimonov","followers_url":"https://api.github.com/users/filimonov/followers","following_url":"https://api.github.com/users/filimonov/following{/other_user}","gists_url":"https://api.github.com/users/filimonov/gists{/gist_id}","starred_url":"https://api.github.com/users/filimonov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/filimonov/subscriptions","organizations_url":"https://api.github.com/users/filimonov/orgs","repos_url":"https://api.github.com/users/filimonov/repos","events_url":"https://api.github.com/users/filimonov/events{/privacy}","received_events_url":"https://api.github.com/users/filimonov/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2021-12-08T15:36:02Z","updated_at":"2021-12-10T09:45:03Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"body":"Sometimes you may have some 'archive'-like tables. Once they are filled you don't want any changes to happen there.\r\nNo more inserts, no merges, no mutations, no truncations, no housekeeping / replication / cleaning threads wasting resources for that no matter who try to do that (either admin can't do it while the table is readonly). \r\n\r\nThe only possible operations for that are ATTACH / DETACH.\r\n\r\nAlternatives: making filesystem readonly / folder unreadable - too complex / ugly, background threads will keep working. For Replicated tables - do smth bad with zookeeper. \r\n\r\nLoosely related to https://github.com/ClickHouse/ClickHouse/issues/28527 ","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32404/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32404/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32401","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32401/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32401/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32401/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/32401","id":1074450158,"node_id":"I_kwDOA5dJV85ACs7u","number":32401,"title":"Support large_utf8 column format on parquet","user":{"login":"julienfr112","id":2602096,"node_id":"MDQ6VXNlcjI2MDIwOTY=","avatar_url":"https://avatars.githubusercontent.com/u/2602096?v=4","gravatar_id":"","url":"https://api.github.com/users/julienfr112","html_url":"https://github.com/julienfr112","followers_url":"https://api.github.com/users/julienfr112/followers","following_url":"https://api.github.com/users/julienfr112/following{/other_user}","gists_url":"https://api.github.com/users/julienfr112/gists{/gist_id}","starred_url":"https://api.github.com/users/julienfr112/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/julienfr112/subscriptions","organizations_url":"https://api.github.com/users/julienfr112/orgs","repos_url":"https://api.github.com/users/julienfr112/repos","events_url":"https://api.github.com/users/julienfr112/events{/privacy}","received_events_url":"https://api.github.com/users/julienfr112/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":1397894054,"node_id":"MDU6TGFiZWwxMzk3ODk0MDU0","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/unfinished%20code","name":"unfinished code","color":"ff8800","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2021-12-08T14:07:50Z","updated_at":"2021-12-09T16:41:30Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"**Describe the unexpected behaviour**\r\nClickhouse does not support parquet with 'large_utf8' columns (only 'utf8'). From my understanding, the only difference is offsets are u64 in 'large_utf8' instead of u32\r\n\r\n**How to reproduce**\r\n\r\n```\r\nimport pyarrow\r\nimport pyarrow.parquet\r\nimport subprocess\r\n\r\n\r\nfor schema in (None,pyarrow.schema({\"a\": pyarrow.large_utf8()})):\r\n    a = pyarrow.table({\"a\": [\"00000\"]}, schema=schema)\r\n    pyarrow.parquet.write_table(a, \"test.parquet\")\r\n    subprocess.run(\r\n        \"\"\"cat test.parquet | clickhouse local \\\r\n            --input-format \"Parquet\" \\\r\n            --structure \"a String\" \\\r\n            --query \"select * from table\"\\\r\n        \"\"\",\r\n        shell=True,\r\n        check=True,\r\n    )\r\n\r\n```\r\ngives\r\n```\r\n00000\r\nCode: 50. DB::Exception: Unsupported Parquet type 'large_utf8' of an input column 'a'.: While executing ParquetBlockInputFormat: While executing File. (UNKNOWN_TYPE)\r\n```\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32401/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32401/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32399","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32399/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32399/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32399/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/32399","id":1074406868,"node_id":"I_kwDOA5dJV85ACiXU","number":32399,"title":"Client: long queries are not removed when navigating through history","user":{"login":"tavplubix","id":14847450,"node_id":"MDQ6VXNlcjE0ODQ3NDUw","avatar_url":"https://avatars.githubusercontent.com/u/14847450?v=4","gravatar_id":"","url":"https://api.github.com/users/tavplubix","html_url":"https://github.com/tavplubix","followers_url":"https://api.github.com/users/tavplubix/followers","following_url":"https://api.github.com/users/tavplubix/following{/other_user}","gists_url":"https://api.github.com/users/tavplubix/gists{/gist_id}","starred_url":"https://api.github.com/users/tavplubix/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tavplubix/subscriptions","organizations_url":"https://api.github.com/users/tavplubix/orgs","repos_url":"https://api.github.com/users/tavplubix/repos","events_url":"https://api.github.com/users/tavplubix/events{/privacy}","received_events_url":"https://api.github.com/users/tavplubix/received_events","type":"User","site_admin":false},"labels":[{"id":845247686,"node_id":"MDU6TGFiZWw4NDUyNDc2ODY=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/usability","name":"usability","color":"ebf28c","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2021-12-08T13:23:29Z","updated_at":"2021-12-09T04:28:31Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"**How to reproduce:**\r\n1. Run several long queries in `clickhouse-client` such that query does not fit into one line in terminal\r\n2. Try to navigate through history using \"up\" and \"down\" keys\r\n3. You will see something like this:\r\n\r\n![Screenshot from 2021-12-08 16-16-06](https://user-images.githubusercontent.com/14847450/145214824-6100431e-f8c5-41e6-8f5f-26449e650f64.png)\r\n\r\nIt makes query history almost impossible to use.\r\n\r\n**Expected behavior:**\r\nClient should remove previous query from terminal before printing the next one (just like it worked in older versions and how it works now if query fits into one line)\r\n![Screenshot from 2021-12-08 16-20-59](https://user-images.githubusercontent.com/14847450/145215435-19951d95-f26f-4e78-9b53-bd23bb82959f.png)\r\n![Screenshot from 2021-12-08 16-21-26](https://user-images.githubusercontent.com/14847450/145215454-ca691a3d-1dfc-4df4-ab17-66486da3ff55.png)\r\n\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32399/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32399/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32388","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32388/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32388/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32388/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/32388","id":1074337138,"node_id":"I_kwDOA5dJV85ACRVy","number":32388,"title":"Add support for NATS","user":{"login":"hashbash","id":10183440,"node_id":"MDQ6VXNlcjEwMTgzNDQw","avatar_url":"https://avatars.githubusercontent.com/u/10183440?v=4","gravatar_id":"","url":"https://api.github.com/users/hashbash","html_url":"https://github.com/hashbash","followers_url":"https://api.github.com/users/hashbash/followers","following_url":"https://api.github.com/users/hashbash/following{/other_user}","gists_url":"https://api.github.com/users/hashbash/gists{/gist_id}","starred_url":"https://api.github.com/users/hashbash/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hashbash/subscriptions","organizations_url":"https://api.github.com/users/hashbash/orgs","repos_url":"https://api.github.com/users/hashbash/repos","events_url":"https://api.github.com/users/hashbash/events{/privacy}","received_events_url":"https://api.github.com/users/hashbash/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":1365689344,"node_id":"MDU6TGFiZWwxMzY1Njg5MzQ0","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-foreign-db","name":"comp-foreign-db","color":"b5bcff","default":false,"description":"Integrations with other databases"},{"id":1507871495,"node_id":"MDU6TGFiZWwxNTA3ODcxNDk1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/st-community-taken","name":"st-community-taken","color":"e5b890","default":false,"description":"External developer is working on that"}],"state":"open","locked":false,"assignee":{"login":"tchepavel","id":47847079,"node_id":"MDQ6VXNlcjQ3ODQ3MDc5","avatar_url":"https://avatars.githubusercontent.com/u/47847079?v=4","gravatar_id":"","url":"https://api.github.com/users/tchepavel","html_url":"https://github.com/tchepavel","followers_url":"https://api.github.com/users/tchepavel/followers","following_url":"https://api.github.com/users/tchepavel/following{/other_user}","gists_url":"https://api.github.com/users/tchepavel/gists{/gist_id}","starred_url":"https://api.github.com/users/tchepavel/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tchepavel/subscriptions","organizations_url":"https://api.github.com/users/tchepavel/orgs","repos_url":"https://api.github.com/users/tchepavel/repos","events_url":"https://api.github.com/users/tchepavel/events{/privacy}","received_events_url":"https://api.github.com/users/tchepavel/received_events","type":"User","site_admin":false},"assignees":[{"login":"tchepavel","id":47847079,"node_id":"MDQ6VXNlcjQ3ODQ3MDc5","avatar_url":"https://avatars.githubusercontent.com/u/47847079?v=4","gravatar_id":"","url":"https://api.github.com/users/tchepavel","html_url":"https://github.com/tchepavel","followers_url":"https://api.github.com/users/tchepavel/followers","following_url":"https://api.github.com/users/tchepavel/following{/other_user}","gists_url":"https://api.github.com/users/tchepavel/gists{/gist_id}","starred_url":"https://api.github.com/users/tchepavel/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tchepavel/subscriptions","organizations_url":"https://api.github.com/users/tchepavel/orgs","repos_url":"https://api.github.com/users/tchepavel/repos","events_url":"https://api.github.com/users/tchepavel/events{/privacy}","received_events_url":"https://api.github.com/users/tchepavel/received_events","type":"User","site_admin":false}],"milestone":null,"comments":1,"created_at":"2021-12-08T12:05:17Z","updated_at":"2022-01-26T08:20:40Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Add support for nats https://docs.nats.io/nats-concepts/what-is-nats\r\nsimilar to Clickhouse Kafka connector","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32388/reactions","total_count":9,"+1":7,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":2,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32388/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32387","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32387/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32387/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32387/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/32387","id":1074303963,"node_id":"I_kwDOA5dJV85ACJPb","number":32387,"title":"transform does not work with DateTime64","user":{"login":"darkleaf","id":1124593,"node_id":"MDQ6VXNlcjExMjQ1OTM=","avatar_url":"https://avatars.githubusercontent.com/u/1124593?v=4","gravatar_id":"","url":"https://api.github.com/users/darkleaf","html_url":"https://github.com/darkleaf","followers_url":"https://api.github.com/users/darkleaf/followers","following_url":"https://api.github.com/users/darkleaf/following{/other_user}","gists_url":"https://api.github.com/users/darkleaf/gists{/gist_id}","starred_url":"https://api.github.com/users/darkleaf/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/darkleaf/subscriptions","organizations_url":"https://api.github.com/users/darkleaf/orgs","repos_url":"https://api.github.com/users/darkleaf/repos","events_url":"https://api.github.com/users/darkleaf/events{/privacy}","received_events_url":"https://api.github.com/users/darkleaf/received_events","type":"User","site_admin":false},"labels":[{"id":1481221764,"node_id":"MDU6TGFiZWwxNDgxMjIxNzY0","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-datetime","name":"comp-datetime","color":"b5bcff","default":false,"description":"date & time & timezone related"},{"id":1546506700,"node_id":"MDU6TGFiZWwxNTQ2NTA2NzAw","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-functions","name":"comp-functions","color":"b5bcff","default":false,"description":"Relates to some SQL function"},{"id":1575085465,"node_id":"MDU6TGFiZWwxNTc1MDg1NDY1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/unexpected%20behaviour","name":"unexpected behaviour","color":"e088ca","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2021-12-08T11:25:13Z","updated_at":"2021-12-08T11:48:08Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"```\r\nselect transform('a', ['a', 'b'], [toDateTime64(1,3), toDateTime64(2,3)], toDateTime64(0,3));\r\n\r\nReceived exception from server (version 21.11.5):\r\nCode: 44. DB::Exception: Received from localhost:9000. DB::Exception: Illegal column String of elements of array of second argument of function transform: While processing transform('a', ['a', 'b'], [toDateTime64(1, 3), toDateTime64(2, 3)], toDateTime64(0, 3)). (ILLEGAL_COLUMN)\r\n```\r\n\r\n```\r\nselect transform('a', ['a', 'b'], [toDateTime(1), toDateTime(2)], toDateTime(0));\r\n\r\n┌─transform('a', ['a', 'b'], array(toDateTime(1), toDateTime(2)), toDateTime(0))─┐\r\n│                                                            1970-01-01 00:00:01 │\r\n└────────────────────────────────────────────────────────────────────────────────┘\r\n```\r\n\r\nI expect it returns `toDateTime64(1,3)` like for DateTime but it fails.\r\n\r\nClickhouse version is 21.11.5.33.\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32387/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32387/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32368","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32368/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32368/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32368/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/32368","id":1074099495,"node_id":"I_kwDOA5dJV85ABXUn","number":32368,"title":"在clickhouse 用mysql表引擎链接一张表，基于这张表做了物化视图，在mysql数据插入后，物化视图没有变化？难道还需要手动同步？","user":{"login":"JiangTaoShi","id":38731433,"node_id":"MDQ6VXNlcjM4NzMxNDMz","avatar_url":"https://avatars.githubusercontent.com/u/38731433?v=4","gravatar_id":"","url":"https://api.github.com/users/JiangTaoShi","html_url":"https://github.com/JiangTaoShi","followers_url":"https://api.github.com/users/JiangTaoShi/followers","following_url":"https://api.github.com/users/JiangTaoShi/following{/other_user}","gists_url":"https://api.github.com/users/JiangTaoShi/gists{/gist_id}","starred_url":"https://api.github.com/users/JiangTaoShi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JiangTaoShi/subscriptions","organizations_url":"https://api.github.com/users/JiangTaoShi/orgs","repos_url":"https://api.github.com/users/JiangTaoShi/repos","events_url":"https://api.github.com/users/JiangTaoShi/events{/privacy}","received_events_url":"https://api.github.com/users/JiangTaoShi/received_events","type":"User","site_admin":false},"labels":[{"id":386401510,"node_id":"MDU6TGFiZWwzODY0MDE1MTA=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/question","name":"question","color":"bfdadc","default":true,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2021-12-08T07:33:56Z","updated_at":"2021-12-08T08:46:03Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"在clickhouse 用mysql表引擎链接一张表，基于这张表做了物化视图，在mysql数据插入后，物化视图没有变化？难道还需要手动同步？\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32368/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32368/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32367","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32367/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32367/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32367/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/32367","id":1074093459,"node_id":"I_kwDOA5dJV85ABV2T","number":32367,"title":"Cannot cancel distribution queue processes","user":{"login":"ivan-tkatchev","id":650601,"node_id":"MDQ6VXNlcjY1MDYwMQ==","avatar_url":"https://avatars.githubusercontent.com/u/650601?v=4","gravatar_id":"","url":"https://api.github.com/users/ivan-tkatchev","html_url":"https://github.com/ivan-tkatchev","followers_url":"https://api.github.com/users/ivan-tkatchev/followers","following_url":"https://api.github.com/users/ivan-tkatchev/following{/other_user}","gists_url":"https://api.github.com/users/ivan-tkatchev/gists{/gist_id}","starred_url":"https://api.github.com/users/ivan-tkatchev/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ivan-tkatchev/subscriptions","organizations_url":"https://api.github.com/users/ivan-tkatchev/orgs","repos_url":"https://api.github.com/users/ivan-tkatchev/repos","events_url":"https://api.github.com/users/ivan-tkatchev/events{/privacy}","received_events_url":"https://api.github.com/users/ivan-tkatchev/received_events","type":"User","site_admin":false},"labels":[{"id":1397894054,"node_id":"MDU6TGFiZWwxMzk3ODk0MDU0","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/unfinished%20code","name":"unfinished code","color":"ff8800","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-12-08T07:24:48Z","updated_at":"2021-12-08T07:24:48Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"There is currently no way to cancel a distributed INSERT once it lands into the distribution queue.\r\n\r\nThis is a problem for us when more than one INSERT SELECT queries are accidentally executed - the distribution queue grows very large and is processed very slowly, the table ends up with duplicate rows and there is no way to stop this process until all the queues finish processing.\r\n\r\nBasically, a distributed insert should look like a mutation from a UX perspective. (Our ETL process is ALTER TABLE DELETE followed by INSERT SELECT. The DELETE step works great, but the INSERT is not controllable at the moment and interacts poorly with the rest of the pipeline. Ideally there should be a way to cancel an INSERT SELECT mutation or wait until it finishes.)\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32367/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32367/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32363","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32363/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32363/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32363/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/32363","id":1074027573,"node_id":"I_kwDOA5dJV85ABFw1","number":32363,"title":"ClickHouse Keeper election_timeout_lower_bound_ms > election_timeout_upper_bound_ms breaks leader election.","user":{"login":"AlmostIvanSidorov","id":85959395,"node_id":"MDQ6VXNlcjg1OTU5Mzk1","avatar_url":"https://avatars.githubusercontent.com/u/85959395?v=4","gravatar_id":"","url":"https://api.github.com/users/AlmostIvanSidorov","html_url":"https://github.com/AlmostIvanSidorov","followers_url":"https://api.github.com/users/AlmostIvanSidorov/followers","following_url":"https://api.github.com/users/AlmostIvanSidorov/following{/other_user}","gists_url":"https://api.github.com/users/AlmostIvanSidorov/gists{/gist_id}","starred_url":"https://api.github.com/users/AlmostIvanSidorov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/AlmostIvanSidorov/subscriptions","organizations_url":"https://api.github.com/users/AlmostIvanSidorov/orgs","repos_url":"https://api.github.com/users/AlmostIvanSidorov/repos","events_url":"https://api.github.com/users/AlmostIvanSidorov/events{/privacy}","received_events_url":"https://api.github.com/users/AlmostIvanSidorov/received_events","type":"User","site_admin":false},"labels":[{"id":1575085465,"node_id":"MDU6TGFiZWwxNTc1MDg1NDY1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/unexpected%20behaviour","name":"unexpected behaviour","color":"e088ca","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-12-08T05:29:16Z","updated_at":"2021-12-08T05:29:16Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"**Unexpected behavior**\r\nIn ClickHouse Keeper config \r\n`<keeper_server>\r\n    <coordination_settings>`\r\n\r\n when election_timeout_lower_bound_ms > election_timeout_upper_bound_ms seems that leader election doesn`t work. But if we watch the description from documentation:\r\nelection_timeout_lower_bound_ms — If the follower didn't receive heartbeats from the leader in this interval, then it **can** initiate leader election (default: 1000).\r\nelection_timeout_upper_bound_ms — If the follower didn't receive heartbeats from the leader in this interval, then it **must** initiate leader election (default: 2000).\r\n\r\n**Expected behavior**\r\nInitiate leader election tusing election_timeout_upper_bound_ms as **must** initiator or maybe some warning of incorrect election_timeout_lower_bound_ms value.\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32363/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32363/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32362","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32362/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32362/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32362/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/32362","id":1073949108,"node_id":"I_kwDOA5dJV85AAym0","number":32362,"title":"Fixed-block allocator for large hashtables","user":{"login":"Bulat-Ziganshin","id":1798016,"node_id":"MDQ6VXNlcjE3OTgwMTY=","avatar_url":"https://avatars.githubusercontent.com/u/1798016?v=4","gravatar_id":"","url":"https://api.github.com/users/Bulat-Ziganshin","html_url":"https://github.com/Bulat-Ziganshin","followers_url":"https://api.github.com/users/Bulat-Ziganshin/followers","following_url":"https://api.github.com/users/Bulat-Ziganshin/following{/other_user}","gists_url":"https://api.github.com/users/Bulat-Ziganshin/gists{/gist_id}","starred_url":"https://api.github.com/users/Bulat-Ziganshin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Bulat-Ziganshin/subscriptions","organizations_url":"https://api.github.com/users/Bulat-Ziganshin/orgs","repos_url":"https://api.github.com/users/Bulat-Ziganshin/repos","events_url":"https://api.github.com/users/Bulat-Ziganshin/events{/privacy}","received_events_url":"https://api.github.com/users/Bulat-Ziganshin/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-12-08T02:42:22Z","updated_at":"2021-12-08T02:42:22Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Now, CH tries to optimize memory allocation by employing a better general-purpose allocator (jemalloc, hualloc). I propose to research a different approach - identify main memory eaters and individually customize these data structures and their allocation strategies with the goal to reduce their memory fragmentation and/or memory allocation times. In particular, the following analysis targets large hash tables since I know their implementation and I expect that they are among the main CH memory eaters. @alexey-milovidov, I hope you will read it. \r\n\r\n### Buddy allocator\r\n\r\nIn particular, each hash table has its own element size S, and memory segments allocated for a particular hash table are always of S*2^N bytes. So, instead of trying to fit them into segments of 2^N bytes, we can reserve for each S value a large address area (1 TB or so) and use f.e. [buddy memory allocator](https://en.wikipedia.org/wiki/Buddy_memory_allocation) to share this memory area between all hash tables with given S.\r\n\r\n\r\n### Limit the block size\r\n\r\nAnother opportunity (that may be considered independently) is to store a large hash table as an array of fixed-size segments rather than one big segment. F.e. we can limit segment size to 2 MB, and thus find the largest N for which S*2^N <= 2^21.\r\n\r\nOnce the hash table is going to have more than 2^N elements, we alloc its memory as multiple fixed-size blocks of S*2^N bytes, and access hash-table with two-level indexing:\r\n\r\nhashtable[i] === hashtable.data[ i / 2^N ][ i % 2^N ]\r\n\r\nThis way, smaller blocks can still be allocated using the buddy allocator, while all larger blocks have the same size and may be kept in the single global list (for each S).\r\n\r\n\r\n### Extendible hashing\r\n\r\nBut wait - CH hashtables are already 2-level, so this adds the 3rd indexing level. We can have only 2 levels and still limit the sub-hash size with [extendible hashing](https://en.wikipedia.org/wiki/Extendible_hashing):\r\n- first level always contains 2^K entries, where K may vary over time\r\n- a sub-hash may be referenced by multiple first-level entries\r\n- so, when K increments by 1, we just duplicate all links to sub-hashes in the first-level table\r\n- when sub-hash should grow over the limit (f.e. 2M bytes), we split it into 2 sub-hashes (each 2MB), un-duplicating a pair of links in the first-level table\r\n- K grows only when we need to split sub-hash already referenced only from one first-level entry\r\n\r\nIn terms of indexing, it just needs replacing the current `i1 = h >> 24` command with `i1 = h >> V`, increasing the hashtable access latency only by 1 cpu cycle and only on Skylake and older archs.\r\n\r\n\r\n### All blocks are buddies\r\n\r\nInstead of making a private buddy allocator for each S, we can put a non-power-of-2 number of elements in each block. F.e. make all blocks 2 MB large, thus a block will contain `K = 2MB / S` elements. We can use multiplication-based index calculation to accommodate non-power-of-2 hash table size:\r\n\r\n```C\r\ni1 = h & SIZE_MASK\r\ni2 = h*K >> 32\r\nsubhash = data[i1]\r\nx = subhash[i2]\r\n```\r\n\r\nNote that subhash calculation requires 5-6 cpu cycles (mask+load), while i2 calculation requires 4 cpu cycles (mul+shift), so using MUL-based indexing shoudn't make 2-level hashing slower.\r\n\r\nThis code, however, has some requirements to the hash function: 1) hash value should have high-quality bits both on the lower and upper ends (since we use them both), 2) we need to know the bitness of actual hash values, f.e. 32 for crc32. See #30969.\r\n\r\n\r\n### Fixed subhash size\r\n\r\nWe can continue to use AND-based indexing for one-level hash (`x = data1[h & SIZE_MASK]`) and switch to a 2-level hash only when the hashtable is going to become larger than 2 MB. The last condition will give us a nice property: each subhash will have a fixed size of 2 MB (if we never contradict subhashes).\r\n\r\nSo, for each subhash we need to keep only 64-bit pointer and 32-bit population. Even with 2MB cpu pages, these metadata may pollute LLC only when hashtables will grow to more than 1 TB combined, so this approach should be no worse than the current 256-way hashtables. Also, the population update&check will not affect the hashtable access latency.\r\n\r\nIndexing and population accounting can be reversed in order to avoid comparision with K:\r\n\r\n```C\r\nif (--i2 < 0)  i2 = K-1;   // it's even 1 cycle faster than the current i2 = (i2+1) & MASK\r\nif (--population[i1] == 0)  extend_subhash();\r\n```\r\n\r\nThe first-level table can be extended in just two steps - 32 KB and 2 MB.\r\n\r\n\r\n### Conclusion\r\n\r\nThis text considers several independent proposals. I will evaluate only the last approach that combines them all together - extendible hashing with fixed-size 2 MB pages and MUL-based indexing:\r\n- for hashtables smaller than 2 MB, the behavior is the same as with the current one-level hashtables. I rely on assumption that the main problem of CH is memory usage and allocation speed of (much) larger hashtables\r\n- data for 2-level hashtables are allocated in fixed 2 MB chunks, making the allocation extremely fast even with global chunk pool - resulting in SPEED and LACK OF EXTERNAL FRAGMENTATION\r\n- MUL-based indexing means that the entire 2 MB chunk space will be used for data - resulting in LACK OF INTERNAL FRAGMENTATION\r\n- the proposed code sequences should make access to the modified hashtables about as fast as the current ones\r\n\r\nTLDR: for hashtables larger than 1-2 MB - memory (de)allocation will become extremely fast and both internal and external fragmentation will gone (except for load factor). Access speed and behavior of smaller hashtables will not be affected, but the code complexity will grow.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32362/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32362/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32349","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32349/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32349/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32349/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/32349","id":1073420655,"node_id":"I_kwDOA5dJV84_-xlv","number":32349,"title":"'Introduced In Release Version' in Documentation","user":{"login":"william-san","id":89017555,"node_id":"MDQ6VXNlcjg5MDE3NTU1","avatar_url":"https://avatars.githubusercontent.com/u/89017555?v=4","gravatar_id":"","url":"https://api.github.com/users/william-san","html_url":"https://github.com/william-san","followers_url":"https://api.github.com/users/william-san/followers","following_url":"https://api.github.com/users/william-san/following{/other_user}","gists_url":"https://api.github.com/users/william-san/gists{/gist_id}","starred_url":"https://api.github.com/users/william-san/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/william-san/subscriptions","organizations_url":"https://api.github.com/users/william-san/orgs","repos_url":"https://api.github.com/users/william-san/repos","events_url":"https://api.github.com/users/william-san/events{/privacy}","received_events_url":"https://api.github.com/users/william-san/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-12-07T14:30:08Z","updated_at":"2021-12-07T14:30:08Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Add release version information into documentation for when new features/functions are added.\r\n\r\nWith all the new code and great work you all are doing, new features are coming every day. As new releases can introduce breaking changes, knowing what version is needed to utilize a specific feature of interest is helpful instead of having to scan release notes.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32349/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32349/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32334","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32334/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32334/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32334/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/32334","id":1073170256,"node_id":"I_kwDOA5dJV84_90dQ","number":32334,"title":"max_memory_usage cannot limit some query","user":{"login":"lelezhan","id":50923457,"node_id":"MDQ6VXNlcjUwOTIzNDU3","avatar_url":"https://avatars.githubusercontent.com/u/50923457?v=4","gravatar_id":"","url":"https://api.github.com/users/lelezhan","html_url":"https://github.com/lelezhan","followers_url":"https://api.github.com/users/lelezhan/followers","following_url":"https://api.github.com/users/lelezhan/following{/other_user}","gists_url":"https://api.github.com/users/lelezhan/gists{/gist_id}","starred_url":"https://api.github.com/users/lelezhan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/lelezhan/subscriptions","organizations_url":"https://api.github.com/users/lelezhan/orgs","repos_url":"https://api.github.com/users/lelezhan/repos","events_url":"https://api.github.com/users/lelezhan/events{/privacy}","received_events_url":"https://api.github.com/users/lelezhan/received_events","type":"User","site_admin":false},"labels":[{"id":386401510,"node_id":"MDU6TGFiZWwzODY0MDE1MTA=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/question","name":"question","color":"bfdadc","default":true,"description":""},{"id":3761121284,"node_id":"LA_kwDOA5dJV87gLigE","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/support-services","name":"support-services","color":"1A70E6","default":false,"description":""}],"state":"open","locked":false,"assignee":{"login":"genzgd","id":625882,"node_id":"MDQ6VXNlcjYyNTg4Mg==","avatar_url":"https://avatars.githubusercontent.com/u/625882?v=4","gravatar_id":"","url":"https://api.github.com/users/genzgd","html_url":"https://github.com/genzgd","followers_url":"https://api.github.com/users/genzgd/followers","following_url":"https://api.github.com/users/genzgd/following{/other_user}","gists_url":"https://api.github.com/users/genzgd/gists{/gist_id}","starred_url":"https://api.github.com/users/genzgd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/genzgd/subscriptions","organizations_url":"https://api.github.com/users/genzgd/orgs","repos_url":"https://api.github.com/users/genzgd/repos","events_url":"https://api.github.com/users/genzgd/events{/privacy}","received_events_url":"https://api.github.com/users/genzgd/received_events","type":"User","site_admin":false},"assignees":[{"login":"genzgd","id":625882,"node_id":"MDQ6VXNlcjYyNTg4Mg==","avatar_url":"https://avatars.githubusercontent.com/u/625882?v=4","gravatar_id":"","url":"https://api.github.com/users/genzgd","html_url":"https://github.com/genzgd","followers_url":"https://api.github.com/users/genzgd/followers","following_url":"https://api.github.com/users/genzgd/following{/other_user}","gists_url":"https://api.github.com/users/genzgd/gists{/gist_id}","starred_url":"https://api.github.com/users/genzgd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/genzgd/subscriptions","organizations_url":"https://api.github.com/users/genzgd/orgs","repos_url":"https://api.github.com/users/genzgd/repos","events_url":"https://api.github.com/users/genzgd/events{/privacy}","received_events_url":"https://api.github.com/users/genzgd/received_events","type":"User","site_admin":false}],"milestone":null,"comments":0,"created_at":"2021-12-07T10:17:53Z","updated_at":"2022-01-24T16:29:46Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"About memory usage in ClickHouse and here is my question\r\n\r\nmax_memory_usage in users.xml was set to 100\r\n<img width=\"881\" alt=\"image\" src=\"https://user-images.githubusercontent.com/50923457/144996188-3bb78e47-34ac-4c3c-a72d-70dd477c6e92.png\">\r\nWhen I execute a simple distinct query, it can be limited and throw exception\r\n select distinct(group_name) from aa.testTable; \r\n![image](https://user-images.githubusercontent.com/50923457/145010409-e2a56752-fbdc-41d4-a98a-ef588b1f8aae.png)\r\nHowever，When I execute the  group by query, it can be executed successfully, and it used 446.34 MB memory\r\n select group_name,  count(*) from aa.testTable;\r\n![image](https://user-images.githubusercontent.com/50923457/145010481-196c35e6-2380-45d4-a3eb-05ef1efba448.png)\r\n\r\n\r\nWhy max_memory_usage can not limit such query?\r\n\r\nAnother question is, since clickhouse set default max_server_memory_usage=(total memory)*0.9, when some big join query happened, why server's memory usage might higher than default max_server_memory_usage  value and clickhouse server crash down? Is Memory tracker can not track memory accurately? \r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32334/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32334/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32320","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32320/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32320/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32320/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/32320","id":1072865004,"node_id":"I_kwDOA5dJV84_8p7s","number":32320,"title":"I now have a ClickHouse cluster, how do I tell if RBAC is enabled on this cluster, because I don't want to know by looking at the configuration file, I want to know if there is a system table that records this information.","user":{"login":"zqw961025","id":18101179,"node_id":"MDQ6VXNlcjE4MTAxMTc5","avatar_url":"https://avatars.githubusercontent.com/u/18101179?v=4","gravatar_id":"","url":"https://api.github.com/users/zqw961025","html_url":"https://github.com/zqw961025","followers_url":"https://api.github.com/users/zqw961025/followers","following_url":"https://api.github.com/users/zqw961025/following{/other_user}","gists_url":"https://api.github.com/users/zqw961025/gists{/gist_id}","starred_url":"https://api.github.com/users/zqw961025/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zqw961025/subscriptions","organizations_url":"https://api.github.com/users/zqw961025/orgs","repos_url":"https://api.github.com/users/zqw961025/repos","events_url":"https://api.github.com/users/zqw961025/events{/privacy}","received_events_url":"https://api.github.com/users/zqw961025/received_events","type":"User","site_admin":false},"labels":[{"id":386401510,"node_id":"MDU6TGFiZWwzODY0MDE1MTA=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/question","name":"question","color":"bfdadc","default":true,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2021-12-07T03:16:17Z","updated_at":"2021-12-07T07:16:06Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"I now have a ClickHouse cluster, how do I tell if RBAC is enabled on this cluster, because I don't want to know by looking at the configuration file, I want to know if there is a system table that records this information.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32320/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32320/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32305","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32305/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32305/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32305/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/32305","id":1072493298,"node_id":"I_kwDOA5dJV84_7PLy","number":32305,"title":"JSONExtract Tuple name can't start from digit.","user":{"login":"UnamedRus","id":9449405,"node_id":"MDQ6VXNlcjk0NDk0MDU=","avatar_url":"https://avatars.githubusercontent.com/u/9449405?v=4","gravatar_id":"","url":"https://api.github.com/users/UnamedRus","html_url":"https://github.com/UnamedRus","followers_url":"https://api.github.com/users/UnamedRus/followers","following_url":"https://api.github.com/users/UnamedRus/following{/other_user}","gists_url":"https://api.github.com/users/UnamedRus/gists{/gist_id}","starred_url":"https://api.github.com/users/UnamedRus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/UnamedRus/subscriptions","organizations_url":"https://api.github.com/users/UnamedRus/orgs","repos_url":"https://api.github.com/users/UnamedRus/repos","events_url":"https://api.github.com/users/UnamedRus/events{/privacy}","received_events_url":"https://api.github.com/users/UnamedRus/received_events","type":"User","site_admin":false},"labels":[{"id":1546506700,"node_id":"MDU6TGFiZWwxNTQ2NTA2NzAw","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-functions","name":"comp-functions","color":"b5bcff","default":false,"description":"Relates to some SQL function"},{"id":1575085465,"node_id":"MDU6TGFiZWwxNTc1MDg1NDY1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/unexpected%20behaviour","name":"unexpected behaviour","color":"e088ca","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2021-12-06T18:55:26Z","updated_at":"2022-01-10T21:25:15Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"**Describe what's wrong**\r\n\r\nIt's not possible to use digit as tuple name, so it's not possible to parse JSON files to nested tuple structure with JSONExtract.\r\n\r\n**Does it reproduce on recent release?**\r\n\r\nYes\r\n\r\nClickHouse 21.12\r\n\r\n\r\n**How to reproduce**\r\n```\r\nWITH\r\n    '{\"1\":{\"key\":\"value\"}}' AS data,\r\n    JSONExtract(data, 'Tuple(\"1\" Tuple(key String))') AS parsed_json\r\nSELECT parsed_json AS ssid\r\n\r\nQuery id: 5bc7b6cf-155a-421c-ac20-f3be09bd9692\r\n\r\n\r\n0 rows in set. Elapsed: 0.003 sec.\r\n\r\nReceived exception from server (version 21.12.1):\r\nCode: 36. DB::Exception: Received from localhost:9000. DB::Exception: Explicitly specified names of tuple elements cannot start with digit: While processing JSONExtract('{\"1\":{\"key\":\"value\"}}' AS data, 'Tuple(\"1\" Tuple(key String))') AS ssid. (BAD_ARGUMENTS)\r\n```\r\n\r\n**Expected behavior**\r\n\r\nIt's possible to parse JSON with digit keys.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32305/reactions","total_count":2,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32305/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32290","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32290/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32290/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32290/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/32290","id":1072290628,"node_id":"I_kwDOA5dJV84_6dtE","number":32290,"title":"sequenceMatch function returns different results for tables with distributed engine","user":{"login":"IvanStepanov","id":7310192,"node_id":"MDQ6VXNlcjczMTAxOTI=","avatar_url":"https://avatars.githubusercontent.com/u/7310192?v=4","gravatar_id":"","url":"https://api.github.com/users/IvanStepanov","html_url":"https://github.com/IvanStepanov","followers_url":"https://api.github.com/users/IvanStepanov/followers","following_url":"https://api.github.com/users/IvanStepanov/following{/other_user}","gists_url":"https://api.github.com/users/IvanStepanov/gists{/gist_id}","starred_url":"https://api.github.com/users/IvanStepanov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/IvanStepanov/subscriptions","organizations_url":"https://api.github.com/users/IvanStepanov/orgs","repos_url":"https://api.github.com/users/IvanStepanov/repos","events_url":"https://api.github.com/users/IvanStepanov/events{/privacy}","received_events_url":"https://api.github.com/users/IvanStepanov/received_events","type":"User","site_admin":false},"labels":[{"id":1546506700,"node_id":"MDU6TGFiZWwxNTQ2NTA2NzAw","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-functions","name":"comp-functions","color":"b5bcff","default":false,"description":"Relates to some SQL function"},{"id":1575085465,"node_id":"MDU6TGFiZWwxNTc1MDg1NDY1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/unexpected%20behaviour","name":"unexpected behaviour","color":"e088ca","default":false,"description":""},{"id":1634829961,"node_id":"MDU6TGFiZWwxNjM0ODI5OTYx","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-distributed","name":"comp-distributed","color":"b5bcff","default":false,"description":"Distributed tables"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2021-12-06T15:34:46Z","updated_at":"2021-12-13T19:52:11Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"`sequenceMatch` function returns different results on the same piece of data in distributed table depending on cluster node it was called. I have checked docs for both distributed engine and parametric functions and haven't found anyting related to the issue.\r\n\r\nSteps to reproduce:\r\n\r\nConsider cluster `mycluster` with 2 nodes (`node1` and `node2`).\r\n\r\nRun on `node1`:\r\n```sql\r\ncreate table data on cluster mycluster (time UInt32, number UInt32) engine = MergeTree() order by time \r\ninsert into data values (1, 2), (2, 3), (3, 4)\r\ncreate table data_distributed on cluster mycluster as data engine = Distributed(mycluster, default, data)\r\n```\r\n\r\nRun query \r\n```sql\r\nselect sequenceMatch('(?1)(?2)')(time, number = 2, number = 3) from data_distributed\r\n```\r\non both nodes, observe that results are different (1 on \"data-owner\" `node1` and 0 on `node2`).\r\n\r\nChecked on version `21.11.5.33`","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32290/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32290/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32286","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32286/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32286/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32286/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/32286","id":1072144817,"node_id":"I_kwDOA5dJV84_56Gx","number":32286,"title":"Unexpected representation of byte array in dictionary with PostgreSQL source","user":{"login":"metelitsaas","id":69989768,"node_id":"MDQ6VXNlcjY5OTg5NzY4","avatar_url":"https://avatars.githubusercontent.com/u/69989768?v=4","gravatar_id":"","url":"https://api.github.com/users/metelitsaas","html_url":"https://github.com/metelitsaas","followers_url":"https://api.github.com/users/metelitsaas/followers","following_url":"https://api.github.com/users/metelitsaas/following{/other_user}","gists_url":"https://api.github.com/users/metelitsaas/gists{/gist_id}","starred_url":"https://api.github.com/users/metelitsaas/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/metelitsaas/subscriptions","organizations_url":"https://api.github.com/users/metelitsaas/orgs","repos_url":"https://api.github.com/users/metelitsaas/repos","events_url":"https://api.github.com/users/metelitsaas/events{/privacy}","received_events_url":"https://api.github.com/users/metelitsaas/received_events","type":"User","site_admin":false},"labels":[{"id":1575085465,"node_id":"MDU6TGFiZWwxNTc1MDg1NDY1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/unexpected%20behaviour","name":"unexpected behaviour","color":"e088ca","default":false,"description":""}],"state":"open","locked":false,"assignee":{"login":"kssenii","id":54203879,"node_id":"MDQ6VXNlcjU0MjAzODc5","avatar_url":"https://avatars.githubusercontent.com/u/54203879?v=4","gravatar_id":"","url":"https://api.github.com/users/kssenii","html_url":"https://github.com/kssenii","followers_url":"https://api.github.com/users/kssenii/followers","following_url":"https://api.github.com/users/kssenii/following{/other_user}","gists_url":"https://api.github.com/users/kssenii/gists{/gist_id}","starred_url":"https://api.github.com/users/kssenii/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kssenii/subscriptions","organizations_url":"https://api.github.com/users/kssenii/orgs","repos_url":"https://api.github.com/users/kssenii/repos","events_url":"https://api.github.com/users/kssenii/events{/privacy}","received_events_url":"https://api.github.com/users/kssenii/received_events","type":"User","site_admin":false},"assignees":[{"login":"kssenii","id":54203879,"node_id":"MDQ6VXNlcjU0MjAzODc5","avatar_url":"https://avatars.githubusercontent.com/u/54203879?v=4","gravatar_id":"","url":"https://api.github.com/users/kssenii","html_url":"https://github.com/kssenii","followers_url":"https://api.github.com/users/kssenii/followers","following_url":"https://api.github.com/users/kssenii/following{/other_user}","gists_url":"https://api.github.com/users/kssenii/gists{/gist_id}","starred_url":"https://api.github.com/users/kssenii/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kssenii/subscriptions","organizations_url":"https://api.github.com/users/kssenii/orgs","repos_url":"https://api.github.com/users/kssenii/repos","events_url":"https://api.github.com/users/kssenii/events{/privacy}","received_events_url":"https://api.github.com/users/kssenii/received_events","type":"User","site_admin":false}],"milestone":null,"comments":0,"created_at":"2021-12-06T13:19:54Z","updated_at":"2021-12-06T13:41:03Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"**Describe the unexpected behaviour**\r\nEncountered with a problem with dictionaries when migrating from ODBC source to PostgreSQL source. Data is stored in PostgreSQL in a byte array format, in the ODBC case it is loaded in Clickhouse as a byte array, while in the PostgreSQL case it is loaded as a hex string with `\\x` prefix.\r\n\r\n**How to reproduce**\r\nPostgreSQL version: PostgreSQL 12.8 (Debian 12.8-1.pgdg90+1) on x86_64-pc-linux-gnu, compiled by gcc (Debian 6.3.0-18+deb9u1) 6.3.0 20170516, 64-bit\r\nClickHouse version: 21.8.4.51\r\n\r\nCreate PostgreSQL table:\r\n```\r\ndrop table if exists public.test_table;\r\ncreate table public.test_table (\r\n\traw_value text,\r\n\ttext_value text,\r\n\tbytea_value bytea\r\n);\r\ninsert into public.test_table\r\nvalues ('DEADBEEF', decode('DEADBEEF', 'hex')::text, decode('DEADBEEF', 'hex')::bytea)\r\n;\r\n```\r\n\r\nCreate Clickhouse dictionaries:\r\n```\r\n-- Dictionary with ODBC source\r\nDROP DICTIONARY IF EXISTS test_table_dict_odbc;\r\nCREATE DICTIONARY test_table_dict_odbc\r\n(\r\n    raw_value String,\r\n    text_value String,\r\n    bytea_value String\r\n)\r\nPRIMARY KEY raw_value\r\nSOURCE(ODBC(\r\n    connection_string 'DSN=test_dsn;'\r\n    db 'public'\r\n    table 'test_table'\r\n))\r\nLIFETIME( MIN 86400 MAX 172800)\r\nLAYOUT(complex_key_hashed())\r\n;\r\nSYSTEM RELOAD DICTIONARY test_table_dict_odbc;\r\n\r\n-- Dictionary with PostgreSQL source\r\nDROP DICTIONARY IF EXISTS test_table_dict_pg;\r\nCREATE DICTIONARY test_table_dict_pg\r\n(\r\n    raw_value String,\r\n    text_value String,\r\n    bytea_value String\r\n)\r\nPRIMARY KEY raw_value\r\nSOURCE(POSTGRESQL(\r\n    host 'localhost'\r\n    port 5432\r\n    user 'admin'\r\n    password 'admin'\r\n    db 'test'\r\n    table 'public.test_table'\r\n))\r\nLIFETIME( MIN 86400 MAX 172800)\r\nLAYOUT(complex_key_hashed())\r\n;\r\nSYSTEM RELOAD DICTIONARY test_table_dict_pg;\r\n```\r\n\r\nData in dictionaries:\r\n```\r\nselect *\r\nfrom default.test_table_dict_odbc\r\n;\r\nraw_value |text_value|bytea_value|\r\n----------+----------+-----------+\r\nDEADBEEF  |\\xdeadbeef|ޭ��         |\r\n\r\nselect *\r\nfrom default.test_table_dict_pg\r\n;\r\nraw_value |text_value|bytea_value|\r\n----------+----------+-----------+\r\nDEADBEEF  |\\xdeadbeef|\\xdeadbeef |\r\n```\r\n\r\n**Expected behavior**\r\nFor PostgreSQL source is expected to see the same `bytea_value` as for ODBC source.\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32286/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32286/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32268","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32268/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32268/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32268/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/32268","id":1072002536,"node_id":"I_kwDOA5dJV84_5XXo","number":32268,"title":"Randomization of settings in functional tests.","user":{"login":"alexey-milovidov","id":18581488,"node_id":"MDQ6VXNlcjE4NTgxNDg4","avatar_url":"https://avatars.githubusercontent.com/u/18581488?v=4","gravatar_id":"","url":"https://api.github.com/users/alexey-milovidov","html_url":"https://github.com/alexey-milovidov","followers_url":"https://api.github.com/users/alexey-milovidov/followers","following_url":"https://api.github.com/users/alexey-milovidov/following{/other_user}","gists_url":"https://api.github.com/users/alexey-milovidov/gists{/gist_id}","starred_url":"https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexey-milovidov/subscriptions","organizations_url":"https://api.github.com/users/alexey-milovidov/orgs","repos_url":"https://api.github.com/users/alexey-milovidov/repos","events_url":"https://api.github.com/users/alexey-milovidov/events{/privacy}","received_events_url":"https://api.github.com/users/alexey-milovidov/received_events","type":"User","site_admin":false},"labels":[{"id":521113272,"node_id":"MDU6TGFiZWw1MjExMTMyNzI=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/build","name":"build","color":"800000","default":false,"description":""}],"state":"open","locked":false,"assignee":{"login":"Avogar","id":48961922,"node_id":"MDQ6VXNlcjQ4OTYxOTIy","avatar_url":"https://avatars.githubusercontent.com/u/48961922?v=4","gravatar_id":"","url":"https://api.github.com/users/Avogar","html_url":"https://github.com/Avogar","followers_url":"https://api.github.com/users/Avogar/followers","following_url":"https://api.github.com/users/Avogar/following{/other_user}","gists_url":"https://api.github.com/users/Avogar/gists{/gist_id}","starred_url":"https://api.github.com/users/Avogar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Avogar/subscriptions","organizations_url":"https://api.github.com/users/Avogar/orgs","repos_url":"https://api.github.com/users/Avogar/repos","events_url":"https://api.github.com/users/Avogar/events{/privacy}","received_events_url":"https://api.github.com/users/Avogar/received_events","type":"User","site_admin":false},"assignees":[{"login":"Avogar","id":48961922,"node_id":"MDQ6VXNlcjQ4OTYxOTIy","avatar_url":"https://avatars.githubusercontent.com/u/48961922?v=4","gravatar_id":"","url":"https://api.github.com/users/Avogar","html_url":"https://github.com/Avogar","followers_url":"https://api.github.com/users/Avogar/followers","following_url":"https://api.github.com/users/Avogar/following{/other_user}","gists_url":"https://api.github.com/users/Avogar/gists{/gist_id}","starred_url":"https://api.github.com/users/Avogar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Avogar/subscriptions","organizations_url":"https://api.github.com/users/Avogar/orgs","repos_url":"https://api.github.com/users/Avogar/repos","events_url":"https://api.github.com/users/Avogar/events{/privacy}","received_events_url":"https://api.github.com/users/Avogar/received_events","type":"User","site_admin":false}],"milestone":null,"comments":2,"created_at":"2021-12-06T10:49:44Z","updated_at":"2022-01-18T23:58:23Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"We will create a list of settings and distributions of their values.\r\nThe settings will be randomly set before running functional tests, according to the distributions.\r\nThis can be implemented as a Python code directly inside `clickhouse-test` (no need for any configs or DSLs).\r\n\r\nExamples:\r\n- enable `convert_query_to_cnf` with probability 1/2;\r\n- set `max_block_size` uniformly random in a range of 8000..100000;\r\n- set `max_threads` uniformly random in a range of 1..64;\r\n\r\nIf a test needs fixed value of some setting, it should set it explicitly in the test.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32268/reactions","total_count":2,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32268/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32259","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32259/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32259/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32259/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/32259","id":1071865480,"node_id":"I_kwDOA5dJV84_416I","number":32259,"title":"CPU utilization","user":{"login":"Fallenyasha","id":13795981,"node_id":"MDQ6VXNlcjEzNzk1OTgx","avatar_url":"https://avatars.githubusercontent.com/u/13795981?v=4","gravatar_id":"","url":"https://api.github.com/users/Fallenyasha","html_url":"https://github.com/Fallenyasha","followers_url":"https://api.github.com/users/Fallenyasha/followers","following_url":"https://api.github.com/users/Fallenyasha/following{/other_user}","gists_url":"https://api.github.com/users/Fallenyasha/gists{/gist_id}","starred_url":"https://api.github.com/users/Fallenyasha/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Fallenyasha/subscriptions","organizations_url":"https://api.github.com/users/Fallenyasha/orgs","repos_url":"https://api.github.com/users/Fallenyasha/repos","events_url":"https://api.github.com/users/Fallenyasha/events{/privacy}","received_events_url":"https://api.github.com/users/Fallenyasha/received_events","type":"User","site_admin":false},"labels":[{"id":756395244,"node_id":"MDU6TGFiZWw3NTYzOTUyNDQ=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/performance","name":"performance","color":"c2e0c6","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":11,"created_at":"2021-12-06T08:27:45Z","updated_at":"2021-12-08T14:54:51Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Имеется свежий образ докера с КХ 21.11.4.14 установленный на Windows Docker WSL 2, и на CentOS.\r\nПотребление ЦПУ в районе 0-2%\r\n\r\nСоздаем 500 таблиц вида create table test.table00 (f1 String) engine = MergeTree order by f1;\r\nНагрузка возрастает до 70-90%\r\nСоздаем 2000 таблиц и нагрузка возрастает до 270-300%\r\n\r\nПри этом никакой активности нет.\r\n\r\nВ логе только такие строки\r\n2021.12.06 08:14:05.001473 [ 104 ] {} <Trace> AsynchronousMetrics: MemoryTracking: was 420.87 MiB, peak 1.28 GiB, will set to 424.85 MiB (RSS), difference: 3.98 MiB\r\n2021.12.06 08:14:10.000889 [ 104 ] {} <Trace> AsynchronousMetrics: MemoryTracking: was 428.81 MiB, peak 1.28 GiB, will set to 424.80 MiB (RSS), difference: -4.01 MiB\r\n2021.12.06 08:14:11.000139 [ 104 ] {} <Trace> AsynchronousMetrics: MemoryTracking: was 428.80 MiB, peak 1.28 GiB, will set to 424.84 MiB (RSS), difference: -3.96 MiB\r\n2021.12.06 08:14:13.000247 [ 104 ] {} <Trace> AsynchronousMetrics: MemoryTracking: was 420.81 MiB, peak 1.28 GiB, will set to 424.80 MiB (RSS), difference: 3.99 MiB\r\n2021.12.06 08:14:15.002225 [ 104 ] {} <Trace> AsynchronousMetrics: MemoryTracking: was 428.78 MiB, peak 1.28 GiB, will set to 424.75 MiB (RSS), difference: -4.03 MiB\r\n2021.12.06 08:14:16.000635 [ 104 ] {} <Trace> AsynchronousMetrics: MemoryTracking: was 428.75 MiB, peak 1.28 GiB, will set to 424.77 MiB (RSS), difference: -3.98 MiB\r\n2021.12.06 08:14:17.000131 [ 104 ] {} <Trace> AsynchronousMetrics: MemoryTracking: was 428.77 MiB, peak 1.28 GiB, will set to 424.79 MiB (RSS), difference: -3.99 MiB\r\n2021.12.06 08:14:19.000269 [ 104 ] {} <Trace> AsynchronousMetrics: MemoryTracking: was 416.76 MiB, peak 1.28 GiB, will set to 424.77 MiB (RSS), difference: 8.01 MiB\r\n\r\nПробовал отключать логи, ничего не поменялось\r\n```\r\n<?xml version=\"1.0\"?>\r\n<yandex>\r\n    <asynchronous_metric_log remove=\"1\"/>\r\n    <metric_log remove=\"1\"/>\r\n    <part_log remove=\"1\"/>\r\n    <text_log remove=\"1\"/>\r\n    <trace_log remove=\"1\"/>\r\n</yandex>\r\n\r\n```","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32259/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32259/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32251","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32251/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32251/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32251/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/32251","id":1071530762,"node_id":"I_kwDOA5dJV84_3kMK","number":32251,"title":"Allow keeping primary key in memory partially for partitioned tables","user":{"login":"siradjev","id":10959667,"node_id":"MDQ6VXNlcjEwOTU5NjY3","avatar_url":"https://avatars.githubusercontent.com/u/10959667?v=4","gravatar_id":"","url":"https://api.github.com/users/siradjev","html_url":"https://github.com/siradjev","followers_url":"https://api.github.com/users/siradjev/followers","following_url":"https://api.github.com/users/siradjev/following{/other_user}","gists_url":"https://api.github.com/users/siradjev/gists{/gist_id}","starred_url":"https://api.github.com/users/siradjev/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/siradjev/subscriptions","organizations_url":"https://api.github.com/users/siradjev/orgs","repos_url":"https://api.github.com/users/siradjev/repos","events_url":"https://api.github.com/users/siradjev/events{/privacy}","received_events_url":"https://api.github.com/users/siradjev/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":1365579236,"node_id":"MDU6TGFiZWwxMzY1NTc5MjM2","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/minor","name":"minor","color":"FFF8F8","default":false,"description":"Priority: minor"},{"id":1532016596,"node_id":"MDU6TGFiZWwxNTMyMDE2NTk2","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/memory","name":"memory","color":"e99695","default":false,"description":"When memory usage is higher than expected"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2021-12-05T18:54:30Z","updated_at":"2021-12-13T09:23:03Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"**Use case**\r\n\r\nAs the data keeps growing primary key size keeps increasing, however primary key is same for whole the data, despite that older data is queried way less frequently.\r\nPermanent memory usage however keeps increasing and once data is stored for a very long time, it would stop fitting memory anymore. Larger granularities could be used, however the setting is applicable table-level only,and impacts performance of queries using the key. \r\n\r\n**Describe the solution you'd like**\r\n\r\nPartition-keys are generally small and they can always be kept in memory. \r\nThere are two possible proposals that can also be complementary: \r\n- Define TTL-like construct to specify rule for which partitions to be kept in memory, allowing others to be read from disk on-demand as the query is executed after partition pruning (read all if no partition pruning is in query). \r\n- Define table property whether table index shall be kept in memory enitrely, or in LRU cache of predefined maximum size. This way more frequently used parts cache  will stay in memory, and least used once will be evicted. There could also be multiple priority levels for LRU cache usage, so lower priority ones can't evict higher priority ones. \r\n\r\nThis can be an extension to one of below issues (allowing older data to have different partitioning, and also smaller primary key/primary key not completely in-memory):\r\n- #16565\r\n- #8089\r\n- #18695\r\n\r\n**Describe alternatives you've considered**\r\nMultiple tables over merge engine, but it's maintenance effort would be quite high due to constant need of data moving from one table to another.  \r\nLarger granularity can be used, however, data tends to grow infinitely, and cold data is typically kept on shared storage (S3, network, etc), and cluster memory is not increased proportionally. \r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32251/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32251/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32241","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32241/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32241/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32241/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/32241","id":1071491235,"node_id":"I_kwDOA5dJV84_3aij","number":32241,"title":"RENAME COLUMN on compact parts may take advantage of using hard links for non-changed files","user":{"login":"siradjev","id":10959667,"node_id":"MDQ6VXNlcjEwOTU5NjY3","avatar_url":"https://avatars.githubusercontent.com/u/10959667?v=4","gravatar_id":"","url":"https://api.github.com/users/siradjev","html_url":"https://github.com/siradjev","followers_url":"https://api.github.com/users/siradjev/followers","following_url":"https://api.github.com/users/siradjev/following{/other_user}","gists_url":"https://api.github.com/users/siradjev/gists{/gist_id}","starred_url":"https://api.github.com/users/siradjev/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/siradjev/subscriptions","organizations_url":"https://api.github.com/users/siradjev/orgs","repos_url":"https://api.github.com/users/siradjev/repos","events_url":"https://api.github.com/users/siradjev/events{/privacy}","received_events_url":"https://api.github.com/users/siradjev/received_events","type":"User","site_admin":false},"labels":[{"id":386401510,"node_id":"MDU6TGFiZWwzODY0MDE1MTA=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/question","name":"question","color":"bfdadc","default":true,"description":""},{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":756395244,"node_id":"MDU6TGFiZWw3NTYzOTUyNDQ=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/performance","name":"performance","color":"c2e0c6","default":false,"description":null},{"id":1365579236,"node_id":"MDU6TGFiZWwxMzY1NTc5MjM2","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/minor","name":"minor","color":"FFF8F8","default":false,"description":"Priority: minor"}],"state":"open","locked":false,"assignee":{"login":"CurtizJ","id":20361854,"node_id":"MDQ6VXNlcjIwMzYxODU0","avatar_url":"https://avatars.githubusercontent.com/u/20361854?v=4","gravatar_id":"","url":"https://api.github.com/users/CurtizJ","html_url":"https://github.com/CurtizJ","followers_url":"https://api.github.com/users/CurtizJ/followers","following_url":"https://api.github.com/users/CurtizJ/following{/other_user}","gists_url":"https://api.github.com/users/CurtizJ/gists{/gist_id}","starred_url":"https://api.github.com/users/CurtizJ/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/CurtizJ/subscriptions","organizations_url":"https://api.github.com/users/CurtizJ/orgs","repos_url":"https://api.github.com/users/CurtizJ/repos","events_url":"https://api.github.com/users/CurtizJ/events{/privacy}","received_events_url":"https://api.github.com/users/CurtizJ/received_events","type":"User","site_admin":false},"assignees":[{"login":"CurtizJ","id":20361854,"node_id":"MDQ6VXNlcjIwMzYxODU0","avatar_url":"https://avatars.githubusercontent.com/u/20361854?v=4","gravatar_id":"","url":"https://api.github.com/users/CurtizJ","html_url":"https://github.com/CurtizJ","followers_url":"https://api.github.com/users/CurtizJ/followers","following_url":"https://api.github.com/users/CurtizJ/following{/other_user}","gists_url":"https://api.github.com/users/CurtizJ/gists{/gist_id}","starred_url":"https://api.github.com/users/CurtizJ/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/CurtizJ/subscriptions","organizations_url":"https://api.github.com/users/CurtizJ/orgs","repos_url":"https://api.github.com/users/CurtizJ/repos","events_url":"https://api.github.com/users/CurtizJ/events{/privacy}","received_events_url":"https://api.github.com/users/CurtizJ/received_events","type":"User","site_admin":false}],"milestone":null,"comments":5,"created_at":"2021-12-05T15:48:31Z","updated_at":"2022-01-18T22:43:04Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"**Describe what's wrong**\r\n\r\nRename table in compact parts is supposed to use hard-linking as it does for wide-parts. \r\nHowever, it does not. \r\n\r\n**Does it reproduce on recent release?**\r\n\r\nyes\r\n\r\n**How to reproduce**\r\n\r\n```\r\ndrop table if exists default.tst ;\r\n\r\nCREATE TABLE default.tst\r\n(x Int32,y Int32, val Float32)\r\nENGINE = MergeTree\r\nORDER BY (x)\r\nSETTINGS min_bytes_for_wide_part = 52428800000;\r\n\r\ninsert into default.tst\r\nselect x,y,val from generateRandom('x Int32,y Int32, val Float32')\r\nlimit 15000;\r\n\r\nalter table default.tst RENAME column val to val2;\r\n```\r\n\r\nChecking filesystem (before old part gets deleted): \r\n```\r\n[root@server tst]# ls -ll all*/\r\nall_1_1_0/:\r\ntotal 204\r\n-rw-r-----. 1 clickhouse clickhouse    190 Dec  5 17:37 checksums.txt\r\n-rw-r-----. 1 clickhouse clickhouse     71 Dec  5 17:37 columns.txt\r\n-rw-r-----. 1 clickhouse clickhouse      5 Dec  5 17:37 count.txt\r\n-rw-r-----. 1 clickhouse clickhouse 180864 Dec  5 17:37 data.bin\r\n-rw-r-----. 1 clickhouse clickhouse    168 Dec  5 17:37 data.mrk3\r\n-rw-r-----. 1 clickhouse clickhouse     10 Dec  5 17:37 default_compression_codec.txt\r\n-rw-r-----. 1 clickhouse clickhouse     12 Dec  5 17:37 primary.idx\r\n\r\nall_1_1_0_2/:\r\ntotal 204\r\n-rw-r-----. 1 clickhouse clickhouse    190 Dec  5 17:37 checksums.txt\r\n-rw-r-----. 1 clickhouse clickhouse     72 Dec  5 17:37 columns.txt\r\n-rw-r-----. 1 clickhouse clickhouse      5 Dec  5 17:37 count.txt\r\n-rw-r-----. 1 clickhouse clickhouse 180864 Dec  5 17:37 data.bin\r\n-rw-r-----. 1 clickhouse clickhouse    168 Dec  5 17:37 data.mrk3\r\n-rw-r-----. 1 clickhouse clickhouse     10 Dec  5 17:37 default_compression_codec.txt\r\n-rw-r-----. 1 clickhouse clickhouse     12 Dec  5 17:37 primary.idx\r\n```\r\n\r\nAs seen above all the files are shown with hardlink count as 1. \r\nIt is correct if wide part is used. Only checksum and columns.txt and default_compression_codec (this shall probably be hardlinked too) files are ,modified and copied, others are hardlinked. \r\n```\r\nall_2_2_0/:\r\ntotal 212\r\n-rw-r-----. 1 clickhouse clickhouse   287 Dec  5 17:32 checksums.txt\r\n-rw-r-----. 1 clickhouse clickhouse    71 Dec  5 17:32 columns.txt\r\n-rw-r-----. 2 clickhouse clickhouse     5 Dec  5 17:32 count.txt\r\n-rw-r-----. 1 clickhouse clickhouse    10 Dec  5 17:32 default_compression_codec.txt\r\n-rw-r-----. 2 clickhouse clickhouse    12 Dec  5 17:32 primary.idx\r\n-rw-r-----. 2 clickhouse clickhouse 60262 Dec  5 17:32 val.bin\r\n-rw-r-----. 2 clickhouse clickhouse    72 Dec  5 17:32 val.mrk2\r\n-rw-r-----. 2 clickhouse clickhouse 60262 Dec  5 17:32 x.bin\r\n-rw-r-----. 2 clickhouse clickhouse    72 Dec  5 17:32 x.mrk2\r\n-rw-r-----. 2 clickhouse clickhouse 60262 Dec  5 17:32 y.bin\r\n-rw-r-----. 2 clickhouse clickhouse    72 Dec  5 17:32 y.mrk2\r\n\r\nall_2_2_0_3/:\r\ntotal 212\r\n-rw-r-----. 1 clickhouse clickhouse   288 Dec  5 17:33 checksums.txt\r\n-rw-r-----. 1 clickhouse clickhouse    72 Dec  5 17:33 columns.txt\r\n-rw-r-----. 2 clickhouse clickhouse     5 Dec  5 17:32 count.txt\r\n-rw-r-----. 1 clickhouse clickhouse    10 Dec  5 17:33 default_compression_codec.txt\r\n-rw-r-----. 2 clickhouse clickhouse    12 Dec  5 17:32 primary.idx\r\n-rw-r-----. 2 clickhouse clickhouse 60262 Dec  5 17:32 val2.bin\r\n-rw-r-----. 2 clickhouse clickhouse    72 Dec  5 17:32 val2.mrk2\r\n-rw-r-----. 2 clickhouse clickhouse 60262 Dec  5 17:32 x.bin\r\n-rw-r-----. 2 clickhouse clickhouse    72 Dec  5 17:32 x.mrk2\r\n-rw-r-----. 2 clickhouse clickhouse 60262 Dec  5 17:32 y.bin\r\n-rw-r-----. 2 clickhouse clickhouse    72 Dec  5 17:32 y.mrk2\r\n```\r\n\r\nIt causes negative performance impact when part is large. \r\n\r\n**Expected behavior**\r\n\r\nHard-linking shall be used for files except modified ones.\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32241/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32241/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32239","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32239/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32239/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32239/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/32239","id":1071466790,"node_id":"I_kwDOA5dJV84_3Ukm","number":32239,"title":"High memory usage when many temp files are generated during external group by","user":{"login":"siradjev","id":10959667,"node_id":"MDQ6VXNlcjEwOTU5NjY3","avatar_url":"https://avatars.githubusercontent.com/u/10959667?v=4","gravatar_id":"","url":"https://api.github.com/users/siradjev","html_url":"https://github.com/siradjev","followers_url":"https://api.github.com/users/siradjev/followers","following_url":"https://api.github.com/users/siradjev/following{/other_user}","gists_url":"https://api.github.com/users/siradjev/gists{/gist_id}","starred_url":"https://api.github.com/users/siradjev/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/siradjev/subscriptions","organizations_url":"https://api.github.com/users/siradjev/orgs","repos_url":"https://api.github.com/users/siradjev/repos","events_url":"https://api.github.com/users/siradjev/events{/privacy}","received_events_url":"https://api.github.com/users/siradjev/received_events","type":"User","site_admin":false},"labels":[{"id":1532016596,"node_id":"MDU6TGFiZWwxNTMyMDE2NTk2","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/memory","name":"memory","color":"e99695","default":false,"description":"When memory usage is higher than expected"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-12-05T14:00:12Z","updated_at":"2021-12-05T20:57:16Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"**Describe what's wrong**\r\nWhen many temp files are generated with parts of aggregation data, high memory is allocated prior to merging temporary files. \r\nTypically happens when source data is too big, or there is join used in query that occupies memory. \r\n\r\n**Does it reproduce on recent release?**\r\nYes. \r\n\r\n**How to reproduce**\r\n\r\nInitial data preparation\r\n```\r\ndrop table if exists data_table;\r\ncreate table data_table(paramkey UInt64, ind UInt64) Engine=MergeTree() Order By paramkey;\r\n\r\ninsert into data_table select * from(\r\n    select \r\n        paramkey, rowNumberInAllBlocks() as ind\r\n    from generateRandom('paramkey UInt64')\r\n    limit 150000000\r\n);\r\noptimize table data_table final;\r\nset send_logs_level='trace';\r\n```\r\n\r\nComparison of memory usage: \r\nLarge max_bytes_before_external_group_by, generates 104 temporary files, no big overhead (1.33GB RAM). \r\n```\r\n\tselect \r\n\t\tparamkey,\r\n\t\tmin(1) as paramname\r\n\tfrom data_table\r\n    where ind < 150000000\r\n    group by paramkey\r\n\tSETTINGS max_bytes_before_external_group_by=1000000000,max_memory_usage=8000000000\r\n\tFormat Null;\r\n...\r\n\r\n[servername] 2021.12.05 15:16:57.061378 [ 13680 ] {b7cbb6f6-572a-4b90-830b-83ec33ac8f12} <Debug> AggregatingTransform: Will merge 104 temporary files of size 1.13 GiB compressed, 1.40 GiB uncompressed.\r\n...\r\n[servername] 2021.12.05 15:17:02.870481 [ 13670 ] {b7cbb6f6-572a-4b90-830b-83ec33ac8f12} <Debug> MemoryTracker: Peak memory usage (for query): 1.33 GiB.\r\n```\r\n\r\nSmall max_bytes_before_external_group_by, generates 2222 temporary files, huge extra RAM usage overhead (almost 5GB query RAM usage). \r\n```\r\n\tselect \r\n\t\tparamkey,\r\n\t\tmin(1) as paramname\r\n\tfrom data_table\r\n    where ind < 150000000\r\n    group by paramkey\r\n\tSETTINGS max_bytes_before_external_group_by=1000,max_memory_usage=8000000000\r\n\tFormat Null;\r\n...\r\n\r\n[servername] 2021.12.05 15:40:45.532204 [ 13680 ] {39ceaeb0-2150-4906-bc95-52e6dba45eb3} <Debug> MemoryTracker: Current memory usage (for query): 1.00 GiB.\r\n[servername] 2021.12.05 15:40:45.554450 [ 13680 ] {39ceaeb0-2150-4906-bc95-52e6dba45eb3} <Debug> MemoryTracker: Current memory usage (for query): 2.00 GiB.\r\n[servername] 2021.12.05 15:40:45.560685 [ 13680 ] {39ceaeb0-2150-4906-bc95-52e6dba45eb3} <Debug> AggregatingTransform: Will merge 2222 temporary files of size 1.13 GiB compressed, 1.43 GiB uncompressed.\r\n[servername] 2021.12.05 15:40:45.798044 [ 13821 ] {39ceaeb0-2150-4906-bc95-52e6dba45eb3} <Debug> MemoryTracker: Current memory usage (for query): 3.00 GiB.\r\n[servername] 2021.12.05 15:40:45.849359 [ 13822 ] {39ceaeb0-2150-4906-bc95-52e6dba45eb3} <Debug> MemoryTracker: Current memory usage (total): 4.00 GiB.\r\n[servername] 2021.12.05 15:40:46.012022 [ 13821 ] {39ceaeb0-2150-4906-bc95-52e6dba45eb3} <Debug> MemoryTracker: Current memory usage (for query): 4.00 GiB.\r\n...\r\n[servername] 2021.12.05 15:41:20.163973 [ 13670 ] {39ceaeb0-2150-4906-bc95-52e6dba45eb3} <Debug> MemoryTracker: Peak memory usage (for query): 4.94 GiB.\r\n```\r\n\r\n\r\nTypically problem occurs when there is group by in combination with join, so when join uses a lot of memory, it makes clickhouse produce many small parts of aggregation data, and RAM usage becomes huge before merging temporary files happen.  \r\n\r\nExample: \r\n```\r\nselect\r\n    paramkey,\r\n    paramname,\r\n    rightSide.externalData\r\nfrom\r\n(\r\n\tselect \r\n\t\tparamkey,\r\n\t\tmin(1) as paramname\r\n\tfrom data_table\r\n    group by paramkey\r\n) as leftSide\r\njoin\r\n(\r\n    select \r\n        paramkey,\r\n        externalData\r\n    from generateRandom('paramkey UInt64, externalData UInt64') limit 10000000\r\n) as rightSide\r\non leftSide.paramkey = rightSide.paramkey \r\nSETTINGS max_bytes_before_external_group_by=1000000000,max_memory_usage=8000000000\r\n...\r\n[servername] 2021.12.05 15:48:35.938606 [ 22276 ] {36821d37-dbc9-4758-91ea-55351cb5ce2d} <Debug> MemoryTracker: Current memory usage (for query): 2.00 GiB.\r\n[servername] 2021.12.05 15:48:35.956252 [ 22276 ] {36821d37-dbc9-4758-91ea-55351cb5ce2d} <Debug> MemoryTracker: Current memory usage (for query): 3.00 GiB.\r\n[servername] 2021.12.05 15:48:35.974271 [ 22276 ] {36821d37-dbc9-4758-91ea-55351cb5ce2d} <Debug> MemoryTracker: Current memory usage (for query): 4.00 GiB.\r\n[servername] 2021.12.05 15:48:35.979011 [ 22276 ] {36821d37-dbc9-4758-91ea-55351cb5ce2d} <Debug> AggregatingTransform: Will merge 3063 temporary files of size 1.13 GiB compressed, 1.44 GiB uncompressed.\r\n[servername] 2021.12.05 15:48:36.234543 [ 22278 ] {36821d37-dbc9-4758-91ea-55351cb5ce2d} <Debug> MemoryTracker: Current memory usage (for query): 5.00 GiB.\r\n[servername] 2021.12.05 15:48:36.473565 [ 22276 ] {36821d37-dbc9-4758-91ea-55351cb5ce2d} <Debug> MemoryTracker: Current memory usage (for query): 6.00 GiB.\r\n[servername] 2021.12.05 15:48:36.651874 [ 22276 ] {36821d37-dbc9-4758-91ea-55351cb5ce2d} <Debug> MemoryTracker: Current memory usage (for query): 7.00 GiB.\r\n[servername] 2021.12.05 15:48:36.730653 [ 13670 ] {36821d37-dbc9-4758-91ea-55351cb5ce2d} <Error> executeQuery: Code: 241. DB::Exception: Memory limit (for query) exceeded: would use 7.45 GiB (attempt to allocate chunk of 4527522 bytes), maximum: 7.45 GiB: While executing SourceFromNativeStream. (MEMORY_LIMIT_EXCEEDED) (version 21.11.5.33 (official build)) (from [::ffff:10.10.10.134]:63358) (in query: select paramkey, paramname, rightSide.externalData from ( select paramkey, min(1) as paramname from data_table group by paramkey ) as leftSide join ( select paramkey, externalData from generateRandom('paramkey UInt64, externalData UInt64') limit 10000000 ) as rightSide on leftSide.paramkey = rightSide.paramkey SETTINGS max_bytes_before_external_group_by=1000000000,max_memory_usage=8000000000;), Stack trace (when copying this message, always include the lines below):\r\n...\r\n```\r\n\r\nReducing threads does not help, clickhouse seem to allocate RAM depending on number of temp files right away before any merging starts. \r\nNormally it would be more logical to allocate RAM as it's needed and depending on threads count.  \r\n\r\n\r\n\r\n\r\n* Which ClickHouse server version to use\r\nHappens on 21.3, 21.8 and 21.11\r\n\r\n**Expected behavior**\r\nIt is expected clickhouse not to use memory depending on number of temporary files generated, since overall volume does not change. \r\n\r\nIt may also be useful to introduce additional setting that would identify minimum additional memory that can be used before writing file to disk before external aggregation irrelevant of overall query RAM usage (ignoring the RAM used by joins and other subqueries). Something like `max_bytes_for_external_aggregation_parts` or any other name. This way we can specify the minimum size of RAM that clickhouse and query performance will be stable, disregarding the other aspects of query (joins, other aggregations, etc). \r\n\r\n**Additional context**\r\nDidn't test sorting, but expect similar issue there. \r\nCurrently there is no real workaround to this problem, except trying to guess what would be utilized by the right side table join, trying to adjust max_bytes_before_external_group_by for each query. \r\n\r\nCredits to @ahmeturun and @i-sinister for digging in code and reproducing the issue. ","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32239/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32239/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32238","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32238/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32238/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32238/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/32238","id":1071457396,"node_id":"I_kwDOA5dJV84_3SR0","number":32238,"title":"Show progress by default in non-interactive mode if stderr is a terminal.","user":{"login":"alexey-milovidov","id":18581488,"node_id":"MDQ6VXNlcjE4NTgxNDg4","avatar_url":"https://avatars.githubusercontent.com/u/18581488?v=4","gravatar_id":"","url":"https://api.github.com/users/alexey-milovidov","html_url":"https://github.com/alexey-milovidov","followers_url":"https://api.github.com/users/alexey-milovidov/followers","following_url":"https://api.github.com/users/alexey-milovidov/following{/other_user}","gists_url":"https://api.github.com/users/alexey-milovidov/gists{/gist_id}","starred_url":"https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexey-milovidov/subscriptions","organizations_url":"https://api.github.com/users/alexey-milovidov/orgs","repos_url":"https://api.github.com/users/alexey-milovidov/repos","events_url":"https://api.github.com/users/alexey-milovidov/events{/privacy}","received_events_url":"https://api.github.com/users/alexey-milovidov/received_events","type":"User","site_admin":false},"labels":[{"id":845247686,"node_id":"MDU6TGFiZWw4NDUyNDc2ODY=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/usability","name":"usability","color":"ebf28c","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2021-12-05T13:17:52Z","updated_at":"2021-12-06T00:13:36Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"Motivation: I want all the beauty by default.\r\n\r\nAlso change the behaviour of `--progress` option.\r\n`--progress 0` will turn off the progress indication.\r\n\r\nDownsides: if you run a shell script with multiple invocations of clickhouse-client, you will also see the progress of every invocation while the script is being run. Actually this can be considered as improvement.\r\n\r\nAlternatively we can write progress to `/dev/tty` instead of stderr. It will allow to show progress even if stderr is redirected.\r\nBut it may look too surprising for user.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32238/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32238/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32228","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32228/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32228/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32228/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/32228","id":1071159953,"node_id":"I_kwDOA5dJV84_2JqR","number":32228,"title":"bfloat16 histogram state merging is slow when compared with tdigest","user":{"login":"vmihailenco","id":290976,"node_id":"MDQ6VXNlcjI5MDk3Ng==","avatar_url":"https://avatars.githubusercontent.com/u/290976?v=4","gravatar_id":"","url":"https://api.github.com/users/vmihailenco","html_url":"https://github.com/vmihailenco","followers_url":"https://api.github.com/users/vmihailenco/followers","following_url":"https://api.github.com/users/vmihailenco/following{/other_user}","gists_url":"https://api.github.com/users/vmihailenco/gists{/gist_id}","starred_url":"https://api.github.com/users/vmihailenco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vmihailenco/subscriptions","organizations_url":"https://api.github.com/users/vmihailenco/orgs","repos_url":"https://api.github.com/users/vmihailenco/repos","events_url":"https://api.github.com/users/vmihailenco/events{/privacy}","received_events_url":"https://api.github.com/users/vmihailenco/received_events","type":"User","site_admin":false},"labels":[{"id":756395244,"node_id":"MDU6TGFiZWw3NTYzOTUyNDQ=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/performance","name":"performance","color":"c2e0c6","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2021-12-04T08:41:56Z","updated_at":"2021-12-28T11:14:55Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"If looks like bfloat16 state merging is at least 2x times slower than tdigest even though compressed bfloat16 histogram is smaller on disk and faster in some/most benchmarks. Does bfloat16 merging requires more computational resources or there is an inefficiency in current implementation?\r\n\r\nFor example, for this table:\r\n\r\n```sql\r\nCREATE TABLE test (\r\n  td AggregateFunction(quantilesTDigest(0.5, 0.9, 0.99), UInt64),\r\n  bf AggregateFunction(quantilesBFloat16(0.5, 0.9, 0.99), UInt64),\r\n  grouping_key UInt64\r\n)\r\nENGINE = SummingMergeTree()\r\nORDER BY (grouping_key);\r\n\r\ninsert into test\r\nselect\r\n  quantilesTDigestState(0.5, 0.9, 0.99)(number),\r\n  quantilesBFloat16State(0.5, 0.9, 0.99)(number),\r\n  number % 10000 as grouping_key\r\nfrom numbers(10e7)\r\ngroup by grouping_key;\r\n\r\noptimize table test final;\r\n```\r\n\r\n**TDigest**:\r\n\r\n```sql\r\nSELECT quantilesTDigestMerge(0.5)(td)\r\nFROM test\r\n\r\nQuery id: 2ec3e5e3-49fe-46be-9208-be8201b4775a\r\n\r\n┌─quantilesTDigestMerge(0.5)(td)─┐\r\n│ [100047170]                    │\r\n└────────────────────────────────┘\r\n\r\n1 rows in set. Elapsed: 0.172 sec. Processed 10.00 thousand rows, 2.43 MB (58.24 thousand rows/s., 14.16 MB/s.)\r\n```\r\n\r\n**BFloat16**:\r\n\r\n```sql\r\nSELECT quantilesBFloat16Merge(0.5)(bf)\r\nFROM test\r\n\r\nQuery id: b72df84a-30db-4dbf-9fab-d24902e3bf2a\r\n\r\n┌─quantilesBFloat16Merge(0.5)(bf)─┐\r\n│ [99614720]                      │\r\n└─────────────────────────────────┘\r\n\r\n1 rows in set. Elapsed: 0.425 sec. Processed 10.00 thousand rows, 5.31 MB (23.51 thousand rows/s., 12.50 MB/s.)\r\n```\r\n\r\nThe situation is similar with production data.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32228/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32228/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32171","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32171/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32171/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32171/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/32171","id":1070228883,"node_id":"I_kwDOA5dJV84_ymWT","number":32171,"title":"AggregateFunction column in external table didn't work","user":{"login":"zhicwu","id":4270380,"node_id":"MDQ6VXNlcjQyNzAzODA=","avatar_url":"https://avatars.githubusercontent.com/u/4270380?v=4","gravatar_id":"","url":"https://api.github.com/users/zhicwu","html_url":"https://github.com/zhicwu","followers_url":"https://api.github.com/users/zhicwu/followers","following_url":"https://api.github.com/users/zhicwu/following{/other_user}","gists_url":"https://api.github.com/users/zhicwu/gists{/gist_id}","starred_url":"https://api.github.com/users/zhicwu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zhicwu/subscriptions","organizations_url":"https://api.github.com/users/zhicwu/orgs","repos_url":"https://api.github.com/users/zhicwu/repos","events_url":"https://api.github.com/users/zhicwu/events{/privacy}","received_events_url":"https://api.github.com/users/zhicwu/received_events","type":"User","site_admin":false},"labels":[{"id":1575085465,"node_id":"MDU6TGFiZWwxNTc1MDg1NDY1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/unexpected%20behaviour","name":"unexpected behaviour","color":"e088ca","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2021-12-03T05:18:05Z","updated_at":"2021-12-06T05:58:25Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Below is the code snippet in Java trying to use bitmap as a query parameter:\r\n```java\r\ntry (ClickHouseConnection conn = newConnection(new Properties());\r\n        PreparedStatement stmt = conn.prepareStatement(\r\n                \"SELECT bitmapContains(my_bitmap, toUInt32(1)) as v1, bitmapContains(my_bitmap, toUInt32(2)) as v2 from ext_table\")) {\r\n    ClickHouseRequest<?> request = stmt.unwrap(ClickHouseRequest.class);\r\n    request.addExternal(ClickHouseExternalTable.builder().name(\"ext_table\")\r\n            .columns(\"my_bitmap AggregateFunction(groupBitmap,UInt32)\").format(ClickHouseFormat.RowBinary)\r\n            .content(new ByteArrayInputStream(ClickHouseBitmap.wrap(1, 3, 5).toBytes())).build());\r\n    ResultSet rs = stmt.executeQuery();\r\n    Assert.assertTrue(rs.next());\r\n    Assert.assertEquals(rs.getInt(1), 1);\r\n    Assert.assertEquals(rs.getInt(2), 0);\r\n    Assert.assertFalse(rs.next());\r\n}\r\n```\r\n\r\nUnfortunately it didn't work because of below check. Is it just a parsing error should be fixed or it's a limitation of external table by design?\r\n\r\nhttps://github.com/ClickHouse/ClickHouse/blob/b7fb21e6f0d8941df7b80c2fb460f11b3c785993/src/Core/ExternalTable.cpp#L57-L61\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32171/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32171/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32139","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32139/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32139/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32139/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/32139","id":1069626878,"node_id":"I_kwDOA5dJV84_wTX-","number":32139,"title":"AST is too big error on query with a lot of inner subqueries","user":{"login":"vpanfilov","id":11993879,"node_id":"MDQ6VXNlcjExOTkzODc5","avatar_url":"https://avatars.githubusercontent.com/u/11993879?v=4","gravatar_id":"","url":"https://api.github.com/users/vpanfilov","html_url":"https://github.com/vpanfilov","followers_url":"https://api.github.com/users/vpanfilov/followers","following_url":"https://api.github.com/users/vpanfilov/following{/other_user}","gists_url":"https://api.github.com/users/vpanfilov/gists{/gist_id}","starred_url":"https://api.github.com/users/vpanfilov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vpanfilov/subscriptions","organizations_url":"https://api.github.com/users/vpanfilov/orgs","repos_url":"https://api.github.com/users/vpanfilov/repos","events_url":"https://api.github.com/users/vpanfilov/events{/privacy}","received_events_url":"https://api.github.com/users/vpanfilov/received_events","type":"User","site_admin":false},"labels":[{"id":1575085465,"node_id":"MDU6TGFiZWwxNTc1MDg1NDY1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/unexpected%20behaviour","name":"unexpected behaviour","color":"e088ca","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-12-02T14:40:34Z","updated_at":"2021-12-02T14:40:34Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Hello, we found a strange problem arising with high number of inner subqueries. For example, the following query:\r\n```sql\r\nWITH\r\n  data AS (\r\n    SELECT\r\n      rand64() AS val1,\r\n      rand64() AS val2,\r\n      rand64() AS val3,\r\n      rand64() AS val4,\r\n      rand64() AS val5,\r\n      rand64() AS val6,\r\n      rand64() AS val7,\r\n      rand64() AS val8,\r\n      rand64() AS val9,\r\n      rand64() AS val10,\r\n      rand64() AS val11,\r\n      rand64() AS val12,\r\n      rand64() AS val13,\r\n      rand64() AS val14\r\n    FROM numbers(10)\r\n  ),\r\n  (SELECT avg(val1) FROM data) AS value1,\r\n  (SELECT avg(val2) FROM data) AS value2,\r\n  (SELECT avg(val3) FROM data) AS value3,\r\n  (SELECT avg(val4) FROM data) AS value4,\r\n  (SELECT avg(val5) FROM data) AS value5,\r\n  (SELECT avg(val6) FROM data) AS value6,\r\n  (SELECT avg(val7) FROM data) AS value7,\r\n  (SELECT avg(val8) FROM data) AS value8,\r\n  (SELECT avg(val9) FROM data) AS value9,\r\n  (SELECT avg(val10) FROM data) AS value10,\r\n  (SELECT avg(val11) FROM data) AS value11,\r\n  (SELECT avg(val12) FROM data) AS value12,\r\n  (SELECT avg(val13) FROM data) AS value13,\r\n  (SELECT avg(val14) FROM data) AS value14\r\nSELECT\r\n  value1 AS v1,\r\n  value2 AS v2,\r\n  value3 AS v3,\r\n  value4 AS v4,\r\n  value5 AS v5,\r\n  value6 AS v6,\r\n  value7 AS v7,\r\n  value8 AS v8,\r\n  value9 AS v9,\r\n  value10 AS v10,\r\n  value11 AS v11,\r\n  value12 AS v12,\r\n  value13 AS v13,\r\n  value14 AS v14\r\n```\r\ngive an error `Code: 168. DB::Exception: AST is too big. Maximum: 500000: (after expansion of aliases). (TOO_BIG_AST) (version 21.11.3.6 (official build))`\r\n\r\nBut if we wrap all inner subqueries in a new CTE like this:\r\n\r\n```sql\r\nWITH\r\n  data AS (\r\n    SELECT\r\n      rand64() AS val1,\r\n      rand64() AS val2,\r\n      rand64() AS val3,\r\n      rand64() AS val4,\r\n      rand64() AS val5,\r\n      rand64() AS val6,\r\n      rand64() AS val7,\r\n      rand64() AS val8,\r\n      rand64() AS val9,\r\n      rand64() AS val10,\r\n      rand64() AS val11,\r\n      rand64() AS val12,\r\n      rand64() AS val13,\r\n      rand64() AS val14\r\n    FROM numbers(10)\r\n  ),\r\n  result AS (\r\n    SELECT\r\n      (SELECT avg(val1) FROM data) AS value1,\r\n      (SELECT avg(val2) FROM data) AS value2,\r\n      (SELECT avg(val3) FROM data) AS value3,\r\n      (SELECT avg(val4) FROM data) AS value4,\r\n      (SELECT avg(val5) FROM data) AS value5,\r\n      (SELECT avg(val6) FROM data) AS value6,\r\n      (SELECT avg(val7) FROM data) AS value7,\r\n      (SELECT avg(val8) FROM data) AS value8,\r\n      (SELECT avg(val9) FROM data) AS value9,\r\n      (SELECT avg(val10) FROM data) AS value10,\r\n      (SELECT avg(val11) FROM data) AS value11,\r\n      (SELECT avg(val12) FROM data) AS value12,\r\n      (SELECT avg(val13) FROM data) AS value13,\r\n      (SELECT avg(val14) FROM data) AS value14\r\n  )\r\nSELECT\r\n  value1 AS v1,\r\n  value2 AS v2,\r\n  value3 AS v3,\r\n  value4 AS v4,\r\n  value5 AS v5,\r\n  value6 AS v6,\r\n  value7 AS v7,\r\n  value8 AS v8,\r\n  value9 AS v9,\r\n  value10 AS v10,\r\n  value11 AS v11,\r\n  value12 AS v12,\r\n  value13 AS v13,\r\n  value14 AS v14\r\nFROM result\r\n```\r\n\r\nThe second query looks almost identical, but is working fast and without AST overflow. Can you explain this behaviour?\r\n\r\nTested on Clickhouse versions 21.3 - 21.11.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32139/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32139/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32109","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32109/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32109/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32109/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/32109","id":1069039044,"node_id":"I_kwDOA5dJV84_uD3E","number":32109,"title":"Creating a table without a primary key will cause MaterializedMySQL to fail. Can you skip the table without a primary key and continue to synchronize?","user":{"login":"chinayangze","id":1415438,"node_id":"MDQ6VXNlcjE0MTU0Mzg=","avatar_url":"https://avatars.githubusercontent.com/u/1415438?v=4","gravatar_id":"","url":"https://api.github.com/users/chinayangze","html_url":"https://github.com/chinayangze","followers_url":"https://api.github.com/users/chinayangze/followers","following_url":"https://api.github.com/users/chinayangze/following{/other_user}","gists_url":"https://api.github.com/users/chinayangze/gists{/gist_id}","starred_url":"https://api.github.com/users/chinayangze/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/chinayangze/subscriptions","organizations_url":"https://api.github.com/users/chinayangze/orgs","repos_url":"https://api.github.com/users/chinayangze/repos","events_url":"https://api.github.com/users/chinayangze/events{/privacy}","received_events_url":"https://api.github.com/users/chinayangze/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-12-02T01:44:03Z","updated_at":"2021-12-02T01:44:03Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Creating a table without a primary key will cause MaterializedMySQL to fail. Can you skip the table without a primary key and continue to synchronize?","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32109/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32109/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32107","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32107/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32107/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32107/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/32107","id":1068942704,"node_id":"I_kwDOA5dJV84_tsVw","number":32107,"title":"Error with AggregateFunction quantilesTDigest causing part merges to fail","user":{"login":"jamesmaidment","id":2050324,"node_id":"MDQ6VXNlcjIwNTAzMjQ=","avatar_url":"https://avatars.githubusercontent.com/u/2050324?v=4","gravatar_id":"","url":"https://api.github.com/users/jamesmaidment","html_url":"https://github.com/jamesmaidment","followers_url":"https://api.github.com/users/jamesmaidment/followers","following_url":"https://api.github.com/users/jamesmaidment/following{/other_user}","gists_url":"https://api.github.com/users/jamesmaidment/gists{/gist_id}","starred_url":"https://api.github.com/users/jamesmaidment/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jamesmaidment/subscriptions","organizations_url":"https://api.github.com/users/jamesmaidment/orgs","repos_url":"https://api.github.com/users/jamesmaidment/repos","events_url":"https://api.github.com/users/jamesmaidment/events{/privacy}","received_events_url":"https://api.github.com/users/jamesmaidment/received_events","type":"User","site_admin":false},"labels":[{"id":1546506700,"node_id":"MDU6TGFiZWwxNTQ2NTA2NzAw","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-functions","name":"comp-functions","color":"b5bcff","default":false,"description":"Relates to some SQL function"},{"id":3260776666,"node_id":"MDU6TGFiZWwzMjYwNzc2NjY2","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/potential%20bug","name":"potential bug","color":"ffc080","default":false,"description":"To be reviewed by developers and confirmed/rejected."}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2021-12-01T22:44:49Z","updated_at":"2021-12-13T09:45:41Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"**Describe what's wrong**\r\n\r\nWe had an issue with `INSERT`s into ClickHouse throwing an error:\r\n\r\n```\r\n2021-11-29 18:26:13.177 ESTError message from worker: ru.yandex.clickhouse.except.ClickHouseUnknownException: ClickHouse exception, code: 1002, host: <clickhouse_host>, port: 8123; Code: 252. DB::Exception: Too many parts (301). Merges are processing significantly slower than inserts: while pushing to view default.metrics_shard_stat_10m_view (aa99702d-bd2c-4aca-aa99-702dbd2c6aca): while pushing to view default.metrics_shard_stat_1m_view (c2e4400c-c18e-46ae-82e4-400cc18ef6ae). (TOO_MANY_PARTS) (version 21.11.3.6 (official build))\r\n```\r\n\r\nUpon investigation it appeared that there were a large amount of unmerged parts for the `metrics_shard_stat_10m` table. This seems to be due to this error thrown during a `deserialize` of an `AggregateFunction` `quantilesTDigest()`. This was also causing the node to have a very high CPU usage.\r\n\r\n**Does it reproduce on recent release?**\r\n\r\nWe're using ClickHouse server version ` 21.11.3.6`\r\n\r\n**Table Schema**\r\n\r\n`metrics_shard_stat_1m`:\r\n```\r\nCREATE TABLE default.metrics_shard_stat_1m ON CLUSTER testcluster\r\n(\r\n    metric_id                  UUID,\r\n    date                       Date DEFAULT toDate(bucket) CODEC (DoubleDelta),\r\n    bucket                     DateTime CODEC (DoubleDelta, LZ4),\r\n    s_avg                      AggregateFunction(avg, Float64),\r\n    s_count                    AggregateFunction(count, Float64),\r\n    sum                        SimpleAggregateFunction(sum, Float64) CODEC (Gorilla),\r\n    sum2                       SimpleAggregateFunction(sum, Float64) CODEC (Gorilla),\r\n    min                        SimpleAggregateFunction(min, Float64) CODEC (Gorilla),\r\n    max                        SimpleAggregateFunction(max, Float64) CODEC (Gorilla),\r\n    first                      SimpleAggregateFunction(any, Float64) CODEC (Gorilla),\r\n    last                       SimpleAggregateFunction(any, Float64) CODEC (Gorilla),\r\n    s_linear_regression        AggregateFunction(simpleLinearRegression, UInt32, Float64),\r\n    s_variance                 AggregateFunction(varSamp, Float64),\r\n    s_quantiles                AggregateFunction(quantilesTDigest(0.10, 0.25, 0.50, 0.75, 0.90, 0.95, 0.99),\r\n                                   Float64),\r\n    s_avg_nozero               AggregateFunction(avg, Float64),\r\n    s_count_nozero             AggregateFunction(count, Float64),\r\n    sum_nozero                 SimpleAggregateFunction(sum, Float64) CODEC (Gorilla),\r\n    min_nozero                 SimpleAggregateFunction(min, Float64) CODEC (Gorilla),\r\n    max_nozero                 SimpleAggregateFunction(max, Float64) CODEC (Gorilla),\r\n    first_nozero               SimpleAggregateFunction(any, Float64) CODEC (Gorilla),\r\n    last_nozero                SimpleAggregateFunction(any, Float64) CODEC (Gorilla),\r\n    s_linear_regression_nozero AggregateFunction(simpleLinearRegression, UInt32, Float64),\r\n    s_variance_nozero          AggregateFunction(varSamp, Float64),\r\n    s_quantiles_nozero         AggregateFunction(quantilesTDigest(0.10, 0.25, 0.50, 0.75, 0.90, 0.95, 0.99),\r\n                                   Float64)\r\n) ENGINE = ReplicatedAggregatingMergeTree() PARTITION BY toYYYYMM(bucket)\r\n      ORDER BY (metric_id, date, bucket) SETTINGS index_granularity = 64;\r\n\r\nCREATE MATERIALIZED VIEW default.metrics_shard_stat_1m_view ON CLUSTER testcluster TO default.metrics_shard_stat_1m AS\r\nSELECT metric_id,\r\n       date,\r\n       toStartOfMinute(toDateTime64(timestamp, 3))                                         as bucket,\r\n       avgState(value)                                                                     as s_avg,\r\n       countState(value)                                                                   as s_count,\r\n       sum(value)                                                                          as sum,\r\n       sum(value * value)                                                                  as sum2,\r\n       min(value)                                                                          as min,\r\n       max(value)                                                                          as max,\r\n       any(value)                                                                          as first,\r\n       anyLast(value)                                                                      as last,\r\n       quantilesTDigestState(0.10, 0.25, 0.50, 0.75, 0.90, 0.95, 0.99)(value)              as s_quantiles,\r\n       simpleLinearRegressionState(toUnixTimestamp(timestamp), value)                      as s_linear_regression,\r\n       varSampState(value)                                                                 as s_variance,\r\n       avgStateIf(value, value > 0)                                                        as s_avg_nozero,\r\n       countStateIf(value, value > 0)                                                      as s_count_nozero,\r\n       sumIf(value, value > 0)                                                             as sum_nozero,\r\n       minIf(value, value > 0)                                                             as min_nozero,\r\n       maxIf(value, value > 0)                                                             as max_nozero,\r\n       anyIf(value, value > 0)                                                             as first_nozero,\r\n       anyLastIf(value, value > 0)                                                         as last_nozero,\r\n       quantilesTDigestStateIf(0.10, 0.25, 0.50, 0.75, 0.90, 0.95, 0.99)(value, value > 0) as s_quantiles_nozero,\r\n       simpleLinearRegressionStateIf(toUnixTimestamp(timestamp), value, value >\r\n                                                                        0)                 as s_linear_regression_nozero,\r\n       varSampStateIf(value, value > 0)                                                    as s_variance_nozero\r\nFROM default.metrics_shard\r\nGROUP BY metric_id,\r\n         date,\r\n         bucket;\r\n\r\nCREATE TABLE default.metrics_stat_1m ON CLUSTER testcluster\r\n(\r\n    metric_id                  UUID,\r\n    date                       Date DEFAULT toDate(bucket) CODEC (DoubleDelta),\r\n    bucket                     DateTime CODEC (DoubleDelta, LZ4),\r\n    s_avg                      AggregateFunction(avg, Float64),\r\n    s_count                    AggregateFunction(count, Float64),\r\n    sum                        SimpleAggregateFunction(sum, Float64) CODEC (Gorilla),\r\n    sum2                       SimpleAggregateFunction(sum, Float64) CODEC (Gorilla),\r\n    min                        SimpleAggregateFunction(min, Float64) CODEC (Gorilla),\r\n    max                        SimpleAggregateFunction(max, Float64) CODEC (Gorilla),\r\n    first                      SimpleAggregateFunction(any, Float64) CODEC (Gorilla),\r\n    last                       SimpleAggregateFunction(any, Float64) CODEC (Gorilla),\r\n    s_quantiles                AggregateFunction(quantilesTDigest(0.10, 0.25, 0.50, 0.75, 0.90, 0.95, 0.99),\r\n                                   Float64),\r\n    s_linear_regression        AggregateFunction(simpleLinearRegression, UInt32, Float64),\r\n    s_variance                 AggregateFunction(varSamp, Float64),\r\n    s_avg_nozero               AggregateFunction(avg, Float64),\r\n    s_count_nozero             AggregateFunction(count, Float64),\r\n    sum_nozero                 SimpleAggregateFunction(sum, Float64) CODEC (Gorilla),\r\n    min_nozero                 SimpleAggregateFunction(min, Float64) CODEC (Gorilla),\r\n    max_nozero                 SimpleAggregateFunction(max, Float64) CODEC (Gorilla),\r\n    first_nozero               SimpleAggregateFunction(any, Float64) CODEC (Gorilla),\r\n    last_nozero                SimpleAggregateFunction(any, Float64) CODEC (Gorilla),\r\n    s_quantiles_nozero         AggregateFunction(quantilesTDigest(0.10, 0.25, 0.50, 0.75, 0.90, 0.95, 0.99),\r\n                                   Float64),\r\n    s_linear_regression_nozero AggregateFunction(simpleLinearRegression, UInt32, Float64),\r\n    s_variance_nozero          AggregateFunction(varSamp, Float64)\r\n) ENGINE = Distributed(\r\n           testcluster,\r\n           default,\r\n           metrics_shard_stat_1m,\r\n           farmFingerprint64(metric_id)\r\n    );\r\n```\r\n\r\n`metrics_shard_stat_10m`:\r\n```\r\nCREATE TABLE default.metrics_shard_stat_10m ON cluster testcluster\r\n(\r\n    metric_id                  UUID,\r\n    date                       Date DEFAULT toDate(bucket) CODEC (DoubleDelta),\r\n    bucket                     DateTime CODEC (DoubleDelta, LZ4),\r\n    s_avg                      AggregateFunction(avg, Float64),\r\n    s_count                    AggregateFunction(count, Float64),\r\n    sum                        SimpleAggregateFunction(sum, Float64) CODEC (Gorilla),\r\n    sum2                       SimpleAggregateFunction(sum, Float64) CODEC (Gorilla),\r\n    min                        SimpleAggregateFunction(min, Float64) CODEC (Gorilla),\r\n    max                        SimpleAggregateFunction(max, Float64) CODEC (Gorilla),\r\n    first                      SimpleAggregateFunction(any, Float64) CODEC (Gorilla),\r\n    last                       SimpleAggregateFunction(any, Float64) CODEC (Gorilla),\r\n    s_linear_regression        AggregateFunction(simpleLinearRegression, UInt32, Float64),\r\n    s_variance                 AggregateFunction(varSamp, Float64),\r\n    s_quantiles                AggregateFunction(quantilesTDigest(0.10, 0.25, 0.50, 0.75, 0.90, 0.95, 0.99),\r\n                                   Float64),\r\n    s_avg_nozero               AggregateFunction(avg, Float64),\r\n    s_count_nozero             AggregateFunction(count, Float64),\r\n    sum_nozero                 SimpleAggregateFunction(sum, Float64) CODEC (Gorilla),\r\n    min_nozero                 SimpleAggregateFunction(min, Float64) CODEC (Gorilla),\r\n    max_nozero                 SimpleAggregateFunction(max, Float64) CODEC (Gorilla),\r\n    first_nozero               SimpleAggregateFunction(any, Float64) CODEC (Gorilla),\r\n    last_nozero                SimpleAggregateFunction(any, Float64) CODEC (Gorilla),\r\n    s_linear_regression_nozero AggregateFunction(simpleLinearRegression, UInt32, Float64),\r\n    s_variance_nozero          AggregateFunction(varSamp, Float64),\r\n    s_quantiles_nozero         AggregateFunction(quantilesTDigest(0.10, 0.25, 0.50, 0.75, 0.90, 0.95, 0.99),\r\n                                   Float64)\r\n) ENGINE = ReplicatedAggregatingMergeTree() PARTITION BY toYYYYMM(bucket)\r\n      ORDER BY (metric_id, date, bucket) SETTINGS index_granularity = 64;\r\n\r\nCREATE MATERIALIZED VIEW default.metrics_shard_stat_10m_view ON CLUSTER testcluster TO default.metrics_shard_stat_10m AS\r\nSELECT metric_id,\r\n       date,\r\n       toStartOfTenMinutes(toDateTime64(bucket, 3))                                             as bucket,\r\n       avgMergeState(s_avg)                                                                     as s_avg,\r\n       countMergeState(s_count)                                                                 as s_count,\r\n       sum(sum)                                                                                 as sum,\r\n       sum(sum2)                                                                                as sum2,\r\n       min(min)                                                                                 as min,\r\n       max(max)                                                                                 as max,\r\n       any(first)                                                                               as first,\r\n       anyLast(last)                                                                            as last,\r\n       quantilesTDigestMergeState(0.10, 0.25, 0.50, 0.75, 0.90, 0.95, 0.99)(s_quantiles)        as s_quantiles,\r\n       simpleLinearRegressionMergeState(s_linear_regression)                                    as s_linear_regression,\r\n       varSampMergeState(s_variance)                                                            as s_variance,\r\n       avgMergeState(s_avg_nozero)                                                              as s_avg_nozero,\r\n       countMergeState(s_count_nozero)                                                          as s_count_nozero,\r\n       sum(sum_nozero)                                                                          as sum_nozero,\r\n       min(min_nozero)                                                                          as min_nozero,\r\n       max(max_nozero)                                                                          as max_nozero,\r\n       any(first_nozero)                                                                        as first_nozero,\r\n       anyLast(last_nozero)                                                                     as last_nozero,\r\n       quantilesTDigestMergeState(0.10, 0.25, 0.50, 0.75, 0.90, 0.95, 0.99)(s_quantiles_nozero) as s_quantiles_nozero,\r\n       simpleLinearRegressionMergeState(s_linear_regression_nozero)                             as s_linear_regression_nozero,\r\n       varSampMergeState(s_variance_nozero)                                                     as s_variance_nozero\r\nFROM default.metrics_shard_stat_1m\r\nGROUP BY metric_id,\r\n         date,\r\n         bucket;\r\n\r\nCREATE TABLE default.metrics_stat_10m ON CLUSTER testcluster\r\n(\r\n    metric_id                  UUID,\r\n    date                       Date DEFAULT toDate(bucket) CODEC (DoubleDelta),\r\n    bucket                     DateTime CODEC (DoubleDelta, LZ4),\r\n    s_avg                      AggregateFunction(avg, Float64),\r\n    s_count                    AggregateFunction(count, Float64),\r\n    sum                        SimpleAggregateFunction(sum, Float64) CODEC (Gorilla),\r\n    sum2                       SimpleAggregateFunction(sum, Float64) CODEC (Gorilla),\r\n    min                        SimpleAggregateFunction(min, Float64) CODEC (Gorilla),\r\n    max                        SimpleAggregateFunction(max, Float64) CODEC (Gorilla),\r\n    first                      SimpleAggregateFunction(any, Float64) CODEC (Gorilla),\r\n    last                       SimpleAggregateFunction(any, Float64) CODEC (Gorilla),\r\n    s_quantiles                AggregateFunction(quantilesTDigest(0.10, 0.25, 0.50, 0.75, 0.90, 0.95, 0.99),\r\n                                   Float64),\r\n    s_linear_regression        AggregateFunction(simpleLinearRegression, UInt32, Float64),\r\n    s_variance                 AggregateFunction(varSamp, Float64),\r\n    s_avg_nozero               AggregateFunction(avg, Float64),\r\n    s_count_nozero             AggregateFunction(count, Float64),\r\n    sum_nozero                 SimpleAggregateFunction(sum, Float64) CODEC (Gorilla),\r\n    min_nozero                 SimpleAggregateFunction(min, Float64) CODEC (Gorilla),\r\n    max_nozero                 SimpleAggregateFunction(max, Float64) CODEC (Gorilla),\r\n    first_nozero               SimpleAggregateFunction(any, Float64) CODEC (Gorilla),\r\n    last_nozero                SimpleAggregateFunction(any, Float64) CODEC (Gorilla),\r\n    s_quantiles_nozero         AggregateFunction(quantilesTDigest(0.10, 0.25, 0.50, 0.75, 0.90, 0.95, 0.99),\r\n                                   Float64),\r\n    s_linear_regression_nozero AggregateFunction(simpleLinearRegression, UInt32, Float64),\r\n    s_variance_nozero          AggregateFunction(varSamp, Float64)\r\n) ENGINE = Distributed(\r\n           testcluster,\r\n           default,\r\n           metrics_shard_stat_10m,\r\n           farmFingerprint64(metric_id)\r\n    );\r\n```\r\n\r\n**Expected behavior**\r\n\r\n`quantilesTDigest()` function should work or throw a meaningful without causing part merges to be blocked forever.\r\n\r\n**Error message and/or stacktrace**\r\n\r\n```\r\n2021.12.01 03:58:30.375438 [ 62 ] {} <Error> void DB::MergeTreeBackgroundExecutor<DB::MergeMutateRuntimeQueue>::routine(DB::TaskRuntimeDataPtr) [Queue = DB::MergeMutateRuntimeQueue]: Code: 27. DB::Exception: Invalid centroid 2.000000:-nan: (while reading column s_quantiles): (while reading from part /var/lib/clickhouse/store/29e/29ec85cb-e183-4946-a9ec-85cbe1837946/202111_5921759_5923975_485/ from mark 5 with max_rows_to_read = 64): While executing MergeTreeSequentialSource. (CANNOT_PARSE_INPUT_ASSERTION_FAILED), Stack trace (when copying this message, always include the lines below):\r\n0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b63054 in /usr/bin/clickhouse\r\n1. DB::QuantileTDigest<double>::deserialize(DB::ReadBuffer&) @ 0xa51b433 in /usr/bin/clickhouse\r\n2. DB::SerializationAggregateFunction::deserializeBinaryBulk(DB::IColumn&, DB::ReadBuffer&, unsigned long, double) const @ 0x11cd71fa in /usr/bin/clickhouse\r\n3. DB::ISerialization::deserializeBinaryBulkWithMultipleStreams(COW<DB::IColumn>::immutable_ptr<DB::IColumn>&, unsigned long, DB::ISerialization::DeserializeBinaryBulkSettings&, std::__1::shared_ptr<DB::ISerialization::DeserializeBinaryBulkState>&, std::__1::unordered_map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, COW<DB::IColumn>::immutable_ptr<DB::IColumn>, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, COW<DB::IColumn>::immutable_ptr<DB::IColumn> > > >*) const @ 0x11cd4435 in /usr/bin/clickhouse\r\n4. DB::MergeTreeReaderWide::readData(DB::NameAndTypePair const&, COW<DB::IColumn>::immutable_ptr<DB::IColumn>&, unsigned long, bool, unsigned long, unsigned long, std::__1::unordered_map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, COW<DB::IColumn>::immutable_ptr<DB::IColumn>, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, COW<DB::IColumn>::immutable_ptr<DB::IColumn> > > >&, bool) @ 0x12e854a2 in /usr/bin/clickhouse\r\n5. DB::MergeTreeReaderWide::readRows(unsigned long, unsigned long, bool, unsigned long, std::__1::vector<COW<DB::IColumn>::immutable_ptr<DB::IColumn>, std::__1::allocator<COW<DB::IColumn>::immutable_ptr<DB::IColumn> > >&) @ 0x12e84279 in /usr/bin/clickhouse\r\n6. DB::MergeTreeSequentialSource::generate() @ 0x12e88377 in /usr/bin/clickhouse\r\n7. DB::ISource::tryGenerate() @ 0x131156b5 in /usr/bin/clickhouse\r\n8. DB::ISource::work() @ 0x1311527a in /usr/bin/clickhouse\r\n9. DB::SourceWithProgress::work() @ 0x13321062 in /usr/bin/clickhouse\r\n10. ? @ 0x13130b1b in /usr/bin/clickhouse\r\n11. DB::PipelineExecutor::executeStepImpl(unsigned long, unsigned long, std::__1::atomic<bool>*) @ 0x1312cad1 in /usr/bin/clickhouse\r\n12. DB::PipelineExecutor::executeStep(std::__1::atomic<bool>*) @ 0x1312b2e5 in /usr/bin/clickhouse\r\n13. DB::PullingPipelineExecutor::pull(DB::Chunk&) @ 0x13139d4b in /usr/bin/clickhouse\r\n14. DB::PullingPipelineExecutor::pull(DB::Block&) @ 0x13139fec in /usr/bin/clickhouse\r\n15. DB::MergeTask::ExecuteAndFinalizeHorizontalPart::executeImpl() @ 0x12d3d52b in /usr/bin/clickhouse\r\n16. DB::MergeTask::ExecuteAndFinalizeHorizontalPart::execute() @ 0x12d3d48b in /usr/bin/clickhouse\r\n17. DB::MergeTask::execute() @ 0x12d4217a in /usr/bin/clickhouse\r\n18. DB::MergePlainMergeTreeTask::executeStep() @ 0x12fbceec in /usr/bin/clickhouse\r\n19. DB::MergeTreeBackgroundExecutor<DB::MergeMutateRuntimeQueue>::routine(std::__1::shared_ptr<DB::TaskRuntimeData>) @ 0x12d50bdd in /usr/bin/clickhouse\r\n20. DB::MergeTreeBackgroundExecutor<DB::MergeMutateRuntimeQueue>::threadFunction() @ 0x12d5167a in /usr/bin/clickhouse\r\n21. ThreadPoolImpl<ThreadFromGlobalPool>::worker(std::__1::__list_iterator<ThreadFromGlobalPool, void*>) @ 0x9ba7d0a in /usr/bin/clickhouse\r\n22. ThreadFromGlobalPool::ThreadFromGlobalPool<void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>(void&&, void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()&&...)::'lambda'()::operator()() @ 0x9ba9b27 in /usr/bin/clickhouse\r\n23. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9ba5117 in /usr/bin/clickhouse\r\n24. ? @ 0x9ba8b1d in /usr/bin/clickhouse\r\n25. start_thread @ 0x9609 in /usr/lib/x86_64-linux-gnu/libpthread-2.31.so\r\n26. clone @ 0x122293 in /usr/lib/x86_64-linux-gnu/libc-2.31.so\r\n (version 21.11.3.6 (official build))\r\n ```\r\n \r\n **System Settings**\r\n ```\r\n connect_timeout_with_failover_ms,1000,1,Connection timeout for selecting first healthy replica.,,,0,Milliseconds\r\nload_balancing,random,1,Which replicas (among healthy replicas) to preferably send a query to (on the first attempt) for distributed processing.,,,0,LoadBalancing\r\ndistributed_aggregation_memory_efficient,1,1,Is the memory-saving mode of distributed aggregation enabled.,,,0,Bool\r\nlog_queries,1,1,Log requests and write the log to the system table.,,,0,Bool\r\nmax_memory_usage,10000000000,1,Maximum memory usage for processing of single query. Zero means unlimited.,,,0,UInt64\r\nparallel_view_processing,1,1,Enables pushing to attached views concurrently instead of sequentially.,,,0,Bool\r\ndefault_database_engine,Ordinary,1,Default database engine.,,,0,DefaultDatabaseEngine\r\n```\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32107/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32107/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32047","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32047/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32047/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32047/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/32047","id":1068293920,"node_id":"I_kwDOA5dJV84_rN8g","number":32047,"title":"More documentation for ProfileEvents","user":{"login":"orloffv","id":504986,"node_id":"MDQ6VXNlcjUwNDk4Ng==","avatar_url":"https://avatars.githubusercontent.com/u/504986?v=4","gravatar_id":"","url":"https://api.github.com/users/orloffv","html_url":"https://github.com/orloffv","followers_url":"https://api.github.com/users/orloffv/followers","following_url":"https://api.github.com/users/orloffv/following{/other_user}","gists_url":"https://api.github.com/users/orloffv/gists{/gist_id}","starred_url":"https://api.github.com/users/orloffv/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/orloffv/subscriptions","organizations_url":"https://api.github.com/users/orloffv/orgs","repos_url":"https://api.github.com/users/orloffv/repos","events_url":"https://api.github.com/users/orloffv/events{/privacy}","received_events_url":"https://api.github.com/users/orloffv/received_events","type":"User","site_admin":false},"labels":[{"id":785082162,"node_id":"MDU6TGFiZWw3ODUwODIxNjI=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-documentation","name":"comp-documentation","color":"b5bcff","default":false,"description":"Used to run automatic builds of the documentation"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-12-01T11:30:49Z","updated_at":"2021-12-01T11:30:49Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Many fields without description https://github.com/ClickHouse/ClickHouse/blob/96ec92c7cd127b08453a83d2aca23f2ec26c67df/src/Common/ProfileEvents.cpp\r\nFor example: \r\nMarkCacheHits, MarkCacheMisses,  UncompressedCacheHits, UncompressedCacheMisses","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32047/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32047/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32018","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32018/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32018/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32018/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/32018","id":1067476961,"node_id":"I_kwDOA5dJV84_oGfh","number":32018,"title":"libcxx 13 compatibility","user":{"login":"Algunenano","id":664253,"node_id":"MDQ6VXNlcjY2NDI1Mw==","avatar_url":"https://avatars.githubusercontent.com/u/664253?v=4","gravatar_id":"","url":"https://api.github.com/users/Algunenano","html_url":"https://github.com/Algunenano","followers_url":"https://api.github.com/users/Algunenano/followers","following_url":"https://api.github.com/users/Algunenano/following{/other_user}","gists_url":"https://api.github.com/users/Algunenano/gists{/gist_id}","starred_url":"https://api.github.com/users/Algunenano/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Algunenano/subscriptions","organizations_url":"https://api.github.com/users/Algunenano/orgs","repos_url":"https://api.github.com/users/Algunenano/repos","events_url":"https://api.github.com/users/Algunenano/events{/privacy}","received_events_url":"https://api.github.com/users/Algunenano/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":9,"created_at":"2021-11-30T17:08:58Z","updated_at":"2021-12-03T09:49:46Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Currently it's impossible to build ClickHouse with libcxx 13, which happens to be the standard library bundled with the recommended compiler. It's understood that you should use the provided one, but at some point that will be updated too so since I had some issues I decided to give it a try and see what break.\r\n\r\nTested with local libc++ (from llvm 13.0.0):\r\n\r\n```\r\nCC=clang CXX=clang++ cmake .. -DUSE_INTERNAL_LIBCXX_LIBRARY=False -DDISABLE_HERMETIC_BUILD=ON\r\n```\r\n\r\nThe problems come from internal dependencies that are using result_of. This was deprecated in C++17, removed in C++20 and dropped from libc++ in v13.\r\n\r\n* Abseil\r\n  - Issue: https://github.com/abseil/abseil-cpp/issues/649\r\n  - Fixed in https://github.com/abseil/abseil-cpp/commit/e19260fd7dbef881492fd73891e0be5bd4a09b95\r\n  - Available in 20211102.0\r\n  - ClickHouse-Extras/abseil-cpp uses lts_20202_02_25 with a patch and some backports. Both are unnecessary if switched to the upstram/lts_2021_03_24 branch. Switching the submodule to point to the official repo would be an option.\r\n\r\n* Arrow\r\n  - Issue https://github.com/apache/arrow/pull/10814\r\n  - Fixed in https://github.com/apache/arrow/commit/4c02c6d7ffae6f8580aa9e7f42336cfa561d357e\r\n  - Available in 6.0.0dev+\r\n  - Updating to upstream apache-arrow-6.0.1 works. Patches from ClickHouse-Extras: remove submodules and add Uri::host_and_port() which doesn't seem to be used anymore.\r\n  - Needs adapting the cmake file and some changes in the callers. I've done some changes but it seems to be missing some objects (complains about ipc).\r\n\r\n* Boost ASIO\r\n  - The library uses it's internal way of detecting what invoke method to use (asio/detail/config.hpp).\r\n  - Fixed in https://github.com/boostorg/asio/commit/58050a2036ad8e2d67b9ecfc9caa4eddec92fdac\r\n  - Available in boost-1.78.0.beta1 (no stable version released yet)\r\n  - Applying the patch (https://github.com/boostorg/asio/commit/58050a2036ad8e2d67b9ecfc9caa4eddec92fdac.patch) over the current ClickHouse-Extras fork fixes it.\r\n\r\n* Boost Fiber/Context/Config\r\n  - Uses Context with result_of because BOOST_NO_CXX17_STD_INVOKE is defined.\r\n  - BOOST_NO_CXX17_STD_INVOKE is defined in boost/config/stdlib/libcpp.hpp\r\n  - Fixed also some time ago (multiple changes)\r\n  - Replacing boost/config with current master one (all the files, not just libcpp.hpp) fixes the issue.\r\n\r\n* Boost format\r\n  - Different issue. This time with allocators\r\n  - Issue: https://github.com/boostorg/format/issues/67\r\n  - Fixed in https://github.com/boostorg/format/commit/5884c3d8140cdcd2d1bef374fcc216244d5faaa5 -> Boost 1.74.0+\r\n  - Applying the patch (https://github.com/boostorg/format/commit/5884c3d8140cdcd2d1bef374fcc216244d5faaa5.patch) works.\r\n\r\n* S2\r\n  - Uses it's own internal absl which has the same issue.\r\n  - Fixed pretty recently (https://github.com/google/s2geometry/pull/169) by requiring an external abseil\r\n  - Should be updated and use the contrib/absl for building\r\n  - Haven't tested that it works, i've disabled it with `ENABLE_S2_GEOMETRY=OFF` for now.\r\n\r\nIMO the actions points would be:\r\n* Push `lts_2021_03_24` branch to ClickHouse-Extras/abseil-cpp or change remote to upstream.\r\n* Push `apache-arrow-6.0.1` branch to ClickHouse-Extras/arrow. Add a commit to remote submodules (if we want it).\r\n* Get arrow to link and work with 6.0.1. Should require only changes here.\r\n* Update ClickHouse-Extras/s2 to a version with off tree abseil.\r\n* Get S2 to build with contrib/abseil.\r\n* Either update boost to a newer version (like 1.76 + ASIO patch) or apply all 3 patches individually.\r\n\r\nI'll try to get this done locally as long as nobody says it shouldn't be done or something but, when it all works, I'll need help pushing new branches / patches into the submodules.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32018/reactions","total_count":5,"+1":5,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32018/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32006","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32006/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32006/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32006/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/32006","id":1067250427,"node_id":"I_kwDOA5dJV84_nPL7","number":32006,"title":"Range extension for type Date32 ","user":{"login":"bartompko","id":95292205,"node_id":"U_kgDOBa4LLQ","avatar_url":"https://avatars.githubusercontent.com/u/95292205?v=4","gravatar_id":"","url":"https://api.github.com/users/bartompko","html_url":"https://github.com/bartompko","followers_url":"https://api.github.com/users/bartompko/followers","following_url":"https://api.github.com/users/bartompko/following{/other_user}","gists_url":"https://api.github.com/users/bartompko/gists{/gist_id}","starred_url":"https://api.github.com/users/bartompko/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bartompko/subscriptions","organizations_url":"https://api.github.com/users/bartompko/orgs","repos_url":"https://api.github.com/users/bartompko/repos","events_url":"https://api.github.com/users/bartompko/events{/privacy}","received_events_url":"https://api.github.com/users/bartompko/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":1481221764,"node_id":"MDU6TGFiZWwxNDgxMjIxNzY0","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-datetime","name":"comp-datetime","color":"b5bcff","default":false,"description":"date & time & timezone related"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2021-11-30T13:39:53Z","updated_at":"2021-12-01T07:31:12Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"We would like to use Clickhouse in our new data warehouse project, unfortunately we encountered the problem of too narrow range for the Date32 type. This type is stored in 4 bytes, so theoretically, it could store 11 million years. However, it has been narrowed down to the range between 1925 and 2283. I would like to ask, could you consider extending the range Date32 from 0001-01-01 to 9999-01-01?","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32006/reactions","total_count":3,"+1":3,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32006/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32005","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32005/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32005/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32005/events","html_url":"https://github.com/ClickHouse/ClickHouse/pull/32005","id":1067248496,"node_id":"PR_kwDOA5dJV84vMGmJ","number":32005,"title":"Try to enable CIFuzz ","user":{"login":"nikitamikhaylov","id":25705399,"node_id":"MDQ6VXNlcjI1NzA1Mzk5","avatar_url":"https://avatars.githubusercontent.com/u/25705399?v=4","gravatar_id":"","url":"https://api.github.com/users/nikitamikhaylov","html_url":"https://github.com/nikitamikhaylov","followers_url":"https://api.github.com/users/nikitamikhaylov/followers","following_url":"https://api.github.com/users/nikitamikhaylov/following{/other_user}","gists_url":"https://api.github.com/users/nikitamikhaylov/gists{/gist_id}","starred_url":"https://api.github.com/users/nikitamikhaylov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nikitamikhaylov/subscriptions","organizations_url":"https://api.github.com/users/nikitamikhaylov/orgs","repos_url":"https://api.github.com/users/nikitamikhaylov/repos","events_url":"https://api.github.com/users/nikitamikhaylov/events{/privacy}","received_events_url":"https://api.github.com/users/nikitamikhaylov/received_events","type":"User","site_admin":false},"labels":[{"id":1309693854,"node_id":"MDU6TGFiZWwxMzA5NjkzODU0","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/pr-build","name":"pr-build","color":"007700","default":false,"description":"Pull request with build/testing/packaging improvement"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2021-11-30T13:37:59Z","updated_at":"2021-12-02T15:09:03Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"draft":true,"pull_request":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/pulls/32005","html_url":"https://github.com/ClickHouse/ClickHouse/pull/32005","diff_url":"https://github.com/ClickHouse/ClickHouse/pull/32005.diff","patch_url":"https://github.com/ClickHouse/ClickHouse/pull/32005.patch","merged_at":null},"body":"Changelog category (leave one):\r\n\r\n- Build/Testing/Packaging Improvement\r\n\r\n\r\nChangelog entry (a user-readable short description of the changes that goes to CHANGELOG.md):\r\nAdded CIFuzz to out CI system https://google.github.io/oss-fuzz/getting-started/continuous-integration/\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32005/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32005/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31983","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31983/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31983/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31983/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/31983","id":1067018808,"node_id":"I_kwDOA5dJV84_mWo4","number":31983,"title":"Codes: 117, 60, 253. Error in time create table.","user":{"login":"Saraf-SPb","id":35980325,"node_id":"MDQ6VXNlcjM1OTgwMzI1","avatar_url":"https://avatars.githubusercontent.com/u/35980325?v=4","gravatar_id":"","url":"https://api.github.com/users/Saraf-SPb","html_url":"https://github.com/Saraf-SPb","followers_url":"https://api.github.com/users/Saraf-SPb/followers","following_url":"https://api.github.com/users/Saraf-SPb/following{/other_user}","gists_url":"https://api.github.com/users/Saraf-SPb/gists{/gist_id}","starred_url":"https://api.github.com/users/Saraf-SPb/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Saraf-SPb/subscriptions","organizations_url":"https://api.github.com/users/Saraf-SPb/orgs","repos_url":"https://api.github.com/users/Saraf-SPb/repos","events_url":"https://api.github.com/users/Saraf-SPb/events{/privacy}","received_events_url":"https://api.github.com/users/Saraf-SPb/received_events","type":"User","site_admin":false},"labels":[{"id":386401510,"node_id":"MDU6TGFiZWwzODY0MDE1MTA=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/question","name":"question","color":"bfdadc","default":true,"description":""},{"id":845267693,"node_id":"MDU6TGFiZWw4NDUyNjc2OTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/st-need-info","name":"st-need-info","color":"e5b890","default":false,"description":"We need extra data to continue"},{"id":3761121284,"node_id":"LA_kwDOA5dJV87gLigE","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/support-services","name":"support-services","color":"1A70E6","default":false,"description":""}],"state":"open","locked":false,"assignee":{"login":"melvynator","id":5473562,"node_id":"MDQ6VXNlcjU0NzM1NjI=","avatar_url":"https://avatars.githubusercontent.com/u/5473562?v=4","gravatar_id":"","url":"https://api.github.com/users/melvynator","html_url":"https://github.com/melvynator","followers_url":"https://api.github.com/users/melvynator/followers","following_url":"https://api.github.com/users/melvynator/following{/other_user}","gists_url":"https://api.github.com/users/melvynator/gists{/gist_id}","starred_url":"https://api.github.com/users/melvynator/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/melvynator/subscriptions","organizations_url":"https://api.github.com/users/melvynator/orgs","repos_url":"https://api.github.com/users/melvynator/repos","events_url":"https://api.github.com/users/melvynator/events{/privacy}","received_events_url":"https://api.github.com/users/melvynator/received_events","type":"User","site_admin":false},"assignees":[{"login":"melvynator","id":5473562,"node_id":"MDQ6VXNlcjU0NzM1NjI=","avatar_url":"https://avatars.githubusercontent.com/u/5473562?v=4","gravatar_id":"","url":"https://api.github.com/users/melvynator","html_url":"https://github.com/melvynator","followers_url":"https://api.github.com/users/melvynator/followers","following_url":"https://api.github.com/users/melvynator/following{/other_user}","gists_url":"https://api.github.com/users/melvynator/gists{/gist_id}","starred_url":"https://api.github.com/users/melvynator/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/melvynator/subscriptions","organizations_url":"https://api.github.com/users/melvynator/orgs","repos_url":"https://api.github.com/users/melvynator/repos","events_url":"https://api.github.com/users/melvynator/events{/privacy}","received_events_url":"https://api.github.com/users/melvynator/received_events","type":"User","site_admin":false}],"milestone":null,"comments":1,"created_at":"2021-11-30T09:50:18Z","updated_at":"2022-01-24T16:30:12Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Hi. Noobs question, but i can don't replay this situation on test conture.\r\nIn time execution script i see it's notification and script execution crash with notification, ztestschema.test_table doesn't exists:\r\nStdoutput Code: 117, e.displayText() = DB::Exception: Data directory for table already containing data parts - probably it was unclean DROP table or manual intervention. You must either clear directory by hand or use ATTACH TABLE instead of CREATE TABLE if you need to use that parts., e.what() = DB::Exception\r\nStdoutput Code: 60, e.displayText() = DB::Exception: Table ztestschema.test_table doesn't exist., e.what() = DB::Exception\r\nStdoutput Code: 253, e.displayText() = DB::Exception: Replica /clickhouse/tables/shard03/ztestschema/test_table/replicas/127.0.0.1 already exists., e.what() = DB::Exception\r\nI would be grateful for any help!","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31983/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31983/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31973","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31973/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31973/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31973/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/31973","id":1066806163,"node_id":"I_kwDOA5dJV84_liuT","number":31973,"title":"Official docker image for arm64 devices","user":{"login":"makeavish","id":9512100,"node_id":"MDQ6VXNlcjk1MTIxMDA=","avatar_url":"https://avatars.githubusercontent.com/u/9512100?v=4","gravatar_id":"","url":"https://api.github.com/users/makeavish","html_url":"https://github.com/makeavish","followers_url":"https://api.github.com/users/makeavish/followers","following_url":"https://api.github.com/users/makeavish/following{/other_user}","gists_url":"https://api.github.com/users/makeavish/gists{/gist_id}","starred_url":"https://api.github.com/users/makeavish/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/makeavish/subscriptions","organizations_url":"https://api.github.com/users/makeavish/orgs","repos_url":"https://api.github.com/users/makeavish/repos","events_url":"https://api.github.com/users/makeavish/events{/privacy}","received_events_url":"https://api.github.com/users/makeavish/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-11-30T05:21:42Z","updated_at":"2021-12-05T21:20:23Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"**Use case**\r\n\r\nArm64 docker builds are not available for Clickhouse.\r\n\r\n**Describe the solution you'd like**\r\n\r\nPublish official arm64 builds on https://hub.docker.com/r/clickhouse/clickhouse-server/\r\n\r\n**Describe alternatives you've considered**\r\n\r\nTried unofficial arm64 builds, but they aren't frequently updated and building docker image of clickhouse requires too much resources on machine which I don't have.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31973/reactions","total_count":6,"+1":4,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":2},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31973/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31964","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31964/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31964/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31964/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/31964","id":1066552771,"node_id":"I_kwDOA5dJV84_kk3D","number":31964,"title":"A way to drop cache of formats (/var/lib/clickhouse/format_schemas/)","user":{"login":"den-crane","id":19737682,"node_id":"MDQ6VXNlcjE5NzM3Njgy","avatar_url":"https://avatars.githubusercontent.com/u/19737682?v=4","gravatar_id":"","url":"https://api.github.com/users/den-crane","html_url":"https://github.com/den-crane","followers_url":"https://api.github.com/users/den-crane/followers","following_url":"https://api.github.com/users/den-crane/following{/other_user}","gists_url":"https://api.github.com/users/den-crane/gists{/gist_id}","starred_url":"https://api.github.com/users/den-crane/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/den-crane/subscriptions","organizations_url":"https://api.github.com/users/den-crane/orgs","repos_url":"https://api.github.com/users/den-crane/repos","events_url":"https://api.github.com/users/den-crane/events{/privacy}","received_events_url":"https://api.github.com/users/den-crane/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-11-29T22:07:26Z","updated_at":"2021-11-29T22:07:26Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"body":"Right now it needs to restart ClicHouse if .proto file is updated.\r\n\r\nfor example `system drop formats cache`\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31964/reactions","total_count":2,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31964/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31959","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31959/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31959/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31959/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/31959","id":1066385444,"node_id":"I_kwDOA5dJV84_j8Ak","number":31959,"title":"Function to transform array into columns","user":{"login":"sablastik","id":16276988,"node_id":"MDQ6VXNlcjE2Mjc2OTg4","avatar_url":"https://avatars.githubusercontent.com/u/16276988?v=4","gravatar_id":"","url":"https://api.github.com/users/sablastik","html_url":"https://github.com/sablastik","followers_url":"https://api.github.com/users/sablastik/followers","following_url":"https://api.github.com/users/sablastik/following{/other_user}","gists_url":"https://api.github.com/users/sablastik/gists{/gist_id}","starred_url":"https://api.github.com/users/sablastik/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sablastik/subscriptions","organizations_url":"https://api.github.com/users/sablastik/orgs","repos_url":"https://api.github.com/users/sablastik/repos","events_url":"https://api.github.com/users/sablastik/events{/privacy}","received_events_url":"https://api.github.com/users/sablastik/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-11-29T18:59:32Z","updated_at":"2021-11-29T18:59:32Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"**Use case**\r\n\r\nTo have function converting array into multiple columns depending of the longest array in source column\r\n\r\n**Describe the solution you'd like**\r\nFor example function can be called like:` arrayToColumns(array[, number_of_columns])`\r\n\r\nIt should either by itself find the longest array in column and use its value as number_of_columns or this parameter should be set by user.\r\n\r\nExpected behavior:\r\n\r\n```\r\nSELECT arrayToColumns(nums) FROM \r\n(SELECT [1, 2, 3] nums \r\nUNION ALL\r\nSELECT [5,6] nums)\r\n```\r\n\r\nResult:\r\n```\r\n┌─nums_1─┬─nums_2─┬─nums_3─┐\r\n│      1 │      2 │      3 │\r\n│      5 │      6 │      0 │\r\n└────────┴────────┴────────┘\r\n```\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31959/reactions","total_count":2,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":1,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31959/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31953","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31953/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31953/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31953/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/31953","id":1066194844,"node_id":"I_kwDOA5dJV84_jNec","number":31953,"title":"Materialized Views Columns limit","user":{"login":"rsaphala","id":13609625,"node_id":"MDQ6VXNlcjEzNjA5NjI1","avatar_url":"https://avatars.githubusercontent.com/u/13609625?v=4","gravatar_id":"","url":"https://api.github.com/users/rsaphala","html_url":"https://github.com/rsaphala","followers_url":"https://api.github.com/users/rsaphala/followers","following_url":"https://api.github.com/users/rsaphala/following{/other_user}","gists_url":"https://api.github.com/users/rsaphala/gists{/gist_id}","starred_url":"https://api.github.com/users/rsaphala/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rsaphala/subscriptions","organizations_url":"https://api.github.com/users/rsaphala/orgs","repos_url":"https://api.github.com/users/rsaphala/repos","events_url":"https://api.github.com/users/rsaphala/events{/privacy}","received_events_url":"https://api.github.com/users/rsaphala/received_events","type":"User","site_admin":false},"labels":[{"id":386401510,"node_id":"MDU6TGFiZWwzODY0MDE1MTA=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/question","name":"question","color":"bfdadc","default":true,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2021-11-29T15:46:00Z","updated_at":"2021-11-30T06:50:45Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Are there any limitations regarding the amount of columns one can create in an MV ? How much memory will it take to process inserts?\r\n\r\n\r\nFrom this issue https://github.com/ClickHouse/ClickHouse/issues/6943 I can see that the memory requirement for each column is about 2MB. Is this still the case for materialized views? We are planning to aggregate thousands of columns into a single MV","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31953/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31953/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31924","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31924/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31924/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31924/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/31924","id":1065261652,"node_id":"I_kwDOA5dJV84_fppU","number":31924,"title":"toString(Date32) works correctly only with the limited range of values","user":{"login":"victor-sushko","id":26111504,"node_id":"MDQ6VXNlcjI2MTExNTA0","avatar_url":"https://avatars.githubusercontent.com/u/26111504?v=4","gravatar_id":"","url":"https://api.github.com/users/victor-sushko","html_url":"https://github.com/victor-sushko","followers_url":"https://api.github.com/users/victor-sushko/followers","following_url":"https://api.github.com/users/victor-sushko/following{/other_user}","gists_url":"https://api.github.com/users/victor-sushko/gists{/gist_id}","starred_url":"https://api.github.com/users/victor-sushko/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/victor-sushko/subscriptions","organizations_url":"https://api.github.com/users/victor-sushko/orgs","repos_url":"https://api.github.com/users/victor-sushko/repos","events_url":"https://api.github.com/users/victor-sushko/events{/privacy}","received_events_url":"https://api.github.com/users/victor-sushko/received_events","type":"User","site_admin":false},"labels":[{"id":386401508,"node_id":"MDU6TGFiZWwzODY0MDE1MDg=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/help%20wanted","name":"help wanted","color":"128A0C","default":true,"description":null},{"id":1397894054,"node_id":"MDU6TGFiZWwxMzk3ODk0MDU0","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/unfinished%20code","name":"unfinished code","color":"ff8800","default":false,"description":""}],"state":"open","locked":false,"assignee":{"login":"MaxWk","id":16871244,"node_id":"MDQ6VXNlcjE2ODcxMjQ0","avatar_url":"https://avatars.githubusercontent.com/u/16871244?v=4","gravatar_id":"","url":"https://api.github.com/users/MaxWk","html_url":"https://github.com/MaxWk","followers_url":"https://api.github.com/users/MaxWk/followers","following_url":"https://api.github.com/users/MaxWk/following{/other_user}","gists_url":"https://api.github.com/users/MaxWk/gists{/gist_id}","starred_url":"https://api.github.com/users/MaxWk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/MaxWk/subscriptions","organizations_url":"https://api.github.com/users/MaxWk/orgs","repos_url":"https://api.github.com/users/MaxWk/repos","events_url":"https://api.github.com/users/MaxWk/events{/privacy}","received_events_url":"https://api.github.com/users/MaxWk/received_events","type":"User","site_admin":false},"assignees":[{"login":"MaxWk","id":16871244,"node_id":"MDQ6VXNlcjE2ODcxMjQ0","avatar_url":"https://avatars.githubusercontent.com/u/16871244?v=4","gravatar_id":"","url":"https://api.github.com/users/MaxWk","html_url":"https://github.com/MaxWk","followers_url":"https://api.github.com/users/MaxWk/followers","following_url":"https://api.github.com/users/MaxWk/following{/other_user}","gists_url":"https://api.github.com/users/MaxWk/gists{/gist_id}","starred_url":"https://api.github.com/users/MaxWk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/MaxWk/subscriptions","organizations_url":"https://api.github.com/users/MaxWk/orgs","repos_url":"https://api.github.com/users/MaxWk/repos","events_url":"https://api.github.com/users/MaxWk/events{/privacy}","received_events_url":"https://api.github.com/users/MaxWk/received_events","type":"User","site_admin":false}],"milestone":null,"comments":2,"created_at":"2021-11-28T07:28:51Z","updated_at":"2021-12-02T15:56:03Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"The function `toSting` doesn't work correctly with an argument of the type `Date32` if the value of the argument is outside of the range [1970-01-01, 2149-06-06].\r\n\r\n**How to reproduce**\r\n\r\nClickHouse server version 21.11.3 revision 54450.\r\nClickHouse client version 21.11.3.6 (official build).\r\n\r\nRun the query:\r\n```SQL\r\nSELECT T.d date, toString(T.d) dateStr\r\nFROM\r\n(\r\n  SELECT '1925-01-01'::Date32 d\r\n  UNION ALL SELECT '1969-12-31'::Date32\r\n  UNION ALL SELECT '1970-01-01'::Date32\r\n  UNION ALL SELECT '2149-06-06'::Date32\r\n  UNION ALL SELECT '2149-06-07'::Date32\r\n  UNION ALL SELECT '2283-11-11'::Date32\r\n ) AS T\r\n ORDER BY T.d\r\n```\r\n\r\nRows returned by the query:\r\n```\r\n┌───────date─┬─dateStr────┐\r\n│ 1925-01-01 │ 2104-06-07 │\r\n│ 1969-12-31 │ 2149-06-06 │\r\n│ 1970-01-01 │ 1970-01-01 │\r\n│ 2149-06-06 │ 2149-06-06 │\r\n│ 2149-06-07 │ 1970-01-01 │\r\n│ 2283-11-11 │ 2104-06-06 │\r\n└────────────┴────────────┘\r\n```\r\n\r\n**Expected behavior**\r\n\r\nValues in the columns **date** and **dateStr** should be the same.\r\nFor example, `toString('1969-12-31'::Date32)` should return the string \"1969-12-31\", but it returns \"2149-06-06\".\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31924/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31924/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31921","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31921/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31921/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31921/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/31921","id":1065154554,"node_id":"I_kwDOA5dJV84_fPf6","number":31921,"title":"virtual column _row_number, _error, _raw_value for file, s3, hdfs functions.","user":{"login":"UnamedRus","id":9449405,"node_id":"MDQ6VXNlcjk0NDk0MDU=","avatar_url":"https://avatars.githubusercontent.com/u/9449405?v=4","gravatar_id":"","url":"https://api.github.com/users/UnamedRus","html_url":"https://github.com/UnamedRus","followers_url":"https://api.github.com/users/UnamedRus/followers","following_url":"https://api.github.com/users/UnamedRus/following{/other_user}","gists_url":"https://api.github.com/users/UnamedRus/gists{/gist_id}","starred_url":"https://api.github.com/users/UnamedRus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/UnamedRus/subscriptions","organizations_url":"https://api.github.com/users/UnamedRus/orgs","repos_url":"https://api.github.com/users/UnamedRus/repos","events_url":"https://api.github.com/users/UnamedRus/events{/privacy}","received_events_url":"https://api.github.com/users/UnamedRus/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2021-11-28T00:52:23Z","updated_at":"2021-12-25T00:44:02Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"**Use case**\r\n\r\n\r\n**Describe the solution you'd like**\r\n\r\nGive ability to get corresponding row number of file being ingested via s3/hdfs/file table function.\r\n\r\n**Describe alternatives you've considered**\r\n\r\n```\r\n SELECT row_number() OVER (PARTITION BY _path) FROM s3(...)\r\n```\r\n\r\nBut it's too slow.\r\n\r\n**Additional context**\r\n\r\nProbably we can have some other columns like _raw in case of parsing error.\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31921/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31921/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31919","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31919/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31919/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31919/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/31919","id":1065080977,"node_id":"I_kwDOA5dJV84_e9iR","number":31919,"title":"Zookeeper & 5000 Replicated tables","user":{"login":"den-crane","id":19737682,"node_id":"MDQ6VXNlcjE5NzM3Njgy","avatar_url":"https://avatars.githubusercontent.com/u/19737682?v=4","gravatar_id":"","url":"https://api.github.com/users/den-crane","html_url":"https://github.com/den-crane","followers_url":"https://api.github.com/users/den-crane/followers","following_url":"https://api.github.com/users/den-crane/following{/other_user}","gists_url":"https://api.github.com/users/den-crane/gists{/gist_id}","starred_url":"https://api.github.com/users/den-crane/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/den-crane/subscriptions","organizations_url":"https://api.github.com/users/den-crane/orgs","repos_url":"https://api.github.com/users/den-crane/repos","events_url":"https://api.github.com/users/den-crane/events{/privacy}","received_events_url":"https://api.github.com/users/den-crane/received_events","type":"User","site_admin":false},"labels":[{"id":386401510,"node_id":"MDU6TGFiZWwzODY0MDE1MTA=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/question","name":"question","color":"bfdadc","default":true,"description":""},{"id":756395244,"node_id":"MDU6TGFiZWw3NTYzOTUyNDQ=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/performance","name":"performance","color":"c2e0c6","default":false,"description":null},{"id":1401894928,"node_id":"MDU6TGFiZWwxNDAxODk0OTI4","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-zookeeper","name":"comp-zookeeper","color":"b5bcff","default":false,"description":"Zookeeper"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2021-11-27T16:35:29Z","updated_at":"2021-11-30T00:35:29Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"body":"It's not an issue just an observation.\r\n\r\n1 replica\r\n```\r\ncreate database test_zoo;\r\n\r\n-- Let's create 5000 tables\r\nfor i in `seq 5000`; do echo -n $i \"\"; \\\r\n   clickhouse-client -q \"CREATE TABLE if not exists test_zoo.test$i  (d DATE, p UInt64, s String) ENGINE = ReplicatedMergeTree ('/clickhouse/{cluster}/tables/{shard}/{table}','{replica}') PARTITION BY d ORDER BY p\";\r\ndone;\r\n\r\nZK CPU utilization 30% of one CPU core\r\n\r\n--Let's insert 101 inserts into each table to fill ZK recent 100 blocks \r\nfor i in `seq 5000`; do echo -n $i \"\";    for j in `seq 101`; do clickhouse-client -q \"insert into test_zoo.test$i select today(), $j, ''\"; done; done;\r\n\r\nZK CPU utilization 30% of one CPU core\r\n\r\n\r\ncleanup_delay_period = 300 / merge_selecting_sleep_ms = 50000   \r\nrestart\r\nZK CPU utilization <10% of one CPU core\r\n```\r\n![5000tables](https://user-images.githubusercontent.com/19737682/143689732-cd12edb2-d966-4df2-ac90-1eaee391a114.png)\r\n\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31919/reactions","total_count":4,"+1":4,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31919/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31912","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31912/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31912/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31912/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/31912","id":1064973900,"node_id":"I_kwDOA5dJV84_ejZM","number":31912,"title":"access denied on column level when upgrade to 21.9","user":{"login":"hoseiney","id":24523821,"node_id":"MDQ6VXNlcjI0NTIzODIx","avatar_url":"https://avatars.githubusercontent.com/u/24523821?v=4","gravatar_id":"","url":"https://api.github.com/users/hoseiney","html_url":"https://github.com/hoseiney","followers_url":"https://api.github.com/users/hoseiney/followers","following_url":"https://api.github.com/users/hoseiney/following{/other_user}","gists_url":"https://api.github.com/users/hoseiney/gists{/gist_id}","starred_url":"https://api.github.com/users/hoseiney/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hoseiney/subscriptions","organizations_url":"https://api.github.com/users/hoseiney/orgs","repos_url":"https://api.github.com/users/hoseiney/repos","events_url":"https://api.github.com/users/hoseiney/events{/privacy}","received_events_url":"https://api.github.com/users/hoseiney/received_events","type":"User","site_admin":false},"labels":[{"id":386401505,"node_id":"MDU6TGFiZWwzODY0MDE1MDU=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/bug","name":"bug","color":"ee0701","default":true,"description":"Confirmed user-visible misbehaviour in official release"},{"id":2011606513,"node_id":"MDU6TGFiZWwyMDExNjA2NTEz","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-rbac","name":"comp-rbac","color":"b5bcff","default":false,"description":"Access control related"}],"state":"open","locked":false,"assignee":{"login":"vitlibar","id":45142681,"node_id":"MDQ6VXNlcjQ1MTQyNjgx","avatar_url":"https://avatars.githubusercontent.com/u/45142681?v=4","gravatar_id":"","url":"https://api.github.com/users/vitlibar","html_url":"https://github.com/vitlibar","followers_url":"https://api.github.com/users/vitlibar/followers","following_url":"https://api.github.com/users/vitlibar/following{/other_user}","gists_url":"https://api.github.com/users/vitlibar/gists{/gist_id}","starred_url":"https://api.github.com/users/vitlibar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vitlibar/subscriptions","organizations_url":"https://api.github.com/users/vitlibar/orgs","repos_url":"https://api.github.com/users/vitlibar/repos","events_url":"https://api.github.com/users/vitlibar/events{/privacy}","received_events_url":"https://api.github.com/users/vitlibar/received_events","type":"User","site_admin":false},"assignees":[{"login":"vitlibar","id":45142681,"node_id":"MDQ6VXNlcjQ1MTQyNjgx","avatar_url":"https://avatars.githubusercontent.com/u/45142681?v=4","gravatar_id":"","url":"https://api.github.com/users/vitlibar","html_url":"https://github.com/vitlibar","followers_url":"https://api.github.com/users/vitlibar/followers","following_url":"https://api.github.com/users/vitlibar/following{/other_user}","gists_url":"https://api.github.com/users/vitlibar/gists{/gist_id}","starred_url":"https://api.github.com/users/vitlibar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vitlibar/subscriptions","organizations_url":"https://api.github.com/users/vitlibar/orgs","repos_url":"https://api.github.com/users/vitlibar/repos","events_url":"https://api.github.com/users/vitlibar/events{/privacy}","received_events_url":"https://api.github.com/users/vitlibar/received_events","type":"User","site_admin":false}],"milestone":null,"comments":0,"created_at":"2021-11-27T11:00:02Z","updated_at":"2022-01-25T12:15:28Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"**How to reproduce**\r\n\r\n0. `create table test_alias(str String , sub_str  String ALIAS substring(str, 1, 3)) engine=Memory()`\r\n1. `insert into test_alias(str) values('0123456')`\r\n2. `create user test`\r\n3. `grant SELECT(sub_str) ON test_alias to test`\r\n4. `select sub_str from test_alias ;` **OK**\r\n5. ` select sub_str from test_alias where 1=0 ;`    **ACCESS_DENIED**\r\n\r\n**Which ClickHouse server version to use**\r\n21.9.5.16\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31912/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31912/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31911","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31911/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31911/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31911/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/31911","id":1064931151,"node_id":"I_kwDOA5dJV84_eY9P","number":31911,"title":"SequenceMatch doesn't support DateTime64(6) type fields","user":{"login":"AviSarmani","id":49937628,"node_id":"MDQ6VXNlcjQ5OTM3NjI4","avatar_url":"https://avatars.githubusercontent.com/u/49937628?v=4","gravatar_id":"","url":"https://api.github.com/users/AviSarmani","html_url":"https://github.com/AviSarmani","followers_url":"https://api.github.com/users/AviSarmani/followers","following_url":"https://api.github.com/users/AviSarmani/following{/other_user}","gists_url":"https://api.github.com/users/AviSarmani/gists{/gist_id}","starred_url":"https://api.github.com/users/AviSarmani/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/AviSarmani/subscriptions","organizations_url":"https://api.github.com/users/AviSarmani/orgs","repos_url":"https://api.github.com/users/AviSarmani/repos","events_url":"https://api.github.com/users/AviSarmani/events{/privacy}","received_events_url":"https://api.github.com/users/AviSarmani/received_events","type":"User","site_admin":false},"labels":[{"id":1481221764,"node_id":"MDU6TGFiZWwxNDgxMjIxNzY0","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-datetime","name":"comp-datetime","color":"b5bcff","default":false,"description":"date & time & timezone related"},{"id":1575085465,"node_id":"MDU6TGFiZWwxNTc1MDg1NDY1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/unexpected%20behaviour","name":"unexpected behaviour","color":"e088ca","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-11-27T07:46:32Z","updated_at":"2021-11-29T15:08:32Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"We create our tables from Postgres and after upgrading to 21.11.3.6,\r\ntables with timestamp fields get converted to DateTime64(6) instead of DateTime64.\r\nThe change stems form this issue:\r\nhttps://github.com/ClickHouse/ClickHouse/issues/26216\r\nhttps://github.com/ClickHouse/ClickHouse/pull/26234/commits/192ee2df98931abe59b63590913e43182277d6e9\r\n\r\nMy problem is that all our code that used SequenceMatch on those field started breaking with the error:\r\nSQL Error [1002]: ClickHouse exception, code: 1002, host: xxxxxx, port: 443; Code: 43. DB::Exception: Illegal type DateTime64(6) of first argument of aggregate function sequenceMatch, must be DateTime. (ILLEGAL_TYPE_OF_ARGUMENT) (version 21.11.3.6 (official build))\r\n\r\nFor now we've fixed the issue by casting toDateTime() but I don't see a reason why SequenceMatch shouldn't support finer precision fields.\r\n\r\n**How to reproduce**\r\nVersion 21.11.3.6\r\n CREATE TABLE test\r\n(\r\n    `test_field` Nullable(Int64),\r\n    `test_key` Nullable(String),\r\n    `test_timestamp` Nullable(DateTime64(6)),\r\n)\r\nENGINE = MergeTree\r\nORDER BY tuple()\r\nSETTINGS allow_nullable_key = 1,\r\n index_granularity = 8192;\r\n\r\n* Queries to run that lead to unexpected result\r\nSELECT test_key\r\nFROM test\r\nGROUP BY test_key\r\nHAVING sequenceMatch('(?1)(?t<1296000)(?2)') (\r\n\t\ttest_timestamp\r\n\t\t,test_field= 1000\r\n\t\t,test_field= 2000\r\n\t\t)\r\n\r\n**Expected behavior**\r\nSequenceMatch should support DateTime64(6)\r\n\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31911/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31911/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31860","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31860/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31860/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31860/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/31860","id":1064333519,"node_id":"I_kwDOA5dJV84_cHDP","number":31860,"title":"Move ClickHouse Keeper logs messages to its own file.","user":{"login":"AlmostIvanSidorov","id":85959395,"node_id":"MDQ6VXNlcjg1OTU5Mzk1","avatar_url":"https://avatars.githubusercontent.com/u/85959395?v=4","gravatar_id":"","url":"https://api.github.com/users/AlmostIvanSidorov","html_url":"https://github.com/AlmostIvanSidorov","followers_url":"https://api.github.com/users/AlmostIvanSidorov/followers","following_url":"https://api.github.com/users/AlmostIvanSidorov/following{/other_user}","gists_url":"https://api.github.com/users/AlmostIvanSidorov/gists{/gist_id}","starred_url":"https://api.github.com/users/AlmostIvanSidorov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/AlmostIvanSidorov/subscriptions","organizations_url":"https://api.github.com/users/AlmostIvanSidorov/orgs","repos_url":"https://api.github.com/users/AlmostIvanSidorov/repos","events_url":"https://api.github.com/users/AlmostIvanSidorov/events{/privacy}","received_events_url":"https://api.github.com/users/AlmostIvanSidorov/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2021-11-26T10:45:47Z","updated_at":"2021-11-26T12:34:38Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"**Use case**\r\n\r\nWhen clickhouse-keeper is used as part of clickhouse-server it is using the clickhouse-server.log file.\r\n\r\n**Solution**\r\n\r\nMaybe it is better to use separate logs for clickhouse-keeper and clickhouse-server to make logs more clear.\r\n\r\n**Example of current logs:**\r\n\r\n```\r\n2021.11.26 13:16:08.205915 [ 380 ] {} <Debug> RaftInstance: notify cb 11028 0x7f5fd1a2a620\r\n2021.11.26 13:16:08.205924 [ 380 ] {} <Debug> RaftInstance: DONE: commit upto 11028, current idx 11028\r\n2021.11.26 13:16:08.205927 [ 380 ] {} <Trace> RaftInstance: commit_cv_ sleep\r\n2021.11.26 13:16:08.206161 [ 371 ] {} <Debug> RaftInstance: Receive a client_request message from 0 with LastLogIndex=0, LastLogTerm=0, EntriesLength=1, CommitIndex=0 and Term=0\r\n2021.11.26 13:16:08.206172 [ 371 ] {} <Debug> RaftInstance: append at log_idx 11029\r\n2021.11.26 13:16:08.207353 [ 381 ] {} <Debug> RaftInstance: trigger commit upto 11029\r\n2021.11.26 13:16:08.207364 [ 381 ] {} <Trace> RaftInstance: local log idx 11029, target_commit_idx 11029, quick_commit_index_ 11029, state_->get_commit_idx() 11028\r\n2021.11.26 13:16:08.207367 [ 381 ] {} <Trace> RaftInstance: commit_cv_ notify (local thread)\r\n2021.11.26 13:16:08.207381 [ 380 ] {} <Trace> RaftInstance: commit_cv_ wake up\r\n2021.11.26 13:16:08.207394 [ 380 ] {} <Debug> RaftInstance: commit upto 11029, current idx 11028\r\n2021.11.26 13:16:08.207397 [ 380 ] {} <Trace> RaftInstance: commit upto 11029, current idx 11029\r\n2021.11.26 13:16:08.207423 [ 380 ] {} <Debug> RaftInstance: notify cb 11029 0x7f5fd1954420\r\n2021.11.26 13:16:08.207433 [ 380 ] {} <Debug> RaftInstance: DONE: commit upto 11029, current idx 11029\r\n2021.11.26 13:16:08.207436 [ 380 ] {} <Trace> RaftInstance: commit_cv_ sleep\r\n2021.11.26 13:16:08.207450 [ 371 ] {} <Debug> RaftInstance: Receive a client_request message from 0 with LastLogIndex=0, LastLogTerm=0, EntriesLength=3, CommitIndex=0 and Term=0\r\n2021.11.26 13:16:08.207456 [ 371 ] {} <Debug> RaftInstance: append at log_idx 11030\r\n2021.11.26 13:16:08.207459 [ 371 ] {} <Debug> RaftInstance: append at log_idx 11031\r\n2021.11.26 13:16:08.207461 [ 371 ] {} <Debug> RaftInstance: append at log_idx 11032\r\n2021.11.26 13:16:08.207505 [ 544 ] {44d97903-408a-4d8b-aef8-eef7bcdc67c6} <Debug> DiskLocal: Reserving 1.00 MiB on disk `default`, having unreserved 379.61 GiB.\r\n2021.11.26 13:16:08.207738 [ 544 ] {44d97903-408a-4d8b-aef8-eef7bcdc67c6} <Debug> default.zookeeper_bench (8900fe60-8774-4d81-8900-fe6087742d81) (Replicated OutputStream): Wrote block with 2 rows\r\n2021.11.26 13:16:08.208647 [ 381 ] {} <Debug> RaftInstance: trigger commit upto 11032\r\n2021.11.26 13:16:08.208655 [ 381 ] {} <Trace> RaftInstance: local log idx 11032, target_commit_idx 11032, quick_commit_index_ 11032, state_->get_commit_idx() 11029\r\n```\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31860/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31860/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31851","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31851/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31851/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31851/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/31851","id":1064273165,"node_id":"I_kwDOA5dJV84_b4UN","number":31851,"title":"CI optimization","user":{"login":"Felixoid","id":3025537,"node_id":"MDQ6VXNlcjMwMjU1Mzc=","avatar_url":"https://avatars.githubusercontent.com/u/3025537?v=4","gravatar_id":"","url":"https://api.github.com/users/Felixoid","html_url":"https://github.com/Felixoid","followers_url":"https://api.github.com/users/Felixoid/followers","following_url":"https://api.github.com/users/Felixoid/following{/other_user}","gists_url":"https://api.github.com/users/Felixoid/gists{/gist_id}","starred_url":"https://api.github.com/users/Felixoid/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Felixoid/subscriptions","organizations_url":"https://api.github.com/users/Felixoid/orgs","repos_url":"https://api.github.com/users/Felixoid/repos","events_url":"https://api.github.com/users/Felixoid/events{/privacy}","received_events_url":"https://api.github.com/users/Felixoid/received_events","type":"User","site_admin":false},"labels":[{"id":2372525166,"node_id":"MDU6TGFiZWwyMzcyNTI1MTY2","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-ci","name":"comp-ci","color":"b5bcff","default":false,"description":"Continuous integration"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-11-26T09:43:42Z","updated_at":"2021-12-03T10:17:33Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"- Consider spot instances for tests\r\n    - https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/rebalance-recommendations.html\r\n    - https://aws.amazon.com/ru/ec2/spot/instance-advisor/\r\n    - https://ec2pricing.net/\r\n    - https://instances.vantage.sh/?selected=m5.4xlarge,t2.2xlarge\r\n- Consider scale fuzzy-tests according to number of cores AND\r\n- Chose the cheapest M instanse by ${SPOT}/${ON_DEMAND} price\r\n- ..........\r\n- PUT HERE WILD IDEAS TO DECREASE THE COST","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31851/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31851/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31845","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31845/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31845/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31845/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/31845","id":1064059224,"node_id":"I_kwDOA5dJV84_bEFY","number":31845,"title":"Skip index file","user":{"login":"zqw961025","id":18101179,"node_id":"MDQ6VXNlcjE4MTAxMTc5","avatar_url":"https://avatars.githubusercontent.com/u/18101179?v=4","gravatar_id":"","url":"https://api.github.com/users/zqw961025","html_url":"https://github.com/zqw961025","followers_url":"https://api.github.com/users/zqw961025/followers","following_url":"https://api.github.com/users/zqw961025/following{/other_user}","gists_url":"https://api.github.com/users/zqw961025/gists{/gist_id}","starred_url":"https://api.github.com/users/zqw961025/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zqw961025/subscriptions","organizations_url":"https://api.github.com/users/zqw961025/orgs","repos_url":"https://api.github.com/users/zqw961025/repos","events_url":"https://api.github.com/users/zqw961025/events{/privacy}","received_events_url":"https://api.github.com/users/zqw961025/received_events","type":"User","site_admin":false},"labels":[{"id":386401510,"node_id":"MDU6TGFiZWwzODY0MDE1MTA=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/question","name":"question","color":"bfdadc","default":true,"description":""},{"id":3761121284,"node_id":"LA_kwDOA5dJV87gLigE","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/support-services","name":"support-services","color":"1A70E6","default":false,"description":""}],"state":"open","locked":false,"assignee":{"login":"genzgd","id":625882,"node_id":"MDQ6VXNlcjYyNTg4Mg==","avatar_url":"https://avatars.githubusercontent.com/u/625882?v=4","gravatar_id":"","url":"https://api.github.com/users/genzgd","html_url":"https://github.com/genzgd","followers_url":"https://api.github.com/users/genzgd/followers","following_url":"https://api.github.com/users/genzgd/following{/other_user}","gists_url":"https://api.github.com/users/genzgd/gists{/gist_id}","starred_url":"https://api.github.com/users/genzgd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/genzgd/subscriptions","organizations_url":"https://api.github.com/users/genzgd/orgs","repos_url":"https://api.github.com/users/genzgd/repos","events_url":"https://api.github.com/users/genzgd/events{/privacy}","received_events_url":"https://api.github.com/users/genzgd/received_events","type":"User","site_admin":false},"assignees":[{"login":"genzgd","id":625882,"node_id":"MDQ6VXNlcjYyNTg4Mg==","avatar_url":"https://avatars.githubusercontent.com/u/625882?v=4","gravatar_id":"","url":"https://api.github.com/users/genzgd","html_url":"https://github.com/genzgd","followers_url":"https://api.github.com/users/genzgd/followers","following_url":"https://api.github.com/users/genzgd/following{/other_user}","gists_url":"https://api.github.com/users/genzgd/gists{/gist_id}","starred_url":"https://api.github.com/users/genzgd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/genzgd/subscriptions","organizations_url":"https://api.github.com/users/genzgd/orgs","repos_url":"https://api.github.com/users/genzgd/repos","events_url":"https://api.github.com/users/genzgd/events{/privacy}","received_events_url":"https://api.github.com/users/genzgd/received_events","type":"User","site_admin":false}],"milestone":null,"comments":0,"created_at":"2021-11-26T03:04:48Z","updated_at":"2022-01-24T16:42:41Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"I want to know more about the skip index, but when I look at the skp_idx_[cloumn].idx file, I can't understand the contents because it is binary, is there any command to view the file?","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31845/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31845/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31837","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31837/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31837/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31837/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/31837","id":1064021607,"node_id":"I_kwDOA5dJV84_a65n","number":31837,"title":"Support declared value for Nullable storage, avoiding separate bitmap performance impact","user":{"login":"joshg","id":299038,"node_id":"MDQ6VXNlcjI5OTAzOA==","avatar_url":"https://avatars.githubusercontent.com/u/299038?v=4","gravatar_id":"","url":"https://api.github.com/users/joshg","html_url":"https://github.com/joshg","followers_url":"https://api.github.com/users/joshg/followers","following_url":"https://api.github.com/users/joshg/following{/other_user}","gists_url":"https://api.github.com/users/joshg/gists{/gist_id}","starred_url":"https://api.github.com/users/joshg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/joshg/subscriptions","organizations_url":"https://api.github.com/users/joshg/orgs","repos_url":"https://api.github.com/users/joshg/repos","events_url":"https://api.github.com/users/joshg/events{/privacy}","received_events_url":"https://api.github.com/users/joshg/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2021-11-26T01:45:37Z","updated_at":"2021-11-28T05:15:25Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"**Use case**\r\n\r\nWould like to use an explicit encoding value for Nullable column types, keeping the clean semantics of NULL and compatibility with Null-friendly SQL code, but without taking the hit of the separate bitmap to record NULL records. The documentation is clear that there is almost always a performance and space impact of making a field Nullable. In cases where the full value space of the type is not being used, NULL semantics can be maintained without this impacting storage or performance.\r\n\r\n**Describe the solution you'd like**\r\n\r\nI would like to be able to specify the storage value for NULL within the type space of the Nullable type.\r\nWhen specified, NULL will be stored inline with the column and transparently handled as a NULL value, but without the separate bitmaps storage or lookup.\r\n\r\nFor example:\r\n\r\nNullable(UInt32 AS 999999999) or Nullable(UInt32, NULL AS 999999999) or similar syntax.\r\n\r\nThe value specification would be completely optional, but when specified NULL would be stored as the specified value in the primary table. No separate NULL bitmap would be stored.\r\n\r\nSo in the example above, inserting 1, NULL, 2 into this table would result in:\r\n\r\n1, 999999999, 2 actually being stored in the column and no separate NULL bitmap.\r\n\r\nAll of the SQL NULL handling (e.g., isNull, etc.) would be transparently mapped under the hood to comparisons to the specified value.\r\n\r\nSo isNull(v) of above would still return false, true, false. There would be no way to 'read' the 999999999. It is a declared storage-only value for the NULL representation.\r\n\r\nWhen specified as the NULL value, it would no longer be possible to store that value in the column.\r\nIt would either ERROR on insert or transparently write, but read back as a NULL value (I don't care on this).\r\n\r\n**Describe alternatives you've considered**\r\n\r\nThis can be handled explicitly in the logic above Clickhouse, but it's messy and inconsistent. It also makes it more difficult to translate and adapt alternate SQL code that cleanly and appropriately uses SQL NULL semantics.\r\n\r\nAs Clickhouse philosophically allows a great deal of storage control in the interest of performance and efficiency, it seems consistent to allow the encoding of NULL to be inline with the Nullable data type, in instances where the full value space of the underlying type is not in fact needed.\r\n\r\n**Additional context**\r\n\r\nNotably https://github.com/ClickHouse/ClickHouse/issues/16330 suggests that the lowCardinality type may also operate this way (assigning a value in the dictionary to represent the NULL, avoiding the separate mask). This effectively extends this approach to any data type where a value can be set aside for use in NULL encoding, restoring all the efficiency of the non-Nullable implementation.\r\n\r\nAlso, since this is completely optional, there would be no impact on storage or implementation for Nullable data types declared without an encoding value specified.\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31837/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31837/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31833","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31833/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31833/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31833/events","html_url":"https://github.com/ClickHouse/ClickHouse/pull/31833","id":1063920697,"node_id":"PR_kwDOA5dJV84vCOah","number":31833,"title":"Check what will happen if we build ClickHouse with Musl","user":{"login":"alexey-milovidov","id":18581488,"node_id":"MDQ6VXNlcjE4NTgxNDg4","avatar_url":"https://avatars.githubusercontent.com/u/18581488?v=4","gravatar_id":"","url":"https://api.github.com/users/alexey-milovidov","html_url":"https://github.com/alexey-milovidov","followers_url":"https://api.github.com/users/alexey-milovidov/followers","following_url":"https://api.github.com/users/alexey-milovidov/following{/other_user}","gists_url":"https://api.github.com/users/alexey-milovidov/gists{/gist_id}","starred_url":"https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexey-milovidov/subscriptions","organizations_url":"https://api.github.com/users/alexey-milovidov/orgs","repos_url":"https://api.github.com/users/alexey-milovidov/repos","events_url":"https://api.github.com/users/alexey-milovidov/events{/privacy}","received_events_url":"https://api.github.com/users/alexey-milovidov/received_events","type":"User","site_admin":false},"labels":[{"id":1876999755,"node_id":"MDU6TGFiZWwxODc2OTk5NzU1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/pr-not-for-changelog","name":"pr-not-for-changelog","color":"007700","default":false,"description":"This PR should not be mentioned in the changelog"},{"id":2250495937,"node_id":"MDU6TGFiZWwyMjUwNDk1OTM3","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/force%20tests","name":"force tests","color":"59d16d","default":false,"description":"Force test ignoring fast test output. Also forces full perf test run."}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-11-25T21:10:08Z","updated_at":"2022-01-09T09:26:45Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"draft":true,"pull_request":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/pulls/31833","html_url":"https://github.com/ClickHouse/ClickHouse/pull/31833","diff_url":"https://github.com/ClickHouse/ClickHouse/pull/31833.diff","patch_url":"https://github.com/ClickHouse/ClickHouse/pull/31833.patch","merged_at":null},"body":"Changelog category (leave one):\r\n- Not for changelog (changelog entry is not required)\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31833/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31833/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31796","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31796/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31796/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31796/events","html_url":"https://github.com/ClickHouse/ClickHouse/pull/31796","id":1063595306,"node_id":"PR_kwDOA5dJV84vBOU9","number":31796,"title":"Added Analyzer","user":{"login":"kitaisreal","id":22458333,"node_id":"MDQ6VXNlcjIyNDU4MzMz","avatar_url":"https://avatars.githubusercontent.com/u/22458333?v=4","gravatar_id":"","url":"https://api.github.com/users/kitaisreal","html_url":"https://github.com/kitaisreal","followers_url":"https://api.github.com/users/kitaisreal/followers","following_url":"https://api.github.com/users/kitaisreal/following{/other_user}","gists_url":"https://api.github.com/users/kitaisreal/gists{/gist_id}","starred_url":"https://api.github.com/users/kitaisreal/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kitaisreal/subscriptions","organizations_url":"https://api.github.com/users/kitaisreal/orgs","repos_url":"https://api.github.com/users/kitaisreal/repos","events_url":"https://api.github.com/users/kitaisreal/events{/privacy}","received_events_url":"https://api.github.com/users/kitaisreal/received_events","type":"User","site_admin":false},"labels":[{"id":1304141686,"node_id":"MDU6TGFiZWwxMzA0MTQxNjg2","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/pr-improvement","name":"pr-improvement","color":"007700","default":false,"description":"Pull request with some product improvements"}],"state":"open","locked":false,"assignee":{"login":"novikd","id":10158699,"node_id":"MDQ6VXNlcjEwMTU4Njk5","avatar_url":"https://avatars.githubusercontent.com/u/10158699?v=4","gravatar_id":"","url":"https://api.github.com/users/novikd","html_url":"https://github.com/novikd","followers_url":"https://api.github.com/users/novikd/followers","following_url":"https://api.github.com/users/novikd/following{/other_user}","gists_url":"https://api.github.com/users/novikd/gists{/gist_id}","starred_url":"https://api.github.com/users/novikd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/novikd/subscriptions","organizations_url":"https://api.github.com/users/novikd/orgs","repos_url":"https://api.github.com/users/novikd/repos","events_url":"https://api.github.com/users/novikd/events{/privacy}","received_events_url":"https://api.github.com/users/novikd/received_events","type":"User","site_admin":false},"assignees":[{"login":"novikd","id":10158699,"node_id":"MDQ6VXNlcjEwMTU4Njk5","avatar_url":"https://avatars.githubusercontent.com/u/10158699?v=4","gravatar_id":"","url":"https://api.github.com/users/novikd","html_url":"https://github.com/novikd","followers_url":"https://api.github.com/users/novikd/followers","following_url":"https://api.github.com/users/novikd/following{/other_user}","gists_url":"https://api.github.com/users/novikd/gists{/gist_id}","starred_url":"https://api.github.com/users/novikd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/novikd/subscriptions","organizations_url":"https://api.github.com/users/novikd/orgs","repos_url":"https://api.github.com/users/novikd/repos","events_url":"https://api.github.com/users/novikd/events{/privacy}","received_events_url":"https://api.github.com/users/novikd/received_events","type":"User","site_admin":false}],"milestone":null,"comments":1,"created_at":"2021-11-25T13:31:51Z","updated_at":"2022-01-24T14:10:55Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/pulls/31796","html_url":"https://github.com/ClickHouse/ClickHouse/pull/31796","diff_url":"https://github.com/ClickHouse/ClickHouse/pull/31796.diff","patch_url":"https://github.com/ClickHouse/ClickHouse/pull/31796.patch","merged_at":null},"body":"Changelog category (leave one):\r\n- Improvement\r\n\r\nChangelog entry (a user-readable short description of the changes that goes to CHANGELOG.md):\r\nImproved identifier and alias analysis. Fixes #23194.\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31796/reactions","total_count":9,"+1":4,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":5,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31796/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31768","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31768/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31768/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31768/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/31768","id":1063385684,"node_id":"I_kwDOA5dJV84_YfpU","number":31768,"title":"avgWeighted return wrong result with Decimal value, and float weight","user":{"login":"filimonov","id":1549571,"node_id":"MDQ6VXNlcjE1NDk1NzE=","avatar_url":"https://avatars.githubusercontent.com/u/1549571?v=4","gravatar_id":"","url":"https://api.github.com/users/filimonov","html_url":"https://github.com/filimonov","followers_url":"https://api.github.com/users/filimonov/followers","following_url":"https://api.github.com/users/filimonov/following{/other_user}","gists_url":"https://api.github.com/users/filimonov/gists{/gist_id}","starred_url":"https://api.github.com/users/filimonov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/filimonov/subscriptions","organizations_url":"https://api.github.com/users/filimonov/orgs","repos_url":"https://api.github.com/users/filimonov/repos","events_url":"https://api.github.com/users/filimonov/events{/privacy}","received_events_url":"https://api.github.com/users/filimonov/received_events","type":"User","site_admin":false},"labels":[{"id":386401505,"node_id":"MDU6TGFiZWwzODY0MDE1MDU=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/bug","name":"bug","color":"ee0701","default":true,"description":"Confirmed user-visible misbehaviour in official release"},{"id":1745440304,"node_id":"MDU6TGFiZWwxNzQ1NDQwMzA0","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-decimal","name":"comp-decimal","color":"b5bcff","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2021-11-25T10:10:07Z","updated_at":"2021-12-10T17:31:18Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"body":"```sql\r\nSELECT avgWeighted(CAST(-398., 'Decimal(38, 10)'), CAST(0.05453896522521973, 'Decimal(38,10)')) AS x; \r\n-- ok -398 \r\n\r\nselect avgWeighted( CAST(-398., 'Decimal(38, 10)'),  CAST(0.05453896522521973, 'Float64') ) as x;\r\n-- wrong! 0 \r\n\r\n\r\nSELECT avgWeighted(CAST(-398., 'Float64'), CAST(0.05453896522521973, 'Decimal(38,10)')) AS x\r\n-- ok: -398\r\n\r\nSELECT avgWeighted(CAST(-398., 'Float64'), CAST(0.05453896522521973, 'Float64')) AS x\r\n-- ok: -398\r\n```","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31768/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31768/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31696","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31696/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31696/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31696/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/31696","id":1062387227,"node_id":"I_kwDOA5dJV84_Ur4b","number":31696,"title":"Put cursor at the beginning of the line before rendering prompt.","user":{"login":"alexey-milovidov","id":18581488,"node_id":"MDQ6VXNlcjE4NTgxNDg4","avatar_url":"https://avatars.githubusercontent.com/u/18581488?v=4","gravatar_id":"","url":"https://api.github.com/users/alexey-milovidov","html_url":"https://github.com/alexey-milovidov","followers_url":"https://api.github.com/users/alexey-milovidov/followers","following_url":"https://api.github.com/users/alexey-milovidov/following{/other_user}","gists_url":"https://api.github.com/users/alexey-milovidov/gists{/gist_id}","starred_url":"https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexey-milovidov/subscriptions","organizations_url":"https://api.github.com/users/alexey-milovidov/orgs","repos_url":"https://api.github.com/users/alexey-milovidov/repos","events_url":"https://api.github.com/users/alexey-milovidov/events{/privacy}","received_events_url":"https://api.github.com/users/alexey-milovidov/received_events","type":"User","site_admin":false},"labels":[{"id":845247686,"node_id":"MDU6TGFiZWw4NDUyNDc2ODY=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/usability","name":"usability","color":"ebf28c","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-11-24T12:46:42Z","updated_at":"2021-11-24T12:47:31Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"**Describe the issue**\r\n\r\nI run `clickhouse-local` and quickly type SELECT before prompt appeared. Then I get this:\r\n\r\n```\r\n$ clickhouse-local \r\nClickHouse local version 21.12.1.1.\r\n\r\nSmilovidov-desktop :)SELECT 1\r\n```","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31696/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31696/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31683","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31683/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31683/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31683/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/31683","id":1062176551,"node_id":"I_kwDOA5dJV84_T4cn","number":31683,"title":"view predicate pushdown doesn't work","user":{"login":"padrebolt","id":94959548,"node_id":"U_kgDOBaj3vA","avatar_url":"https://avatars.githubusercontent.com/u/94959548?v=4","gravatar_id":"","url":"https://api.github.com/users/padrebolt","html_url":"https://github.com/padrebolt","followers_url":"https://api.github.com/users/padrebolt/followers","following_url":"https://api.github.com/users/padrebolt/following{/other_user}","gists_url":"https://api.github.com/users/padrebolt/gists{/gist_id}","starred_url":"https://api.github.com/users/padrebolt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/padrebolt/subscriptions","organizations_url":"https://api.github.com/users/padrebolt/orgs","repos_url":"https://api.github.com/users/padrebolt/repos","events_url":"https://api.github.com/users/padrebolt/events{/privacy}","received_events_url":"https://api.github.com/users/padrebolt/received_events","type":"User","site_admin":false},"labels":[{"id":756395244,"node_id":"MDU6TGFiZWw3NTYzOTUyNDQ=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/performance","name":"performance","color":"c2e0c6","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2021-11-24T09:13:33Z","updated_at":"2021-11-24T12:09:41Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"fastest of 3 requests\r\nSELECT OID, OID_type, alias, Value FROM robra.metrics_v WHERE alias LIKE '127.0.0.1' AND OID like '1.3.6.1.2.1.31.1.1.1.1.%' format Null;\r\n\r\n0 rows in set. Elapsed: 2.958 sec. Processed 34.32 million rows, 3.15 GB (11.60 million rows/s., 1.06 GB/s.)\r\n\r\nBut select from view works fine with settings\r\nfastest of 3 requests\r\nSELECT OID, OID_type, alias, Value FROM robra.metrics_v2 settings my_alias = '127.0.0.1', my_OID = '1.3.6.1.2.1.31.1.1.1.1.%' format Null;\r\n\r\n0 rows in set. Elapsed: 0.182 sec. Processed 13.85 million rows, 1.37 GB (76.06 million rows/s., 7.50 GB/s.)\r\n\r\njust like direct query\r\nfastest of 3 requests\r\n\r\n0 rows in set. Elapsed: 0.155 sec. Processed 13.85 million rows, 1.37 GB (89.36 million rows/s., 8.81 GB/s.)\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31683/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31683/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31674","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31674/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31674/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31674/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/31674","id":1061745999,"node_id":"I_kwDOA5dJV84_SPVP","number":31674,"title":"Count from Set table","user":{"login":"Fallenyasha","id":13795981,"node_id":"MDQ6VXNlcjEzNzk1OTgx","avatar_url":"https://avatars.githubusercontent.com/u/13795981?v=4","gravatar_id":"","url":"https://api.github.com/users/Fallenyasha","html_url":"https://github.com/Fallenyasha","followers_url":"https://api.github.com/users/Fallenyasha/followers","following_url":"https://api.github.com/users/Fallenyasha/following{/other_user}","gists_url":"https://api.github.com/users/Fallenyasha/gists{/gist_id}","starred_url":"https://api.github.com/users/Fallenyasha/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Fallenyasha/subscriptions","organizations_url":"https://api.github.com/users/Fallenyasha/orgs","repos_url":"https://api.github.com/users/Fallenyasha/repos","events_url":"https://api.github.com/users/Fallenyasha/events{/privacy}","received_events_url":"https://api.github.com/users/Fallenyasha/received_events","type":"User","site_admin":false},"labels":[{"id":1401777979,"node_id":"MDU6TGFiZWwxNDAxNzc3OTc5","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-optimizers","name":"comp-optimizers","color":"b5bcff","default":false,"description":"Query optimizations"},{"id":1575085465,"node_id":"MDU6TGFiZWwxNTc1MDg1NDY1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/unexpected%20behaviour","name":"unexpected behaviour","color":"e088ca","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2021-11-23T21:57:18Z","updated_at":"2021-11-29T14:48:23Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Не во всех ситуациях count() из таблиц с движком Set работает.\r\n\r\nСоздаем для примера три таблицы на разных движках\r\n>create table internal.test_set (key UInt64) engine = Set();\r\ncreate table internal.test_join (key UInt64, value UInt64) engine = Join(any, left, key);\r\ncreate table internal.test_merge (key UInt64, value UInt64) engine = MergeTree() order by key;\r\n\r\nСмотрим количества, тут все работает нормально\r\n>select count() as cnt from internal.test_set;\r\nselect count() as cnt from internal.test_join;\r\nselect count() as cnt from internal.test_merge;\r\n\r\nОбъединяем в один запрос, тоже все нормально\r\n>select name, cnt\r\nfrom (\r\n    select 'test_set' as name, count() as cnt from internal.test_set\r\n    union all\r\n    select 'test_join' as name, count() as cnt from internal.test_join\r\n    union all\r\n    select 'test_merge' as name, count() as cnt from internal.test_merge);\r\n\r\nОднако, если добавить в этот запрос условие where cnt = 0, то получаем ошибку\r\nCode: 48. DB::Exception: Method read is not supported by storage Set. (NOT_IMPLEMENTED) (version 21.11.4.14 (official build))\r\n\r\nДля воспроизведения ошибки достаточно просто выполнить такой запрос\r\n>select cnt\r\nfrom (select count() as cnt from internal.test_set)\r\nwhere cnt = 0;\r\n\r\nПри этом удалось наколхозить такой запрос, который бы работал\r\n>select cnt\r\nfrom (select count() as cnt from internal.test_set)\r\nwhere arrayJoin([cnt]) = 0;","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31674/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31674/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31661","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31661/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31661/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31661/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/31661","id":1061398453,"node_id":"I_kwDOA5dJV84_Q6e1","number":31661,"title":"Can we check for existing tables in atomic database when adding a new replica to cluster and creating a schema there?","user":{"login":"simPod","id":327717,"node_id":"MDQ6VXNlcjMyNzcxNw==","avatar_url":"https://avatars.githubusercontent.com/u/327717?v=4","gravatar_id":"","url":"https://api.github.com/users/simPod","html_url":"https://github.com/simPod","followers_url":"https://api.github.com/users/simPod/followers","following_url":"https://api.github.com/users/simPod/following{/other_user}","gists_url":"https://api.github.com/users/simPod/gists{/gist_id}","starred_url":"https://api.github.com/users/simPod/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/simPod/subscriptions","organizations_url":"https://api.github.com/users/simPod/orgs","repos_url":"https://api.github.com/users/simPod/repos","events_url":"https://api.github.com/users/simPod/events{/privacy}","received_events_url":"https://api.github.com/users/simPod/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2021-11-23T15:09:18Z","updated_at":"2021-11-30T19:17:30Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"We use atomic engine so we can atomically swap tables\r\n\r\n`EXCHANGE TABLES new_table AND old_table;`\r\n\r\nWhen we add a new replica to the cluster, a schema must be created.\r\n\r\nWe have a script with table definitions in a form of `CREATE TABLE IF NOT EXISTS xxx ON CLUSTER` statements that automatically setups all tables on newly added replicas. The problem is we cannot run this script for atomic dbs.\r\n\r\nConsider this DDL query:\r\n\r\n```sql\r\nCREATE TABLE IF NOT EXISTS atomic.t1 ON CLUSTER '{cluster}' (\r\n    is_best        Int8,\r\n    timestamp      DateTime64(3),\r\n    sign           Int8\r\n)\r\nENGINE = ReplicatedCollapsingMergeTree('/clickhouse/tables/{shard}/{uuid}', '{replica}', sign)\r\n```\r\n\r\nWe do not really fancy to replace the uuid in ZK path manually with uuid currently used in the cluster in order to join replicated tables.\r\n\r\n`ReplicatedCollapsingMergeTree('/clickhouse/tables/{shard}/manually-replaced-uuid-here', '{replica}', sign)`\r\n\r\nConsider doing this for e.g. 50 tables, it's a tedious work and very error-prone.\r\n\r\n--------------------\r\n\r\n_So the question is_ Would there be a way to check for existing same-named tables in a cluster+db and do lookup of currently used uuid on a ClickHouse side?\r\n\r\nSo the flow would be\r\n\r\n1. Run` CREATE TABLE IF NOT EXISTS atomic.t1 ON CLUSTER '{cluster}' ...`\r\n2. Found replica with missing table\r\n3. Initialize table creation:\r\n4. Check for tables with the name `t1` in database `atomic` already present on the cluster. And if the table is present, use its uuid instead of generating a new one\r\n\r\nI'd rather have different table uuids as an implementation detail of atomic engine and not something I have to worry about. I'd like to keep using table names as their identifier in queries.\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31661/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31661/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31644","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31644/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31644/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31644/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/31644","id":1060618553,"node_id":"I_kwDOA5dJV84_N8E5","number":31644,"title":"Migrate repo.clickhouse.com to artifactory","user":{"login":"Felixoid","id":3025537,"node_id":"MDQ6VXNlcjMwMjU1Mzc=","avatar_url":"https://avatars.githubusercontent.com/u/3025537?v=4","gravatar_id":"","url":"https://api.github.com/users/Felixoid","html_url":"https://github.com/Felixoid","followers_url":"https://api.github.com/users/Felixoid/followers","following_url":"https://api.github.com/users/Felixoid/following{/other_user}","gists_url":"https://api.github.com/users/Felixoid/gists{/gist_id}","starred_url":"https://api.github.com/users/Felixoid/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Felixoid/subscriptions","organizations_url":"https://api.github.com/users/Felixoid/orgs","repos_url":"https://api.github.com/users/Felixoid/repos","events_url":"https://api.github.com/users/Felixoid/events{/privacy}","received_events_url":"https://api.github.com/users/Felixoid/received_events","type":"User","site_admin":false},"labels":[{"id":2372525166,"node_id":"MDU6TGFiZWwyMzcyNTI1MTY2","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-ci","name":"comp-ci","color":"b5bcff","default":false,"description":"Continuous integration"}],"state":"open","locked":false,"assignee":{"login":"Felixoid","id":3025537,"node_id":"MDQ6VXNlcjMwMjU1Mzc=","avatar_url":"https://avatars.githubusercontent.com/u/3025537?v=4","gravatar_id":"","url":"https://api.github.com/users/Felixoid","html_url":"https://github.com/Felixoid","followers_url":"https://api.github.com/users/Felixoid/followers","following_url":"https://api.github.com/users/Felixoid/following{/other_user}","gists_url":"https://api.github.com/users/Felixoid/gists{/gist_id}","starred_url":"https://api.github.com/users/Felixoid/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Felixoid/subscriptions","organizations_url":"https://api.github.com/users/Felixoid/orgs","repos_url":"https://api.github.com/users/Felixoid/repos","events_url":"https://api.github.com/users/Felixoid/events{/privacy}","received_events_url":"https://api.github.com/users/Felixoid/received_events","type":"User","site_admin":false},"assignees":[{"login":"Felixoid","id":3025537,"node_id":"MDQ6VXNlcjMwMjU1Mzc=","avatar_url":"https://avatars.githubusercontent.com/u/3025537?v=4","gravatar_id":"","url":"https://api.github.com/users/Felixoid","html_url":"https://github.com/Felixoid","followers_url":"https://api.github.com/users/Felixoid/followers","following_url":"https://api.github.com/users/Felixoid/following{/other_user}","gists_url":"https://api.github.com/users/Felixoid/gists{/gist_id}","starred_url":"https://api.github.com/users/Felixoid/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Felixoid/subscriptions","organizations_url":"https://api.github.com/users/Felixoid/orgs","repos_url":"https://api.github.com/users/Felixoid/repos","events_url":"https://api.github.com/users/Felixoid/events{/privacy}","received_events_url":"https://api.github.com/users/Felixoid/received_events","type":"User","site_admin":false}],"milestone":null,"comments":1,"created_at":"2021-11-22T21:39:31Z","updated_at":"2021-11-24T08:46:48Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"We need to push released packaged to artifactory.\r\n\r\nPlan:\r\n\r\n- Each successful build already pushes the packages to s3, e.g. [here](https://s3.amazonaws.com/clickhouse-builds/0/e94f5a33443da4906f11041dc389b86fe5bd876b/clickhouse_build_check_(actions)/report.html)\r\n- When the release is spun out, the release job should download the assets, convert deb to rpm, and then push it to artifactory.\r\n\r\nSo, the first part of the task is a python script to get the packages. It:\r\n\r\n- gets the packages from aws by `https://s3.amazonaws.com/clickhouse-builds/0/${HASH}/clickhouse_build_check_(actions)/clang-13_relwithdebuginfo_none_bundled_unsplitted_notidy_without_coverage_deb/${NAME}_21.12.1.0_{all|amd64}.deb`\r\n- Convert deb to rpm - use alien\r\n- Push packages to artifactory, a good candidate for API usage is https://github.com/devopshq/artifactory\r\n\r\nFor release-branches:\r\n\r\n- If the job FinishCheck is green, the new release is created.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31644/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31644/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31643","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31643/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31643/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31643/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/31643","id":1060582288,"node_id":"I_kwDOA5dJV84_NzOQ","number":31643,"title":"Replace \"Turbo-Base64\" to \"lemire/fastbase64\"","user":{"login":"alexey-milovidov","id":18581488,"node_id":"MDQ6VXNlcjE4NTgxNDg4","avatar_url":"https://avatars.githubusercontent.com/u/18581488?v=4","gravatar_id":"","url":"https://api.github.com/users/alexey-milovidov","html_url":"https://github.com/alexey-milovidov","followers_url":"https://api.github.com/users/alexey-milovidov/followers","following_url":"https://api.github.com/users/alexey-milovidov/following{/other_user}","gists_url":"https://api.github.com/users/alexey-milovidov/gists{/gist_id}","starred_url":"https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexey-milovidov/subscriptions","organizations_url":"https://api.github.com/users/alexey-milovidov/orgs","repos_url":"https://api.github.com/users/alexey-milovidov/repos","events_url":"https://api.github.com/users/alexey-milovidov/events{/privacy}","received_events_url":"https://api.github.com/users/alexey-milovidov/received_events","type":"User","site_admin":false},"labels":[{"id":521113272,"node_id":"MDU6TGFiZWw1MjExMTMyNzI=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/build","name":"build","color":"800000","default":false,"description":""}],"state":"open","locked":false,"assignee":{"login":"vdimir","id":7023786,"node_id":"MDQ6VXNlcjcwMjM3ODY=","avatar_url":"https://avatars.githubusercontent.com/u/7023786?v=4","gravatar_id":"","url":"https://api.github.com/users/vdimir","html_url":"https://github.com/vdimir","followers_url":"https://api.github.com/users/vdimir/followers","following_url":"https://api.github.com/users/vdimir/following{/other_user}","gists_url":"https://api.github.com/users/vdimir/gists{/gist_id}","starred_url":"https://api.github.com/users/vdimir/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vdimir/subscriptions","organizations_url":"https://api.github.com/users/vdimir/orgs","repos_url":"https://api.github.com/users/vdimir/repos","events_url":"https://api.github.com/users/vdimir/events{/privacy}","received_events_url":"https://api.github.com/users/vdimir/received_events","type":"User","site_admin":false},"assignees":[{"login":"vdimir","id":7023786,"node_id":"MDQ6VXNlcjcwMjM3ODY=","avatar_url":"https://avatars.githubusercontent.com/u/7023786?v=4","gravatar_id":"","url":"https://api.github.com/users/vdimir","html_url":"https://github.com/vdimir","followers_url":"https://api.github.com/users/vdimir/followers","following_url":"https://api.github.com/users/vdimir/following{/other_user}","gists_url":"https://api.github.com/users/vdimir/gists{/gist_id}","starred_url":"https://api.github.com/users/vdimir/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vdimir/subscriptions","organizations_url":"https://api.github.com/users/vdimir/orgs","repos_url":"https://api.github.com/users/vdimir/repos","events_url":"https://api.github.com/users/vdimir/events{/privacy}","received_events_url":"https://api.github.com/users/vdimir/received_events","type":"User","site_admin":false}],"milestone":null,"comments":1,"created_at":"2021-11-22T20:52:35Z","updated_at":"2022-01-19T15:13:19Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"https://github.com/lemire/fastbase64","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31643/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31643/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31639","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31639/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31639/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31639/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/31639","id":1060346800,"node_id":"I_kwDOA5dJV84_M5uw","number":31639,"title":"addressToLine misbehaves in master","user":{"login":"ilejn","id":360758,"node_id":"MDQ6VXNlcjM2MDc1OA==","avatar_url":"https://avatars.githubusercontent.com/u/360758?v=4","gravatar_id":"","url":"https://api.github.com/users/ilejn","html_url":"https://github.com/ilejn","followers_url":"https://api.github.com/users/ilejn/followers","following_url":"https://api.github.com/users/ilejn/following{/other_user}","gists_url":"https://api.github.com/users/ilejn/gists{/gist_id}","starred_url":"https://api.github.com/users/ilejn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilejn/subscriptions","organizations_url":"https://api.github.com/users/ilejn/orgs","repos_url":"https://api.github.com/users/ilejn/repos","events_url":"https://api.github.com/users/ilejn/events{/privacy}","received_events_url":"https://api.github.com/users/ilejn/received_events","type":"User","site_admin":false},"labels":[{"id":3260776666,"node_id":"MDU6TGFiZWwzMjYwNzc2NjY2","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/potential%20bug","name":"potential bug","color":"ffc080","default":false,"description":"To be reviewed by developers and confirmed/rejected."}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2021-11-22T16:19:03Z","updated_at":"2021-11-22T22:52:56Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Note filenames in the backtrace\r\n\r\n```\r\ntail -10  clickhouse-server.err.log\r\n5. DB::TCPHandler::receiveHello() @ 0x131f2503 in /usr/lib/debug/.build-id/03/836aa56cfad660466eb42a7973e7053e525ccb.debug\r\n6. DB::TCPHandler::runImpl() @ 0x131ebd82 in /usr/lib/debug/.build-id/03/836aa56cfad660466eb42a7973e7053e525ccb.debug\r\n7. DB::TCPHandler::run() @ 0x13200499 in /usr/lib/debug/.build-id/03/836aa56cfad660466eb42a7973e7053e525ccb.debug\r\n8. Poco::Net::TCPServerConnection::start() @ 0x15e8358f in /usr/lib/debug/.build-id/03/836aa56cfad660466eb42a7973e7053e525ccb.debug\r\n9. Poco::Net::TCPServerDispatcher::run() @ 0x15e85981 in /usr/lib/debug/.build-id/03/836aa56cfad660466eb42a7973e7053e525ccb.debug\r\n10. Poco::PooledThread::run() @ 0x15f9c1c9 in /usr/lib/debug/.build-id/03/836aa56cfad660466eb42a7973e7053e525ccb.debug\r\n11. Poco::ThreadImpl::runnableEntry(void*) @ 0x15f99900 in /usr/lib/debug/.build-id/03/836aa56cfad660466eb42a7973e7053e525ccb.debug\r\n12. start_thread @ 0x9609 in /usr/lib/x86_64-linux-gnu/libpthread-2.31.so\r\n13. __clone @ 0x122293 in /usr/lib/x86_64-linux-gnu/libc-2.31.so\r\n (version 21.12.1.8761 (official build))\r\n\r\n```\r\nPlaying with 00974_query_profile.sql I see the same\r\n\r\n```\r\nselect addressToLine(toUInt64(293109982));\r\n\r\nSELECT addressToLine(toUInt64(293109982))\r\n\r\nQuery id: 7d7353c9-f4f7-4f81-8d96-3e9e2b6defc6\r\n\r\n┌─addressToLine(toUInt64(293109982))───────────────────────────────────────┐\r\n│ /usr/lib/debug/.build-id/03/836aa56cfad660466eb42a7973e7053e525ccb.debug │\r\n└──────────────────────────────────────────────────────────────────────────┘\r\n\r\n\r\n```\r\n\r\nUnfortunately, the test does not treat this as failure because condition 'symbol LIKE '%Source%';' is true for some records\r\n\r\nIt might be that the issue caused by something strange at my box. \r\nPlease, let me know if the issue is reproducible (or not).\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31639/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31639/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31631","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31631/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31631/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31631/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/31631","id":1060123401,"node_id":"I_kwDOA5dJV84_MDMJ","number":31631,"title":"SUMMARY: MemorySanitizer: use-of-uninitialized-value","user":{"login":"CurtizJ","id":20361854,"node_id":"MDQ6VXNlcjIwMzYxODU0","avatar_url":"https://avatars.githubusercontent.com/u/20361854?v=4","gravatar_id":"","url":"https://api.github.com/users/CurtizJ","html_url":"https://github.com/CurtizJ","followers_url":"https://api.github.com/users/CurtizJ/followers","following_url":"https://api.github.com/users/CurtizJ/following{/other_user}","gists_url":"https://api.github.com/users/CurtizJ/gists{/gist_id}","starred_url":"https://api.github.com/users/CurtizJ/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/CurtizJ/subscriptions","organizations_url":"https://api.github.com/users/CurtizJ/orgs","repos_url":"https://api.github.com/users/CurtizJ/repos","events_url":"https://api.github.com/users/CurtizJ/events{/privacy}","received_events_url":"https://api.github.com/users/CurtizJ/received_events","type":"User","site_admin":false},"labels":[{"id":2104602822,"node_id":"MDU6TGFiZWwyMTA0NjAyODIy","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/fuzz","name":"fuzz","color":"abc4ea","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-11-22T12:56:05Z","updated_at":"2021-11-22T12:56:05Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"(you don't have to strictly follow this form)\r\n\r\n**Describe the bug**\r\n\r\nhttps://s3.amazonaws.com/clickhouse-test-reports/31476/c034491da95909fa5a6b1a9a4f72a609fcf30d7c/fuzzer_astfuzzermsan,actions//report.html\r\n\r\nAssertion of memory sanitizer:\r\n```\r\nSUMMARY: MemorySanitizer: use-of-uninitialized-value obj-x86_64-linux-gnu/../src/Common/PODArray.h:132:13 in DB::PODArrayBase<8ul, 32ul, DB::MixedArenaAllocator<4096ul, Allocator, DB::AlignedArenaAllocator<8ul>, 8ul>, 0ul, 0ul>::dealloc() Received signal -3 Received signal Unknown signal (-3) Received signal 6 Received signal Aborted (6)\r\n```\r\n\r\n**How to reproduce**\r\n```sql\r\nSELECT arrayMap(x -> finalizeAggregation(x), state) FROM (SELECT groupArrayResample(9223372036854775806, 1048575, 65537)(number, number % 3), groupArrayStateResample(10, 2147483648, 65535)(number, number % 9223372036854775806) AS state FROM numbers(100))\r\n```\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31631/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31631/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31616","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31616/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31616/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31616/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/31616","id":1059819252,"node_id":"I_kwDOA5dJV84_K470","number":31616,"title":"Row policy stats in the query log","user":{"login":"filimonov","id":1549571,"node_id":"MDQ6VXNlcjE1NDk1NzE=","avatar_url":"https://avatars.githubusercontent.com/u/1549571?v=4","gravatar_id":"","url":"https://api.github.com/users/filimonov","html_url":"https://github.com/filimonov","followers_url":"https://api.github.com/users/filimonov/followers","following_url":"https://api.github.com/users/filimonov/following{/other_user}","gists_url":"https://api.github.com/users/filimonov/gists{/gist_id}","starred_url":"https://api.github.com/users/filimonov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/filimonov/subscriptions","organizations_url":"https://api.github.com/users/filimonov/orgs","repos_url":"https://api.github.com/users/filimonov/repos","events_url":"https://api.github.com/users/filimonov/events{/privacy}","received_events_url":"https://api.github.com/users/filimonov/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":845247686,"node_id":"MDU6TGFiZWw4NDUyNDc2ODY=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/usability","name":"usability","color":"ebf28c","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-11-22T08:01:34Z","updated_at":"2021-11-22T08:01:34Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"body":"It can be hard to understand why the same query produces different number of rows in result when row policy is in place. \r\n\r\nMaybe we can expose some counter from there? ","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31616/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31616/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31614","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31614/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31614/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31614/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/31614","id":1059792839,"node_id":"I_kwDOA5dJV84_KyfH","number":31614,"title":"WSL: number of phisycal cores is determined incorrectly","user":{"login":"johnmafly","id":32551433,"node_id":"MDQ6VXNlcjMyNTUxNDMz","avatar_url":"https://avatars.githubusercontent.com/u/32551433?v=4","gravatar_id":"","url":"https://api.github.com/users/johnmafly","html_url":"https://github.com/johnmafly","followers_url":"https://api.github.com/users/johnmafly/followers","following_url":"https://api.github.com/users/johnmafly/following{/other_user}","gists_url":"https://api.github.com/users/johnmafly/gists{/gist_id}","starred_url":"https://api.github.com/users/johnmafly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/johnmafly/subscriptions","organizations_url":"https://api.github.com/users/johnmafly/orgs","repos_url":"https://api.github.com/users/johnmafly/repos","events_url":"https://api.github.com/users/johnmafly/events{/privacy}","received_events_url":"https://api.github.com/users/johnmafly/received_events","type":"User","site_admin":false},"labels":[{"id":1365579236,"node_id":"MDU6TGFiZWwxMzY1NTc5MjM2","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/minor","name":"minor","color":"FFF8F8","default":false,"description":"Priority: minor"},{"id":1575085465,"node_id":"MDU6TGFiZWwxNTc1MDg1NDY1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/unexpected%20behaviour","name":"unexpected behaviour","color":"e088ca","default":false,"description":""},{"id":2659581656,"node_id":"MDU6TGFiZWwyNjU5NTgxNjU2","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-wsl","name":"comp-wsl","color":"b5bcff","default":false,"description":"Windows subsystem for Linux related issues"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2021-11-22T07:32:50Z","updated_at":"2021-11-29T13:59:02Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"**Describe what's wrong**\r\n\r\nAfter upgrade to **v21.11.4.14** which included this [update](https://github.com/ClickHouse/ClickHouse/issues/26640), my clickhouse server failed to reboot with error \"Number of consumers can not be bigger than 2.\".\r\n\r\n**Does it reproduce on recent release?**\r\n\r\nhttps://github.com/ClickHouse/ClickHouse/releases/tag/v21.11.4.14-stable\r\n\r\n**How to reproduce**\r\n\r\n* Create 1 topic in Kafka with partition number 4.\r\n* Create an kafka stream table in clickhouse with _kafka_num_consumers = 4_.\r\n* Add the above table creation sql into clickhouse bootstrap folder _/docker-entrypoint-initdb.d/_.\r\n* Start the container in docker desktop.\r\n\r\n**Expected behavior**\r\n\r\nClickhouse instance startup successfully.\r\n\r\n**Error message and/or stacktrace**\r\n\r\n```\r\n2021.11.22 15:12:40.000904 [ 90 ] {1f625891-84e3-4cd0-aac0-7f2f81220cf1} <Error> TCPHandler: Code: 36. DB::Exception: Number of consumers can not be bigger than 2. (BAD_ARGUMENTS), Stack trace (when copying this message, always include the lines below):\r\n\r\n0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b605d4 in /usr/bin/clickhouse\r\n1. DB::Exception::Exception<unsigned int&>(int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned int&) @ 0x12bb6031 in /usr/bin/clickhouse\r\n2. ? @ 0x12bb5463 in /usr/bin/clickhouse\r\n3. DB::StorageFactory::get(DB::ASTCreateQuery const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::shared_ptr<DB::Context>, std::__1::shared_ptr<DB::Context>, DB::ColumnsDescription const&, DB::ConstraintsDescription const&, bool) const @ 0x12990223 in /usr/bin/clickhouse\r\n4. DB::InterpreterCreateQuery::doCreateTable(DB::ASTCreateQuery&, DB::InterpreterCreateQuery::TableProperties const&) @ 0x11fec05b in /usr/bin/clickhouse\r\n5. DB::InterpreterCreateQuery::createTable(DB::ASTCreateQuery&) @ 0x11fe7d46 in /usr/bin/clickhouse\r\n6. DB::InterpreterCreateQuery::execute() @ 0x11fee40b in /usr/bin/clickhouse\r\n7. ? @ 0x1273b5a9 in /usr/bin/clickhouse\r\n8. DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::shared_ptr<DB::Context>, bool, DB::QueryProcessingStage::Enum) @ 0x12739533 in /usr/bin/clickhouse\r\n9. DB::TCPHandler::runImpl() @ 0x130ca0d0 in /usr/bin/clickhouse\r\n10. DB::TCPHandler::run() @ 0x130ddb79 in /usr/bin/clickhouse\r\n11. Poco::Net::TCPServerConnection::start() @ 0x15d18faf in /usr/bin/clickhouse\r\n12. Poco::Net::TCPServerDispatcher::run() @ 0x15d1b3a1 in /usr/bin/clickhouse\r\n13. Poco::PooledThread::run() @ 0x15e2fd49 in /usr/bin/clickhouse\r\n14. Poco::ThreadImpl::runnableEntry(void*) @ 0x15e2d480 in /usr/bin/clickhouse\r\n15. start_thread @ 0x9609 in /lib/libpthread.so.0\r\n16. __clone @ 0x122293 in /lib/libc.so.6\r\n\r\nReceived exception from server (version 21.11.4):\r\nCode: 36. DB::Exception: Received from localhost:9000. DB::Exception: Number of consumers can not be bigger than 2. (BAD_ARGUMENTS)\r\n```\r\n\r\n**Additional context**\r\n\r\nI am running with Docker Desktop 4.0.0(67817) Windows 10 WSL 2, my hardware spec is 4 physical cores(8 virtual codes), 4 cores enabled in _.wslconfig_, and number **4** returned by command _docker exec -it clickhouse_1 grep processor /proc/cpuinfo | wc -l_.\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31614/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31614/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31592","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31592/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31592/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31592/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/31592","id":1059278407,"node_id":"I_kwDOA5dJV84_I05H","number":31592,"title":"Avro deserialize issue for Kafka engine","user":{"login":"ruiliapt","id":79827918,"node_id":"MDQ6VXNlcjc5ODI3OTE4","avatar_url":"https://avatars.githubusercontent.com/u/79827918?v=4","gravatar_id":"","url":"https://api.github.com/users/ruiliapt","html_url":"https://github.com/ruiliapt","followers_url":"https://api.github.com/users/ruiliapt/followers","following_url":"https://api.github.com/users/ruiliapt/following{/other_user}","gists_url":"https://api.github.com/users/ruiliapt/gists{/gist_id}","starred_url":"https://api.github.com/users/ruiliapt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ruiliapt/subscriptions","organizations_url":"https://api.github.com/users/ruiliapt/orgs","repos_url":"https://api.github.com/users/ruiliapt/repos","events_url":"https://api.github.com/users/ruiliapt/events{/privacy}","received_events_url":"https://api.github.com/users/ruiliapt/received_events","type":"User","site_admin":false},"labels":[{"id":1334071168,"node_id":"MDU6TGFiZWwxMzM0MDcxMTY4","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-kafka","name":"comp-kafka","color":"b5bcff","default":false,"description":"Kafka Engine"},{"id":3260776666,"node_id":"MDU6TGFiZWwzMjYwNzc2NjY2","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/potential%20bug","name":"potential bug","color":"ffc080","default":false,"description":"To be reviewed by developers and confirmed/rejected."}],"state":"open","locked":false,"assignee":{"login":"filimonov","id":1549571,"node_id":"MDQ6VXNlcjE1NDk1NzE=","avatar_url":"https://avatars.githubusercontent.com/u/1549571?v=4","gravatar_id":"","url":"https://api.github.com/users/filimonov","html_url":"https://github.com/filimonov","followers_url":"https://api.github.com/users/filimonov/followers","following_url":"https://api.github.com/users/filimonov/following{/other_user}","gists_url":"https://api.github.com/users/filimonov/gists{/gist_id}","starred_url":"https://api.github.com/users/filimonov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/filimonov/subscriptions","organizations_url":"https://api.github.com/users/filimonov/orgs","repos_url":"https://api.github.com/users/filimonov/repos","events_url":"https://api.github.com/users/filimonov/events{/privacy}","received_events_url":"https://api.github.com/users/filimonov/received_events","type":"User","site_admin":false},"assignees":[{"login":"filimonov","id":1549571,"node_id":"MDQ6VXNlcjE1NDk1NzE=","avatar_url":"https://avatars.githubusercontent.com/u/1549571?v=4","gravatar_id":"","url":"https://api.github.com/users/filimonov","html_url":"https://github.com/filimonov","followers_url":"https://api.github.com/users/filimonov/followers","following_url":"https://api.github.com/users/filimonov/following{/other_user}","gists_url":"https://api.github.com/users/filimonov/gists{/gist_id}","starred_url":"https://api.github.com/users/filimonov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/filimonov/subscriptions","organizations_url":"https://api.github.com/users/filimonov/orgs","repos_url":"https://api.github.com/users/filimonov/repos","events_url":"https://api.github.com/users/filimonov/events{/privacy}","received_events_url":"https://api.github.com/users/filimonov/received_events","type":"User","site_admin":false}],"milestone":null,"comments":0,"created_at":"2021-11-21T03:01:18Z","updated_at":"2021-11-21T11:44:38Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Kafka engine can't consume AvroConfluent data.\r\n\r\nTable ddl:\r\n`create table table_name \r\n(\r\n   colume1 Nullable(String),\r\n   xxxxx\r\n)\r\nengine = Kafka SETTINGS kafka_broker_list = 'xxxxx', kafka_topic_list = 'xxxxx', kafka_group_name = 'xxxxx', format_avro_schema_registry_url = 'xxxxx', kafka_num_consumers = '1', kafka_format = 'AvroConfluent', input_format_avro_allow_missing_fields = 1, kafka_max_block_size = 1048576;`\r\n\r\nError msg:\r\n`Code: 1001. DB::Exception: Received from localhost:9000. DB::Exception: avro::Exception: Cannot have negative length: -62. (STD_EXCEPTION)`\r\n\r\nLog:\r\n\r\n```\r\n2021.11.21 03:16:38.577076 [ 3108 ] {d2649f68-3c27-4616-a238-4249c6f00b34} <Error> TCPHandler: Code: 1001. DB::Exception: avro::Exception: Cannot have negative length: -62. (STD_EXCEPTION), Stack trace (when copying this message, always include the lines below):\r\n\r\n0. std::runtime_error::runtime_error(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) @ 0x17f2f92d in ?\r\n1. avro::Exception::Exception(boost::basic_format<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) @ 0x13164f48 in /usr/bin/clickhouse\r\n2. avro::BinaryDecoder::doDecodeLength() @ 0x16b8c9bd in /usr/bin/clickhouse\r\n3. avro::BinaryDecoder::skipString() @ 0x16b8cb09 in /usr/bin/clickhouse\r\n4. DB::AvroDeserializer::Action::execute(std::__1::vector<COW<DB::IColumn>::mutable_ptr<DB::IColumn>, std::__1::allocator<COW<DB::IColumn>::mutable_ptr<DB::IColumn> > >&, avro::Decoder&, DB::RowReadExtension&) const @ 0x131627c1 in /usr/bin/clickhouse\r\n5. DB::AvroConfluentRowInputFormat::readRow(std::__1::vector<COW<DB::IColumn>::mutable_ptr<DB::IColumn>, std::__1::allocator<COW<DB::IColumn>::mutable_ptr<DB::IColumn> > >&, DB::RowReadExtension&) @ 0x13163d34 in /usr/bin/clickhouse\r\n6. DB::IRowInputFormat::generate() @ 0x1317aa08 in /usr/bin/clickhouse\r\n7. DB::ISource::tryGenerate() @ 0x13114d95 in /usr/bin/clickhouse\r\n8. DB::ISource::work() @ 0x1311495a in /usr/bin/clickhouse\r\n9. DB::StreamingFormatExecutor::execute() @ 0x1313de82 in /usr/bin/clickhouse\r\n10. DB::KafkaSource::generateImpl() @ 0x12bb760f in /usr/bin/clickhouse\r\n11. DB::KafkaSource::generate() @ 0x12bb9b2f in /usr/bin/clickhouse\r\n12. DB::ISource::tryGenerate() @ 0x13114d95 in /usr/bin/clickhouse\r\n13. DB::ISource::work() @ 0x1311495a in /usr/bin/clickhouse\r\n14. DB::SourceWithProgress::work() @ 0x13320742 in /usr/bin/clickhouse\r\n15. ? @ 0x131301fb in /usr/bin/clickhouse\r\n16. DB::PipelineExecutor::executeStepImpl(unsigned long, unsigned long, std::__1::atomic<bool>*) @ 0x1312c1b1 in /usr/bin/clickhouse\r\n17. DB::PipelineExecutor::executeImpl(unsigned long) @ 0x13129d4f in /usr/bin/clickhouse\r\n18. DB::PipelineExecutor::execute(unsigned long) @ 0x13129b19 in /usr/bin/clickhouse\r\n19. ? @ 0x131387eb in /usr/bin/clickhouse\r\n20. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9ba2697 in /usr/bin/clickhouse\r\n21. ? @ 0x9ba609d in /usr/bin/clickhouse\r\n22. start_thread @ 0x740b in /usr/lib64/libpthread-2.26.so\r\n23. __GI___clone @ 0xed40f in /usr/lib64/libc-2.26.so\r\n\r\n```\r\n\r\nRelease version: 21.11.4","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31592/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31592/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31578","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31578/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31578/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31578/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/31578","id":1059157165,"node_id":"I_kwDOA5dJV84_IXSt","number":31578,"title":"Support for multi tenancy at the s3 bucket level","user":{"login":"kant777","id":61204489,"node_id":"MDQ6VXNlcjYxMjA0NDg5","avatar_url":"https://avatars.githubusercontent.com/u/61204489?v=4","gravatar_id":"","url":"https://api.github.com/users/kant777","html_url":"https://github.com/kant777","followers_url":"https://api.github.com/users/kant777/followers","following_url":"https://api.github.com/users/kant777/following{/other_user}","gists_url":"https://api.github.com/users/kant777/gists{/gist_id}","starred_url":"https://api.github.com/users/kant777/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kant777/subscriptions","organizations_url":"https://api.github.com/users/kant777/orgs","repos_url":"https://api.github.com/users/kant777/repos","events_url":"https://api.github.com/users/kant777/events{/privacy}","received_events_url":"https://api.github.com/users/kant777/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":2020016497,"node_id":"MDU6TGFiZWwyMDIwMDE2NDk3","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-s3","name":"comp-s3","color":"b5bcff","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":8,"created_at":"2021-11-20T14:31:41Z","updated_at":"2022-01-08T18:20:14Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Clickhouse today writes all the database/table data under one bucket. In order to support true multi tenancy at the data level, ideally would want each tenant's data to be stored in a separate bucket otherwise to scale for lot of tenants one may have to create a separate database for each tenant and potentially spin up multiple clusters if there are lot of tenants and do some sort of consistent hashing at the application layer.\r\n\r\nAlso, what say if there are 10K tenants and for each tenant there is a separate db/table what is the overhead? can 10K database/tables be created in a standard 3 node cluster? (just trying to get an idea what would go wrong in this approach in clickhouse?)","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31578/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31578/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31563","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31563/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31563/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31563/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/31563","id":1059111637,"node_id":"I_kwDOA5dJV84_IMLV","number":31563,"title":"Translate ClickHouse Testing doc into Chinese","user":{"login":"cccgp","id":47892108,"node_id":"MDQ6VXNlcjQ3ODkyMTA4","avatar_url":"https://avatars.githubusercontent.com/u/47892108?v=4","gravatar_id":"","url":"https://api.github.com/users/cccgp","html_url":"https://github.com/cccgp","followers_url":"https://api.github.com/users/cccgp/followers","following_url":"https://api.github.com/users/cccgp/following{/other_user}","gists_url":"https://api.github.com/users/cccgp/gists{/gist_id}","starred_url":"https://api.github.com/users/cccgp/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cccgp/subscriptions","organizations_url":"https://api.github.com/users/cccgp/orgs","repos_url":"https://api.github.com/users/cccgp/repos","events_url":"https://api.github.com/users/cccgp/events{/privacy}","received_events_url":"https://api.github.com/users/cccgp/received_events","type":"User","site_admin":false},"labels":[{"id":785082162,"node_id":"MDU6TGFiZWw3ODUwODIxNjI=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-documentation","name":"comp-documentation","color":"b5bcff","default":false,"description":"Used to run automatic builds of the documentation"}],"state":"open","locked":false,"assignee":{"login":"cccgp","id":47892108,"node_id":"MDQ6VXNlcjQ3ODkyMTA4","avatar_url":"https://avatars.githubusercontent.com/u/47892108?v=4","gravatar_id":"","url":"https://api.github.com/users/cccgp","html_url":"https://github.com/cccgp","followers_url":"https://api.github.com/users/cccgp/followers","following_url":"https://api.github.com/users/cccgp/following{/other_user}","gists_url":"https://api.github.com/users/cccgp/gists{/gist_id}","starred_url":"https://api.github.com/users/cccgp/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cccgp/subscriptions","organizations_url":"https://api.github.com/users/cccgp/orgs","repos_url":"https://api.github.com/users/cccgp/repos","events_url":"https://api.github.com/users/cccgp/events{/privacy}","received_events_url":"https://api.github.com/users/cccgp/received_events","type":"User","site_admin":false},"assignees":[{"login":"cccgp","id":47892108,"node_id":"MDQ6VXNlcjQ3ODkyMTA4","avatar_url":"https://avatars.githubusercontent.com/u/47892108?v=4","gravatar_id":"","url":"https://api.github.com/users/cccgp","html_url":"https://github.com/cccgp","followers_url":"https://api.github.com/users/cccgp/followers","following_url":"https://api.github.com/users/cccgp/following{/other_user}","gists_url":"https://api.github.com/users/cccgp/gists{/gist_id}","starred_url":"https://api.github.com/users/cccgp/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cccgp/subscriptions","organizations_url":"https://api.github.com/users/cccgp/orgs","repos_url":"https://api.github.com/users/cccgp/repos","events_url":"https://api.github.com/users/cccgp/events{/privacy}","received_events_url":"https://api.github.com/users/cccgp/received_events","type":"User","site_admin":false}],"milestone":null,"comments":1,"created_at":"2021-11-20T10:13:57Z","updated_at":"2021-11-20T10:16:37Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"**Describe the issue**\r\nThe content of the link(https://clickhouse.com/docs/zh/development/tests/ ) is in English, not Chinese\r\n\r\n**Additional context**\r\nI want to do this work and do it as well as possible.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31563/reactions","total_count":3,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":1,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/31563/timeline","performed_via_github_app":null}]
