[{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/5237","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/5237/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/5237/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/5237/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/5237","id":442654223,"node_id":"MDU6SXNzdWU0NDI2NTQyMjM=","number":5237,"title":"Parallel execution of IN query using Distributed table","user":{"login":"Onlinehead","id":1026551,"node_id":"MDQ6VXNlcjEwMjY1NTE=","avatar_url":"https://avatars.githubusercontent.com/u/1026551?v=4","gravatar_id":"","url":"https://api.github.com/users/Onlinehead","html_url":"https://github.com/Onlinehead","followers_url":"https://api.github.com/users/Onlinehead/followers","following_url":"https://api.github.com/users/Onlinehead/following{/other_user}","gists_url":"https://api.github.com/users/Onlinehead/gists{/gist_id}","starred_url":"https://api.github.com/users/Onlinehead/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Onlinehead/subscriptions","organizations_url":"https://api.github.com/users/Onlinehead/orgs","repos_url":"https://api.github.com/users/Onlinehead/repos","events_url":"https://api.github.com/users/Onlinehead/events{/privacy}","received_events_url":"https://api.github.com/users/Onlinehead/received_events","type":"User","site_admin":false},"labels":[{"id":756395244,"node_id":"MDU6TGFiZWw3NTYzOTUyNDQ=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/performance","name":"performance","color":"c2e0c6","default":false,"description":null},{"id":1634829961,"node_id":"MDU6TGFiZWwxNjM0ODI5OTYx","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-distributed","name":"comp-distributed","color":"b5bcff","default":false,"description":"Distributed tables"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":16,"created_at":"2019-05-10T10:40:04Z","updated_at":"2020-08-28T22:05:41Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Hi,\r\nBased on a documentation, queries in Distributed table run parallel on all shards.\r\nI have 3 shards and on each shard I have 2 tables like:\r\n1. MergeTree:\r\n```sql\r\nCREATE TABLE events (\r\n  EventDate DateTime,\r\n  UserID LowCardinality(String),\r\n  ServiceID LowCardinality(String),\r\n  RecordID String,\r\n  Key String,\r\n  StrValue String,\r\n  IntValue Int32\r\n) \r\nENGINE = MergeTree() PARTITION BY (toYYYYMMDD(EventDate), cityHash64(UserID))\r\nORDER BY (ServiceID, RecordID, Key, StrValue, IntValue)\r\n```\r\n2. Distributed:\r\n```sql\r\nCREATE TABLE events_all ON CLUSTER allEvents (\r\n  EventDate DateTime,\r\n  UserID LowCardinality(String),\r\n  ServiceID LowCardinality(String),\r\n  RecordID String,\r\n  Key String,\r\n  StrValue String,\r\n  IntValue Int32\r\n) ENGINE = Distributed(events, default, events, rand())\r\n```\r\nEverything works well, but I confused a bit about parallelization of queries.\r\n\r\nDuring a query like: \r\n```sql\r\nSELECT(\r\n  any(EventDate) as EventDate, \r\n  any(UserID) as UserID,\r\n  any(ServiceID) as ServiceID,\r\n  groupArray(Key) as Key,\r\n  groupArray(StrArray) as StrArray,\r\n  groupArray(IntArray) as IntArray\r\n) FROM events_all WHERE RecordID IN (\r\n  SELECT RecordID from events\r\n WHERE (UserID = 'USER_ID' and (Key = 'project_id' and StrValue = lower('TESTPROJ')))\r\n)\r\n GRUP BY RecordID limit 1\r\n```\r\nI see in logs of shards that \"IN\" section run first on a server where I call the query and than in parallel on other 2 shards.\r\n\r\nCan you please explain me:\r\n - Is it a correct behavior? \r\n - If yes - what blocks Clickhouse to run that part in parallel on all 3 shards?\r\n - If no - how to fix it?:)\r\n\r\nThanks!","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/5237/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/5237/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/5207","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/5207/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/5207/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/5207/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/5207","id":440894167,"node_id":"MDU6SXNzdWU0NDA4OTQxNjc=","number":5207,"title":"Forbid materialized view creation on engines that does not support inserts/MV","user":{"login":"filimonov","id":1549571,"node_id":"MDQ6VXNlcjE1NDk1NzE=","avatar_url":"https://avatars.githubusercontent.com/u/1549571?v=4","gravatar_id":"","url":"https://api.github.com/users/filimonov","html_url":"https://github.com/filimonov","followers_url":"https://api.github.com/users/filimonov/followers","following_url":"https://api.github.com/users/filimonov/following{/other_user}","gists_url":"https://api.github.com/users/filimonov/gists{/gist_id}","starred_url":"https://api.github.com/users/filimonov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/filimonov/subscriptions","organizations_url":"https://api.github.com/users/filimonov/orgs","repos_url":"https://api.github.com/users/filimonov/repos","events_url":"https://api.github.com/users/filimonov/events{/privacy}","received_events_url":"https://api.github.com/users/filimonov/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":1350221495,"node_id":"MDU6TGFiZWwxMzUwMjIxNDk1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-matview","name":"comp-matview","color":"b5bcff","default":false,"description":"Materialized views"},{"id":1365579236,"node_id":"MDU6TGFiZWwxMzY1NTc5MjM2","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/minor","name":"minor","color":"FFF8F8","default":false,"description":"Priority: minor"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2019-05-06T21:10:53Z","updated_at":"2021-06-27T12:27:31Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"body":"When creating a materialized view on a table with Engine=Merge (or any other which doesn't support inserts/or buffer pushing to MV), the exception should be returned.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/5207/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/5207/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/5188","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/5188/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/5188/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/5188/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/5188","id":440380927,"node_id":"MDU6SXNzdWU0NDAzODA5Mjc=","number":5188,"title":"Too low value of \"connect_timeout_with_failover_ms\". Table function remote uses low timeout even if a single host is specified.","user":{"login":"alexey-milovidov","id":18581488,"node_id":"MDQ6VXNlcjE4NTgxNDg4","avatar_url":"https://avatars.githubusercontent.com/u/18581488?v=4","gravatar_id":"","url":"https://api.github.com/users/alexey-milovidov","html_url":"https://github.com/alexey-milovidov","followers_url":"https://api.github.com/users/alexey-milovidov/followers","following_url":"https://api.github.com/users/alexey-milovidov/following{/other_user}","gists_url":"https://api.github.com/users/alexey-milovidov/gists{/gist_id}","starred_url":"https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexey-milovidov/subscriptions","organizations_url":"https://api.github.com/users/alexey-milovidov/orgs","repos_url":"https://api.github.com/users/alexey-milovidov/repos","events_url":"https://api.github.com/users/alexey-milovidov/events{/privacy}","received_events_url":"https://api.github.com/users/alexey-milovidov/received_events","type":"User","site_admin":false},"labels":[{"id":845247686,"node_id":"MDU6TGFiZWw4NDUyNDc2ODY=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/usability","name":"usability","color":"ebf28c","default":false,"description":""},{"id":1401253328,"node_id":"MDU6TGFiZWwxNDAxMjUzMzI4","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-net","name":"comp-net","color":"b5bcff","default":false,"description":"Network related"}],"state":"open","locked":false,"assignee":{"login":"Avogar","id":48961922,"node_id":"MDQ6VXNlcjQ4OTYxOTIy","avatar_url":"https://avatars.githubusercontent.com/u/48961922?v=4","gravatar_id":"","url":"https://api.github.com/users/Avogar","html_url":"https://github.com/Avogar","followers_url":"https://api.github.com/users/Avogar/followers","following_url":"https://api.github.com/users/Avogar/following{/other_user}","gists_url":"https://api.github.com/users/Avogar/gists{/gist_id}","starred_url":"https://api.github.com/users/Avogar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Avogar/subscriptions","organizations_url":"https://api.github.com/users/Avogar/orgs","repos_url":"https://api.github.com/users/Avogar/repos","events_url":"https://api.github.com/users/Avogar/events{/privacy}","received_events_url":"https://api.github.com/users/Avogar/received_events","type":"User","site_admin":false},"assignees":[{"login":"Avogar","id":48961922,"node_id":"MDQ6VXNlcjQ4OTYxOTIy","avatar_url":"https://avatars.githubusercontent.com/u/48961922?v=4","gravatar_id":"","url":"https://api.github.com/users/Avogar","html_url":"https://github.com/Avogar","followers_url":"https://api.github.com/users/Avogar/followers","following_url":"https://api.github.com/users/Avogar/following{/other_user}","gists_url":"https://api.github.com/users/Avogar/gists{/gist_id}","starred_url":"https://api.github.com/users/Avogar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Avogar/subscriptions","organizations_url":"https://api.github.com/users/Avogar/orgs","repos_url":"https://api.github.com/users/Avogar/repos","events_url":"https://api.github.com/users/Avogar/events{/privacy}","received_events_url":"https://api.github.com/users/Avogar/received_events","type":"User","site_admin":false}],"milestone":null,"comments":1,"created_at":"2019-05-04T23:34:51Z","updated_at":"2021-06-22T23:06:29Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"#5160","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/5188/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/5188/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/5183","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/5183/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/5183/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/5183/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/5183","id":440072043,"node_id":"MDU6SXNzdWU0NDAwNzIwNDM=","number":5183,"title":"Log message for 'Connection reset by peer' could be improved","user":{"login":"citrin","id":1049807,"node_id":"MDQ6VXNlcjEwNDk4MDc=","avatar_url":"https://avatars.githubusercontent.com/u/1049807?v=4","gravatar_id":"","url":"https://api.github.com/users/citrin","html_url":"https://github.com/citrin","followers_url":"https://api.github.com/users/citrin/followers","following_url":"https://api.github.com/users/citrin/following{/other_user}","gists_url":"https://api.github.com/users/citrin/gists{/gist_id}","starred_url":"https://api.github.com/users/citrin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/citrin/subscriptions","organizations_url":"https://api.github.com/users/citrin/orgs","repos_url":"https://api.github.com/users/citrin/repos","events_url":"https://api.github.com/users/citrin/events{/privacy}","received_events_url":"https://api.github.com/users/citrin/received_events","type":"User","site_admin":false},"labels":[{"id":845247686,"node_id":"MDU6TGFiZWw4NDUyNDc2ODY=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/usability","name":"usability","color":"ebf28c","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":12,"created_at":"2019-05-03T14:28:15Z","updated_at":"2022-01-21T12:18:48Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"We see a lot of messages like `[ 23 ] {} <Error> ServerErrorHandler: Poco::Exception. Code: 1000, e.code() = 104, e.displayText() = Connection reset by peer (version 19.5.3.1)`. It is almost impossible to trouble shoot them now.\r\n\r\nIt would be great if remote port:ip will be logged with this message.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/5183/reactions","total_count":7,"+1":7,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/5183/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/5175","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/5175/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/5175/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/5175/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/5175","id":439733090,"node_id":"MDU6SXNzdWU0Mzk3MzMwOTA=","number":5175,"title":"Attempt to create ReplicatedMergeTree fails on subsequent attempts after an initial failed table creation","user":{"login":"abraithwaite","id":3791413,"node_id":"MDQ6VXNlcjM3OTE0MTM=","avatar_url":"https://avatars.githubusercontent.com/u/3791413?v=4","gravatar_id":"","url":"https://api.github.com/users/abraithwaite","html_url":"https://github.com/abraithwaite","followers_url":"https://api.github.com/users/abraithwaite/followers","following_url":"https://api.github.com/users/abraithwaite/following{/other_user}","gists_url":"https://api.github.com/users/abraithwaite/gists{/gist_id}","starred_url":"https://api.github.com/users/abraithwaite/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/abraithwaite/subscriptions","organizations_url":"https://api.github.com/users/abraithwaite/orgs","repos_url":"https://api.github.com/users/abraithwaite/repos","events_url":"https://api.github.com/users/abraithwaite/events{/privacy}","received_events_url":"https://api.github.com/users/abraithwaite/received_events","type":"User","site_admin":false},"labels":[{"id":386401510,"node_id":"MDU6TGFiZWwzODY0MDE1MTA=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/question","name":"question","color":"bfdadc","default":true,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2019-05-02T18:44:57Z","updated_at":"2020-08-14T00:13:27Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"We are creating some replicated merge tree tables and initially left out the sorting key, which led to this exception:\r\n\r\nOn `server-0`:\r\n\r\n```\r\nCREATE TABLE IF NOT EXISTS r0.events AS table_schemas.events\r\nENGINE = ReplicatedMergeTree('/clickhouse/clusters/counters_cluster/tables/{r0shard}/events', '{r0replica}')\r\n\r\nReceived exception from server (version 19.4.3):\r\nCode: 42. DB::Exception: Received from localhost:9000, 127.0.0.1. DB::Exception: Storage ReplicatedMergeTree requires 5 to 6 parameters:\r\npath in ZooKeeper,\r\nreplica name,\r\nname of column with date,\r\n[sampling element of primary key],\r\nprimary key expression,\r\nindex granularity\r\n```\r\n\r\nAfter fixing the sorting key (still on `server-0`) I was able to successfully create the table.\r\n\r\n```\r\nCREATE TABLE IF NOT EXISTS r0.events AS table_schemas.events\r\nENGINE = ReplicatedMergeTree('/clickhouse/clusters/counters_cluster/tables/{r0shard}/events', '{r0replica}')\r\nORDER BY (sourceID, hour)\r\n\r\nOk.\r\n\r\n0 rows in set. Elapsed: 0.093 sec.\r\n```\r\n\r\nHowever, switching to `server-2` which has the other replica, running the create query led to this exception:\r\n\r\n```\r\nCREATE TABLE IF NOT EXISTS r1.events AS table_schemas.events\r\nENGINE = ReplicatedMergeTree('/clickhouse/clusters/counters_cluster/tables/{r1shard}/events', '{r1replica}')\r\nPRIMARY KEY (sourceID, hour)\r\nORDER BY (sourceID, hour)\r\n\r\nReceived exception from server (version 19.4.3):\r\nCode: 342. DB::Exception: Received from localhost:9000, 127.0.0.1. DB::Exception: Existing table metadata in ZooKeeper differs in sorting key expression. Stored in ZooKeeper: , local: sourceID, hour.\r\n\r\n0 rows in set. Elapsed: 0.003 sec.\r\n```\r\n\r\nSo I dropped the tables from both servers to be safe.  Checked zookeeper and saw that there was no metadata stored.\r\n\r\n```\r\n[zk: localhost:2181(CONNECTED) 17] ls /clickhouse/clusters/counters_cluster/tables/00\r\n[]\r\n```\r\n\r\nThen I proceeded to create the tables on both servers again.  I started with `server-2` for no particular reason.  It was successful.\r\n\r\nBut when I went back to `server-0`, the creation failed with this error:\r\n\r\n```\r\nCREATE TABLE IF NOT EXISTS r0.events AS table_schemas.events\r\nENGINE = ReplicatedMergeTree('/clickhouse/clusters/counters_cluster/tables/{r0shard}/events', '{r0replica}')\r\nORDER BY (sourceID, hour)\r\n\r\nReceived exception from server (version 19.4.3):\r\nCode: 342. DB::Exception: Received from localhost:9000, 127.0.0.1. DB::Exception: Existing table metadata in ZooKeeper differs in sorting key expression. Stored in ZooKeeper: sourceID, hour, local: .\r\n```\r\n\r\nIs there some other stale metadata I need to clear out from `server-0`?  I checked the replicas table after dropping the table and it was empty too.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/5175/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/5175/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/5163","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/5163/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/5163/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/5163/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/5163","id":439032400,"node_id":"MDU6SXNzdWU0MzkwMzI0MDA=","number":5163,"title":"Usability issue with custom partitions and wrong ATTACH query.","user":{"login":"alexey-milovidov","id":18581488,"node_id":"MDQ6VXNlcjE4NTgxNDg4","avatar_url":"https://avatars.githubusercontent.com/u/18581488?v=4","gravatar_id":"","url":"https://api.github.com/users/alexey-milovidov","html_url":"https://github.com/alexey-milovidov","followers_url":"https://api.github.com/users/alexey-milovidov/followers","following_url":"https://api.github.com/users/alexey-milovidov/following{/other_user}","gists_url":"https://api.github.com/users/alexey-milovidov/gists{/gist_id}","starred_url":"https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexey-milovidov/subscriptions","organizations_url":"https://api.github.com/users/alexey-milovidov/orgs","repos_url":"https://api.github.com/users/alexey-milovidov/repos","events_url":"https://api.github.com/users/alexey-milovidov/events{/privacy}","received_events_url":"https://api.github.com/users/alexey-milovidov/received_events","type":"User","site_admin":false},"labels":[{"id":845247686,"node_id":"MDU6TGFiZWw4NDUyNDc2ODY=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/usability","name":"usability","color":"ebf28c","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2019-05-01T00:34:44Z","updated_at":"2020-10-29T20:09:01Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"```\r\n2019.05.01 02:30:59.740612 [ 114 ] {1c9d6f8b-3326-4071-9d12-24f02fa34d73} <Debug> executeQuery: (from [::1]:42312) ALTER TABLE userstats.daily ATTACH PARTITION 20190428\r\n2019.05.01 02:30:59.740851 [ 114 ] {1c9d6f8b-3326-4071-9d12-24f02fa34d73} <Debug> userstats.daily (StorageReplicatedMergeTree): Looking for parts for partition 19840815 in detached/\r\n```\r\n\r\n```\r\nALTER TABLE userstats.daily ATTACH PARTITION 20190428\r\nLooking for parts for partition 19840815 in detached/\r\n```\r\n\r\nNothing happens and the user doesn't get any error message.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/5163/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/5163/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/5161","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/5161/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/5161/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/5161/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/5161","id":439028564,"node_id":"MDU6SXNzdWU0MzkwMjg1NjQ=","number":5161,"title":"Protection from inconsistent ZooKeeper clusters.","user":{"login":"alexey-milovidov","id":18581488,"node_id":"MDQ6VXNlcjE4NTgxNDg4","avatar_url":"https://avatars.githubusercontent.com/u/18581488?v=4","gravatar_id":"","url":"https://api.github.com/users/alexey-milovidov","html_url":"https://github.com/alexey-milovidov","followers_url":"https://api.github.com/users/alexey-milovidov/followers","following_url":"https://api.github.com/users/alexey-milovidov/following{/other_user}","gists_url":"https://api.github.com/users/alexey-milovidov/gists{/gist_id}","starred_url":"https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexey-milovidov/subscriptions","organizations_url":"https://api.github.com/users/alexey-milovidov/orgs","repos_url":"https://api.github.com/users/alexey-milovidov/repos","events_url":"https://api.github.com/users/alexey-milovidov/events{/privacy}","received_events_url":"https://api.github.com/users/alexey-milovidov/received_events","type":"User","site_admin":false},"labels":[{"id":845247686,"node_id":"MDU6TGFiZWw4NDUyNDc2ODY=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/usability","name":"usability","color":"ebf28c","default":false,"description":""},{"id":1006992822,"node_id":"MDU6TGFiZWwxMDA2OTkyODIy","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/operations","name":"operations","color":"7fe8ba","default":false,"description":""},{"id":1401894928,"node_id":"MDU6TGFiZWwxNDAxODk0OTI4","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-zookeeper","name":"comp-zookeeper","color":"b5bcff","default":false,"description":"Zookeeper"},{"id":3086255531,"node_id":"MDU6TGFiZWwzMDg2MjU1NTMx","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/warmup%20task","name":"warmup task","color":"FBCA04","default":false,"description":"The task for new ClickHouse team members. Low risk, moderate complexity, no urgency."}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2019-05-01T00:12:51Z","updated_at":"2021-10-20T15:20:34Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"If a user list ZooKeeper servers from different clusters in ClickHouse configuration, weird errors will happen.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/5161/reactions","total_count":1,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":1,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/5161/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/5149","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/5149/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/5149/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/5149/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/5149","id":438494610,"node_id":"MDU6SXNzdWU0Mzg0OTQ2MTA=","number":5149,"title":"Improve performance of clickhouse-local and StorageFile with mmap.","user":{"login":"alexey-milovidov","id":18581488,"node_id":"MDQ6VXNlcjE4NTgxNDg4","avatar_url":"https://avatars.githubusercontent.com/u/18581488?v=4","gravatar_id":"","url":"https://api.github.com/users/alexey-milovidov","html_url":"https://github.com/alexey-milovidov","followers_url":"https://api.github.com/users/alexey-milovidov/followers","following_url":"https://api.github.com/users/alexey-milovidov/following{/other_user}","gists_url":"https://api.github.com/users/alexey-milovidov/gists{/gist_id}","starred_url":"https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexey-milovidov/subscriptions","organizations_url":"https://api.github.com/users/alexey-milovidov/orgs","repos_url":"https://api.github.com/users/alexey-milovidov/repos","events_url":"https://api.github.com/users/alexey-milovidov/events{/privacy}","received_events_url":"https://api.github.com/users/alexey-milovidov/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":644208617,"node_id":"MDU6TGFiZWw2NDQyMDg2MTc=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/easy%20task","name":"easy task","color":"0e8a16","default":false,"description":"Good for first contributors"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2019-04-29T20:31:12Z","updated_at":"2021-09-13T09:44:23Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"If it is possible to mmap a file. \r\nImplement with MMapReadBufferFromFileDescriptor.\r\n\r\nIntroductory task.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/5149/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/5149/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/5128","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/5128/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/5128/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/5128/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/5128","id":437789500,"node_id":"MDU6SXNzdWU0Mzc3ODk1MDA=","number":5128,"title":"Kafka engine information in systems table/logging level kafka engine","user":{"login":"yctn","id":4766830,"node_id":"MDQ6VXNlcjQ3NjY4MzA=","avatar_url":"https://avatars.githubusercontent.com/u/4766830?v=4","gravatar_id":"","url":"https://api.github.com/users/yctn","html_url":"https://github.com/yctn","followers_url":"https://api.github.com/users/yctn/followers","following_url":"https://api.github.com/users/yctn/following{/other_user}","gists_url":"https://api.github.com/users/yctn/gists{/gist_id}","starred_url":"https://api.github.com/users/yctn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yctn/subscriptions","organizations_url":"https://api.github.com/users/yctn/orgs","repos_url":"https://api.github.com/users/yctn/repos","events_url":"https://api.github.com/users/yctn/events{/privacy}","received_events_url":"https://api.github.com/users/yctn/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":1334071168,"node_id":"MDU6TGFiZWwxMzM0MDcxMTY4","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-kafka","name":"comp-kafka","color":"b5bcff","default":false,"description":"Kafka Engine"}],"state":"open","locked":false,"assignee":{"login":"filimonov","id":1549571,"node_id":"MDQ6VXNlcjE1NDk1NzE=","avatar_url":"https://avatars.githubusercontent.com/u/1549571?v=4","gravatar_id":"","url":"https://api.github.com/users/filimonov","html_url":"https://github.com/filimonov","followers_url":"https://api.github.com/users/filimonov/followers","following_url":"https://api.github.com/users/filimonov/following{/other_user}","gists_url":"https://api.github.com/users/filimonov/gists{/gist_id}","starred_url":"https://api.github.com/users/filimonov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/filimonov/subscriptions","organizations_url":"https://api.github.com/users/filimonov/orgs","repos_url":"https://api.github.com/users/filimonov/repos","events_url":"https://api.github.com/users/filimonov/events{/privacy}","received_events_url":"https://api.github.com/users/filimonov/received_events","type":"User","site_admin":false},"assignees":[{"login":"filimonov","id":1549571,"node_id":"MDQ6VXNlcjE1NDk1NzE=","avatar_url":"https://avatars.githubusercontent.com/u/1549571?v=4","gravatar_id":"","url":"https://api.github.com/users/filimonov","html_url":"https://github.com/filimonov","followers_url":"https://api.github.com/users/filimonov/followers","following_url":"https://api.github.com/users/filimonov/following{/other_user}","gists_url":"https://api.github.com/users/filimonov/gists{/gist_id}","starred_url":"https://api.github.com/users/filimonov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/filimonov/subscriptions","organizations_url":"https://api.github.com/users/filimonov/orgs","repos_url":"https://api.github.com/users/filimonov/repos","events_url":"https://api.github.com/users/filimonov/events{/privacy}","received_events_url":"https://api.github.com/users/filimonov/received_events","type":"User","site_admin":false}],"milestone":null,"comments":3,"created_at":"2019-04-26T18:17:23Z","updated_at":"2020-06-11T11:41:49Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"It would be very usefull to provide kafka information in a system table.\r\nit then can be queryed for monitoring of the kafka ingestion.\r\nthings suchs as commited offsets. topic's amount of partitions etc.\r\n\r\n\r\nsecondly, it would be good to provide a way/config settings to set the logging level of librdkafka currently its set to default so the clickhouse-server.log receives huge spamming of all the librdkafka debug information.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/5128/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/5128/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/5125","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/5125/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/5125/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/5125/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/5125","id":437674592,"node_id":"MDU6SXNzdWU0Mzc2NzQ1OTI=","number":5125,"title":"Add table engine with auto deduplication by key for realtime","user":{"login":"pikhovkin","id":630071,"node_id":"MDQ6VXNlcjYzMDA3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/630071?v=4","gravatar_id":"","url":"https://api.github.com/users/pikhovkin","html_url":"https://github.com/pikhovkin","followers_url":"https://api.github.com/users/pikhovkin/followers","following_url":"https://api.github.com/users/pikhovkin/following{/other_user}","gists_url":"https://api.github.com/users/pikhovkin/gists{/gist_id}","starred_url":"https://api.github.com/users/pikhovkin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pikhovkin/subscriptions","organizations_url":"https://api.github.com/users/pikhovkin/orgs","repos_url":"https://api.github.com/users/pikhovkin/repos","events_url":"https://api.github.com/users/pikhovkin/events{/privacy}","received_events_url":"https://api.github.com/users/pikhovkin/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":1507867504,"node_id":"MDU6TGFiZWwxNTA3ODY3NTA0","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/st-hold","name":"st-hold","color":"e5b890","default":false,"description":"We've paused the work on issue for some reason"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":17,"created_at":"2019-04-26T13:31:25Z","updated_at":"2021-06-14T00:12:30Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Add table engine with auto deduplication by key.\r\n\r\nWhen inserting a string with an existing key into the table, is there a way to automatically mark the old string so that it is no longer used in the select request?","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/5125/reactions","total_count":5,"+1":5,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/5125/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/5038","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/5038/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/5038/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/5038/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/5038","id":434380704,"node_id":"MDU6SXNzdWU0MzQzODA3MDQ=","number":5038,"title":"Implement SAMPLE in Interpreter rather than Storages.","user":{"login":"alexey-milovidov","id":18581488,"node_id":"MDQ6VXNlcjE4NTgxNDg4","avatar_url":"https://avatars.githubusercontent.com/u/18581488?v=4","gravatar_id":"","url":"https://api.github.com/users/alexey-milovidov","html_url":"https://github.com/alexey-milovidov","followers_url":"https://api.github.com/users/alexey-milovidov/followers","following_url":"https://api.github.com/users/alexey-milovidov/following{/other_user}","gists_url":"https://api.github.com/users/alexey-milovidov/gists{/gist_id}","starred_url":"https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexey-milovidov/subscriptions","organizations_url":"https://api.github.com/users/alexey-milovidov/orgs","repos_url":"https://api.github.com/users/alexey-milovidov/repos","events_url":"https://api.github.com/users/alexey-milovidov/events{/privacy}","received_events_url":"https://api.github.com/users/alexey-milovidov/received_events","type":"User","site_admin":false},"labels":[{"id":386401507,"node_id":"MDU6TGFiZWwzODY0MDE1MDc=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/enhancement","name":"enhancement","color":"84b6eb","default":true,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2019-04-17T16:39:54Z","updated_at":"2020-01-14T18:54:04Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"The logic of SAMPLE is actually independent of storage engine. The only difference is that it can work more or less efficient depending on ORDER key.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/5038/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/5038/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/5035","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/5035/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/5035/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/5035/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/5035","id":434327399,"node_id":"MDU6SXNzdWU0MzQzMjczOTk=","number":5035,"title":"Table functions are executed two times.","user":{"login":"alexey-milovidov","id":18581488,"node_id":"MDQ6VXNlcjE4NTgxNDg4","avatar_url":"https://avatars.githubusercontent.com/u/18581488?v=4","gravatar_id":"","url":"https://api.github.com/users/alexey-milovidov","html_url":"https://github.com/alexey-milovidov","followers_url":"https://api.github.com/users/alexey-milovidov/followers","following_url":"https://api.github.com/users/alexey-milovidov/following{/other_user}","gists_url":"https://api.github.com/users/alexey-milovidov/gists{/gist_id}","starred_url":"https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexey-milovidov/subscriptions","organizations_url":"https://api.github.com/users/alexey-milovidov/orgs","repos_url":"https://api.github.com/users/alexey-milovidov/repos","events_url":"https://api.github.com/users/alexey-milovidov/events{/privacy}","received_events_url":"https://api.github.com/users/alexey-milovidov/received_events","type":"User","site_admin":false},"labels":[{"id":756395244,"node_id":"MDU6TGFiZWw3NTYzOTUyNDQ=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/performance","name":"performance","color":"c2e0c6","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2019-04-17T14:51:54Z","updated_at":"2019-04-17T14:51:54Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"`SELECT count() FROM remote('127.0.0.2', system.one)`\r\n\r\n```\r\n2019.04.17 17:47:19.865900 [ 47 ] {2959f92d-ff9c-40a4-ac44-fc997497c8a8} <Trace> Connection (127.0.0.2:9000): Connected to ClickHouse server version 19.6.1.\r\n2019.04.17 17:47:19.868721 [ 53 ] {cdc8efb2-eac8-4616-9724-dad6833dfe95} <Debug> executeQuery: (from [::ffff:127.0.0.1]:43400, initial_query_id: 2959f92d-ff9c-40a4-ac44-fc997497c8a8) DESC TABLE system.one\r\n\r\n2019.04.17 17:47:19.880047 [ 47 ] {2959f92d-ff9c-40a4-ac44-fc997497c8a8} <Trace> Connection (127.0.0.2:9000): Connected to ClickHouse server version 19.6.1.\r\n2019.04.17 17:47:19.881928 [ 46 ] {cad36451-63c0-4124-86dd-5c7f8554942f} <Debug> executeQuery: (from [::ffff:127.0.0.1]:43402, initial_query_id: 2959f92d-ff9c-40a4-ac44-fc997497c8a8) DESC TABLE system.one\r\n```","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/5035/reactions","total_count":4,"+1":4,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/5035/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4968","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4968/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4968/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4968/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/4968","id":431614564,"node_id":"MDU6SXNzdWU0MzE2MTQ1NjQ=","number":4968,"title":"Do not store zero columns in parts at all.","user":{"login":"alexey-milovidov","id":18581488,"node_id":"MDQ6VXNlcjE4NTgxNDg4","avatar_url":"https://avatars.githubusercontent.com/u/18581488?v=4","gravatar_id":"","url":"https://api.github.com/users/alexey-milovidov","html_url":"https://github.com/alexey-milovidov","followers_url":"https://api.github.com/users/alexey-milovidov/followers","following_url":"https://api.github.com/users/alexey-milovidov/following{/other_user}","gists_url":"https://api.github.com/users/alexey-milovidov/gists{/gist_id}","starred_url":"https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexey-milovidov/subscriptions","organizations_url":"https://api.github.com/users/alexey-milovidov/orgs","repos_url":"https://api.github.com/users/alexey-milovidov/repos","events_url":"https://api.github.com/users/alexey-milovidov/events{/privacy}","received_events_url":"https://api.github.com/users/alexey-milovidov/received_events","type":"User","site_admin":false},"labels":[{"id":756395244,"node_id":"MDU6TGFiZWw3NTYzOTUyNDQ=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/performance","name":"performance","color":"c2e0c6","default":false,"description":null}],"state":"open","locked":false,"assignee":{"login":"CurtizJ","id":20361854,"node_id":"MDQ6VXNlcjIwMzYxODU0","avatar_url":"https://avatars.githubusercontent.com/u/20361854?v=4","gravatar_id":"","url":"https://api.github.com/users/CurtizJ","html_url":"https://github.com/CurtizJ","followers_url":"https://api.github.com/users/CurtizJ/followers","following_url":"https://api.github.com/users/CurtizJ/following{/other_user}","gists_url":"https://api.github.com/users/CurtizJ/gists{/gist_id}","starred_url":"https://api.github.com/users/CurtizJ/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/CurtizJ/subscriptions","organizations_url":"https://api.github.com/users/CurtizJ/orgs","repos_url":"https://api.github.com/users/CurtizJ/repos","events_url":"https://api.github.com/users/CurtizJ/events{/privacy}","received_events_url":"https://api.github.com/users/CurtizJ/received_events","type":"User","site_admin":false},"assignees":[{"login":"CurtizJ","id":20361854,"node_id":"MDQ6VXNlcjIwMzYxODU0","avatar_url":"https://avatars.githubusercontent.com/u/20361854?v=4","gravatar_id":"","url":"https://api.github.com/users/CurtizJ","html_url":"https://github.com/CurtizJ","followers_url":"https://api.github.com/users/CurtizJ/followers","following_url":"https://api.github.com/users/CurtizJ/following{/other_user}","gists_url":"https://api.github.com/users/CurtizJ/gists{/gist_id}","starred_url":"https://api.github.com/users/CurtizJ/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/CurtizJ/subscriptions","organizations_url":"https://api.github.com/users/CurtizJ/orgs","repos_url":"https://api.github.com/users/CurtizJ/repos","events_url":"https://api.github.com/users/CurtizJ/events{/privacy}","received_events_url":"https://api.github.com/users/CurtizJ/received_events","type":"User","site_admin":false}],"milestone":null,"comments":1,"created_at":"2019-04-10T17:05:39Z","updated_at":"2020-01-20T19:31:17Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"If the DEFAULT value of a column is trivial (zero or equivalent),\r\n- on data insertion, quickly check if a column is totally zero and don't write it on disk (see `memoryIsZero` function);\r\n- on merging of data, do not write columns with trivial DEFAULTs that were absent in all merged parts.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4968/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4968/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4963","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4963/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4963/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4963/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/4963","id":431586934,"node_id":"MDU6SXNzdWU0MzE1ODY5MzQ=","number":4963,"title":"Multiple quotas per user","user":{"login":"nvartolomei","id":543193,"node_id":"MDQ6VXNlcjU0MzE5Mw==","avatar_url":"https://avatars.githubusercontent.com/u/543193?v=4","gravatar_id":"","url":"https://api.github.com/users/nvartolomei","html_url":"https://github.com/nvartolomei","followers_url":"https://api.github.com/users/nvartolomei/followers","following_url":"https://api.github.com/users/nvartolomei/following{/other_user}","gists_url":"https://api.github.com/users/nvartolomei/gists{/gist_id}","starred_url":"https://api.github.com/users/nvartolomei/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nvartolomei/subscriptions","organizations_url":"https://api.github.com/users/nvartolomei/orgs","repos_url":"https://api.github.com/users/nvartolomei/repos","events_url":"https://api.github.com/users/nvartolomei/events{/privacy}","received_events_url":"https://api.github.com/users/nvartolomei/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":1507888214,"node_id":"MDU6TGFiZWwxNTA3ODg4MjE0","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/st-accepted","name":"st-accepted","color":"e5b890","default":false,"description":"The issue is in our backlog, ready to take"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2019-04-10T16:02:54Z","updated_at":"2019-11-11T00:21:46Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Current quotas can be either keyed or non-keyed. I'd like to be able to have both for the same user.\r\n\r\nSay a ClickHouse is shared between 2 customer facing services, we can limit to some degree impact of a service by using per user (ClickHouse user) quotas. On the other side we can limit customers impact on the cluster by imposing limits using quotas and making the quota `<keyed />`.\r\n\r\nI'd like to define both. Have a per-customer (quota key) quota and a global service quota (ClickHouse user).","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4963/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4963/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4933","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4933/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4933/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4933/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/4933","id":430107504,"node_id":"MDU6SXNzdWU0MzAxMDc1MDQ=","number":4933,"title":"Operators for two- (or n-) stage aggregations","user":{"login":"andrea-s","id":9706626,"node_id":"MDQ6VXNlcjk3MDY2MjY=","avatar_url":"https://avatars.githubusercontent.com/u/9706626?v=4","gravatar_id":"","url":"https://api.github.com/users/andrea-s","html_url":"https://github.com/andrea-s","followers_url":"https://api.github.com/users/andrea-s/followers","following_url":"https://api.github.com/users/andrea-s/following{/other_user}","gists_url":"https://api.github.com/users/andrea-s/gists{/gist_id}","starred_url":"https://api.github.com/users/andrea-s/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andrea-s/subscriptions","organizations_url":"https://api.github.com/users/andrea-s/orgs","repos_url":"https://api.github.com/users/andrea-s/repos","events_url":"https://api.github.com/users/andrea-s/events{/privacy}","received_events_url":"https://api.github.com/users/andrea-s/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2019-04-07T05:35:16Z","updated_at":"2019-05-03T06:39:44Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"**Use case**\r\nImagine having a table representing Facebook analytics data (just an example) with the following columns:\r\nday -> date\r\naccount_id -> id of the Facebook page\r\nnumber_of_fans -> number of fans for a certain page at a certain date\r\npost_comments -> number of comments on a given Page at a certain date\r\n\r\nNow I would like to compute *simultaneously* the total number of comments in my table (easy, just a sum) AND the total number of fans (which means, for each day I have to sum up all the fans of the different pages and then I have to do an argMax(number_of_fans, day)).\r\n\r\nNow this is something that we can currently do via a very hacky usage of Arrays (generating tuples, sorting them in both directions, finding ranges, and then apply arrayReduce twice. Obviously this is not going to scale very nicely and also results in quite hard-to-debug query code.\r\n\r\nI have a few ideas in mind on how we could make this pattern (which I believe happens a lot in analytics) easier to implement:\r\n\r\n**Describe the solution you'd like**\r\nIdea #1: arrayGroupBy(lambda, arr) function that turns an array into an array of array - each having in common the same group key. This would still mean working with arrays but most of the hacky stuff highlighted above is gone\r\nIdea #2: extend arrayReduce so that it is possible to provide an arbitrary reduce lambda rather than just the name of the aggregation function\r\nIdea #3: somehow abstract away the usage of array entirely, and implement a syntax that looks like this:\r\n\r\n``argMax(sumBy(number_of_fans, day), day)``\r\n\r\nwhere the -By suffix does not return a single number, but an array of tuples, and the argMax finalizes the aggregation as needed.\r\n\r\nI believe #1 should be low hanging enough and has probably other positive fallbacks in different use cases.\r\n\r\n**Describe alternatives you've considered**\r\nAside from array hacking, it is possible to solve this by self-joining the table with itself, which is also another not-so-nice pattern.\r\n\r\nThanks for your consideration!","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4933/reactions","total_count":3,"+1":3,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4933/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4911","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4911/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4911/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4911/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/4911","id":429390212,"node_id":"MDU6SXNzdWU0MjkzOTAyMTI=","number":4911,"title":"Inserts into DateTime column can parse more than 10 digits","user":{"login":"xicmiah","id":127242,"node_id":"MDQ6VXNlcjEyNzI0Mg==","avatar_url":"https://avatars.githubusercontent.com/u/127242?v=4","gravatar_id":"","url":"https://api.github.com/users/xicmiah","html_url":"https://github.com/xicmiah","followers_url":"https://api.github.com/users/xicmiah/followers","following_url":"https://api.github.com/users/xicmiah/following{/other_user}","gists_url":"https://api.github.com/users/xicmiah/gists{/gist_id}","starred_url":"https://api.github.com/users/xicmiah/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xicmiah/subscriptions","organizations_url":"https://api.github.com/users/xicmiah/orgs","repos_url":"https://api.github.com/users/xicmiah/repos","events_url":"https://api.github.com/users/xicmiah/events{/privacy}","received_events_url":"https://api.github.com/users/xicmiah/received_events","type":"User","site_admin":false},"labels":[{"id":1365579236,"node_id":"MDU6TGFiZWwxMzY1NTc5MjM2","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/minor","name":"minor","color":"FFF8F8","default":false,"description":"Priority: minor"},{"id":1575085465,"node_id":"MDU6TGFiZWwxNTc1MDg1NDY1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/unexpected%20behaviour","name":"unexpected behaviour","color":"e088ca","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2019-04-04T17:10:04Z","updated_at":"2021-01-02T02:57:33Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"**Describe the bug**\r\nWhen inserting a 13-digit value into a `DateTime` column in `TSV` format with another column after it, the `DateTime` parsing doesn't fail.\r\n\r\n**How to reproduce**\r\nClickhouse `19.4.3.11`, via docker `yandex/clickhouse-server:latest` at the time of writing. Confirmed also on `18.16.1`.\r\n```\r\ncreate table tst(\r\n    ts DateTime,\r\n    str String\r\n) engine TinyLog();\r\n```\r\n\r\nInsert values `1554304078972\tfoob`:\r\n```\r\n# echo \"1554304078972\\tfoob\" | http -v :8123 query==\"insert into tst format TSV\"\r\nPOST /?query=insert+into+tst+format+TSV HTTP/1.1\r\nAccept: application/json, */*\r\nAccept-Encoding: gzip, deflate\r\nConnection: keep-alive\r\nContent-Length: 19\r\nContent-Type: application/json\r\nHost: localhost:8123\r\nUser-Agent: HTTPie/1.0.2\r\n\r\n1554304078972\tfoob\r\n\r\nHTTP/1.1 200 OK\r\nConnection: Keep-Alive\r\nContent-Type: text/tab-separated-values; charset=UTF-8\r\nDate: Thu, 04 Apr 2019 16:44:39 GMT\r\nKeep-Alive: timeout=3\r\nQuery-Id: dae111a2-ce8a-455e-8ae4-74e57545ecb5\r\nTransfer-Encoding: chunked\r\nX-ClickHouse-Server-Display-Name: d2a5a0944e0e\r\n```\r\n\r\n`INSERT` completes successfully, data in table is\r\n```\r\n2091-01-29 04:58:36\tfoob\r\n```\r\n\r\n**Expected behavior**\r\n`INSERT` fails with `Cannot parse input` message.\r\n\r\n**Additional context**\r\nThis does not reproduce without an additional field.\r\nThis kind of error can happen easily if you are inserting a timestamp in _millis_ from epoch and forget to format it or convert to _seconds_ from epoch.\r\n\r\nIf `foob` is shortened to `foo` in sample data, the expected failure does happen:\r\n```\r\necho \"1554304078972\\tfoo\" | http -v :8123 query==\"insert into tst format TSV\"\r\nPOST /?query=insert+into+tst+format+TSV HTTP/1.1\r\nAccept: application/json, */*\r\nAccept-Encoding: gzip, deflate\r\nConnection: keep-alive\r\nContent-Length: 18\r\nContent-Type: application/json\r\nHost: localhost:8123\r\nUser-Agent: HTTPie/1.0.2\r\n\r\n1554304078972\tfoo\r\n\r\nHTTP/1.1 500 Internal Server Error\r\nConnection: Keep-Alive\r\nContent-Type: text/tab-separated-values; charset=UTF-8\r\nDate: Thu, 04 Apr 2019 16:45:11 GMT\r\nKeep-Alive: timeout=3\r\nQuery-Id: 2ed38780-7d03-4b78-ba08-c95ba7528c89\r\nTransfer-Encoding: chunked\r\nX-ClickHouse-Server-Display-Name: d2a5a0944e0e\r\n\r\nCode: 27, e.displayText() = DB::Exception: Cannot parse input: expected \\t before: 972\\tfoo\\n: (at row 1)\r\n\r\nRow 1:\r\nColumn 0,   name: ts,  type: DateTime, parsed text: \"1554304078\"\r\nERROR: garbage after DateTime: \"972<TAB>foo<LINE FEED>\"\r\nERROR: DateTime must be in YYYY-MM-DD hh:mm:ss or NNNNNNNNNN (unix timestamp, exactly 10 digits) format.\r\n```\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4911/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4911/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4872","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4872/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4872/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4872/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/4872","id":427743154,"node_id":"MDU6SXNzdWU0Mjc3NDMxNTQ=","number":4872,"title":"clickhouse-client timings output file instead of stderr","user":{"login":"jangorecki","id":3627377,"node_id":"MDQ6VXNlcjM2MjczNzc=","avatar_url":"https://avatars.githubusercontent.com/u/3627377?v=4","gravatar_id":"","url":"https://api.github.com/users/jangorecki","html_url":"https://github.com/jangorecki","followers_url":"https://api.github.com/users/jangorecki/followers","following_url":"https://api.github.com/users/jangorecki/following{/other_user}","gists_url":"https://api.github.com/users/jangorecki/gists{/gist_id}","starred_url":"https://api.github.com/users/jangorecki/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jangorecki/subscriptions","organizations_url":"https://api.github.com/users/jangorecki/orgs","repos_url":"https://api.github.com/users/jangorecki/repos","events_url":"https://api.github.com/users/jangorecki/events{/privacy}","received_events_url":"https://api.github.com/users/jangorecki/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":644208617,"node_id":"MDU6TGFiZWw2NDQyMDg2MTc=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/easy%20task","name":"easy task","color":"0e8a16","default":false,"description":"Good for first contributors"},{"id":993003747,"node_id":"MDU6TGFiZWw5OTMwMDM3NDc=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-cli","name":"comp-cli","color":"b5bcff","default":false,"description":"Console & command line"},{"id":1365579236,"node_id":"MDU6TGFiZWwxMzY1NTc5MjM2","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/minor","name":"minor","color":"FFF8F8","default":false,"description":"Priority: minor"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2019-04-01T14:38:35Z","updated_at":"2021-12-23T08:20:05Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Due to the issues related to `query_log` table reported in #4518 I am measuring timings of queries using `clickhouse-client -t` argument, as suggested in documentation.\r\n```\r\n  -t [ --time ]                         print query execution time to stderr in\r\n                                        non-interactive mode (for benchmarks)\r\n```\r\nPrecisely speaking, I am redirecting STDERR to a file so I can extract timings in automated manner.\r\n```sh\r\ncat \"clickhouse/groupby-clickhouse.sql\" | clickhouse-client -t -mn --max_memory_usage=$CH_MEM --format=Pretty --output_format_pretty_max_rows 1 2> clickhouse/log/groupby_G2_1e9_1e2_0_0.out\r\n```\r\nThis works quite well\r\n```sh\r\ncat clickhouse/log/groupby_G2_1e9_1e2_0_0.out \r\n#45.763\r\n#2.864\r\n#...\r\n```\r\nas long as there is no real error raised by clickhouse-client, then file looks like\r\n```sh\r\ncat clickhouse/log/groupby_G2_1e9_2e0_0_0.out\r\n#36.362\r\n#2.290\r\n#...\r\n#197.714\r\n#Error on processing query: SELECT id3, sum(v1) AS v1, avg(v3) AS v3 FROM G2_1e9_2e0_0_0 GROUP BY id3;\r\n#Code: 32, e.displayText() = DB::Exception: Attempt to read after eof: while receiving packet from localhost:9000, 127.0.0.1, Stack trace:\r\n```\r\nIn such cases my log files are useless as they cannot be automatically processed.\r\n\r\n----\r\n\r\nI would like to request an extra argument to `clickhouse-client`, lets say `tout` (or `tfile`), to provide a file name to write timings, rather than using STDERR, which to be fair, should not be used for storing query timings.\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4872/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4872/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4868","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4868/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4868/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4868/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/4868","id":427481618,"node_id":"MDU6SXNzdWU0Mjc0ODE2MTg=","number":4868,"title":"About We tried using ClickHouse as a remote storage for Prometheus","user":{"login":"lyl2008dsg","id":6263451,"node_id":"MDQ6VXNlcjYyNjM0NTE=","avatar_url":"https://avatars.githubusercontent.com/u/6263451?v=4","gravatar_id":"","url":"https://api.github.com/users/lyl2008dsg","html_url":"https://github.com/lyl2008dsg","followers_url":"https://api.github.com/users/lyl2008dsg/followers","following_url":"https://api.github.com/users/lyl2008dsg/following{/other_user}","gists_url":"https://api.github.com/users/lyl2008dsg/gists{/gist_id}","starred_url":"https://api.github.com/users/lyl2008dsg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/lyl2008dsg/subscriptions","organizations_url":"https://api.github.com/users/lyl2008dsg/orgs","repos_url":"https://api.github.com/users/lyl2008dsg/repos","events_url":"https://api.github.com/users/lyl2008dsg/events{/privacy}","received_events_url":"https://api.github.com/users/lyl2008dsg/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":1365689344,"node_id":"MDU6TGFiZWwxMzY1Njg5MzQ0","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-foreign-db","name":"comp-foreign-db","color":"b5bcff","default":false,"description":"Integrations with other databases"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2019-04-01T02:15:42Z","updated_at":"2019-06-11T23:13:33Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"**Use case**\r\nI tried to store metrics with Nested,  and  expected Calculated Growth Rate.\r\ne.g http://www.silota.com/docs/recipes/sql-mom-growth-rate.html\r\n\r\n```\r\nCREATE TABLE IF NOT EXISTS app_metrics(\r\n   partition Date DEFAULT toDate(timestamp),\r\n   timestamp DateTime DEFAULT now(),\r\n   instance_id String,\r\n   metric String,\r\n   tags Nested\r\n   (\r\n     key String,\r\n     value String\r\n   ),\r\n   value Float64\r\n  ) ENGINE = MergeTree(partition, (timestamp, metric), 8192);\r\n```\r\nA clear and concise description of what is the intended usage scenario is.\r\n\r\n**Describe the solution you'd like**\r\n Clickhouse is expected to provide functions like MySQL `lag()` or `lead()` ?\r\n\r\n**Describe alternatives you've considered**\r\nOr alternatives solution e.g https://rextester.com/ERTQ26880\r\n\r\n**Additional context**\r\nWe tried using ClickHouse as a remote storage for Prometheus. \r\nGauge 、Histogram and so on are satisfied，hower  what should Counter of prometheus do?\r\n\r\nps. https://groups.google.com/forum/#!topic/clickhouse/d5Np4j_nkYk\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4868/reactions","total_count":2,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4868/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4831","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4831/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4831/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4831/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/4831","id":426461396,"node_id":"MDU6SXNzdWU0MjY0NjEzOTY=","number":4831,"title":"Query receive timeout always uses default setting","user":{"login":"ShivaS123","id":10269517,"node_id":"MDQ6VXNlcjEwMjY5NTE3","avatar_url":"https://avatars.githubusercontent.com/u/10269517?v=4","gravatar_id":"","url":"https://api.github.com/users/ShivaS123","html_url":"https://github.com/ShivaS123","followers_url":"https://api.github.com/users/ShivaS123/followers","following_url":"https://api.github.com/users/ShivaS123/following{/other_user}","gists_url":"https://api.github.com/users/ShivaS123/gists{/gist_id}","starred_url":"https://api.github.com/users/ShivaS123/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ShivaS123/subscriptions","organizations_url":"https://api.github.com/users/ShivaS123/orgs","repos_url":"https://api.github.com/users/ShivaS123/repos","events_url":"https://api.github.com/users/ShivaS123/events{/privacy}","received_events_url":"https://api.github.com/users/ShivaS123/received_events","type":"User","site_admin":false},"labels":[{"id":845247686,"node_id":"MDU6TGFiZWw4NDUyNDc2ODY=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/usability","name":"usability","color":"ebf28c","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2019-03-28T12:19:08Z","updated_at":"2021-01-25T15:56:37Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"ClickHouse server version 19.4.1.1\r\n\r\nWhenever set receive_timeout is used (e.g. set receive_timeout=6000), the change is reflected in system.settings:\r\n\r\n```\r\nSELECT *\r\nFROM system.settings\r\nWHERE name IN ('max_execution_time', 'receive_timeout')\r\n \r\n┌─name───────────────┬─value─┬─changed─┬─description─┐\r\n│ receive_timeout    │ 6000  │       1 │             │\r\n│ max_execution_time │ 0     │       0 │             │\r\n└────────────────────┴───────┴─────────┴─────────────┘\r\n```\r\n\r\nHowever, a long query (e.g. optimize...final) always receives an error after 300 seconds:\r\n\r\n```\r\nTimeout exceeded while receiving data from server. Waited for 300 seconds, timeout is 300 seconds.\r\nCancelling query.\r\n\r\n```\r\n\r\nThe only way to increase the receive_timeout is to connect with clickhouse-client --receive_timeout=6000\r\n\r\n\r\n\r\nfrom processlist:\r\n```\r\nSettings.Names:       ['max_threads','connect_timeout_with_failover_ms','receive_timeout','send_timeout','use_uncompressed_cache','load_balancing','distributed_aggregation_memory_efficient','max_bytes_before_external_group_by','max_bytes_before_external_sort','max_memory_usage']\r\nSettings.Values:      ['12','10000','6000','6000','0','random','1','30000000000','30000000000','60000000000']\r\n```\r\n\r\n(haven't checked other timeouts)\r\n\r\n\r\nThanks!\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4831/reactions","total_count":4,"+1":4,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4831/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4699","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4699/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4699/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4699/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/4699","id":421290599,"node_id":"MDU6SXNzdWU0MjEyOTA1OTk=","number":4699,"title":"Speed up loading of data parts at startup.","user":{"login":"alexey-milovidov","id":18581488,"node_id":"MDQ6VXNlcjE4NTgxNDg4","avatar_url":"https://avatars.githubusercontent.com/u/18581488?v=4","gravatar_id":"","url":"https://api.github.com/users/alexey-milovidov","html_url":"https://github.com/alexey-milovidov","followers_url":"https://api.github.com/users/alexey-milovidov/followers","following_url":"https://api.github.com/users/alexey-milovidov/following{/other_user}","gists_url":"https://api.github.com/users/alexey-milovidov/gists{/gist_id}","starred_url":"https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexey-milovidov/subscriptions","organizations_url":"https://api.github.com/users/alexey-milovidov/orgs","repos_url":"https://api.github.com/users/alexey-milovidov/repos","events_url":"https://api.github.com/users/alexey-milovidov/events{/privacy}","received_events_url":"https://api.github.com/users/alexey-milovidov/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":756395244,"node_id":"MDU6TGFiZWw3NTYzOTUyNDQ=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/performance","name":"performance","color":"c2e0c6","default":false,"description":null},{"id":1507888214,"node_id":"MDU6TGFiZWwxNTA3ODg4MjE0","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/st-accepted","name":"st-accepted","color":"e5b890","default":false,"description":"The issue is in our backlog, ready to take"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2019-03-14T23:35:38Z","updated_at":"2021-08-29T15:10:48Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"1. Do not load inactive data parts that are old enough (they will be deleted nevertheless). But still use them if we need to repair broken part at startup. Delete old inactive data parts at startup.\r\n\r\n2. Use multiple threads for loading data parts to mitigate latency.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4699/reactions","total_count":6,"+1":6,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4699/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4633","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4633/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4633/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4633/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/4633","id":419018840,"node_id":"MDU6SXNzdWU0MTkwMTg4NDA=","number":4633,"title":"function request CONV(N,from_base,to_base)","user":{"login":"foolfish3","id":35257284,"node_id":"MDQ6VXNlcjM1MjU3Mjg0","avatar_url":"https://avatars.githubusercontent.com/u/35257284?v=4","gravatar_id":"","url":"https://api.github.com/users/foolfish3","html_url":"https://github.com/foolfish3","followers_url":"https://api.github.com/users/foolfish3/followers","following_url":"https://api.github.com/users/foolfish3/following{/other_user}","gists_url":"https://api.github.com/users/foolfish3/gists{/gist_id}","starred_url":"https://api.github.com/users/foolfish3/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/foolfish3/subscriptions","organizations_url":"https://api.github.com/users/foolfish3/orgs","repos_url":"https://api.github.com/users/foolfish3/repos","events_url":"https://api.github.com/users/foolfish3/events{/privacy}","received_events_url":"https://api.github.com/users/foolfish3/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":644208617,"node_id":"MDU6TGFiZWw2NDQyMDg2MTc=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/easy%20task","name":"easy task","color":"0e8a16","default":false,"description":"Good for first contributors"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2019-03-09T01:40:08Z","updated_at":"2021-07-03T22:47:23Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"request1:CONV(N,from_base,to_base)\r\n\r\nrequest2:splitByString allow empty string to cut string into chars","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4633/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4633/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4596","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4596/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4596/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4596/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/4596","id":417319527,"node_id":"MDU6SXNzdWU0MTczMTk1Mjc=","number":4596,"title":"Multiple JOIN does not support PREWHERE","user":{"login":"den-crane","id":19737682,"node_id":"MDQ6VXNlcjE5NzM3Njgy","avatar_url":"https://avatars.githubusercontent.com/u/19737682?v=4","gravatar_id":"","url":"https://api.github.com/users/den-crane","html_url":"https://github.com/den-crane","followers_url":"https://api.github.com/users/den-crane/followers","following_url":"https://api.github.com/users/den-crane/following{/other_user}","gists_url":"https://api.github.com/users/den-crane/gists{/gist_id}","starred_url":"https://api.github.com/users/den-crane/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/den-crane/subscriptions","organizations_url":"https://api.github.com/users/den-crane/orgs","repos_url":"https://api.github.com/users/den-crane/repos","events_url":"https://api.github.com/users/den-crane/events{/privacy}","received_events_url":"https://api.github.com/users/den-crane/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":1357578153,"node_id":"MDU6TGFiZWwxMzU3NTc4MTUz","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-joins","name":"comp-joins","color":"b5bcff","default":false,"description":"JOINs"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2019-03-05T14:15:24Z","updated_at":"2021-10-12T12:10:36Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"body":"19.3.4.15\r\n\r\nCREATE TABLE a1 ( ANIMAL Nullable(String) ) engine = MergeTree order by tuple();\r\ninsert into a1 values('CROCO');\r\n\r\n```\r\nselect count() \r\n     from a1 a \r\n      join a1 b on (a.ANIMAL = b.ANIMAL) \r\n      join a1 c on (c.ANIMAL = b.ANIMAL) \r\nwhere a.ANIMAL = 'CROCO'\r\n┌─count()─┐\r\n│       1 │\r\n└─────────┘\r\n\r\n```\r\n\r\n\r\n```\r\nselect count() \r\n     from a1 a   \r\n     join a1 b on (a.ANIMAL = b.ANIMAL) \r\n     join a1 c on (c.ANIMAL = b.ANIMAL) \r\nprewhere a.ANIMAL = 'CROCO'\r\n\r\nReceived exception from server (version 19.3.4):\r\nCode: 182. DB::Exception: Received from localhost:9000, ::1. DB::Exception: Illegal PREWHERE.\r\n\r\n\r\n```","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4596/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4596/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4567","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4567/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4567/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4567/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/4567","id":416577636,"node_id":"MDU6SXNzdWU0MTY1Nzc2MzY=","number":4567,"title":"CH has to throw errors about ambiguous columns.","user":{"login":"den-crane","id":19737682,"node_id":"MDQ6VXNlcjE5NzM3Njgy","avatar_url":"https://avatars.githubusercontent.com/u/19737682?v=4","gravatar_id":"","url":"https://api.github.com/users/den-crane","html_url":"https://github.com/den-crane","followers_url":"https://api.github.com/users/den-crane/followers","following_url":"https://api.github.com/users/den-crane/following{/other_user}","gists_url":"https://api.github.com/users/den-crane/gists{/gist_id}","starred_url":"https://api.github.com/users/den-crane/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/den-crane/subscriptions","organizations_url":"https://api.github.com/users/den-crane/orgs","repos_url":"https://api.github.com/users/den-crane/repos","events_url":"https://api.github.com/users/den-crane/events{/privacy}","received_events_url":"https://api.github.com/users/den-crane/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":1357578153,"node_id":"MDU6TGFiZWwxMzU3NTc4MTUz","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-joins","name":"comp-joins","color":"b5bcff","default":false,"description":"JOINs"},{"id":1507867504,"node_id":"MDU6TGFiZWwxNTA3ODY3NTA0","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/st-hold","name":"st-hold","color":"e5b890","default":false,"description":"We've paused the work on issue for some reason"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2019-03-03T23:03:41Z","updated_at":"2021-07-03T22:47:54Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"body":"create table t(a Int64, b Int64) engine = TinyLog;\r\ncreate table s(a Int64, b Int64) engine = TinyLog;\r\n\r\n\r\nselect a from t left outer join s on (t.b=s.b);\r\n\r\nCH: 0 rows in set. Elapsed: 0.001 sec.\r\nPG: ERROR:  column reference \"a\" is ambiguous\r\nmysql: ERROR 1052 (23000): Column 'a' in field list is ambiguous\r\n\r\n\r\nselect t.a from t left outer join s on (t.b=s.b) where a=1;\r\n\r\nCH: 0 rows in set. Elapsed: 0.002 sec.\r\nPG: ERROR:  column reference \"a\" is ambiguous\r\nmysql: ERROR 1052 (23000): Column 'a' in where clause is ambiguous","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4567/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4567/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4548","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4548/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4548/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4548/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/4548","id":416077416,"node_id":"MDU6SXNzdWU0MTYwNzc0MTY=","number":4548,"title":"timezone via http protocol","user":{"login":"hellmany","id":5558424,"node_id":"MDQ6VXNlcjU1NTg0MjQ=","avatar_url":"https://avatars.githubusercontent.com/u/5558424?v=4","gravatar_id":"","url":"https://api.github.com/users/hellmany","html_url":"https://github.com/hellmany","followers_url":"https://api.github.com/users/hellmany/followers","following_url":"https://api.github.com/users/hellmany/following{/other_user}","gists_url":"https://api.github.com/users/hellmany/gists{/gist_id}","starred_url":"https://api.github.com/users/hellmany/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hellmany/subscriptions","organizations_url":"https://api.github.com/users/hellmany/orgs","repos_url":"https://api.github.com/users/hellmany/repos","events_url":"https://api.github.com/users/hellmany/events{/privacy}","received_events_url":"https://api.github.com/users/hellmany/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":1481221764,"node_id":"MDU6TGFiZWwxNDgxMjIxNzY0","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-datetime","name":"comp-datetime","color":"b5bcff","default":false,"description":"date & time & timezone related"},{"id":1481327553,"node_id":"MDU6TGFiZWwxNDgxMzI3NTUz","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-http","name":"comp-http","color":"b5bcff","default":false,"description":"http protocol related"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2019-03-01T12:16:42Z","updated_at":"2021-03-07T02:37:42Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Will be great to add support to set TimeZone via HTTP headers for this session (and later use requests with session-id but without this header) for HTTP queries.\r\n\r\nWill be great when client set in his profile timezone for stats and without rewriting all queries where dates used with timezone.\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4548/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4548/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4517","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4517/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4517/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4517/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/4517","id":414892363,"node_id":"MDU6SXNzdWU0MTQ4OTIzNjM=","number":4517,"title":"cutIPv6 documentation misleading","user":{"login":"ayng","id":2892565,"node_id":"MDQ6VXNlcjI4OTI1NjU=","avatar_url":"https://avatars.githubusercontent.com/u/2892565?v=4","gravatar_id":"","url":"https://api.github.com/users/ayng","html_url":"https://github.com/ayng","followers_url":"https://api.github.com/users/ayng/followers","following_url":"https://api.github.com/users/ayng/following{/other_user}","gists_url":"https://api.github.com/users/ayng/gists{/gist_id}","starred_url":"https://api.github.com/users/ayng/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ayng/subscriptions","organizations_url":"https://api.github.com/users/ayng/orgs","repos_url":"https://api.github.com/users/ayng/repos","events_url":"https://api.github.com/users/ayng/events{/privacy}","received_events_url":"https://api.github.com/users/ayng/received_events","type":"User","site_admin":false},"labels":[{"id":785082162,"node_id":"MDU6TGFiZWw3ODUwODIxNjI=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-documentation","name":"comp-documentation","color":"b5bcff","default":false,"description":"Used to run automatic builds of the documentation"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2019-02-27T00:53:33Z","updated_at":"2020-04-26T22:30:21Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"cutIPv6 is a Clickhouse function that zeroes out some bits from the end of an IPv6 or IPv4 address. The [documentation for cutIPv6(x, bitsToCutForIPv6, bitsToCutForIPv4)](https://clickhouse.yandex/docs/en/query_language/functions/ip_address_functions/#cutipv6-x-bitstocutforipv6-bitstocutforipv4) says that it\r\n\r\n> Returns a string containing the address of the specified number of **bits** removed in text format.\r\n\r\nHowever, the provided example contradicts this statement. Notice that the IPv6 address has its last 16 bits zeroed out, despite passing in 2 as `bitsToCutForIPv6`.\r\n\r\n```\r\nWITH\r\n    IPv6StringToNum('2001:0DB8:AC10:FE01:FEED:BABE:CAFE:F00D') AS ipv6,\r\n    IPv4ToIPv6(IPv4StringToNum('192.168.0.1')) AS ipv4\r\nSELECT\r\n    cutIPv6(ipv6, 2, 0),\r\n    cutIPv6(ipv4, 0, 2)\r\n```\r\n```\r\n┌─cutIPv6(ipv6, 2, 0)─────────────────┬─cutIPv6(ipv4, 0, 2)─┐\r\n│ 2001:db8:ac10:fe01:feed:babe:cafe:0 │ ::ffff:192.168.0.0  │\r\n└─────────────────────────────────────┴─────────────────────┘\r\n```\r\n\r\nAlso, while the behavior of IPv4 address handling is unclear in this example, I confirmed that this function operates on bytes instead of bits for IPv4 as well.\r\n\r\nThis behavior was reproduced in the latest yandex/clickhouse-server Docker container running Clickhouse client version 18.10.3 and server version 19.1.9 revision 54413.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4517/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4517/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4510","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4510/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4510/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4510/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/4510","id":414440463,"node_id":"MDU6SXNzdWU0MTQ0NDA0NjM=","number":4510,"title":"uniqExact(distinct count) is slow","user":{"login":"zhicwu","id":4270380,"node_id":"MDQ6VXNlcjQyNzAzODA=","avatar_url":"https://avatars.githubusercontent.com/u/4270380?v=4","gravatar_id":"","url":"https://api.github.com/users/zhicwu","html_url":"https://github.com/zhicwu","followers_url":"https://api.github.com/users/zhicwu/followers","following_url":"https://api.github.com/users/zhicwu/following{/other_user}","gists_url":"https://api.github.com/users/zhicwu/gists{/gist_id}","starred_url":"https://api.github.com/users/zhicwu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zhicwu/subscriptions","organizations_url":"https://api.github.com/users/zhicwu/orgs","repos_url":"https://api.github.com/users/zhicwu/repos","events_url":"https://api.github.com/users/zhicwu/events{/privacy}","received_events_url":"https://api.github.com/users/zhicwu/received_events","type":"User","site_admin":false},"labels":[{"id":756395244,"node_id":"MDU6TGFiZWw3NTYzOTUyNDQ=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/performance","name":"performance","color":"c2e0c6","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2019-02-26T05:40:30Z","updated_at":"2019-03-06T13:33:57Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"I'm comparing ClickHouse with a commercial columnar database. It's amazing that in some cases ClickHouse beats the commercial product even with less resources(4 cores vs. 20 cores in my case). However, I noticed uniqExact(or distinct count) is unreasonably slow.\r\n\r\nHere is my findings(using dockerized ClickHouse 19.3.4) and hopefully they can be of use:\r\n* assume we have a table with a few hundred millions rows(mine: ~600,000,000 rows) like below\r\n```sql\r\ncreate table test_distinct_count(a String, b String, b Int32, d String, ...)\r\nEngine=MergeTree() order by (a, b, c, d) settings index_granularity = 8192;\r\n```\r\n\r\n* we'll likely get the following test results on a VM with 4 cores(max_threads=4)\r\n```sql\r\nselect a from test_distinct_count group by a -- 1,100+ rows returned in 5.252s\r\nselect distinct a from test_distinct_count -- 1,100+ rows returned in 5.912s\r\nselect uniq(a) from test_distinct_count -- 1 row returned in 7.483s\r\nselect uniqExact(a) from test_distinct_count -- 1 row returned in 12.308s\r\nselect count(1) from (select distinct a from test_distinct_count) x -- 1 row returned in 5.821s\r\nselect count(1) from (select a from test_distinct_count group by a) x -- 1 row returned in 4.937s\r\n```\r\n\r\nIt looks like using `group by` and avoiding `distinct` bring us better performance, but it's really inconvenient to replace all `distinct count` with the trick...\r\n\r\nUpdate: same issue on 19.3.5","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4510/reactions","total_count":5,"+1":5,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4510/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4432","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4432/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4432/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4432/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/4432","id":411370459,"node_id":"MDU6SXNzdWU0MTEzNzA0NTk=","number":4432,"title":"WITH array and \"No alias for non-trivial value in ARRAY JOIN\"","user":{"login":"filimonov","id":1549571,"node_id":"MDQ6VXNlcjE1NDk1NzE=","avatar_url":"https://avatars.githubusercontent.com/u/1549571?v=4","gravatar_id":"","url":"https://api.github.com/users/filimonov","html_url":"https://github.com/filimonov","followers_url":"https://api.github.com/users/filimonov/followers","following_url":"https://api.github.com/users/filimonov/following{/other_user}","gists_url":"https://api.github.com/users/filimonov/gists{/gist_id}","starred_url":"https://api.github.com/users/filimonov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/filimonov/subscriptions","organizations_url":"https://api.github.com/users/filimonov/orgs","repos_url":"https://api.github.com/users/filimonov/repos","events_url":"https://api.github.com/users/filimonov/events{/privacy}","received_events_url":"https://api.github.com/users/filimonov/received_events","type":"User","site_admin":false},"labels":[{"id":386401505,"node_id":"MDU6TGFiZWwzODY0MDE1MDU=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/bug","name":"bug","color":"ee0701","default":true,"description":"Confirmed user-visible misbehaviour in official release"},{"id":1365579236,"node_id":"MDU6TGFiZWwxMzY1NTc5MjM2","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/minor","name":"minor","color":"FFF8F8","default":false,"description":"Priority: minor"},{"id":1507867504,"node_id":"MDU6TGFiZWwxNTA3ODY3NTA0","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/st-hold","name":"st-hold","color":"e5b890","default":false,"description":"We've paused the work on issue for some reason"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2019-02-18T09:09:23Z","updated_at":"2021-08-15T03:17:51Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"body":"```sql\r\nSELECT version()\r\n\r\n┌─version()─┐\r\n│ 19.3.3    │\r\n└───────────┘\r\n\r\n-- ok:\r\nSELECT x\r\nFROM system.one \r\nARRAY JOIN [1, 2] AS x\r\n\r\n┌─x─┐\r\n│ 1 │\r\n│ 2 │\r\n└───┘\r\n\r\n-- ok:\r\n\r\nSELECT \r\n    [1, 2] AS zz, \r\n    x\r\nFROM system.one \r\nARRAY JOIN zz AS x\r\n\r\n┌─zz────┬─x─┐\r\n│ [1,2] │ 1 │\r\n│ [1,2] │ 2 │\r\n└───────┴───┘\r\n\r\n-- wrong:\r\nWITH [1, 2] AS zz\r\nSELECT x\r\nFROM system.one \r\nARRAY JOIN zz AS x\r\n\r\nReceived exception from server (version 19.3.3):\r\nCode: 206. DB::Exception: Received from localhost:9000, ::1. DB::Exception: No alias for non-trivial value in ARRAY JOIN: x. \r\n```","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4432/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4432/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4425","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4425/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4425/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4425/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/4425","id":411208617,"node_id":"MDU6SXNzdWU0MTEyMDg2MTc=","number":4425,"title":"integration ML-algorithm lib like madlib","user":{"login":"cmdares","id":5292190,"node_id":"MDQ6VXNlcjUyOTIxOTA=","avatar_url":"https://avatars.githubusercontent.com/u/5292190?v=4","gravatar_id":"","url":"https://api.github.com/users/cmdares","html_url":"https://github.com/cmdares","followers_url":"https://api.github.com/users/cmdares/followers","following_url":"https://api.github.com/users/cmdares/following{/other_user}","gists_url":"https://api.github.com/users/cmdares/gists{/gist_id}","starred_url":"https://api.github.com/users/cmdares/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cmdares/subscriptions","organizations_url":"https://api.github.com/users/cmdares/orgs","repos_url":"https://api.github.com/users/cmdares/repos","events_url":"https://api.github.com/users/cmdares/events{/privacy}","received_events_url":"https://api.github.com/users/cmdares/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":1369940711,"node_id":"MDU6TGFiZWwxMzY5OTQwNzEx","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-ml","name":"comp-ml","color":"b5bcff","default":false,"description":"Machine Learning"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2019-02-17T16:56:22Z","updated_at":"2020-09-21T10:54:42Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"clickhouse+?algorithm lib? = postgresql/Greenplum+madlib\r\nmadlib ref https://github.com/apache/madlib\r\nIF \"CATBOOST\"? \r\nhow about the feature vs madlib?\r\nwhen will the available version be released?","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4425/reactions","total_count":2,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4425/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4420","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4420/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4420/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4420/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/4420","id":411086588,"node_id":"MDU6SXNzdWU0MTEwODY1ODg=","number":4420,"title":"Consider Adding Codec to work with Hex Strings","user":{"login":"PeterZaitsev","id":3651746,"node_id":"MDQ6VXNlcjM2NTE3NDY=","avatar_url":"https://avatars.githubusercontent.com/u/3651746?v=4","gravatar_id":"","url":"https://api.github.com/users/PeterZaitsev","html_url":"https://github.com/PeterZaitsev","followers_url":"https://api.github.com/users/PeterZaitsev/followers","following_url":"https://api.github.com/users/PeterZaitsev/following{/other_user}","gists_url":"https://api.github.com/users/PeterZaitsev/gists{/gist_id}","starred_url":"https://api.github.com/users/PeterZaitsev/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/PeterZaitsev/subscriptions","organizations_url":"https://api.github.com/users/PeterZaitsev/orgs","repos_url":"https://api.github.com/users/PeterZaitsev/repos","events_url":"https://api.github.com/users/PeterZaitsev/events{/privacy}","received_events_url":"https://api.github.com/users/PeterZaitsev/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2019-02-16T16:13:37Z","updated_at":"2019-02-17T20:11:01Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"(you don't have to strictly follow this form)\r\n\r\n**Use case**\r\n\r\nBetter compression for hex strings, such as \"813031B8BBC3B329\"\r\n\r\n\r\n**Describe the solution you'd like**\r\n\r\nHex Strings are used in many applications  to represent short binary data in printable form\r\nWhile ClickHouse has hex() and unhex() functions it  is intrusive to the application \r\n\r\n\r\n**Describe alternatives you've considered**\r\n\r\nSome different data type which stores data as binary but displays it in hex would be alternative but I assume it is much more labor intensive while      unhex() codec  might be easier.  \r\n\r\nOf course codec would need to be able to reject non-hex data input as invalid in this case.\r\n\r\n\r\n**Additional context**\r\n\r\nSimply storing hex strings as strings compared to converting them to binary results in 10-15%  performance overhead, which is not significant. However column  also takes some 80% more on disk using LZ4 compression which  to my surprise is unable to compress such data well.  ","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4420/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4420/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4419","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4419/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4419/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4419/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/4419","id":411072792,"node_id":"MDU6SXNzdWU0MTEwNzI3OTI=","number":4419,"title":"Feature: flexible merging of rows via SQL query","user":{"login":"arctica","id":870630,"node_id":"MDQ6VXNlcjg3MDYzMA==","avatar_url":"https://avatars.githubusercontent.com/u/870630?v=4","gravatar_id":"","url":"https://api.github.com/users/arctica","html_url":"https://github.com/arctica","followers_url":"https://api.github.com/users/arctica/followers","following_url":"https://api.github.com/users/arctica/following{/other_user}","gists_url":"https://api.github.com/users/arctica/gists{/gist_id}","starred_url":"https://api.github.com/users/arctica/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/arctica/subscriptions","organizations_url":"https://api.github.com/users/arctica/orgs","repos_url":"https://api.github.com/users/arctica/repos","events_url":"https://api.github.com/users/arctica/events{/privacy}","received_events_url":"https://api.github.com/users/arctica/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2019-02-16T13:26:34Z","updated_at":"2021-05-04T15:59:45Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"There are currently 6 specialized *MergeTree table engines which have different functionality when it comes to merging of rows. The simplest one, SummingMergeTree for example just sums numeric values while AggregatingMergeTree offers more flexibility in that one can specify different aggregating functions for each column. The Replacing/Collapsing/VersionCollapsing engines allow one to replace rows with newer values.\r\n\r\nWhile powerful, these engines are still quite specific in their usecase and therefor limited in what they can do. One can for example not implement an Exponential Moving Average (EMA) where newer rows are assigned a bigger weight compared to older rows when computing the avg() as far as I could tell.\r\n\r\nI propose a feature that would enable complete flexibility when it comes to how multiple rows should be merged by letting the user specify a SQL query which can use any aggregate functions together with arbitrary data transformations.\r\n\r\nThis could be implemented via a SQL query specified as a table parameter\r\n\r\n```\r\nCREATE TABLE test (ticker String, ts DateTime, value UInt64) ENGINE = MergeTree\r\nORDER BY (ticker, ts)\r\nAGGREGATE BY SELECT ticker, max(ts), avg(value * (3600 - max(now() - ts, 3600)) / 3600) GROUP BY ticker HAVING value > 0\r\n```\r\n\r\nThe above example would calculate some weighted moving average for the value column relative to how old it is and only retains rows for which the value is bigger than zero.\r\n\r\nThis could also be used to implement data retention policies.\r\n\r\nThere are two negatives that I can see with this approach:\r\n1. One can never assume that the part is \"final\" even if no new rows had been written since the last merge. This is demonstrated also by the above example. This can never be resolved and one would have to run OPTIMIZE FINAL queries if one knows that according to the specified logic, a part could be further aggregated. In practice, I don't think this would be a real issue.\r\n2. Performance of this approach is most likely much worse than with the specialized table engines that currently exist. I assume that the query has to process all rows of the parts that are being merged with intermittent results in memory before it can write the results to disk unless there can be some clever optimizations applied. The performance penalty is clearly outweighed though by the tremendous amount of flexibility that this feature offers as many aggregation schemes simply can't be realized with the specialized engines. It would not replace the specialized engines.\r\n\r\nBTW it would be good if one could specify a max part size to avoid the aggregation query consuming huge amounts of memory for really big parts. Maybe such a limit already exists but I could not find such a setting.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4419/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4419/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4413","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4413/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4413/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4413/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/4413","id":410945002,"node_id":"MDU6SXNzdWU0MTA5NDUwMDI=","number":4413,"title":"Feature: best effort sorting to optimize compression","user":{"login":"arctica","id":870630,"node_id":"MDQ6VXNlcjg3MDYzMA==","avatar_url":"https://avatars.githubusercontent.com/u/870630?v=4","gravatar_id":"","url":"https://api.github.com/users/arctica","html_url":"https://github.com/arctica","followers_url":"https://api.github.com/users/arctica/followers","following_url":"https://api.github.com/users/arctica/following{/other_user}","gists_url":"https://api.github.com/users/arctica/gists{/gist_id}","starred_url":"https://api.github.com/users/arctica/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/arctica/subscriptions","organizations_url":"https://api.github.com/users/arctica/orgs","repos_url":"https://api.github.com/users/arctica/repos","events_url":"https://api.github.com/users/arctica/events{/privacy}","received_events_url":"https://api.github.com/users/arctica/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2019-02-15T21:08:57Z","updated_at":"2019-02-16T10:19:38Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Use case:\r\n\r\nA MergeTree table with free modifications of colums (add/drop) can't make good use of a ORDER BY sorting expression in order to sort rows so that compression can work well. For example dropping column2 from a table which has an ORDER BY expression of (column1, column2, column3) does not seem possible currently. One can only drop the last column of the table. This makes sense as dropping a column from the middle of the table would result in data in the columns after the dropped one being not properly sorted.\r\nIf the ORDER BY expression does not contain the columns, then dropping them works.\r\n\r\nThis would be an optimization for tables which collect metrics by dimensions which might change every now and then.\r\n\r\n\r\nProposed solution:\r\n\r\nA setting that would allow the MergeTree table engine to sort rows by an implicit expression that contains all columns which are not already in the sorting expression but only on a best effort basis. The sorting would be performed during insertion of data and merging. E.g. if a table has columns column1 ... column4 with explicit strong sorting expression (column1, column2), then this setting would add an implicit soft sorting expression (column1, column2, column3, column4). Ordering of column3 and column4 are not guaranteed.\r\n\r\nFor tables with many columns, sorting them by all columns might not be efficient so explicitly specifying columns for the soft sort expression might be ideal. ALTER queries would allow modification of the columns that are in the best effort sorting expression freely while still having the same restrictions for the current ORDER BY expression.\r\n\r\nExample:\r\n\r\n```\r\nCREATE TABLE metrics (date Date, country String, domain String, browser String, hits UInt64, bandwidth Uint64)\r\nORDER BY (date, country)\r\nSOFTORDER BY (date, country, domain, path)\r\n```\r\n\r\nDropping the column domain would be allowed.\r\n\r\n\r\nWorkaround considered:\r\n\r\nOne can of course create a new table with only column1 and column2 and then insert the data from the old table into it but that gets painful for large tables.\r\n\r\n\r\nComment:\r\n\r\nI am not sure if my proposed solution is ideal. Maybe there are easier ways to improve the compression of data without requiring strict sorting with its limitations.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4413/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4413/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4350","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4350/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4350/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4350/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/4350","id":408918078,"node_id":"MDU6SXNzdWU0MDg5MTgwNzg=","number":4350,"title":"Table functions are forbidden in readonly mode...","user":{"login":"mcarbonneaux","id":8479023,"node_id":"MDQ6VXNlcjg0NzkwMjM=","avatar_url":"https://avatars.githubusercontent.com/u/8479023?v=4","gravatar_id":"","url":"https://api.github.com/users/mcarbonneaux","html_url":"https://github.com/mcarbonneaux","followers_url":"https://api.github.com/users/mcarbonneaux/followers","following_url":"https://api.github.com/users/mcarbonneaux/following{/other_user}","gists_url":"https://api.github.com/users/mcarbonneaux/gists{/gist_id}","starred_url":"https://api.github.com/users/mcarbonneaux/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mcarbonneaux/subscriptions","organizations_url":"https://api.github.com/users/mcarbonneaux/orgs","repos_url":"https://api.github.com/users/mcarbonneaux/repos","events_url":"https://api.github.com/users/mcarbonneaux/events{/privacy}","received_events_url":"https://api.github.com/users/mcarbonneaux/received_events","type":"User","site_admin":false},"labels":[{"id":386401507,"node_id":"MDU6TGFiZWwzODY0MDE1MDc=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/enhancement","name":"enhancement","color":"84b6eb","default":true,"description":null},{"id":386401510,"node_id":"MDU6TGFiZWwzODY0MDE1MTA=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/question","name":"question","color":"bfdadc","default":true,"description":""}],"state":"open","locked":false,"assignee":{"login":"vitlibar","id":45142681,"node_id":"MDQ6VXNlcjQ1MTQyNjgx","avatar_url":"https://avatars.githubusercontent.com/u/45142681?v=4","gravatar_id":"","url":"https://api.github.com/users/vitlibar","html_url":"https://github.com/vitlibar","followers_url":"https://api.github.com/users/vitlibar/followers","following_url":"https://api.github.com/users/vitlibar/following{/other_user}","gists_url":"https://api.github.com/users/vitlibar/gists{/gist_id}","starred_url":"https://api.github.com/users/vitlibar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vitlibar/subscriptions","organizations_url":"https://api.github.com/users/vitlibar/orgs","repos_url":"https://api.github.com/users/vitlibar/repos","events_url":"https://api.github.com/users/vitlibar/events{/privacy}","received_events_url":"https://api.github.com/users/vitlibar/received_events","type":"User","site_admin":false},"assignees":[{"login":"vitlibar","id":45142681,"node_id":"MDQ6VXNlcjQ1MTQyNjgx","avatar_url":"https://avatars.githubusercontent.com/u/45142681?v=4","gravatar_id":"","url":"https://api.github.com/users/vitlibar","html_url":"https://github.com/vitlibar","followers_url":"https://api.github.com/users/vitlibar/followers","following_url":"https://api.github.com/users/vitlibar/following{/other_user}","gists_url":"https://api.github.com/users/vitlibar/gists{/gist_id}","starred_url":"https://api.github.com/users/vitlibar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vitlibar/subscriptions","organizations_url":"https://api.github.com/users/vitlibar/orgs","repos_url":"https://api.github.com/users/vitlibar/repos","events_url":"https://api.github.com/users/vitlibar/events{/privacy}","received_events_url":"https://api.github.com/users/vitlibar/received_events","type":"User","site_admin":false}],"milestone":null,"comments":10,"created_at":"2019-02-11T18:32:59Z","updated_at":"2020-11-09T09:22:16Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"i've configured user readonly to be used to only request data...\r\ni've created un view on clickhouse to external mysql database.\r\nwhen try to request (only read only request!) to clickhouse to this view with readonly user i receive this error:\r\n\"Table functions are forbidden in readonly mode\"\r\n\r\nthere a way to use view to external db with readonly user ?\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4350/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4350/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4331","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4331/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4331/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4331/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/4331","id":408601993,"node_id":"MDU6SXNzdWU0MDg2MDE5OTM=","number":4331,"title":"Wrong / meaningless syntax [create view ... to ...] allowed","user":{"login":"den-crane","id":19737682,"node_id":"MDQ6VXNlcjE5NzM3Njgy","avatar_url":"https://avatars.githubusercontent.com/u/19737682?v=4","gravatar_id":"","url":"https://api.github.com/users/den-crane","html_url":"https://github.com/den-crane","followers_url":"https://api.github.com/users/den-crane/followers","following_url":"https://api.github.com/users/den-crane/following{/other_user}","gists_url":"https://api.github.com/users/den-crane/gists{/gist_id}","starred_url":"https://api.github.com/users/den-crane/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/den-crane/subscriptions","organizations_url":"https://api.github.com/users/den-crane/orgs","repos_url":"https://api.github.com/users/den-crane/repos","events_url":"https://api.github.com/users/den-crane/events{/privacy}","received_events_url":"https://api.github.com/users/den-crane/received_events","type":"User","site_admin":false},"labels":[{"id":644208617,"node_id":"MDU6TGFiZWw2NDQyMDg2MTc=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/easy%20task","name":"easy task","color":"0e8a16","default":false,"description":"Good for first contributors"},{"id":845247686,"node_id":"MDU6TGFiZWw4NDUyNDc2ODY=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/usability","name":"usability","color":"ebf28c","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2019-02-11T00:20:30Z","updated_at":"2021-02-14T21:11:44Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"body":"Connected to ClickHouse server version 19.1.6\r\n\r\nCREATE VIEW X TO Y AS SELECT 1\r\n\r\nOk.\r\n0 rows in set. Elapsed: 0.002 sec.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4331/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4331/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4319","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4319/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4319/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4319/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/4319","id":408461083,"node_id":"MDU6SXNzdWU0MDg0NjEwODM=","number":4319,"title":"Transparent update/delete with CollapsingMergeTree","user":{"login":"mm64","id":22786238,"node_id":"MDQ6VXNlcjIyNzg2MjM4","avatar_url":"https://avatars.githubusercontent.com/u/22786238?v=4","gravatar_id":"","url":"https://api.github.com/users/mm64","html_url":"https://github.com/mm64","followers_url":"https://api.github.com/users/mm64/followers","following_url":"https://api.github.com/users/mm64/following{/other_user}","gists_url":"https://api.github.com/users/mm64/gists{/gist_id}","starred_url":"https://api.github.com/users/mm64/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mm64/subscriptions","organizations_url":"https://api.github.com/users/mm64/orgs","repos_url":"https://api.github.com/users/mm64/repos","events_url":"https://api.github.com/users/mm64/events{/privacy}","received_events_url":"https://api.github.com/users/mm64/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2019-02-09T19:11:13Z","updated_at":"2019-02-09T19:11:13Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"**Use case**\r\n\r\nThis issue is about frequently changing data. For example:\r\n* Data are result of very complex calculations and algorithms that refer to time ranges like a month. So, data about the current month change frequently.\r\n* Data that result from multiple events are integrated into a single row for easier and faster queries. The events happen at different points of time, but they belong together somehow. This leads to the need for changing the row on a subsequent event.\r\n* Wrong data need to be revised. Imagine that people enter data that they may change at a later point of time.\r\n* Data that are not stored in a time-dependent way may change, e. g. the last name of a person. This can be achieved by using a dictionary, but it makes implementing harder.\r\n* ...\r\n\r\n**Proposed approach**\r\n\r\nClickhouse already has a solution for frequently changing data: CollapsingMergeTree - table engines. The downside of them is that using them for frequently changing data needs knowledge and development-effort. This issue proposes to make usage of CollapsingMergeTree easier by shifting tasks from applications to Clickhouse so that developers don't have to know about them and that they don't have to be implemented again and again in applications. In detail:\r\n* Clickhouse automatically rewrites queries as described in https://clickhouse.yandex/docs/en/operations/table_engines/collapsingmergetree/. It uses `FINAL` if there is no other way. It uses rewriting of aggregate-functions if possible (e. g. `sum(Sign * x)` instead of `sum(x)`).\r\n* Clickhouse implements SQL-`DELETE` for frequent updates by inserting a cancel-row (`Sign`: -1).\r\n* Clickhouse implements SQL-`UPDATE` for frequent updates by inserting a cancel-row (`Sign`: -1) and a row with the new state.\r\n\r\nThis is only possible for tables with a CollapsingMergeTree - table engine, of course. It could be switched off by default to be backwards-compatible.\r\n\r\n**Benefits of the proposed approach**\r\n* Improved SQL-compatibility\r\n* Easier usage of Clickhouse\r\n* People in organisations can write queries with less knowledge about how Clickhouse is setup in the organisation and how CollapsingMergeTree works.\r\n* Easier usage of standard-BI-tools","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4319/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4319/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4315","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4315/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4315/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4315/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/4315","id":408210133,"node_id":"MDU6SXNzdWU0MDgyMTAxMzM=","number":4315,"title":"Sampling on view on AggregatingMergeTree  not working","user":{"login":"dsr301","id":5129304,"node_id":"MDQ6VXNlcjUxMjkzMDQ=","avatar_url":"https://avatars.githubusercontent.com/u/5129304?v=4","gravatar_id":"","url":"https://api.github.com/users/dsr301","html_url":"https://github.com/dsr301","followers_url":"https://api.github.com/users/dsr301/followers","following_url":"https://api.github.com/users/dsr301/following{/other_user}","gists_url":"https://api.github.com/users/dsr301/gists{/gist_id}","starred_url":"https://api.github.com/users/dsr301/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dsr301/subscriptions","organizations_url":"https://api.github.com/users/dsr301/orgs","repos_url":"https://api.github.com/users/dsr301/repos","events_url":"https://api.github.com/users/dsr301/events{/privacy}","received_events_url":"https://api.github.com/users/dsr301/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2019-02-08T15:49:38Z","updated_at":"2021-06-13T21:03:12Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"We have a view created on top of AggregatingMergeTree.\r\nWe have noticed that sampling works on AggregatingMergeTree  queries but not with the views.\r\n\r\nSample query below:\r\n> select count (*) from (select mainkey  from data_view  where parkey>=4035225266123964424 and parkey<=4107001385185181704 and  mainkey>=4035225266123964434 and mainkey<=4107282859893456914 )\r\n\r\n    count without sample: 91 M (scanned 99 M)\r\n    count with sample 0.01: 91 M (scanned 99 M)\r\n\r\nFor the same filters, below are stats for datatable AggregatingMergeTree:\r\n\r\n    count without sample: 99 M (scanned 99 M)\r\n    count with sample 0.01: 0.9M (scanned 99 M)\r\n\r\n\r\nDDL for the above view and Table:\r\n\r\n```\r\nCREATE MATERIALIZED VIEW datatable (\r\n  parkey UInt64,\r\n  mainkey UInt64,\r\n  rsrp AggregateFunction(minIf, Float32, UInt8),\r\n  rsrq AggregateFunction(minIf, Float32, UInt8),\r\n) ENGINE = AggregatingMergeTree PARTITION BY parkey\r\nORDER BY\r\n  (mainkey, intHash64(mainkey)) SAMPLE BY intHash64(mainkey) SETTINGS index_granularity = 8192\r\n\r\n```\r\n\r\n```\r\nCREATE VIEW data_view (\r\n  parkey UInt64,\r\n  mainkey UInt64,\r\n  rsrp Float32,\r\n  rsrq Float32\r\n) AS\r\nSELECT\r\n  parkey,\r\n  mainkey,\r\n  minIfMerge(rsrp) AS rsrp,\r\n  minIfMerge(rsrq) AS rsrq,\r\nFROM\r\n  data\r\nGROUP BY\r\n  parkey,\r\n  mainkey\r\n```\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4315/reactions","total_count":2,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4315/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4242","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4242/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4242/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4242/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/4242","id":406000575,"node_id":"MDU6SXNzdWU0MDYwMDA1NzU=","number":4242,"title":"Weird query optimization","user":{"login":"nvartolomei","id":543193,"node_id":"MDQ6VXNlcjU0MzE5Mw==","avatar_url":"https://avatars.githubusercontent.com/u/543193?v=4","gravatar_id":"","url":"https://api.github.com/users/nvartolomei","html_url":"https://github.com/nvartolomei","followers_url":"https://api.github.com/users/nvartolomei/followers","following_url":"https://api.github.com/users/nvartolomei/following{/other_user}","gists_url":"https://api.github.com/users/nvartolomei/gists{/gist_id}","starred_url":"https://api.github.com/users/nvartolomei/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nvartolomei/subscriptions","organizations_url":"https://api.github.com/users/nvartolomei/orgs","repos_url":"https://api.github.com/users/nvartolomei/repos","events_url":"https://api.github.com/users/nvartolomei/events{/privacy}","received_events_url":"https://api.github.com/users/nvartolomei/received_events","type":"User","site_admin":false},"labels":[{"id":756395244,"node_id":"MDU6TGFiZWw3NTYzOTUyNDQ=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/performance","name":"performance","color":"c2e0c6","default":false,"description":null},{"id":1365579236,"node_id":"MDU6TGFiZWwxMzY1NTc5MjM2","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/minor","name":"minor","color":"FFF8F8","default":false,"description":"Priority: minor"},{"id":1401777979,"node_id":"MDU6TGFiZWwxNDAxNzc3OTc5","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-optimizers","name":"comp-optimizers","color":"b5bcff","default":false,"description":"Query optimizations"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2019-02-02T17:00:31Z","updated_at":"2020-11-03T19:07:43Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Table example:\r\n\r\n```sql\r\nDROP TABLE IF EXISTS constCondOptimization;\r\nCREATE TABLE constCondOptimization\r\n(\r\n    d Date DEFAULT today(),\r\n    time DateTime DEFAULT now(),\r\n    n Int64\r\n)\r\nENGINE = MergeTree(d, (time, n), 1);\r\n\r\nINSERT INTO constCondOptimization (n) SELECT number FROM system.numbers LIMIT 1000000;\r\n```\r\n\r\nThe following query is not optimized to use the index.\r\n```sql\r\nSELECT count() FROM constCondOptimization WHERE if(0, 1, n = 1000);\r\n```\r\n\r\n> 1 rows in set. Elapsed: 0.025 sec. Processed 1.00 million rows, 8.00 MB (40.26 million rows/s., 322.07 MB/s.)\r\n\r\nHowever, this one is optimized:\r\n\r\n```sql\r\nSELECT count() FROM constCondOptimization WHERE if(0, 1, n = 1000) AND 1 = 1;\r\n```\r\n\r\n> 1 rows in set. Elapsed: 0.008 sec.\r\n\r\nThe following one is not, but could be, as 1=0 is constantly false.\r\n\r\n```sql\r\nSELECT count() FROM constCondOptimization WHERE if(1=0, 1, n = 1000) AND time between now() - 300 AND now();\r\n```\r\n\r\n> 1 rows in set. Elapsed: 0.357 sec. Processed 1.00 million rows, 8.00 MB (2.80 million rows/s., 22.44 MB/s.)\r\n\r\nIt gets a bit more weird as this query works as expected:\r\n\r\n```sql\r\nSELECT count() FROM constCondOptimization WHERE if(1, 1, n = 1000) AND time between now() - 300 AND now();\r\n```\r\n\r\nHowever not the following:\r\n\r\n```sql\r\nSELECT count() FROM constCondOptimization WHERE if(1, 1, n = 1000);\r\n```\r\n\r\n> Received exception from server (version 18.16.1):\r\nCode: 47. DB::Exception: Received from localhost:9000, ::1. DB::Exception: Unknown identifier: n.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4242/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4242/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4222","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4222/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4222/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4222/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/4222","id":405803883,"node_id":"MDU6SXNzdWU0MDU4MDM4ODM=","number":4222,"title":"Confusing (wrong) error message.","user":{"login":"den-crane","id":19737682,"node_id":"MDQ6VXNlcjE5NzM3Njgy","avatar_url":"https://avatars.githubusercontent.com/u/19737682?v=4","gravatar_id":"","url":"https://api.github.com/users/den-crane","html_url":"https://github.com/den-crane","followers_url":"https://api.github.com/users/den-crane/followers","following_url":"https://api.github.com/users/den-crane/following{/other_user}","gists_url":"https://api.github.com/users/den-crane/gists{/gist_id}","starred_url":"https://api.github.com/users/den-crane/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/den-crane/subscriptions","organizations_url":"https://api.github.com/users/den-crane/orgs","repos_url":"https://api.github.com/users/den-crane/repos","events_url":"https://api.github.com/users/den-crane/events{/privacy}","received_events_url":"https://api.github.com/users/den-crane/received_events","type":"User","site_admin":false},"labels":[{"id":845247686,"node_id":"MDU6TGFiZWw4NDUyNDc2ODY=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/usability","name":"usability","color":"ebf28c","default":false,"description":""},{"id":1357578153,"node_id":"MDU6TGFiZWwxMzU3NTc4MTUz","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-joins","name":"comp-joins","color":"b5bcff","default":false,"description":"JOINs"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2019-02-01T17:42:02Z","updated_at":"2020-10-16T18:10:42Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"body":"```\r\nSELECT v.x, r.a, sum(c)\r\nFROM (select 1 x, 2 c) AS v \r\nANY LEFT JOIN (SELECT 1 x, 2 a) AS r ON v.x = r.x\r\nGROUP BY v.x\r\n\r\nDB::Exception: Not found column a in block. There are only columns: x, sum(c).\r\n```\r\n\r\nExpected:\r\n`DB::Exception: Column r.a is not under aggregate function and not in GROUP BY..`","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4222/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4222/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4190","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4190/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4190/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4190/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/4190","id":404614291,"node_id":"MDU6SXNzdWU0MDQ2MTQyOTE=","number":4190,"title":"Feature request: Add support for MongoDB clusters as external dictionaries","user":{"login":"uncletimmy3","id":34276679,"node_id":"MDQ6VXNlcjM0Mjc2Njc5","avatar_url":"https://avatars.githubusercontent.com/u/34276679?v=4","gravatar_id":"","url":"https://api.github.com/users/uncletimmy3","html_url":"https://github.com/uncletimmy3","followers_url":"https://api.github.com/users/uncletimmy3/followers","following_url":"https://api.github.com/users/uncletimmy3/following{/other_user}","gists_url":"https://api.github.com/users/uncletimmy3/gists{/gist_id}","starred_url":"https://api.github.com/users/uncletimmy3/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/uncletimmy3/subscriptions","organizations_url":"https://api.github.com/users/uncletimmy3/orgs","repos_url":"https://api.github.com/users/uncletimmy3/repos","events_url":"https://api.github.com/users/uncletimmy3/events{/privacy}","received_events_url":"https://api.github.com/users/uncletimmy3/received_events","type":"User","site_admin":false},"labels":[{"id":386401507,"node_id":"MDU6TGFiZWwzODY0MDE1MDc=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/enhancement","name":"enhancement","color":"84b6eb","default":true,"description":null},{"id":386401508,"node_id":"MDU6TGFiZWwzODY0MDE1MDg=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/help%20wanted","name":"help wanted","color":"128A0C","default":true,"description":null},{"id":644208617,"node_id":"MDU6TGFiZWw2NDQyMDg2MTc=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/easy%20task","name":"easy task","color":"0e8a16","default":false,"description":"Good for first contributors"},{"id":1351463315,"node_id":"MDU6TGFiZWwxMzUxNDYzMzE1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-dictionary","name":"comp-dictionary","color":"b5bcff","default":false,"description":"Dictionaries"},{"id":1365689344,"node_id":"MDU6TGFiZWwxMzY1Njg5MzQ0","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-foreign-db","name":"comp-foreign-db","color":"b5bcff","default":false,"description":"Integrations with other databases"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":12,"created_at":"2019-01-30T05:56:40Z","updated_at":"2020-07-13T16:06:58Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Recently I stumbled upon a problem external dictionary (linked to MongoDB) was empty. There was nothing releted to the problem in clickhouse log, but in MongoDB log I found this:\r\n```\r\n2019-01-29T12:09:24.023+0300 I NETWORK  [initandlisten] connection accepted from 192.168.231.108:54764 #3208444 (217 connections now open)\r\n2019-01-29T12:09:24.068+0300 I QUERY    [conn3208444] assertion 13435 not master and slaveOk=false ns:NormativSrs.UserOutliers query:{}\r\n```\r\n**not master and slaveOk=false** causes CH not to read data, if server specified in the configuration is not a master anymore.\r\n\r\nIt seems that if you replace it:\r\nhttps://github.com/yandex/ClickHouse/blob/a19d3620a3b612fc7d442368bbfc2e91a2bb8975/dbms/src/Dictionaries/MongoDBDictionarySource.cpp#L189\r\nwith this:\r\n```\r\nConnection(\r\n    const std::string & uri,\r\n    SocketFactory & socketFactory\r\n);\r\n```\r\nit will be possible to set slaveOk=true.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4190/reactions","total_count":3,"+1":3,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4190/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4147","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4147/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4147/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4147/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/4147","id":403011089,"node_id":"MDU6SXNzdWU0MDMwMTEwODk=","number":4147,"title":"Расширение функциональности topK","user":{"login":"MakarovYaroslav","id":15161895,"node_id":"MDQ6VXNlcjE1MTYxODk1","avatar_url":"https://avatars.githubusercontent.com/u/15161895?v=4","gravatar_id":"","url":"https://api.github.com/users/MakarovYaroslav","html_url":"https://github.com/MakarovYaroslav","followers_url":"https://api.github.com/users/MakarovYaroslav/followers","following_url":"https://api.github.com/users/MakarovYaroslav/following{/other_user}","gists_url":"https://api.github.com/users/MakarovYaroslav/gists{/gist_id}","starred_url":"https://api.github.com/users/MakarovYaroslav/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/MakarovYaroslav/subscriptions","organizations_url":"https://api.github.com/users/MakarovYaroslav/orgs","repos_url":"https://api.github.com/users/MakarovYaroslav/repos","events_url":"https://api.github.com/users/MakarovYaroslav/events{/privacy}","received_events_url":"https://api.github.com/users/MakarovYaroslav/received_events","type":"User","site_admin":false},"labels":[{"id":386401507,"node_id":"MDU6TGFiZWwzODY0MDE1MDc=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/enhancement","name":"enhancement","color":"84b6eb","default":true,"description":null},{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2019-01-25T05:26:20Z","updated_at":"2019-02-03T12:50:52Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Хотелось бы, чтобы агрегатная функция topK умела возвращать не только топ по частоте встречаемости, но и, например, по сумме какого-либо числового поля.\r\nНапример, есть колонка URL и колонка bytes_sum.\r\nВызвать topK(10)(URL, bytes_sum) и получить 10 URL, по которым больше всего суммарное количество байт.\r\n\r\nКроме этого, возможно ли возвращать еще и это суммарное количество? Например, в формате, похожем на выдачу sumMap.\r\nВсе равно эти значения подсчитываются для формирования топа,\r\n\r\nВ этом случае, может быть, объединить две вышеуказанные функциональности в отдельную функцию?","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4147/reactions","total_count":3,"+1":3,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4147/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4026","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4026/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4026/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4026/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/4026","id":397855896,"node_id":"MDU6SXNzdWUzOTc4NTU4OTY=","number":4026,"title":"Materialized View misses some data","user":{"login":"wawanawna","id":1091862,"node_id":"MDQ6VXNlcjEwOTE4NjI=","avatar_url":"https://avatars.githubusercontent.com/u/1091862?v=4","gravatar_id":"","url":"https://api.github.com/users/wawanawna","html_url":"https://github.com/wawanawna","followers_url":"https://api.github.com/users/wawanawna/followers","following_url":"https://api.github.com/users/wawanawna/following{/other_user}","gists_url":"https://api.github.com/users/wawanawna/gists{/gist_id}","starred_url":"https://api.github.com/users/wawanawna/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wawanawna/subscriptions","organizations_url":"https://api.github.com/users/wawanawna/orgs","repos_url":"https://api.github.com/users/wawanawna/repos","events_url":"https://api.github.com/users/wawanawna/events{/privacy}","received_events_url":"https://api.github.com/users/wawanawna/received_events","type":"User","site_admin":false},"labels":[{"id":386401510,"node_id":"MDU6TGFiZWwzODY0MDE1MTA=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/question","name":"question","color":"bfdadc","default":true,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":12,"created_at":"2019-01-10T14:29:47Z","updated_at":"2020-07-01T18:19:32Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Hello. First of all thx for a great product. Very fast and flexible.\r\n\r\nRecently we started using MaterializedView and noticed one issue (or not an issue but we did something wrong)\r\n\r\nWe created MVs based on local Metrics tables (they use ReplicatedMergeTree() engine and we constantly writes to those local tables (each second)) like:\r\n\r\n```\r\nCREATE MATERIALIZED VIEW default.MetricStats ON CLUSTER metrics \r\nENGINE = ReplicatedAggregatingMergeTree('/clickhouse/tables/metrics/{shard}/MetricStats', '{replica}')\r\nPARTITION BY floor(time / 86400)\r\nORDER BY (time, appId) POPULATE AS\r\nSELECT \r\n    uniqExactState(host) AS `os.host`, \r\n    uniqExactState(container) AS `container.id`, \r\n    uniqExactState(containerHostname) AS `container.host.hostname`, \r\n    appId, \r\n    floor(timestamp / 60) * 60 AS time\r\nFROM default.Metrics \r\nWHERE timestamp > now()-300\r\nGROUP BY \r\n    time, \r\n    appId\r\n```\r\n\r\nThen we created distributed table based on MVs\r\n\r\n```\r\nCREATE TABLE IF NOT EXISTS  default.MetricStatsDistributed ON CLUSTER metrics AS default.MetricStats\r\nENGINE = Distributed(metrics, default, MetricStats, rand());\r\n```\r\n\r\nAfter all we select data from Distributed table (which based on MVs)\r\n\r\n```\r\nSELECT \r\n    uniqExactMerge(`os.host`) AS `os.host`, \r\n    uniqExactMerge(`container.id`) AS `container.id`, \r\n    uniqExactMerge(`container.host.hostname`) AS `container.host.hostname`, \r\n    appId, \r\n    time\r\nFROM MetricStatsDistributed \r\nWHERE appId = XXX\r\nGROUP BY \r\n    appId, \r\n    time\r\nORDER BY time ASC\r\n```\r\nAnd got following\r\n```\r\n┌─os.host─┬─container.id─┬─container.host.hostname─┬─appId─┬──────────time─┐\r\n│      35 │          486 │                       1 │ XXX   │ 1546932480000 │\r\n│      35 │          486 │                       1 │ XXX   │ 1546932540000 │\r\n│      35 │          486 │                       1 │ XXX   │ 1546932600000 │\r\n│      35 │          486 │                       1 │ XXX   │ 1546932660000 │\r\n│      35 │          486 │                       1 │ XXX   │ 1546932720000 │\r\n│      35 │          480 │                       1 │ XXX   │ 1546932780000 │ >>> at that time we created MVs\r\n│      29 │          287 │                       1 │ XXX   │ 1546932840000 │\r\n│      27 │          376 │                       1 │ XXX   │ 1546932900000 │\r\n│      27 │          330 │                       1 │ XXX   │ 1546932960000 │\r\n│      21 │          309 │                       1 │ XXX   │ 1546933020000 │\r\n└─────────┴──────────────┴─────────────────────────┴───────┴───────────────┘\r\n```\r\n\r\n35 are right values. 29, 27, 21 values are wrong and it means that we missed some unique values. \r\nAs you can see we see wrong values only after MVs were created, so during POPULATE we agg data right, But then during realtime insertion/aggregating we started to see issue.\r\n\r\nWe have a feeling that maybe not everything was added to MVs and aggregated with `uniqExactState`, or maybe aggregation into MVs triggers only once for (time, appId) pair (order key) and it something was added to \"main\" table later will be missed?\r\n\r\n\r\nThx for future answer&investigation.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4026/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/4026/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/3994","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/3994/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/3994/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/3994/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/3994","id":396446942,"node_id":"MDU6SXNzdWUzOTY0NDY5NDI=","number":3994,"title":"Consider adding column containing server address into system.query_log table","user":{"login":"PhantomPhreak","id":8307692,"node_id":"MDQ6VXNlcjgzMDc2OTI=","avatar_url":"https://avatars.githubusercontent.com/u/8307692?v=4","gravatar_id":"","url":"https://api.github.com/users/PhantomPhreak","html_url":"https://github.com/PhantomPhreak","followers_url":"https://api.github.com/users/PhantomPhreak/followers","following_url":"https://api.github.com/users/PhantomPhreak/following{/other_user}","gists_url":"https://api.github.com/users/PhantomPhreak/gists{/gist_id}","starred_url":"https://api.github.com/users/PhantomPhreak/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/PhantomPhreak/subscriptions","organizations_url":"https://api.github.com/users/PhantomPhreak/orgs","repos_url":"https://api.github.com/users/PhantomPhreak/repos","events_url":"https://api.github.com/users/PhantomPhreak/events{/privacy}","received_events_url":"https://api.github.com/users/PhantomPhreak/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2019-01-07T11:15:56Z","updated_at":"2020-11-06T17:08:41Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"We want to keep a query log from all servers in a cluster in one table.\r\nTo do this, we're using replicated tables and distributed table on the top, and following server config\r\n```\r\n    <query_log>\r\n        <database>_database_</database>\r\n        <table>_distributed_query_log_table_</table>\r\n    </query_log>\r\n```\r\nIt's pretty simple and makes it possible to analyze requests from the entire cluster, with a tools like [this](https://grafana.com/dashboards/2515), or [this](https://grafana.com/plugins/vertamedia-clickhouse-datasource)\r\n\r\nProblem: since current `system.query_log` doesn't contain a column with a server address, we can't figure out on which server the particular request was executed.\r\n\r\nAs a workaround, we can make a materialized view from `system.query_log` local tables, inserting data to distributed table, but it will be more useful to add one more column with a server address.\r\n\r\nThanks!","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/3994/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/3994/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/3990","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/3990/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/3990/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/3990/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/3990","id":396280997,"node_id":"MDU6SXNzdWUzOTYyODA5OTc=","number":3990,"title":"Contribute Helm to chart","user":{"login":"gajus","id":973543,"node_id":"MDQ6VXNlcjk3MzU0Mw==","avatar_url":"https://avatars.githubusercontent.com/u/973543?v=4","gravatar_id":"","url":"https://api.github.com/users/gajus","html_url":"https://github.com/gajus","followers_url":"https://api.github.com/users/gajus/followers","following_url":"https://api.github.com/users/gajus/following{/other_user}","gists_url":"https://api.github.com/users/gajus/gists{/gist_id}","starred_url":"https://api.github.com/users/gajus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gajus/subscriptions","organizations_url":"https://api.github.com/users/gajus/orgs","repos_url":"https://api.github.com/users/gajus/repos","events_url":"https://api.github.com/users/gajus/events{/privacy}","received_events_url":"https://api.github.com/users/gajus/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2019-01-06T18:15:26Z","updated_at":"2020-05-01T17:50:34Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"What would really help with ClickHouse adoption is if there was a Helm chart for deploying an HA instance on a Kubernetes cluster.\r\n\r\nhttps://github.com/helm/charts/","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/3990/reactions","total_count":9,"+1":3,"-1":0,"laugh":1,"hooray":1,"confused":0,"heart":2,"rocket":1,"eyes":1},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/3990/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/3985","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/3985/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/3985/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/3985/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/3985","id":395932133,"node_id":"MDU6SXNzdWUzOTU5MzIxMzM=","number":3985,"title":"Enums in MySQL engine ","user":{"login":"filimonov","id":1549571,"node_id":"MDQ6VXNlcjE1NDk1NzE=","avatar_url":"https://avatars.githubusercontent.com/u/1549571?v=4","gravatar_id":"","url":"https://api.github.com/users/filimonov","html_url":"https://github.com/filimonov","followers_url":"https://api.github.com/users/filimonov/followers","following_url":"https://api.github.com/users/filimonov/following{/other_user}","gists_url":"https://api.github.com/users/filimonov/gists{/gist_id}","starred_url":"https://api.github.com/users/filimonov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/filimonov/subscriptions","organizations_url":"https://api.github.com/users/filimonov/orgs","repos_url":"https://api.github.com/users/filimonov/repos","events_url":"https://api.github.com/users/filimonov/events{/privacy}","received_events_url":"https://api.github.com/users/filimonov/received_events","type":"User","site_admin":false},"labels":[{"id":644208617,"node_id":"MDU6TGFiZWw2NDQyMDg2MTc=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/easy%20task","name":"easy task","color":"0e8a16","default":false,"description":"Good for first contributors"},{"id":1365689344,"node_id":"MDU6TGFiZWwxMzY1Njg5MzQ0","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-foreign-db","name":"comp-foreign-db","color":"b5bcff","default":false,"description":"Integrations with other databases"},{"id":2121263626,"node_id":"MDU6TGFiZWwyMTIxMjYzNjI2","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-mysql","name":"comp-mysql","color":"b5bcff","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2019-01-04T13:50:35Z","updated_at":"2021-08-14T20:45:25Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"body":"Currently MySQL engine supports writing Enums, but doesn't support reading Enums.\r\n\r\n```\r\nmysql> create table mysql_enum ( `source` enum('IP','URL') NOT NULL ) ;\r\nQuery OK, 0 rows affected (0.07 sec)\r\n\r\n:) create table mysql_enum_mapping ( source Enum8('IP' = 1, 'URL' = 2) ) Engine = MySQL('127.0.0.1','test','mysql_enum','root','');\r\n\r\n:) insert into mysql_enum_mapping values ( cast('IP', 'Enum8(\\'IP\\' = 1, \\'URL\\' = 2)') );\r\nOk.\r\n1 rows in set. Elapsed: 0.009 sec. \r\n\r\n:) SELECT * FROM mysql_enum_mapping;\r\n\r\nError> executeQuery: Code: 50, e.displayText() = DB::Exception: Unsupported type Enum8('IP' = 1, 'URL' = 2), e.what() = DB::Exception (from [::1]:40808) (in query: select * from mysql_enum_mapping), Stack trace:\r\n\r\n0. clickhouse-server(StackTrace::StackTrace()+0x16) [0x5e3f7e6]\r\n1. clickhouse-server(DB::ExternalResultDescription::init(DB::Block const&)+0x368) [0x5de41f8]\r\n2. clickhouse-server(DB::MySQLBlockInputStream::MySQLBlockInputStream(mysqlxx::Pool::Entry const&, std::string const&, DB::Block const&, unsigned long)+0x139) [0x5672439]\r\n3. clickhouse-server(DB::StorageMySQL::read(std::vector<std::string, std::allocator<std::string> > const&, DB::SelectQueryInfo const&, DB::Context const&, DB::QueryProcessingStage::Enum, unsigned long, unsigned int)+0x22a) [0x4fa302a]\r\n4. clickhouse-server(DB::InterpreterSelectQuery::executeFetchColumns(DB::QueryProcessingStage::Enum, DB::InterpreterSelectQuery::Pipeline&, std::shared_ptr<DB::PrewhereInfo> const&, std::vector<std::string, std::allocator<std::string> > const&)+0x14de) [0x4dce87e]\r\n5. clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::shared_ptr<DB::IBlockInputStream> const&, bool)+0x3f5) [0x4dd0a15]\r\n6. clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x3a) [0x4dd343a]\r\n7. clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x5c) [0x4ddd6bc]\r\n8. clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x26) [0x4ddd956]\r\n9. clickhouse-server() [0x4eadddc]\r\n10. clickhouse-server(DB::executeQuery(std::string const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x70) [0x4eafec0]\r\n11. clickhouse-server(DB::TCPHandler::runImpl()+0x547) [0x2bdc277]\r\n12. clickhouse-server(DB::TCPHandler::run()+0x1c) [0x2bdd4dc]\r\n13. clickhouse-server(Poco::Net::TCPServerConnection::start()+0xf) [0x5fc3cef]\r\n14. clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x166) [0x5fc40b6]\r\n15. clickhouse-server(Poco::PooledThread::run()+0x77) [0x62755a7]\r\n16. clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x38) [0x6271768]\r\n17. clickhouse-server() [0x6a7fa8f]\r\n18. /lib64/libpthread.so.0(+0x7e25) [0x7fa97c380e25]\r\n19. /lib64/libc.so.6(clone+0x6d) [0x7fa97bba434d]\r\n```","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/3985/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/3985/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/3984","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/3984/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/3984/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/3984/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/3984","id":395840802,"node_id":"MDU6SXNzdWUzOTU4NDA4MDI=","number":3984,"title":"alter table xxx delete where f1='if101' fail","user":{"login":"submergerock","id":2242678,"node_id":"MDQ6VXNlcjIyNDI2Nzg=","avatar_url":"https://avatars.githubusercontent.com/u/2242678?v=4","gravatar_id":"","url":"https://api.github.com/users/submergerock","html_url":"https://github.com/submergerock","followers_url":"https://api.github.com/users/submergerock/followers","following_url":"https://api.github.com/users/submergerock/following{/other_user}","gists_url":"https://api.github.com/users/submergerock/gists{/gist_id}","starred_url":"https://api.github.com/users/submergerock/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/submergerock/subscriptions","organizations_url":"https://api.github.com/users/submergerock/orgs","repos_url":"https://api.github.com/users/submergerock/repos","events_url":"https://api.github.com/users/submergerock/events{/privacy}","received_events_url":"https://api.github.com/users/submergerock/received_events","type":"User","site_admin":false},"labels":[{"id":1351290474,"node_id":"MDU6TGFiZWwxMzUxMjkwNDc0","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-mutations","name":"comp-mutations","color":"b5bcff","default":false,"description":"ALTER UPDATE/DELETE"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2019-01-04T08:04:54Z","updated_at":"2019-09-23T11:21:39Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"I use  alter table xxx delete where f1='if101'  in dbeaver. Use select * from table, find that the data still exists in the table.This phenomenon was discovered after using the same condition delete multiple times.\r\n![image](https://user-images.githubusercontent.com/2242678/50678578-544d2400-103a-11e9-88c3-4317aca893f9.png)\r\n\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/3984/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/3984/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/3954","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/3954/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/3954/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/3954/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/3954","id":394663254,"node_id":"MDU6SXNzdWUzOTQ2NjMyNTQ=","number":3954,"title":"Proposal: arrayLeftJoin ","user":{"login":"den-crane","id":19737682,"node_id":"MDQ6VXNlcjE5NzM3Njgy","avatar_url":"https://avatars.githubusercontent.com/u/19737682?v=4","gravatar_id":"","url":"https://api.github.com/users/den-crane","html_url":"https://github.com/den-crane","followers_url":"https://api.github.com/users/den-crane/followers","following_url":"https://api.github.com/users/den-crane/following{/other_user}","gists_url":"https://api.github.com/users/den-crane/gists{/gist_id}","starred_url":"https://api.github.com/users/den-crane/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/den-crane/subscriptions","organizations_url":"https://api.github.com/users/den-crane/orgs","repos_url":"https://api.github.com/users/den-crane/repos","events_url":"https://api.github.com/users/den-crane/events{/privacy}","received_events_url":"https://api.github.com/users/den-crane/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2018-12-28T15:41:47Z","updated_at":"2018-12-29T00:33:42Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"body":"There is a `left array join`\r\n\r\n```\r\nselect a,x from (select 1 a, cast([] as Array(String)) x) left array join x\r\n┌─a─┬─x─┐\r\n│ 1 │   │\r\n└───┴───┘\r\n```\r\n\r\nIt would be nice to have the same function **arrayLeftJoin**\r\n\r\n`select a, arrayLeftJoin(x) from (select 1 a, cast([] as Array(String)) x) `\r\n\r\nbecause now I have to use `arrayJoin( empty(x) ? [''] : x ) x` to solve this.\r\n\r\n`select a, arrayJoin( empty(x) ? [''] : x ) x from (select 1 a, cast([] as Array(String)) x) `","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/3954/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/3954/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/3931","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/3931/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/3931/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/3931/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/3931","id":394185432,"node_id":"MDU6SXNzdWUzOTQxODU0MzI=","number":3931,"title":"Proper add/substract to dates","user":{"login":"simPod","id":327717,"node_id":"MDQ6VXNlcjMyNzcxNw==","avatar_url":"https://avatars.githubusercontent.com/u/327717?v=4","gravatar_id":"","url":"https://api.github.com/users/simPod","html_url":"https://github.com/simPod","followers_url":"https://api.github.com/users/simPod/followers","following_url":"https://api.github.com/users/simPod/following{/other_user}","gists_url":"https://api.github.com/users/simPod/gists{/gist_id}","starred_url":"https://api.github.com/users/simPod/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/simPod/subscriptions","organizations_url":"https://api.github.com/users/simPod/orgs","repos_url":"https://api.github.com/users/simPod/repos","events_url":"https://api.github.com/users/simPod/events{/privacy}","received_events_url":"https://api.github.com/users/simPod/received_events","type":"User","site_admin":false},"labels":[{"id":785082162,"node_id":"MDU6TGFiZWw3ODUwODIxNjI=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-documentation","name":"comp-documentation","color":"b5bcff","default":false,"description":"Used to run automatic builds of the documentation"},{"id":1507867504,"node_id":"MDU6TGFiZWwxNTA3ODY3NTA0","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/st-hold","name":"st-hold","color":"e5b890","default":false,"description":"We've paused the work on issue for some reason"}],"state":"open","locked":false,"assignee":{"login":"alexey-milovidov","id":18581488,"node_id":"MDQ6VXNlcjE4NTgxNDg4","avatar_url":"https://avatars.githubusercontent.com/u/18581488?v=4","gravatar_id":"","url":"https://api.github.com/users/alexey-milovidov","html_url":"https://github.com/alexey-milovidov","followers_url":"https://api.github.com/users/alexey-milovidov/followers","following_url":"https://api.github.com/users/alexey-milovidov/following{/other_user}","gists_url":"https://api.github.com/users/alexey-milovidov/gists{/gist_id}","starred_url":"https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexey-milovidov/subscriptions","organizations_url":"https://api.github.com/users/alexey-milovidov/orgs","repos_url":"https://api.github.com/users/alexey-milovidov/repos","events_url":"https://api.github.com/users/alexey-milovidov/events{/privacy}","received_events_url":"https://api.github.com/users/alexey-milovidov/received_events","type":"User","site_admin":false},"assignees":[{"login":"alexey-milovidov","id":18581488,"node_id":"MDQ6VXNlcjE4NTgxNDg4","avatar_url":"https://avatars.githubusercontent.com/u/18581488?v=4","gravatar_id":"","url":"https://api.github.com/users/alexey-milovidov","html_url":"https://github.com/alexey-milovidov","followers_url":"https://api.github.com/users/alexey-milovidov/followers","following_url":"https://api.github.com/users/alexey-milovidov/following{/other_user}","gists_url":"https://api.github.com/users/alexey-milovidov/gists{/gist_id}","starred_url":"https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexey-milovidov/subscriptions","organizations_url":"https://api.github.com/users/alexey-milovidov/orgs","repos_url":"https://api.github.com/users/alexey-milovidov/repos","events_url":"https://api.github.com/users/alexey-milovidov/events{/privacy}","received_events_url":"https://api.github.com/users/alexey-milovidov/received_events","type":"User","site_admin":false}],"milestone":null,"comments":13,"created_at":"2018-12-26T15:08:17Z","updated_at":"2021-05-30T06:31:37Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Today I tried something similar:\r\n\r\n```sql\r\nSELECT now() + 60 * 60 * 24\r\n```\r\n\r\nTo my suprise, it worked and even the result is of type DateTime `select toTypeName(now() + 60 * 60 * 24)` -> `DateTime` 👏 \r\n\r\nHowever, I wondered that it would be better to comply with more common ways how to handle working with dates additions/substractions like `select now() + INTERVAL '1 day'`\r\n\r\nWhat do you think?","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/3931/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/3931/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/3889","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/3889/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/3889/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/3889/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/3889","id":393232423,"node_id":"MDU6SXNzdWUzOTMyMzI0MjM=","number":3889,"title":"Proposal for function equalsOrNulls   <=>","user":{"login":"den-crane","id":19737682,"node_id":"MDQ6VXNlcjE5NzM3Njgy","avatar_url":"https://avatars.githubusercontent.com/u/19737682?v=4","gravatar_id":"","url":"https://api.github.com/users/den-crane","html_url":"https://github.com/den-crane","followers_url":"https://api.github.com/users/den-crane/followers","following_url":"https://api.github.com/users/den-crane/following{/other_user}","gists_url":"https://api.github.com/users/den-crane/gists{/gist_id}","starred_url":"https://api.github.com/users/den-crane/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/den-crane/subscriptions","organizations_url":"https://api.github.com/users/den-crane/orgs","repos_url":"https://api.github.com/users/den-crane/repos","events_url":"https://api.github.com/users/den-crane/events{/privacy}","received_events_url":"https://api.github.com/users/den-crane/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null}],"state":"open","locked":false,"assignee":{"login":"alexey-milovidov","id":18581488,"node_id":"MDQ6VXNlcjE4NTgxNDg4","avatar_url":"https://avatars.githubusercontent.com/u/18581488?v=4","gravatar_id":"","url":"https://api.github.com/users/alexey-milovidov","html_url":"https://github.com/alexey-milovidov","followers_url":"https://api.github.com/users/alexey-milovidov/followers","following_url":"https://api.github.com/users/alexey-milovidov/following{/other_user}","gists_url":"https://api.github.com/users/alexey-milovidov/gists{/gist_id}","starred_url":"https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexey-milovidov/subscriptions","organizations_url":"https://api.github.com/users/alexey-milovidov/orgs","repos_url":"https://api.github.com/users/alexey-milovidov/repos","events_url":"https://api.github.com/users/alexey-milovidov/events{/privacy}","received_events_url":"https://api.github.com/users/alexey-milovidov/received_events","type":"User","site_admin":false},"assignees":[{"login":"alexey-milovidov","id":18581488,"node_id":"MDQ6VXNlcjE4NTgxNDg4","avatar_url":"https://avatars.githubusercontent.com/u/18581488?v=4","gravatar_id":"","url":"https://api.github.com/users/alexey-milovidov","html_url":"https://github.com/alexey-milovidov","followers_url":"https://api.github.com/users/alexey-milovidov/followers","following_url":"https://api.github.com/users/alexey-milovidov/following{/other_user}","gists_url":"https://api.github.com/users/alexey-milovidov/gists{/gist_id}","starred_url":"https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexey-milovidov/subscriptions","organizations_url":"https://api.github.com/users/alexey-milovidov/orgs","repos_url":"https://api.github.com/users/alexey-milovidov/repos","events_url":"https://api.github.com/users/alexey-milovidov/events{/privacy}","received_events_url":"https://api.github.com/users/alexey-milovidov/received_events","type":"User","site_admin":false}],"milestone":null,"comments":8,"created_at":"2018-12-20T22:19:09Z","updated_at":"2021-04-10T12:56:50Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"body":"It would be good to have a function or comparator sign \r\nto replace        `(a=b) or ( isNull(a) = isNull(b) )`\r\nwith                 `equalsOrNulls(a,b)` \r\nor with             `a<=>b`\r\n\r\nAnd it's not for joins, I need it for `select a<=>b as x` section, but it also can be used for joins `on (a <=> b)`","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/3889/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/3889/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/3830","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/3830/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/3830/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/3830/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/3830","id":391081220,"node_id":"MDU6SXNzdWUzOTEwODEyMjA=","number":3830,"title":"Suport JOIN ON (a=b OR (a IS NULL AND b IS NULL)) - Tableau compatibility","user":{"login":"TH-HA","id":38243024,"node_id":"MDQ6VXNlcjM4MjQzMDI0","avatar_url":"https://avatars.githubusercontent.com/u/38243024?v=4","gravatar_id":"","url":"https://api.github.com/users/TH-HA","html_url":"https://github.com/TH-HA","followers_url":"https://api.github.com/users/TH-HA/followers","following_url":"https://api.github.com/users/TH-HA/following{/other_user}","gists_url":"https://api.github.com/users/TH-HA/gists{/gist_id}","starred_url":"https://api.github.com/users/TH-HA/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/TH-HA/subscriptions","organizations_url":"https://api.github.com/users/TH-HA/orgs","repos_url":"https://api.github.com/users/TH-HA/repos","events_url":"https://api.github.com/users/TH-HA/events{/privacy}","received_events_url":"https://api.github.com/users/TH-HA/received_events","type":"User","site_admin":false},"labels":[{"id":628291301,"node_id":"MDU6TGFiZWw2MjgyOTEzMDE=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/sql-compatibility","name":"sql-compatibility","color":"006b75","default":false,"description":""},{"id":1357578153,"node_id":"MDU6TGFiZWwxMzU3NTc4MTUz","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-joins","name":"comp-joins","color":"b5bcff","default":false,"description":"JOINs"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2018-12-14T11:53:18Z","updated_at":"2020-10-16T18:10:42Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Hello \r\nI want to share a few test result  i’m making with Tableau and clickhouse. \r\nFirst , I know that clickhouse has some limitation on joins and I’m using only some big denormalized table to avoid them. ( To be honest CH is not that bad to do join compare to other DB I know but this is another story).\r\nThere is a few glitches related to the syntax of function. Even if it’s important to solve them ( either by mapping in ODBC either by syntax evolution in CH), you can have a workaround by configuring a tdc ( tableau data connection ) file which will override the capabilities discovered from the ODBC Drivers ( telling by example that the substring/left/rigth functions are not supported in SQL_SQL92_STRING_FUNCTIONS and SQL_STRING_FUNCTIONS ) and how tableau is generating queries (  such as CAP_QUERY_JOIN_PUSH_DOWN_CONDITION_EXPRESSIONS  set to 'yes' to rewrite joins to simplify the ON clause conditions to simple identifier comparisons which seems to fit with CH and also CAP_QUERY_JOIN_REQUIRES_SUBQUERY Set to ‘yes’ to force join expressions involving more than two tables to be composed with subqueries – seems to be also a perfect fit for CH ).\r\nAnyway , as I’m using big denormalized table I normally don’t need such feature. But this is not true , Tableau may generate join to handle dimensional analysis ( call LOD – Level of Detail in tableau). And even if I tune the data source tableau, still generate join with multiple conditions in the on clause. \r\nWhy tableau is generating multiple conditions , simply because null management is not consistent in the db space. Tableau will generate a simple condition ( equality ) on a single field but need to add the management of the null. This give at the end : on (A=B or (A=null and B=null)).  This is sad because clickhouse handle null well enough to have the single condition A=B working properly.\r\n\r\n1\tIs there any short time plan to be able to support such condition on clause ?\r\n2    Is it possible to extend the on clause as follow : on clause support 2 fieds and equality only. Null check can be added if null has to be managed in a different way than the one handle by CH . I.E support A=B or ( A=null and b=null) , A=B and (A not null ) , A=B and ( B not null ) , A=B and ( A not null and b not null ) . For the first one null check are ignored as CH already handle it , for the next 3 ones it change the behavior telling null values are not equal and we should not join. \r\n3\tIs there a way to tell clickhouse to ignore the other condition in the on clause ?\r\n4\tDon’t you think it can be relevant to build a git repository or to extend the odbc one to include the tableau customization file ( enrich or even provided by the community of course  😊 ) and may be some other BI customization files ? \r\n\r\n\r\nThanks in advance \r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/3830/reactions","total_count":2,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/3830/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/3815","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/3815/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/3815/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/3815/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/3815","id":389855957,"node_id":"MDU6SXNzdWUzODk4NTU5NTc=","number":3815,"title":"Does CH Console support defining variables?","user":{"login":"q0987","id":16629186,"node_id":"MDQ6VXNlcjE2NjI5MTg2","avatar_url":"https://avatars.githubusercontent.com/u/16629186?v=4","gravatar_id":"","url":"https://api.github.com/users/q0987","html_url":"https://github.com/q0987","followers_url":"https://api.github.com/users/q0987/followers","following_url":"https://api.github.com/users/q0987/following{/other_user}","gists_url":"https://api.github.com/users/q0987/gists{/gist_id}","starred_url":"https://api.github.com/users/q0987/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/q0987/subscriptions","organizations_url":"https://api.github.com/users/q0987/orgs","repos_url":"https://api.github.com/users/q0987/repos","events_url":"https://api.github.com/users/q0987/events{/privacy}","received_events_url":"https://api.github.com/users/q0987/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":13,"created_at":"2018-12-11T16:48:13Z","updated_at":"2020-10-26T17:06:36Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"`:) select name from default.MyTable where timestamp=(select max(timestamp) from default.MyTable where date='2018-12-11') limit 1`\r\n\r\nHere, the table name needs to be repeated twice. Is there a way that I can define the tablename as a variable?\r\nSimilar as follows[fake code]:\r\n\r\n```\r\n:) tablename=MyTable\r\n:) select name from default.$tablename \r\nwhere timestamp=(select max(timestamp) from \r\ndefault.$tablename where date='2018-12-11') limit 1\r\n```\r\n\r\nThank you","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/3815/reactions","total_count":5,"+1":5,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/3815/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/3748","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/3748/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/3748/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/3748/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/3748","id":387258417,"node_id":"MDU6SXNzdWUzODcyNTg0MTc=","number":3748,"title":"/clickhouse/task_queue/ddl cleanup","user":{"login":"nikk0","id":8555147,"node_id":"MDQ6VXNlcjg1NTUxNDc=","avatar_url":"https://avatars.githubusercontent.com/u/8555147?v=4","gravatar_id":"","url":"https://api.github.com/users/nikk0","html_url":"https://github.com/nikk0","followers_url":"https://api.github.com/users/nikk0/followers","following_url":"https://api.github.com/users/nikk0/following{/other_user}","gists_url":"https://api.github.com/users/nikk0/gists{/gist_id}","starred_url":"https://api.github.com/users/nikk0/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nikk0/subscriptions","organizations_url":"https://api.github.com/users/nikk0/orgs","repos_url":"https://api.github.com/users/nikk0/repos","events_url":"https://api.github.com/users/nikk0/events{/privacy}","received_events_url":"https://api.github.com/users/nikk0/received_events","type":"User","site_admin":false},"labels":[{"id":785082162,"node_id":"MDU6TGFiZWw3ODUwODIxNjI=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-documentation","name":"comp-documentation","color":"b5bcff","default":false,"description":"Used to run automatic builds of the documentation"},{"id":1401254412,"node_id":"MDU6TGFiZWwxNDAxMjU0NDEy","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-dddl","name":"comp-dddl","color":"b5bcff","default":false,"description":"Distributed DDL feature"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2018-12-04T12:15:36Z","updated_at":"2021-02-05T09:31:06Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Hello.\r\nthe Zk path /clickhouse/task_queue/ddl apparently grows indefinitely.\r\nDuring my search on how to clean this ZK path, I came across the following parameters that can be set in the <distributed_ddl> section of config.xml:\r\n  \r\n\r\n- <max_tasks_in_queue>\r\n-   <task_max_lifetime>\r\n-   <cleanup_delay_period>\r\n\r\nUnfortunately, the documentation does not give details about them.\r\nCan you briefly describe them ? ( purpose, unit, default value, ch restart needed ?,...\r\nThanks in advance.\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/3748/reactions","total_count":4,"+1":4,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/3748/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/3708","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/3708/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/3708/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/3708/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/3708","id":386186892,"node_id":"MDU6SXNzdWUzODYxODY4OTI=","number":3708,"title":"proposal: groupArraySorted ? ","user":{"login":"filimonov","id":1549571,"node_id":"MDQ6VXNlcjE1NDk1NzE=","avatar_url":"https://avatars.githubusercontent.com/u/1549571?v=4","gravatar_id":"","url":"https://api.github.com/users/filimonov","html_url":"https://github.com/filimonov","followers_url":"https://api.github.com/users/filimonov/followers","following_url":"https://api.github.com/users/filimonov/following{/other_user}","gists_url":"https://api.github.com/users/filimonov/gists{/gist_id}","starred_url":"https://api.github.com/users/filimonov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/filimonov/subscriptions","organizations_url":"https://api.github.com/users/filimonov/orgs","repos_url":"https://api.github.com/users/filimonov/repos","events_url":"https://api.github.com/users/filimonov/events{/privacy}","received_events_url":"https://api.github.com/users/filimonov/received_events","type":"User","site_admin":false},"labels":[{"id":386401507,"node_id":"MDU6TGFiZWwzODY0MDE1MDc=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/enhancement","name":"enhancement","color":"84b6eb","default":true,"description":null},{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2018-11-30T13:26:05Z","updated_at":"2021-06-22T19:53:57Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"body":"there is already groupArray, there is also arraySort, merging of two sorted arrays is O(n+m) operation.\r\nIs it possible to implement groupArraySorted? And also with limit? With limit it should be efficient even on very big datasets.\r\n\r\nIt could be used to solve 'take fist/last N elements in each group' / lastpoint -alike tasks in selects and incrementally in materialized view (with AggregatingMergeTree). ","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/3708/reactions","total_count":8,"+1":8,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/3708/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/3685","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/3685/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/3685/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/3685/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/3685","id":385229644,"node_id":"MDU6SXNzdWUzODUyMjk2NDQ=","number":3685,"title":"Crons on ClickHouse","user":{"login":"stovmasyan89","id":29482401,"node_id":"MDQ6VXNlcjI5NDgyNDAx","avatar_url":"https://avatars.githubusercontent.com/u/29482401?v=4","gravatar_id":"","url":"https://api.github.com/users/stovmasyan89","html_url":"https://github.com/stovmasyan89","followers_url":"https://api.github.com/users/stovmasyan89/followers","following_url":"https://api.github.com/users/stovmasyan89/following{/other_user}","gists_url":"https://api.github.com/users/stovmasyan89/gists{/gist_id}","starred_url":"https://api.github.com/users/stovmasyan89/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stovmasyan89/subscriptions","organizations_url":"https://api.github.com/users/stovmasyan89/orgs","repos_url":"https://api.github.com/users/stovmasyan89/repos","events_url":"https://api.github.com/users/stovmasyan89/events{/privacy}","received_events_url":"https://api.github.com/users/stovmasyan89/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2018-11-28T11:44:49Z","updated_at":"2020-08-21T02:07:19Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Or something like that..\r\nMaterialized View is triggered by inserting in parent table but sometimes I want to have tables that fill every night AS some select from another table","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/3685/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/3685/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/3682","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/3682/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/3682/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/3682/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/3682","id":385052855,"node_id":"MDU6SXNzdWUzODUwNTI4NTU=","number":3682,"title":"Client --query run mode write number of rows inserted to stdout on exit","user":{"login":"reflection","id":652093,"node_id":"MDQ6VXNlcjY1MjA5Mw==","avatar_url":"https://avatars.githubusercontent.com/u/652093?v=4","gravatar_id":"","url":"https://api.github.com/users/reflection","html_url":"https://github.com/reflection","followers_url":"https://api.github.com/users/reflection/followers","following_url":"https://api.github.com/users/reflection/following{/other_user}","gists_url":"https://api.github.com/users/reflection/gists{/gist_id}","starred_url":"https://api.github.com/users/reflection/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/reflection/subscriptions","organizations_url":"https://api.github.com/users/reflection/orgs","repos_url":"https://api.github.com/users/reflection/repos","events_url":"https://api.github.com/users/reflection/events{/privacy}","received_events_url":"https://api.github.com/users/reflection/received_events","type":"User","site_admin":false},"labels":[{"id":386401507,"node_id":"MDU6TGFiZWwzODY0MDE1MDc=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/enhancement","name":"enhancement","color":"84b6eb","default":true,"description":null},{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":644208617,"node_id":"MDU6TGFiZWw2NDQyMDg2MTc=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/easy%20task","name":"easy task","color":"0e8a16","default":false,"description":"Good for first contributors"},{"id":993003747,"node_id":"MDU6TGFiZWw5OTMwMDM3NDc=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-cli","name":"comp-cli","color":"b5bcff","default":false,"description":"Console & command line"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2018-11-28T00:53:21Z","updated_at":"2019-11-11T00:06:38Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"We insert by running `clickhouse client --query INSERT INTO <table> FORMAT CSV` and writing the next batch of rows to stdin.  Unfortunately, when the client exits, we do not know how many rows were actually inserted.\r\n\r\nJust a number printed to stdout on exit would be fine.  Compare ClickHouse to Postgres:\r\n```\r\n$ clickhouse-client --query \"INSERT INTO test VALUES (1)\"\r\n$\r\n```\r\n```\r\n$ psql -U postgres -d config -c \"INSERT INTO test VALUES (1)\"\r\nINSERT 0 1\r\n$\r\n```","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/3682/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/3682/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/3610","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/3610/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/3610/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/3610/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/3610","id":382249611,"node_id":"MDU6SXNzdWUzODIyNDk2MTE=","number":3610,"title":"clickhouse-server in daemon mode is too silent","user":{"login":"filimonov","id":1549571,"node_id":"MDQ6VXNlcjE1NDk1NzE=","avatar_url":"https://avatars.githubusercontent.com/u/1549571?v=4","gravatar_id":"","url":"https://api.github.com/users/filimonov","html_url":"https://github.com/filimonov","followers_url":"https://api.github.com/users/filimonov/followers","following_url":"https://api.github.com/users/filimonov/following{/other_user}","gists_url":"https://api.github.com/users/filimonov/gists{/gist_id}","starred_url":"https://api.github.com/users/filimonov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/filimonov/subscriptions","organizations_url":"https://api.github.com/users/filimonov/orgs","repos_url":"https://api.github.com/users/filimonov/repos","events_url":"https://api.github.com/users/filimonov/events{/privacy}","received_events_url":"https://api.github.com/users/filimonov/received_events","type":"User","site_admin":false},"labels":[{"id":845247686,"node_id":"MDU6TGFiZWw4NDUyNDc2ODY=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/usability","name":"usability","color":"ebf28c","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2018-11-19T14:51:52Z","updated_at":"2020-10-29T20:57:22Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"body":"When clickhouse-server is started with `--daemon` flag and target logs are not writable it doesn't give any feedback.\r\n\r\nSo for example if you try to run custom clickhouse instance with user rights and config contain any error - where is no way to get what was wrong (because by default it tries to write to /var/log/clickhouse-server/stderr which is not writable for user) \r\n\r\n```\r\n[vagrant@localhost OWA-DW]$ clickhouse-server  --config-file=/dev/null\r\nPoco::Exception. Code: 1000, e.code() = 0, e.displayText() = SAXParseException: No element found in '/dev/null', line 1 column 0, e.what() = SAXParseException\r\n\r\n[vagrant@localhost OWA-DW]$ clickhouse-server --daemon  --config-file=/dev/null\r\n```\r\n\r\n(Related to #1057)\r\n\r\nI think that daemonition and redirection of stdout / stderr should happen only after new stdout / stderr are opened for writing.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/3610/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/3610/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/3489","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/3489/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/3489/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/3489/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/3489","id":375090461,"node_id":"MDU6SXNzdWUzNzUwOTA0NjE=","number":3489,"title":"Server should send settings to the client (Setting output_format_json_quote_64bit_integers to 0 in users.xml is not respected).","user":{"login":"pdrtrifork","id":10925006,"node_id":"MDQ6VXNlcjEwOTI1MDA2","avatar_url":"https://avatars.githubusercontent.com/u/10925006?v=4","gravatar_id":"","url":"https://api.github.com/users/pdrtrifork","html_url":"https://github.com/pdrtrifork","followers_url":"https://api.github.com/users/pdrtrifork/followers","following_url":"https://api.github.com/users/pdrtrifork/following{/other_user}","gists_url":"https://api.github.com/users/pdrtrifork/gists{/gist_id}","starred_url":"https://api.github.com/users/pdrtrifork/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pdrtrifork/subscriptions","organizations_url":"https://api.github.com/users/pdrtrifork/orgs","repos_url":"https://api.github.com/users/pdrtrifork/repos","events_url":"https://api.github.com/users/pdrtrifork/events{/privacy}","received_events_url":"https://api.github.com/users/pdrtrifork/received_events","type":"User","site_admin":false},"labels":[{"id":845247686,"node_id":"MDU6TGFiZWw4NDUyNDc2ODY=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/usability","name":"usability","color":"ebf28c","default":false,"description":""},{"id":1507867504,"node_id":"MDU6TGFiZWwxNTA3ODY3NTA0","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/st-hold","name":"st-hold","color":"e5b890","default":false,"description":"We've paused the work on issue for some reason"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2018-10-29T16:01:19Z","updated_at":"2020-12-02T09:36:22Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"I have this in my users.xml:\r\n\r\n        <profiles>\r\n                <default>\r\n                    ...\r\n                    <output_format_json_quote_64bit_integers>0</output_format_json_quote_64bit_integers>\r\n                </default>\r\n        ...\r\n        </profiles>\r\n\r\nBut I still get quoted 64-bit integers:\r\n\r\n    :) SELECT toInt64(0) FORMAT JSON\r\n\r\n    {\r\n\t    \"meta\":\r\n\t    [\r\n\t\t    {\r\n\t\t    \t\"name\": \"toInt64(0)\",\r\n\t\t    \t\"type\": \"Int64\"\r\n\t\t    }\r\n\t    ],\r\n\r\n    \t\"data\":\r\n    \t[\r\n    \t\t{\r\n    \t\t    \"toInt64(0)\": \"0\"\r\n    \t\t}\r\n    \t],\r\n\r\n    \t\"rows\": 1,\r\n\r\n    \t\"statistics\":\r\n    \t{\r\n    \t\t\"elapsed\": 0.0010454,\r\n    \t\t\"rows_read\": 1,\r\n    \t\t\"bytes_read\": 1\r\n    \t}\r\n    }\r\n\r\nThe setting is recognised:\r\n\r\n    :) SELECT value FROM system.settings WHERE name = 'output_format_json_quote_64bit_integers'\r\n\r\n    ┌─value─┐\r\n    │ 0     │\r\n    └───────┘\r\n\r\nIf I manually set the value using\r\n\r\n    :) SET output_format_json_quote_64bit_integers = 0\r\n\r\nI get the correct output:\r\n\r\n    :) SELECT toInt64(0) FORMAT JSON\r\n\r\n    {\r\n    \t\"meta\":\r\n    \t[\r\n    \t\t{\r\n    \t\t\t\"name\": \"toInt64(0)\",\r\n    \t\t\t\"type\": \"Int64\"\r\n    \t\t}\r\n    \t],\r\n\r\n    \t\"data\":\r\n    \t[\r\n    \t\t{\r\n    \t\t\t\"toInt64(0)\": 0\r\n    \t\t}\r\n    \t],\r\n\r\n    \t\"rows\": 1,\r\n    \r\n    \t\"statistics\":\r\n    \t{\r\n    \t\t\"elapsed\": 0.001716436,\r\n    \t\t\"rows_read\": 1,\r\n    \t\t\"bytes_read\": 1\r\n    \t}\r\n    }\r\n\r\nThis is using:\r\n- ClickHouse client version 18.14.11.\r\n- Connected to ClickHouse server version 18.14.11 revision 54409.\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/3489/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/3489/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/3413","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/3413/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/3413/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/3413/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/3413","id":371416709,"node_id":"MDU6SXNzdWUzNzE0MTY3MDk=","number":3413,"title":"[Question] Is it possible to build a funnel and get all events between steps as well?","user":{"login":"artfabrique","id":4455555,"node_id":"MDQ6VXNlcjQ0NTU1NTU=","avatar_url":"https://avatars.githubusercontent.com/u/4455555?v=4","gravatar_id":"","url":"https://api.github.com/users/artfabrique","html_url":"https://github.com/artfabrique","followers_url":"https://api.github.com/users/artfabrique/followers","following_url":"https://api.github.com/users/artfabrique/following{/other_user}","gists_url":"https://api.github.com/users/artfabrique/gists{/gist_id}","starred_url":"https://api.github.com/users/artfabrique/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/artfabrique/subscriptions","organizations_url":"https://api.github.com/users/artfabrique/orgs","repos_url":"https://api.github.com/users/artfabrique/repos","events_url":"https://api.github.com/users/artfabrique/events{/privacy}","received_events_url":"https://api.github.com/users/artfabrique/received_events","type":"User","site_admin":false},"labels":[{"id":386401510,"node_id":"MDU6TGFiZWwzODY0MDE1MTA=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/question","name":"question","color":"bfdadc","default":true,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":13,"created_at":"2018-10-18T08:29:59Z","updated_at":"2021-04-13T07:39:01Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"I have a challenging task and i'm not sure that it's even possible with clickhouse: Find not only the funnel steps occurrences but all events between the funnel steps as well.\r\nHere is the scheme I need to achieve\r\n\r\n![clickhouse algo - page 1](https://user-images.githubusercontent.com/4455555/47122500-bd18d180-d27f-11e8-85b9-1341c41ae209.jpeg)\r\n\r\nHow the events are stored initially - does not matter (can be changed)\r\nWe have around 2.7kkk events/month\r\nNow I have a query that runs around 3 minutes on a small sample of 75kk\r\nMaybe someone can advise a direction to research? (I'll provide current query a bit later)\r\n\r\nI've looked through this already: #2096 ","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/3413/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/3413/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/3326","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/3326/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/3326/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/3326/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/3326","id":368068417,"node_id":"MDU6SXNzdWUzNjgwNjg0MTc=","number":3326,"title":"After DB::Exception, clickhouse ask password again.","user":{"login":"SunguckLee","id":7089501,"node_id":"MDQ6VXNlcjcwODk1MDE=","avatar_url":"https://avatars.githubusercontent.com/u/7089501?v=4","gravatar_id":"","url":"https://api.github.com/users/SunguckLee","html_url":"https://github.com/SunguckLee","followers_url":"https://api.github.com/users/SunguckLee/followers","following_url":"https://api.github.com/users/SunguckLee/following{/other_user}","gists_url":"https://api.github.com/users/SunguckLee/gists{/gist_id}","starred_url":"https://api.github.com/users/SunguckLee/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/SunguckLee/subscriptions","organizations_url":"https://api.github.com/users/SunguckLee/orgs","repos_url":"https://api.github.com/users/SunguckLee/repos","events_url":"https://api.github.com/users/SunguckLee/events{/privacy}","received_events_url":"https://api.github.com/users/SunguckLee/received_events","type":"User","site_admin":false},"labels":[{"id":845247686,"node_id":"MDU6TGFiZWw4NDUyNDc2ODY=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/usability","name":"usability","color":"ebf28c","default":false,"description":""},{"id":993003747,"node_id":"MDU6TGFiZWw5OTMwMDM3NDc=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-cli","name":"comp-cli","color":"b5bcff","default":false,"description":"Console & command line"},{"id":1365579236,"node_id":"MDU6TGFiZWwxMzY1NTc5MjM2","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/minor","name":"minor","color":"FFF8F8","default":false,"description":"Priority: minor"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2018-10-09T07:06:03Z","updated_at":"2020-07-14T18:05:11Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"I had run the query with tailing \"FORMAT VERTICAL\", But clickhouse server throw DB::Exception.\r\n```\r\nException on client:\r\nCode: 73. DB::Exception: Unknown format VERTICAL\r\n```\r\n\r\nAfter this error, clickhouse client ask password agiain like this.\r\n```\r\nch_7 :) select version();\r\n\r\nSELECT version()\r\n\r\n┌─version()─┐\r\n│ 18.12.17  │\r\n└───────────┘\r\n\r\nselect * from matt FORMAT VERTICAL;\r\n\r\nException on client:\r\nCode: 73. DB::Exception: Unknown format VERTICAL\r\n\r\nPassword for user matt_lee:\r\nConnecting to database matt at localhost:9000 as user matt_lee.\r\nConnected to ClickHouse server version 18.12.17 revision 54407.\r\n\r\nch_7 :)\r\n```\r\n\r\nBut there's no password asking when syntax error of the other query. Is this really connection is closed ? \r\nAnd one more thing is that why upper-case \"VERTICAL\" is not allowed ?","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/3326/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/3326/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/3312","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/3312/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/3312/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/3312/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/3312","id":367637949,"node_id":"MDU6SXNzdWUzNjc2Mzc5NDk=","number":3312,"title":"to support upsert","user":{"login":"cmdares","id":5292190,"node_id":"MDQ6VXNlcjUyOTIxOTA=","avatar_url":"https://avatars.githubusercontent.com/u/5292190?v=4","gravatar_id":"","url":"https://api.github.com/users/cmdares","html_url":"https://github.com/cmdares","followers_url":"https://api.github.com/users/cmdares/followers","following_url":"https://api.github.com/users/cmdares/following{/other_user}","gists_url":"https://api.github.com/users/cmdares/gists{/gist_id}","starred_url":"https://api.github.com/users/cmdares/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cmdares/subscriptions","organizations_url":"https://api.github.com/users/cmdares/orgs","repos_url":"https://api.github.com/users/cmdares/repos","events_url":"https://api.github.com/users/cmdares/events{/privacy}","received_events_url":"https://api.github.com/users/cmdares/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":1507867504,"node_id":"MDU6TGFiZWwxNTA3ODY3NTA0","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/st-hold","name":"st-hold","color":"e5b890","default":false,"description":"We've paused the work on issue for some reason"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2018-10-08T04:47:30Z","updated_at":"2020-06-15T20:36:45Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"mysql:           https://dev.mysql.com/doc/refman/8.0/en/insert-on-duplicate.html\r\npostgresql:    https://www.postgresql.org/docs/9.5/static/sql-insert.html#SQL-ON-CONFLICT\r\n\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/3312/reactions","total_count":3,"+1":3,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/3312/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/3266","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/3266/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/3266/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/3266/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/3266","id":365887861,"node_id":"MDU6SXNzdWUzNjU4ODc4NjE=","number":3266,"title":"Normality tests","user":{"login":"stovmasyan89","id":29482401,"node_id":"MDQ6VXNlcjI5NDgyNDAx","avatar_url":"https://avatars.githubusercontent.com/u/29482401?v=4","gravatar_id":"","url":"https://api.github.com/users/stovmasyan89","html_url":"https://github.com/stovmasyan89","followers_url":"https://api.github.com/users/stovmasyan89/followers","following_url":"https://api.github.com/users/stovmasyan89/following{/other_user}","gists_url":"https://api.github.com/users/stovmasyan89/gists{/gist_id}","starred_url":"https://api.github.com/users/stovmasyan89/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stovmasyan89/subscriptions","organizations_url":"https://api.github.com/users/stovmasyan89/orgs","repos_url":"https://api.github.com/users/stovmasyan89/repos","events_url":"https://api.github.com/users/stovmasyan89/events{/privacy}","received_events_url":"https://api.github.com/users/stovmasyan89/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":1507871495,"node_id":"MDU6TGFiZWwxNTA3ODcxNDk1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/st-community-taken","name":"st-community-taken","color":"e5b890","default":false,"description":"External developer is working on that"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2018-10-02T13:04:40Z","updated_at":"2021-11-21T12:02:20Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"There are lots of rather simple tests (e.g. Shapiro–Wilk test) checking for normality and I think it will be useful to have some of them in ClickHouse.\r\ne.g. Pearson's correlations does not assume normality but outliers can have great influence on correlation coefficient. \r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/3266/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/3266/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/3206","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/3206/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/3206/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/3206/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/3206","id":363327518,"node_id":"MDU6SXNzdWUzNjMzMjc1MTg=","number":3206,"title":"Attach part increases records in the table","user":{"login":"rajadayalan","id":18044686,"node_id":"MDQ6VXNlcjE4MDQ0Njg2","avatar_url":"https://avatars.githubusercontent.com/u/18044686?v=4","gravatar_id":"","url":"https://api.github.com/users/rajadayalan","html_url":"https://github.com/rajadayalan","followers_url":"https://api.github.com/users/rajadayalan/followers","following_url":"https://api.github.com/users/rajadayalan/following{/other_user}","gists_url":"https://api.github.com/users/rajadayalan/gists{/gist_id}","starred_url":"https://api.github.com/users/rajadayalan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rajadayalan/subscriptions","organizations_url":"https://api.github.com/users/rajadayalan/orgs","repos_url":"https://api.github.com/users/rajadayalan/repos","events_url":"https://api.github.com/users/rajadayalan/events{/privacy}","received_events_url":"https://api.github.com/users/rajadayalan/received_events","type":"User","site_admin":false},"labels":[{"id":845247686,"node_id":"MDU6TGFiZWw4NDUyNDc2ODY=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/usability","name":"usability","color":"ebf28c","default":false,"description":""},{"id":1006992822,"node_id":"MDU6TGFiZWwxMDA2OTkyODIy","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/operations","name":"operations","color":"7fe8ba","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2018-09-24T21:28:15Z","updated_at":"2020-06-16T01:19:23Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"We are noticing issue when trying to attach part from backup. Recently we had to recover clickhouse using data from backup and noticed count() increased when using attach part. \r\n\r\nWe investigated with 2 test tables using MergeTree Engine. Backup for the table has 634 parts.\r\nIn one table access_logs_local  we copied the parts  to the table's data folder directly and restarted clickhouse node. Table Count() using this procedure is 2333691415\r\n\r\nIn another table access_logs_local _attach we copied 634 parts to the table's detached folder and a script that attaches the files from detached folder using alter part. Table Count() using this procedure is 2349986051. Number of records increased when we attached part.\r\n\r\nDid not notice any error in clickhouse logs. And confirmed from logs that all 634 parts got attached. Can you please provide some inputs on why the count() is different, is there anything specific we can do  avoid the inconsistency when attaching part?\r\n\r\nClickhouse server version used - 18.5.54400\r\n\r\nCount using clickhouse-client\r\nsrv002 :) select count() from access_logs_local\r\n\r\nSELECT count()\r\nFROM access_logs_local\r\n\r\n┌────count()─┐\r\n│ 2333691415 │\r\n└────────────┘\r\n\r\n1 rows in set. Elapsed: 0.129 sec. Processed 2.33 billion rows, 4.67 GB (18.15 billion rows/s., 36.29 GB/s.)\r\n\r\nsrv002 :) select count() from access_logs_local_attach\r\n\r\nSELECT count()\r\nFROM access_logs_local_attach\r\n\r\n┌────count()─┐\r\n│ 2349986051 │\r\n└────────────┘\r\n\r\n1 rows in set. Elapsed: 0.112 sec. Processed 2.35 billion rows, 4.70 GB (20.90 billion rows/s., 41.80 GB/s.)\r\n\r\n\r\n \r\n\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/3206/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/3206/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/3131","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/3131/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/3131/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/3131/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/3131","id":360140190,"node_id":"MDU6SXNzdWUzNjAxNDAxOTA=","number":3131,"title":"Supports of Multi Polygons in pointInPolygon function","user":{"login":"alexvaut","id":20702322,"node_id":"MDQ6VXNlcjIwNzAyMzIy","avatar_url":"https://avatars.githubusercontent.com/u/20702322?v=4","gravatar_id":"","url":"https://api.github.com/users/alexvaut","html_url":"https://github.com/alexvaut","followers_url":"https://api.github.com/users/alexvaut/followers","following_url":"https://api.github.com/users/alexvaut/following{/other_user}","gists_url":"https://api.github.com/users/alexvaut/gists{/gist_id}","starred_url":"https://api.github.com/users/alexvaut/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexvaut/subscriptions","organizations_url":"https://api.github.com/users/alexvaut/orgs","repos_url":"https://api.github.com/users/alexvaut/repos","events_url":"https://api.github.com/users/alexvaut/events{/privacy}","received_events_url":"https://api.github.com/users/alexvaut/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":1678455885,"node_id":"MDU6TGFiZWwxNjc4NDU1ODg1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-geo","name":"comp-geo","color":"b5bcff","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2018-09-14T03:05:48Z","updated_at":"2020-03-25T22:22:02Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Clickhouse supports polygons in pointInPolygon. This is already great. However it doesn't support Multi Polygon while the Boost library C++ underneath supports it. Right now, we workaround this limitation by using a UNION ALL and a select statement for each sub polygon: \"select lon,lat where pointInPolygon((lon, lat),{each_pol})\". But this is not efficient since we can have thousands of polygons in one multi polygon. More importantly, it's impossible to store a multi polygon in clickhouse and run the pointInPolygon function directly on it.\r\n\r\nCould we envisage adding support of Multi Polygons in pointInPolygon ?\r\n\r\nThanks !","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/3131/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/3131/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/3058","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/3058/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/3058/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/3058/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/3058","id":357656035,"node_id":"MDU6SXNzdWUzNTc2NTYwMzU=","number":3058,"title":"Replicated Merge Tree showing record count as multiplication of number of replication","user":{"login":"manojrbj","id":41997748,"node_id":"MDQ6VXNlcjQxOTk3NzQ4","avatar_url":"https://avatars.githubusercontent.com/u/41997748?v=4","gravatar_id":"","url":"https://api.github.com/users/manojrbj","html_url":"https://github.com/manojrbj","followers_url":"https://api.github.com/users/manojrbj/followers","following_url":"https://api.github.com/users/manojrbj/following{/other_user}","gists_url":"https://api.github.com/users/manojrbj/gists{/gist_id}","starred_url":"https://api.github.com/users/manojrbj/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/manojrbj/subscriptions","organizations_url":"https://api.github.com/users/manojrbj/orgs","repos_url":"https://api.github.com/users/manojrbj/repos","events_url":"https://api.github.com/users/manojrbj/events{/privacy}","received_events_url":"https://api.github.com/users/manojrbj/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2018-09-06T13:30:29Z","updated_at":"2020-01-20T20:00:38Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Hi Team,\r\n\r\nI have create a 5 node cluster having replication factor as 3. I created ReplicatedMergeTree table on all node and created Distributed table on top of it. I am inserting data into Distributed table from a log table where record count is 2337420 (log table). I fired select row count on distributed table and finding record count as 7012260.\r\n\r\nI have configured replication as below.\r\n\r\n`\r\n<Clickhouse_10shards_3replica>\r\n            <shard>\r\n                <replica>\r\n                    <host>host1</host>\r\n                    <port>9020</port>\r\n                </replica>\r\n\t\t<replica>\r\n                    <host>host2</host>\r\n                    <port>9020</port>\r\n                </replica>\r\n\t\t<replica>\r\n                    <host>host3</host>\r\n                    <port>9020</port>\r\n                </replica>\r\n            </shard>\r\n             <shard>\r\n                <replica>\r\n                    <host>host2</host>\r\n                    <port>9020</port>\r\n                </replica>\r\n\t\t<replica>\r\n                    <host>host3</host>\r\n                    <port>9020</port>\r\n                </replica>\r\n\t\t<replica>\r\n                    <host>host4</host>\r\n                    <port>9020</port>\r\n                </replica>\r\n            </shard>\r\n            <shard>\r\n                <replica>\r\n                    <host>host3</host>\r\n                    <port>9020</port>\r\n                </replica>\r\n\t\t<replica>\r\n                    <host>host4</host>\r\n                    <port>9020</port>\r\n                </replica>\r\n\t\t<replica>\r\n                    <host>host5</host>\r\n                    <port>9020</port>\r\n                </replica>\r\n            </shard>\r\n...............\r\n<Clickhouse_10shards_3replica>\r\n`\r\n\r\nCreate ReplicatedMergeTree is as below:\r\n`create table replica_table ()ENGINE = ReplicatedMergeTree('/clickhouse/Clickhouse_10shards_3replica/online/replica_table/{shard}', 'host1-01', end_date, (id), 8192)\");`\r\n\r\nDistributed table is as below.\r\n`CREATE TABLE replica_tableD AS replica_table ENGINE = Distributed (Clickhouse_10shards_3replica, online, replica_table, rand())`\r\n\r\nI followed the URL: https://www.altinity.com/blog/2018/5/10/circular-replication-cluster-topology-in-clickhouse\r\n\r\nAlso when we read data from distributed table, returned data is inconsistent. Please guide me. It is critical for delivery.\r\n\r\nPlease suggest why incorrect row count id being returned ?","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/3058/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/3058/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/3033","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/3033/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/3033/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/3033/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/3033","id":356831657,"node_id":"MDU6SXNzdWUzNTY4MzE2NTc=","number":3033,"title":"Cluster without tcp_port can't start","user":{"login":"Farfaday","id":1902645,"node_id":"MDQ6VXNlcjE5MDI2NDU=","avatar_url":"https://avatars.githubusercontent.com/u/1902645?v=4","gravatar_id":"","url":"https://api.github.com/users/Farfaday","html_url":"https://github.com/Farfaday","followers_url":"https://api.github.com/users/Farfaday/followers","following_url":"https://api.github.com/users/Farfaday/following{/other_user}","gists_url":"https://api.github.com/users/Farfaday/gists{/gist_id}","starred_url":"https://api.github.com/users/Farfaday/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Farfaday/subscriptions","organizations_url":"https://api.github.com/users/Farfaday/orgs","repos_url":"https://api.github.com/users/Farfaday/repos","events_url":"https://api.github.com/users/Farfaday/events{/privacy}","received_events_url":"https://api.github.com/users/Farfaday/received_events","type":"User","site_admin":false},"labels":[{"id":1575085465,"node_id":"MDU6TGFiZWwxNTc1MDg1NDY1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/unexpected%20behaviour","name":"unexpected behaviour","color":"e088ca","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2018-09-04T14:18:13Z","updated_at":"2020-10-29T19:25:23Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Hi,\r\nI am trying to use\r\n`<tcp_ssl_port>9440</tcp_ssl_port> `\r\nwith version 1.1.54388 but I could not find much documentation about that feature.\r\n\r\nI am also using \r\n```\r\n    <https_port>8443</https_port>\r\n    <!-- Used with https_port and tcp_ssl_port. Full ssl options list: https://github.com/ClickHouse-Extras/poco/blob/master/NetSSL_OpenSSL/include/Poco/Net/SSLManager.h#L71 -->\r\n    <openSSL>\r\n        <server> <!-- Used for https server AND secure tcp port -->\r\n            <!-- openssl req -subj \"/CN=localhost\" -new -newkey rsa:2048 -days 365 -nodes -x509 -keyout /etc/clickhouse-server/server.key -out /etc/clickhouse-server/server.crt -->\r\n            <certificateFile>/etc/clickhouse-server/server.crt</certificateFile>\r\n            <privateKeyFile>/etc/clickhouse-server/server.key</privateKeyFile>\r\n            <!-- openssl dhparam -out /etc/clickhouse-server/dhparam.pem 4096 -->\r\n            <dhParamsFile>/etc/clickhouse-server/dhparam.pem</dhParamsFile>\r\n            <verificationMode>none</verificationMode>\r\n            <loadDefaultCAFile>true</loadDefaultCAFile>\r\n            <cacheSessions>true</cacheSessions>\r\n            <disableProtocols>sslv2,sslv3</disableProtocols>\r\n            <preferServerCiphers>true</preferServerCiphers>\r\n        </server>\r\n\r\n        <client> <!-- Used for connecting to https dictionary source -->\r\n            <loadDefaultCAFile>true</loadDefaultCAFile>\r\n            <cacheSessions>true</cacheSessions>\r\n            <disableProtocols>sslv2,sslv3</disableProtocols>\r\n            <preferServerCiphers>true</preferServerCiphers>\r\n            <!-- Use for self-signed: <verificationMode>none</verificationMode> -->\r\n            <invalidCertificateHandler>\r\n                <!-- Use for self-signed: <name>AcceptCertificateHandler</name> -->\r\n                <name>RejectCertificateHandler</name>\r\n            </invalidCertificateHandler>\r\n        </client>\r\n    </openSSL>\r\n\r\n```\r\nwhich is working, I can connect to https/myhost:8443 with HTTPS.\r\n\r\nI tried removing\r\n` <tcp_port>9000</tcp_port>` but then I get \r\n\r\n```\r\n2018.09.04 12:44:48.560618 [ 37 ] <Error> raw_events.Event_Tracking (ReplicatedMergeTreeRestartingThread): void DB::ReplicatedMergeTreeRestartingThread::run(): Poco::Exceptio\r\nn. Code: 1000, e.code() = 0, e.displayText() = Not found: tcp_port, e.what() = Not found\r\n```\r\nHaving both entries \r\n```\r\n<tcp_port>9000</tcp_port>\r\n<tcp_ssl_port>9440</tcp_ssl_port>\r\n```\r\nseems to do nothing, port 9440 does not appear in netstat or in clickhouse's log files.\r\n\r\nDo you have any hints ?\r\nMany Thanks !\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/3033/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/3033/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/2999","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/2999/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/2999/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/2999/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/2999","id":355638951,"node_id":"MDU6SXNzdWUzNTU2Mzg5NTE=","number":2999,"title":"Mark end of query when running query with http progress headers","user":{"login":"ecyshor","id":4565569,"node_id":"MDQ6VXNlcjQ1NjU1Njk=","avatar_url":"https://avatars.githubusercontent.com/u/4565569?v=4","gravatar_id":"","url":"https://api.github.com/users/ecyshor","html_url":"https://github.com/ecyshor","followers_url":"https://api.github.com/users/ecyshor/followers","following_url":"https://api.github.com/users/ecyshor/following{/other_user}","gists_url":"https://api.github.com/users/ecyshor/gists{/gist_id}","starred_url":"https://api.github.com/users/ecyshor/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ecyshor/subscriptions","organizations_url":"https://api.github.com/users/ecyshor/orgs","repos_url":"https://api.github.com/users/ecyshor/repos","events_url":"https://api.github.com/users/ecyshor/events{/privacy}","received_events_url":"https://api.github.com/users/ecyshor/received_events","type":"User","site_admin":false},"labels":[{"id":386401507,"node_id":"MDU6TGFiZWwzODY0MDE1MDc=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/enhancement","name":"enhancement","color":"84b6eb","default":true,"description":null},{"id":1481327553,"node_id":"MDU6TGFiZWwxNDgxMzI3NTUz","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-http","name":"comp-http","color":"b5bcff","default":false,"description":"http protocol related"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2018-08-30T15:30:48Z","updated_at":"2019-10-23T15:08:09Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Currently when running queries over the http interface and requesting the http progress headers there is no easy way to tell that the query finished executing 100% or something went wrong.\r\nFor example when the query fails half way the response would look something like this:\r\n\r\n```\r\n`\r\nX-ClickHouse-Progress: {\"read_rows\":\"159466057\",\"read_bytes\":\"23600976436\",\"total_rows\":\"240828416\"}\r\nX-ClickHouse-Progress: {\"read_rows\":\"161055305\",\"read_bytes\":\"23836185140\",\"total_rows\":\"240828416\"}\r\nX-ClickHouse-Progress: {\"read_rows\":\"162456137\",\"read_bytes\":\"24043508276\",\"total_rows\":\"240828416\"}\r\nX-ClickHouse-Progress: {\"read_rows\":\"164045385\",\"read_bytes\":\"24278716980\",\"total_rows\":\"240828416\"}\r\nX-ClickHouse-Progress: {\"read_rows\":\"165438025\",\"read_bytes\":\"24484827700\",\"total_rows\":\"240828416\"}\r\n\r\nCode: 241, e.displayText() = DB::Exception: Memory limit (for query) exceeded: ...`\r\n\r\n```\r\nWhile a successful result would look something like this:\r\n```\r\n`\r\nX-ClickHouse-Progress: {\"read_rows\":\"1340919\",\"read_bytes\":\"437228836\",\"total_rows\":\"1417216\"}\r\nX-ClickHouse-Progress: {\"read_rows\":\"1365495\",\"read_bytes\":\"445829218\",\"total_rows\":\"1417216\"}\r\n \r\n{\r\n\t\"meta\":\r\n\t[\r\n\t\t{\r\n\t\t\t\"name\": \"sleep(3)\",\r\n\t\t\t\"type\": \"UInt8\"\r\n\t\t},\r\n\t\t{\r\n....\r\n`\r\n```\r\n\r\nThe only way to tell if it succeeded would be to see if the body content contains `e.displayText() = DB::Exception` or some other string, but this is not reliable in the long run.\r\n\r\nIt would be really helpful to add a final header which denotes success/failure or even just ensuring that the `X-ClickHouse-Progress` is sent for the last part of the query., so that the `read_rows` is equal with the `total_rows`.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/2999/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/2999/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/2914","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/2914/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/2914/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/2914/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/2914","id":352589465,"node_id":"MDU6SXNzdWUzNTI1ODk0NjU=","number":2914,"title":"Optimize GROUP BY with injective functions of order key prefix.","user":{"login":"VladRassokhin","id":552079,"node_id":"MDQ6VXNlcjU1MjA3OQ==","avatar_url":"https://avatars.githubusercontent.com/u/552079?v=4","gravatar_id":"","url":"https://api.github.com/users/VladRassokhin","html_url":"https://github.com/VladRassokhin","followers_url":"https://api.github.com/users/VladRassokhin/followers","following_url":"https://api.github.com/users/VladRassokhin/following{/other_user}","gists_url":"https://api.github.com/users/VladRassokhin/gists{/gist_id}","starred_url":"https://api.github.com/users/VladRassokhin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/VladRassokhin/subscriptions","organizations_url":"https://api.github.com/users/VladRassokhin/orgs","repos_url":"https://api.github.com/users/VladRassokhin/repos","events_url":"https://api.github.com/users/VladRassokhin/events{/privacy}","received_events_url":"https://api.github.com/users/VladRassokhin/received_events","type":"User","site_admin":false},"labels":[{"id":906438147,"node_id":"MDU6TGFiZWw5MDY0MzgxNDc=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/st-fixed","name":"st-fixed","color":"e5b890","default":false,"description":""},{"id":1507888214,"node_id":"MDU6TGFiZWwxNTA3ODg4MjE0","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/st-accepted","name":"st-accepted","color":"e5b890","default":false,"description":"The issue is in our backlog, ready to take"}],"state":"open","locked":false,"assignee":{"login":"CurtizJ","id":20361854,"node_id":"MDQ6VXNlcjIwMzYxODU0","avatar_url":"https://avatars.githubusercontent.com/u/20361854?v=4","gravatar_id":"","url":"https://api.github.com/users/CurtizJ","html_url":"https://github.com/CurtizJ","followers_url":"https://api.github.com/users/CurtizJ/followers","following_url":"https://api.github.com/users/CurtizJ/following{/other_user}","gists_url":"https://api.github.com/users/CurtizJ/gists{/gist_id}","starred_url":"https://api.github.com/users/CurtizJ/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/CurtizJ/subscriptions","organizations_url":"https://api.github.com/users/CurtizJ/orgs","repos_url":"https://api.github.com/users/CurtizJ/repos","events_url":"https://api.github.com/users/CurtizJ/events{/privacy}","received_events_url":"https://api.github.com/users/CurtizJ/received_events","type":"User","site_admin":false},"assignees":[{"login":"CurtizJ","id":20361854,"node_id":"MDQ6VXNlcjIwMzYxODU0","avatar_url":"https://avatars.githubusercontent.com/u/20361854?v=4","gravatar_id":"","url":"https://api.github.com/users/CurtizJ","html_url":"https://github.com/CurtizJ","followers_url":"https://api.github.com/users/CurtizJ/followers","following_url":"https://api.github.com/users/CurtizJ/following{/other_user}","gists_url":"https://api.github.com/users/CurtizJ/gists{/gist_id}","starred_url":"https://api.github.com/users/CurtizJ/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/CurtizJ/subscriptions","organizations_url":"https://api.github.com/users/CurtizJ/orgs","repos_url":"https://api.github.com/users/CurtizJ/repos","events_url":"https://api.github.com/users/CurtizJ/events{/privacy}","received_events_url":"https://api.github.com/users/CurtizJ/received_events","type":"User","site_admin":false}],"milestone":null,"comments":11,"created_at":"2018-08-21T15:16:05Z","updated_at":"2021-09-25T03:03:18Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Given table definition\r\n`CREATE TABLE t ( A UInt32, B UInt32, C UInt32, D UInt32) ENGINE = MergeTree() PARTITION BY toUInt32(A / 128) ORDER BY (A, C, D) SETTINGS index_granularity = 8192`\r\nAnd ~160bn rows:\r\n```\r\nselect sum(rows),formatReadableSize(sum(bytes)), formatReadableSize(sum(marks_size)), formatReadableSize(sum(primary_key_bytes_in_memory)), count() from system.parts where active = 1 and table = 't'\r\n162573124579    252.25 GiB      1.18 GiB        227.11 MiB      133\r\n```\r\n\r\nRequests for field `A` are quite slow:\r\n```\r\nselect A from t group by A into outfile 'test1';\r\n  3060 rows in set. Elapsed: 117.517 sec. Processed 162.57 billion rows, 650.29 GB (1.38 billion rows/s., 5.53 GB/s.)\r\nselect distinct A from t into outfile 'test2';\r\n  3060 rows in set. Elapsed: 135.116 sec. Processed 162.57 billion rows, 650.29 GB (1.20 billion rows/s., 4.81 GB/s.) \r\nselect * from system.asynchronous_metrics where metric like '%ark%' FORMAT TabSeparatedWithNames;\r\n  metric  value\r\n  MarkCacheFiles  1568\r\n  MarkCacheBytes  348396624\r\n```\r\n\r\nIt seems that query could be optimized by looking whether first part of tuple changes in adjacent masks.\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/2914/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/2914/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/2901","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/2901/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/2901/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/2901/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/2901","id":352206494,"node_id":"MDU6SXNzdWUzNTIyMDY0OTQ=","number":2901,"title":"Allow inserting data into a materialized view that is being populated","user":{"login":"simPod","id":327717,"node_id":"MDQ6VXNlcjMyNzcxNw==","avatar_url":"https://avatars.githubusercontent.com/u/327717?v=4","gravatar_id":"","url":"https://api.github.com/users/simPod","html_url":"https://github.com/simPod","followers_url":"https://api.github.com/users/simPod/followers","following_url":"https://api.github.com/users/simPod/following{/other_user}","gists_url":"https://api.github.com/users/simPod/gists{/gist_id}","starred_url":"https://api.github.com/users/simPod/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/simPod/subscriptions","organizations_url":"https://api.github.com/users/simPod/orgs","repos_url":"https://api.github.com/users/simPod/repos","events_url":"https://api.github.com/users/simPod/events{/privacy}","received_events_url":"https://api.github.com/users/simPod/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":1350221495,"node_id":"MDU6TGFiZWwxMzUwMjIxNDk1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-matview","name":"comp-matview","color":"b5bcff","default":false,"description":"Materialized views"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2018-08-20T16:23:12Z","updated_at":"2019-05-06T22:29:50Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"For creating materialized views, there's a great option to add POPULATE clause to it to fill new view with data that were inserted to the table before the view was created.\r\n\r\nHowever, the docs states:\r\n\r\n> We don't recommend using POPULATE, since data inserted in the table during the view creation will not be inserted in it.\r\n\r\nIt would be very helpful if it was possible to POPULATE view and also have data, that are inserted to the table while populating the view, inserted to the view as well.\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/2901/reactions","total_count":4,"+1":4,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/2901/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/2839","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/2839/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/2839/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/2839/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/2839","id":349450563,"node_id":"MDU6SXNzdWUzNDk0NTA1NjM=","number":2839,"title":"MV definition is not updated after ATTACH","user":{"login":"alex-zaitsev","id":25770686,"node_id":"MDQ6VXNlcjI1NzcwNjg2","avatar_url":"https://avatars.githubusercontent.com/u/25770686?v=4","gravatar_id":"","url":"https://api.github.com/users/alex-zaitsev","html_url":"https://github.com/alex-zaitsev","followers_url":"https://api.github.com/users/alex-zaitsev/followers","following_url":"https://api.github.com/users/alex-zaitsev/following{/other_user}","gists_url":"https://api.github.com/users/alex-zaitsev/gists{/gist_id}","starred_url":"https://api.github.com/users/alex-zaitsev/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alex-zaitsev/subscriptions","organizations_url":"https://api.github.com/users/alex-zaitsev/orgs","repos_url":"https://api.github.com/users/alex-zaitsev/repos","events_url":"https://api.github.com/users/alex-zaitsev/events{/privacy}","received_events_url":"https://api.github.com/users/alex-zaitsev/received_events","type":"User","site_admin":false},"labels":[{"id":845247686,"node_id":"MDU6TGFiZWw4NDUyNDc2ODY=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/usability","name":"usability","color":"ebf28c","default":false,"description":""},{"id":1019683656,"node_id":"MDU6TGFiZWwxMDE5NjgzNjU2","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/altinity","name":"altinity","color":"c0f5f9","default":false,"description":""},{"id":1350221495,"node_id":"MDU6TGFiZWwxMzUwMjIxNDk1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-matview","name":"comp-matview","color":"b5bcff","default":false,"description":"Materialized views"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2018-08-10T09:55:16Z","updated_at":"2019-10-23T15:08:09Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"```\r\nDROP TABLE IF EXISTS test_alter;\r\nDROP TABLE IF EXISTS test_alter_agg;\r\nDROP TABLE IF EXISTS test_alter_mv;\r\n\r\nCREATE TABLE test_alter (a Int8) ENGINE = MergeTree() partition by tuple() order by tuple();\r\n\r\nCREATE TABLE test_alter_agg (a Int8) ENGINE = MergeTree() partition by tuple() order by tuple();\r\n\r\nCREATE MATERIALIZED VIEW test_alter_mv TO test_alter_agg AS SELECT a FROM test_alter;\r\n\r\nINSERT INTO test_alter VALUES (1);\r\n\r\nSELECT * FROM test_alter_mv;\r\n```\r\n\r\nWorks ok so far. Not let's add a column:\r\n\r\n```ALTER TABLE test_alter ADD COLUMN c Int8;\r\n\r\nALTER TABLE test_alter_agg ADD COLUMN c Int8;\r\n\r\nDETACH TABLE test_alter_mv;\r\n\r\nATTACH MATERIALIZED VIEW test_alter_mv TO test_alter_agg AS SELECT a,c from test_alter;\r\n\r\nSHOW CREATE TABLE test_alter_mv\r\n\r\n┌─statement──────────────────────────────────────────────────────────────────────────────────────────────────────┐\r\n│ CREATE MATERIALIZED VIEW test.test_alter_mv TO test.test_alter_agg ( a Int8) AS SELECT a FROM test.test_alter  │\r\n└────────────────────────────────────────────────────────────────────────────────────────────────────────────────┘\r\n\r\n1 rows in set. Elapsed: 0.002 sec. \r\n```\r\n\r\nMV definition is not updated after ATTACH. It keeps using the old one without column 'c'.\r\n\r\n```\r\nINSERT INTO test_alter VALUES(1,2);\r\n\r\nReceived exception from server (version 1.1.54394):\r\nCode: 10. DB::Exception: Received from localhost:9000, ::1. DB::Exception: Expected column c: while pushing to view test.test_alter_mv. \r\n```\r\n\r\nDROP/CREATE MV works, but it requires to fill the structure. It also works if structure is specified in ATTACH. But it is confusing that ClickHouse does not pick up structure from underlying SELECT statement and uses the old one here, while it works fine in other cases.\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/2839/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/2839/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/2825","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/2825/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/2825/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/2825/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/2825","id":348620398,"node_id":"MDU6SXNzdWUzNDg2MjAzOTg=","number":2825,"title":"Return the number of inserted rows in HTTP API responses","user":{"login":"907th","id":800362,"node_id":"MDQ6VXNlcjgwMDM2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/800362?v=4","gravatar_id":"","url":"https://api.github.com/users/907th","html_url":"https://github.com/907th","followers_url":"https://api.github.com/users/907th/followers","following_url":"https://api.github.com/users/907th/following{/other_user}","gists_url":"https://api.github.com/users/907th/gists{/gist_id}","starred_url":"https://api.github.com/users/907th/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/907th/subscriptions","organizations_url":"https://api.github.com/users/907th/orgs","repos_url":"https://api.github.com/users/907th/repos","events_url":"https://api.github.com/users/907th/events{/privacy}","received_events_url":"https://api.github.com/users/907th/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":1481327553,"node_id":"MDU6TGFiZWwxNDgxMzI3NTUz","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-http","name":"comp-http","color":"b5bcff","default":false,"description":"http protocol related"}],"state":"open","locked":false,"assignee":{"login":"alexey-milovidov","id":18581488,"node_id":"MDQ6VXNlcjE4NTgxNDg4","avatar_url":"https://avatars.githubusercontent.com/u/18581488?v=4","gravatar_id":"","url":"https://api.github.com/users/alexey-milovidov","html_url":"https://github.com/alexey-milovidov","followers_url":"https://api.github.com/users/alexey-milovidov/followers","following_url":"https://api.github.com/users/alexey-milovidov/following{/other_user}","gists_url":"https://api.github.com/users/alexey-milovidov/gists{/gist_id}","starred_url":"https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexey-milovidov/subscriptions","organizations_url":"https://api.github.com/users/alexey-milovidov/orgs","repos_url":"https://api.github.com/users/alexey-milovidov/repos","events_url":"https://api.github.com/users/alexey-milovidov/events{/privacy}","received_events_url":"https://api.github.com/users/alexey-milovidov/received_events","type":"User","site_admin":false},"assignees":[{"login":"alexey-milovidov","id":18581488,"node_id":"MDQ6VXNlcjE4NTgxNDg4","avatar_url":"https://avatars.githubusercontent.com/u/18581488?v=4","gravatar_id":"","url":"https://api.github.com/users/alexey-milovidov","html_url":"https://github.com/alexey-milovidov","followers_url":"https://api.github.com/users/alexey-milovidov/followers","following_url":"https://api.github.com/users/alexey-milovidov/following{/other_user}","gists_url":"https://api.github.com/users/alexey-milovidov/gists{/gist_id}","starred_url":"https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexey-milovidov/subscriptions","organizations_url":"https://api.github.com/users/alexey-milovidov/orgs","repos_url":"https://api.github.com/users/alexey-milovidov/repos","events_url":"https://api.github.com/users/alexey-milovidov/events{/privacy}","received_events_url":"https://api.github.com/users/alexey-milovidov/received_events","type":"User","site_admin":false}],"milestone":null,"comments":3,"created_at":"2018-08-08T08:13:09Z","updated_at":"2019-10-22T16:32:16Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"After inserting data into ClickHouse table using HTTP API the response body is empty and response headers do not contain any useful information too. It would be nice to get the number of inserted rows in the server response. What do you think?","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/2825/reactions","total_count":5,"+1":5,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/2825/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/2805","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/2805/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/2805/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/2805/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/2805","id":347610381,"node_id":"MDU6SXNzdWUzNDc2MTAzODE=","number":2805,"title":"FR: Enhance the alter view","user":{"login":"zhang2014","id":8087042,"node_id":"MDQ6VXNlcjgwODcwNDI=","avatar_url":"https://avatars.githubusercontent.com/u/8087042?v=4","gravatar_id":"","url":"https://api.github.com/users/zhang2014","html_url":"https://github.com/zhang2014","followers_url":"https://api.github.com/users/zhang2014/followers","following_url":"https://api.github.com/users/zhang2014/following{/other_user}","gists_url":"https://api.github.com/users/zhang2014/gists{/gist_id}","starred_url":"https://api.github.com/users/zhang2014/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zhang2014/subscriptions","organizations_url":"https://api.github.com/users/zhang2014/orgs","repos_url":"https://api.github.com/users/zhang2014/repos","events_url":"https://api.github.com/users/zhang2014/events{/privacy}","received_events_url":"https://api.github.com/users/zhang2014/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2018-08-04T11:04:58Z","updated_at":"2020-04-13T07:48:59Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"body":"I plan to do the following things, if no problem, I will start : )\r\n- Support Push-down alter to the materialized view(need check the query of the materialized view)\r\n- Support `CREATE OR REPLACE VIEW` Syntax\r\n- Support `ALTER VIEW view_name() AS new_query` Syntax","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/2805/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/2805/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/2797","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/2797/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/2797/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/2797/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/2797","id":347074752,"node_id":"MDU6SXNzdWUzNDcwNzQ3NTI=","number":2797,"title":"DEFAULT values not applicable on Nested fields (Syntax Error)","user":{"login":"xmariachi","id":155298,"node_id":"MDQ6VXNlcjE1NTI5OA==","avatar_url":"https://avatars.githubusercontent.com/u/155298?v=4","gravatar_id":"","url":"https://api.github.com/users/xmariachi","html_url":"https://github.com/xmariachi","followers_url":"https://api.github.com/users/xmariachi/followers","following_url":"https://api.github.com/users/xmariachi/following{/other_user}","gists_url":"https://api.github.com/users/xmariachi/gists{/gist_id}","starred_url":"https://api.github.com/users/xmariachi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xmariachi/subscriptions","organizations_url":"https://api.github.com/users/xmariachi/orgs","repos_url":"https://api.github.com/users/xmariachi/repos","events_url":"https://api.github.com/users/xmariachi/events{/privacy}","received_events_url":"https://api.github.com/users/xmariachi/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2018-08-02T15:58:04Z","updated_at":"2020-12-09T13:26:10Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"\r\n```\r\nCREATE TABLE pipo\r\n(\r\n    _id String DEFAULT '1', \r\n    thing Nested(\r\n        nestedthing String\r\n    )\r\n)\r\nENGINE = Memory\r\n\r\nOk.\r\n```\r\nThen I try to assign the same default to a Nested field: \r\n\r\n```\r\nSyntax error: failed at position 93 (line 6, col 25):\r\n\r\nCREATE TABLE pipo2  \r\n(\r\n  _id String DEFAULT '1',\r\n  thing Nested\r\n  (\r\n     nestedthing String DEFAULT '1' \r\n  )\r\n) ENGINE = Memory;\r\n\r\nExpected one of: token, Comma\r\n```\r\n(error highlights the 'D' of the second \"DEFAULT\")\r\nIs there any reason for this limitation? \r\n(version 1.1.54390)","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/2797/reactions","total_count":12,"+1":10,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":2},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/2797/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/2731","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/2731/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/2731/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/2731/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/2731","id":345017382,"node_id":"MDU6SXNzdWUzNDUwMTczODI=","number":2731,"title":"Max query size exceeded on dictGetString from CH localhost  \"cache\"  dictionary","user":{"login":"den-crane","id":19737682,"node_id":"MDQ6VXNlcjE5NzM3Njgy","avatar_url":"https://avatars.githubusercontent.com/u/19737682?v=4","gravatar_id":"","url":"https://api.github.com/users/den-crane","html_url":"https://github.com/den-crane","followers_url":"https://api.github.com/users/den-crane/followers","following_url":"https://api.github.com/users/den-crane/following{/other_user}","gists_url":"https://api.github.com/users/den-crane/gists{/gist_id}","starred_url":"https://api.github.com/users/den-crane/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/den-crane/subscriptions","organizations_url":"https://api.github.com/users/den-crane/orgs","repos_url":"https://api.github.com/users/den-crane/repos","events_url":"https://api.github.com/users/den-crane/events{/privacy}","received_events_url":"https://api.github.com/users/den-crane/received_events","type":"User","site_admin":false},"labels":[{"id":1351463315,"node_id":"MDU6TGFiZWwxMzUxNDYzMzE1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-dictionary","name":"comp-dictionary","color":"b5bcff","default":false,"description":"Dictionaries"}],"state":"open","locked":false,"assignee":{"login":"kitaisreal","id":22458333,"node_id":"MDQ6VXNlcjIyNDU4MzMz","avatar_url":"https://avatars.githubusercontent.com/u/22458333?v=4","gravatar_id":"","url":"https://api.github.com/users/kitaisreal","html_url":"https://github.com/kitaisreal","followers_url":"https://api.github.com/users/kitaisreal/followers","following_url":"https://api.github.com/users/kitaisreal/following{/other_user}","gists_url":"https://api.github.com/users/kitaisreal/gists{/gist_id}","starred_url":"https://api.github.com/users/kitaisreal/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kitaisreal/subscriptions","organizations_url":"https://api.github.com/users/kitaisreal/orgs","repos_url":"https://api.github.com/users/kitaisreal/repos","events_url":"https://api.github.com/users/kitaisreal/events{/privacy}","received_events_url":"https://api.github.com/users/kitaisreal/received_events","type":"User","site_admin":false},"assignees":[{"login":"kitaisreal","id":22458333,"node_id":"MDQ6VXNlcjIyNDU4MzMz","avatar_url":"https://avatars.githubusercontent.com/u/22458333?v=4","gravatar_id":"","url":"https://api.github.com/users/kitaisreal","html_url":"https://github.com/kitaisreal","followers_url":"https://api.github.com/users/kitaisreal/followers","following_url":"https://api.github.com/users/kitaisreal/following{/other_user}","gists_url":"https://api.github.com/users/kitaisreal/gists{/gist_id}","starred_url":"https://api.github.com/users/kitaisreal/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kitaisreal/subscriptions","organizations_url":"https://api.github.com/users/kitaisreal/orgs","repos_url":"https://api.github.com/users/kitaisreal/repos","events_url":"https://api.github.com/users/kitaisreal/events{/privacy}","received_events_url":"https://api.github.com/users/kitaisreal/received_events","type":"User","site_admin":false}],"milestone":null,"comments":7,"created_at":"2018-07-26T21:48:02Z","updated_at":"2021-06-27T12:33:57Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"body":"create table test.test(a UInt64, b String) Engine=MergeTree Partition by tuple() Order by tuple();\r\ninsert into test.test select number, toString(number) from numbers(1000000);\r\n\r\n```\r\n<?xml version=\"1.0\"?>\r\n<dictionaries>\r\n  <dictionary>\r\n    <name>test</name>\r\n    <source>\r\n      <clickhouse> <host>localhost</host><port>9000</port>\r\n        <user>default</user><password/><db>test</db><table>test</table>\r\n      </clickhouse>\r\n    </source>\r\n    <lifetime>300</lifetime>\r\n     <layout>\r\n         <cache>\r\n            <size_in_cells>100000</size_in_cells>\r\n         </cache>\r\n    </layout>\r\n    <structure>\r\n       <id><name>a</name></id>\r\n      <attribute><name>b</name><type>String</type><null_value/></attribute>\r\n    </structure>\r\n  </dictionary>\r\n</dictionaries>\r\n```\r\n\r\n```\r\nConnected to ClickHouse server version 1.1.54394.\r\n :) select dictGetString('test', 'b', toUInt64(number)) from  numbers(1000000);\r\n\r\nSELECT dictGetString('test', 'b', toUInt64(number))\r\nFROM numbers(1000000)\r\n\r\n→ Progress: 65.54 thousand rows, 524.29 KB (603.67 thousand rows/s., 4.83 MB/s.) Received exception from server (version 1.1.54394):\r\nCode: 62. DB::Exception: Received from localhost:9000, ::1. DB::Exception: \r\nReceived from localhost:9000, ::1. DB::Exception: Syntax error: failed at position 262145: , 26695,\r\n 26696, 26697, 26698, 26699, 26700, 26701, 26702, 26703, 26704, 26705, 26706, 26707, 26708, \r\n26709, 26710, 26711, 26712, 26713, 26714, 26715, 26716, 2671. Max query size exceeded.\r\n```","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/2731/reactions","total_count":2,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/2731/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/2728","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/2728/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/2728/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/2728/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/2728","id":344916162,"node_id":"MDU6SXNzdWUzNDQ5MTYxNjI=","number":2728,"title":"Documentation: incoming data (web analytics & sessioning) tutorial","user":{"login":"xmariachi","id":155298,"node_id":"MDQ6VXNlcjE1NTI5OA==","avatar_url":"https://avatars.githubusercontent.com/u/155298?v=4","gravatar_id":"","url":"https://api.github.com/users/xmariachi","html_url":"https://github.com/xmariachi","followers_url":"https://api.github.com/users/xmariachi/followers","following_url":"https://api.github.com/users/xmariachi/following{/other_user}","gists_url":"https://api.github.com/users/xmariachi/gists{/gist_id}","starred_url":"https://api.github.com/users/xmariachi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xmariachi/subscriptions","organizations_url":"https://api.github.com/users/xmariachi/orgs","repos_url":"https://api.github.com/users/xmariachi/repos","events_url":"https://api.github.com/users/xmariachi/events{/privacy}","received_events_url":"https://api.github.com/users/xmariachi/received_events","type":"User","site_admin":false},"labels":[{"id":386401508,"node_id":"MDU6TGFiZWwzODY0MDE1MDg=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/help%20wanted","name":"help wanted","color":"128A0C","default":true,"description":null},{"id":785082162,"node_id":"MDU6TGFiZWw3ODUwODIxNjI=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-documentation","name":"comp-documentation","color":"b5bcff","default":false,"description":"Used to run automatic builds of the documentation"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2018-07-26T16:28:09Z","updated_at":"2020-10-29T21:09:23Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"I think it would be beneficial to provide a simple yet illustrative tutorial on web sessioning to show the potential of ClickHouse on incoming data, to show examples of the deeper ideas behind ClickHouse. It is mentioned also in many points of the docs that the initial usage is Metrika, so it would be good to create a mini-Metrika that illustrates more important engines usage, where they shine and how to work with them, main integrations (Kafka, external sources as Dictionaries), hints on best practices, etc.\r\n\r\nIt would help onboarding and understanding ClickHouse for incoming data scenarios.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/2728/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/2728/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/2655","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/2655/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/2655/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/2655/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/2655","id":341411417,"node_id":"MDU6SXNzdWUzNDE0MTE0MTc=","number":2655,"title":"Unexpected result when using CASE operator or transform function with NULL","user":{"login":"siberex","id":977336,"node_id":"MDQ6VXNlcjk3NzMzNg==","avatar_url":"https://avatars.githubusercontent.com/u/977336?v=4","gravatar_id":"","url":"https://api.github.com/users/siberex","html_url":"https://github.com/siberex","followers_url":"https://api.github.com/users/siberex/followers","following_url":"https://api.github.com/users/siberex/following{/other_user}","gists_url":"https://api.github.com/users/siberex/gists{/gist_id}","starred_url":"https://api.github.com/users/siberex/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/siberex/subscriptions","organizations_url":"https://api.github.com/users/siberex/orgs","repos_url":"https://api.github.com/users/siberex/repos","events_url":"https://api.github.com/users/siberex/events{/privacy}","received_events_url":"https://api.github.com/users/siberex/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":1634867650,"node_id":"MDU6TGFiZWwxNjM0ODY3NjUw","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-nullable","name":"comp-nullable","color":"b5bcff","default":false,"description":"Nulls related"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2018-07-16T07:15:00Z","updated_at":"2020-06-23T22:51:35Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Expected result:\r\n\r\n```sql\r\nSELECT transform(0, [0, 1], ['ZERO', 'ONE'], 'DEFAULT') AS result\r\n-- ZERO\r\n```\r\n\r\nUnexpected result, always gives NULL:\r\n```sql\r\nSELECT transform(0, [0, 1], ['ZERO', 'ONE'], NULL) AS result\r\n-- ┌─result─┐\r\n-- │ ᴺᵁᴸᴸ   │\r\n-- └────────┘\r\n--\r\n-- 1 rows in set. Elapsed: 0.003 sec.\r\n```\r\n\r\nSame for the `CASE` operator:\r\n\r\n```sql\r\nSELECT CASE 1\r\n  WHEN 0 THEN 'ZERO'\r\n  WHEN 1 THEN 'ONE'\r\n  ELSE 'NONE'\r\nEND AS result\r\n-- ONE\r\n\r\nSELECT CASE 1\r\n  WHEN 0 THEN NULL\r\n  WHEN 1 THEN 'ONE'\r\n  ELSE 'NONE'\r\nEND AS result\r\n-- ┌─result─┐\r\n-- │ ᴺᵁᴸᴸ   │\r\n-- └────────┘\r\n```\r\n\r\nClickHouse client version 1.1.54390.\r\nClickHouse server version 1.1.54390.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/2655/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/2655/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/2621","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/2621/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/2621/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/2621/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/2621","id":339747535,"node_id":"MDU6SXNzdWUzMzk3NDc1MzU=","number":2621,"title":"[MV] неполные данные","user":{"login":"urykhy","id":1411834,"node_id":"MDQ6VXNlcjE0MTE4MzQ=","avatar_url":"https://avatars.githubusercontent.com/u/1411834?v=4","gravatar_id":"","url":"https://api.github.com/users/urykhy","html_url":"https://github.com/urykhy","followers_url":"https://api.github.com/users/urykhy/followers","following_url":"https://api.github.com/users/urykhy/following{/other_user}","gists_url":"https://api.github.com/users/urykhy/gists{/gist_id}","starred_url":"https://api.github.com/users/urykhy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/urykhy/subscriptions","organizations_url":"https://api.github.com/users/urykhy/orgs","repos_url":"https://api.github.com/users/urykhy/repos","events_url":"https://api.github.com/users/urykhy/events{/privacy}","received_events_url":"https://api.github.com/users/urykhy/received_events","type":"User","site_admin":false},"labels":[{"id":1350221495,"node_id":"MDU6TGFiZWwxMzUwMjIxNDk1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-matview","name":"comp-matview","color":"b5bcff","default":false,"description":"Materialized views"},{"id":1401894928,"node_id":"MDU6TGFiZWwxNDAxODk0OTI4","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-zookeeper","name":"comp-zookeeper","color":"b5bcff","default":false,"description":"Zookeeper"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":11,"created_at":"2018-07-10T08:45:36Z","updated_at":"2020-10-29T20:21:34Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"версия: 1.1.54385\r\nZK: 3.5.2\r\n\r\nпосле обновления - появилось расхождение между таблицей и MV:\r\nпроверочный запрос:\r\n```sql\r\nSELECT date, h, shows1, shows2\r\nFROM\r\n  (SELECT date, toHour(timestamp) as h, sum(ev_type = 0) AS shows1\r\n   FROM events_local\r\n   WHERE date BETWEEN '2018-07-09' AND '2018-07-10'\r\n   GROUP BY date, h) \r\nANY LEFT JOIN\r\n  (SELECT date, toHour(timestamp) as h, sumIf(count, event_type = 0) AS shows2\r\n   FROM hour_banner_events_local\r\n   WHERE date BETWEEN '2018-07-09' AND '2018-07-10'\r\n   GROUP BY date, h)\r\nUSING date, h\r\nWHERE shows1 != shows2\r\norder by date, h asc\r\n```\r\ndate |h|shows1|shows2\r\n-------|--|------|------\r\n10/07/18 | 8 | 19,603,645 | 19,481,276 |\r\n* в основной таблице (events_local/ReplicatedMergeTree) - данные корректны\r\n* в MV (hour_banner_events_local/ReplicatedSummingMergeTree) - отсутствует часть данных\r\n* расхождения есть не каждый час\r\n* программа заливающая данные периодически получает 500, после чего повторяет попытку загрузки данных.\r\n* в CH есть ошибки вида _2018.07.10 08:22:35: ZooKeeper session has been expired.: while pushing to view hour_banner_events_local_.\r\n* в графите сильно выросли ZooKeeperExceptions: ![image](https://user-images.githubusercontent.com/1411834/42498724-a25749b4-8435-11e8-96de-d863b06e5b6c.png)\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/2621/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/2621/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/2451","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/2451/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/2451/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/2451/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/2451","id":327922219,"node_id":"MDU6SXNzdWUzMjc5MjIyMTk=","number":2451,"title":"[Enhancement Request] Method to restrict user access to system database information","user":{"login":"ryn9","id":37161353,"node_id":"MDQ6VXNlcjM3MTYxMzUz","avatar_url":"https://avatars.githubusercontent.com/u/37161353?v=4","gravatar_id":"","url":"https://api.github.com/users/ryn9","html_url":"https://github.com/ryn9","followers_url":"https://api.github.com/users/ryn9/followers","following_url":"https://api.github.com/users/ryn9/following{/other_user}","gists_url":"https://api.github.com/users/ryn9/gists{/gist_id}","starred_url":"https://api.github.com/users/ryn9/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ryn9/subscriptions","organizations_url":"https://api.github.com/users/ryn9/orgs","repos_url":"https://api.github.com/users/ryn9/repos","events_url":"https://api.github.com/users/ryn9/events{/privacy}","received_events_url":"https://api.github.com/users/ryn9/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":{"login":"vitlibar","id":45142681,"node_id":"MDQ6VXNlcjQ1MTQyNjgx","avatar_url":"https://avatars.githubusercontent.com/u/45142681?v=4","gravatar_id":"","url":"https://api.github.com/users/vitlibar","html_url":"https://github.com/vitlibar","followers_url":"https://api.github.com/users/vitlibar/followers","following_url":"https://api.github.com/users/vitlibar/following{/other_user}","gists_url":"https://api.github.com/users/vitlibar/gists{/gist_id}","starred_url":"https://api.github.com/users/vitlibar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vitlibar/subscriptions","organizations_url":"https://api.github.com/users/vitlibar/orgs","repos_url":"https://api.github.com/users/vitlibar/repos","events_url":"https://api.github.com/users/vitlibar/events{/privacy}","received_events_url":"https://api.github.com/users/vitlibar/received_events","type":"User","site_admin":false},"assignees":[{"login":"vitlibar","id":45142681,"node_id":"MDQ6VXNlcjQ1MTQyNjgx","avatar_url":"https://avatars.githubusercontent.com/u/45142681?v=4","gravatar_id":"","url":"https://api.github.com/users/vitlibar","html_url":"https://github.com/vitlibar","followers_url":"https://api.github.com/users/vitlibar/followers","following_url":"https://api.github.com/users/vitlibar/following{/other_user}","gists_url":"https://api.github.com/users/vitlibar/gists{/gist_id}","starred_url":"https://api.github.com/users/vitlibar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vitlibar/subscriptions","organizations_url":"https://api.github.com/users/vitlibar/orgs","repos_url":"https://api.github.com/users/vitlibar/repos","events_url":"https://api.github.com/users/vitlibar/events{/privacy}","received_events_url":"https://api.github.com/users/vitlibar/received_events","type":"User","site_admin":false}],"milestone":null,"comments":7,"created_at":"2018-05-30T22:29:17Z","updated_at":"2020-07-08T14:01:52Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Would it be possible for an enhancement that would restrict user access to system database information?\r\n\r\nUser restrictions appear to be limited to the 'allow_databases' heuristic and application of a profile with the 'readonly' heuristic applied. Seen here: [https://clickhouse.yandex/docs/en/operations/access_rights/](url)\r\n\r\nWith those applied, though, a user still has read access to the system database. There are tables there that contain information that contain information that would be beneficial to restrict. \r\n\r\nSome examples:\r\n\r\nAllow restrictions on system.query_log. This table appears to show all the queries made to the system, and some requester information. We likely don't want one user to see what other users are querying.\r\n\r\nAllow restrictions on system.databases, system.tables, system.columns, etc.. when the user does not have access those entries. We likely don't want one user to gain information on resources that are not supposed to have access to.\r\n\r\nAllow restrictions on system.build_options, system.clusters, system.metrics, system.parts, system.parts_columns, system.processes, system.replicas, system.replication_queue, system.settings, etc.  These contain system information we likely do not want regular users to have access to.\r\n\r\nIf granular access is not possible, perhaps a profile heuristic (similar to the 'readonly' heuristic) could at least be created that would provide only least-privileged style access to these resources?\r\n\r\n\r\nMany thanks\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/2451/reactions","total_count":3,"+1":3,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/2451/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/2446","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/2446/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/2446/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/2446/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/2446","id":327765072,"node_id":"MDU6SXNzdWUzMjc3NjUwNzI=","number":2446,"title":"REST API status codes","user":{"login":"peteychuk","id":3789870,"node_id":"MDQ6VXNlcjM3ODk4NzA=","avatar_url":"https://avatars.githubusercontent.com/u/3789870?v=4","gravatar_id":"","url":"https://api.github.com/users/peteychuk","html_url":"https://github.com/peteychuk","followers_url":"https://api.github.com/users/peteychuk/followers","following_url":"https://api.github.com/users/peteychuk/following{/other_user}","gists_url":"https://api.github.com/users/peteychuk/gists{/gist_id}","starred_url":"https://api.github.com/users/peteychuk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/peteychuk/subscriptions","organizations_url":"https://api.github.com/users/peteychuk/orgs","repos_url":"https://api.github.com/users/peteychuk/repos","events_url":"https://api.github.com/users/peteychuk/events{/privacy}","received_events_url":"https://api.github.com/users/peteychuk/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2018-05-30T14:46:31Z","updated_at":"2020-10-29T19:46:16Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Why don't you use [REST API](http://www.restapitutorial.com/httpstatuscodes.html) status codes instead of [\"random\" status numbers](https://github.com/yandex/ClickHouse/blob/9be89bd0d47fa8109691191b61524b812cf1c55c/dbms/src/Common/ErrorCodes.cpp)?\r\nI mean, is there some reason to use this particular approach with internal numbers?\r\n\r\nAnyway, it would be a great feature to see REST status codes in response (and for custom codes as usual uses >=1000).","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/2446/reactions","total_count":2,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/2446/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/2434","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/2434/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/2434/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/2434/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/2434","id":327106421,"node_id":"MDU6SXNzdWUzMjcxMDY0MjE=","number":2434,"title":"Clickhouse get lost when multiple CH instances are running on the same host","user":{"login":"vfoucault","id":8577517,"node_id":"MDQ6VXNlcjg1Nzc1MTc=","avatar_url":"https://avatars.githubusercontent.com/u/8577517?v=4","gravatar_id":"","url":"https://api.github.com/users/vfoucault","html_url":"https://github.com/vfoucault","followers_url":"https://api.github.com/users/vfoucault/followers","following_url":"https://api.github.com/users/vfoucault/following{/other_user}","gists_url":"https://api.github.com/users/vfoucault/gists{/gist_id}","starred_url":"https://api.github.com/users/vfoucault/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vfoucault/subscriptions","organizations_url":"https://api.github.com/users/vfoucault/orgs","repos_url":"https://api.github.com/users/vfoucault/repos","events_url":"https://api.github.com/users/vfoucault/events{/privacy}","received_events_url":"https://api.github.com/users/vfoucault/received_events","type":"User","site_admin":false},"labels":[{"id":386401507,"node_id":"MDU6TGFiZWwzODY0MDE1MDc=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/enhancement","name":"enhancement","color":"84b6eb","default":true,"description":null},{"id":386401508,"node_id":"MDU6TGFiZWwzODY0MDE1MDg=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/help%20wanted","name":"help wanted","color":"128A0C","default":true,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2018-05-28T19:52:19Z","updated_at":"2020-04-20T08:21:52Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"On a machine with ip aliases, it is fairly easy to setup multiple clickhouse instances that will be binded to a specified ip.\r\n\r\nwith \r\n\r\n```c++\r\ninline bool isLocal(const Cluster::Address & address, const Poco::Net::SocketAddress & resolved_address, UInt16 clickhouse_port)\r\n{\r\n    ///    If there is replica, for which:\r\n    /// - its port is the same that the server is listening;\r\n    /// - its host is resolved to set of addresses, one of which is the same as one of addresses of network interfaces of the server machine*;\r\n    /// then we must go to this shard without any inter-process communication.\r\n    ///\r\n    /// * - this criteria is somewhat approximate.\r\n    ///\r\n    /// Also, replica is considered non-local, if it has default database set\r\n    ///  (only reason is to avoid query rewrite).\r\n\r\n    return address.default_database.empty() && isLocalAddress(resolved_address, clickhouse_port);\r\n}\r\n```\r\n\r\nClickhouse will treat the two instances as in the same process, which is false, inducing errors in sharding.\r\n\r\nI've seen the parameter `treat_local_as_remote`  for the Cluster Class but that is not updateable and default to `false`\r\n\r\nIt would be nice to have a settable `treat_local_as_remote` like setting to enforce tcp instead of local process.\r\n\r\n\r\n\r\nsystem.clusters table with 2 shards per host\r\n\r\n```sql\r\nSELECT *\r\nFROM system.clusters\r\n\r\n┌─cluster─────────────────────┬─shard_num─┬─shard_weight─┬─replica_num─┬─host_name────┬─host_address─┬──port─┬─is_local─┬─user────┬─default_database─┐\r\n│ clickhouse2                 │         1 │            1 │           1 │ 10.0.0.1     │ 10.0.0.1     │  9000 │        1 │ default │                  │\r\n│ clickhouse2                 │         2 │            1 │           1 │ 10.0.0.2     │ 10.0.0.2     │  9000 │        1 │ default │                  │\r\n│ clickhouse2                 │         3 │            1 │           1 │ 10.0.0.3     │ 10.0.0.3     │  9000 │        0 │ default │                  │\r\n│ clickhouse2                 │         4 │            1 │           1 │ 10.0.0.4     │ 10.0.0.4     │  9000 │        0 │ default │                  │\r\n│ test_shard_localhost        │         1 │            1 │           1 │ localhost    │ 127.0.0.1    │  9000 │        0 │ default │                  │\r\n│ test_shard_localhost_secure │         1 │            1 │           1 │ localhost    │ 127.0.0.1    │  9440 │        0 │ default │                  │\r\n└─────────────────────────────┴───────────┴──────────────┴─────────────┴──────────────┴──────────────┴───────┴──────────┴─────────┴──────────────────┘\r\n```\r\n\r\nChanging the instance port is a working turn around which I'd like to avoid.\r\n\r\nsystem.clusters table with 2 shards per host with custom tcp ports\r\n```xml\r\n<yandex>\r\n   <tcp_port>9001</tcp_port>\r\n</yandex>\r\n```\r\n\r\n```sql\r\nSELECT *\r\nFROM system.clusters\r\n\r\n┌─cluster─────────────────────┬─shard_num─┬─shard_weight─┬─replica_num─┬─host_name────┬─host_address─┬──port─┬─is_local─┬─user────┬─default_database─┐\r\n│ clickhouse2                 │         1 │            1 │           1 │ 10.0.0.1     │ 10.0.0.1     │  9001 │        1 │ default │                  │\r\n│ clickhouse2                 │         2 │            1 │           1 │ 10.0.0.2     │ 10.0.0.2     │  9002 │        0 │ default │                  │\r\n│ clickhouse2                 │         3 │            1 │           1 │ 10.0.0.3     │ 10.0.0.3     │  9001 │        0 │ default │                  │\r\n│ clickhouse2                 │         4 │            1 │           1 │ 10.0.0.4     │ 10.0.0.4     │  9002 │        0 │ default │                  │\r\n│ test_shard_localhost        │         1 │            1 │           1 │ localhost    │ 127.0.0.1    │  9000 │        0 │ default │                  │\r\n│ test_shard_localhost_secure │         1 │            1 │           1 │ localhost    │ 127.0.0.1    │  9440 │        0 │ default │                  │\r\n└─────────────────────────────┴───────────┴──────────────┴─────────────┴──────────────┴──────────────┴───────┴──────────┴─────────┴──────────────────┘\r\n````\r\nch: 1.1.54378\r\nEnterprise linux\r\n\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/2434/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/2434/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/2389","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/2389/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/2389/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/2389/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/2389","id":324257695,"node_id":"MDU6SXNzdWUzMjQyNTc2OTU=","number":2389,"title":"MATERIALIZED VIEW default value","user":{"login":"paruru48","id":9351160,"node_id":"MDQ6VXNlcjkzNTExNjA=","avatar_url":"https://avatars.githubusercontent.com/u/9351160?v=4","gravatar_id":"","url":"https://api.github.com/users/paruru48","html_url":"https://github.com/paruru48","followers_url":"https://api.github.com/users/paruru48/followers","following_url":"https://api.github.com/users/paruru48/following{/other_user}","gists_url":"https://api.github.com/users/paruru48/gists{/gist_id}","starred_url":"https://api.github.com/users/paruru48/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/paruru48/subscriptions","organizations_url":"https://api.github.com/users/paruru48/orgs","repos_url":"https://api.github.com/users/paruru48/repos","events_url":"https://api.github.com/users/paruru48/events{/privacy}","received_events_url":"https://api.github.com/users/paruru48/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":1350221495,"node_id":"MDU6TGFiZWwxMzUwMjIxNDk1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-matview","name":"comp-matview","color":"b5bcff","default":false,"description":"Materialized views"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2018-05-18T03:24:43Z","updated_at":"2020-05-01T15:17:37Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"When I create a `MATERIALIZED VIEW` to convert data from `Kafka Engine` to existing table, but the query doesn't contain all columns of the table, even column with default value clickhouse always issues error: `Expected column dummy: while pushing to view default.forward`\r\n\r\n```\r\nCREATE TABLE session (\r\n    day Date,\r\n    status FixedString(1),\r\n    src String,\r\n    uid String,\r\n    session String,\r\n    dummy String DEFAULT ''\r\n) ENGINE = MergeTree(day, (day, uid), 32);\r\n\r\nCREATE TABLE queue (\r\n    timestamp UInt64,\r\n    status FixedString(1),\r\n    src String,\r\n    uid String,\r\n    session String,\r\n    dst String,\r\n) ENGINE = Kafka('localhost:9092', 'session', 'group1_clickhouse', 'JSONEachRow');\r\n\r\nCREATE MATERIALIZED VIEW IF NOT EXISTS forward\r\n    TO session \r\n    AS SELECT toDate(toDateTime(timestamp)) AS day,uid,status,session,src FROM queue;\r\n```\r\n\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/2389/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/2389/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/2368","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/2368/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/2368/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/2368/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/2368","id":323292478,"node_id":"MDU6SXNzdWUzMjMyOTI0Nzg=","number":2368,"title":"Document recommended procedure to take down nodes for maintenance","user":{"login":"dqminh","id":62707,"node_id":"MDQ6VXNlcjYyNzA3","avatar_url":"https://avatars.githubusercontent.com/u/62707?v=4","gravatar_id":"","url":"https://api.github.com/users/dqminh","html_url":"https://github.com/dqminh","followers_url":"https://api.github.com/users/dqminh/followers","following_url":"https://api.github.com/users/dqminh/following{/other_user}","gists_url":"https://api.github.com/users/dqminh/gists{/gist_id}","starred_url":"https://api.github.com/users/dqminh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dqminh/subscriptions","organizations_url":"https://api.github.com/users/dqminh/orgs","repos_url":"https://api.github.com/users/dqminh/repos","events_url":"https://api.github.com/users/dqminh/events{/privacy}","received_events_url":"https://api.github.com/users/dqminh/received_events","type":"User","site_admin":false},"labels":[{"id":785082162,"node_id":"MDU6TGFiZWw3ODUwODIxNjI=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-documentation","name":"comp-documentation","color":"b5bcff","default":false,"description":"Used to run automatic builds of the documentation"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2018-05-15T16:27:19Z","updated_at":"2019-09-23T11:21:34Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Currently we have a cluster consists of many shards, each shards contains 3 replicas. Would be nice to have some recommendations in official documentation on how to perform node maintenance in the cluster  ( upgrade / restart / etc. ) that causes the least disruptions in the cluster to distributed queries, inserts etc.\r\n\r\nFor example sometimes we observed that when a node comes up from maintenance and trying to catch up on replication and merges, queries sent to it can be slowed down significantly, causing max_concurrent_query limits to be exceeded.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/2368/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/2368/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/2358","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/2358/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/2358/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/2358/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/2358","id":322780981,"node_id":"MDU6SXNzdWUzMjI3ODA5ODE=","number":2358,"title":"Bitwise operators","user":{"login":"aCLr","id":6426720,"node_id":"MDQ6VXNlcjY0MjY3MjA=","avatar_url":"https://avatars.githubusercontent.com/u/6426720?v=4","gravatar_id":"","url":"https://api.github.com/users/aCLr","html_url":"https://github.com/aCLr","followers_url":"https://api.github.com/users/aCLr/followers","following_url":"https://api.github.com/users/aCLr/following{/other_user}","gists_url":"https://api.github.com/users/aCLr/gists{/gist_id}","starred_url":"https://api.github.com/users/aCLr/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/aCLr/subscriptions","organizations_url":"https://api.github.com/users/aCLr/orgs","repos_url":"https://api.github.com/users/aCLr/repos","events_url":"https://api.github.com/users/aCLr/events{/privacy}","received_events_url":"https://api.github.com/users/aCLr/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":1507886722,"node_id":"MDU6TGFiZWwxNTA3ODg2NzIy","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/st-discussion","name":"st-discussion","color":"e5b890","default":false,"description":"The story requires discussion /research / expert help / design & decomposition before will be taken"},{"id":2121263626,"node_id":"MDU6TGFiZWwyMTIxMjYzNjI2","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-mysql","name":"comp-mysql","color":"b5bcff","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2018-05-14T11:42:43Z","updated_at":"2021-08-13T11:05:29Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Очень хочется иметь возможность использовать битовые операторы (`&`, `|`), не только функции (`bidAnd`, `bitOr`). Сами в плюсы, к сожалению, не умеем,  :(","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/2358/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/2358/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/2229","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/2229/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/2229/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/2229/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/2229","id":314913249,"node_id":"MDU6SXNzdWUzMTQ5MTMyNDk=","number":2229,"title":"Metabase with ClickHouse Driver","user":{"login":"jonatasfreitasv","id":8763192,"node_id":"MDQ6VXNlcjg3NjMxOTI=","avatar_url":"https://avatars.githubusercontent.com/u/8763192?v=4","gravatar_id":"","url":"https://api.github.com/users/jonatasfreitasv","html_url":"https://github.com/jonatasfreitasv","followers_url":"https://api.github.com/users/jonatasfreitasv/followers","following_url":"https://api.github.com/users/jonatasfreitasv/following{/other_user}","gists_url":"https://api.github.com/users/jonatasfreitasv/gists{/gist_id}","starred_url":"https://api.github.com/users/jonatasfreitasv/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jonatasfreitasv/subscriptions","organizations_url":"https://api.github.com/users/jonatasfreitasv/orgs","repos_url":"https://api.github.com/users/jonatasfreitasv/repos","events_url":"https://api.github.com/users/jonatasfreitasv/events{/privacy}","received_events_url":"https://api.github.com/users/jonatasfreitasv/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2018-04-17T05:43:29Z","updated_at":"2021-11-09T00:15:02Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Hi guys!!\r\n\r\nPlease all mark in this issue for speed this feature https://github.com/metabase/metabase/issues/3332.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/2229/reactions","total_count":20,"+1":20,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/2229/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/2175","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/2175/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/2175/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/2175/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/2175","id":311514677,"node_id":"MDU6SXNzdWUzMTE1MTQ2Nzc=","number":2175,"title":"[Feature] Create Nested() data structures in views and SELECT queries","user":{"login":"vpanfilov","id":11993879,"node_id":"MDQ6VXNlcjExOTkzODc5","avatar_url":"https://avatars.githubusercontent.com/u/11993879?v=4","gravatar_id":"","url":"https://api.github.com/users/vpanfilov","html_url":"https://github.com/vpanfilov","followers_url":"https://api.github.com/users/vpanfilov/followers","following_url":"https://api.github.com/users/vpanfilov/following{/other_user}","gists_url":"https://api.github.com/users/vpanfilov/gists{/gist_id}","starred_url":"https://api.github.com/users/vpanfilov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vpanfilov/subscriptions","organizations_url":"https://api.github.com/users/vpanfilov/orgs","repos_url":"https://api.github.com/users/vpanfilov/repos","events_url":"https://api.github.com/users/vpanfilov/events{/privacy}","received_events_url":"https://api.github.com/users/vpanfilov/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2018-04-05T08:21:38Z","updated_at":"2020-10-29T19:55:03Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Haven't found any way to create **Nested** tables in views or `SELECT` queries.\r\n\r\n<details>\r\n<summary>I've tried a lot of different ways:</summary>\r\n\r\n```sql\r\nSELECT Nested(1 AS a, 2 AS b) AS nested\r\n\r\nReceived exception from server (version 1.1.54370):\r\nCode: 46. DB::Exception: Received from localhost:9000, ::1. DB::Exception: Unknown function Nested.\r\n```\r\n\r\n```sql\r\nSELECT [[1, 2] AS a, ['Hello', 'World'] AS b] AS nested\r\n\r\nReceived exception from server (version 1.1.54370):\r\nCode: 386. DB::Exception: Received from localhost:9000, ::1. DB::Exception: There is no supertype for types UInt8, String because some of them are String/FixedString and some of them are not.\r\n```\r\n\r\n```sql\r\n:) SELECT ([1, 2] as a, ['Hello', 'World'] as b) AS nested\r\n\r\nSELECT ([1, 2] AS a, ['Hello', 'World'] AS b) AS nested\r\n\r\n┌─nested────────────────────┐\r\n│ ([1,2],['Hello','World']) │\r\n└───────────────────────────┘\r\n\r\n1 rows in set. Elapsed: 0.002 sec.\r\n\r\n:) SELECT ([1, 2] as a, ['Hello', 'World'] as b) AS nested, nested.a\r\n\r\nSELECT\r\n    ([1, 2] AS a, ['Hello', 'World'] AS b) AS nested,\r\n    nested.a\r\n\r\nReceived exception from server (version 1.1.54370):\r\nCode: 47. DB::Exception: Received from localhost:9000, ::1. DB::Exception: Unknown identifier: nested.a.\r\n\r\n0 rows in set. Elapsed: 0.058 sec.\r\n```\r\n\r\n</details>\r\n\r\n&nbsp;\r\n\r\nThis feature can help to use a **Nested** structure for several `groupArray()` calls of varios columns. I mean something like this:\r\n\r\n```sql\r\nWITH\r\n  event == 'purchase' AS is_purchase\r\nSELECT\r\n  customer,\r\n  Nested(\r\n    groupArrayIf(timestamp, is_purchase) AS timestamps,\r\n    groupArrayIf(product, is_purchase) AS products,\r\n    groupArrayIf(price, is_purchase) AS prices,\r\n    groupArrayIf(quantity, is_purchase) AS quantities\r\n  ) AS purchases\r\nFROM event_table\r\nGROUP BY customer\r\n```","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/2175/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/2175/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/2154","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/2154/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/2154/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/2154/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/2154","id":310410252,"node_id":"MDU6SXNzdWUzMTA0MTAyNTI=","number":2154,"title":"Distributed DDL queries fail when interserver_http_host doesn't match `hostname` command","user":{"login":"jpiper","id":986448,"node_id":"MDQ6VXNlcjk4NjQ0OA==","avatar_url":"https://avatars.githubusercontent.com/u/986448?v=4","gravatar_id":"","url":"https://api.github.com/users/jpiper","html_url":"https://github.com/jpiper","followers_url":"https://api.github.com/users/jpiper/followers","following_url":"https://api.github.com/users/jpiper/following{/other_user}","gists_url":"https://api.github.com/users/jpiper/gists{/gist_id}","starred_url":"https://api.github.com/users/jpiper/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpiper/subscriptions","organizations_url":"https://api.github.com/users/jpiper/orgs","repos_url":"https://api.github.com/users/jpiper/repos","events_url":"https://api.github.com/users/jpiper/events{/privacy}","received_events_url":"https://api.github.com/users/jpiper/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2018-04-02T06:48:11Z","updated_at":"2020-09-10T15:30:30Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"I have the situation where the hostname (i.e. the result of `hostname` command)  is different than the advertised hostname in `<interserver_http_host>`\r\n\r\nWhen I try to run a distributed query, i.e. `create table X on cluster prod ...` I get a failure.\r\n\r\n > There is no a local address in host list\r\n\r\nIt seems like the hostname reported by FQDN of the host has to match the one in `<interserver_http_host>`, which might not always be possible (due to multiple interfaces on the host, etc.)","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/2154/reactions","total_count":2,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/2154/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/2120","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/2120/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/2120/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/2120/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/2120","id":308865892,"node_id":"MDU6SXNzdWUzMDg4NjU4OTI=","number":2120,"title":"[Question] groupUniqArrayMergeIf, when the array length becomes longer, the speed becomes slower","user":{"login":"lamberken","id":20113411,"node_id":"MDQ6VXNlcjIwMTEzNDEx","avatar_url":"https://avatars.githubusercontent.com/u/20113411?v=4","gravatar_id":"","url":"https://api.github.com/users/lamberken","html_url":"https://github.com/lamberken","followers_url":"https://api.github.com/users/lamberken/followers","following_url":"https://api.github.com/users/lamberken/following{/other_user}","gists_url":"https://api.github.com/users/lamberken/gists{/gist_id}","starred_url":"https://api.github.com/users/lamberken/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/lamberken/subscriptions","organizations_url":"https://api.github.com/users/lamberken/orgs","repos_url":"https://api.github.com/users/lamberken/repos","events_url":"https://api.github.com/users/lamberken/events{/privacy}","received_events_url":"https://api.github.com/users/lamberken/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2018-03-27T08:16:11Z","updated_at":"2019-11-11T02:54:53Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Hi, I try to use `AggregatingMergeTree` to save the uniq users every day to calculate the intersection\r\nbut when the size of users becomes larger, the speed of query become slower.\r\nminimal sample:\r\n#### Simulation Data\r\n```\r\nDROP TABLE test.dayliyuniqusers;\r\n\r\nCREATE TABLE test.dayliyuniqusers\r\n( \r\n  intotime  Date,\r\n  pageid UInt32,\r\n  users AggregateFunction(groupUniqArray, UInt64)\r\n)\r\nENGINE = AggregatingMergeTree\r\nPARTITION BY (intotime)\r\nORDER BY intotime\r\nSETTINGS index_granularity = 512 ;\r\n\r\nINSERT INTO test.dayliyuniqusers (intotime, pageid, users) \r\nSELECT\r\n  '2018-02-21',\r\n  2538,\r\n  groupUniqArrayState(number) AS users\r\nFROM \r\n(\r\n  select number from system.numbers limit 30000000\r\n);\r\n\r\nINSERT INTO test.dayliyuniqusers (intotime, pageid, users) \r\nSELECT\r\n  '2018-02-22',\r\n  2538,\r\n  groupUniqArrayState(number) AS users\r\nFROM \r\n(\r\n  select number from system.numbers limit 5000000\r\n);\r\n```\r\n\r\n#### Query\r\n```\r\nSELECT \r\n    day1, \r\n    day2\r\nFROM \r\n(\r\n    SELECT \r\n        groupUniqArrayMergeIf(users, intotime = '2018-02-21') AS aa, \r\n        groupUniqArrayMergeIf(users, intotime = '2018-02-22') AS bb, \r\n        length(arrayFilter(x -> (x >= 2), arrayEnumerateUniq(arrayConcat(aa, aa)))) AS day1, \r\n        length(arrayFilter(x -> (x >= 2), arrayEnumerateUniq(arrayConcat(aa, bb)))) AS day2\r\n    FROM test.dayliyuniqusers \r\n) \r\n\r\n\r\n┌─────day1─┬────day2─┐\r\n│ 30000000 │ 5000000 │\r\n└──────────┴─────────┘\r\n\r\n1 rows in set. Elapsed: 11.073 sec. \r\n```\r\n```\r\n↙ Progress: 2.00 rows, 8.21 KB (1.42 rows/s., 5.84 KB/s.) ▏\r\n```\r\n#### Question\r\nHow to optimizate the query, thank you \r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/2120/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/2120/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/2073","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/2073/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/2073/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/2073/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/2073","id":306229073,"node_id":"MDU6SXNzdWUzMDYyMjkwNzM=","number":2073,"title":"Better Hyperloglog cardinality estimation algorithm","user":{"login":"bocharov","id":2346898,"node_id":"MDQ6VXNlcjIzNDY4OTg=","avatar_url":"https://avatars.githubusercontent.com/u/2346898?v=4","gravatar_id":"","url":"https://api.github.com/users/bocharov","html_url":"https://github.com/bocharov","followers_url":"https://api.github.com/users/bocharov/followers","following_url":"https://api.github.com/users/bocharov/following{/other_user}","gists_url":"https://api.github.com/users/bocharov/gists{/gist_id}","starred_url":"https://api.github.com/users/bocharov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bocharov/subscriptions","organizations_url":"https://api.github.com/users/bocharov/orgs","repos_url":"https://api.github.com/users/bocharov/repos","events_url":"https://api.github.com/users/bocharov/events{/privacy}","received_events_url":"https://api.github.com/users/bocharov/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2018-03-18T10:35:16Z","updated_at":"2019-12-13T18:50:09Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Otmar Ertl (@oertl) did a great job on HyperLogLog improvements in his article \"New cardinality estimation algorithms for HyperLogLog sketches\" https://arxiv.org/abs/1702.01284. Later he proposed to change Redis implementation of HyperLogLog (https://github.com/antirez/redis/pull/4749) and @antirez found that the new implementation is around 20% faster, simpler and has lower theoretical error.\r\n\r\nWe could improve ClickHouse `uniqHLL12`, `uniqCombined` aggregate functions and maybe introduce new function `uniqHLL(q, p)(x)` using same algorithm.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/2073/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/2073/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/2014","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/2014/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/2014/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/2014/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/2014","id":303989504,"node_id":"MDU6SXNzdWUzMDM5ODk1MDQ=","number":2014,"title":"would like AvgWeighted, var*Weighted, and stddev*Weighted functions","user":{"login":"bubaflub","id":76328,"node_id":"MDQ6VXNlcjc2MzI4","avatar_url":"https://avatars.githubusercontent.com/u/76328?v=4","gravatar_id":"","url":"https://api.github.com/users/bubaflub","html_url":"https://github.com/bubaflub","followers_url":"https://api.github.com/users/bubaflub/followers","following_url":"https://api.github.com/users/bubaflub/following{/other_user}","gists_url":"https://api.github.com/users/bubaflub/gists{/gist_id}","starred_url":"https://api.github.com/users/bubaflub/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bubaflub/subscriptions","organizations_url":"https://api.github.com/users/bubaflub/orgs","repos_url":"https://api.github.com/users/bubaflub/repos","events_url":"https://api.github.com/users/bubaflub/events{/privacy}","received_events_url":"https://api.github.com/users/bubaflub/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2018-03-09T21:42:18Z","updated_at":"2019-12-13T18:35:45Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Hi,\r\n\r\nI'd like to request some new functions.  There are `quantile*Weighted` functions but no Weighted functions for simple statistics like average, variance, and the standard deviation.  I can do the weighting calculation in the query but I think functions would be easier to use, read, and understand.\r\n\r\nThanks!","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/2014/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/2014/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/1793","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/1793/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/1793/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/1793/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/1793","id":289956488,"node_id":"MDU6SXNzdWUyODk5NTY0ODg=","number":1793,"title":"Using distributed DDL doesn't work with NAT","user":{"login":"tobad357","id":608607,"node_id":"MDQ6VXNlcjYwODYwNw==","avatar_url":"https://avatars.githubusercontent.com/u/608607?v=4","gravatar_id":"","url":"https://api.github.com/users/tobad357","html_url":"https://github.com/tobad357","followers_url":"https://api.github.com/users/tobad357/followers","following_url":"https://api.github.com/users/tobad357/following{/other_user}","gists_url":"https://api.github.com/users/tobad357/gists{/gist_id}","starred_url":"https://api.github.com/users/tobad357/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tobad357/subscriptions","organizations_url":"https://api.github.com/users/tobad357/orgs","repos_url":"https://api.github.com/users/tobad357/repos","events_url":"https://api.github.com/users/tobad357/events{/privacy}","received_events_url":"https://api.github.com/users/tobad357/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":1401254412,"node_id":"MDU6TGFiZWwxNDAxMjU0NDEy","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-dddl","name":"comp-dddl","color":"b5bcff","default":false,"description":"Distributed DDL feature"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2018-01-19T12:14:45Z","updated_at":"2021-02-14T21:11:10Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Currently we run CK in a Kubernetes cluster. The normal way to expose applications in kubernetes is to put them behind a NAT service which has a stable IP and DNS name while the running instance has a IP and name that can change every time Kubernetes restartes\r\n\r\nThe config is using \r\n```\r\n<interserver_http_host>k8s-nat-service-name</interserver_http_host>\r\n```\r\nwhich works great for replicated tables.\r\nHowever when using DML with ```on cluster``` then the command never executes as the node can't find it self in the cluster config due to the config using the k8s-nat-service-name\r\n\r\nIt would be great it the cluster DML could check both hostname and interserver_http_host \r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/1793/reactions","total_count":2,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/1793/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/1712","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/1712/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/1712/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/1712/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/1712","id":284790982,"node_id":"MDU6SXNzdWUyODQ3OTA5ODI=","number":1712,"title":"Marks cache accounting in system.parts","user":{"login":"bobrik","id":89186,"node_id":"MDQ6VXNlcjg5MTg2","avatar_url":"https://avatars.githubusercontent.com/u/89186?v=4","gravatar_id":"","url":"https://api.github.com/users/bobrik","html_url":"https://github.com/bobrik","followers_url":"https://api.github.com/users/bobrik/followers","following_url":"https://api.github.com/users/bobrik/following{/other_user}","gists_url":"https://api.github.com/users/bobrik/gists{/gist_id}","starred_url":"https://api.github.com/users/bobrik/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bobrik/subscriptions","organizations_url":"https://api.github.com/users/bobrik/orgs","repos_url":"https://api.github.com/users/bobrik/repos","events_url":"https://api.github.com/users/bobrik/events{/privacy}","received_events_url":"https://api.github.com/users/bobrik/received_events","type":"User","site_admin":false},"labels":[{"id":386401508,"node_id":"MDU6TGFiZWwzODY0MDE1MDg=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/help%20wanted","name":"help wanted","color":"128A0C","default":true,"description":null},{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2017-12-27T20:30:18Z","updated_at":"2019-11-01T18:38:58Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Currently it's only possible to know how much mark cache is used total:\r\n\r\n![image](https://user-images.githubusercontent.com/89186/34392471-208c8fc0-eb01-11e7-9b14-5a3f8a55d358.png)\r\n\r\nBut it seems impossible to have breakdowns per table. It'd be nice to a column about in-memory marks cache usage in `system.parts` table.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/1712/reactions","total_count":5,"+1":5,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/1712/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/1661","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/1661/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/1661/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/1661/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/1661","id":282948145,"node_id":"MDU6SXNzdWUyODI5NDgxNDU=","number":1661,"title":"[Question] Best practice for single value update (additional table/workaround)","user":{"login":"Slind14","id":3914677,"node_id":"MDQ6VXNlcjM5MTQ2Nzc=","avatar_url":"https://avatars.githubusercontent.com/u/3914677?v=4","gravatar_id":"","url":"https://api.github.com/users/Slind14","html_url":"https://github.com/Slind14","followers_url":"https://api.github.com/users/Slind14/followers","following_url":"https://api.github.com/users/Slind14/following{/other_user}","gists_url":"https://api.github.com/users/Slind14/gists{/gist_id}","starred_url":"https://api.github.com/users/Slind14/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Slind14/subscriptions","organizations_url":"https://api.github.com/users/Slind14/orgs","repos_url":"https://api.github.com/users/Slind14/repos","events_url":"https://api.github.com/users/Slind14/events{/privacy}","received_events_url":"https://api.github.com/users/Slind14/received_events","type":"User","site_admin":false},"labels":[{"id":386401510,"node_id":"MDU6TGFiZWwzODY0MDE1MTA=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/question","name":"question","color":"bfdadc","default":true,"description":""},{"id":845267693,"node_id":"MDU6TGFiZWw4NDUyNjc2OTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/st-need-info","name":"st-need-info","color":"e5b890","default":false,"description":"We need extra data to continue"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":51,"created_at":"2017-12-18T16:53:07Z","updated_at":"2021-06-03T13:27:02Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Hi there,\r\nI have a database which is being populated early on and at a later time there is a single value that can change. In this case whether the content was seen or not.\r\n\r\nIn databases supporting `update` I just change the default boolean from `false` to `true`.\r\nIn Clickhouse my database layout is like this:\r\n\r\n```\r\nCREATE TABLE impressions\r\nENGINE = MergeTree(`date`, (`impressionUUID`, `date`), 8192)\r\nAS SELECT\r\ntoFixedString(UUIDStringToNum(`impressionUUID`), 16) AS `impressionUUID`,\r\ntoDate(`timestamp`) as `date`,\r\n[...]\r\n```\r\n\r\n```\r\nCREATE TABLE impressions_seen\r\nENGINE = MergeTree(`date`, (`impressionUUID`, `date`), 8192)\r\nAS SELECT\r\ntoFixedString(UUIDStringToNum(`impressionUUID`), 16) AS `impressionUUID`,\r\nassumeNotNull(`seen`) AS `seen`,\r\ntoDate(`timestamp`) as `date`,\r\n`timestamp`\r\nFROM log\r\nWHERE `seen` = 1;\r\n```\r\nThe query would be:\r\n```\r\nSELECT\r\n    language as _group,\r\n    toDate(timestamp) as _date,\r\n    [...]\r\n    COUNT(seen) as seen\r\nFROM impressions\r\nANY LEFT JOIN impressions_seen USING(impressionUUID)\r\nWHERE `timestamp` BETWEEN '2017-01-01 00:00:00' AND '2017-11-28 00:00:00'\r\nGROUP BY _group, _date;\r\n```\r\n\r\nNow I do not know the inner workings of ClickHouse. Does it make sense to set the key on `impressionUUID` for both tables instead of the `timestamp`?\r\nIs MergeTree the best engine for the `seen` table?\r\nDoes `date` add any value on the `seen` table? (`seen` is only used in joins)\r\nIs there a way to improve the join, e.g. by counting the hits instead of `seen` which is always `1`?\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/1661/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/1661/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/1655","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/1655/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/1655/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/1655/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/1655","id":282610010,"node_id":"MDU6SXNzdWUyODI2MTAwMTA=","number":1655,"title":"[Feature Request] Pivoting Table Engine ","user":{"login":"iShift","id":426427,"node_id":"MDQ6VXNlcjQyNjQyNw==","avatar_url":"https://avatars.githubusercontent.com/u/426427?v=4","gravatar_id":"","url":"https://api.github.com/users/iShift","html_url":"https://github.com/iShift","followers_url":"https://api.github.com/users/iShift/followers","following_url":"https://api.github.com/users/iShift/following{/other_user}","gists_url":"https://api.github.com/users/iShift/gists{/gist_id}","starred_url":"https://api.github.com/users/iShift/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/iShift/subscriptions","organizations_url":"https://api.github.com/users/iShift/orgs","repos_url":"https://api.github.com/users/iShift/repos","events_url":"https://api.github.com/users/iShift/events{/privacy}","received_events_url":"https://api.github.com/users/iShift/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":1507886722,"node_id":"MDU6TGFiZWwxNTA3ODg2NzIy","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/st-discussion","name":"st-discussion","color":"e5b890","default":false,"description":"The story requires discussion /research / expert help / design & decomposition before will be taken"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2017-12-16T08:44:09Z","updated_at":"2021-04-01T10:41:35Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Clickhouse is best for collecting metrics, but metrics usualy come as short table example: \r\n(example - you get metric from some device, than push it to clickhouse)\r\n\r\n![image](https://user-images.githubusercontent.com/426427/34068846-4413f1dc-e254-11e7-8702-8fc80267b4bd.png)\r\n\r\n\r\nBut columnar DB should save them as long table (for perfomance) for now - if you want to convert short table for long one - you need collector  server + script, that transform metrics, when you have distributed arcitecture it is big problem, because some of metrics (from same device) can be handle on one server and another - on second server. Also that add time lag for adding metric (collector should wait all metric for device and after that - insert it).\r\n\r\n**I have an idea how to solve that problem.**\r\n\r\nClickhouse should have Pivoting table (like pivot function in MSSQL/Oracle) but it should be not function - it should be table type.  When we create that table type - we set some settings for that engine:\r\n\r\n1. static colums (that dont pivoting)\r\n2. Dynamic colums (that pivoting)\r\n3. Backend engine (MergeTree/ReplicatedMergeTree/etc)\r\n\r\n![image](https://user-images.githubusercontent.com/426427/34068879-13a9118e-e255-11e7-8f9d-57d6b69e370a.png)\r\n\r\nSo, if we insert sample table (from my example) clickhouse:\r\n\r\n1. Scan incoming rows\r\n2. Find that last 2 colums are dynamic and get that **metric name** are generator column and **metric result** are result column\r\n3. Clickhouse scan table that we have, and look for columns with name in  **metric name**\r\n4. If we have it - add rows to table\r\n5. If not - ALTER table and add new columns then - insert rows\r\n\r\nAs a result we get that table automaticaly:\r\n![image](https://user-images.githubusercontent.com/426427/34068913-f8895354-e255-11e7-9e4e-864e3bc3f01c.png)\r\n\r\nAnd if clickhouse get new metric (new name in DYNAMIC column) - it ALTER table adding new column, than add new metric.\r\n\r\nThat function can gain huge performance for metrics usage case (when you have distributed collection network) and when you dont know what metrics you should collect tomorrow =) \r\n\r\n\r\n_Russian translation of that:\r\nОчень бы хотелось иметь движок таблиц который позволит на вход принимать два параметра - статический набор колонок (обычные колонки) и две динамические.\r\n\r\nПервая динамическая колонка будет являться генератором колонок, а вторая колонка - значение для первой (наглядно можно посмотреть на таблицах выше). \r\n\r\nДругими словами - когда к вам поступает метрики в формате узкой таблицы и чтобы не создавать структуру таблиц под определенный набор метрик - можно будет посылать метрики в универсальном узком формате, а clickhouse уже сам будет создавать нужные колонки (ALTER TABLE) и писать в них нужные данные.\r\n\r\nЭто очень полезно в том кейсе когда идет распределенная обработка файлов которые в дальнейшем заливаются в clickhouse. Или когда сегодня не известно что завтра собирать надо сильно больше данных. Тк если хранить в узкой таблице - это не оптимально с точки зрения архитектуры CH, если же делать широкую таблицу - то при добавлении метрики надо будет переписывать скрипт который посылает данные в CH + руками делать ALTER.\r\n\r\nИ да, тут нужно использовать или replacing движок или update тк строки могут приходить не равномерно =)_\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/1655/reactions","total_count":19,"+1":17,"-1":0,"laugh":2,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/1655/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/1576","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/1576/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/1576/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/1576/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/1576","id":278499643,"node_id":"MDU6SXNzdWUyNzg0OTk2NDM=","number":1576,"title":"Cannot cancel queries when scalar subqueries are being calculated","user":{"login":"filimonov","id":1549571,"node_id":"MDQ6VXNlcjE1NDk1NzE=","avatar_url":"https://avatars.githubusercontent.com/u/1549571?v=4","gravatar_id":"","url":"https://api.github.com/users/filimonov","html_url":"https://github.com/filimonov","followers_url":"https://api.github.com/users/filimonov/followers","following_url":"https://api.github.com/users/filimonov/following{/other_user}","gists_url":"https://api.github.com/users/filimonov/gists{/gist_id}","starred_url":"https://api.github.com/users/filimonov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/filimonov/subscriptions","organizations_url":"https://api.github.com/users/filimonov/orgs","repos_url":"https://api.github.com/users/filimonov/repos","events_url":"https://api.github.com/users/filimonov/events{/privacy}","received_events_url":"https://api.github.com/users/filimonov/received_events","type":"User","site_admin":false},"labels":[{"id":386401507,"node_id":"MDU6TGFiZWwzODY0MDE1MDc=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/enhancement","name":"enhancement","color":"84b6eb","default":true,"description":null}],"state":"open","locked":false,"assignee":{"login":"KochetovNicolai","id":4092911,"node_id":"MDQ6VXNlcjQwOTI5MTE=","avatar_url":"https://avatars.githubusercontent.com/u/4092911?v=4","gravatar_id":"","url":"https://api.github.com/users/KochetovNicolai","html_url":"https://github.com/KochetovNicolai","followers_url":"https://api.github.com/users/KochetovNicolai/followers","following_url":"https://api.github.com/users/KochetovNicolai/following{/other_user}","gists_url":"https://api.github.com/users/KochetovNicolai/gists{/gist_id}","starred_url":"https://api.github.com/users/KochetovNicolai/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/KochetovNicolai/subscriptions","organizations_url":"https://api.github.com/users/KochetovNicolai/orgs","repos_url":"https://api.github.com/users/KochetovNicolai/repos","events_url":"https://api.github.com/users/KochetovNicolai/events{/privacy}","received_events_url":"https://api.github.com/users/KochetovNicolai/received_events","type":"User","site_admin":false},"assignees":[{"login":"KochetovNicolai","id":4092911,"node_id":"MDQ6VXNlcjQwOTI5MTE=","avatar_url":"https://avatars.githubusercontent.com/u/4092911?v=4","gravatar_id":"","url":"https://api.github.com/users/KochetovNicolai","html_url":"https://github.com/KochetovNicolai","followers_url":"https://api.github.com/users/KochetovNicolai/followers","following_url":"https://api.github.com/users/KochetovNicolai/following{/other_user}","gists_url":"https://api.github.com/users/KochetovNicolai/gists{/gist_id}","starred_url":"https://api.github.com/users/KochetovNicolai/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/KochetovNicolai/subscriptions","organizations_url":"https://api.github.com/users/KochetovNicolai/orgs","repos_url":"https://api.github.com/users/KochetovNicolai/repos","events_url":"https://api.github.com/users/KochetovNicolai/events{/privacy}","received_events_url":"https://api.github.com/users/KochetovNicolai/received_events","type":"User","site_admin":false}],"milestone":null,"comments":16,"created_at":"2017-12-01T15:23:39Z","updated_at":"2021-10-20T00:51:43Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"body":"!!!\r\nUPD:  if you face that issue - please post the sample of the query in comments after checking if reproduces\r\n!!!\r\n\r\nSome queries can't be killed - nor with replace query, nor with kill query.\r\n\r\nSample:\r\n```\r\n\r\nSELECT version()\r\n\r\n┌─version()─┐\r\n│ 1.1.54304 │\r\n└───────────┘\r\n\r\n1 rows in set. Elapsed: 0.001 sec. \r\n\r\n:) select (SELECT max(number) from system.numbers) + 1;\r\n\r\nSELECT \r\n    (\r\n        SELECT max(number)\r\n        FROM system.numbers \r\n    ) + 1\r\n\r\n^CCancelling query.\r\n^C\r\n\r\n> clickhouse-client -m\r\nClickHouse client version 1.1.54304.\r\nConnecting to localhost:9000.\r\nConnected to ClickHouse server version 1.1.54304.\r\n\r\n:) show processlist;\r\n\r\nSHOW PROCESSLIST\r\n\r\n┌─is_initial_query─┬─user────┬─query_id─────────────────────────────┬─address─┬──port─┬─initial_user─┬─initial_query_id─────────────────────┬─initial_address─┬─initial_port─┬─interface─┬─os_user─┬─client_hostname─┬─client_name───────┬─client_version_major─┬─client_version_minor─┬─client_revision─┬─http_method─┬─http_user_agent─┬─quota_key─┬──────elapsed─┬─read_rows─┬─read_bytes─┬─total_rows_approx─┬─written_rows─┬─written_bytes─┬─memory_usage─┬─query───────────────────────────────────────────────┐\r\n│                1 │ default │ 400f52a9-fa09-42ba-856a-aeb442f56b79 │ ::1     │ 47312 │ default      │ 400f52a9-fa09-42ba-856a-aeb442f56b79 │ ::1             │        47312 │         1 │ name    │ host            │ ClickHouse client │                    1 │                    1 │           54304 │           0 │                 │           │ 18.055088508 │         0 │          0 │                 0 │            0 │             0 │      1052672 │ select (SELECT max(number) from system.numbers) + 1 │\r\n└──────────────────┴─────────┴──────────────────────────────────────┴─────────┴───────┴──────────────┴──────────────────────────────────────┴─────────────────┴──────────────┴───────────┴─────────┴─────────────────┴───────────────────┴──────────────────────┴──────────────────────┴─────────────────┴─────────────┴─────────────────┴───────────┴──────────────┴───────────┴────────────┴───────────────────┴──────────────┴───────────────┴──────────────┴─────────────────────────────────────────────────────┘\r\n\r\n```\r\n\r\n(only server restart helps)\r\nAlso  max_execution_time is able to kill that query by timeout.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/1576/reactions","total_count":2,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/1576/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/1453","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/1453/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/1453/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/1453/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/1453","id":271212259,"node_id":"MDU6SXNzdWUyNzEyMTIyNTk=","number":1453,"title":"The result of multiplying 0 by a negative real number is -0","user":{"login":"StarWix","id":6786915,"node_id":"MDQ6VXNlcjY3ODY5MTU=","avatar_url":"https://avatars.githubusercontent.com/u/6786915?v=4","gravatar_id":"","url":"https://api.github.com/users/StarWix","html_url":"https://github.com/StarWix","followers_url":"https://api.github.com/users/StarWix/followers","following_url":"https://api.github.com/users/StarWix/following{/other_user}","gists_url":"https://api.github.com/users/StarWix/gists{/gist_id}","starred_url":"https://api.github.com/users/StarWix/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/StarWix/subscriptions","organizations_url":"https://api.github.com/users/StarWix/orgs","repos_url":"https://api.github.com/users/StarWix/repos","events_url":"https://api.github.com/users/StarWix/events{/privacy}","received_events_url":"https://api.github.com/users/StarWix/received_events","type":"User","site_admin":false},"labels":[{"id":386401507,"node_id":"MDU6TGFiZWwzODY0MDE1MDc=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/enhancement","name":"enhancement","color":"84b6eb","default":true,"description":null},{"id":1365579236,"node_id":"MDU6TGFiZWwxMzY1NTc5MjM2","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/minor","name":"minor","color":"FFF8F8","default":false,"description":"Priority: minor"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2017-11-04T18:11:21Z","updated_at":"2020-05-04T01:57:55Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Actual result:\r\n```\r\nSELECT 0 * -0.1\r\n┌─multiply(0, -0.1)─┐\r\n│                -0 │\r\n└───────────────────┘\r\n```\r\nExpected result: 0","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/1453/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/1453/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/1226","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/1226/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/1226/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/1226/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/1226","id":256650151,"node_id":"MDU6SXNzdWUyNTY2NTAxNTE=","number":1226,"title":"Execution of  ALTER queries on materialized views","user":{"login":"bgaifullin","id":5380830,"node_id":"MDQ6VXNlcjUzODA4MzA=","avatar_url":"https://avatars.githubusercontent.com/u/5380830?v=4","gravatar_id":"","url":"https://api.github.com/users/bgaifullin","html_url":"https://github.com/bgaifullin","followers_url":"https://api.github.com/users/bgaifullin/followers","following_url":"https://api.github.com/users/bgaifullin/following{/other_user}","gists_url":"https://api.github.com/users/bgaifullin/gists{/gist_id}","starred_url":"https://api.github.com/users/bgaifullin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bgaifullin/subscriptions","organizations_url":"https://api.github.com/users/bgaifullin/orgs","repos_url":"https://api.github.com/users/bgaifullin/repos","events_url":"https://api.github.com/users/bgaifullin/events{/privacy}","received_events_url":"https://api.github.com/users/bgaifullin/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":1350221495,"node_id":"MDU6TGFiZWwxMzUwMjIxNDk1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-matview","name":"comp-matview","color":"b5bcff","default":false,"description":"Materialized views"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2017-09-11T10:10:43Z","updated_at":"2019-05-06T21:21:11Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Currently execution of ALTER queries on materialized views has not been fully developed.\r\n(according to documentation)\r\n\r\nIt will be very convenient if materialized view supports:\r\n- ALTER commands which are supported by underlaying table (with the same limitations). \r\n- ALTER to modify the query, which is used to transform data.\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/1226/reactions","total_count":17,"+1":17,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/1226/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/947","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/947/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/947/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/947/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/947","id":240484545,"node_id":"MDU6SXNzdWUyNDA0ODQ1NDU=","number":947,"title":"Proposal: faster ReplacingSortedBlockInputStream","user":{"login":"innerr","id":1285390,"node_id":"MDQ6VXNlcjEyODUzOTA=","avatar_url":"https://avatars.githubusercontent.com/u/1285390?v=4","gravatar_id":"","url":"https://api.github.com/users/innerr","html_url":"https://github.com/innerr","followers_url":"https://api.github.com/users/innerr/followers","following_url":"https://api.github.com/users/innerr/following{/other_user}","gists_url":"https://api.github.com/users/innerr/gists{/gist_id}","starred_url":"https://api.github.com/users/innerr/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/innerr/subscriptions","organizations_url":"https://api.github.com/users/innerr/orgs","repos_url":"https://api.github.com/users/innerr/repos","events_url":"https://api.github.com/users/innerr/events{/privacy}","received_events_url":"https://api.github.com/users/innerr/received_events","type":"User","site_admin":false},"labels":[{"id":386401507,"node_id":"MDU6TGFiZWwzODY0MDE1MDc=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/enhancement","name":"enhancement","color":"84b6eb","default":true,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2017-07-04T19:08:44Z","updated_at":"2021-04-19T23:51:25Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"MergingSortedBlockInputStream is a key streaming module in my opinion.\r\nAlthough it may not directly be responsible for the read/write operations.\r\n\r\nIt's implement as I saw, are throwing all the rows to a priority queue and popping them out.\r\n\r\nI did some tests, the IO throughput of this module is about 80-90MB/s on my computer, since the SSD has 400MB/s bandwidth.\r\n\r\nSo I wander if it can run faster, here is a little thought:\r\n\r\n1. Use multi threads pipelining, sort and prepare next batch of blocks even current blocks are not fully sorted yet. Some of the blocks of the current batch may be cut off by a selected checkpoint (say, a random block's last row).\r\n\r\n2. Check each block's lower and upper bounds, if one's upper bound greater than others (in ASC sorting), that it can be directly read without row comparing.\r\n\r\n3. Use binary search instead of priority queue in some condition (2-3 streams, values are clustered), it may reduce comparing times, and use batch copy rather then row-by-row copy.\r\n\r\nWhat do you think?","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/947/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/947/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/902","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/902/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/902/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/902/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/902","id":237200208,"node_id":"MDU6SXNzdWUyMzcyMDAyMDg=","number":902,"title":"Better error messages in HTTP interface","user":{"login":"silviucpp","id":4814731,"node_id":"MDQ6VXNlcjQ4MTQ3MzE=","avatar_url":"https://avatars.githubusercontent.com/u/4814731?v=4","gravatar_id":"","url":"https://api.github.com/users/silviucpp","html_url":"https://github.com/silviucpp","followers_url":"https://api.github.com/users/silviucpp/followers","following_url":"https://api.github.com/users/silviucpp/following{/other_user}","gists_url":"https://api.github.com/users/silviucpp/gists{/gist_id}","starred_url":"https://api.github.com/users/silviucpp/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/silviucpp/subscriptions","organizations_url":"https://api.github.com/users/silviucpp/orgs","repos_url":"https://api.github.com/users/silviucpp/repos","events_url":"https://api.github.com/users/silviucpp/events{/privacy}","received_events_url":"https://api.github.com/users/silviucpp/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":845247686,"node_id":"MDU6TGFiZWw4NDUyNDc2ODY=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/usability","name":"usability","color":"ebf28c","default":false,"description":""},{"id":1481327553,"node_id":"MDU6TGFiZWwxNDgxMzI3NTUz","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-http","name":"comp-http","color":"b5bcff","default":false,"description":"http protocol related"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2017-06-20T12:56:56Z","updated_at":"2020-10-29T19:28:18Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Hello,\r\n\r\nRight now errors are under the following format:\r\n\r\n\"Code: 82, e.displayText() = DB::Exception: Database db_1_test_api already exists., e.what() = DB::Exception\\n\"\r\n\r\nUnfortunately in order to know what message is and to react properly to this one you need to parse that string which is not the best option as time you can change the error format anytime.\r\n\r\nA better alternative is to return the error messages json-encoded like:\r\n\r\n```\r\n{\r\n    \"code\": 82,\r\n    \"description\": \"Code: 82, e.displayText() = DB::Exception: Database db_1_test_api already exists., e.what() = DB::Exception\\n\"\r\n }\r\n```\r\n\r\nThis way the users get fast access to the error code without parsing any string.\r\n\r\nKind regards,\r\nSilviu","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/902/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/902/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/836","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/836/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/836/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/836/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/836","id":232549281,"node_id":"MDU6SXNzdWUyMzI1NDkyODE=","number":836,"title":"Not able to import Data into a table referenced by Materialized View","user":{"login":"inkrement","id":604528,"node_id":"MDQ6VXNlcjYwNDUyOA==","avatar_url":"https://avatars.githubusercontent.com/u/604528?v=4","gravatar_id":"","url":"https://api.github.com/users/inkrement","html_url":"https://github.com/inkrement","followers_url":"https://api.github.com/users/inkrement/followers","following_url":"https://api.github.com/users/inkrement/following{/other_user}","gists_url":"https://api.github.com/users/inkrement/gists{/gist_id}","starred_url":"https://api.github.com/users/inkrement/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/inkrement/subscriptions","organizations_url":"https://api.github.com/users/inkrement/orgs","repos_url":"https://api.github.com/users/inkrement/repos","events_url":"https://api.github.com/users/inkrement/events{/privacy}","received_events_url":"https://api.github.com/users/inkrement/received_events","type":"User","site_admin":false},"labels":[{"id":386401507,"node_id":"MDU6TGFiZWwzODY0MDE1MDc=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/enhancement","name":"enhancement","color":"84b6eb","default":true,"description":null},{"id":845247686,"node_id":"MDU6TGFiZWw4NDUyNDc2ODY=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/usability","name":"usability","color":"ebf28c","default":false,"description":""},{"id":1350221495,"node_id":"MDU6TGFiZWwxMzUwMjIxNDk1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-matview","name":"comp-matview","color":"b5bcff","default":false,"description":"Materialized views"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2017-05-31T12:15:48Z","updated_at":"2020-10-14T18:20:39Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"I already \"reported\" this problem in the english telegram chat, but I think this here is a better place for bug reports. The problem is that I was not able to import data into an empty table. I wanted to reimport my dataset and so I droped a existing table (`twitter_matching`), recreated it and tried to import a TSV file, but I got the following error:\r\n\r\n> DB::Exception: Not found column low_un in block. There are only columns: channel_id, username\r\n\r\nThe TSV as well as the table itself do not have a column named low_un, which was very confusing.\r\n```sql\r\nCREATE TABLE yt.twitter_matching (\r\n  channel_id String,\r\n  username String\r\n) ENGINE=Memory;\r\n```\r\nBut I have a materialized view, that references this table and after deleting the view the import worked. I don't know if this behaviour is intended, but I think at least the error is a bit confusing and should be updated.\r\n\r\nThe view looks like this (and it has a column named low_un):\r\n```sql\r\nCREATE MATERIALIZED VIEW yt.twitter ENGINE=MergeTree(date, (channel_id, date), 8192) POPULATE AS \r\n  SELECT channel_id,date,username,retweets,followers,friends,listings,statuses,favourites \r\n  FROM (SELECT lowerUTF8(username) as low_un, channel_id from yt.twitter_matching) as matching ALL INNER JOIN (SELECT lowerUTF8(username) as low_un, * FROM yt.twitter1_raw UNION ALL \r\n  SELECT lowerUTF8(username) as low_un, * FROM yt.twitter2_raw) AS tw USING low_un;\r\n```","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/836/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/836/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/828","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/828/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/828/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/828/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/828","id":231569445,"node_id":"MDU6SXNzdWUyMzE1Njk0NDU=","number":828,"title":"The bar() function doesn't add up spaces to align to the width","user":{"login":"hatarist","id":2741725,"node_id":"MDQ6VXNlcjI3NDE3MjU=","avatar_url":"https://avatars.githubusercontent.com/u/2741725?v=4","gravatar_id":"","url":"https://api.github.com/users/hatarist","html_url":"https://github.com/hatarist","followers_url":"https://api.github.com/users/hatarist/followers","following_url":"https://api.github.com/users/hatarist/following{/other_user}","gists_url":"https://api.github.com/users/hatarist/gists{/gist_id}","starred_url":"https://api.github.com/users/hatarist/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hatarist/subscriptions","organizations_url":"https://api.github.com/users/hatarist/orgs","repos_url":"https://api.github.com/users/hatarist/repos","events_url":"https://api.github.com/users/hatarist/events{/privacy}","received_events_url":"https://api.github.com/users/hatarist/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":644208617,"node_id":"MDU6TGFiZWw2NDQyMDg2MTc=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/easy%20task","name":"easy task","color":"0e8a16","default":false,"description":"Good for first contributors"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2017-05-26T09:12:17Z","updated_at":"2021-12-23T08:03:50Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"```\r\n:) SELECT bar(3, 0, 10, 10) AS bar_\r\n\r\n┌─bar_─┐\r\n│ ███  │\r\n└──────┘\r\n\r\n:) SELECT bar(3, 0, 10, 10) AS bar_ FORMAT CSV\r\n\r\n\"███\"\r\n```\r\n\r\nI suppose it should fill up the rest of the width with whitespaces?\r\n\r\nI'd expect that:\r\n```\r\n:) SELECT bar(3, 0, 10, 10) AS bar_\r\n\r\n┌─bar_────────┐\r\n│ ███         │\r\n└─────────────┘\r\n```\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/828/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/828/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/751","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/751/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/751/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/751/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/751","id":225690744,"node_id":"MDU6SXNzdWUyMjU2OTA3NDQ=","number":751,"title":"Accuracy of AggregatingMergeTree Materialized View outside of primary key","user":{"login":"andrea-s","id":9706626,"node_id":"MDQ6VXNlcjk3MDY2MjY=","avatar_url":"https://avatars.githubusercontent.com/u/9706626?v=4","gravatar_id":"","url":"https://api.github.com/users/andrea-s","html_url":"https://github.com/andrea-s","followers_url":"https://api.github.com/users/andrea-s/followers","following_url":"https://api.github.com/users/andrea-s/following{/other_user}","gists_url":"https://api.github.com/users/andrea-s/gists{/gist_id}","starred_url":"https://api.github.com/users/andrea-s/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andrea-s/subscriptions","organizations_url":"https://api.github.com/users/andrea-s/orgs","repos_url":"https://api.github.com/users/andrea-s/repos","events_url":"https://api.github.com/users/andrea-s/events{/privacy}","received_events_url":"https://api.github.com/users/andrea-s/received_events","type":"User","site_admin":false},"labels":[{"id":845247686,"node_id":"MDU6TGFiZWw4NDUyNDc2ODY=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/usability","name":"usability","color":"ebf28c","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":10,"created_at":"2017-05-02T13:13:01Z","updated_at":"2020-10-29T20:19:57Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Hello,\r\n\r\nwe have observed that the aggregate merge results (from the combination of -State and -Merge functions) in a materialized view are accurate *only* when grouping or filtering by fields that are contained within the primary key of the view. When filtering (either via -If or via where combination) the calculated numbers are vastly different (orders of magnitude) compared to the ones calculated on the original table.\r\n\r\nIs this expected behavior? Unfortunately I do not have time at the moment to try and setup a toy example, but if someone is interested I would be able to show this on our data.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/751/reactions","total_count":4,"+1":4,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/751/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/720","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/720/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/720/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/720/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/720","id":223547285,"node_id":"MDU6SXNzdWUyMjM1NDcyODU=","number":720,"title":"[HELP] Dask integration","user":{"login":"kszucs","id":961747,"node_id":"MDQ6VXNlcjk2MTc0Nw==","avatar_url":"https://avatars.githubusercontent.com/u/961747?v=4","gravatar_id":"","url":"https://api.github.com/users/kszucs","html_url":"https://github.com/kszucs","followers_url":"https://api.github.com/users/kszucs/followers","following_url":"https://api.github.com/users/kszucs/following{/other_user}","gists_url":"https://api.github.com/users/kszucs/gists{/gist_id}","starred_url":"https://api.github.com/users/kszucs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kszucs/subscriptions","organizations_url":"https://api.github.com/users/kszucs/orgs","repos_url":"https://api.github.com/users/kszucs/repos","events_url":"https://api.github.com/users/kszucs/events{/privacy}","received_events_url":"https://api.github.com/users/kszucs/received_events","type":"User","site_admin":false},"labels":[{"id":386401508,"node_id":"MDU6TGFiZWwzODY0MDE1MDg=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/help%20wanted","name":"help wanted","color":"128A0C","default":true,"description":null},{"id":1446279638,"node_id":"MDU6TGFiZWwxNDQ2Mjc5NjM4","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-3rdparty-libs","name":"comp-3rdparty-libs","color":"b5bcff","default":false,"description":"Related to libraries used by ClickHouse"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":8,"created_at":"2017-04-22T07:34:08Z","updated_at":"2021-10-21T06:23:16Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"We're trying to integrate clickhouse to our current architecture (already using dask and mesos).\r\n\r\nI'm planning to implement clickhouse support for [dask](https://github.com/dask/dask) and [distributed](https://github.com/dask/distributed).\r\n\r\nCould You give me some advice? How to handle data locality? Where to deploy distributed workers? Should I just use HTTP client or work directly on clichouse files?\r\n\r\n@frol migth be interested too","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/720/reactions","total_count":6,"+1":6,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/720/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/674","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/674/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/674/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/674/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/674","id":220797380,"node_id":"MDU6SXNzdWUyMjA3OTczODA=","number":674,"title":"Check for Array(T) type before \"ADD COLUMN\" altering Nested structures","user":{"login":"Abzac","id":2492123,"node_id":"MDQ6VXNlcjI0OTIxMjM=","avatar_url":"https://avatars.githubusercontent.com/u/2492123?v=4","gravatar_id":"","url":"https://api.github.com/users/Abzac","html_url":"https://github.com/Abzac","followers_url":"https://api.github.com/users/Abzac/followers","following_url":"https://api.github.com/users/Abzac/following{/other_user}","gists_url":"https://api.github.com/users/Abzac/gists{/gist_id}","starred_url":"https://api.github.com/users/Abzac/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Abzac/subscriptions","organizations_url":"https://api.github.com/users/Abzac/orgs","repos_url":"https://api.github.com/users/Abzac/repos","events_url":"https://api.github.com/users/Abzac/events{/privacy}","received_events_url":"https://api.github.com/users/Abzac/received_events","type":"User","site_admin":false},"labels":[{"id":386401507,"node_id":"MDU6TGFiZWwzODY0MDE1MDc=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/enhancement","name":"enhancement","color":"84b6eb","default":true,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2017-04-10T23:20:53Z","updated_at":"2020-10-29T19:30:38Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"You can alter Nested structure without any checks like this\r\n\r\n`\r\nALTER TABLE my_table ADD COLUMN existing_nested_structure.new_column1 String;\r\n`\r\n\r\nBut then the table becomes totally unusable. Actually all columns inside Nesteds should have Array(T) type, but it has no checks yet unfortunately.\r\n\r\n**Why is it important**\r\nFor example, you can't do **ARRAY JOIN** for this structure anymore. The data in the table becomes totally broken (if only you can't just drop and make a new column with a correct type again).\r\nEvenmore, when you try to insert a new data in _JsonEachRow_ format like this\r\n`\r\n{... \"existing_nested_structure.new_column1\": [\"string1\", \"string2\", \"string3\"] ...}\r\n`\r\nyou get errors like this\r\n`\r\n\"Code: 26, e.displayText() = DB::Exception: Cannot parse JSON string: expected opening quote: (at row 1), e.what() = DB::Exception\"\r\n`\r\nwhich gives no clue on what is actually happening. This is happening because CH tries to parse JSON not in an independent manner, but rather according to the scheme of the table, so when it sees a column typed like \"_column1 String_\", the data string like '_\"string1\"_' is expected to see (starting with a quote), not a '_[\"string1\", \"string2\", \"string3\"]_' (starting with a bracket).\r\n\r\n**What should be done**\r\nIt is necessary to be added some checks on altering Nested structures, so it can be possible to ADD/MODIFY columns inside Nested to only Array(T) data types, no other.\r\n\r\nSo, this should work\r\n\r\n`\r\nALTER TABLE my_table ADD COLUMN existing_nested_structure.new_column1 Array(String);\r\n`\r\n\r\nwhile this shouldn't\r\n\r\n`\r\nALTER TABLE my_table ADD COLUMN existing_nested_structure.new_column1 String;\r\n`","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/674/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/674/timeline","performed_via_github_app":null}]
