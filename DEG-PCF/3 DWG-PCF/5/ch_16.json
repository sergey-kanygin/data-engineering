[{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/12489","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/12489/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/12489/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/12489/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/12489","id":656513049,"node_id":"MDU6SXNzdWU2NTY1MTMwNDk=","number":12489,"title":"Problem with query result on db different than the default","user":{"login":"natalia-hw","id":3510195,"node_id":"MDQ6VXNlcjM1MTAxOTU=","avatar_url":"https://avatars.githubusercontent.com/u/3510195?v=4","gravatar_id":"","url":"https://api.github.com/users/natalia-hw","html_url":"https://github.com/natalia-hw","followers_url":"https://api.github.com/users/natalia-hw/followers","following_url":"https://api.github.com/users/natalia-hw/following{/other_user}","gists_url":"https://api.github.com/users/natalia-hw/gists{/gist_id}","starred_url":"https://api.github.com/users/natalia-hw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/natalia-hw/subscriptions","organizations_url":"https://api.github.com/users/natalia-hw/orgs","repos_url":"https://api.github.com/users/natalia-hw/repos","events_url":"https://api.github.com/users/natalia-hw/events{/privacy}","received_events_url":"https://api.github.com/users/natalia-hw/received_events","type":"User","site_admin":false},"labels":[{"id":1507886722,"node_id":"MDU6TGFiZWwxNTA3ODg2NzIy","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/st-discussion","name":"st-discussion","color":"e5b890","default":false,"description":"The story requires discussion /research / expert help / design & decomposition before will be taken"},{"id":1575085465,"node_id":"MDU6TGFiZWwxNTc1MDg1NDY1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/unexpected%20behaviour","name":"unexpected behaviour","color":"e088ca","default":false,"description":""},{"id":1634829961,"node_id":"MDU6TGFiZWwxNjM0ODI5OTYx","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-distributed","name":"comp-distributed","color":"b5bcff","default":false,"description":"Distributed tables"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2020-07-14T10:39:15Z","updated_at":"2021-06-13T23:32:18Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"We have a problem with data counted for a specific query run in DB another than `default` in our ClickHouse cluster (sharding and replication).\r\n\r\n**Describe the bug**\r\nWe have two DBs: `default` and `test`.\r\nIn each DB we have the same tables:\r\n- `foo` (ReplicatedMergeTree)\r\n- `bar` (Distributed on `bar_shard`) and `bar_shard` (ReplicatedMergeTree)\r\n\r\nWe fill tables with the same data:\r\n- for `foo`, separately on each shard\r\n- for `bar`, by a distributed table\r\n\r\nWe run the query:\r\n`SELECT count(something_else) FROM bar WHERE something_else IN (SELECT something FROM foo);`\r\n- on DB `default` result count looks as expected\r\n- on DB `test` result count is equal to count of items from `bar_shard` (not `bar` as we expect)\r\n\r\nMaybe there is some misunderstanding from our side, but for DB `default` works just as we expected, only with DB different than `default` we face the issue.\r\n\r\n**How to reproduce**\r\nI've scripted the reproduction steps on the LTS version **20.3.10.75**. Please see https://github.com/nfpp/another_db_issue_repro. It creates the DBs and tables, inserts some data, and performs the queries.\r\n\r\n**Expected behavior**\r\nThe same result of query regardless of DB in usage.\r\n\r\n**Additional context**\r\nFor us, it looks like the query is partially counted on the `default` shard (without `default` DB in the cluster, the query fails).\r\nTemporary we fix it by replacing `foo` by `\"{db_name}\".foo`  in the query.\r\nWorth to mention that with `GLOBAL IN` result is correct, but we by design put those data on each `shard` separately.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/12489/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/12489/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/12482","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/12482/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/12482/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/12482/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/12482","id":656233058,"node_id":"MDU6SXNzdWU2NTYyMzMwNTg=","number":12482,"title":"sql of join many tables needs table Alias, while join two tables needs not","user":{"login":"l1t1","id":23301704,"node_id":"MDQ6VXNlcjIzMzAxNzA0","avatar_url":"https://avatars.githubusercontent.com/u/23301704?v=4","gravatar_id":"","url":"https://api.github.com/users/l1t1","html_url":"https://github.com/l1t1","followers_url":"https://api.github.com/users/l1t1/followers","following_url":"https://api.github.com/users/l1t1/following{/other_user}","gists_url":"https://api.github.com/users/l1t1/gists{/gist_id}","starred_url":"https://api.github.com/users/l1t1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/l1t1/subscriptions","organizations_url":"https://api.github.com/users/l1t1/orgs","repos_url":"https://api.github.com/users/l1t1/repos","events_url":"https://api.github.com/users/l1t1/events{/privacy}","received_events_url":"https://api.github.com/users/l1t1/received_events","type":"User","site_admin":false},"labels":[{"id":1575085465,"node_id":"MDU6TGFiZWwxNTc1MDg1NDY1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/unexpected%20behaviour","name":"unexpected behaviour","color":"e088ca","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2020-07-14T00:14:48Z","updated_at":"2020-10-16T18:09:50Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"```\r\ncreate table t100(a UInt8) engine=MergeTree order by a;\r\ninsert into t100 select * from numbers(1,100);\r\nselect count(*) from t100,t100; -- OK\r\nselect count(*) from t100,t100,t100; -- FAIL\r\n\r\nReceived exception from server (version 20.6.1):\r\nCode: 352. DB::Exception: Received from localhost:9000. DB::Exception: Ambiguous column 't100.a'.\r\n0 rows in set. Elapsed: 0.002 sec.\r\n\r\nselect count(*) from t100,t100 a,t100 b; -- OK\r\nselect count(*) from t100,t100 a,t100 b,t100 c; -- OK\r\n```\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/12482/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/12482/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/12476","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/12476/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/12476/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/12476/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/12476","id":656036273,"node_id":"MDU6SXNzdWU2NTYwMzYyNzM=","number":12476,"title":"PostgreSQL wire protocol: allow driver-specific queries.","user":{"login":"dmitriy-myz","id":4669929,"node_id":"MDQ6VXNlcjQ2Njk5Mjk=","avatar_url":"https://avatars.githubusercontent.com/u/4669929?v=4","gravatar_id":"","url":"https://api.github.com/users/dmitriy-myz","html_url":"https://github.com/dmitriy-myz","followers_url":"https://api.github.com/users/dmitriy-myz/followers","following_url":"https://api.github.com/users/dmitriy-myz/following{/other_user}","gists_url":"https://api.github.com/users/dmitriy-myz/gists{/gist_id}","starred_url":"https://api.github.com/users/dmitriy-myz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dmitriy-myz/subscriptions","organizations_url":"https://api.github.com/users/dmitriy-myz/orgs","repos_url":"https://api.github.com/users/dmitriy-myz/repos","events_url":"https://api.github.com/users/dmitriy-myz/events{/privacy}","received_events_url":"https://api.github.com/users/dmitriy-myz/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2020-07-13T17:59:27Z","updated_at":"2020-07-13T17:59:27Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"**Use case**\r\nWe trying to use postgreSQL wire protocol. As driver we use skunk (not JDBC).\r\nProblem is: it sends [queries](https://github.com/tpolecat/skunk/blob/469843e1cd3cd5f5097064b8254c4003f137fae1/modules/core/src/main/scala/Session.scala#L18) like:\r\n```sql\r\nUNLISTEN *;\r\nRESET ALL\r\n```\r\nwhich of course Clickhouse don't understand.\r\n\r\n**Describe the solution you'd like**\r\nAllow some driver-specific queries?\r\n\r\n\r\n**Describe alternatives you've considered**\r\nAs alternative we will try to  use Recycler.minimal in driver (not tested yet)\r\n\r\n**Additional context**\r\n```\r\n2020.07.13 18:29:35.717838 [ 29827 ] {} <Error> PostgreSQLHandler: DB::Exception: Syntax error: failed at position 1: UNLISTEN *. Expected one of: ALTER query, Query with output, ALTER PROFILE, SHOW PRIVILEGES query, TRUNCATE, KILL, KILL QUERY query, ALTER ROLE, SELECT subquery, DESCRIBE query, SHOW GRANTS, SHOW CREATE, WATCH, SHOW PROCESSLIST query, ALTER POLICY, ALTER USER, CREATE VIEW query, CHECK TABLE, SET ROLE, SELECT query, SELECT, CREATE USER, REVOKE, CREATE DICTIONARY, CREATE PROFILE, SET ROLE DEFAULT, ALTER SETTINGS PROFILE, SYSTEM, ALTER LIVE VIEW, SHOW ACCESS, DROP query, OPTIMIZE query, RENAME TABLE, DROP access entity query, USE, SHOW, DETACH, DESC, SET, OPTIMIZE TABLE, CREATE ROW POLICY, SET DEFAULT ROLE, CREATE POLICY, ALTER ROW POLICY, INSERT query, INSERT INTO, GRANT, RENAME query, SHOW GRANTS query, SHOW PRIVILEGES, DROP, CREATE LIVE VIEW query, SYSTEM query, EXISTS, SHOW PROCESSLIST, ALTER QUOTA, CREATE QUOTA, list of elements, CREATE DATABASE query, SET query, Query, CREATE, WITH, EXCHANGE TABLES, EXISTS or SHOW CREATE query, WATCH query, CREATE ROLE, CREATE SETTINGS PROFILE, SHOW ACCESS query, SHOW CREATE QUOTA query, USE query, ATTACH, ALTER TABLE, DESCRIBE, ShowAccessEntitiesQuery, GRANT or REVOKE query, SELECT query, possibly with UNION, SELECT query, subquery, possibly with UNION, CREATE SETTINGS PROFILE or ALTER SETTINGS PROFILE query, CREATE QUOTA or ALTER QUOTA query, CREATE ROW POLICY or ALTER ROW POLICY query, SHOW [TEMPORARY] TABLES|DATABASES|CLUSTERS|CLUSTER 'name' [[NOT] LIKE 'str'] [LIMIT expr], CREATE ROLE or ALTER ROLE query, SET ROLE or SET DEFAULT ROLE query, CREATE USER or ALTER USER query, CREATE TABLE or ATTACH TABLE query\r\n\r\n```\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/12476/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/12476/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/12462","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/12462/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/12462/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/12462/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/12462","id":655850878,"node_id":"MDU6SXNzdWU2NTU4NTA4Nzg=","number":12462,"title":"Logic or related performance issues","user":{"login":"kainever7","id":8843886,"node_id":"MDQ6VXNlcjg4NDM4ODY=","avatar_url":"https://avatars.githubusercontent.com/u/8843886?v=4","gravatar_id":"","url":"https://api.github.com/users/kainever7","html_url":"https://github.com/kainever7","followers_url":"https://api.github.com/users/kainever7/followers","following_url":"https://api.github.com/users/kainever7/following{/other_user}","gists_url":"https://api.github.com/users/kainever7/gists{/gist_id}","starred_url":"https://api.github.com/users/kainever7/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kainever7/subscriptions","organizations_url":"https://api.github.com/users/kainever7/orgs","repos_url":"https://api.github.com/users/kainever7/repos","events_url":"https://api.github.com/users/kainever7/events{/privacy}","received_events_url":"https://api.github.com/users/kainever7/received_events","type":"User","site_admin":false},"labels":[{"id":756395244,"node_id":"MDU6TGFiZWw3NTYzOTUyNDQ=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/performance","name":"performance","color":"c2e0c6","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2020-07-13T13:26:02Z","updated_at":"2020-07-13T13:26:02Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"[VERSION] \r\n20.4.2.9\r\n\r\n[SQL]\r\n`create table tableA (id String, tag1 Array(String), pt_d String) ENGINE = MergeTree() PARTITION BY pt_d Order by Id SETTINGS index_granularity=8192;`\r\n\r\n`select count() from tableA where pt_d='20190712' AND (hasAny(tag1, ['A','B','C']) OR hasAny(tag1, ['D','E','F']) OR hasAny(tag1, ['G','H','I']));`\r\n\r\nThis SQL has **3 or condition**.  And takes **4 second**.\r\n\r\nIf I write it the other way:\r\n`select count() from tableA where pt_d='20190712' AND (hasAny(tag1, ['A','B','C','D','E','F','G','H','I']));`\r\nIt only takes **600 milliseconds**.\r\n\r\nwhy?\r\n\r\n\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/12462/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/12462/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/12447","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/12447/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/12447/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/12447/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/12447","id":655514713,"node_id":"MDU6SXNzdWU2NTU1MTQ3MTM=","number":12447,"title":"Ensure that no `-Wno` arguments suddenly appear.","user":{"login":"alexey-milovidov","id":18581488,"node_id":"MDQ6VXNlcjE4NTgxNDg4","avatar_url":"https://avatars.githubusercontent.com/u/18581488?v=4","gravatar_id":"","url":"https://api.github.com/users/alexey-milovidov","html_url":"https://github.com/alexey-milovidov","followers_url":"https://api.github.com/users/alexey-milovidov/followers","following_url":"https://api.github.com/users/alexey-milovidov/following{/other_user}","gists_url":"https://api.github.com/users/alexey-milovidov/gists{/gist_id}","starred_url":"https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexey-milovidov/subscriptions","organizations_url":"https://api.github.com/users/alexey-milovidov/orgs","repos_url":"https://api.github.com/users/alexey-milovidov/repos","events_url":"https://api.github.com/users/alexey-milovidov/events{/privacy}","received_events_url":"https://api.github.com/users/alexey-milovidov/received_events","type":"User","site_admin":false},"labels":[{"id":521113272,"node_id":"MDU6TGFiZWw1MjExMTMyNzI=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/build","name":"build","color":"800000","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2020-07-13T01:00:11Z","updated_at":"2020-07-13T01:37:45Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"See https://github.com/ClickHouse/ClickHouse/pull/12448","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/12447/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/12447/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/12445","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/12445/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/12445/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/12445/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/12445","id":655506723,"node_id":"MDU6SXNzdWU2NTU1MDY3MjM=","number":12445,"title":"When new tests are added in PR with code changes, also run them on old ClickHouse version and report results.","user":{"login":"alexey-milovidov","id":18581488,"node_id":"MDQ6VXNlcjE4NTgxNDg4","avatar_url":"https://avatars.githubusercontent.com/u/18581488?v=4","gravatar_id":"","url":"https://api.github.com/users/alexey-milovidov","html_url":"https://github.com/alexey-milovidov","followers_url":"https://api.github.com/users/alexey-milovidov/followers","following_url":"https://api.github.com/users/alexey-milovidov/following{/other_user}","gists_url":"https://api.github.com/users/alexey-milovidov/gists{/gist_id}","starred_url":"https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexey-milovidov/subscriptions","organizations_url":"https://api.github.com/users/alexey-milovidov/orgs","repos_url":"https://api.github.com/users/alexey-milovidov/repos","events_url":"https://api.github.com/users/alexey-milovidov/events{/privacy}","received_events_url":"https://api.github.com/users/alexey-milovidov/received_events","type":"User","site_admin":false},"labels":[{"id":521113272,"node_id":"MDU6TGFiZWw1MjExMTMyNzI=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/build","name":"build","color":"800000","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2020-07-13T00:23:07Z","updated_at":"2021-10-23T04:15:42Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"If new tests did not fail on old ClickHouse version, it may indicate that they does not cover the feature.\r\nBut we cannot use this fact to reject pull request, because we also frequently create PRs that add tests for already working code.\r\n\r\nCC @alesapin ","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/12445/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/12445/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/12436","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/12436/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/12436/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/12436/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/12436","id":655426747,"node_id":"MDU6SXNzdWU2NTU0MjY3NDc=","number":12436,"title":"More flexible expression for PARTITION BY","user":{"login":"olegkv","id":37677268,"node_id":"MDQ6VXNlcjM3Njc3MjY4","avatar_url":"https://avatars.githubusercontent.com/u/37677268?v=4","gravatar_id":"","url":"https://api.github.com/users/olegkv","html_url":"https://github.com/olegkv","followers_url":"https://api.github.com/users/olegkv/followers","following_url":"https://api.github.com/users/olegkv/following{/other_user}","gists_url":"https://api.github.com/users/olegkv/gists{/gist_id}","starred_url":"https://api.github.com/users/olegkv/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/olegkv/subscriptions","organizations_url":"https://api.github.com/users/olegkv/orgs","repos_url":"https://api.github.com/users/olegkv/repos","events_url":"https://api.github.com/users/olegkv/events{/privacy}","received_events_url":"https://api.github.com/users/olegkv/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":1365579236,"node_id":"MDU6TGFiZWwxMzY1NTc5MjM2","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/minor","name":"minor","color":"FFF8F8","default":false,"description":"Priority: minor"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2020-07-12T15:58:13Z","updated_at":"2021-12-05T20:29:17Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"**Use case**\r\n\r\n- Data Warehouse with many tables that have data coming from various sources.\r\n\r\n- All tables are time-based, they all have `DateTime` or `Date` column.\r\n\r\n- Data comes in batches, aligned by various date parts, it can be a batch for an hour or batch for a day, \r\nit depends on type of information stored in each particular table.\r\n\r\n- Each table has a particular fixed batch scheme, one table has hourly batches, another table has daily batches. Each table can have only one batch type.\r\n\r\n- Each batch for a particular table is expected to completely override the previous batch for the same time range. \r\nRows in a batch are not necessarily the same, new batch for the same time period can have a different set of rows.\r\n\r\n- Batches for the same time range can re-imported many times, it is like real-time adjustments for a particular time period.\r\n\r\n- For some \"hot\" time (usually a few days, but can be up to 2 weeks), a given time period is considered \"hot\", \r\nand batches with adjustments (to override previously imported batches) come very frequently.\r\n\r\n- After \"hot\" time elapsed, given time range becomes \"cold\" and it is not updated anymore.\r\n\r\nAs an example, consider some trading system, where\r\n- some preliminary sales records are exported to Data Warehouse in hourly batches, one batch for each physical hour,\r\n- initial batch comes immediately after a physical hour is finished, and then adjusted batches for the same hour\r\ncome multiple times during a period of few days after the initial batch.  It is like some rows in a batch need time for approval or adjustment by some higher authority.\r\n- Data Warehouse users want to run queries to see original batches immediately, and they expect that with time, \r\nrows will be fully corrected (approved, adjusted) and after that, they'll see final results.\r\n- But before final results settle, users want to see preliminary results immediately as they are available.\r\n- After all information for given physical hour is settled, usually in few days, batches for that physical hour stop coming.\r\n\r\nSo, ETL logic implies that data for a batch time period needs to be deleted before that batch can be re-imported.\r\n\r\nUsing `ReplacingMergeTree` for such a scenario does not seem convenient, the ETL process does not track row versions and it would be too expensive to make it do so.\r\n\r\nUsing ALTER TABLE DELETE before importing each batch also does not seem convenient, because mutations would be too frequent for \"hot\" periods and thus too expensive.\r\n\r\nWhat seems more convenient, is to partition data by the hour or day, \r\ndepending on batch size requirement for a particular table and just delete a partition before re-importing a batch.\r\nBut this would create too many parts, monthly partitions are much more optimal for storing long history.\r\n\r\n**Proposed solution**\r\n\r\nWhat seems convenient is partition expressions supporting variable partition ranges, \r\nfor instance, one expression for \"cold\" data, one expression for \"hot\" data and the additional expression\r\nto differentiate hot time range from cold time range.\r\n\r\nSomething like this for hourly batches:\r\n```\r\nPARTITION BY toYYYYMM(TransactionTime)\r\n   HOT_RANGE BY toHour(TransactionTime)\r\n   HOT_RANGE_LIMIT(TransactionTime) 48 HOURS\r\n```\r\nor this for daily batches:\r\n```\r\nPARTITION BY toYYYYMM(TransactionTime)\r\n    HOT_RANGE BY YYYYMMDD(TransactionTime)\r\n    HOT_RANGE_LIMIT(TransactionTime) 14 DAYS\r\n```\r\nOr, alternatively, partition expression like:\r\nPARTITION BY Expr1 LIMIT N1, Expr2 LIMIT N2, Expr3 LIMIT N3 ...\r\nwhere limits are for max number of partitions for each expression.\r\n\r\nWith such a feature, re-importing hourly or daily batch would use simple and fast DROP PARTITION calls and then re-insert new data as usual.\r\n\r\nMergeTree engine would keep hourly (or daily or other time range) partitions for a predefined time (or up to provided max number of partitions for each expression) and then merge them into larger \"cold\" partitions.\r\n\r\nAlso, such a feature could (hopefully) allow optimizing part merges for \"hot\" periods so that large parts are not created for data which is still hot and can still be changed.\r\n\r\n\r\n**Alternatives considered**\r\n\r\nUsing ReplacingMergeTree, using table mutations\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/12436/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/12436/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/12420","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/12420/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/12420/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/12420/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/12420","id":655187842,"node_id":"MDU6SXNzdWU2NTUxODc4NDI=","number":12420,"title":"need the doc of postgres wire interface","user":{"login":"l1t1","id":23301704,"node_id":"MDQ6VXNlcjIzMzAxNzA0","avatar_url":"https://avatars.githubusercontent.com/u/23301704?v=4","gravatar_id":"","url":"https://api.github.com/users/l1t1","html_url":"https://github.com/l1t1","followers_url":"https://api.github.com/users/l1t1/followers","following_url":"https://api.github.com/users/l1t1/following{/other_user}","gists_url":"https://api.github.com/users/l1t1/gists{/gist_id}","starred_url":"https://api.github.com/users/l1t1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/l1t1/subscriptions","organizations_url":"https://api.github.com/users/l1t1/orgs","repos_url":"https://api.github.com/users/l1t1/repos","events_url":"https://api.github.com/users/l1t1/events{/privacy}","received_events_url":"https://api.github.com/users/l1t1/received_events","type":"User","site_admin":false},"labels":[{"id":785082162,"node_id":"MDU6TGFiZWw3ODUwODIxNjI=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-documentation","name":"comp-documentation","color":"b5bcff","default":false,"description":"Used to run automatic builds of the documentation"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2020-07-11T11:03:34Z","updated_at":"2021-02-05T09:31:08Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"(you don't have to strictly follow this form)\r\nversion 20.5 changelog says it supports that feature, but cannot find the example in the document\r\n**Describe the issue**\r\nA clear and concise description of what's wrong in documentation.\r\n\r\n**Additional context**\r\nAdd any other context about the problem here.\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/12420/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/12420/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/12414","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/12414/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/12414/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/12414/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/12414","id":655054438,"node_id":"MDU6SXNzdWU2NTUwNTQ0Mzg=","number":12414,"title":"clickhouse-client does not respect non UTF terminals","user":{"login":"alexey-milovidov","id":18581488,"node_id":"MDQ6VXNlcjE4NTgxNDg4","avatar_url":"https://avatars.githubusercontent.com/u/18581488?v=4","gravatar_id":"","url":"https://api.github.com/users/alexey-milovidov","html_url":"https://github.com/alexey-milovidov","followers_url":"https://api.github.com/users/alexey-milovidov/followers","following_url":"https://api.github.com/users/alexey-milovidov/following{/other_user}","gists_url":"https://api.github.com/users/alexey-milovidov/gists{/gist_id}","starred_url":"https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexey-milovidov/subscriptions","organizations_url":"https://api.github.com/users/alexey-milovidov/orgs","repos_url":"https://api.github.com/users/alexey-milovidov/repos","events_url":"https://api.github.com/users/alexey-milovidov/events{/privacy}","received_events_url":"https://api.github.com/users/alexey-milovidov/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":993003747,"node_id":"MDU6TGFiZWw5OTMwMDM3NDc=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-cli","name":"comp-cli","color":"b5bcff","default":false,"description":"Console & command line"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2020-07-10T21:50:05Z","updated_at":"2020-07-27T08:54:02Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"```\r\nDenny Crane, [17.09.18 06:22]\r\nBTW, clickhouse-client does not respect non UTF terminals.\r\nexport LANG=C\r\nscreen\r\nclickhouse-client\r\nselect 1;\r\n��1� [lockup]\r\n\r\nAlexey Milovidov, [17.09.18 06:29]\r\n[In reply to Denny Crane]\r\nYes, we have this issue in our backlog.\r\n```\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/12414/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/12414/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/12311","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/12311/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/12311/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/12311/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/12311","id":653689046,"node_id":"MDU6SXNzdWU2NTM2ODkwNDY=","number":12311,"title":"Incomplete documentation of CREATE SETTINGS PROFILE statement","user":{"login":"MyroTk","id":44327070,"node_id":"MDQ6VXNlcjQ0MzI3MDcw","avatar_url":"https://avatars.githubusercontent.com/u/44327070?v=4","gravatar_id":"","url":"https://api.github.com/users/MyroTk","html_url":"https://github.com/MyroTk","followers_url":"https://api.github.com/users/MyroTk/followers","following_url":"https://api.github.com/users/MyroTk/following{/other_user}","gists_url":"https://api.github.com/users/MyroTk/gists{/gist_id}","starred_url":"https://api.github.com/users/MyroTk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/MyroTk/subscriptions","organizations_url":"https://api.github.com/users/MyroTk/orgs","repos_url":"https://api.github.com/users/MyroTk/repos","events_url":"https://api.github.com/users/MyroTk/events{/privacy}","received_events_url":"https://api.github.com/users/MyroTk/received_events","type":"User","site_admin":false},"labels":[{"id":785082162,"node_id":"MDU6TGFiZWw3ODUwODIxNjI=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-documentation","name":"comp-documentation","color":"b5bcff","default":false,"description":"Used to run automatic builds of the documentation"},{"id":2011606513,"node_id":"MDU6TGFiZWwyMDExNjA2NTEz","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-rbac","name":"comp-rbac","color":"b5bcff","default":false,"description":"Access control related"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2020-07-09T01:10:47Z","updated_at":"2021-08-12T13:47:54Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"**Describe the issue**\r\nThe statement `CREATE SETTINGS PROFILE` uses a `TO` assignment clause, but the syntax on the documentation doesn't mention this.\r\n\r\n**Additional context**\r\nhttps://clickhouse.tech/docs/en/sql-reference/statements/create/#create-settings-profile-statement\r\n```ClickHouse client version 20.5.2.7 (official build).\r\nConnecting to localhost:9000 as user default.\r\nConnected to ClickHouse server version 20.5.2 revision 54435.\r\n\r\nclicktest :) CREATE SETTINGS PROFILE prof0 TO user0\r\n\r\nCREATE SETTINGS PROFILE prof0 TO user0\r\n\r\nOk.\r\n\r\n0 rows in set. Elapsed: 0.003 sec.\r\n\r\nclicktest :)\r\n\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/12311/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/12311/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/12310","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/12310/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/12310/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/12310/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/12310","id":653686687,"node_id":"MDU6SXNzdWU2NTM2ODY2ODc=","number":12310,"title":"missing documentation for SHOW QUOTAS statement","user":{"login":"MyroTk","id":44327070,"node_id":"MDQ6VXNlcjQ0MzI3MDcw","avatar_url":"https://avatars.githubusercontent.com/u/44327070?v=4","gravatar_id":"","url":"https://api.github.com/users/MyroTk","html_url":"https://github.com/MyroTk","followers_url":"https://api.github.com/users/MyroTk/followers","following_url":"https://api.github.com/users/MyroTk/following{/other_user}","gists_url":"https://api.github.com/users/MyroTk/gists{/gist_id}","starred_url":"https://api.github.com/users/MyroTk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/MyroTk/subscriptions","organizations_url":"https://api.github.com/users/MyroTk/orgs","repos_url":"https://api.github.com/users/MyroTk/repos","events_url":"https://api.github.com/users/MyroTk/events{/privacy}","received_events_url":"https://api.github.com/users/MyroTk/received_events","type":"User","site_admin":false},"labels":[{"id":785082162,"node_id":"MDU6TGFiZWw3ODUwODIxNjI=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-documentation","name":"comp-documentation","color":"b5bcff","default":false,"description":"Used to run automatic builds of the documentation"},{"id":2011606513,"node_id":"MDU6TGFiZWwyMDExNjA2NTEz","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-rbac","name":"comp-rbac","color":"b5bcff","default":false,"description":"Access control related"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2020-07-09T01:03:05Z","updated_at":"2021-08-12T13:42:50Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"**Describe the issue**\r\nThe command `show quotas` exists and works in client, but is missing documentation\r\n\r\n**Additional context**\r\n```ClickHouse client version 20.5.2.7 (official build).\r\nConnecting to localhost:9000 as user default.\r\nConnected to ClickHouse server version 20.5.2 revision 54435.\r\n\r\nclicktest :) show quotas\r\n\r\nSHOW QUOTAS\r\n\r\n┌─name────┐\r\n│ default │\r\n└─────────┘\r\n\r\n1 rows in set. Elapsed: 0.006 sec.\r\n\r\nclicktest :)\r\n\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/12310/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/12310/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/12309","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/12309/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/12309/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/12309/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/12309","id":653685738,"node_id":"MDU6SXNzdWU2NTM2ODU3Mzg=","number":12309,"title":"missing documentation for SHOW ROW POLICIES statement","user":{"login":"MyroTk","id":44327070,"node_id":"MDQ6VXNlcjQ0MzI3MDcw","avatar_url":"https://avatars.githubusercontent.com/u/44327070?v=4","gravatar_id":"","url":"https://api.github.com/users/MyroTk","html_url":"https://github.com/MyroTk","followers_url":"https://api.github.com/users/MyroTk/followers","following_url":"https://api.github.com/users/MyroTk/following{/other_user}","gists_url":"https://api.github.com/users/MyroTk/gists{/gist_id}","starred_url":"https://api.github.com/users/MyroTk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/MyroTk/subscriptions","organizations_url":"https://api.github.com/users/MyroTk/orgs","repos_url":"https://api.github.com/users/MyroTk/repos","events_url":"https://api.github.com/users/MyroTk/events{/privacy}","received_events_url":"https://api.github.com/users/MyroTk/received_events","type":"User","site_admin":false},"labels":[{"id":785082162,"node_id":"MDU6TGFiZWw3ODUwODIxNjI=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-documentation","name":"comp-documentation","color":"b5bcff","default":false,"description":"Used to run automatic builds of the documentation"},{"id":2011606513,"node_id":"MDU6TGFiZWwyMDExNjA2NTEz","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-rbac","name":"comp-rbac","color":"b5bcff","default":false,"description":"Access control related"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2020-07-09T00:59:57Z","updated_at":"2021-08-12T13:43:42Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"**Describe the issue**\r\nThe command `show row policies` exists and works in client, but there's no documentation on the website for the syntax or usage.\r\n\r\n**Additional context**\r\n```ClickHouse client version 20.5.2.7 (official build).\r\nConnecting to localhost:9000 as user default.\r\nConnected to ClickHouse server version 20.5.2 revision 54435.\r\n\r\nclicktest :) show row policies\r\n\r\nSHOW ROW POLICIES\r\n\r\n┌─name───────────────────────┐\r\n│ policy0 ON datasets.ontime │\r\n└────────────────────────────┘\r\n\r\n1 rows in set. Elapsed: 0.008 sec.\r\n\r\nclicktest :) ","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/12309/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/12309/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/12303","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/12303/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/12303/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/12303/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/12303","id":653608779,"node_id":"MDU6SXNzdWU2NTM2MDg3Nzk=","number":12303,"title":"ALTER RENAME COLUMN doesn't work with skip indices.","user":{"login":"CurtizJ","id":20361854,"node_id":"MDQ6VXNlcjIwMzYxODU0","avatar_url":"https://avatars.githubusercontent.com/u/20361854?v=4","gravatar_id":"","url":"https://api.github.com/users/CurtizJ","html_url":"https://github.com/CurtizJ","followers_url":"https://api.github.com/users/CurtizJ/followers","following_url":"https://api.github.com/users/CurtizJ/following{/other_user}","gists_url":"https://api.github.com/users/CurtizJ/gists{/gist_id}","starred_url":"https://api.github.com/users/CurtizJ/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/CurtizJ/subscriptions","organizations_url":"https://api.github.com/users/CurtizJ/orgs","repos_url":"https://api.github.com/users/CurtizJ/repos","events_url":"https://api.github.com/users/CurtizJ/events{/privacy}","received_events_url":"https://api.github.com/users/CurtizJ/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":845247686,"node_id":"MDU6TGFiZWw4NDUyNDc2ODY=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/usability","name":"usability","color":"ebf28c","default":false,"description":""}],"state":"open","locked":false,"assignee":{"login":"alesapin","id":3684697,"node_id":"MDQ6VXNlcjM2ODQ2OTc=","avatar_url":"https://avatars.githubusercontent.com/u/3684697?v=4","gravatar_id":"","url":"https://api.github.com/users/alesapin","html_url":"https://github.com/alesapin","followers_url":"https://api.github.com/users/alesapin/followers","following_url":"https://api.github.com/users/alesapin/following{/other_user}","gists_url":"https://api.github.com/users/alesapin/gists{/gist_id}","starred_url":"https://api.github.com/users/alesapin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alesapin/subscriptions","organizations_url":"https://api.github.com/users/alesapin/orgs","repos_url":"https://api.github.com/users/alesapin/repos","events_url":"https://api.github.com/users/alesapin/events{/privacy}","received_events_url":"https://api.github.com/users/alesapin/received_events","type":"User","site_admin":false},"assignees":[{"login":"alesapin","id":3684697,"node_id":"MDQ6VXNlcjM2ODQ2OTc=","avatar_url":"https://avatars.githubusercontent.com/u/3684697?v=4","gravatar_id":"","url":"https://api.github.com/users/alesapin","html_url":"https://github.com/alesapin","followers_url":"https://api.github.com/users/alesapin/followers","following_url":"https://api.github.com/users/alesapin/following{/other_user}","gists_url":"https://api.github.com/users/alesapin/gists{/gist_id}","starred_url":"https://api.github.com/users/alesapin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alesapin/subscriptions","organizations_url":"https://api.github.com/users/alesapin/orgs","repos_url":"https://api.github.com/users/alesapin/repos","events_url":"https://api.github.com/users/alesapin/events{/privacy}","received_events_url":"https://api.github.com/users/alesapin/received_events","type":"User","site_admin":false}],"milestone":null,"comments":3,"created_at":"2020-07-08T21:28:20Z","updated_at":"2020-12-21T16:31:49Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"**Describe the bug**\r\nIf you try to rename column, which has any skip index on it, you will get an exception.\r\n\r\n**How to reproduce**\r\n```\r\nDROP TABLE IF EXISTS t_ind;\r\n\r\nCREATE TABLE t_ind\r\n(\r\n  a UInt32,\r\n  INDEX i a TYPE minmax GRANULARITY 1\r\n)\r\nENGINE = MergeTree\r\nORDER BY tuple();\r\n\r\nINSERT INTO t_ind SELECT number from numbers(100);\r\n\r\nSELECT count() FROM t_ind where a > 50;\r\n\r\nALTER TABLE t_ind RENAME COLUMN a TO b;\r\n\r\nSELECT count() FROM t_ind where a > 50;\r\n\r\nDROP TABLE IF EXISTS t_ind;\r\n```\r\n\r\nStacktrace:\r\n```\r\n2020.07.09 00:27:44.712766 [ 17109 ] {1cfc1d3a-eb81-4564-998b-350ec3d3f07c} <Error> executeQuery: Code: 47, e.displayText() = DB::Exception: Missing columns: 'a' while processing query: 'a', required columns: 'a', source columns: 'b' (version 20.6.1.1) (from [::1]:55430) (in query: ALTER TABLE t_ind RENAME COLUMN a TO b; ), Stack trace (when copying this message, always include the lines below):\r\n\r\n0. /home/ap11/ClickHouse/build_clang/../contrib/libcxx/include/exception:129: Poco::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int) @ 0x103600cc in /home/ap11/ClickHouse/build_clang/programs/clickhouse\r\n1. /home/ap11/ClickHouse/build_clang/../src/Common/Exception.cpp:38: DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int) @ 0x9ada249 in /home/ap11/ClickHouse/build_clang/programs/clickhouse\r\n2. /home/ap11/ClickHouse/build_clang/../src/Interpreters/SyntaxAnalyzer.cpp:0: DB::SyntaxAnalyzerResult::collectUsedColumns(std::__1::shared_ptr<DB::IAST> const&, bool) @ 0xe0e84aa in /home/ap11/ClickHouse/build_clang/programs/clickhouse\r\n3. /home/ap11/ClickHouse/build_clang/../contrib/libcxx/include/new:253: DB::SyntaxAnalyzer::analyze(std::__1::shared_ptr<DB::IAST>&, DB::NamesAndTypesList const&, std::__1::shared_ptr<DB::IStorage const>, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool) const @ 0xe0ef371 in /home/ap11/ClickHouse/build_clang/programs/clickhouse\r\n4. /home/ap11/ClickHouse/build_clang/../contrib/libcxx/include/memory:4206: DB::IndexDescription::getIndexFromAST(std::__1::shared_ptr<DB::IAST> const&, DB::ColumnsDescription const&, DB::Context const&) @ 0xe20c272 in /home/ap11/ClickHouse/build_clang/programs/clickhouse\r\n5. /home/ap11/ClickHouse/build_clang/../src/Storages/IndicesDescription.cpp:122: DB::IndexDescription::recalculateWithNewColumns(DB::ColumnsDescription const&, DB::Context const&) @ 0xe20cf71 in /home/ap11/ClickHouse/build_clang/programs/clickhouse\r\n6. /home/ap11/ClickHouse/build_clang/../contrib/libcxx/include/iterator:1480: DB::AlterCommands::apply(DB::StorageInMemoryMetadata&, DB::Context const&) const @ 0xe1f645e in /home/ap11/ClickHouse/build_clang/programs/clickhouse\r\n7. /home/ap11/ClickHouse/build_clang/../contrib/libcxx/include/__hash_table:90: DB::MergeTreeData::checkAlterIsPossible(DB::AlterCommands const&, DB::Settings const&) const @ 0xe3e2a53 in /home/ap11/ClickHouse/build_clang/programs/clickhouse\r\n8. /home/ap11/ClickHouse/build_clang/../contrib/libcxx/include/memory:3826: DB::InterpreterAlterQuery::execute() @ 0xde8eaa6 in /home/ap11/ClickHouse/build_clang/programs/clickhouse\r\n9. /home/ap11/ClickHouse/build_clang/../src/Interpreters/executeQuery.cpp:0: DB::executeQueryImpl(char const*, char const*, DB::Context&, bool, DB::QueryProcessingStage::Enum, bool, DB::ReadBuffer*) @ 0xe124073 in /home/ap11/ClickHouse/build_clang/programs/clickhouse\r\n10. /home/ap11/ClickHouse/build_clang/../src/Interpreters/executeQuery.cpp:653: DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum, bool) @ 0xe12344e in /home/ap11/ClickHouse/build_clang/programs/clickhouse\r\n11. /home/ap11/ClickHouse/build_clang/../src/Server/TCPHandler.cpp:0: DB::TCPHandler::runImpl() @ 0xe589ba7 in /home/ap11/ClickHouse/build_clang/programs/clickhouse\r\n12. /home/ap11/ClickHouse/build_clang/../src/Server/TCPHandler.cpp:0: DB::TCPHandler::run() @ 0xe592067 in /home/ap11/ClickHouse/build_clang/programs/clickhouse\r\n13. /home/ap11/ClickHouse/build_clang/../contrib/poco/Net/src/TCPServerConnection.cpp:57: Poco::Net::TCPServerConnection::start() @ 0x102e0587 in /home/ap11/ClickHouse/build_clang/programs/clickhouse\r\n14. /home/ap11/ClickHouse/build_clang/../contrib/libcxx/include/atomic:1036: Poco::Net::TCPServerDispatcher::run() @ 0x102e0a08 in /home/ap11/ClickHouse/build_clang/programs/clickhouse\r\n15. /home/ap11/ClickHouse/build_clang/../contrib/poco/Foundation/src/ThreadPool.cpp:213: Poco::PooledThread::run() @ 0x103bbe77 in /home/ap11/ClickHouse/build_clang/programs/clickhouse\r\n16. /home/ap11/ClickHouse/build_clang/../contrib/poco/Foundation/include/Poco/SharedPtr.h:156: Poco::ThreadImpl::runnableEntry(void*) @ 0x103b9e36 in /home/ap11/ClickHouse/build_clang/programs/clickhouse\r\n17. start_thread @ 0x76db in /lib/x86_64-linux-gnu/libpthread-2.27.so\r\n18. /build/glibc-OTsEL5/glibc-2.27/misc/../sysdeps/unix/sysv/linux/x86_64/clone.S:97: __GI___clone @ 0x12188f in /usr/lib/debug/lib/x86_64-linux-gnu/libc-2.27.so\r\n```","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/12303/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/12303/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/12295","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/12295/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/12295/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/12295/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/12295","id":653344435,"node_id":"MDU6SXNzdWU2NTMzNDQ0MzU=","number":12295,"title":"Engine=Kafka consuming several topics \"Exception during commit attempt: Local: No offset stored\"","user":{"login":"filimonov","id":1549571,"node_id":"MDQ6VXNlcjE1NDk1NzE=","avatar_url":"https://avatars.githubusercontent.com/u/1549571?v=4","gravatar_id":"","url":"https://api.github.com/users/filimonov","html_url":"https://github.com/filimonov","followers_url":"https://api.github.com/users/filimonov/followers","following_url":"https://api.github.com/users/filimonov/following{/other_user}","gists_url":"https://api.github.com/users/filimonov/gists{/gist_id}","starred_url":"https://api.github.com/users/filimonov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/filimonov/subscriptions","organizations_url":"https://api.github.com/users/filimonov/orgs","repos_url":"https://api.github.com/users/filimonov/repos","events_url":"https://api.github.com/users/filimonov/events{/privacy}","received_events_url":"https://api.github.com/users/filimonov/received_events","type":"User","site_admin":false},"labels":[{"id":1334071168,"node_id":"MDU6TGFiZWwxMzM0MDcxMTY4","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-kafka","name":"comp-kafka","color":"b5bcff","default":false,"description":"Kafka Engine"},{"id":1575085465,"node_id":"MDU6TGFiZWwxNTc1MDg1NDY1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/unexpected%20behaviour","name":"unexpected behaviour","color":"e088ca","default":false,"description":""}],"state":"open","locked":false,"assignee":{"login":"filimonov","id":1549571,"node_id":"MDQ6VXNlcjE1NDk1NzE=","avatar_url":"https://avatars.githubusercontent.com/u/1549571?v=4","gravatar_id":"","url":"https://api.github.com/users/filimonov","html_url":"https://github.com/filimonov","followers_url":"https://api.github.com/users/filimonov/followers","following_url":"https://api.github.com/users/filimonov/following{/other_user}","gists_url":"https://api.github.com/users/filimonov/gists{/gist_id}","starred_url":"https://api.github.com/users/filimonov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/filimonov/subscriptions","organizations_url":"https://api.github.com/users/filimonov/orgs","repos_url":"https://api.github.com/users/filimonov/repos","events_url":"https://api.github.com/users/filimonov/events{/privacy}","received_events_url":"https://api.github.com/users/filimonov/received_events","type":"User","site_admin":false},"assignees":[{"login":"filimonov","id":1549571,"node_id":"MDQ6VXNlcjE1NDk1NzE=","avatar_url":"https://avatars.githubusercontent.com/u/1549571?v=4","gravatar_id":"","url":"https://api.github.com/users/filimonov","html_url":"https://github.com/filimonov","followers_url":"https://api.github.com/users/filimonov/followers","following_url":"https://api.github.com/users/filimonov/following{/other_user}","gists_url":"https://api.github.com/users/filimonov/gists{/gist_id}","starred_url":"https://api.github.com/users/filimonov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/filimonov/subscriptions","organizations_url":"https://api.github.com/users/filimonov/orgs","repos_url":"https://api.github.com/users/filimonov/repos","events_url":"https://api.github.com/users/filimonov/events{/privacy}","received_events_url":"https://api.github.com/users/filimonov/received_events","type":"User","site_admin":false}],"milestone":null,"comments":3,"created_at":"2020-07-08T14:28:26Z","updated_at":"2021-09-26T00:52:36Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"body":"Need to reproduce & test (one topic should have data, second - not).\r\n\r\nIt seems librdkafka sends the exception during commit attempt when consuming several topic and one of them had no data (or not exists?), so no offsets were stored for it. \r\n\r\nWe can just ignore that exception, but i'm not sure if it gives guarantees that commits to other topics succeeded...\r\n\r\n```\r\n2020-07-08 13:21:49       339966     42074 Started streaming to 1 attached views\r\n2020-07-08 13:21:49       341209     42074 Already subscribed to topics: [ topic_name, back_topic_name ]\r\n2020-07-08 13:21:49       341240     42074 Already assigned to : [ back_topic_name[4:#], topic_name[4:#] ]\r\n2020-07-08 13:21:49       341493     42074 Rebalance initiated. Revoking partitions: [ back_topic_name[4:#], topic_name[4:#] ]\r\n2020-07-08 13:21:49       344168     42074 Topics/partitions assigned: [ back_topic_name[4:#], topic_name[4:#] ]\r\n2020-07-08 13:21:49       841825     42074 Polled offset INVALID (topic: back_topic_name, partition: 4)\r\n2020-07-08 13:21:49       841893     42074 Polled offset INVALID (topic: topic_name, partition: 4)\r\n2020-07-08 13:21:49       841901     42074 Nothing to commit.\r\n2020-07-08 13:21:49       842136     42074 Started streaming to 1 attached views\r\n2020-07-08 13:21:49       843116     42074 Already subscribed to topics: [ topic_name, back_topic_name ]\r\n2020-07-08 13:21:49       843153     42074 Already assigned to : [ back_topic_name[4:#], topic_name[4:#] ]\r\n2020-07-08 13:21:50       343432     42074 Stalled\r\n2020-07-08 13:21:50       343697     42074 Polled offset INVALID (topic: back_topic_name, partition: 4)\r\n2020-07-08 13:21:50       343714     42074 Polled offset INVALID (topic: topic_name, partition: 4)\r\n2020-07-08 13:21:50       343722     42074 Nothing to commit.\r\n2020-07-08 13:21:50       344118     42074 Stream(s) stalled. Reschedule.\r\n2020-07-08 13:21:50       344180     42074 Execution took 1004 ms.\r\n\r\n\r\n2020-07-08 13:21:52       471868     42064 Started streaming to 1 attached views\r\n2020-07-08 13:21:52       472981     42064 Already subscribed to topics: [ topic_name, back_topic_name ]\r\n2020-07-08 13:21:52       473013     42064 Already assigned to : [ back_topic_name[4:#], topic_name[4:#] ]\r\n2020-07-08 13:21:52       505591     42064 Polled batch of 65536 messages. Offset position: [ back_topic_name[4:65536], topic_name[4:#] ]\r\n2020-07-08 13:21:54       123694     42064 Polled offset 65536 (topic: back_topic_name, partition: 4)\r\n2020-07-08 13:21:54       123753     42064 Polled offset INVALID (topic: topic_name, partition: 4)\r\n2020-07-08 13:21:54       123982     42064 Exception during commit attempt: Local: No offset stored\r\n2020-07-08 13:21:54       124261     42064 Exception during commit attempt: Local: No offset stored\r\n2020-07-08 13:21:54       124403     42064 Exception during commit attempt: Local: No offset stored\r\n2020-07-08 13:21:54       124519     42064 Exception during commit attempt: Local: No offset stored\r\n2020-07-08 13:21:54       124631     42064 Exception during commit attempt: Local: No offset stored\r\n2020-07-08 13:21:54       124709     42064 Re-joining claimed consumer after failure\r\n2020-07-08 13:21:54       132229     42064 Code: 518, e.displayText() = DB::Exception: All commit attempts failed. Last block was already written to target table(s), but was not commited to Kafka., Stack trace (when copying this message, always include the lines below):\r\n\r\n0. Poco::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int) @ 0xbbad39c in /usr/bin/clickhouse\r\n1. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int) @ 0x50061f9 in /usr/bin/clickhouse\r\n2. ? @ 0x4d3b1d1 in /usr/bin/clickhouse\r\n3. DB::KafkaBlockInputStream::commit() @ 0x97945e5 in /usr/bin/clickhouse\r\n4. DB::StorageKafka::streamToViews() @ 0x93920b1 in /usr/bin/clickhouse\r\n5. DB::StorageKafka::threadFunc() @ 0x9392afc in /usr/bin/clickhouse\r\n6. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x93acde7 in /usr/bin/clickhouse\r\n7. DB::BackgroundSchedulePool::threadFunction() @ 0x93ad3ba in /usr/bin/clickhouse\r\n8. ? @ 0x93ad4bd in /usr/bin/clickhouse\r\n9. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x500fa1d in /usr/bin/clickhouse\r\n10. ? @ 0x500e08f in /usr/bin/clickhouse\r\n11. start_thread @ 0x7e65 in /usr/lib64/libpthread-2.17.so\r\n12. __clone @ 0xfe88d in /usr/lib64/libc-2.17.so\r\n (version 20.3.12.112)\r\n2020-07-08 13:21:54       132333     42064 Execution took 1660 ms.\r\n\r\n\r\n2020-07-08 13:22:06       483803     42075 Started streaming to 1 attached views\r\n2020-07-08 13:22:06       489329     42075 Already subscribed to topics: [ topic_name, back_topic_name ]\r\n2020-07-08 13:22:06       489376     42075 Already assigned to : [ back_topic_name[4:#], topic_name[4:#] ]\r\n2020-07-08 13:22:06       489775     42075 Rebalance initiated. Revoking partitions: [ back_topic_name[4:#], topic_name[4:#] ]\r\n2020-07-08 13:22:06       500031     42075 Topics/partitions assigned: [ back_topic_name[4:#], topic_name[4:#] ]\r\n2020-07-08 13:22:06       990092     42075 Polled offset INVALID (topic: back_topic_name, partition: 4)\r\n2020-07-08 13:22:06       990220     42075 Polled offset INVALID (topic: topic_name, partition: 4)\r\n2020-07-08 13:22:06       990232     42075 Nothing to commit.\r\n2020-07-08 13:22:06       990457     42075 Started streaming to 1 attached views\r\n2020-07-08 13:22:06       991485     42075 Already subscribed to topics: [ topic_name, back_topic_name ]\r\n2020-07-08 13:22:06       991519     42075 Already assigned to : [ back_topic_name[4:#], topic_name[4:#] ]\r\n2020-07-08 13:22:07       491778     42075 Stalled\r\n2020-07-08 13:22:07       492046     42075 Polled offset INVALID (topic: back_topic_name, partition: 4)\r\n2020-07-08 13:22:07       492060     42075 Polled offset INVALID (topic: topic_name, partition: 4)\r\n2020-07-08 13:22:07       492068     42075 Nothing to commit.\r\n2020-07-08 13:22:07       492309     42075 Stream(s) stalled. Reschedule.\r\n2020-07-08 13:22:07       492349     42075 Execution took 1008 ms.\r\n\r\n2020-07-08 13:22:11       664099     42064 Started streaming to 1 attached views\r\n2020-07-08 13:22:11       665185     42064 Already subscribed to topics: [ topic_name, back_topic_name ]\r\n2020-07-08 13:22:11       665215     42064 Already assigned to : [ back_topic_name[4:#], topic_name[4:#] ]\r\n2020-07-08 13:22:11       693254     42064 Polled batch of 65536 messages. Offset position: [ back_topic_name[4:65536], topic_name[4:#] ]\r\n2020-07-08 13:22:13       416895     42064 Polled offset 65536 (topic: back_topic_name, partition: 4)\r\n2020-07-08 13:22:13       416956     42064 Polled offset INVALID (topic: topic_name, partition: 4)\r\n2020-07-08 13:22:13       417179     42064 Exception during commit attempt: Local: No offset stored\r\n2020-07-08 13:22:13       417322     42064 Exception during commit attempt: Local: No offset stored\r\n2020-07-08 13:22:13       417445     42064 Exception during commit attempt: Local: No offset stored\r\n2020-07-08 13:22:13       417559     42064 Exception during commit attempt: Local: No offset stored\r\n2020-07-08 13:22:13       417673     42064 Exception during commit attempt: Local: No offset stored\r\n2020-07-08 13:22:13       417757     42064 Re-joining claimed consumer after failure\r\n2020-07-08 13:22:13       428331     42064 Code: 518, e.displayText() = DB::Exception: All commit attempts failed. Last block was already written to target table(s), but was not commited to Kafka., Stack trace (when copying this message, always include the lines below):\r\n\r\n0. Poco::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int) @ 0xbbad39c in /usr/bin/clickhouse\r\n1. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int) @ 0x50061f9 in /usr/bin/clickhouse\r\n2. ? @ 0x4d3b1d1 in /usr/bin/clickhouse\r\n3. DB::KafkaBlockInputStream::commit() @ 0x97945e5 in /usr/bin/clickhouse\r\n4. DB::StorageKafka::streamToViews() @ 0x93920b1 in /usr/bin/clickhouse\r\n5. DB::StorageKafka::threadFunc() @ 0x9392afc in /usr/bin/clickhouse\r\n6. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x93acde7 in /usr/bin/clickhouse\r\n7. DB::BackgroundSchedulePool::threadFunction() @ 0x93ad3ba in /usr/bin/clickhouse\r\n8. ? @ 0x93ad4bd in /usr/bin/clickhouse\r\n9. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x500fa1d in /usr/bin/clickhouse\r\n10. ? @ 0x500e08f in /usr/bin/clickhouse\r\n11. start_thread @ 0x7e65 in /usr/lib64/libpthread-2.17.so\r\n12. __clone @ 0xfe88d in /usr/lib64/libc-2.17.so\r\n (version 20.3.12.112)\r\n2020-07-08 13:22:13       428452     42064 Execution took 1764 ms.\r\n\r\n\r\n\r\n2020-07-08 13:22:23       545138     42078 Started streaming to 1 attached views\r\n2020-07-08 13:22:23       546334     42078 Already subscribed to topics: [ topic_name, back_topic_name ]\r\n2020-07-08 13:22:23       546369     42078 Already assigned to : [ back_topic_name[4:#], topic_name[4:#] ]\r\n2020-07-08 13:22:23       546550     42078 Rebalance initiated. Revoking partitions: [ back_topic_name[4:#], topic_name[4:#] ]\r\n2020-07-08 13:22:23       551026     42078 Topics/partitions assigned: [ back_topic_name[4:#], topic_name[4:#] ]\r\n2020-07-08 13:22:24        46855     42078 Polled offset INVALID (topic: back_topic_name, partition: 4)\r\n2020-07-08 13:22:24        46930     42078 Polled offset INVALID (topic: topic_name, partition: 4)\r\n2020-07-08 13:22:24        46937     42078 Nothing to commit.\r\n2020-07-08 13:22:24        47109     42078 Started streaming to 1 attached views\r\n2020-07-08 13:22:24        48270     42078 Already subscribed to topics: [ topic_name, back_topic_name ]\r\n2020-07-08 13:22:24        48297     42078 Already assigned to : [ back_topic_name[4:#], topic_name[4:#] ]\r\n2020-07-08 13:22:24       550812     42078 Stalled\r\n2020-07-08 13:22:24       551116     42078 Polled offset INVALID (topic: back_topic_name, partition: 4)\r\n2020-07-08 13:22:24       551149     42078 Polled offset INVALID (topic: topic_name, partition: 4)\r\n2020-07-08 13:22:24       551161     42078 Nothing to commit.\r\n2020-07-08 13:22:24       551338     42078 Stream(s) stalled. Reschedule.\r\n2020-07-08 13:22:24       551379     42078 Execution took 1006 ms.\r\n\r\n\r\n2020-07-08 13:22:36       758774     42073 Started streaming to 1 attached views\r\n2020-07-08 13:22:36       759780     42073 Already subscribed to topics: [ topic_name, back_topic_name ]\r\n2020-07-08 13:22:36       759808     42073 Already assigned to : [ back_topic_name[4:#], topic_name[4:#] ]\r\n2020-07-08 13:22:36       784680     42073 Polled batch of 65536 messages. Offset position: [ back_topic_name[4:65536], topic_name[4:#] ]\r\n2020-07-08 13:22:38       681119     42073 Polled offset 65536 (topic: back_topic_name, partition: 4)\r\n2020-07-08 13:22:38       681166     42073 Polled offset INVALID (topic: topic_name, partition: 4)\r\n2020-07-08 13:22:38       681345     42073 Exception during commit attempt: Local: No offset stored\r\n2020-07-08 13:22:38       681459     42073 Exception during commit attempt: Local: No offset stored\r\n2020-07-08 13:22:38       681552     42073 Exception during commit attempt: Local: No offset stored\r\n2020-07-08 13:22:38       681649     42073 Exception during commit attempt: Local: No offset stored\r\n2020-07-08 13:22:38       681752     42073 Exception during commit attempt: Local: No offset stored\r\n2020-07-08 13:22:38       681823     42073 Re-joining claimed consumer after failure\r\n2020-07-08 13:22:38       688311     42073 Code: 518, e.displayText() = DB::Exception: All commit attempts failed. Last block was already written to target table(s), but was not commited to Kafka., Stack trace (when copying this message, always include the lines below):\r\n\r\n0. Poco::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int) @ 0xbbad39c in /usr/bin/clickhouse\r\n1. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int) @ 0x50061f9 in /usr/bin/clickhouse\r\n2. ? @ 0x4d3b1d1 in /usr/bin/clickhouse\r\n3. DB::KafkaBlockInputStream::commit() @ 0x97945e5 in /usr/bin/clickhouse\r\n4. DB::StorageKafka::streamToViews() @ 0x93920b1 in /usr/bin/clickhouse\r\n5. DB::StorageKafka::threadFunc() @ 0x9392afc in /usr/bin/clickhouse\r\n6. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x93acde7 in /usr/bin/clickhouse\r\n7. DB::BackgroundSchedulePool::threadFunction() @ 0x93ad3ba in /usr/bin/clickhouse\r\n8. ? @ 0x93ad4bd in /usr/bin/clickhouse\r\n9. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x500fa1d in /usr/bin/clickhouse\r\n10. ? @ 0x500e08f in /usr/bin/clickhouse\r\n11. start_thread @ 0x7e65 in /usr/lib64/libpthread-2.17.so\r\n12. __clone @ 0xfe88d in /usr/lib64/libc-2.17.so\r\n (version 20.3.12.112)\r\n2020-07-08 13:22:38       688419     42073 Execution took 1929 ms.\r\n\r\n\r\n2020-07-08 13:22:40       782916     42076 Started streaming to 1 attached views\r\n2020-07-08 13:22:40       784011     42076 Already subscribed to topics: [ topic_name, back_topic_name ]\r\n2020-07-08 13:22:40       784031     42076 Already assigned to : [ back_topic_name[4:#], topic_name[4:#] ]\r\n2020-07-08 13:22:40       784153     42076 Rebalance initiated. Revoking partitions: [ back_topic_name[4:#], topic_name[4:#] ]\r\n2020-07-08 13:22:40       786379     42076 Topics/partitions assigned: [ back_topic_name[4:#], topic_name[4:#] ]\r\n2020-07-08 13:22:41       284407     42076 Polled offset INVALID (topic: back_topic_name, partition: 4)\r\n2020-07-08 13:22:41       284480     42076 Polled offset INVALID (topic: topic_name, partition: 4)\r\n2020-07-08 13:22:41       284486     42076 Nothing to commit.\r\n\r\n2020-07-08 13:22:41       284666     42076 Started streaming to 1 attached views\r\n2020-07-08 13:22:41       285394     42076 Already subscribed to topics: [ topic_name, back_topic_name ]\r\n2020-07-08 13:22:41       285415     42076 Already assigned to : [ back_topic_name[4:#], topic_name[4:#] ]\r\n2020-07-08 13:22:41       796739     42076 Polled batch of 34929 messages. Offset position: [ back_topic_name[4:34929], topic_name[4:#] ]\r\n2020-07-08 13:22:42       716824     42076 Polled batch of 65536 messages. Offset position: [ back_topic_name[4:100465], topic_name[4:#] ]\r\n2020-07-08 13:22:44       326489     42076 Polled offset 100465 (topic: back_topic_name, partition: 4)\r\n2020-07-08 13:22:44       326535     42076 Polled offset INVALID (topic: topic_name, partition: 4)\r\n2020-07-08 13:22:44       326671     42076 Exception during commit attempt: Local: No offset stored\r\n2020-07-08 13:22:44       326762     42076 Exception during commit attempt: Local: No offset stored\r\n2020-07-08 13:22:44       326914     42076 Exception during commit attempt: Local: No offset stored\r\n2020-07-08 13:22:44       327248     42076 Exception during commit attempt: Local: No offset stored\r\n2020-07-08 13:22:44       327332     42076 Exception during commit attempt: Local: No offset stored\r\n2020-07-08 13:22:44       327400     42076 Re-joining claimed consumer after failure\r\n2020-07-08 13:22:44       333644     42076 Code: 518, e.displayText() = DB::Exception: All commit attempts failed. Last block was already written to target table(s), but was not commited to Kafka., Stack trace (when copying this message, always include the lines below):\r\n\r\n0. Poco::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int) @ 0xbbad39c in /usr/bin/clickhouse\r\n1. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int) @ 0x50061f9 in /usr/bin/clickhouse\r\n2. ? @ 0x4d3b1d1 in /usr/bin/clickhouse\r\n3. DB::KafkaBlockInputStream::commit() @ 0x97945e5 in /usr/bin/clickhouse\r\n4. DB::StorageKafka::streamToViews() @ 0x93920b1 in /usr/bin/clickhouse\r\n5. DB::StorageKafka::threadFunc() @ 0x9392afc in /usr/bin/clickhouse\r\n6. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x93acde7 in /usr/bin/clickhouse\r\n7. DB::BackgroundSchedulePool::threadFunction() @ 0x93ad3ba in /usr/bin/clickhouse\r\n8. ? @ 0x93ad4bd in /usr/bin/clickhouse\r\n9. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x500fa1d in /usr/bin/clickhouse\r\n10. ? @ 0x500e08f in /usr/bin/clickhouse\r\n11. start_thread @ 0x7e65 in /usr/lib64/libpthread-2.17.so\r\n12. __clone @ 0xfe88d in /usr/lib64/libc-2.17.so\r\n (version 20.3.12.112)\r\n2020-07-08 13:22:44       333744     42076 Execution took 3550 ms.\r\n```\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/12295/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/12295/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/12286","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/12286/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/12286/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/12286/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/12286","id":653087969,"node_id":"MDU6SXNzdWU2NTMwODc5Njk=","number":12286,"title":"Column aliases are not resolved properly in the resultset when joining multiple tables with ambiguous columns","user":{"login":"gbakthavatchalam","id":26194642,"node_id":"MDQ6VXNlcjI2MTk0NjQy","avatar_url":"https://avatars.githubusercontent.com/u/26194642?v=4","gravatar_id":"","url":"https://api.github.com/users/gbakthavatchalam","html_url":"https://github.com/gbakthavatchalam","followers_url":"https://api.github.com/users/gbakthavatchalam/followers","following_url":"https://api.github.com/users/gbakthavatchalam/following{/other_user}","gists_url":"https://api.github.com/users/gbakthavatchalam/gists{/gist_id}","starred_url":"https://api.github.com/users/gbakthavatchalam/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gbakthavatchalam/subscriptions","organizations_url":"https://api.github.com/users/gbakthavatchalam/orgs","repos_url":"https://api.github.com/users/gbakthavatchalam/repos","events_url":"https://api.github.com/users/gbakthavatchalam/events{/privacy}","received_events_url":"https://api.github.com/users/gbakthavatchalam/received_events","type":"User","site_admin":false},"labels":[{"id":1357578153,"node_id":"MDU6TGFiZWwxMzU3NTc4MTUz","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-joins","name":"comp-joins","color":"b5bcff","default":false,"description":"JOINs"},{"id":1575085465,"node_id":"MDU6TGFiZWwxNTc1MDg1NDY1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/unexpected%20behaviour","name":"unexpected behaviour","color":"e088ca","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2020-07-08T08:12:47Z","updated_at":"2020-10-16T18:09:50Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"\r\n**Describe the bug**\r\nColumns are not resolving properly with aliases during a join when ambiguous columns are present in the tables.\r\n\r\n**How to reproduce**\r\n* Which ClickHouse server version to use\r\n`20.5.2.7`\r\n* Which interface to use, if matters\r\n` native ch client`\r\n\r\n**Expected behavior**\r\nExpected clickhouse to resolve columns properly and the create table to work\r\n\r\nAttached the PDF that contains the create table queries, insert queries , the select-join query and create table from select-join query.\r\n\r\nKindly let me know a fix for the same\r\n[queries_with_results.pdf](https://github.com/ClickHouse/ClickHouse/files/4889311/queries_with_results.pdf)\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/12286/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/12286/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/12281","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/12281/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/12281/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/12281/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/12281","id":652906033,"node_id":"MDU6SXNzdWU2NTI5MDYwMzM=","number":12281,"title":"https://yandex.ru/dev/clickhouse/ web page is outdated.","user":{"login":"alexey-milovidov","id":18581488,"node_id":"MDQ6VXNlcjE4NTgxNDg4","avatar_url":"https://avatars.githubusercontent.com/u/18581488?v=4","gravatar_id":"","url":"https://api.github.com/users/alexey-milovidov","html_url":"https://github.com/alexey-milovidov","followers_url":"https://api.github.com/users/alexey-milovidov/followers","following_url":"https://api.github.com/users/alexey-milovidov/following{/other_user}","gists_url":"https://api.github.com/users/alexey-milovidov/gists{/gist_id}","starred_url":"https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexey-milovidov/subscriptions","organizations_url":"https://api.github.com/users/alexey-milovidov/orgs","repos_url":"https://api.github.com/users/alexey-milovidov/repos","events_url":"https://api.github.com/users/alexey-milovidov/events{/privacy}","received_events_url":"https://api.github.com/users/alexey-milovidov/received_events","type":"User","site_admin":false},"labels":[{"id":785082162,"node_id":"MDU6TGFiZWw3ODUwODIxNjI=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-documentation","name":"comp-documentation","color":"b5bcff","default":false,"description":"Used to run automatic builds of the documentation"},{"id":2668414603,"node_id":"MDU6TGFiZWwyNjY4NDE0NjAz","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/bug%20on%20website","name":"bug on website","color":"EA39C8","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2020-07-08T03:45:54Z","updated_at":"2021-01-18T23:41:53Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"It contains only some fragmentary four year old information.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/12281/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/12281/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/12264","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/12264/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/12264/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/12264/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/12264","id":652475012,"node_id":"MDU6SXNzdWU2NTI0NzUwMTI=","number":12264,"title":"HAVING clause can change result of aggregation","user":{"login":"qoega","id":2159081,"node_id":"MDQ6VXNlcjIxNTkwODE=","avatar_url":"https://avatars.githubusercontent.com/u/2159081?v=4","gravatar_id":"","url":"https://api.github.com/users/qoega","html_url":"https://github.com/qoega","followers_url":"https://api.github.com/users/qoega/followers","following_url":"https://api.github.com/users/qoega/following{/other_user}","gists_url":"https://api.github.com/users/qoega/gists{/gist_id}","starred_url":"https://api.github.com/users/qoega/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/qoega/subscriptions","organizations_url":"https://api.github.com/users/qoega/orgs","repos_url":"https://api.github.com/users/qoega/repos","events_url":"https://api.github.com/users/qoega/events{/privacy}","received_events_url":"https://api.github.com/users/qoega/received_events","type":"User","site_admin":false},"labels":[{"id":386401505,"node_id":"MDU6TGFiZWwzODY0MDE1MDU=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/bug","name":"bug","color":"ee0701","default":true,"description":"Confirmed user-visible misbehaviour in official release"},{"id":386401508,"node_id":"MDU6TGFiZWwzODY0MDE1MDg=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/help%20wanted","name":"help wanted","color":"128A0C","default":true,"description":null},{"id":1365579236,"node_id":"MDU6TGFiZWwxMzY1NTc5MjM2","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/minor","name":"minor","color":"FFF8F8","default":false,"description":"Priority: minor"},{"id":2121848770,"node_id":"MDU6TGFiZWwyMTIxODQ4Nzcw","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-sql","name":"comp-sql","color":"b5bcff","default":false,"description":"General SQL support"},{"id":2158151317,"node_id":"MDU6TGFiZWwyMTU4MTUxMzE3","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/sqlancer","name":"sqlancer","color":"268b8e","default":false,"description":"Issue found by SQLancer tool"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2020-07-07T16:54:19Z","updated_at":"2022-01-24T12:07:34Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"**Describe the bug**\r\nHAVING Clause works not like filter over aggregation result. It allows to use expression that is not an aggregation and not a  group by\r\n```\r\nEach column reference directly contained in the search condition shall be one of the following:\r\na) An unambiguous reference to a column that is functionally dependent on the set consisting of every column referenced by a column reference contained in group by clause.\r\n...\r\n```\r\n**How to reproduce**\r\n``` sql\r\nCREATE TABLE t3 (`c0` Int32, `c1` Int32, `c2` String) ENGINE = Log()\r\nINSERT INTO t3(c0,c1,c2) VALUES (1,10,'1'), (1,0,'2');\r\n\r\nSELECT *\r\nFROM t3\r\n\r\n┌─c0─┬─c1─┬─c2─┐\r\n│  1 │ 10 │ 1  │\r\n│  1 │  0 │ 2  │\r\n└────┴────┴────┘\r\n\r\nSELECT MIN(t3.c2)\r\nFROM t3\r\nGROUP BY t3.c0\r\nHAVING NOT t3.c1\r\nUNION ALL\r\nSELECT MIN(t3.c2)\r\nFROM t3\r\nGROUP BY t3.c0\r\nHAVING NOT (NOT t3.c1)\r\nUNION ALL\r\nSELECT MIN(t3.c2)\r\nFROM t3\r\nGROUP BY t3.c0\r\nHAVING isNull(NOT t3.c1)\r\n\r\n┌─MIN(c2)─┐\r\n│ 2       │\r\n│ 1       │\r\n└─────────┘\r\n\r\nSELECT MIN(c2)\r\nFROM t3\r\nGROUP BY c0\r\n\r\n┌─MIN(c2)─┐\r\n│ 1       │\r\n└─────────┘\r\n```\r\n**Expected behavior**\r\nHAVING clause should not work for case where it is not an aggregation or a function over group by columns.\r\nMySQL for example shows error: http://sqlfiddle.com/#!9/df2cd1/4\r\n\r\n**Additional context**\r\nFound by SQLancer TLP Having oracle https://github.com/sqlancer/sqlancer/pull/39","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/12264/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/12264/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/12188","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/12188/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/12188/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/12188/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/12188","id":652116122,"node_id":"MDU6SXNzdWU2NTIxMTYxMjI=","number":12188,"title":"Partition pruning for mutations","user":{"login":"filimonov","id":1549571,"node_id":"MDQ6VXNlcjE1NDk1NzE=","avatar_url":"https://avatars.githubusercontent.com/u/1549571?v=4","gravatar_id":"","url":"https://api.github.com/users/filimonov","html_url":"https://github.com/filimonov","followers_url":"https://api.github.com/users/filimonov/followers","following_url":"https://api.github.com/users/filimonov/following{/other_user}","gists_url":"https://api.github.com/users/filimonov/gists{/gist_id}","starred_url":"https://api.github.com/users/filimonov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/filimonov/subscriptions","organizations_url":"https://api.github.com/users/filimonov/orgs","repos_url":"https://api.github.com/users/filimonov/repos","events_url":"https://api.github.com/users/filimonov/events{/privacy}","received_events_url":"https://api.github.com/users/filimonov/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":1351290474,"node_id":"MDU6TGFiZWwxMzUxMjkwNDc0","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-mutations","name":"comp-mutations","color":"b5bcff","default":false,"description":"ALTER UPDATE/DELETE"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2020-07-07T08:27:52Z","updated_at":"2021-04-28T19:19:58Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"body":"Now every mutation touches/renames all parts in all partition (even if they were not touched by mutation).\r\n\r\nThat has the following disadvantages:\r\n1) losing immutable property - if I do mutation affecting only current day / current partition all old parts get renamed. It is really bad (for example - for backups: to find that the files inside renamed folders were not changed you need to compare inodes which makes backup scripts really complicated).\r\n2) lot of unnecessary filesystem operation if there are lot of partitions\r\n3) huge zookeeper transactions\r\n\r\nIt seems it should be possible to split huge mutations to per-partition mutations OR  introduce IN PARTITION for ALTER UPDATE / DELETE OR use some other approach to avoid that.\r\n\r\nP.S. Also it is possible to apply smth like `optimize_skip_unused_shards` for ON CLUSTER. ","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/12188/reactions","total_count":1,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":1,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/12188/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/12185","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/12185/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/12185/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/12185/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/12185","id":652051334,"node_id":"MDU6SXNzdWU2NTIwNTEzMzQ=","number":12185,"title":"Add time function \"addIntervals\" and \"subtractIntervals\"","user":{"login":"shinoi2","id":26739043,"node_id":"MDQ6VXNlcjI2NzM5MDQz","avatar_url":"https://avatars.githubusercontent.com/u/26739043?v=4","gravatar_id":"","url":"https://api.github.com/users/shinoi2","html_url":"https://github.com/shinoi2","followers_url":"https://api.github.com/users/shinoi2/followers","following_url":"https://api.github.com/users/shinoi2/following{/other_user}","gists_url":"https://api.github.com/users/shinoi2/gists{/gist_id}","starred_url":"https://api.github.com/users/shinoi2/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/shinoi2/subscriptions","organizations_url":"https://api.github.com/users/shinoi2/orgs","repos_url":"https://api.github.com/users/shinoi2/repos","events_url":"https://api.github.com/users/shinoi2/events{/privacy}","received_events_url":"https://api.github.com/users/shinoi2/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":1481221764,"node_id":"MDU6TGFiZWwxNDgxMjIxNzY0","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-datetime","name":"comp-datetime","color":"b5bcff","default":false,"description":"date & time & timezone related"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2020-07-07T06:49:46Z","updated_at":"2020-10-16T02:55:29Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"**Use case**\r\naddIntervals(datetime, amount, interval-unit)\r\nsubtractIntervals(datetime, amount, interval-unit)\r\ninterval-unit same as \"toStartOfInterval\" and \"dateDiff\" function\r\n\r\nFor example:\r\n```\r\nWITH\r\n    toDate('2018-01-01') AS date,\r\n    toDateTime('2018-01-01 00:00:00') AS date_time\r\nSELECT\r\n    addIntervals(date, 1, 'year') AS add_years_with_date,\r\n    addIntervals(date, 1, 'year') AS add_years_with_date_time\r\n```","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/12185/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/12185/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/12169","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/12169/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/12169/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/12169/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/12169","id":651559682,"node_id":"MDU6SXNzdWU2NTE1NTk2ODI=","number":12169,"title":"Split max_execution_time and max_estimated_execution_time","user":{"login":"filimonov","id":1549571,"node_id":"MDQ6VXNlcjE1NDk1NzE=","avatar_url":"https://avatars.githubusercontent.com/u/1549571?v=4","gravatar_id":"","url":"https://api.github.com/users/filimonov","html_url":"https://github.com/filimonov","followers_url":"https://api.github.com/users/filimonov/followers","following_url":"https://api.github.com/users/filimonov/following{/other_user}","gists_url":"https://api.github.com/users/filimonov/gists{/gist_id}","starred_url":"https://api.github.com/users/filimonov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/filimonov/subscriptions","organizations_url":"https://api.github.com/users/filimonov/orgs","repos_url":"https://api.github.com/users/filimonov/repos","events_url":"https://api.github.com/users/filimonov/events{/privacy}","received_events_url":"https://api.github.com/users/filimonov/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2020-07-06T13:54:54Z","updated_at":"2020-10-21T10:36:09Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"body":"","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/12169/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/12169/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/12143","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/12143/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/12143/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/12143/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/12143","id":651089441,"node_id":"MDU6SXNzdWU2NTEwODk0NDE=","number":12143,"title":"Experiment with SIMD-E on non x86 platforms.","user":{"login":"alexey-milovidov","id":18581488,"node_id":"MDQ6VXNlcjE4NTgxNDg4","avatar_url":"https://avatars.githubusercontent.com/u/18581488?v=4","gravatar_id":"","url":"https://api.github.com/users/alexey-milovidov","html_url":"https://github.com/alexey-milovidov","followers_url":"https://api.github.com/users/alexey-milovidov/followers","following_url":"https://api.github.com/users/alexey-milovidov/following{/other_user}","gists_url":"https://api.github.com/users/alexey-milovidov/gists{/gist_id}","starred_url":"https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexey-milovidov/subscriptions","organizations_url":"https://api.github.com/users/alexey-milovidov/orgs","repos_url":"https://api.github.com/users/alexey-milovidov/repos","events_url":"https://api.github.com/users/alexey-milovidov/events{/privacy}","received_events_url":"https://api.github.com/users/alexey-milovidov/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":1507867504,"node_id":"MDU6TGFiZWwxNTA3ODY3NTA0","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/st-hold","name":"st-hold","color":"e5b890","default":false,"description":"We've paused the work on issue for some reason"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2020-07-05T15:20:26Z","updated_at":"2020-10-21T23:31:04Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"Use https://github.com/simd-everywhere/simde\r\nThe idea proposed by @danlark1 ","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/12143/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/12143/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/12084","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/12084/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/12084/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/12084/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/12084","id":649840409,"node_id":"MDU6SXNzdWU2NDk4NDA0MDk=","number":12084,"title":"Name of the problematic table and column for insert time exceptions","user":{"login":"filimonov","id":1549571,"node_id":"MDQ6VXNlcjE1NDk1NzE=","avatar_url":"https://avatars.githubusercontent.com/u/1549571?v=4","gravatar_id":"","url":"https://api.github.com/users/filimonov","html_url":"https://github.com/filimonov","followers_url":"https://api.github.com/users/filimonov/followers","following_url":"https://api.github.com/users/filimonov/following{/other_user}","gists_url":"https://api.github.com/users/filimonov/gists{/gist_id}","starred_url":"https://api.github.com/users/filimonov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/filimonov/subscriptions","organizations_url":"https://api.github.com/users/filimonov/orgs","repos_url":"https://api.github.com/users/filimonov/repos","events_url":"https://api.github.com/users/filimonov/events{/privacy}","received_events_url":"https://api.github.com/users/filimonov/received_events","type":"User","site_admin":false},"labels":[{"id":845247686,"node_id":"MDU6TGFiZWw4NDUyNDc2ODY=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/usability","name":"usability","color":"ebf28c","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2020-07-02T11:01:14Z","updated_at":"2020-07-02T11:01:14Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"body":"Most of the exceptions happening during parsing the format, or during calculating default, or during materialize view execution don't mention the columns name. \r\n\r\nIt makes debugging problematic and painful, as the number of columns can be very high, and the schema can have very complicated DEFAULT expressions.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/12084/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/12084/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11999","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11999/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11999/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11999/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/11999","id":646699651,"node_id":"MDU6SXNzdWU2NDY2OTk2NTE=","number":11999,"title":"CAST to IPv4 and toIPv6 does not work.","user":{"login":"alexey-milovidov","id":18581488,"node_id":"MDQ6VXNlcjE4NTgxNDg4","avatar_url":"https://avatars.githubusercontent.com/u/18581488?v=4","gravatar_id":"","url":"https://api.github.com/users/alexey-milovidov","html_url":"https://github.com/alexey-milovidov","followers_url":"https://api.github.com/users/alexey-milovidov/followers","following_url":"https://api.github.com/users/alexey-milovidov/following{/other_user}","gists_url":"https://api.github.com/users/alexey-milovidov/gists{/gist_id}","starred_url":"https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexey-milovidov/subscriptions","organizations_url":"https://api.github.com/users/alexey-milovidov/orgs","repos_url":"https://api.github.com/users/alexey-milovidov/repos","events_url":"https://api.github.com/users/alexey-milovidov/events{/privacy}","received_events_url":"https://api.github.com/users/alexey-milovidov/received_events","type":"User","site_admin":false},"labels":[{"id":386401505,"node_id":"MDU6TGFiZWwzODY0MDE1MDU=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/bug","name":"bug","color":"ee0701","default":true,"description":"Confirmed user-visible misbehaviour in official release"},{"id":1019683656,"node_id":"MDU6TGFiZWwxMDE5NjgzNjU2","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/altinity","name":"altinity","color":"c0f5f9","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2020-06-27T15:12:13Z","updated_at":"2022-01-24T12:11:00Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"**Describe the bug**\r\n```\r\nSELECT toIPv6('1.10.11.12')\r\n\r\n┌─toIPv6('1.10.11.12')─┐\r\n│ ::                   │\r\n└──────────────────────┘\r\n```\r\n\r\n```\r\nSELECT CAST('1.1.1.1', 'IPv4')\r\n\r\n\r\nReceived exception from server (version 20.6.1):\r\nCode: 6. DB::Exception: Received from localhost:9000. DB::Exception: Cannot parse string '1.1.1.1' as IPv4: syntax error at position 1 (parsed just '1').\r\n```","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11999/reactions","total_count":1,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":1,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11999/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11942","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11942/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11942/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11942/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/11942","id":645512548,"node_id":"MDU6SXNzdWU2NDU1MTI1NDg=","number":11942,"title":"allow_ddl option is not consistent over restarts","user":{"login":"bobelev","id":3942342,"node_id":"MDQ6VXNlcjM5NDIzNDI=","avatar_url":"https://avatars.githubusercontent.com/u/3942342?v=4","gravatar_id":"","url":"https://api.github.com/users/bobelev","html_url":"https://github.com/bobelev","followers_url":"https://api.github.com/users/bobelev/followers","following_url":"https://api.github.com/users/bobelev/following{/other_user}","gists_url":"https://api.github.com/users/bobelev/gists{/gist_id}","starred_url":"https://api.github.com/users/bobelev/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bobelev/subscriptions","organizations_url":"https://api.github.com/users/bobelev/orgs","repos_url":"https://api.github.com/users/bobelev/repos","events_url":"https://api.github.com/users/bobelev/events{/privacy}","received_events_url":"https://api.github.com/users/bobelev/received_events","type":"User","site_admin":false},"labels":[{"id":386401505,"node_id":"MDU6TGFiZWwzODY0MDE1MDU=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/bug","name":"bug","color":"ee0701","default":true,"description":"Confirmed user-visible misbehaviour in official release"},{"id":845247686,"node_id":"MDU6TGFiZWw4NDUyNDc2ODY=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/usability","name":"usability","color":"ebf28c","default":false,"description":""},{"id":1401254412,"node_id":"MDU6TGFiZWwxNDAxMjU0NDEy","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-dddl","name":"comp-dddl","color":"b5bcff","default":false,"description":"Distributed DDL feature"},{"id":1507867504,"node_id":"MDU6TGFiZWwxNTA3ODY3NTA0","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/st-hold","name":"st-hold","color":"e5b890","default":false,"description":"We've paused the work on issue for some reason"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2020-06-25T12:15:00Z","updated_at":"2020-11-09T00:34:15Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"**version**\r\nreproduced on 19.17.4.11 and latest 20.1.15.109\r\n \r\n**Describe the bug**\r\nMy goal is to disable DDL operations for default profile.\r\n\r\nI've created new profile with `allow_ddl: 1` and set `allow_ddl` to 0 for default profile.\r\n\r\nclickhouse-server reloads config on the fly and now you can execute DDL with new profile. With default profile DDL queries fail as expected.\r\n\r\nAfter restarting the clickhouse-server you can't execute DDL queries either by default profile or by new profile.\r\n\r\n**How to reproduce**\r\nsimple demo\r\n```\r\ngit clone https://gist.github.com/e95f89230004f3a6107f35f1a5bf8b56.git\r\nbash run.sh\r\n```\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11942/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11942/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11925","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11925/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11925/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11925/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/11925","id":644774274,"node_id":"MDU6SXNzdWU2NDQ3NzQyNzQ=","number":11925,"title":"Support Lowcardinality(String) for summingMergTree Nested (sumMap)","user":{"login":"den-crane","id":19737682,"node_id":"MDQ6VXNlcjE5NzM3Njgy","avatar_url":"https://avatars.githubusercontent.com/u/19737682?v=4","gravatar_id":"","url":"https://api.github.com/users/den-crane","html_url":"https://github.com/den-crane","followers_url":"https://api.github.com/users/den-crane/followers","following_url":"https://api.github.com/users/den-crane/following{/other_user}","gists_url":"https://api.github.com/users/den-crane/gists{/gist_id}","starred_url":"https://api.github.com/users/den-crane/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/den-crane/subscriptions","organizations_url":"https://api.github.com/users/den-crane/orgs","repos_url":"https://api.github.com/users/den-crane/repos","events_url":"https://api.github.com/users/den-crane/events{/privacy}","received_events_url":"https://api.github.com/users/den-crane/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":1446368065,"node_id":"MDU6TGFiZWwxNDQ2MzY4MDY1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-lowcardinality","name":"comp-lowcardinality","color":"b5bcff","default":false,"description":"LowCardinality data type"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2020-06-24T17:10:29Z","updated_at":"2022-01-28T20:55:26Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"body":"```\r\ncreate table sm(a Int64, `aMap.K` Array(LowCardinality(String)), `aMap.V` Array(Int64)) \r\nEngine=SummingMergeTree order by a;\r\n\r\ninsert into sm values(1, ['a'], [5]);\r\ninsert into sm values(1, ['a'], [5]);\r\n\r\nselect * from sm final;\r\n┌─a─┬─aMap.K─┬─aMap.V─┐\r\n│ 1 │ ['a']  │ [5]    │\r\n└───┴────────┴────────┘\r\n\r\nexpected\r\n┌─a─┬─aMap.K─┬─aMap.V─┐\r\n│ 1 │ ['a']  │ [10]   │\r\n└───┴────────┴────────┘\r\n```","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11925/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11925/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11909","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11909/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11909/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11909/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/11909","id":644528428,"node_id":"MDU6SXNzdWU2NDQ1Mjg0Mjg=","number":11909,"title":"Atomic inserts (on parts level) to main table and all dependant Materialized views","user":{"login":"filimonov","id":1549571,"node_id":"MDQ6VXNlcjE1NDk1NzE=","avatar_url":"https://avatars.githubusercontent.com/u/1549571?v=4","gravatar_id":"","url":"https://api.github.com/users/filimonov","html_url":"https://github.com/filimonov","followers_url":"https://api.github.com/users/filimonov/followers","following_url":"https://api.github.com/users/filimonov/following{/other_user}","gists_url":"https://api.github.com/users/filimonov/gists{/gist_id}","starred_url":"https://api.github.com/users/filimonov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/filimonov/subscriptions","organizations_url":"https://api.github.com/users/filimonov/orgs","repos_url":"https://api.github.com/users/filimonov/repos","events_url":"https://api.github.com/users/filimonov/events{/privacy}","received_events_url":"https://api.github.com/users/filimonov/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null}],"state":"open","locked":false,"assignee":{"login":"tavplubix","id":14847450,"node_id":"MDQ6VXNlcjE0ODQ3NDUw","avatar_url":"https://avatars.githubusercontent.com/u/14847450?v=4","gravatar_id":"","url":"https://api.github.com/users/tavplubix","html_url":"https://github.com/tavplubix","followers_url":"https://api.github.com/users/tavplubix/followers","following_url":"https://api.github.com/users/tavplubix/following{/other_user}","gists_url":"https://api.github.com/users/tavplubix/gists{/gist_id}","starred_url":"https://api.github.com/users/tavplubix/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tavplubix/subscriptions","organizations_url":"https://api.github.com/users/tavplubix/orgs","repos_url":"https://api.github.com/users/tavplubix/repos","events_url":"https://api.github.com/users/tavplubix/events{/privacy}","received_events_url":"https://api.github.com/users/tavplubix/received_events","type":"User","site_admin":false},"assignees":[{"login":"tavplubix","id":14847450,"node_id":"MDQ6VXNlcjE0ODQ3NDUw","avatar_url":"https://avatars.githubusercontent.com/u/14847450?v=4","gravatar_id":"","url":"https://api.github.com/users/tavplubix","html_url":"https://github.com/tavplubix","followers_url":"https://api.github.com/users/tavplubix/followers","following_url":"https://api.github.com/users/tavplubix/following{/other_user}","gists_url":"https://api.github.com/users/tavplubix/gists{/gist_id}","starred_url":"https://api.github.com/users/tavplubix/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tavplubix/subscriptions","organizations_url":"https://api.github.com/users/tavplubix/orgs","repos_url":"https://api.github.com/users/tavplubix/repos","events_url":"https://api.github.com/users/tavplubix/events{/privacy}","received_events_url":"https://api.github.com/users/tavplubix/received_events","type":"User","site_admin":false}],"milestone":null,"comments":0,"created_at":"2020-06-24T11:09:24Z","updated_at":"2020-11-24T13:19:16Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"body":"Insert into table and all materialized view should be atomic (i.e. single failed MV = data not inserted nor to source table, nor to any Materialized view, proper exception passed).\r\n\r\nThat is in roadmap already [p. 24.23](https://github.com/ClickHouse/ClickHouse/blob/master/docs/ru/whats-new/extended-roadmap.md#2423-%D0%BC%D0%B8%D0%BD%D0%B8%D0%BC%D0%B0%D0%BB%D1%8C%D0%BD%D0%B0%D1%8F-%D0%BF%D0%BE%D0%B4%D0%B4%D0%B5%D1%80%D0%B6%D0%BA%D0%B0-%D1%82%D1%80%D0%B0%D0%BD%D0%B7%D0%B0%D0%BA%D1%86%D0%B8%D0%B9-%D0%B4%D0%BB%D1%8F-%D0%BC%D0%BD%D0%BE%D0%B6%D0%B5%D1%81%D1%82%D0%B2%D0%B0-%D0%B2%D1%81%D1%82%D0%B0%D0%B2%D0%BE%D0%BA%D1%87%D1%82%D0%B5%D0%BD%D0%B8%D0%B9-minimalnaia-podderzhka-tranzaktsii-dlia-mnozhestva-vstavokchtenii)","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11909/reactions","total_count":6,"+1":6,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11909/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11906","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11906/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11906/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11906/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/11906","id":644481424,"node_id":"MDU6SXNzdWU2NDQ0ODE0MjQ=","number":11906,"title":"Not obvious error message [Attempt to read after eof: while converting '' to Int32]","user":{"login":"qoega","id":2159081,"node_id":"MDQ6VXNlcjIxNTkwODE=","avatar_url":"https://avatars.githubusercontent.com/u/2159081?v=4","gravatar_id":"","url":"https://api.github.com/users/qoega","html_url":"https://github.com/qoega","followers_url":"https://api.github.com/users/qoega/followers","following_url":"https://api.github.com/users/qoega/following{/other_user}","gists_url":"https://api.github.com/users/qoega/gists{/gist_id}","starred_url":"https://api.github.com/users/qoega/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/qoega/subscriptions","organizations_url":"https://api.github.com/users/qoega/orgs","repos_url":"https://api.github.com/users/qoega/repos","events_url":"https://api.github.com/users/qoega/events{/privacy}","received_events_url":"https://api.github.com/users/qoega/received_events","type":"User","site_admin":false},"labels":[{"id":845247686,"node_id":"MDU6TGFiZWw4NDUyNDc2ODY=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/usability","name":"usability","color":"ebf28c","default":false,"description":""},{"id":1365579236,"node_id":"MDU6TGFiZWwxMzY1NTc5MjM2","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/minor","name":"minor","color":"FFF8F8","default":false,"description":"Priority: minor"},{"id":2158151317,"node_id":"MDU6TGFiZWwyMTU4MTUxMzE3","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/sqlancer","name":"sqlancer","color":"268b8e","default":false,"description":"Issue found by SQLancer tool"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2020-06-24T09:54:14Z","updated_at":"2020-11-15T17:47:14Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"**Describe the issue**\r\nWe need clear and concise error message.\r\nUser wrote incorrect query — empty string in comparison with number `'' < 1`. We can add better message, that shows\r\n1) There was attempt to convert from string to number as logic of such comparison.\r\n2) It fails as empty string is not a valid number.\r\n\r\n**How to reproduce**\r\n``` sql\r\nSELECT t0.c0, t0.c1 FROM t0 ORDER BY (('')=(t0.c1))\r\n```\r\n\r\n**Error message and/or stacktrace**\r\n```\r\n8-bc17-982beb6c195f} <Error> executeQuery: Code: 32, e.displayText() = DB::Exception: Attempt to read after eof: while converting '' to Int32 (version 20.5.1.1) (from [::1]:45078) (in query: SELECT t0.c0, t0.c1 FROM t0 ORDER BY '' = t0.c1 ASC), Stack trace (when copying this message, always include the lines below):\r\n\r\n0. /build/obj-x86_64-linux-gnu/../contrib/libcxx/include/exception:0: Poco::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int) @ 0x140ffd2b in /home/qoega/docker-ch/output/binary/clickhouse\r\n1. /build/obj-x86_64-linux-gnu/../src/Common/Exception.cpp:38: DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int) @ 0x9b91fda in /home/qoega/docker-ch/output/binary/clickhouse\r\n2. /build/obj-x86_64-linux-gnu/../src/IO/VarInt.h:0: DB::throwReadAfterEOF() @ 0x9b90f15 in /home/qoega/docker-ch/output/binary/clickhouse\r\n3. /build/obj-x86_64-linux-gnu/../src/IO/BufferBase.h:42: void DB::readIntTextUnsafe<long, true>(long&, DB::ReadBuffer&) @ 0x10532e5f in /home/qoega/docker-ch/output/binary/clickhouse\r\n4. /build/obj-x86_64-linux-gnu/../src/Common/PODArray.h:382: DB::DataTypeNumberBase<long>::deserializeText(DB::IColumn&, DB::ReadBuffer&, DB::FormatSettings const&) const @ 0x10532ab5 in /home/qoega/docker-ch/output/binary/clickhouse\r\n5. /build/obj-x86_64-linux-gnu/../src/DataTypes/DataTypeWithSimpleSerialization.h:38: DB::DataTypeWithSimpleSerialization::deserializeWholeText(DB::IColumn&, DB::ReadBuffer&, DB::FormatSettings const&) const @ 0x9ce42cd in /home/qoega/docker-ch/output/binary/clickhouse\r\n6. /build/obj-x86_64-linux-gnu/../src/DataTypes/IDataType.cpp:202: DB::IDataType::deserializeAsWholeText(DB::IColumn&, DB::ReadBuffer&, DB::FormatSettings const&) const @ 0x105531df in /home/qoega/docker-ch/output/binary/clickhouse\r\n7. /build/obj-x86_64-linux-gnu/../src/Interpreters/convertFieldToType.cpp:0: DB::(anonymous namespace)::convertFieldToTypeImpl(DB::Field const&, DB::IDataType const&, DB::IDataType const*) @ 0x10ce010c in /home/qoega/docker-ch/output/binary/clickhouse\r\n8. /build/obj-x86_64-linux-gnu/../src/Interpreters/convertFieldToType.cpp:0: DB::convertFieldToType(DB::Field const&, DB::IDataType const&, DB::IDataType const*) @ 0x10cdf489 in /home/qoega/docker-ch/output/binary/clickhouse\r\n9. DB::FunctionComparison<DB::EqualsOp, DB::NameEquals>::executeWithConstString(DB::Block&, unsigned long, DB::IColumn const*, DB::IColumn const*, std::__1::shared_ptr<DB::IDataType const> const&, std::__1::shared_ptr<DB::IDataType const> const&, unsigned long) @ 0xc4de28e in /home/qoega/docker-ch/output/binary/clickhouse\r\n10. DB::FunctionComparison<DB::EqualsOp, DB::NameEquals>::executeImpl(DB::Block&, std::__1::vector<unsigned long, std::__1::allocator<unsigned long> > const&, unsigned long, unsigned long) @ 0xc4d52cb in /home/qoega/docker-ch/output/binary/clickhouse\r\n11. DB::IFunction::executeImplDryRun(DB::Block&, std::__1::vector<unsigned long, std::__1::allocator<unsigned long> > const&, unsigned long, unsigned long) @ 0xad271d3 in /home/qoega/docker-ch/output/binary/clickhouse\r\n12. DB::DefaultExecutable::executeDryRun(DB::Block&, std::__1::vector<unsigned long, std::__1::allocator<unsigned long> > const&, unsigned long, unsigned long) @ 0xad26d30 in /home/qoega/docker-ch/output/binary/clickhouse\r\n13. DB::ExecutableFunctionAdaptor::execute(DB::Block&, std::__1::vector<unsigned long, std::__1::allocator<unsigned long> > const&, unsigned long, unsigned long, bool) @ 0xada9bd8 in /home/qoega/docker-ch/output/binary/clickhouse\r\n14. /build/obj-x86_64-linux-gnu/../contrib/libcxx/include/vector:461: DB::ExpressionAction::execute(DB::Block&, bool, std::__1::shared_ptr<DB::ExtraBlock>&) const @ 0x10921675 in /home/qoega/docker-ch/output/binary/clickhouse\r\n15. /build/obj-x86_64-linux-gnu/../contrib/libcxx/include/memory:4206: DB::ExpressionActions::execute(DB::Block&, bool) const @ 0x10926fb4 in /home/qoega/docker-ch/output/binary/clickhouse\r\n16. /build/obj-x86_64-linux-gnu/../contrib/libcxx/include/vector:1293: DB::ExpressionTransform::ExpressionTransform(DB::Block const&, std::__1::shared_ptr<DB::ExpressionActions>, bool, bool) @ 0x11531f54 in /home/qoega/docker-ch/output/binary/clickhouse\r\n17. /build/obj-x86_64-linux-gnu/../contrib/libcxx/include/memory:4206: std::__1::__shared_ptr_emplace<DB::ExpressionTransform, std::__1::allocator<DB::ExpressionTransform> >::__shared_ptr_emplace<DB::Block const&, std::__1::shared_ptr<DB::ExpressionActions> const&>(std::__1::allocator<DB::ExpressionTransform>, DB::Block const&, std::__1::shared_ptr<DB::ExpressionActions> const&) @ 0x109c55a7 in /home/qoega/docker-ch/output/binary/clickhouse\r\n18. /build/obj-x86_64-linux-gnu/../contrib/libcxx/include/memory:2218: std::__1::__function::__func<DB::InterpreterSelectQuery::executeExpression(DB::QueryPipeline&, std::__1::shared_ptr<DB::ExpressionActions> const&)::$_21, std::__1::allocator<DB::InterpreterSelectQuery::executeExpression(DB::QueryPipeline&, std::__1::shared_ptr<DB::ExpressionActions> const&)::$_21>, std::__1::shared_ptr<DB::IProcessor> (DB::Block const&)>::operator()(DB::Block const&) @ 0x1098c6f8 in /home/qoega/docker-ch/output/binary/clickhouse\r\n19. /build/obj-x86_64-linux-gnu/../contrib/libcxx/include/memory:3821: void DB::QueryPipeline::addSimpleTransformImpl<std::__1::function<std::__1::shared_ptr<DB::IProcessor> (DB::Block const&)> >(std::__1::function<std::__1::shared_ptr<DB::IProcessor> (DB::Block const&)> const&)::'lambda'(DB::OutputPort*&, DB::QueryPipeline::StreamType)::operator()(DB::OutputPort*&, DB::QueryPipeline::StreamType) const @ 0x113b23a7 in /home/qoega/docker-ch/output/binary/clickhouse\r\n20. /build/obj-x86_64-linux-gnu/../contrib/libcxx/include/iterator:1480: void DB::QueryPipeline::addSimpleTransformImpl<std::__1::function<std::__1::shared_ptr<DB::IProcessor> (DB::Block const&)> >(std::__1::function<std::__1::shared_ptr<DB::IProcessor> (DB::Block const&)> const&) @ 0x113a91fd in /home/qoega/docker-ch/output/binary/clickhouse\r\n21. /build/obj-x86_64-linux-gnu/../src/Processors/QueryPipeline.cpp:261: DB::QueryPipeline::addSimpleTransform(std::__1::function<std::__1::shared_ptr<DB::IProcessor> (DB::Block const&)> const&) @ 0x1139fcd1 in /home/qoega/docker-ch/output/binary/clickhouse\r\n22. /build/obj-x86_64-linux-gnu/../contrib/libcxx/include/functional:1825: DB::InterpreterSelectQuery::executeImpl(DB::QueryPipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, std::__1::optional<DB::Pipe>) @ 0x10974bf4 in /home/qoega/docker-ch/output/binary/clickhouse\r\n23. /build/obj-x86_64-linux-gnu/../src/Interpreters/InterpreterSelectQuery.cpp:0: DB::InterpreterSelectQuery::execute() @ 0x10973795 in /home/qoega/docker-ch/output/binary/clickhouse\r\n24. /build/obj-x86_64-linux-gnu/../src/Interpreters/InterpreterSelectWithUnionQuery.cpp:192: DB::InterpreterSelectWithUnionQuery::execute() @ 0x10b93b8f in /home/qoega/docker-ch/output/binary/clickhouse\r\n25. /build/obj-x86_64-linux-gnu/../src/Interpreters/executeQuery.cpp:0: DB::executeQueryImpl(char const*, char const*, DB::Context&, bool, DB::QueryProcessingStage::Enum, bool, DB::ReadBuffer*) @ 0x10ce9fe1 in /home/qoega/docker-ch/output/binary/clickhouse\r\n26. /build/obj-x86_64-linux-gnu/../src/Interpreters/executeQuery.cpp:643: DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum, bool) @ 0x10ce9056 in /home/qoega/docker-ch/output/binary/clickhouse\r\n27. /build/obj-x86_64-linux-gnu/../src/Server/TCPHandler.cpp:0: DB::TCPHandler::runImpl() @ 0x113262d9 in /home/qoega/docker-ch/output/binary/clickhouse\r\n28. /build/obj-x86_64-linux-gnu/../src/Server/TCPHandler.cpp:0: DB::TCPHandler::run() @ 0x11331c38 in /home/qoega/docker-ch/output/binary/clickhouse\r\n29. /build/obj-x86_64-linux-gnu/../contrib/poco/Net/src/TCPServerConnection.cpp:57: Poco::Net::TCPServerConnection::start() @ 0x1402e653 in /home/qoega/docker-ch/output/binary/clickhouse\r\n30. /build/obj-x86_64-linux-gnu/../contrib/poco/Net/src/TCPServerDispatcher.cpp:0: Poco::Net::TCPServerDispatcher::run() @ 0x1402ee97 in /home/qoega/docker-ch/output/binary/clickhouse\r\n31. /build/obj-x86_64-linux-gnu/../contrib/poco/Foundation/src/ThreadPool.cpp:213: Poco::PooledThread::run() @ 0x14197d07 in /home/qoega/docker-ch/output/binary/clickhouse\r\n```\r\n**Additional context**\r\nFound by SQLancer TLPWhere","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11906/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11906/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11867","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11867/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11867/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11867/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/11867","id":643155847,"node_id":"MDU6SXNzdWU2NDMxNTU4NDc=","number":11867,"title":"ROLLUP and HAVING together (totals_mode = 'after_having_auto')","user":{"login":"igla123","id":67237907,"node_id":"MDQ6VXNlcjY3MjM3OTA3","avatar_url":"https://avatars.githubusercontent.com/u/67237907?v=4","gravatar_id":"","url":"https://api.github.com/users/igla123","html_url":"https://github.com/igla123","followers_url":"https://api.github.com/users/igla123/followers","following_url":"https://api.github.com/users/igla123/following{/other_user}","gists_url":"https://api.github.com/users/igla123/gists{/gist_id}","starred_url":"https://api.github.com/users/igla123/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/igla123/subscriptions","organizations_url":"https://api.github.com/users/igla123/orgs","repos_url":"https://api.github.com/users/igla123/repos","events_url":"https://api.github.com/users/igla123/events{/privacy}","received_events_url":"https://api.github.com/users/igla123/received_events","type":"User","site_admin":false},"labels":[{"id":386401510,"node_id":"MDU6TGFiZWwzODY0MDE1MTA=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/question","name":"question","color":"bfdadc","default":true,"description":""},{"id":1669010018,"node_id":"MDU6TGFiZWwxNjY5MDEwMDE4","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/question-answered","name":"question-answered","color":"bfdadc","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2020-06-22T15:17:19Z","updated_at":"2020-07-08T12:07:41Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Hi,\r\n\r\nI'm trying to make a query which will return lines with sums, less then some value, in a rollup view.\r\n\r\nFor instance, for this query:\r\n``` sql\r\n-- totals_mode = 'after_having_auto'\r\nselect a, sum(b)\r\nfrom\r\n(\r\nselect 1 a, -100 b\r\nunion all\r\nselect 2, -200\r\nunion all\r\nselect 2, -300\r\nunion all\r\nselect 3, 300\r\n) t\r\ngroup by a with rollup\r\nhaving sum(b) < 100\r\norder by a\r\n```\r\n\r\nI expect to have:\r\n\r\n``` sql\r\na   sum(b)\r\n------------\r\n0  -600\r\n1  -100\r\n2  -500\r\n```\r\n\r\nBut I get:\r\n\r\n``` sql\r\na   sum(b)\r\n------------\r\n0  -300\r\n1  -100\r\n2  -500\r\n```\r\n\r\nSo HAVING is applied after ROLLUP even if I use `totals_mode = 'after_having_auto'` parameter.\r\n\r\nIs this correct behavior or did I miss something?\r\nCH version is 19.14.11.16.\r\n\r\nThanks.\r\n\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11867/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11867/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11862","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11862/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11862/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11862/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/11862","id":643079642,"node_id":"MDU6SXNzdWU2NDMwNzk2NDI=","number":11862,"title":"ARRAY JOIN with LIMIT BY can be optimized","user":{"login":"Dlougach","id":2272137,"node_id":"MDQ6VXNlcjIyNzIxMzc=","avatar_url":"https://avatars.githubusercontent.com/u/2272137?v=4","gravatar_id":"","url":"https://api.github.com/users/Dlougach","html_url":"https://github.com/Dlougach","followers_url":"https://api.github.com/users/Dlougach/followers","following_url":"https://api.github.com/users/Dlougach/following{/other_user}","gists_url":"https://api.github.com/users/Dlougach/gists{/gist_id}","starred_url":"https://api.github.com/users/Dlougach/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Dlougach/subscriptions","organizations_url":"https://api.github.com/users/Dlougach/orgs","repos_url":"https://api.github.com/users/Dlougach/repos","events_url":"https://api.github.com/users/Dlougach/events{/privacy}","received_events_url":"https://api.github.com/users/Dlougach/received_events","type":"User","site_admin":false},"labels":[{"id":1401233890,"node_id":"MDU6TGFiZWwxNDAxMjMzODkw","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-arrays","name":"comp-arrays","color":"b5bcff","default":false,"description":"Arrays / array joins / higher order"},{"id":1532016596,"node_id":"MDU6TGFiZWwxNTMyMDE2NTk2","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/memory","name":"memory","color":"e99695","default":false,"description":"When memory usage is higher than expected"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2020-06-22T13:38:05Z","updated_at":"2021-06-27T21:34:28Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"**Describe the bug**\r\nIt seems a combination of `ARRAY JOIN` with `LIMIT BY` in the same select query makes memory estimate wrong\r\n\r\n**How to reproduce**\r\n* Which ClickHouse server version to use\r\n 20.4.5 revision 54434.\r\n\r\n* Which interface to use, if matters\r\nDoesn't matter, tested through CLI client.\r\n\r\n* Queries to run that lead to unexpected result\r\n```sql\r\nSELECT\r\n    a,\r\n    b,\r\n    c\r\nFROM\r\n(\r\n    SELECT\r\n        a,\r\n        groupArray(b) AS b_,\r\n        max(b) AS max_b,\r\n        groupArray(c) AS c\r\n    FROM\r\n    (\r\n        SELECT *\r\n        FROM generateRandom('a Int8, b Int8, c UInt64')\r\n        LIMIT 10000000\r\n    )\r\n    GROUP BY a\r\n)\r\nARRAY JOIN\r\n    b_ AS b,\r\n    c\r\nWHERE b = max_b\r\nLIMIT 1 BY a\r\n```\r\n\r\n**Expected behavior**\r\nNot more than 256 rows of output.\r\n\r\n**Error message and/or stacktrace**\r\n```\r\n↘ Progress: 10.03 million rows, 100.27 MB (11.93 million rows/s., 119.31 MB/s.)\r\nReceived exception from server (version 20.4.5):\r\nCode: 241. DB::Exception: Received from localhost:9000. DB::Exception: Memory limit (for query) exceeded: would use 512.32 GiB (attempt to allocate chunk of 549755813456 bytes), maximum: 9.31 GiB.\r\n\r\n0 rows in set. Elapsed: 1.141 sec. Processed 10.03 million rows, 100.27 MB (8.79 million rows/s., 87.86 MB/s.)\r\n```\r\n\r\n**Workaround**\r\n\r\nWrap `ARRAY JOIN` into subquery and do `LIMIT BY` on top of it:\r\n```sql\r\nSELECT *\r\nFROM\r\n(\r\n    SELECT\r\n        a,\r\n        b,\r\n        c\r\n    FROM\r\n    (\r\n        -- same thing as above\r\n    )\r\n    ARRAY JOIN\r\n        b_ AS b,\r\n        c\r\n    WHERE b = max_b\r\n)\r\nLIMIT 1 BY a\r\n```","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11862/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11862/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11813","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11813/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11813/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11813/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/11813","id":642276445,"node_id":"MDU6SXNzdWU2NDIyNzY0NDU=","number":11813,"title":"array join: no columns in nested table","user":{"login":"akuzm","id":36882414,"node_id":"MDQ6VXNlcjM2ODgyNDE0","avatar_url":"https://avatars.githubusercontent.com/u/36882414?v=4","gravatar_id":"","url":"https://api.github.com/users/akuzm","html_url":"https://github.com/akuzm","followers_url":"https://api.github.com/users/akuzm/followers","following_url":"https://api.github.com/users/akuzm/following{/other_user}","gists_url":"https://api.github.com/users/akuzm/gists{/gist_id}","starred_url":"https://api.github.com/users/akuzm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/akuzm/subscriptions","organizations_url":"https://api.github.com/users/akuzm/orgs","repos_url":"https://api.github.com/users/akuzm/repos","events_url":"https://api.github.com/users/akuzm/events{/privacy}","received_events_url":"https://api.github.com/users/akuzm/received_events","type":"User","site_admin":false},"labels":[{"id":1357578153,"node_id":"MDU6TGFiZWwxMzU3NTc4MTUz","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-joins","name":"comp-joins","color":"b5bcff","default":false,"description":"JOINs"},{"id":1401233890,"node_id":"MDU6TGFiZWwxNDAxMjMzODkw","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-arrays","name":"comp-arrays","color":"b5bcff","default":false,"description":"Arrays / array joins / higher order"},{"id":1575085465,"node_id":"MDU6TGFiZWwxNTc1MDg1NDY1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/unexpected%20behaviour","name":"unexpected behaviour","color":"e088ca","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2020-06-20T00:46:53Z","updated_at":"2020-10-16T18:09:50Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"body":"```\r\n/4/ :) select 1 from (select 1 x) l join (select 1 y, [1] a) r on l.x = r.y array join r.a;\r\n\r\nReceived exception from server (version 20.5.1):\r\nCode: 208. DB::Exception: Received from localhost:9000. DB::Exception: No columns in nested table a. Stack trace:\r\n```\r\n\r\n@4ertus2 FYI","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11813/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11813/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11784","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11784/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11784/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11784/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/11784","id":641846404,"node_id":"MDU6SXNzdWU2NDE4NDY0MDQ=","number":11784,"title":"Add ability to set custom programname for syslog logger","user":{"login":"everythings-gonna-be-alright","id":21150546,"node_id":"MDQ6VXNlcjIxMTUwNTQ2","avatar_url":"https://avatars.githubusercontent.com/u/21150546?v=4","gravatar_id":"","url":"https://api.github.com/users/everythings-gonna-be-alright","html_url":"https://github.com/everythings-gonna-be-alright","followers_url":"https://api.github.com/users/everythings-gonna-be-alright/followers","following_url":"https://api.github.com/users/everythings-gonna-be-alright/following{/other_user}","gists_url":"https://api.github.com/users/everythings-gonna-be-alright/gists{/gist_id}","starred_url":"https://api.github.com/users/everythings-gonna-be-alright/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/everythings-gonna-be-alright/subscriptions","organizations_url":"https://api.github.com/users/everythings-gonna-be-alright/orgs","repos_url":"https://api.github.com/users/everythings-gonna-be-alright/repos","events_url":"https://api.github.com/users/everythings-gonna-be-alright/events{/privacy}","received_events_url":"https://api.github.com/users/everythings-gonna-be-alright/received_events","type":"User","site_admin":false},"labels":[{"id":845247686,"node_id":"MDU6TGFiZWw4NDUyNDc2ODY=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/usability","name":"usability","color":"ebf28c","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2020-06-19T09:47:55Z","updated_at":"2020-06-19T09:49:59Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"For now syslog logs doesn't contain correct programname:\r\n```2020.06.19 12:01:18.361028 [ 24759 ] {} <Debug> DiskLocal: Reserving 1.26 MiB on disk `default`, having unreserved 103.22 GiB.```\r\n\r\nUser can set only custom: `hostname` or `facility`\r\nI suggest to add option for setting custom syslog programname (TAG field without process id):\r\n```\r\n<logger>\r\n    <use_syslog>1</use_syslog>\r\n    <syslog>\r\n      <programname>clickhouse-production-scc</programname>\r\n    </syslog>\r\n</logger>\r\n```\r\n\r\nRFC 5424                  The Syslog Protocol  \r\nhttps://tools.ietf.org/html/rfc5424\r\n> The MSG part of the message is described as TAG and CONTENT in RFC\r\n>    3164.  In this document, MSG is what was called CONTENT in RFC 3164.\r\n>    The TAG is now part of the header, but not as a single field.  The\r\n>    TAG has been split into APP-NAME, PROCID, and MSGID.  This does not\r\n>    totally resemble the usage of TAG, but provides the same\r\n>    functionality for most of the cases\r\n ","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11784/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11784/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11780","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11780/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11780/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11780/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/11780","id":641782880,"node_id":"MDU6SXNzdWU2NDE3ODI4ODA=","number":11780,"title":"How to share data among readonly replicas/computation nodes","user":{"login":"slimtom95","id":20624187,"node_id":"MDQ6VXNlcjIwNjI0MTg3","avatar_url":"https://avatars.githubusercontent.com/u/20624187?v=4","gravatar_id":"","url":"https://api.github.com/users/slimtom95","html_url":"https://github.com/slimtom95","followers_url":"https://api.github.com/users/slimtom95/followers","following_url":"https://api.github.com/users/slimtom95/following{/other_user}","gists_url":"https://api.github.com/users/slimtom95/gists{/gist_id}","starred_url":"https://api.github.com/users/slimtom95/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/slimtom95/subscriptions","organizations_url":"https://api.github.com/users/slimtom95/orgs","repos_url":"https://api.github.com/users/slimtom95/repos","events_url":"https://api.github.com/users/slimtom95/events{/privacy}","received_events_url":"https://api.github.com/users/slimtom95/received_events","type":"User","site_admin":false},"labels":[{"id":386401510,"node_id":"MDU6TGFiZWwzODY0MDE1MTA=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/question","name":"question","color":"bfdadc","default":true,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2020-06-19T07:55:50Z","updated_at":"2020-07-13T08:57:25Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"\r\nIn order to handle the expected high load during some peak period like Black-Friday in retailing, we may  \r\n need to prepare more machines and launch more replicas, this means preparing more data copies ahead.\r\nWith distributed file system storage, I wonder is there any way to not copy even more data, but to share them among the new launched nodes? These nodes can be read-only or computation-only.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11780/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11780/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11776","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11776/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11776/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11776/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/11776","id":641659314,"node_id":"MDU6SXNzdWU2NDE2NTkzMTQ=","number":11776,"title":"Kinesis Support","user":{"login":"mauidude","id":823384,"node_id":"MDQ6VXNlcjgyMzM4NA==","avatar_url":"https://avatars.githubusercontent.com/u/823384?v=4","gravatar_id":"","url":"https://api.github.com/users/mauidude","html_url":"https://github.com/mauidude","followers_url":"https://api.github.com/users/mauidude/followers","following_url":"https://api.github.com/users/mauidude/following{/other_user}","gists_url":"https://api.github.com/users/mauidude/gists{/gist_id}","starred_url":"https://api.github.com/users/mauidude/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mauidude/subscriptions","organizations_url":"https://api.github.com/users/mauidude/orgs","repos_url":"https://api.github.com/users/mauidude/repos","events_url":"https://api.github.com/users/mauidude/events{/privacy}","received_events_url":"https://api.github.com/users/mauidude/received_events","type":"User","site_admin":false},"labels":[{"id":386401508,"node_id":"MDU6TGFiZWwzODY0MDE1MDg=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/help%20wanted","name":"help wanted","color":"128A0C","default":true,"description":null},{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":1365579236,"node_id":"MDU6TGFiZWwxMzY1NTc5MjM2","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/minor","name":"minor","color":"FFF8F8","default":false,"description":"Priority: minor"},{"id":1507886722,"node_id":"MDU6TGFiZWwxNTA3ODg2NzIy","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/st-discussion","name":"st-discussion","color":"e5b890","default":false,"description":"The story requires discussion /research / expert help / design & decomposition before will be taken"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2020-06-19T02:28:56Z","updated_at":"2021-06-13T23:27:34Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"I would like to be able to consume data from AWS Kinesis the same way it is done with Kafka. It would make it easier for those working in AWS to quickly integrate with ClickHouse without having to create and maintain EC2 instances running Kafka.\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11776/reactions","total_count":8,"+1":8,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11776/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11775","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11775/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11775/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11775/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/11775","id":641558319,"node_id":"MDU6SXNzdWU2NDE1NTgzMTk=","number":11775,"title":"Input formats: save unknown fields to a special column instead of skipping","user":{"login":"ksverdlov","id":2886098,"node_id":"MDQ6VXNlcjI4ODYwOTg=","avatar_url":"https://avatars.githubusercontent.com/u/2886098?v=4","gravatar_id":"","url":"https://api.github.com/users/ksverdlov","html_url":"https://github.com/ksverdlov","followers_url":"https://api.github.com/users/ksverdlov/followers","following_url":"https://api.github.com/users/ksverdlov/following{/other_user}","gists_url":"https://api.github.com/users/ksverdlov/gists{/gist_id}","starred_url":"https://api.github.com/users/ksverdlov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ksverdlov/subscriptions","organizations_url":"https://api.github.com/users/ksverdlov/orgs","repos_url":"https://api.github.com/users/ksverdlov/repos","events_url":"https://api.github.com/users/ksverdlov/events{/privacy}","received_events_url":"https://api.github.com/users/ksverdlov/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":1401255404,"node_id":"MDU6TGFiZWwxNDAxMjU1NDA0","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-formats","name":"comp-formats","color":"b5bcff","default":false,"description":"Input / output formats"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2020-06-18T21:24:40Z","updated_at":"2020-06-19T05:13:25Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"**Use case**\r\nIf `input_format_skip_unknown_fields = 1` (skipping is enabled), ClickHouse doesn’t insert extra data. I need to save extra data in origin format to a special column (String-type) for further processing.\r\n\r\n**Describe the solution you'd like**\r\nSome additional option for format, in which I can pass a column name. In that column Clickhouse will save unknown/skipped fields in origin format.\r\n\r\nFor example,\r\n\r\n```INSERT INTO UserActivity FORMAT JSONEachRow(`skipped`) {\"PageViews\":5, \"UserID\":\"4324182021466249494\", \"Duration\":146,\"Sign\":-1,\"SomeUnknownField\":\"StringValue\"} {\"UserID\":\"4324182021466249494\",\"PageViews\":6,\"Duration\":185,\"Sign\":1,\"SomeOtherUnknownField\":123}```\r\n\r\n**Describe alternatives you've considered**\r\nInsert all JSON object to one String column with short TTL for latter processing. Unfortunately Clickhouse doesn`t have any functions to modify JSONs (to cut some fields, for example).\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11775/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11775/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11764","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11764/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11764/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11764/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/11764","id":641307172,"node_id":"MDU6SXNzdWU2NDEzMDcxNzI=","number":11764,"title":"Dictionary does not know LowCardinality(String)","user":{"login":"simPod","id":327717,"node_id":"MDQ6VXNlcjMyNzcxNw==","avatar_url":"https://avatars.githubusercontent.com/u/327717?v=4","gravatar_id":"","url":"https://api.github.com/users/simPod","html_url":"https://github.com/simPod","followers_url":"https://api.github.com/users/simPod/followers","following_url":"https://api.github.com/users/simPod/following{/other_user}","gists_url":"https://api.github.com/users/simPod/gists{/gist_id}","starred_url":"https://api.github.com/users/simPod/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/simPod/subscriptions","organizations_url":"https://api.github.com/users/simPod/orgs","repos_url":"https://api.github.com/users/simPod/repos","events_url":"https://api.github.com/users/simPod/events{/privacy}","received_events_url":"https://api.github.com/users/simPod/received_events","type":"User","site_admin":false},"labels":[{"id":386401509,"node_id":"MDU6TGFiZWwzODY0MDE1MDk=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/invalid","name":"invalid","color":"e6e6e6","default":true,"description":null},{"id":1351463315,"node_id":"MDU6TGFiZWwxMzUxNDYzMzE1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-dictionary","name":"comp-dictionary","color":"b5bcff","default":false,"description":"Dictionaries"},{"id":1446368065,"node_id":"MDU6TGFiZWwxNDQ2MzY4MDY1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-lowcardinality","name":"comp-lowcardinality","color":"b5bcff","default":false,"description":"LowCardinality data type"}],"state":"open","locked":false,"assignee":{"login":"kitaisreal","id":22458333,"node_id":"MDQ6VXNlcjIyNDU4MzMz","avatar_url":"https://avatars.githubusercontent.com/u/22458333?v=4","gravatar_id":"","url":"https://api.github.com/users/kitaisreal","html_url":"https://github.com/kitaisreal","followers_url":"https://api.github.com/users/kitaisreal/followers","following_url":"https://api.github.com/users/kitaisreal/following{/other_user}","gists_url":"https://api.github.com/users/kitaisreal/gists{/gist_id}","starred_url":"https://api.github.com/users/kitaisreal/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kitaisreal/subscriptions","organizations_url":"https://api.github.com/users/kitaisreal/orgs","repos_url":"https://api.github.com/users/kitaisreal/repos","events_url":"https://api.github.com/users/kitaisreal/events{/privacy}","received_events_url":"https://api.github.com/users/kitaisreal/received_events","type":"User","site_admin":false},"assignees":[{"login":"kitaisreal","id":22458333,"node_id":"MDQ6VXNlcjIyNDU4MzMz","avatar_url":"https://avatars.githubusercontent.com/u/22458333?v=4","gravatar_id":"","url":"https://api.github.com/users/kitaisreal","html_url":"https://github.com/kitaisreal","followers_url":"https://api.github.com/users/kitaisreal/followers","following_url":"https://api.github.com/users/kitaisreal/following{/other_user}","gists_url":"https://api.github.com/users/kitaisreal/gists{/gist_id}","starred_url":"https://api.github.com/users/kitaisreal/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kitaisreal/subscriptions","organizations_url":"https://api.github.com/users/kitaisreal/orgs","repos_url":"https://api.github.com/users/kitaisreal/repos","events_url":"https://api.github.com/users/kitaisreal/events{/privacy}","received_events_url":"https://api.github.com/users/kitaisreal/received_events","type":"User","site_admin":false}],"milestone":null,"comments":0,"created_at":"2020-06-18T15:28:54Z","updated_at":"2021-06-23T13:14:53Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"**Describe the bug**\r\n\r\nHaving Dictionary attribute `name LowCardinality(String)` results in \r\n\r\nCode: 50, e.displayText() = DB::Exception: Unknown type LowCardinality(String)\r\n\r\n**How to reproduce**\r\n* Which ClickHouse server version to use\r\n20.1\r\n\r\n**Error message and/or stacktrace**\r\n\r\n```\r\n0. 0x1033ddd0 Poco::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)  in /usr/bin/clickhouse\r\n1. 0x8ea95cd DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)  in /usr/bin/clickhouse\r\n2. 0xccd5745 ?  in /usr/bin/clickhouse\r\n3. 0xccd1628 DB::DictionaryStructure::getAttributes(Poco::Util::AbstractConfiguration const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool, bool)  in /usr/bin/clickhouse\r\n4. 0xccd3ebe DB::DictionaryStructure::DictionaryStructure(Poco::Util::AbstractConfiguration const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)  in /usr/bin/clickhouse\r\n5. 0xccc7625 DB::DictionaryFactory::create(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, Poco::Util::AbstractConfiguration const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context const&, bool) const  in /usr/bin/clickhouse\r\n6. 0xcf92a5e DB::ExternalDictionariesLoader::create(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, Poco::Util::AbstractConfiguration const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const  in /usr/bin/clickhouse\r\n7. 0xcf93070 DB::ExternalLoader::createObject(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::ExternalLoader::ObjectConfig const&, std::__1::shared_ptr<DB::IExternalLoadable const> const&) const  in /usr/bin/clickhouse\r\n8. 0xcf9e45a DB::ExternalLoader::LoadingDispatcher::doLoading(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned long, bool, unsigned long, bool)  in /usr/bin/clickhouse\r\n9. 0xcf9734a ThreadFromGlobalPool::ThreadFromGlobalPool<void (DB::ExternalLoader::LoadingDispatcher::*)(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned long, bool, unsigned long, bool), DB::ExternalLoader::LoadingDispatcher*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&, unsigned long&, bool&, unsigned long&, bool>(void (DB::ExternalLoader::LoadingDispatcher::*&&)(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned long, bool, unsigned long, bool), DB::ExternalLoader::LoadingDispatcher*&&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&, unsigned long&, bool&, unsigned long&, bool&&)::'lambda'()::operator()() const  in /usr/bin/clickhouse\r\n10. 0x8eccf9b ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>)  in /usr/bin/clickhouse\r\n11. 0x8ecb3a3 ?  in /usr/bin/clickhouse\r\n12. 0x74a4 start_thread  in /lib/x86_64-linux-gnu/libpthread-2.24.so\r\n13. 0xe8d0f clone  in /lib/x86_64-linux-gnu/libc-2.24.so\r\n```\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11764/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11764/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11757","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11757/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11757/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11757/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/11757","id":641180019,"node_id":"MDU6SXNzdWU2NDExODAwMTk=","number":11757,"title":"cross join + array join: not found column in block","user":{"login":"akuzm","id":36882414,"node_id":"MDQ6VXNlcjM2ODgyNDE0","avatar_url":"https://avatars.githubusercontent.com/u/36882414?v=4","gravatar_id":"","url":"https://api.github.com/users/akuzm","html_url":"https://github.com/akuzm","followers_url":"https://api.github.com/users/akuzm/followers","following_url":"https://api.github.com/users/akuzm/following{/other_user}","gists_url":"https://api.github.com/users/akuzm/gists{/gist_id}","starred_url":"https://api.github.com/users/akuzm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/akuzm/subscriptions","organizations_url":"https://api.github.com/users/akuzm/orgs","repos_url":"https://api.github.com/users/akuzm/repos","events_url":"https://api.github.com/users/akuzm/events{/privacy}","received_events_url":"https://api.github.com/users/akuzm/received_events","type":"User","site_admin":false},"labels":[{"id":1357578153,"node_id":"MDU6TGFiZWwxMzU3NTc4MTUz","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-joins","name":"comp-joins","color":"b5bcff","default":false,"description":"JOINs"},{"id":1575085465,"node_id":"MDU6TGFiZWwxNTc1MDg1NDY1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/unexpected%20behaviour","name":"unexpected behaviour","color":"e088ca","default":false,"description":""},{"id":1842603313,"node_id":"MDU6TGFiZWwxODQyNjAzMzEz","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-alias-columns","name":"comp-alias-columns","color":"b5bcff","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2020-06-18T12:47:54Z","updated_at":"2020-10-16T18:09:50Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"body":"```\r\n~3~ :) select * from (select [1, 2] a) aa cross join (select [3, 4] b) bb array join aa.a, bb.b;\r\n\r\nReceived exception from server (version 20.5.1):\r\nCode: 10. DB::Exception: Received from localhost:9000. DB::Exception: Not found column b in block. There are only columns: a. Stack trace:\r\n```","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11757/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11757/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11752","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11752/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11752/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11752/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/11752","id":641032086,"node_id":"MDU6SXNzdWU2NDEwMzIwODY=","number":11752,"title":"GROUP BY capable of aggregating a single row to multiple groups","user":{"login":"adrian17","id":4729533,"node_id":"MDQ6VXNlcjQ3Mjk1MzM=","avatar_url":"https://avatars.githubusercontent.com/u/4729533?v=4","gravatar_id":"","url":"https://api.github.com/users/adrian17","html_url":"https://github.com/adrian17","followers_url":"https://api.github.com/users/adrian17/followers","following_url":"https://api.github.com/users/adrian17/following{/other_user}","gists_url":"https://api.github.com/users/adrian17/gists{/gist_id}","starred_url":"https://api.github.com/users/adrian17/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/adrian17/subscriptions","organizations_url":"https://api.github.com/users/adrian17/orgs","repos_url":"https://api.github.com/users/adrian17/repos","events_url":"https://api.github.com/users/adrian17/events{/privacy}","received_events_url":"https://api.github.com/users/adrian17/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2020-06-18T08:55:03Z","updated_at":"2020-06-18T08:57:06Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Originally asked in\r\nhttps://stackoverflow.com/questions/61911990/way-to-achieve-overlapping-group-by-groups-with-correct-subtotals-in-clickhouse/\r\n\r\n**Use case**\r\n\r\nExample use cases:\r\n- given a table containing answers to a survey with single- and multiple choice question (eg \"which colors do you like? red/green/blue\", \"which devices do you own? pc/phone/tablet\") stored as `Array(UInt8)` or `Array(String)` column per question, make a query resulting in a single table answering \"how many users like red/gree/blue\"?\r\n- given a similar table, make a more complex query (partially user-defined via some interface) answering questions like \"how many users like red and own a pc, compared to users who like blue and own a tablet or phone?\" or \"how many users were born between 1970 and 1990, compared to 1980 and 2000?\"\r\n\r\nNote that in all these cases, the groups are overlapping - a single user may need to be aggregated into multiple groups.\r\n\r\nAdditionally: these queries might use `ROLLUP` or `CUBE` and use more grouping levels (group by date, country, gender... maybe by 2-3 user-defined grouping sets at once)\r\n\r\n**Solutions I tried**\r\nAll my current solutions are based on `arrayJoin`, for example:\r\nfor use case 1:\r\n```\r\nselect\r\n\tdate,\r\n\tarrayJoin(liked_color) as color,\r\n\tuniqExact(user) as num_users,\r\n\tsum(other_metrics) as other_metrics\r\nfrom survey\r\ngroup by date, color;\r\n```\r\n\r\nfor use case 2:\r\n```\r\nselect\r\n\tdate,\r\n\tarrayJoin(arrayConcat(\r\n\t\tif(has(liked_color, 'red') and has(devices, 'pc'), [1], []),\r\n\t\tif(has(liked_color, 'blue') and (has(devices, 'tablet') or has(devices, 'phone')), [2], []),\r\n\t\tif(born between '1970-01-01' and '1990-01-01', [3], []),\r\n\t\tif(born between '1980-01-01' and '2000-01-01', [4], [])\r\n\t)) as custom_group,\r\n\r\n\tuniqExact(user) as num_users,\r\n\tsum(other_metrics) as other_metrics\r\nfrom survey\r\ngroup by date, custom_group;\r\n```\r\n\r\nThey _do_ work for simple cases, but have two big issues:\r\n- `arrayJoin` seems quite slow in general\r\n- as soon as you use `ROLLUP`, `CUBE` or `WITH TOTALS`, the partial aggregations completely \"break\" - since `arrayJoin` \"duplicates\" rows, the same row will get added into the totals several times and `other_metrics` will be too big. This is not a bug - it's technically what I asked for in SQL, but not at all what I actually want. This forces me to either make separate queries for partial sums, or add extra bookkeeping into queries to only add each \"duplicated row\" into totals once - which slows down the query even more.\r\n\r\n**Describe the solution you'd like**\r\nSomething that aggregates by each _element_ of the array. In other words, semantically similar to `arrayJoin` + `group by`, except when combined with `rollup` or `totals` the row would still count only once.\r\nIn SQL syntax, maybe something like `group by date, UNPACK liked_color` or new variant of `arrayJoin`?","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11752/reactions","total_count":5,"+1":5,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11752/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11749","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11749/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11749/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11749/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/11749","id":640950367,"node_id":"MDU6SXNzdWU2NDA5NTAzNjc=","number":11749,"title":"Optimize boolean conditions using CNF / DNF","user":{"login":"filimonov","id":1549571,"node_id":"MDQ6VXNlcjE1NDk1NzE=","avatar_url":"https://avatars.githubusercontent.com/u/1549571?v=4","gravatar_id":"","url":"https://api.github.com/users/filimonov","html_url":"https://github.com/filimonov","followers_url":"https://api.github.com/users/filimonov/followers","following_url":"https://api.github.com/users/filimonov/following{/other_user}","gists_url":"https://api.github.com/users/filimonov/gists{/gist_id}","starred_url":"https://api.github.com/users/filimonov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/filimonov/subscriptions","organizations_url":"https://api.github.com/users/filimonov/orgs","repos_url":"https://api.github.com/users/filimonov/repos","events_url":"https://api.github.com/users/filimonov/events{/privacy}","received_events_url":"https://api.github.com/users/filimonov/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":1401777979,"node_id":"MDU6TGFiZWwxNDAxNzc3OTc5","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-optimizers","name":"comp-optimizers","color":"b5bcff","default":false,"description":"Query optimizations"}],"state":"open","locked":false,"assignee":{"login":"CurtizJ","id":20361854,"node_id":"MDQ6VXNlcjIwMzYxODU0","avatar_url":"https://avatars.githubusercontent.com/u/20361854?v=4","gravatar_id":"","url":"https://api.github.com/users/CurtizJ","html_url":"https://github.com/CurtizJ","followers_url":"https://api.github.com/users/CurtizJ/followers","following_url":"https://api.github.com/users/CurtizJ/following{/other_user}","gists_url":"https://api.github.com/users/CurtizJ/gists{/gist_id}","starred_url":"https://api.github.com/users/CurtizJ/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/CurtizJ/subscriptions","organizations_url":"https://api.github.com/users/CurtizJ/orgs","repos_url":"https://api.github.com/users/CurtizJ/repos","events_url":"https://api.github.com/users/CurtizJ/events{/privacy}","received_events_url":"https://api.github.com/users/CurtizJ/received_events","type":"User","site_admin":false},"assignees":[{"login":"CurtizJ","id":20361854,"node_id":"MDQ6VXNlcjIwMzYxODU0","avatar_url":"https://avatars.githubusercontent.com/u/20361854?v=4","gravatar_id":"","url":"https://api.github.com/users/CurtizJ","html_url":"https://github.com/CurtizJ","followers_url":"https://api.github.com/users/CurtizJ/followers","following_url":"https://api.github.com/users/CurtizJ/following{/other_user}","gists_url":"https://api.github.com/users/CurtizJ/gists{/gist_id}","starred_url":"https://api.github.com/users/CurtizJ/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/CurtizJ/subscriptions","organizations_url":"https://api.github.com/users/CurtizJ/orgs","repos_url":"https://api.github.com/users/CurtizJ/repos","events_url":"https://api.github.com/users/CurtizJ/events{/privacy}","received_events_url":"https://api.github.com/users/CurtizJ/received_events","type":"User","site_admin":false}],"milestone":null,"comments":4,"created_at":"2020-06-18T06:40:16Z","updated_at":"2021-12-21T10:57:41Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"body":"### The problem\r\n\r\nThe table a more than hundred cols but only 3 of them are indexed, let call them `PARTITION A ORDER BY B, C, D`\r\n\r\nThe query use `A` `B` and `D` and another cols which is not indexed `E`.\r\nAnd it's look like\r\n```sql\r\nselect * from T where\r\nA = x and (\r\n    (B = 1 and D = 2 and E = 3) or\r\n    (B = 1 and D = 3 and E = 4) /* .... repeated a lot of times */\r\n)\r\n```\r\nWhile the numbers of condition is small the query is quite fast (150ms), with 50 conditions the query start to take 10s and more.\r\n\r\nStrangely if the wheres are re ordered like so :\r\n\r\n```sql\r\nselect * from T where\r\nA = x and (\r\n    B = 1 and (\r\n       D = 2 and (E = 3 or E=4 or E=5 /*.... repeated a lot of times */ ) OR\r\n       D = 3 and (E = 3 or E=4 or E=5 /*.... repeated a lot of times */  ) OR\r\n       /*.... repeated a lot of times */\r\n   )\r\n)\r\n```\r\n\r\nthe query is sub seconds.\r\nFrom the boolean point of view the filter is the same but it seems clickhouse like that a way more than the first one.\r\n\r\n### Proposed solution \r\n\r\nIntroduce optimizer(s) to convert logical expression to [conjunctive normal form](https://en.wikipedia.org/wiki/Conjunctive_normal_form) (CNF) or [disjunctive normal form](https://en.wikipedia.org/wiki/Disjunctive_normal_form) (DNF)\r\n\r\nCNF is smth like\r\n```\r\n(c1 = 2 OR c1 = 5) AND (c2 < 5 OR c2 > 20) AND (c3 = 'abc' OR c3 = 'efg')\r\n```\r\n\r\nDNF is  smth like \r\n```\r\n(c1 = 2 AND c2 = 5) OR (c2 > 5 AND c2 < 10) OR c3 = 'abc'\r\n```\r\n\r\nAny logical expression has CNF / DNF form. \r\n\r\nIn some cases, CNF or DNF may be more preferable and both have more chances to use index than non-normalized conditions.\r\n\r\n### Extra options\r\n\r\nDuring those optimizations, it's may be possible to detect always true / always false sub-conditions and remove them.\r\n\r\n### Some references in context of DBs\r\n* https://docs.actian.com/psql/psqlv13/index.html#page/sqlref%2Fsqlperf.htm%23\r\n* https://docs.teradata.com/reader/i_VlYHwN0b8knh6AEWrv1Q/o6Bog0jlIbA13_g1yNycTA\r\n* https://en.wikipedia.org/wiki/Category:Normal_forms_(logic)\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11749/reactions","total_count":3,"+1":3,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11749/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11721","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11721/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11721/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11721/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/11721","id":640042997,"node_id":"MDU6SXNzdWU2NDAwNDI5OTc=","number":11721,"title":"Add custom \"-Map\" aggregate function combinator","user":{"login":"siradjev","id":10959667,"node_id":"MDQ6VXNlcjEwOTU5NjY3","avatar_url":"https://avatars.githubusercontent.com/u/10959667?v=4","gravatar_id":"","url":"https://api.github.com/users/siradjev","html_url":"https://github.com/siradjev","followers_url":"https://api.github.com/users/siradjev/followers","following_url":"https://api.github.com/users/siradjev/following{/other_user}","gists_url":"https://api.github.com/users/siradjev/gists{/gist_id}","starred_url":"https://api.github.com/users/siradjev/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/siradjev/subscriptions","organizations_url":"https://api.github.com/users/siradjev/orgs","repos_url":"https://api.github.com/users/siradjev/repos","events_url":"https://api.github.com/users/siradjev/events{/privacy}","received_events_url":"https://api.github.com/users/siradjev/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2020-06-16T23:54:50Z","updated_at":"2020-10-16T14:07:07Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"**Use case**\r\nCurrently, there are sumMap/minMap/maxMap aggregate function combinator that allows calculating aggregated values in bins. \r\nIt's quite a frequent use case considering lack of window functions. Examples include:\r\n- Multiple random attributes are stored in row with id/values (and attributes may not match across rows), when custom aggregate function across attributes is needed with some precondition (e.g. median, quantile, etc.). Currently, the only way to achieve is to do fold/unfold with 2 level subqueries or double pass over an array with further arrayReduce. https://t.me/clickhouse_ru/148608\r\n- Reducing two arrays for by keys as in `arrayReduce('medianMap', arr1, arr2);` (basically in-row custom  function), allowing making different aggregations with one fold/unfold loop. \r\n- Getting top-X% queries (e.g. top 10 percentile, or top-10) by multiple dimensions, now requires running separate subqueries with array group to calculate threshold value. \r\n\r\n**Describe the solution you'd like**\r\nHaving -Map generic aggregate function combinator would allow much simpler understanding and creating of multi-dimensional aggregates. \r\nAlternative could be defining arrayReduceByKeys function that would take two input arrays and bin them by keys array with custom aggregation function as discussed in https://t.me/clickhouse_ru/148584. \r\n\r\n**Additional context**\r\n#4933 may address this request partially, or vice versa. -Map combinator would be more concise syntax (given already existing functions)\r\nhttps://t.me/clickhouse_ru/148608\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11721/reactions","total_count":5,"+1":5,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11721/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11712","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11712/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11712/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11712/events","html_url":"https://github.com/ClickHouse/ClickHouse/pull/11712","id":639831872,"node_id":"MDExOlB1bGxSZXF1ZXN0NDM1MzUxMzUz","number":11712,"title":"Distinct in order optimization","user":{"login":"dimarub2000","id":43433094,"node_id":"MDQ6VXNlcjQzNDMzMDk0","avatar_url":"https://avatars.githubusercontent.com/u/43433094?v=4","gravatar_id":"","url":"https://api.github.com/users/dimarub2000","html_url":"https://github.com/dimarub2000","followers_url":"https://api.github.com/users/dimarub2000/followers","following_url":"https://api.github.com/users/dimarub2000/following{/other_user}","gists_url":"https://api.github.com/users/dimarub2000/gists{/gist_id}","starred_url":"https://api.github.com/users/dimarub2000/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dimarub2000/subscriptions","organizations_url":"https://api.github.com/users/dimarub2000/orgs","repos_url":"https://api.github.com/users/dimarub2000/repos","events_url":"https://api.github.com/users/dimarub2000/events{/privacy}","received_events_url":"https://api.github.com/users/dimarub2000/received_events","type":"User","site_admin":false},"labels":[{"id":1309683578,"node_id":"MDU6TGFiZWwxMzA5NjgzNTc4","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/pr-performance","name":"pr-performance","color":"007700","default":false,"description":"Pull request with some performance improvements"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2020-06-16T17:03:06Z","updated_at":"2022-01-30T00:28:05Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":true,"pull_request":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/pulls/11712","html_url":"https://github.com/ClickHouse/ClickHouse/pull/11712","diff_url":"https://github.com/ClickHouse/ClickHouse/pull/11712.diff","patch_url":"https://github.com/ClickHouse/ClickHouse/pull/11712.patch","merged_at":null},"body":"I hereby agree to the terms of the CLA available at: https://yandex.ru/legal/cla/?lang=en\r\n\r\nChangelog category (leave one):\r\n- Performance Improvement\r\n\r\nChangelog entry (a user-readable short description of the changes that goes to CHANGELOG.md):\r\nDistinct containing primary key columns is now optimized.\r\n\r\nDetailed description / Documentation draft:\r\nTBA","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11712/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11712/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11707","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11707/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11707/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11707/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/11707","id":639615631,"node_id":"MDU6SXNzdWU2Mzk2MTU2MzE=","number":11707,"title":"GROUP BY push down optimization","user":{"login":"KochetovNicolai","id":4092911,"node_id":"MDQ6VXNlcjQwOTI5MTE=","avatar_url":"https://avatars.githubusercontent.com/u/4092911?v=4","gravatar_id":"","url":"https://api.github.com/users/KochetovNicolai","html_url":"https://github.com/KochetovNicolai","followers_url":"https://api.github.com/users/KochetovNicolai/followers","following_url":"https://api.github.com/users/KochetovNicolai/following{/other_user}","gists_url":"https://api.github.com/users/KochetovNicolai/gists{/gist_id}","starred_url":"https://api.github.com/users/KochetovNicolai/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/KochetovNicolai/subscriptions","organizations_url":"https://api.github.com/users/KochetovNicolai/orgs","repos_url":"https://api.github.com/users/KochetovNicolai/repos","events_url":"https://api.github.com/users/KochetovNicolai/events{/privacy}","received_events_url":"https://api.github.com/users/KochetovNicolai/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null}],"state":"open","locked":false,"assignee":{"login":"KochetovNicolai","id":4092911,"node_id":"MDQ6VXNlcjQwOTI5MTE=","avatar_url":"https://avatars.githubusercontent.com/u/4092911?v=4","gravatar_id":"","url":"https://api.github.com/users/KochetovNicolai","html_url":"https://github.com/KochetovNicolai","followers_url":"https://api.github.com/users/KochetovNicolai/followers","following_url":"https://api.github.com/users/KochetovNicolai/following{/other_user}","gists_url":"https://api.github.com/users/KochetovNicolai/gists{/gist_id}","starred_url":"https://api.github.com/users/KochetovNicolai/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/KochetovNicolai/subscriptions","organizations_url":"https://api.github.com/users/KochetovNicolai/orgs","repos_url":"https://api.github.com/users/KochetovNicolai/repos","events_url":"https://api.github.com/users/KochetovNicolai/events{/privacy}","received_events_url":"https://api.github.com/users/KochetovNicolai/received_events","type":"User","site_admin":false},"assignees":[{"login":"KochetovNicolai","id":4092911,"node_id":"MDQ6VXNlcjQwOTI5MTE=","avatar_url":"https://avatars.githubusercontent.com/u/4092911?v=4","gravatar_id":"","url":"https://api.github.com/users/KochetovNicolai","html_url":"https://github.com/KochetovNicolai","followers_url":"https://api.github.com/users/KochetovNicolai/followers","following_url":"https://api.github.com/users/KochetovNicolai/following{/other_user}","gists_url":"https://api.github.com/users/KochetovNicolai/gists{/gist_id}","starred_url":"https://api.github.com/users/KochetovNicolai/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/KochetovNicolai/subscriptions","organizations_url":"https://api.github.com/users/KochetovNicolai/orgs","repos_url":"https://api.github.com/users/KochetovNicolai/repos","events_url":"https://api.github.com/users/KochetovNicolai/events{/privacy}","received_events_url":"https://api.github.com/users/KochetovNicolai/received_events","type":"User","site_admin":false}],"milestone":null,"comments":0,"created_at":"2020-06-16T12:13:31Z","updated_at":"2020-06-16T12:13:31Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"With UNION:\r\n```sql\r\nselect \r\n  x, sum(y)\r\nfrom (\r\n  select x, y\r\n  from t1\r\n  union all\r\n  select x, y\r\n  from t2\r\n)\r\ngroup by x\r\n```\r\nWith ARRAY JOIN \r\n```sql\r\nselect x, sum(y)\r\nfrom (\r\n  select x, yArr\r\n  from t\r\n  array join yArrArr as yArr\r\n)\r\narray join yArr as y\r\ngroup by x\r\n```","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11707/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11707/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11700","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11700/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11700/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11700/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/11700","id":639452310,"node_id":"MDU6SXNzdWU2Mzk0NTIzMTA=","number":11700,"title":"bloom filter as aggregate function","user":{"login":"filimonov","id":1549571,"node_id":"MDQ6VXNlcjE1NDk1NzE=","avatar_url":"https://avatars.githubusercontent.com/u/1549571?v=4","gravatar_id":"","url":"https://api.github.com/users/filimonov","html_url":"https://github.com/filimonov","followers_url":"https://api.github.com/users/filimonov/followers","following_url":"https://api.github.com/users/filimonov/following{/other_user}","gists_url":"https://api.github.com/users/filimonov/gists{/gist_id}","starred_url":"https://api.github.com/users/filimonov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/filimonov/subscriptions","organizations_url":"https://api.github.com/users/filimonov/orgs","repos_url":"https://api.github.com/users/filimonov/repos","events_url":"https://api.github.com/users/filimonov/events{/privacy}","received_events_url":"https://api.github.com/users/filimonov/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2020-06-16T07:53:56Z","updated_at":"2020-06-16T07:53:56Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"body":"Use cases:\r\n1) creating index-like MV in clickhouse (more complicated than skipping indexes, with needed groupings)\r\n2) creating index for offline data (data stored outside of ClickHouse, on external storages etc.)\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11700/reactions","total_count":2,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11700/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11698","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11698/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11698/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11698/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/11698","id":639413044,"node_id":"MDU6SXNzdWU2Mzk0MTMwNDQ=","number":11698,"title":"groupArray cpu utilization rate is low","user":{"login":"melin","id":1145830,"node_id":"MDQ6VXNlcjExNDU4MzA=","avatar_url":"https://avatars.githubusercontent.com/u/1145830?v=4","gravatar_id":"","url":"https://api.github.com/users/melin","html_url":"https://github.com/melin","followers_url":"https://api.github.com/users/melin/followers","following_url":"https://api.github.com/users/melin/following{/other_user}","gists_url":"https://api.github.com/users/melin/gists{/gist_id}","starred_url":"https://api.github.com/users/melin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/melin/subscriptions","organizations_url":"https://api.github.com/users/melin/orgs","repos_url":"https://api.github.com/users/melin/repos","events_url":"https://api.github.com/users/melin/events{/privacy}","received_events_url":"https://api.github.com/users/melin/received_events","type":"User","site_admin":false},"labels":[{"id":756395244,"node_id":"MDU6TGFiZWw3NTYzOTUyNDQ=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/performance","name":"performance","color":"c2e0c6","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2020-06-16T06:43:19Z","updated_at":"2020-06-16T13:10:27Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"```sql\r\nCREATE TABLE feature.tdl_f_r_128_split_0_device_id\r\nENGINE = MergeTree()\r\nPRIMARY KEY token_id\r\nORDER BY token_id AS\r\nSELECT\r\n    tuple.1 AS token_id,\r\n    device_id AS device_id,\r\n    tuple.2 AS time_time,\r\n    tuple.3 AS time_date,\r\n    tuple.4 AS gps_longitude,\r\n    tuple.5 AS active_time,\r\n    tuple.6 AS gps_latitude,\r\n    tuple.7 AS android_id,\r\n    groupData AS groupData\r\nFROM\r\n(\r\n    SELECT\r\n        device_id,\r\n        arr AS tuple,\r\n        groupData\r\n    FROM\r\n    (\r\n        SELECT\r\n            deviceid AS device_id,\r\n            groupArray((tokenid, toUnixTimestamp(time), substring(toString(time), 1, 10), gps_longitude, activetime, gps_latitude, androidid)) AS groupData\r\n        FROM datainsight.test_fp_info\r\n        WHERE (deviceid != 'null') AND (deviceid != '') AND (isNull(deviceid) = 0)\r\n        GROUP BY deviceid\r\n    )\r\n    LEFT ARRAY JOIN groupData AS arr\r\n)\r\n```\r\n\r\n> max_thread = 24, clickhouse version=20.4.4，cpu=24c, memory=110G。\r\n\r\n> datainsight.test_fp_info table data 85 million, exec time: 2880s\r\n\r\nDuring the run, there are only two or three cpu working\r\n![image](https://user-images.githubusercontent.com/1145830/84740284-b061f900-afdf-11ea-830f-68645eb3080f.png)\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11698/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11698/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11678","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11678/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11678/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11678/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/11678","id":638792904,"node_id":"MDU6SXNzdWU2Mzg3OTI5MDQ=","number":11678,"title":"Using `path` and disk's path causing problems","user":{"login":"fr05t1k","id":2131624,"node_id":"MDQ6VXNlcjIxMzE2MjQ=","avatar_url":"https://avatars.githubusercontent.com/u/2131624?v=4","gravatar_id":"","url":"https://api.github.com/users/fr05t1k","html_url":"https://github.com/fr05t1k","followers_url":"https://api.github.com/users/fr05t1k/followers","following_url":"https://api.github.com/users/fr05t1k/following{/other_user}","gists_url":"https://api.github.com/users/fr05t1k/gists{/gist_id}","starred_url":"https://api.github.com/users/fr05t1k/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fr05t1k/subscriptions","organizations_url":"https://api.github.com/users/fr05t1k/orgs","repos_url":"https://api.github.com/users/fr05t1k/repos","events_url":"https://api.github.com/users/fr05t1k/events{/privacy}","received_events_url":"https://api.github.com/users/fr05t1k/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":845247686,"node_id":"MDU6TGFiZWw4NDUyNDc2ODY=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/usability","name":"usability","color":"ebf28c","default":false,"description":""},{"id":1634815111,"node_id":"MDU6TGFiZWwxNjM0ODE1MTEx","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-multidisk","name":"comp-multidisk","color":"b5bcff","default":false,"description":"Storages & policies"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2020-06-15T11:57:13Z","updated_at":"2020-09-04T17:10:48Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"**Use case**\r\n```\r\n    <storage_configuration>\r\n        <disks>\r\n            <disk_hdd>\r\n                <path>/var/lib/clickhouse-hdd/</path>\r\n            </disk_hdd>\r\n            <disk_ssd>\r\n                <path>/var/lib/clickhouse-ssd/</path>\r\n            </disk_ssd>\r\n        </disks>\r\n        <policies>\r\n            <moving_to_ssd>\r\n                <volumes>\r\n                    <hot>\r\n                        <disk>disk_ssd</disk>\r\n                    </hot>\r\n                    <cold>\r\n                        <disk>disk_hdd</disk>\r\n                    </cold>\r\n                </volumes>\r\n                <move_factor>0.2</move_factor>\r\n            </moving_to_ssd>\r\n        </policies>\r\n    </storage_configuration>\r\n    <!-- Path to data directory, with trailing slash. -->\r\n    <path>/var/lib/clickhouse-hdd/</path>\r\n```\r\nIf we use such a configuration it will produce an error:\r\n```\r\n2020.06.15 05:54:59.867745 [ 195173 ] {} <Error> Application: DB::Exception: Part `201811_0_2998_6` was found on disk `default` which is not defined in the storage policy: Cannot attach table `default`.`clicks` from metadata file\r\n```\r\n\r\nBecause CH checks `/var/lib/clickhouse-hdd/data/default/clicks/` and CH thinks that this part is located on `default` disk, but storage policy doesn't have `default` disk.\r\n\r\n**Describe the solution you'd like**\r\nIt's better to check that multiple disks has a same path and don't start server because of bad configuration.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11678/reactions","total_count":4,"+1":3,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":1},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11678/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11596","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11596/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11596/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11596/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/11596","id":636856648,"node_id":"MDU6SXNzdWU2MzY4NTY2NDg=","number":11596,"title":"Grace hash join","user":{"login":"4ertus2","id":8061274,"node_id":"MDQ6VXNlcjgwNjEyNzQ=","avatar_url":"https://avatars.githubusercontent.com/u/8061274?v=4","gravatar_id":"","url":"https://api.github.com/users/4ertus2","html_url":"https://github.com/4ertus2","followers_url":"https://api.github.com/users/4ertus2/followers","following_url":"https://api.github.com/users/4ertus2/following{/other_user}","gists_url":"https://api.github.com/users/4ertus2/gists{/gist_id}","starred_url":"https://api.github.com/users/4ertus2/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/4ertus2/subscriptions","organizations_url":"https://api.github.com/users/4ertus2/orgs","repos_url":"https://api.github.com/users/4ertus2/repos","events_url":"https://api.github.com/users/4ertus2/events{/privacy}","received_events_url":"https://api.github.com/users/4ertus2/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":1357578153,"node_id":"MDU6TGFiZWwxMzU3NTc4MTUz","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-joins","name":"comp-joins","color":"b5bcff","default":false,"description":"JOINs"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2020-06-11T09:15:23Z","updated_at":"2022-01-13T13:20:19Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Implement `grace join`. I.e. we have `T join U`. Grace join splits `T` and `U` in buckets `T0, T1, ..., Tn` `U0, U1, ..., Un` with hash function and then join same hashed buckets `T0 vs U0, T1 vs U1, ..., Tn vs Un` with another join algorithm (generally hash-join).\r\n\r\nWe need inplement `class GraceJoin : public IJoin` that would use HashJoin per bucket inside. Also we need support flush right table buckets on disk. For left table buckets there's 2 general variants: flush buckets on disk or join not full buckets that we have in memory right now.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11596/reactions","total_count":1,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":1,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11596/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11566","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11566/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11566/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11566/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/11566","id":635978158,"node_id":"MDU6SXNzdWU2MzU5NzgxNTg=","number":11566,"title":"Handling heavy requests concurrently ","user":{"login":"maison2710","id":8477722,"node_id":"MDQ6VXNlcjg0Nzc3MjI=","avatar_url":"https://avatars.githubusercontent.com/u/8477722?v=4","gravatar_id":"","url":"https://api.github.com/users/maison2710","html_url":"https://github.com/maison2710","followers_url":"https://api.github.com/users/maison2710/followers","following_url":"https://api.github.com/users/maison2710/following{/other_user}","gists_url":"https://api.github.com/users/maison2710/gists{/gist_id}","starred_url":"https://api.github.com/users/maison2710/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/maison2710/subscriptions","organizations_url":"https://api.github.com/users/maison2710/orgs","repos_url":"https://api.github.com/users/maison2710/repos","events_url":"https://api.github.com/users/maison2710/events{/privacy}","received_events_url":"https://api.github.com/users/maison2710/received_events","type":"User","site_admin":false},"labels":[{"id":1575085465,"node_id":"MDU6TGFiZWwxNTc1MDg1NDY1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/unexpected%20behaviour","name":"unexpected behaviour","color":"e088ca","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2020-06-10T06:48:11Z","updated_at":"2020-06-10T16:27:14Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"The context is that we have a dashboard of 10 charts, which make query requests to ClickHouse. Each query is only performed in 1 table using group by, order by. \r\n\r\nIf we run each query individually, it is always successful and may take 10-20 seconds. However, when the whole dashboard is loaded, multiple request will be sent to CH at same time and put a high load on ClickHouse. Sometimes, it makes the ClickHouse server terminate due to OOM.\r\n\r\nSo my question is how ClickHouse handle the scenario when there are multiple heavy queries concurrently? How can we avoid OOM in such case?\r\n\r\nFor our ClickHouse setting, we have cluster of 3 instances, each have 8 cpus and 28 GB RAM. \r\nI configure `max_bytes_before_external_sort` to be 8GB and `max_bytes_before_external_group_by` to be 5GB. \r\n\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11566/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11566/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11551","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11551/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11551/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11551/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/11551","id":635361285,"node_id":"MDU6SXNzdWU2MzUzNjEyODU=","number":11551,"title":"Directory for table data [...] already exists on replicated table in case of disk failure","user":{"login":"YiuRULE","id":4019437,"node_id":"MDQ6VXNlcjQwMTk0Mzc=","avatar_url":"https://avatars.githubusercontent.com/u/4019437?v=4","gravatar_id":"","url":"https://api.github.com/users/YiuRULE","html_url":"https://github.com/YiuRULE","followers_url":"https://api.github.com/users/YiuRULE/followers","following_url":"https://api.github.com/users/YiuRULE/following{/other_user}","gists_url":"https://api.github.com/users/YiuRULE/gists{/gist_id}","starred_url":"https://api.github.com/users/YiuRULE/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/YiuRULE/subscriptions","organizations_url":"https://api.github.com/users/YiuRULE/orgs","repos_url":"https://api.github.com/users/YiuRULE/repos","events_url":"https://api.github.com/users/YiuRULE/events{/privacy}","received_events_url":"https://api.github.com/users/YiuRULE/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2020-06-09T11:50:49Z","updated_at":"2020-06-11T03:40:51Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Not sure if it's a bug or not, but I prefer to be sure.\r\n\r\n**Describe the bug**\r\nIf we had a disk failure, we cannot recreate the table without removing the node on zookeeper.\r\n\r\n**How to reproduce**\r\nclickhouse-server 20.4\r\n\r\nThe error can be reproduced easily using docker containers. Two containers are present, clickhouse1a and clickhouse1b, both are them are part of the same shard, both of them have a volume, and both of them have an hostname (`clickhouse1a` and `clickhouse1b`).\r\n\r\nWe create a table using the `ON CLUSTER` clause.\r\n\r\n`CREATE TABLE test ON CLUSTER 'cluster' (foo UInt32) Engine = ReplicatedMergeTree('/clickhouse/test', '{replica-name}') PRIMARY KEY foo ORDER BY foo`\r\n\r\nWe insert datas on the table.\r\n\r\n`INSERT INTO test VALUES (1)`\r\n\r\nthen, we stop and remove the container `clickhouse1b`, and after this we remove the volume affiliated to `clickhouse1b`.\r\n\r\nAfter running the container `clickhouse1b` again, and try to recreate the table again, we got this error.\r\n\r\n```\r\nReceived exception from server (version 20.4.3):\r\nCode: 57. DB::Exception: Received from 127.0.0.1:10001. DB::Exception: Directory for table data data/default/test/ already exists.\r\n```\r\n\r\n**Expected behavior**\r\nDifferent way to fix it. ClickHouse could possibly get his metadatas back from zookeeper, or during creation of the table, with a setting or by default, to be less strict in a case that's the same instance with the same schemas create the table again. \r\n\r\n**Error message and/or stacktrace**\r\nIf applicable, add screenshots to help explain your problem.\r\n\r\n**Additional context**\r\nAdd any other context about the problem here.\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11551/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11551/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11549","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11549/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11549/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11549/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/11549","id":635310353,"node_id":"MDU6SXNzdWU2MzUzMTAzNTM=","number":11549,"title":"ClickHouse & Event-based statistics","user":{"login":"AlexVo1d","id":66670376,"node_id":"MDQ6VXNlcjY2NjcwMzc2","avatar_url":"https://avatars.githubusercontent.com/u/66670376?v=4","gravatar_id":"","url":"https://api.github.com/users/AlexVo1d","html_url":"https://github.com/AlexVo1d","followers_url":"https://api.github.com/users/AlexVo1d/followers","following_url":"https://api.github.com/users/AlexVo1d/following{/other_user}","gists_url":"https://api.github.com/users/AlexVo1d/gists{/gist_id}","starred_url":"https://api.github.com/users/AlexVo1d/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/AlexVo1d/subscriptions","organizations_url":"https://api.github.com/users/AlexVo1d/orgs","repos_url":"https://api.github.com/users/AlexVo1d/repos","events_url":"https://api.github.com/users/AlexVo1d/events{/privacy}","received_events_url":"https://api.github.com/users/AlexVo1d/received_events","type":"User","site_admin":false},"labels":[{"id":386401510,"node_id":"MDU6TGFiZWwzODY0MDE1MTA=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/question","name":"question","color":"bfdadc","default":true,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2020-06-09T10:29:19Z","updated_at":"2020-06-09T10:40:30Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Hi,\r\nI have application with relational data model. Simplified example:\r\n```\r\nEmployee {\r\n    String id;\r\n    String name;\r\n    String email;\r\n    String orgId;\r\n}\r\nOrganization {\r\n    String id;\r\n    String name;\r\n}\r\n```\r\nMy app sends CRUD **events to ClickHouse** in denormalized form:\r\n```\r\n{“eventDate”: “2020-06-04 11:11:28.461”, “id”: “442700df-bc18-4a84-ac2a-e882d787f9e6”, “name”: “Employee 1”, \"email\": \"mail@mail.com\", “orgId”: “fc6d4a3d-e4f1-4d08-ac9d-22edbbe3fcad”, “orgName”: “Organization 1”, “operation”: “CREATE”}\r\n{“eventDate”: “2020-06-04 12:13:27.567”, “id”: “442700df-bc18-4a84-ac2a-e882d787f9e6”, “name”: “Employee 1”, \"email\": \"newmail@mail.com\", “orgId”: “fc6d4a3d-e4f1-4d08-ac9d-22edbbe3fcad”, “orgName”: “Organization 1”, “operation”: “UPDATE”}\r\n{“eventDate”: “2020-06-04 13:11:16.376”, “id”: “442700df-bc18-4a84-ac2a-e882d787f9e6”, “name”: “Employee 1”, \"email\": \"newmail@mail.com\", “orgId”: “fc6d4a3d-e4f1-4d08-ac9d-22edbbe3fcad”, “orgName”: “Organization 1”, “operation”: “DELETE”}\r\n```\r\nI need to get statistics on these events:\r\n1. Actual number of employees (created but not deleted)\r\n2. Number of employees for each organization (Organization Name : NNN)\r\n3. Number of employees for specified organization by day\r\n4. Reports: list of all employees (not events!) & employees for given condition\r\n\r\nQuestions and problems:\r\n1. Is it right way to use events for such statistics?\r\n2. What is the best way to get actual number of employees (created but not deleted)? Are there any special features for this in Clickhouse?\r\n3. How to get actual information for reports (get fields from last create/update event for not deleted employees)? Are there any special features for this in Clickhouse?\r\n4. If the organization has been renamed, I must send update event for all employees of this organization. There are hundreds of employees in organization and application does not send events for related entities now. What is the best way? Dont use denormalization? Use JOINs?","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11549/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11549/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11481","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11481/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11481/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11481/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/11481","id":632002339,"node_id":"MDU6SXNzdWU2MzIwMDIzMzk=","number":11481,"title":"Network replay server for testing","user":{"login":"alexey-milovidov","id":18581488,"node_id":"MDQ6VXNlcjE4NTgxNDg4","avatar_url":"https://avatars.githubusercontent.com/u/18581488?v=4","gravatar_id":"","url":"https://api.github.com/users/alexey-milovidov","html_url":"https://github.com/alexey-milovidov","followers_url":"https://api.github.com/users/alexey-milovidov/followers","following_url":"https://api.github.com/users/alexey-milovidov/following{/other_user}","gists_url":"https://api.github.com/users/alexey-milovidov/gists{/gist_id}","starred_url":"https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexey-milovidov/subscriptions","organizations_url":"https://api.github.com/users/alexey-milovidov/orgs","repos_url":"https://api.github.com/users/alexey-milovidov/repos","events_url":"https://api.github.com/users/alexey-milovidov/events{/privacy}","received_events_url":"https://api.github.com/users/alexey-milovidov/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2020-06-05T22:00:35Z","updated_at":"2021-09-26T00:06:37Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"The idea of this feature is from @4ertus2, we discussed it today.\r\n\r\nCapture network interaction (requests and responses) from clickhouse-server.\r\nMake clickhouse-mock server that will use this dump to provide the same responses to the same requests.\r\nUse it for backward compatibility checks in distributed setups.\r\n\r\nTricks and caveats:\r\n- it should reply with the best suitable response based on the history of requests;\r\n- it should track connection identifier to allow to keep a chain of requests and responses;\r\n- it will not take into account all timing issues;\r\n- real requests can be slightly different from expected... for example, by client name.\r\n\r\nPossible way of implementation:\r\n- hook into send/recv functions and dump data into system.network_dump table;\r\n- mock server can load the data from dump in any supported format, keep it in memory and find the best response based on search by a tree of previously seen requests at the same connection.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11481/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11481/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11476","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11476/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11476/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11476/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/11476","id":631643875,"node_id":"MDU6SXNzdWU2MzE2NDM4NzU=","number":11476,"title":">= 20.3.x: Select on a buffer table doesn't work with FINAL","user":{"login":"adubovikov","id":4513061,"node_id":"MDQ6VXNlcjQ1MTMwNjE=","avatar_url":"https://avatars.githubusercontent.com/u/4513061?v=4","gravatar_id":"","url":"https://api.github.com/users/adubovikov","html_url":"https://github.com/adubovikov","followers_url":"https://api.github.com/users/adubovikov/followers","following_url":"https://api.github.com/users/adubovikov/following{/other_user}","gists_url":"https://api.github.com/users/adubovikov/gists{/gist_id}","starred_url":"https://api.github.com/users/adubovikov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/adubovikov/subscriptions","organizations_url":"https://api.github.com/users/adubovikov/orgs","repos_url":"https://api.github.com/users/adubovikov/repos","events_url":"https://api.github.com/users/adubovikov/events{/privacy}","received_events_url":"https://api.github.com/users/adubovikov/received_events","type":"User","site_admin":false},"labels":[{"id":1575085465,"node_id":"MDU6TGFiZWwxNTc1MDg1NDY1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/unexpected%20behaviour","name":"unexpected behaviour","color":"e088ca","default":false,"description":""},{"id":1907525265,"node_id":"MDU6TGFiZWwxOTA3NTI1MjY1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/v20.3-affected","name":"v20.3-affected","color":"c2bfff","default":false,"description":"This issue affects some releases of v20.3"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2020-06-05T14:35:29Z","updated_at":"2020-06-30T09:19:35Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Since we have upgraded the system from 19.16.19 to 20.4.4.18( same on 20.3.8) a SELECT on the table (ENGINE = Buffer) that pointed to another table with ENGINE = ReplacingMergeTree , doesn't work with FINAL param:\r\n\r\nCode: 171. DB::Exception: Received from 10.0.0.1:9000. DB::Exception: Received from 10.0.0.1:9000. DB::Exception: Block structure mismatch in\r\nQueryPipeline stream: different names of columns:\r\nCorrelations Array(String) Array(size = 0, UInt64(size = 0), String(size = 0)), CustomString.Key Array(String) Array(size = 0, UInt64(size = 0),\r\n\r\nif you don't use FINAL - we have result. Unfortunately we have rolled back to 19.16.19 - and now the query with FINAL works without any problem. Can you please check it ?\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11476/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11476/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11474","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11474/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11474/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11474/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/11474","id":631615168,"node_id":"MDU6SXNzdWU2MzE2MTUxNjg=","number":11474,"title":"count() can pick calculated columns in simple VIEW","user":{"login":"filimonov","id":1549571,"node_id":"MDQ6VXNlcjE1NDk1NzE=","avatar_url":"https://avatars.githubusercontent.com/u/1549571?v=4","gravatar_id":"","url":"https://api.github.com/users/filimonov","html_url":"https://github.com/filimonov","followers_url":"https://api.github.com/users/filimonov/followers","following_url":"https://api.github.com/users/filimonov/following{/other_user}","gists_url":"https://api.github.com/users/filimonov/gists{/gist_id}","starred_url":"https://api.github.com/users/filimonov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/filimonov/subscriptions","organizations_url":"https://api.github.com/users/filimonov/orgs","repos_url":"https://api.github.com/users/filimonov/repos","events_url":"https://api.github.com/users/filimonov/events{/privacy}","received_events_url":"https://api.github.com/users/filimonov/received_events","type":"User","site_admin":false},"labels":[{"id":756395244,"node_id":"MDU6TGFiZWw3NTYzOTUyNDQ=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/performance","name":"performance","color":"c2e0c6","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2020-06-05T13:59:01Z","updated_at":"2020-06-05T13:59:01Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"body":"```\r\ncreate table count_issue Engine=MergeTree ORDER BY number AS SELECT number, randomPrintableASCII(300) as str from numbers(10000000);\r\ncreate view count_issue_view AS select number, toUInt8OrZero(extract(str, '([0-9]+)')) honeypot from count_issue;\r\n\r\nselect count() from count_issue_view;\r\n--- 1 rows in set. Elapsed: 1.445 sec.\r\n\r\n\r\n---  that can be calculated much faster:\r\n\r\nselect count(number) from count_issue_view;\r\n-- 1 rows in set. Elapsed: 0.030 sec.\r\n\r\nselect count() from count_issue;\r\n--- 0.004 sec.\r\n\r\nset optimize_trivial_count_query=0;\r\nselect count() from count_issue;\r\n1 rows in set. Elapsed: 0.030 sec\r\n-- ","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11474/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11474/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11470","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11470/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11470/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11470/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/11470","id":631530089,"node_id":"MDU6SXNzdWU2MzE1MzAwODk=","number":11470,"title":"PREWHERE optimizer does not work properly for MV","user":{"login":"EliseAzure","id":8440290,"node_id":"MDQ6VXNlcjg0NDAyOTA=","avatar_url":"https://avatars.githubusercontent.com/u/8440290?v=4","gravatar_id":"","url":"https://api.github.com/users/EliseAzure","html_url":"https://github.com/EliseAzure","followers_url":"https://api.github.com/users/EliseAzure/followers","following_url":"https://api.github.com/users/EliseAzure/following{/other_user}","gists_url":"https://api.github.com/users/EliseAzure/gists{/gist_id}","starred_url":"https://api.github.com/users/EliseAzure/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/EliseAzure/subscriptions","organizations_url":"https://api.github.com/users/EliseAzure/orgs","repos_url":"https://api.github.com/users/EliseAzure/repos","events_url":"https://api.github.com/users/EliseAzure/events{/privacy}","received_events_url":"https://api.github.com/users/EliseAzure/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":756395244,"node_id":"MDU6TGFiZWw3NTYzOTUyNDQ=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/performance","name":"performance","color":"c2e0c6","default":false,"description":null},{"id":1401777979,"node_id":"MDU6TGFiZWwxNDAxNzc3OTc5","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-optimizers","name":"comp-optimizers","color":"b5bcff","default":false,"description":"Query optimizations"},{"id":1507888214,"node_id":"MDU6TGFiZWwxNTA3ODg4MjE0","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/st-accepted","name":"st-accepted","color":"e5b890","default":false,"description":"The issue is in our backlog, ready to take"},{"id":3086255531,"node_id":"MDU6TGFiZWwzMDg2MjU1NTMx","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/warmup%20task","name":"warmup task","color":"FBCA04","default":false,"description":"The task for new ClickHouse team members. Low risk, moderate complexity, no urgency."}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2020-06-05T11:46:23Z","updated_at":"2021-11-12T20:34:24Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"When using materialized views:\r\n - SELECT from .inner.view moves some conditions from WHERE to PREWHERE as it's supposed to do\r\n - SELECT from view does not but is supposed to (these tables should actually be the same)\r\n\r\n**How to reproduce**\r\n* Tested on versions: 19.9.2.4, 19.17.2.4, 20.3.8.53, 20.4.4.18 (could not reproduce on 20.4 =\\ was too lazy to fill the tables with the right data, but logs suggest that bug is still there)\r\n* Used HTTP interface directly via custom client/ Tabix client/ clickhouse console client\r\n* Tested on MergeTree and ReplicatedMergeTree engines\r\n* Can't provide sample datasets (NDA)\r\n* Sample queries can be found in the attached log files, WHERE conditions are not contained in primary key\r\n\r\n**Expected behavior**\r\nSELECT from view moves some conditions from WHERE to PREWHERE\r\n\r\n**Error message and/or stacktrace**\r\nSee attached log files.\r\nFor SELECT from view queries you can see an additional step (Filter) in pipeline. Also much many bytes are read in view case opposed to .inner.view case.\r\n[19.9.2.4_log.txt](https://github.com/ClickHouse/ClickHouse/files/4735691/19.9.2.4_log.txt)\r\n[19.17.2.4_log.txt](https://github.com/ClickHouse/ClickHouse/files/4735692/19.17.2.4_log.txt)\r\n[20.3.8.53_log.txt](https://github.com/ClickHouse/ClickHouse/files/4735834/20.3.8.53_log.txt)\r\n[20.4.4.18_log.txt](https://github.com/ClickHouse/ClickHouse/files/4735693/20.4.4.18_log.txt)\r\n\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11470/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11470/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11435","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11435/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11435/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11435/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/11435","id":630714997,"node_id":"MDU6SXNzdWU2MzA3MTQ5OTc=","number":11435,"title":"Helpful error messages when creating MergeTree tables","user":{"login":"BayoNet","id":2968367,"node_id":"MDQ6VXNlcjI5NjgzNjc=","avatar_url":"https://avatars.githubusercontent.com/u/2968367?v=4","gravatar_id":"","url":"https://api.github.com/users/BayoNet","html_url":"https://github.com/BayoNet","followers_url":"https://api.github.com/users/BayoNet/followers","following_url":"https://api.github.com/users/BayoNet/following{/other_user}","gists_url":"https://api.github.com/users/BayoNet/gists{/gist_id}","starred_url":"https://api.github.com/users/BayoNet/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/BayoNet/subscriptions","organizations_url":"https://api.github.com/users/BayoNet/orgs","repos_url":"https://api.github.com/users/BayoNet/repos","events_url":"https://api.github.com/users/BayoNet/events{/privacy}","received_events_url":"https://api.github.com/users/BayoNet/received_events","type":"User","site_admin":false},"labels":[{"id":845247686,"node_id":"MDU6TGFiZWw4NDUyNDc2ODY=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/usability","name":"usability","color":"ebf28c","default":false,"description":""}],"state":"open","locked":false,"assignee":{"login":"qoega","id":2159081,"node_id":"MDQ6VXNlcjIxNTkwODE=","avatar_url":"https://avatars.githubusercontent.com/u/2159081?v=4","gravatar_id":"","url":"https://api.github.com/users/qoega","html_url":"https://github.com/qoega","followers_url":"https://api.github.com/users/qoega/followers","following_url":"https://api.github.com/users/qoega/following{/other_user}","gists_url":"https://api.github.com/users/qoega/gists{/gist_id}","starred_url":"https://api.github.com/users/qoega/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/qoega/subscriptions","organizations_url":"https://api.github.com/users/qoega/orgs","repos_url":"https://api.github.com/users/qoega/repos","events_url":"https://api.github.com/users/qoega/events{/privacy}","received_events_url":"https://api.github.com/users/qoega/received_events","type":"User","site_admin":false},"assignees":[{"login":"qoega","id":2159081,"node_id":"MDQ6VXNlcjIxNTkwODE=","avatar_url":"https://avatars.githubusercontent.com/u/2159081?v=4","gravatar_id":"","url":"https://api.github.com/users/qoega","html_url":"https://github.com/qoega","followers_url":"https://api.github.com/users/qoega/followers","following_url":"https://api.github.com/users/qoega/following{/other_user}","gists_url":"https://api.github.com/users/qoega/gists{/gist_id}","starred_url":"https://api.github.com/users/qoega/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/qoega/subscriptions","organizations_url":"https://api.github.com/users/qoega/orgs","repos_url":"https://api.github.com/users/qoega/repos","events_url":"https://api.github.com/users/qoega/events{/privacy}","received_events_url":"https://api.github.com/users/qoega/received_events","type":"User","site_admin":false}],"milestone":null,"comments":0,"created_at":"2020-06-04T10:46:09Z","updated_at":"2020-06-04T10:46:19Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"body":"If, when creating a `*MergeTree` table, you use wrong of insufficient definition, the error messages don't help to solve the issue.\r\n\r\nExample:\r\n\r\n```\r\n:) create table bayonet_a (a Int8) engine=MergeTree()\r\n\r\nCREATE TABLE bayonet_a\r\n(\r\n    `a` Int8\r\n)\r\nENGINE = MergeTree()\r\n\r\nReceived exception from server (version 20.5.1):\r\nCode: 42. DB::Exception: Received from localhost:9000. DB::Exception: Storage MergeTree requires 3 to 4 parameters: \r\nname of column with date,\r\n[sampling element of primary key],\r\nprimary key expression,\r\nindex granularity\r\n\r\nMergeTree is a family of storage engines.\r\n...\r\n```\r\n\r\nEach table engine from the MergeTree family requires individual message text.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11435/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11435/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11428","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11428/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11428/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11428/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/11428","id":630614661,"node_id":"MDU6SXNzdWU2MzA2MTQ2NjE=","number":11428,"title":"Can't execute SELECT query with readonly=1 and GLOBAL subquery","user":{"login":"PhantomPhreak","id":8307692,"node_id":"MDQ6VXNlcjgzMDc2OTI=","avatar_url":"https://avatars.githubusercontent.com/u/8307692?v=4","gravatar_id":"","url":"https://api.github.com/users/PhantomPhreak","html_url":"https://github.com/PhantomPhreak","followers_url":"https://api.github.com/users/PhantomPhreak/followers","following_url":"https://api.github.com/users/PhantomPhreak/following{/other_user}","gists_url":"https://api.github.com/users/PhantomPhreak/gists{/gist_id}","starred_url":"https://api.github.com/users/PhantomPhreak/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/PhantomPhreak/subscriptions","organizations_url":"https://api.github.com/users/PhantomPhreak/orgs","repos_url":"https://api.github.com/users/PhantomPhreak/repos","events_url":"https://api.github.com/users/PhantomPhreak/events{/privacy}","received_events_url":"https://api.github.com/users/PhantomPhreak/received_events","type":"User","site_admin":false},"labels":[{"id":386401505,"node_id":"MDU6TGFiZWwzODY0MDE1MDU=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/bug","name":"bug","color":"ee0701","default":true,"description":"Confirmed user-visible misbehaviour in official release"},{"id":2011606513,"node_id":"MDU6TGFiZWwyMDExNjA2NTEz","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-rbac","name":"comp-rbac","color":"b5bcff","default":false,"description":"Access control related"}],"state":"open","locked":false,"assignee":{"login":"vitlibar","id":45142681,"node_id":"MDQ6VXNlcjQ1MTQyNjgx","avatar_url":"https://avatars.githubusercontent.com/u/45142681?v=4","gravatar_id":"","url":"https://api.github.com/users/vitlibar","html_url":"https://github.com/vitlibar","followers_url":"https://api.github.com/users/vitlibar/followers","following_url":"https://api.github.com/users/vitlibar/following{/other_user}","gists_url":"https://api.github.com/users/vitlibar/gists{/gist_id}","starred_url":"https://api.github.com/users/vitlibar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vitlibar/subscriptions","organizations_url":"https://api.github.com/users/vitlibar/orgs","repos_url":"https://api.github.com/users/vitlibar/repos","events_url":"https://api.github.com/users/vitlibar/events{/privacy}","received_events_url":"https://api.github.com/users/vitlibar/received_events","type":"User","site_admin":false},"assignees":[{"login":"vitlibar","id":45142681,"node_id":"MDQ6VXNlcjQ1MTQyNjgx","avatar_url":"https://avatars.githubusercontent.com/u/45142681?v=4","gravatar_id":"","url":"https://api.github.com/users/vitlibar","html_url":"https://github.com/vitlibar","followers_url":"https://api.github.com/users/vitlibar/followers","following_url":"https://api.github.com/users/vitlibar/following{/other_user}","gists_url":"https://api.github.com/users/vitlibar/gists{/gist_id}","starred_url":"https://api.github.com/users/vitlibar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vitlibar/subscriptions","organizations_url":"https://api.github.com/users/vitlibar/orgs","repos_url":"https://api.github.com/users/vitlibar/repos","events_url":"https://api.github.com/users/vitlibar/events{/privacy}","received_events_url":"https://api.github.com/users/vitlibar/received_events","type":"User","site_admin":false}],"milestone":null,"comments":4,"created_at":"2020-06-04T08:22:45Z","updated_at":"2021-01-25T21:11:00Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"I'm trying to execute following queries:\r\n```\r\nSELECT  <columns>\r\n    FROM <db>.distributed_table1\r\n            GLOBAL INNER JOIN (SELECT <colums> FROM <db>.distributed_table2 WHERE <clause> GROUP BY <column>) USING <columns>\r\n    WHERE\r\n            <clause>\r\n    ORDER BY <column>\r\n```\r\n\r\n```\r\nSELECT <column>\r\nFROM <db>.distributed_table1\r\nWHERE <column> GLOBAL IN \r\n(\r\n    SELECT <column>\r\n    FROM <db>.distributed_table2\r\n    WHERE <clause>\r\n) AND <clause>\r\n```\r\nWith `readonly=1` setting and getting following error\r\n`DB::Exception: <username>: Cannot execute query in readonly mode.`\r\n\r\nI'm trying to execute a query under the user, having access to the databases, listed in `allow_databases` section of `users.xml`\r\n\r\nIt also has a following grants for needed databases\r\n```\r\nGRANTS: GRANT ALTER, CREATE DATABASE, CREATE DICTIONARY, CREATE TABLE, CREATE VIEW, DROP, INSERT, OPTIMIZE, SELECT, SHOW, SYSTEM FETCHES, SYST$M FLUSH DISTRIBUTED, SYSTEM MERGES, SYSTEM MOVES, SYSTEM REPLICATION QUEUES, SYSTEM RESTART REPLICA, SYSTEM SENDS, SYSTEM SYNC REPLICA, SYSTEM TTL MERGES, TRUNCATE, dictGet ON <db>.* TO <user>\r\n```\r\n\r\nWithout a GLOBAL clause, together with `distributed_product_mode='allow' `, it works as expected.\r\nWith a `readonly=0`, or `readonly=2` it also works as expected.\r\n\r\nJust in case, here is a list of non-default (changed=1) settings i used to reproduce this issue \r\n```\r\n┌─name─────────────────────────────────────────┬─value────────┐\r\n│ receive_timeout                              │ 7200         │\r\n│ send_timeout                                 │ 7200         │\r\n│ use_uncompressed_cache                       │ 0            │\r\n│ load_balancing                               │ random       │\r\n│ distributed_aggregation_memory_efficient     │ 1            │\r\n│ priority                                     │ 5            │\r\n│ log_queries                                  │ 1            │\r\n│ joined_subquery_requires_alias               │ 0            │\r\n│ allow_distributed_ddl                        │ 0            │\r\n│ max_bytes_before_external_group_by           │ 34359738368  │\r\n│ max_bytes_before_external_sort               │ 34359738368  │\r\n│ max_execution_time                           │ 7200         │\r\n│ readonly                                     │ 1            │\r\n│ max_memory_usage                             │ 103079215104 │\r\n│ max_memory_usage_for_user                    │ 137438953472 │\r\n│ log_query_threads                            │ 0            │\r\n│ allow_ddl                                    │ 0            │\r\n│ cancel_http_readonly_queries_on_client_close │ 1            │\r\n│ max_memory_usage_for_all_queries             │ 171798691840 │\r\n└──────────────────────────────────────────────┴──────────────┘\r\n```\r\n\r\nClickHouse version: 20.4.3.16","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11428/reactions","total_count":2,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11428/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11426","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11426/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11426/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11426/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/11426","id":630572542,"node_id":"MDU6SXNzdWU2MzA1NzI1NDI=","number":11426,"title":"questions about variable namespace in sql","user":{"login":"peaksnail","id":1744607,"node_id":"MDQ6VXNlcjE3NDQ2MDc=","avatar_url":"https://avatars.githubusercontent.com/u/1744607?v=4","gravatar_id":"","url":"https://api.github.com/users/peaksnail","html_url":"https://github.com/peaksnail","followers_url":"https://api.github.com/users/peaksnail/followers","following_url":"https://api.github.com/users/peaksnail/following{/other_user}","gists_url":"https://api.github.com/users/peaksnail/gists{/gist_id}","starred_url":"https://api.github.com/users/peaksnail/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/peaksnail/subscriptions","organizations_url":"https://api.github.com/users/peaksnail/orgs","repos_url":"https://api.github.com/users/peaksnail/repos","events_url":"https://api.github.com/users/peaksnail/events{/privacy}","received_events_url":"https://api.github.com/users/peaksnail/received_events","type":"User","site_admin":false},"labels":[{"id":386401510,"node_id":"MDU6TGFiZWwzODY0MDE1MTA=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/question","name":"question","color":"bfdadc","default":true,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2020-06-04T07:17:04Z","updated_at":"2020-10-16T09:32:13Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"hi team\r\n\r\nthere is a table named bill\r\n\r\n```\r\nno               String,\r\nisRefund    UInt8,\r\nfee              Int64\r\n```\r\n\r\ninsert data\r\n```\r\ninsert into bill (no,isRefund,fee) values ('a',1,10) ('b',0,20)\r\n```\r\n\r\n2 execute sql \r\n```\r\nselect no,if(isRefund=0,1,-1) as isRefund, isRefund*fee as fee, fee as somethingFee from bill\r\n```\r\nI get the result\r\n```\r\nno isRefund fee somethingFee\r\n'a'  -1   -10 10\r\n'b'  1     20  20\r\n```\r\n>the field `fee` is not overwrited\r\n\r\n\r\n3 execute sql\r\n```\r\nselect no,if(isRefund=0,1,-1) as isRefund, isRefund*fee as fee, if(1=1,fee,0) as somethingFee from bill\r\n```\r\nI get the result\r\n```\r\nno isRefund fee somethingFee\r\n'a'  -1   -10 -10\r\n'b'  1    20  20\r\n```\r\n>the field `fee` is overwrited\r\n\r\n\r\nthe varibale namespace make me confused","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11426/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11426/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11425","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11425/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11425/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11425/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/11425","id":630569899,"node_id":"MDU6SXNzdWU2MzA1Njk4OTk=","number":11425,"title":"how to use multi process and multi disk storage for HA","user":{"login":"songenjie","id":37113176,"node_id":"MDQ6VXNlcjM3MTEzMTc2","avatar_url":"https://avatars.githubusercontent.com/u/37113176?v=4","gravatar_id":"","url":"https://api.github.com/users/songenjie","html_url":"https://github.com/songenjie","followers_url":"https://api.github.com/users/songenjie/followers","following_url":"https://api.github.com/users/songenjie/following{/other_user}","gists_url":"https://api.github.com/users/songenjie/gists{/gist_id}","starred_url":"https://api.github.com/users/songenjie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/songenjie/subscriptions","organizations_url":"https://api.github.com/users/songenjie/orgs","repos_url":"https://api.github.com/users/songenjie/repos","events_url":"https://api.github.com/users/songenjie/events{/privacy}","received_events_url":"https://api.github.com/users/songenjie/received_events","type":"User","site_admin":false},"labels":[{"id":386401508,"node_id":"MDU6TGFiZWwzODY0MDE1MDg=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/help%20wanted","name":"help wanted","color":"128A0C","default":true,"description":null},{"id":386401510,"node_id":"MDU6TGFiZWwzODY0MDE1MTA=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/question","name":"question","color":"bfdadc","default":true,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2020-06-04T07:12:25Z","updated_at":"2021-06-22T21:42:03Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"## ip\r\n4 machine : node1 node2 node3 node4\r\n\r\n## replica\r\n3 replica \r\n\r\n## disk\r\n```\r\nFilesystem      Size  Used Avail Use% Mounted on\r\n/dev/sdd1       5.5T  178G  5.1T   4% /data1\r\n/dev/sdf1       5.5T  142G  5.1T   3% /data3\r\n/dev/sdj1       5.5T  176G  5.1T   4% /data7\r\n/dev/sde1       5.5T  178G  5.1T   4% /data2\r\n/dev/sdc1       5.5T  144G  5.1T   3% /data0\r\n/dev/sdi1       5.5T  170G  5.1T   4% /data6\r\n/dev/sdg1       5.5T  140G  5.1T   3% /data4\r\n/dev/sdh1       5.5T  272G  5.0T   6% /data5\r\n```\r\n\r\n## metrika.xml multi process \r\n![image](https://user-images.githubusercontent.com/37113176/83725415-7bb38080-a674-11ea-9d1f-94f57d7e40d8.png)\r\n\r\n```\r\n\r\n        <shard>\r\n            <weight>1</weight>\r\n            <internal_replication>true</internal_replication>\r\n            <replica>\r\n                <host>node1</host>\r\n                <port>port1</port>\r\n            </replica>\r\n            <replica>\r\n                <host>node2</host>\r\n                <port>port2</port>\r\n            </replica>\r\n            <replica>\r\n                <host>node3</host>\r\n                <port>port3</port>\r\n            </replica>\r\n        </shard>\r\n        <shard>\r\n            <weight>1</weight>\r\n            <internal_replication>true</internal_replication>\r\n            <replica>\r\n                <host>node2</host>\r\n                <port>port1</port>\r\n            </replica>\r\n            <replica>\r\n                <host>node3</host>\r\n                <port>port2</port>\r\n            </replica>\r\n            <replica>\r\n                <host>node4</host>\r\n                <port>port3</port>\r\n            </replica>\r\n        </shard>\r\n        <shard>\r\n            <weight>1</weight>\r\n            <internal_replication>true</internal_replication>\r\n            <replica>\r\n                <host>node3</host>\r\n                <port>port1</port>\r\n            </replica>\r\n            <replica>\r\n                <host>node4</host>\r\n                <port>port2</port>\r\n            </replica>\r\n            <replica>\r\n                <host>node1</host>\r\n                <port>port3</port>\r\n            </replica>\r\n        </shard>\r\n        <shard>\r\n            <weight>1</weight>\r\n            <internal_replication>true</internal_replication>\r\n            <replica>\r\n                <host>node4</host>\r\n                <port>port1</port>\r\n            </replica>\r\n            <replica>\r\n                <host>node1</host>\r\n                <port>port2</port>\r\n            </replica>\r\n            <replica>\r\n                <host>node2</host>\r\n                <port>port3</port>\r\n            </replica>\r\n        </shard>\r\n```\r\n\r\n## for multi process i want \r\n1 . example at node1\r\n```\r\nnode1 process port1 use data0、data1\r\nnode1 process port2 use data2、data3\r\nnode1 process port3 use data4、data5\r\nall process use data6、data7 \r\n```\r\n\r\n\r\n# question \r\n2.  for example  node1 process port1    ```question```\r\n- config.xml node1 process port1 \r\n```\r\n\r\n<path>/data0/clickhouse/data/</path>\r\n<storage_policy>/data0/clickhouse/conf/storage_policy.xml</storage_policy>\r\n```\r\n\r\n- storage_policy.xml  node1 process port1 \r\n```\r\n<yandex>\r\n    <storage_configuration>\r\n        <disks>\r\n            <disk0>\r\n                <path>/data0/clickhouse/data/</path>\r\n            </disk0>\r\n            <disk1>\r\n                <path>/data1/clickhouse/data/</path>\r\n            </disk1>\r\n            <disk2>\r\n                <path>/data2/clickhouse/data/</path>\r\n            </disk2>\r\n            <disk3>\r\n                <path>/data3/clickhouse/data/</path>\r\n            </disk3>\r\n            <disk4>\r\n                <path>/data4/clickhouse/data/</path>\r\n            </disk4>\r\n            <disk5>\r\n                <path>/data5/clickhouse/data/</path>\r\n            </disk5>\r\n            <disk6>\r\n                <path>/data6/clickhouse/data/</path>\r\n            </disk6>\r\n            <disk7>\r\n                <path>/data7/clickhouse/data/</path>\r\n            </disk7>\r\n        </disks>\r\n\r\n        <policies>\r\n            <default>\r\n                <volumes>\r\n                    <hot>\r\n                        <disk>disk0</disk>\r\n                        <disk>disk1</disk>\r\n                    </hot>\r\n                    <cold>\r\n                        <disk>disk6</disk>\r\n                        <disk>disk7</disk>\r\n                    </cold>\r\n                </volumes>\r\n                <move_factor>0.25</move_factor>\r\n            </default>\r\n        </policies>\r\n    </storage_configuration>\r\n</yandex>\r\n```\r\n\r\nif create table storage policy use default ,did disk0 disk1 storage work ```round-robin ``` ???????\r\n![image](https://user-images.githubusercontent.com/37113176/83726540-3c862f00-a676-11ea-95e3-e11d1a2b9e39.png)\r\n\r\nhttps://github.com/ClickHouse/ClickHouse/blob/master/tests/integration/test_distributed_storage_configuration/configs/config.d/storage_configuration.xml\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11425/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11425/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11376","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11376/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11376/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11376/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/11376","id":629185647,"node_id":"MDU6SXNzdWU2MjkxODU2NDc=","number":11376,"title":"Ask a question, What are the limitations of the clickhouse user name format","user":{"login":"Sallery-X","id":45587738,"node_id":"MDQ6VXNlcjQ1NTg3NzM4","avatar_url":"https://avatars.githubusercontent.com/u/45587738?v=4","gravatar_id":"","url":"https://api.github.com/users/Sallery-X","html_url":"https://github.com/Sallery-X","followers_url":"https://api.github.com/users/Sallery-X/followers","following_url":"https://api.github.com/users/Sallery-X/following{/other_user}","gists_url":"https://api.github.com/users/Sallery-X/gists{/gist_id}","starred_url":"https://api.github.com/users/Sallery-X/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Sallery-X/subscriptions","organizations_url":"https://api.github.com/users/Sallery-X/orgs","repos_url":"https://api.github.com/users/Sallery-X/repos","events_url":"https://api.github.com/users/Sallery-X/events{/privacy}","received_events_url":"https://api.github.com/users/Sallery-X/received_events","type":"User","site_admin":false},"labels":[{"id":386401510,"node_id":"MDU6TGFiZWwzODY0MDE1MTA=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/question","name":"question","color":"bfdadc","default":true,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2020-06-02T13:02:51Z","updated_at":"2020-06-02T13:26:11Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"What are the limitations of the clickhouse user name format?","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11376/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11376/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11309","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11309/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11309/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11309/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/11309","id":627755181,"node_id":"MDU6SXNzdWU2Mjc3NTUxODE=","number":11309,"title":"OPTIMIZE with FINAL should wait for already running merges.","user":{"login":"alexey-milovidov","id":18581488,"node_id":"MDQ6VXNlcjE4NTgxNDg4","avatar_url":"https://avatars.githubusercontent.com/u/18581488?v=4","gravatar_id":"","url":"https://api.github.com/users/alexey-milovidov","html_url":"https://github.com/alexey-milovidov","followers_url":"https://api.github.com/users/alexey-milovidov/followers","following_url":"https://api.github.com/users/alexey-milovidov/following{/other_user}","gists_url":"https://api.github.com/users/alexey-milovidov/gists{/gist_id}","starred_url":"https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexey-milovidov/subscriptions","organizations_url":"https://api.github.com/users/alexey-milovidov/orgs","repos_url":"https://api.github.com/users/alexey-milovidov/repos","events_url":"https://api.github.com/users/alexey-milovidov/events{/privacy}","received_events_url":"https://api.github.com/users/alexey-milovidov/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":521113272,"node_id":"MDU6TGFiZWw1MjExMTMyNzI=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/build","name":"build","color":"800000","default":false,"description":""},{"id":1955634273,"node_id":"MDU6TGFiZWwxOTU1NjM0Mjcz","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/testing","name":"testing","color":"c9a224","default":false,"description":"Special issue with list of bugs found by CI"},{"id":2082312777,"node_id":"MDU6TGFiZWwyMDgyMzEyNzc3","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/st-almost-fixed","name":"st-almost-fixed","color":"e5b890","default":false,"description":"Some fixes were applied but some still considered"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2020-05-30T15:17:56Z","updated_at":"2020-06-02T13:41:06Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"Otherwise it can just exit quickly and be effectively no-op.\r\nWe cannot reliably write tests with this behaviour.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11309/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11309/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11292","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11292/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11292/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11292/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/11292","id":627382486,"node_id":"MDU6SXNzdWU2MjczODI0ODY=","number":11292,"title":"Add separate max_memory_usage setting for distributed nodes ","user":{"login":"qoega","id":2159081,"node_id":"MDQ6VXNlcjIxNTkwODE=","avatar_url":"https://avatars.githubusercontent.com/u/2159081?v=4","gravatar_id":"","url":"https://api.github.com/users/qoega","html_url":"https://github.com/qoega","followers_url":"https://api.github.com/users/qoega/followers","following_url":"https://api.github.com/users/qoega/following{/other_user}","gists_url":"https://api.github.com/users/qoega/gists{/gist_id}","starred_url":"https://api.github.com/users/qoega/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/qoega/subscriptions","organizations_url":"https://api.github.com/users/qoega/orgs","repos_url":"https://api.github.com/users/qoega/repos","events_url":"https://api.github.com/users/qoega/events{/privacy}","received_events_url":"https://api.github.com/users/qoega/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":1365579236,"node_id":"MDU6TGFiZWwxMzY1NTc5MjM2","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/minor","name":"minor","color":"FFF8F8","default":false,"description":"Priority: minor"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2020-05-29T16:18:10Z","updated_at":"2021-07-26T17:15:16Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"**Use case**\r\nSuppose we set max_memory_usage constraints on all nodes in cluster\r\nThere are several scenarios:\r\n1) Large initiator and lots of small distributed nodes. We can not set small to limit by max_memory_usage on distributed nodes as it will limit memory usage on large initiator.\r\n2) Small initiator and large distributed nodes. We can not set limit on distributed nodes larger than constraint on initiator.\r\n\r\n- We may want to limit memory usage on distributed nodes in per user manner but have common limit/constraint on initiator node. We can use this setting in initiator users config to set separate limits.\r\n\r\n\r\n**Describe the solution you'd like**\r\n- [ ] Add user setting named like `distributed_max_memory_usage`\r\n- [ ] Add min/max constraint for `distributed_max_memory_usage` in profile config\r\n- [ ] If distributed_max_memory_usage is not set use old logic: distributed_max_memory_usage= max_memory_usage.\r\n- [ ] If distributed_max_memory_usage is set, initiator max_memory_usage constraints are applied only on initiator node and `distributed_max_memory_usage` is sent to distributed nodes as max_memory_usage.\r\n- [ ] We have to choose if distributed_max_memory_usage is not set, in which scope initiator constraint is applied: currently it also limits the `max_memory_usage` sent to distributed nodes.\r\n\r\n**Additional context**\r\nIn cloud environment heterogeneous cluster is usually used, as it is easy to select size for different types of nodes.\r\nWe currently encounter problems during cluster update, when memory usage on initiator can be higher in transitional state and can't increase memory limit only on initiator.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11292/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11292/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11248","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11248/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11248/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11248/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/11248","id":626461808,"node_id":"MDU6SXNzdWU2MjY0NjE4MDg=","number":11248,"title":"Expose table read-only interface to users.","user":{"login":"xjewer","id":922743,"node_id":"MDQ6VXNlcjkyMjc0Mw==","avatar_url":"https://avatars.githubusercontent.com/u/922743?v=4","gravatar_id":"","url":"https://api.github.com/users/xjewer","html_url":"https://github.com/xjewer","followers_url":"https://api.github.com/users/xjewer/followers","following_url":"https://api.github.com/users/xjewer/following{/other_user}","gists_url":"https://api.github.com/users/xjewer/gists{/gist_id}","starred_url":"https://api.github.com/users/xjewer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xjewer/subscriptions","organizations_url":"https://api.github.com/users/xjewer/orgs","repos_url":"https://api.github.com/users/xjewer/repos","events_url":"https://api.github.com/users/xjewer/events{/privacy}","received_events_url":"https://api.github.com/users/xjewer/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2020-05-28T12:16:44Z","updated_at":"2020-11-26T19:46:32Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"### Problem\r\nClickHouse doesn't expose any handle to set a table in a read-only mode on a given replica.\r\n\r\n### Proposal\r\nProvide a DDL, to enable/disable read-only mode for a table with any engine type.\r\n\r\n**scenario 1**:\r\n\r\ntable_1 (Engine Null) -> MV -> table_2(Engine *MergeTree)\r\n\r\ncurrently there's no option to change MV, other than drop/recreate. All inbound data during this would be lost in table_2, without stopping insertion to a replica.\r\n\r\n**scenario 2**:\r\n\r\nMarking a table read-only on an overloaded replica to relief pressure. \r\n\r\nExample query:\r\n```sql\r\n\r\nALTER TABLE [db].name SET read-only\r\nALTER TABLE [db].name UNSET read-only\r\n```\r\n\r\ncc @nvartolomei ","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11248/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11248/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11215","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11215/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11215/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11215/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/11215","id":625353244,"node_id":"MDU6SXNzdWU2MjUzNTMyNDQ=","number":11215,"title":"WHERE 1 or WHERE 1=1 causes bugs when using GLOBAL JOIN","user":{"login":"toannhu96","id":54266244,"node_id":"MDQ6VXNlcjU0MjY2MjQ0","avatar_url":"https://avatars.githubusercontent.com/u/54266244?v=4","gravatar_id":"","url":"https://api.github.com/users/toannhu96","html_url":"https://github.com/toannhu96","followers_url":"https://api.github.com/users/toannhu96/followers","following_url":"https://api.github.com/users/toannhu96/following{/other_user}","gists_url":"https://api.github.com/users/toannhu96/gists{/gist_id}","starred_url":"https://api.github.com/users/toannhu96/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/toannhu96/subscriptions","organizations_url":"https://api.github.com/users/toannhu96/orgs","repos_url":"https://api.github.com/users/toannhu96/repos","events_url":"https://api.github.com/users/toannhu96/events{/privacy}","received_events_url":"https://api.github.com/users/toannhu96/received_events","type":"User","site_admin":false},"labels":[{"id":386401505,"node_id":"MDU6TGFiZWwzODY0MDE1MDU=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/bug","name":"bug","color":"ee0701","default":true,"description":"Confirmed user-visible misbehaviour in official release"},{"id":1357578153,"node_id":"MDU6TGFiZWwxMzU3NTc4MTUz","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-joins","name":"comp-joins","color":"b5bcff","default":false,"description":"JOINs"},{"id":1674646749,"node_id":"MDU6TGFiZWwxNjc0NjQ2NzQ5","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/v19.17","name":"v19.17","color":"55007a","default":false,"description":"Issue affects version 19.17.* or PR was manually backported to related stable branch"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2020-05-27T03:44:22Z","updated_at":"2020-11-02T19:30:03Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"**Describe the bug**\r\nI use **GLOBAL ANY LEFT JOIN** to join metadata table with fact table.\r\nWhen I use **WHERE 1=1** to add additional conditions with **AND...** then it return nothings when left join with metadata table\r\n\r\n**How to reproduce**\r\n* Which ClickHouse server version to use: **19.17**\r\n* Which interface to use, if matters: **DataGrip**\r\n* Queries to run that lead to unexpected result`\r\n\r\n```\r\nSELECT *\r\nFROM (\r\n      SELECT *\r\n      FROM cdp.recommendation_metadata_prod\r\n      GLOBAL ANY\r\n      LEFT JOIN\r\n           (SELECT recommend_id       AS uuid,\r\n                   sum(sends)         AS sends,\r\n                   sum(opens)         AS opens,\r\n                   sum(clicks)        AS clicks,\r\n                   sum(unique_clicks) AS unique_clicks,\r\n                   sum(unique_opens)  AS unique_opens,\r\n                   sum(orders)        AS orders,\r\n                   sum(revenue)       AS revenue,\r\n                   sum(activations)   AS activations,\r\n                   sum(revenue_gmv)   AS revenue_gmv,\r\n                   sum(revenue_cmv)   AS revenue_cmv,\r\n                   sum(revenue_nmv)   AS revenue_nmv,\r\n                   sum(orders_nmv)    AS orders_nmv,\r\n                   sum(orders_cmv)    AS orders_cmv\r\n            FROM (SELECT date_key,\r\n                         recommend_id,\r\n                         sends,\r\n                         opens,\r\n                         clicks,\r\n                         unique_clicks,\r\n                         unique_opens,\r\n                         orders,\r\n                         transaction_revenue AS revenue,\r\n                         activations,\r\n                         transaction_gmv     AS revenue_gmv,\r\n                         cmv                 AS revenue_cmv,\r\n                         nmv                 AS revenue_nmv,\r\n                         net_orders          AS orders_nmv,\r\n                         confirmed_orders    AS orders_cmv\r\n                  FROM cdp.view_campaign_performance\r\n                  WHERE date_key BETWEEN '2020-05-21' AND '2020-05-27'\r\n                        AND isNotNull(recommend_id)\r\n                        AND notEmpty(recommend_id)\r\n\r\n                  UNION ALL\r\n\r\n                  SELECT date_key,\r\n                         recommend_id,\r\n                         sends,\r\n                         opens,\r\n                         clicks,\r\n                         unique_clicks,\r\n                         unique_opens,\r\n                         total_orders  AS orders,\r\n                         total_revenue AS revenue,\r\n                         activations,\r\n                         0.0           AS revenue_gmv,\r\n                         0.0           AS revenue_cmv,\r\n                         0.0           AS revenue_nmv,\r\n                         0             AS orders_nmv,\r\n                         0             AS orders_cmv\r\n                  FROM cdp.realtime_campaign_performance\r\n                  WHERE date_key BETWEEN '2020-05-21' AND '2020-05-27'\r\n                        AND isNotNull(recommend_id)\r\n                        AND notEmpty(recommend_id)\r\n             )\r\n            GROUP BY uuid)\r\n      USING (uuid)\r\n      WHERE 1=1\r\n      ORDER BY event_time DESC\r\n      LIMIT 1 BY uuid)\r\n ORDER BY created_at DESC\r\nLIMIT 10 OFFSET 0;\r\n```\r\n\r\n**With WHERE 1=1**\r\n<img width=\"946\" alt=\"Screen Shot 2020-05-27 at 10 35 29\" src=\"https://user-images.githubusercontent.com/54266244/82975534-f0e4dd00-a006-11ea-8cdf-3e349c3743e7.png\">\r\n\r\n**Without WHERE 1=1**\r\n<img width=\"957\" alt=\"Screen Shot 2020-05-27 at 10 35 01\" src=\"https://user-images.githubusercontent.com/54266244/82975530-ed515600-a006-11ea-9044-b86733150124.png\">\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11215/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11215/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11204","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11204/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11204/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11204/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/11204","id":624873066,"node_id":"MDU6SXNzdWU2MjQ4NzMwNjY=","number":11204,"title":"Implement a way to ALTER unreplicated tables ON CLUSTER with internal_replication=true","user":{"login":"Felixoid","id":3025537,"node_id":"MDQ6VXNlcjMwMjU1Mzc=","avatar_url":"https://avatars.githubusercontent.com/u/3025537?v=4","gravatar_id":"","url":"https://api.github.com/users/Felixoid","html_url":"https://github.com/Felixoid","followers_url":"https://api.github.com/users/Felixoid/followers","following_url":"https://api.github.com/users/Felixoid/following{/other_user}","gists_url":"https://api.github.com/users/Felixoid/gists{/gist_id}","starred_url":"https://api.github.com/users/Felixoid/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Felixoid/subscriptions","organizations_url":"https://api.github.com/users/Felixoid/orgs","repos_url":"https://api.github.com/users/Felixoid/repos","events_url":"https://api.github.com/users/Felixoid/events{/privacy}","received_events_url":"https://api.github.com/users/Felixoid/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2020-05-26T13:12:36Z","updated_at":"2020-05-26T13:12:36Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"**Use case**\r\nCurrently, it's impossible to use `ALTER TABLE .. ON CLUSTER` DDL for non-Replicated engines (except Distributed) without defining an extra cluster. Related issues are #10769, #3268 (and I'm sure even more)\r\n\r\n**Describe the solution you'd like**\r\nI've tried to implement this feature in #11082, but it's impossible in the current implementation. Here's a quote from CH-devs telegram group https://t.me/c/1425947904/5777 :\r\n\r\n> Есть способ в таску записать настройку или я копаю не туда?\r\n\r\n> В текущем варианте нет. DDL-запрос исполняется с копией глобального контекста. У меня вообще желаение там основательно покопаться, сейчас пользователи часто жалуются (по моим наблюдениям), а функциональность популярная.  \r\n> Но вполне можно аккуратно добавить какие-то настройки, будет правда несовместимо при апдейте, но я почти уверен, что что-то несовместимое с ним всё равно нужно будет сделать.\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11204/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11204/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11191","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11191/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11191/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11191/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/11191","id":624525494,"node_id":"MDU6SXNzdWU2MjQ1MjU0OTQ=","number":11191,"title":"Skip useless values in primary key in memory.","user":{"login":"alexey-milovidov","id":18581488,"node_id":"MDQ6VXNlcjE4NTgxNDg4","avatar_url":"https://avatars.githubusercontent.com/u/18581488?v=4","gravatar_id":"","url":"https://api.github.com/users/alexey-milovidov","html_url":"https://github.com/alexey-milovidov","followers_url":"https://api.github.com/users/alexey-milovidov/followers","following_url":"https://api.github.com/users/alexey-milovidov/following{/other_user}","gists_url":"https://api.github.com/users/alexey-milovidov/gists{/gist_id}","starred_url":"https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexey-milovidov/subscriptions","organizations_url":"https://api.github.com/users/alexey-milovidov/orgs","repos_url":"https://api.github.com/users/alexey-milovidov/repos","events_url":"https://api.github.com/users/alexey-milovidov/events{/privacy}","received_events_url":"https://api.github.com/users/alexey-milovidov/received_events","type":"User","site_admin":false},"labels":[{"id":756395244,"node_id":"MDU6TGFiZWw3NTYzOTUyNDQ=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/performance","name":"performance","color":"c2e0c6","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2020-05-25T23:58:23Z","updated_at":"2020-05-29T19:24:01Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"Suppose there is primary key `(x, y)` when `x` is arbitrary column and `y` is variable length column like `String`.\r\n\r\nWhen loading index in memory, we can avoid storing actual value of y if the value of x is different from the value in previous and next mark. We can store default value instead.\r\n\r\nExample:\r\n\r\nInstead of:\r\n`... (123, 'hello'), (124, 'world'), (125, 'goodbye') ...`\r\n\r\nWe can store:\r\n`... (123, 'hello'), (124, ''), (125, 'goodbye') ...`\r\n\r\nBecause 124 is not equal to 123 and 125.\r\nAnd the actual value of `y` column is not important.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11191/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11191/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11188","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11188/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11188/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11188/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/11188","id":624496979,"node_id":"MDU6SXNzdWU2MjQ0OTY5Nzk=","number":11188,"title":"Protection from too large size of index in memory.","user":{"login":"alexey-milovidov","id":18581488,"node_id":"MDQ6VXNlcjE4NTgxNDg4","avatar_url":"https://avatars.githubusercontent.com/u/18581488?v=4","gravatar_id":"","url":"https://api.github.com/users/alexey-milovidov","html_url":"https://github.com/alexey-milovidov","followers_url":"https://api.github.com/users/alexey-milovidov/followers","following_url":"https://api.github.com/users/alexey-milovidov/following{/other_user}","gists_url":"https://api.github.com/users/alexey-milovidov/gists{/gist_id}","starred_url":"https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexey-milovidov/subscriptions","organizations_url":"https://api.github.com/users/alexey-milovidov/orgs","repos_url":"https://api.github.com/users/alexey-milovidov/repos","events_url":"https://api.github.com/users/alexey-milovidov/events{/privacy}","received_events_url":"https://api.github.com/users/alexey-milovidov/received_events","type":"User","site_admin":false},"labels":[{"id":845247686,"node_id":"MDU6TGFiZWw4NDUyNDc2ODY=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/usability","name":"usability","color":"ebf28c","default":false,"description":""},{"id":1532016596,"node_id":"MDU6TGFiZWwxNTMyMDE2NTk2","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/memory","name":"memory","color":"e99695","default":false,"description":"When memory usage is higher than expected"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2020-05-25T21:48:10Z","updated_at":"2020-05-25T22:31:24Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"The user may accidentially create a table with index_granularity = 1 and insert many rows.\r\nIn this case, the size of primary.idx may become too large, it will lead to OOM and subsequent infinite loop of OOM after startup.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11188/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11188/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11154","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11154/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11154/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11154/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/11154","id":623537506,"node_id":"MDU6SXNzdWU2MjM1Mzc1MDY=","number":11154,"title":"generateRandom: Bad get: has UInt64, requested String","user":{"login":"akuzm","id":36882414,"node_id":"MDQ6VXNlcjM2ODgyNDE0","avatar_url":"https://avatars.githubusercontent.com/u/36882414?v=4","gravatar_id":"","url":"https://api.github.com/users/akuzm","html_url":"https://github.com/akuzm","followers_url":"https://api.github.com/users/akuzm/followers","following_url":"https://api.github.com/users/akuzm/following{/other_user}","gists_url":"https://api.github.com/users/akuzm/gists{/gist_id}","starred_url":"https://api.github.com/users/akuzm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/akuzm/subscriptions","organizations_url":"https://api.github.com/users/akuzm/orgs","repos_url":"https://api.github.com/users/akuzm/repos","events_url":"https://api.github.com/users/akuzm/events{/privacy}","received_events_url":"https://api.github.com/users/akuzm/received_events","type":"User","site_admin":false},"labels":[{"id":845247686,"node_id":"MDU6TGFiZWw4NDUyNDc2ODY=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/usability","name":"usability","color":"ebf28c","default":false,"description":""}],"state":"open","locked":false,"assignee":{"login":"qoega","id":2159081,"node_id":"MDQ6VXNlcjIxNTkwODE=","avatar_url":"https://avatars.githubusercontent.com/u/2159081?v=4","gravatar_id":"","url":"https://api.github.com/users/qoega","html_url":"https://github.com/qoega","followers_url":"https://api.github.com/users/qoega/followers","following_url":"https://api.github.com/users/qoega/following{/other_user}","gists_url":"https://api.github.com/users/qoega/gists{/gist_id}","starred_url":"https://api.github.com/users/qoega/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/qoega/subscriptions","organizations_url":"https://api.github.com/users/qoega/orgs","repos_url":"https://api.github.com/users/qoega/repos","events_url":"https://api.github.com/users/qoega/events{/privacy}","received_events_url":"https://api.github.com/users/qoega/received_events","type":"User","site_admin":false},"assignees":[{"login":"qoega","id":2159081,"node_id":"MDQ6VXNlcjIxNTkwODE=","avatar_url":"https://avatars.githubusercontent.com/u/2159081?v=4","gravatar_id":"","url":"https://api.github.com/users/qoega","html_url":"https://github.com/qoega","followers_url":"https://api.github.com/users/qoega/followers","following_url":"https://api.github.com/users/qoega/following{/other_user}","gists_url":"https://api.github.com/users/qoega/gists{/gist_id}","starred_url":"https://api.github.com/users/qoega/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/qoega/subscriptions","organizations_url":"https://api.github.com/users/qoega/orgs","repos_url":"https://api.github.com/users/qoega/repos","events_url":"https://api.github.com/users/qoega/events{/privacy}","received_events_url":"https://api.github.com/users/qoega/received_events","type":"User","site_admin":false}],"milestone":null,"comments":5,"created_at":"2020-05-23T00:56:02Z","updated_at":"2021-08-10T10:03:05Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"body":"```\r\n/4/ :) select * from generateRandom(1, 10, 10)\r\n\r\nReceived exception from server (version 20.5.1):\r\nCode: 170. DB::Exception: Received from localhost:9000. DB::Exception: Bad get: has UInt64, requested String. Stack trace:\r\n```","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11154/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11154/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11125","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11125/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11125/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11125/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/11125","id":622890445,"node_id":"MDU6SXNzdWU2MjI4OTA0NDU=","number":11125,"title":"random permutation/selection for arrays","user":{"login":"akuzm","id":36882414,"node_id":"MDQ6VXNlcjM2ODgyNDE0","avatar_url":"https://avatars.githubusercontent.com/u/36882414?v=4","gravatar_id":"","url":"https://api.github.com/users/akuzm","html_url":"https://github.com/akuzm","followers_url":"https://api.github.com/users/akuzm/followers","following_url":"https://api.github.com/users/akuzm/following{/other_user}","gists_url":"https://api.github.com/users/akuzm/gists{/gist_id}","starred_url":"https://api.github.com/users/akuzm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/akuzm/subscriptions","organizations_url":"https://api.github.com/users/akuzm/orgs","repos_url":"https://api.github.com/users/akuzm/repos","events_url":"https://api.github.com/users/akuzm/events{/privacy}","received_events_url":"https://api.github.com/users/akuzm/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2020-05-22T01:42:35Z","updated_at":"2020-08-27T14:47:45Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"body":"Implement functions for generating random permutations and random selections of an array.\r\n\r\nI need permutations for generating randomization distribution in performance tests, and now have to emulate it with `order by rand()` which becomes painfully slow for big arrays. In contrast, shuffle algorithms work in linear time.\r\n\r\nSelections would also be useful in performance tests for bootstrapping confidence intervals for query run time.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11125/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11125/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11103","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11103/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11103/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11103/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/11103","id":622482726,"node_id":"MDU6SXNzdWU2MjI0ODI3MjY=","number":11103,"title":"Calculate functions after LIMIT if possible.","user":{"login":"alexey-milovidov","id":18581488,"node_id":"MDQ6VXNlcjE4NTgxNDg4","avatar_url":"https://avatars.githubusercontent.com/u/18581488?v=4","gravatar_id":"","url":"https://api.github.com/users/alexey-milovidov","html_url":"https://github.com/alexey-milovidov","followers_url":"https://api.github.com/users/alexey-milovidov/followers","following_url":"https://api.github.com/users/alexey-milovidov/following{/other_user}","gists_url":"https://api.github.com/users/alexey-milovidov/gists{/gist_id}","starred_url":"https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexey-milovidov/subscriptions","organizations_url":"https://api.github.com/users/alexey-milovidov/orgs","repos_url":"https://api.github.com/users/alexey-milovidov/repos","events_url":"https://api.github.com/users/alexey-milovidov/events{/privacy}","received_events_url":"https://api.github.com/users/alexey-milovidov/received_events","type":"User","site_admin":false},"labels":[{"id":756395244,"node_id":"MDU6TGFiZWw3NTYzOTUyNDQ=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/performance","name":"performance","color":"c2e0c6","default":false,"description":null}],"state":"open","locked":false,"assignee":{"login":"KochetovNicolai","id":4092911,"node_id":"MDQ6VXNlcjQwOTI5MTE=","avatar_url":"https://avatars.githubusercontent.com/u/4092911?v=4","gravatar_id":"","url":"https://api.github.com/users/KochetovNicolai","html_url":"https://github.com/KochetovNicolai","followers_url":"https://api.github.com/users/KochetovNicolai/followers","following_url":"https://api.github.com/users/KochetovNicolai/following{/other_user}","gists_url":"https://api.github.com/users/KochetovNicolai/gists{/gist_id}","starred_url":"https://api.github.com/users/KochetovNicolai/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/KochetovNicolai/subscriptions","organizations_url":"https://api.github.com/users/KochetovNicolai/orgs","repos_url":"https://api.github.com/users/KochetovNicolai/repos","events_url":"https://api.github.com/users/KochetovNicolai/events{/privacy}","received_events_url":"https://api.github.com/users/KochetovNicolai/received_events","type":"User","site_admin":false},"assignees":[{"login":"KochetovNicolai","id":4092911,"node_id":"MDQ6VXNlcjQwOTI5MTE=","avatar_url":"https://avatars.githubusercontent.com/u/4092911?v=4","gravatar_id":"","url":"https://api.github.com/users/KochetovNicolai","html_url":"https://github.com/KochetovNicolai","followers_url":"https://api.github.com/users/KochetovNicolai/followers","following_url":"https://api.github.com/users/KochetovNicolai/following{/other_user}","gists_url":"https://api.github.com/users/KochetovNicolai/gists{/gist_id}","starred_url":"https://api.github.com/users/KochetovNicolai/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/KochetovNicolai/subscriptions","organizations_url":"https://api.github.com/users/KochetovNicolai/orgs","repos_url":"https://api.github.com/users/KochetovNicolai/repos","events_url":"https://api.github.com/users/KochetovNicolai/events{/privacy}","received_events_url":"https://api.github.com/users/KochetovNicolai/received_events","type":"User","site_admin":false}],"milestone":null,"comments":4,"created_at":"2020-05-21T12:59:26Z","updated_at":"2020-09-14T10:03:32Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"Example:\r\n\r\n```\r\nSELECT throwIf(number = 5) FROM (SELECT * FROM numbers(10)) ORDER BY number LIMIT 1\r\n```\r\n\r\nIf the optimization exists, `throwIf(number = 5)` will be calculate only on first row and the query won't throw exception.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11103/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11103/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11090","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11090/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11090/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11090/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/11090","id":622260623,"node_id":"MDU6SXNzdWU2MjIyNjA2MjM=","number":11090,"title":"Performance optimization: getColumnNameWithMinumumCompressedSize not always needed","user":{"login":"alexey-milovidov","id":18581488,"node_id":"MDQ6VXNlcjE4NTgxNDg4","avatar_url":"https://avatars.githubusercontent.com/u/18581488?v=4","gravatar_id":"","url":"https://api.github.com/users/alexey-milovidov","html_url":"https://github.com/alexey-milovidov","followers_url":"https://api.github.com/users/alexey-milovidov/followers","following_url":"https://api.github.com/users/alexey-milovidov/following{/other_user}","gists_url":"https://api.github.com/users/alexey-milovidov/gists{/gist_id}","starred_url":"https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexey-milovidov/subscriptions","organizations_url":"https://api.github.com/users/alexey-milovidov/orgs","repos_url":"https://api.github.com/users/alexey-milovidov/repos","events_url":"https://api.github.com/users/alexey-milovidov/events{/privacy}","received_events_url":"https://api.github.com/users/alexey-milovidov/received_events","type":"User","site_admin":false},"labels":[{"id":756395244,"node_id":"MDU6TGFiZWw3NTYzOTUyNDQ=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/performance","name":"performance","color":"c2e0c6","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2020-05-21T05:36:49Z","updated_at":"2020-05-21T05:40:37Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"When all queried columns in data part is missing (e.g. they were added with ALTER) we choose a column with minumum size and read it. It's needed to know the number of rows.\r\n\r\nBut we know the exact number of rows in data part in most cases. We can avoid reading a column.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11090/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11090/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11085","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11085/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11085/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11085/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/11085","id":622115163,"node_id":"MDU6SXNzdWU2MjIxMTUxNjM=","number":11085,"title":"Type deduction breaks for tuples in CASE with default ELSE","user":{"login":"akuzm","id":36882414,"node_id":"MDQ6VXNlcjM2ODgyNDE0","avatar_url":"https://avatars.githubusercontent.com/u/36882414?v=4","gravatar_id":"","url":"https://api.github.com/users/akuzm","html_url":"https://github.com/akuzm","followers_url":"https://api.github.com/users/akuzm/followers","following_url":"https://api.github.com/users/akuzm/following{/other_user}","gists_url":"https://api.github.com/users/akuzm/gists{/gist_id}","starred_url":"https://api.github.com/users/akuzm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/akuzm/subscriptions","organizations_url":"https://api.github.com/users/akuzm/orgs","repos_url":"https://api.github.com/users/akuzm/repos","events_url":"https://api.github.com/users/akuzm/events{/privacy}","received_events_url":"https://api.github.com/users/akuzm/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":906438147,"node_id":"MDU6TGFiZWw5MDY0MzgxNDc=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/st-fixed","name":"st-fixed","color":"e5b890","default":false,"description":""}],"state":"open","locked":false,"assignee":{"login":"kitaisreal","id":22458333,"node_id":"MDQ6VXNlcjIyNDU4MzMz","avatar_url":"https://avatars.githubusercontent.com/u/22458333?v=4","gravatar_id":"","url":"https://api.github.com/users/kitaisreal","html_url":"https://github.com/kitaisreal","followers_url":"https://api.github.com/users/kitaisreal/followers","following_url":"https://api.github.com/users/kitaisreal/following{/other_user}","gists_url":"https://api.github.com/users/kitaisreal/gists{/gist_id}","starred_url":"https://api.github.com/users/kitaisreal/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kitaisreal/subscriptions","organizations_url":"https://api.github.com/users/kitaisreal/orgs","repos_url":"https://api.github.com/users/kitaisreal/repos","events_url":"https://api.github.com/users/kitaisreal/events{/privacy}","received_events_url":"https://api.github.com/users/kitaisreal/received_events","type":"User","site_admin":false},"assignees":[{"login":"kitaisreal","id":22458333,"node_id":"MDQ6VXNlcjIyNDU4MzMz","avatar_url":"https://avatars.githubusercontent.com/u/22458333?v=4","gravatar_id":"","url":"https://api.github.com/users/kitaisreal","html_url":"https://github.com/kitaisreal","followers_url":"https://api.github.com/users/kitaisreal/followers","following_url":"https://api.github.com/users/kitaisreal/following{/other_user}","gists_url":"https://api.github.com/users/kitaisreal/gists{/gist_id}","starred_url":"https://api.github.com/users/kitaisreal/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kitaisreal/subscriptions","organizations_url":"https://api.github.com/users/kitaisreal/orgs","repos_url":"https://api.github.com/users/kitaisreal/repos","events_url":"https://api.github.com/users/kitaisreal/events{/privacy}","received_events_url":"https://api.github.com/users/kitaisreal/received_events","type":"User","site_admin":false}],"milestone":null,"comments":1,"created_at":"2020-05-20T22:09:44Z","updated_at":"2021-12-19T10:11:54Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"body":"```\r\n/4/ :) select case when number = 0 then (select 0) when number = 1 then (select 1) end from numbers(2);\r\n\r\n┌─multiIf(equals(number, 0), _subquery21, equals(number, 1), _subquery22, NULL)─┐\r\n│                                                                             0 │\r\n│                                                                             1 │\r\n└───────────────────────────────────────────────────────────────────────────────┘\r\n\r\n/4/ :) select case when number = 0 then (select 1, 2) when number = 1 then (select 3, 4) end from numbers(2);\r\nReceived exception from server (version 20.5.1):\r\nCode: 386. DB::Exception: Received from localhost:9000. DB::Exception: There is no supertype for types Tuple(UInt8, UInt8), Tuple(UInt8, UInt8), Nullable(Nothing) because some of them are Tuple and some of them are not. Stack trace:\r\n```\r\nWorks for single columns, but breaks for tuples.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11085/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11085/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11075","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11075/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11075/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11075/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/11075","id":621999804,"node_id":"MDU6SXNzdWU2MjE5OTk4MDQ=","number":11075,"title":"ALTER TABLE COMMENT COLUMN for Materialized View with ReplicatedAggregatingMergeTree engine doesn't propegate to all replicas.","user":{"login":"abraithwaite","id":3791413,"node_id":"MDQ6VXNlcjM3OTE0MTM=","avatar_url":"https://avatars.githubusercontent.com/u/3791413?v=4","gravatar_id":"","url":"https://api.github.com/users/abraithwaite","html_url":"https://github.com/abraithwaite","followers_url":"https://api.github.com/users/abraithwaite/followers","following_url":"https://api.github.com/users/abraithwaite/following{/other_user}","gists_url":"https://api.github.com/users/abraithwaite/gists{/gist_id}","starred_url":"https://api.github.com/users/abraithwaite/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/abraithwaite/subscriptions","organizations_url":"https://api.github.com/users/abraithwaite/orgs","repos_url":"https://api.github.com/users/abraithwaite/repos","events_url":"https://api.github.com/users/abraithwaite/events{/privacy}","received_events_url":"https://api.github.com/users/abraithwaite/received_events","type":"User","site_admin":false},"labels":[{"id":845247686,"node_id":"MDU6TGFiZWw4NDUyNDc2ODY=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/usability","name":"usability","color":"ebf28c","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2020-05-20T18:34:05Z","updated_at":"2020-05-20T19:22:03Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"**Describe the issue**\r\nWhen you do an `ALTER TABLE COMMENT COLUMN` for a ReplicatedMergeTree table, it propagates the comment as expected.\r\n\r\nIf you've built a Materialized View on top of this ReplicatedMergeTree table using the ReplicatedAggregatingMergeTree engine, and attempt to do a similar `ALTER TABLE COMMENT COLUMN` operation, it does not propagate to it's replicas.\r\n\r\n**How to reproduce**\r\n- Create a ReplicatedMergeTree raw data table with 3 replicas.\r\n- Create a ReplicatedAggregatingMergeTree Materialized View which references the raw data table created above.\r\n- Create a migration which issues an ALTER TABLE COMMENT COLUMN on the Materialized View.\r\n- Observe that the COMMENT COLUMN migration is only applied to one replica and not propegated to the other replicas.\r\n\r\n**Expected behavior**\r\nALTER TABLE COMMENT COLUMN is replicated for Materialized Views that use replicated table engines.\r\n\r\n**Error message and/or stacktrace**\r\nIf you're trying to recover from failure, you'll get this kind of message when trying to reapply the schema to a node:\r\n\r\n```\r\nDB::Exception: Table structure in ZooKeeper is too different from local table structure.\r\n```\r\n\r\n**Additional context**\r\nWe're on version 19.9.2.4 and ran into this while working on upgrading to a more recent version.\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11075/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11075/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11068","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11068/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11068/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11068/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/11068","id":621600716,"node_id":"MDU6SXNzdWU2MjE2MDA3MTY=","number":11068,"title":"Using alias in simple view","user":{"login":"andrelec1","id":3273204,"node_id":"MDQ6VXNlcjMyNzMyMDQ=","avatar_url":"https://avatars.githubusercontent.com/u/3273204?v=4","gravatar_id":"","url":"https://api.github.com/users/andrelec1","html_url":"https://github.com/andrelec1","followers_url":"https://api.github.com/users/andrelec1/followers","following_url":"https://api.github.com/users/andrelec1/following{/other_user}","gists_url":"https://api.github.com/users/andrelec1/gists{/gist_id}","starred_url":"https://api.github.com/users/andrelec1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andrelec1/subscriptions","organizations_url":"https://api.github.com/users/andrelec1/orgs","repos_url":"https://api.github.com/users/andrelec1/repos","events_url":"https://api.github.com/users/andrelec1/events{/privacy}","received_events_url":"https://api.github.com/users/andrelec1/received_events","type":"User","site_admin":false},"labels":[{"id":386401505,"node_id":"MDU6TGFiZWwzODY0MDE1MDU=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/bug","name":"bug","color":"ee0701","default":true,"description":"Confirmed user-visible misbehaviour in official release"},{"id":1907525265,"node_id":"MDU6TGFiZWwxOTA3NTI1MjY1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/v20.3-affected","name":"v20.3-affected","color":"c2bfff","default":false,"description":"This issue affects some releases of v20.3"},{"id":2069471772,"node_id":"MDU6TGFiZWwyMDY5NDcxNzcy","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-view","name":"comp-view","color":"b5bcff","default":false,"description":"VIEWs"},{"id":2070999159,"node_id":"MDU6TGFiZWwyMDcwOTk5MTU5","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/v20.4-affected","name":"v20.4-affected","color":"c2bfff","default":false,"description":"This issue affects some releases of v20.4"},{"id":2132806078,"node_id":"MDU6TGFiZWwyMTMyODA2MDc4","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/v20.5-affected","name":"v20.5-affected","color":"c2bfff","default":false,"description":""},{"id":2184852256,"node_id":"MDU6TGFiZWwyMTg0ODUyMjU2","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/v20.6-affected","name":"v20.6-affected","color":"c2bfff","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2020-05-20T09:17:27Z","updated_at":"2021-12-06T15:49:55Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"I try to make a view... for the moment i have this request : \r\n\r\n```\r\ndrop table if exists computed_datum_hours;\r\ncreate view computed_datum_hours as\r\nselect\r\n    toStartOfHour(b.datetime_value) as datetime_desc,\r\n    b.computed_id,\r\n    b.computed_kind,\r\n    b.computed_type,\r\n    sum(b.value) as value\r\nfrom computed_datum as b\r\ngroup by\r\n    b.computed_id,\r\n    b.computed_kind,\r\n    b.computed_type,\r\n    toStartOfHour(b.datetime_value)\r\n;\r\n```\r\nbut clickhouse say :\r\n`Code: 47, e.displayText() = DB::Exception: Missing columns: 'b.value' 'b.datetime_value' 'b.computed_type' 'b.computed_kind' 'b.computed_id' while processing query: 'SELECT toStartOfHour(b.datetime_value) AS datetime_desc, b.computed_id, b.computed_kind, b.computed_type, sum(b.value) AS value FROM api_client.computed_datum GROUP BY b.computed_id, b.computed_kind, b.computed_type, toStartOfHour(b.datetime_value)', required columns: 'b.computed_id' 'b.computed_kind' 'b.computed_type' 'b.datetime_value' 'b.value', source columns: 'flags' 'computed_type' 'datetime_value' 'uuid' 'value' 'computed_id' 'insert' 'computed_kind' 'EventDateTime' (version 20.4.2.9 (official build))`\r\n\r\nthis is a bug or alias is different from mariadb ? \r\n( PS, if i remove every alias to b , the view work ) ","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11068/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11068/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11000","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11000/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11000/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11000/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/11000","id":620068179,"node_id":"MDU6SXNzdWU2MjAwNjgxNzk=","number":11000,"title":"Cannot create VIEW with aliases on JOIN, get \"Cannot detect left and right JOIN keys. JOIN ON section is ambiguous..\"","user":{"login":"vladimir-golovchenko","id":911096,"node_id":"MDQ6VXNlcjkxMTA5Ng==","avatar_url":"https://avatars.githubusercontent.com/u/911096?v=4","gravatar_id":"","url":"https://api.github.com/users/vladimir-golovchenko","html_url":"https://github.com/vladimir-golovchenko","followers_url":"https://api.github.com/users/vladimir-golovchenko/followers","following_url":"https://api.github.com/users/vladimir-golovchenko/following{/other_user}","gists_url":"https://api.github.com/users/vladimir-golovchenko/gists{/gist_id}","starred_url":"https://api.github.com/users/vladimir-golovchenko/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vladimir-golovchenko/subscriptions","organizations_url":"https://api.github.com/users/vladimir-golovchenko/orgs","repos_url":"https://api.github.com/users/vladimir-golovchenko/repos","events_url":"https://api.github.com/users/vladimir-golovchenko/events{/privacy}","received_events_url":"https://api.github.com/users/vladimir-golovchenko/received_events","type":"User","site_admin":false},"labels":[{"id":386401505,"node_id":"MDU6TGFiZWwzODY0MDE1MDU=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/bug","name":"bug","color":"ee0701","default":true,"description":"Confirmed user-visible misbehaviour in official release"},{"id":386401506,"node_id":"MDU6TGFiZWwzODY0MDE1MDY=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/duplicate","name":"duplicate","color":"cccccc","default":true,"description":null},{"id":1357578153,"node_id":"MDU6TGFiZWwxMzU3NTc4MTUz","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-joins","name":"comp-joins","color":"b5bcff","default":false,"description":"JOINs"},{"id":2069471772,"node_id":"MDU6TGFiZWwyMDY5NDcxNzcy","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-view","name":"comp-view","color":"b5bcff","default":false,"description":"VIEWs"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2020-05-18T09:47:26Z","updated_at":"2020-11-12T11:16:31Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Normal VIEW is failed when defined JOIN with aliases (taken from [stackoverflow](https://stackoverflow.com/q/61865368/303298)).\r\n\r\n```sql\r\nCREATE TABLE test_table_01 (\r\n    column Int32\r\n) ENGINE = Memory();\r\n\r\nCREATE TABLE test_table_02 (\r\n    column Int32\r\n) ENGINE = Memory();\r\n```\r\nCreating view leads to error:\r\n```sql\r\nCREATE VIEW test_view_01 AS\r\nSELECT \r\n    t1.column,\r\n    t2.column\r\nFROM test_table_01 AS t1 \r\n    INNER JOIN test_table_02 AS t2 ON t1.column = t2.column;\r\n```\r\n\r\n```bash\r\nReceived exception from server (version 20.3.8):\r\nCode: 352. DB::Exception: Received from localhost:9000. DB::Exception: Cannot detect left and right JOIN keys. JOIN ON section is ambiguous.. Stack trace:\r\n\r\n0. Poco::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int) @ 0x10542450 in /usr/bin/clickhouse\r\n1. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int) @ 0x8f4272d in /usr/bin/clickhouse\r\n2. ? @ 0xd50f7e8 in /usr/bin/clickhouse\r\n3. DB::CollectJoinOnKeysMatcher::visit(DB::ASTFunction const&, std::__1::shared_ptr<DB::IAST> const&, DB::CollectJoinOnKeysMatcher::Data&) @ 0xd50f193 in /usr/bin/clickhouse\r\n4. DB::InDepthNodeVisitor<DB::CollectJoinOnKeysMatcher, true, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0xd4fe16d in /usr/bin/clickhouse\r\n5. DB::SyntaxAnalyzer::analyzeSelect(std::__1::shared_ptr<DB::IAST>&, DB::SyntaxAnalyzerResult&&, DB::SelectQueryOptions const&, std::__1::vector<DB::TableWithColumnNamesAndTypes, std::__1::allocator<DB::TableWithColumnNamesAndTypes> > const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) const @ 0xd4f5538 in /usr/bin/clickhouse\r\n6. ? @ 0xd148295 in /usr/bin/clickhouse\r\n7. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, DB::Context const&, std::__1::shared_ptr<DB::IBlockInputStream> const&, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0xd1495ce in /usr/bin/clickhouse\r\n8. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, DB::Context const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0xd14ab89 in /usr/bin/clickhouse\r\n9. DB::InterpreterSelectWithUnionQuery::InterpreterSelectWithUnionQuery(std::__1::shared_ptr<DB::IAST> const&, DB::Context const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0xd34fcd6 in /usr/bin/clickhouse\r\n10. DB::InterpreterSelectWithUnionQuery::getSampleBlock(std::__1::shared_ptr<DB::IAST> const&, DB::Context const&) @ 0xd3507ba in /usr/bin/clickhouse\r\n11. DB::InterpreterCreateQuery::setProperties(DB::ASTCreateQuery&) const @ 0xd051f62 in /usr/bin/clickhouse\r\n12. DB::InterpreterCreateQuery::createTable(DB::ASTCreateQuery&) @ 0xd05261d in /usr/bin/clickhouse\r\n13. DB::InterpreterCreateQuery::execute() @ 0xd054931 in /usr/bin/clickhouse\r\n14. ? @ 0xd55f038 in /usr/bin/clickhouse\r\n15. DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum, bool, bool) @ 0xd561c71 in /usr/bin/clickhouse\r\n16. DB::TCPHandler::runImpl() @ 0x9025489 in /usr/bin/clickhouse\r\n17. DB::TCPHandler::run() @ 0x9026470 in /usr/bin/clickhouse\r\n18. Poco::Net::TCPServerConnection::start() @ 0xe3b9a4b in /usr/bin/clickhouse\r\n19. Poco::Net::TCPServerDispatcher::run() @ 0xe3b9ecd in /usr/bin/clickhouse\r\n20. Poco::PooledThread::run() @ 0x105d05b7 in /usr/bin/clickhouse\r\n21. Poco::ThreadImpl::runnableEntry(void*) @ 0x105cc3bc in /usr/bin/clickhouse\r\n22. ? @ 0x105cdd5d in /usr/bin/clickhouse\r\n23. start_thread @ 0x76db in /lib/x86_64-linux-gnu/libpthread-2.27.so\r\n24. __clone @ 0x12188f in /lib/x86_64-linux-gnu/libc-2.27.so\r\n```","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11000/reactions","total_count":1,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":1},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/11000/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10979","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10979/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10979/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10979/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/10979","id":619702620,"node_id":"MDU6SXNzdWU2MTk3MDI2MjA=","number":10979,"title":"Unexpected behavior of the JSONExtractArrayRaw","user":{"login":"alphavector","id":11805788,"node_id":"MDQ6VXNlcjExODA1Nzg4","avatar_url":"https://avatars.githubusercontent.com/u/11805788?v=4","gravatar_id":"","url":"https://api.github.com/users/alphavector","html_url":"https://github.com/alphavector","followers_url":"https://api.github.com/users/alphavector/followers","following_url":"https://api.github.com/users/alphavector/following{/other_user}","gists_url":"https://api.github.com/users/alphavector/gists{/gist_id}","starred_url":"https://api.github.com/users/alphavector/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alphavector/subscriptions","organizations_url":"https://api.github.com/users/alphavector/orgs","repos_url":"https://api.github.com/users/alphavector/repos","events_url":"https://api.github.com/users/alphavector/events{/privacy}","received_events_url":"https://api.github.com/users/alphavector/received_events","type":"User","site_admin":false},"labels":[{"id":1575085465,"node_id":"MDU6TGFiZWwxNTc1MDg1NDY1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/unexpected%20behaviour","name":"unexpected behaviour","color":"e088ca","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2020-05-17T13:24:01Z","updated_at":"2020-05-17T13:24:01Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"**Describe the unexpected behaviour**\r\nUnexpected behavior of the `JSONExtractArrayRaw` function with decimal numbers\r\n\r\n**How to reproduce**\r\nI use the docker image yandex/clickhouse-server:latest.\r\nClickHouse version 20.4.2.9 (official build)\r\n\r\n`SELECT JSONExtractArrayRaw('{\"a\": \"hello\", \"b\": [-100, 200.0, \"hello\"]}', 'b');`\r\n**The result:**\r\n`['-100','200','\"hello\"']`\r\n**Expected result:**\r\n`['-100','200.0','\"hello\"']`\r\n\r\n`SELECT JSONExtractArrayRaw('{\"a\": \"hello\", \"b\": [-100, 200.2, \"hello\"]}', 'b');`\r\n**The result:**\r\n`['-100','200.20000000000002','\"hello\"']`\r\n**Expected result:**\r\n`['-100','200.2','\"hello\"']`\r\n\r\n`SELECT JSONExtractArrayRaw('{\"a\": \"hello\", \"b\": [-100, 200.200000000000000000000000000, \"hello\"]}', 'b');`\r\n**The result:**\r\n`['-100','200.2','\"hello\"']`\r\n**Expected result:**\r\n`['-100', '200.200000000000000000000000000', '\"hello\"']`\r\n\r\nAs you can see, the result is not at all what is expected.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10979/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10979/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10958","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10958/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10958/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10958/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/10958","id":619417189,"node_id":"MDU6SXNzdWU2MTk0MTcxODk=","number":10958,"title":"Allow SELECT * when using RBAC and Row level Filters","user":{"login":"volfco","id":433045,"node_id":"MDQ6VXNlcjQzMzA0NQ==","avatar_url":"https://avatars.githubusercontent.com/u/433045?v=4","gravatar_id":"","url":"https://api.github.com/users/volfco","html_url":"https://github.com/volfco","followers_url":"https://api.github.com/users/volfco/followers","following_url":"https://api.github.com/users/volfco/following{/other_user}","gists_url":"https://api.github.com/users/volfco/gists{/gist_id}","starred_url":"https://api.github.com/users/volfco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/volfco/subscriptions","organizations_url":"https://api.github.com/users/volfco/orgs","repos_url":"https://api.github.com/users/volfco/repos","events_url":"https://api.github.com/users/volfco/events{/privacy}","received_events_url":"https://api.github.com/users/volfco/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":2011606513,"node_id":"MDU6TGFiZWwyMDExNjA2NTEz","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-rbac","name":"comp-rbac","color":"b5bcff","default":false,"description":"Access control related"}],"state":"open","locked":false,"assignee":{"login":"vitlibar","id":45142681,"node_id":"MDQ6VXNlcjQ1MTQyNjgx","avatar_url":"https://avatars.githubusercontent.com/u/45142681?v=4","gravatar_id":"","url":"https://api.github.com/users/vitlibar","html_url":"https://github.com/vitlibar","followers_url":"https://api.github.com/users/vitlibar/followers","following_url":"https://api.github.com/users/vitlibar/following{/other_user}","gists_url":"https://api.github.com/users/vitlibar/gists{/gist_id}","starred_url":"https://api.github.com/users/vitlibar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vitlibar/subscriptions","organizations_url":"https://api.github.com/users/vitlibar/orgs","repos_url":"https://api.github.com/users/vitlibar/repos","events_url":"https://api.github.com/users/vitlibar/events{/privacy}","received_events_url":"https://api.github.com/users/vitlibar/received_events","type":"User","site_admin":false},"assignees":[{"login":"vitlibar","id":45142681,"node_id":"MDQ6VXNlcjQ1MTQyNjgx","avatar_url":"https://avatars.githubusercontent.com/u/45142681?v=4","gravatar_id":"","url":"https://api.github.com/users/vitlibar","html_url":"https://github.com/vitlibar","followers_url":"https://api.github.com/users/vitlibar/followers","following_url":"https://api.github.com/users/vitlibar/following{/other_user}","gists_url":"https://api.github.com/users/vitlibar/gists{/gist_id}","starred_url":"https://api.github.com/users/vitlibar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vitlibar/subscriptions","organizations_url":"https://api.github.com/users/vitlibar/orgs","repos_url":"https://api.github.com/users/vitlibar/repos","events_url":"https://api.github.com/users/vitlibar/events{/privacy}","received_events_url":"https://api.github.com/users/vitlibar/received_events","type":"User","site_admin":false}],"milestone":null,"comments":0,"created_at":"2020-05-16T08:45:30Z","updated_at":"2020-07-12T19:27:40Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"When running `SELECT * FROM queryMetrics` as a restricted user (Clickhouse 20.4.2.9) that has a limited SELECT GRANT, you get the following error:\r\n```\r\nCode: 497. DB::Exception: Received from 127.0.0.1:9000. DB::Exception: dyn_testing: Not enough privileges. To execute this query it's necessary to have the grant SELECT(Timestamp, Remote, QType, QName, Buffer, Cached, Datacenter, Server, IsTcp, DomainName, RecordName, DomainID) ON default.queryMetrics. \r\n```\r\nI'm using the following GRANT statement:\r\n```\r\nGRANT SELECT(Cached, Timestamp, QType, QName, Datacenter, DomainName, RecordName, DomainID) ON default.queryMetrics ON CLUSTER metrics TO dyn_testing WITH GRANT OPTION;\r\n```\r\n\r\nWhat I would like to see, is that the wildcard doesn't return with an error, but selects everything the user has access to. The only time an error would occur is if the restricted user tries to query a column they don't have permissions for. \r\n\r\nThis way the user doesn't need to manually specify the fields, and the database doesn't leak the fact that the user is not seeing all the columns in the table.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10958/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10958/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10956","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10956/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10956/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10956/events","html_url":"https://github.com/ClickHouse/ClickHouse/pull/10956","id":619338857,"node_id":"MDExOlB1bGxSZXF1ZXN0NDE4ODg3NTgz","number":10956,"title":"Improve performance and lower memory usage of GROUP BY with novel method.","user":{"login":"palasonic1","id":39745378,"node_id":"MDQ6VXNlcjM5NzQ1Mzc4","avatar_url":"https://avatars.githubusercontent.com/u/39745378?v=4","gravatar_id":"","url":"https://api.github.com/users/palasonic1","html_url":"https://github.com/palasonic1","followers_url":"https://api.github.com/users/palasonic1/followers","following_url":"https://api.github.com/users/palasonic1/following{/other_user}","gists_url":"https://api.github.com/users/palasonic1/gists{/gist_id}","starred_url":"https://api.github.com/users/palasonic1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/palasonic1/subscriptions","organizations_url":"https://api.github.com/users/palasonic1/orgs","repos_url":"https://api.github.com/users/palasonic1/repos","events_url":"https://api.github.com/users/palasonic1/events{/privacy}","received_events_url":"https://api.github.com/users/palasonic1/received_events","type":"User","site_admin":false},"labels":[{"id":1309674771,"node_id":"MDU6TGFiZWwxMzA5Njc0Nzcx","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/pr-feature","name":"pr-feature","color":"007700","default":false,"description":"Pull request with new product feature"},{"id":1807683251,"node_id":"MDU6TGFiZWwxODA3NjgzMjUx","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/doc-alert","name":"doc-alert","color":"e51068","default":false,"description":"PR where any documentation work is needed or proceeded"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2020-05-16T00:31:39Z","updated_at":"2021-12-09T14:59:32Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":true,"pull_request":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/pulls/10956","html_url":"https://github.com/ClickHouse/ClickHouse/pull/10956","diff_url":"https://github.com/ClickHouse/ClickHouse/pull/10956.diff","patch_url":"https://github.com/ClickHouse/ClickHouse/pull/10956.patch","merged_at":null},"body":"I hereby agree to the terms of the CLA available at: https://yandex.ru/legal/cla/?lang=en\r\n\r\nChangelog category (leave one):\r\n- New Feature\r\n\r\nChangelog entry (a user-readable short description of the changes that goes to CHANGELOG.md):\r\nplaceholder\r\n\r\nDetailed description / Documentation draft:\r\nplaceholder","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10956/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10956/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10943","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10943/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10943/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10943/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/10943","id":618875009,"node_id":"MDU6SXNzdWU2MTg4NzUwMDk=","number":10943,"title":"Scaling out a live cluster by adding incremental capacity(online resharding)","user":{"login":"yfinkelstein","id":166346,"node_id":"MDQ6VXNlcjE2NjM0Ng==","avatar_url":"https://avatars.githubusercontent.com/u/166346?v=4","gravatar_id":"","url":"https://api.github.com/users/yfinkelstein","html_url":"https://github.com/yfinkelstein","followers_url":"https://api.github.com/users/yfinkelstein/followers","following_url":"https://api.github.com/users/yfinkelstein/following{/other_user}","gists_url":"https://api.github.com/users/yfinkelstein/gists{/gist_id}","starred_url":"https://api.github.com/users/yfinkelstein/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yfinkelstein/subscriptions","organizations_url":"https://api.github.com/users/yfinkelstein/orgs","repos_url":"https://api.github.com/users/yfinkelstein/repos","events_url":"https://api.github.com/users/yfinkelstein/events{/privacy}","received_events_url":"https://api.github.com/users/yfinkelstein/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":1507886722,"node_id":"MDU6TGFiZWwxNTA3ODg2NzIy","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/st-discussion","name":"st-discussion","color":"e5b890","default":false,"description":"The story requires discussion /research / expert help / design & decomposition before will be taken"},{"id":1634829961,"node_id":"MDU6TGFiZWwxNjM0ODI5OTYx","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-distributed","name":"comp-distributed","color":"b5bcff","default":false,"description":"Distributed tables"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2020-05-15T10:44:50Z","updated_at":"2021-03-25T03:14:29Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"**Use case**\r\nAs data set in the cluster grows, new shards need to be added with the purpose of both placing new(future) data on them as well as offloading existing data to free up space and other resources on the existing shards. An important requirement is **do it without a downtime** as well as **without sacrificing data consistency**. The second requirement can be formalized as follows:\r\n* Every physical row of data ever successfully stored in the cluster must be seen once and only once by any matching query at all times - even when resharding activity is taking place.\r\n* The effect of all ongoing row mutation activities in Collapsing-, Aggregating-, Summing-, etc xxMergeTrees must not be altered by resharding operations from the point of view of correctness of corresponding xxMergeTrees algorithms\r\n\r\n**Describe alternatives you've considered**\r\nWe first looked at clickouse-copier which obviously is closely related to the task of adding new shards. However, there is no evidence that the 2 requirements mentioned above have been taken into account. Specifically, \r\n1) the outcome of copying a live mutable partition from one shard to another is undefined in terms of any consistency guarantees, right? Some parts can be copied, some may not, and future writes will continue to go to the same partition in the source but not in the target. \r\n2) copying of a partition from one shard to another in a live cluster results in duplication of this partition's data such that a query running on both From and To shards may end up seeing the same data in both places. Even if the intended use of the copier is to first build out a new shard and only then add it to the cluster - there is still an obvious consistency problem with this because addition of a shard and dropping of partitions/parts in the previous shards locations  **is not atomic**\r\n\r\n**Describe the solution you'd like**\r\nThe purpose of this ticket is not necessarily to suggest how clickhouse SHOULD solve this problem but to seek feedback on whether the following implementation even makes sense. We can implement it ourselves in a private fork of clickhouse and use it in our deployment first.\r\nPlease consider that we are by no means experts in CH design and internals, so this idea may simply not be sound. \r\n \r\nHere is the idea that we have. \r\nThe key observation is that if some partition is **immutable** because, for instance, `PARTITION BY` includes an insertion date column and all the dates except for \"today\" are no longer being written to then using clickhouse-copier is safe. \r\n\r\n1. Define PARTITION BY to be `hash_range (some business fields) + toYYYYMMDD(insert_date) `- i.e. a tuple of 2 values of type int32 and Date. Hash range is an idea from stateful consistent hashing algorithms where the range of [0,Int_Max) is divided into some number of equal sub-ranges. Given a list of column values in some deterministic order, we first serialize them into a byte string,  take a hash of this byte string, and finally determine which of the sub-ranges this hash value belongs to. The number of hash ranges is chosen to be rather small and approximately equal to initial number of shards, say **10**. This means that every day there will be 10 new partitions created in the system. In a year there will be 3650 partitions in the system. Later we can probably collapse old partitions somehow.\r\n2. Each partition is mapped to exactly one shard in some mapping table which can be kept in a clickhouse dictionary. This map has an entry for each pair of partition=>shard. \r\n3. Each of the ranges (10 in our example) has a default shard it's pinned to, i.e. all future partitions that include this range will be placed on that shard _initially_. But they can be _moved_ to another shard later.\r\n4. To enable moving of the partitions, the partition map needs to be **versioned**. Say version 5 of the mapping table maps partition `(2, 2020-05-01) => shard 1`. In version 6 of the mapping table, a new shard 11 was added and this partition was moved over there. So, in version 6, there will be a record: `(2,2020-05-01) => shard 11` and previous record for that partition is gone. Note that several most recent partition map versions along with their partitions(data) are kept in the system such that if a given version of this map  is needed it can be  found. Old versions are eventually trimmed.\r\n5. At query time, the latest known version of the map is looked up during early stages of the query processing, and saved into the context as a variable `_sharding_map_version_`. This variable becomes the basis for a snapshot of the system in terms of the list and location of the partitions in the cluster. \r\n6. The query goes to a distributed table instance, which then dispatches it to all shards (or some shard subset based on primary key based routing optimization which is not relevant at the moment). All shards receive the same query i.e, they see the same value of `_sharding_map_version_` associated with this query.\r\n7. **Now, the key idea**: while going over the list of parts in _MergeTreeDataSelectExecutor.cpp_ _Pipes MergeTreeDataSelectExecutor::readFromParts_  **we filter out those parts that do not belong to the current shard based on the current partition _sbarding_map_version**. More formally, we check invariant `Map.get(_sharding_map_version_).get(partition) == current_shard_id`. If not TRUE, the part is ignored.\r\n8. In Distributed Table, the definition of Distributed engine will look approximately like this:\r\n`engine=Distributed(cluster, database, table, versionedConsistentHash(toYYYYMMDD(date), c1, c2, ...);` Here, versionedConsistentHash is a new built-in function which we will add which will perform the partition map lookup. The fuzzy part here is how to make Distributed engine recognize the shard id as the value returned by this function, but it probably can be done somehow (question: are the buckets in jumpConsitentMap and other such functions meant to correspond to shards?)\r\n\r\n8. What is the overall process/workflow to add a new shard?\r\na) provision a new shard with its replicas and add it to the cluster in distributed table instances right away. \r\nb) pick some immutable partitions (with dates in the past with some safety margin, say at least 3 days ago) and copy them to the new shard using clickhouse-copier.\r\nc) create a new partition map version reflecting moved partitions and their new location.\r\nd) activate the new version, i.e make it **current**. The clients will start seeing it for new queries/sessions. Old version is still readable and is still valid because the partitions that have been moved in the now-current version are still there in their original shards based on previous version.\r\ne) after some conservatively chosen time when it can be guaranteed that all queries/sessions that were using the previous version of the map are gone, it's safe to drop partitions in the original shards that were moved, and also drop the old version of the map.\r\n\r\n9. Simplified proof that this algorithm achieves the 2 key consistency goals that we mentioned in the beginning.\r\n* each query runs in the context of a single shard mapping version i.e. each partition is read at most once during the query execution\r\n* addition of a new shard can be done without a downtime on a live cluster (already supported by CH)\r\n* addition of a new shard results in immediate rebalancing of the data and soon after - freeing up space (deleting migrated partitions) in the existing shards which is the ultimate purpose of this process.\r\n\r\n\r\n**Additional context**\r\nit's quite possible that we missed some conner cases and some additional changes are required to make this implementation safe and sound. Please point out to these issues.\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10943/reactions","total_count":6,"+1":6,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10943/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10939","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10939/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10939/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10939/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/10939","id":618776375,"node_id":"MDU6SXNzdWU2MTg3NzYzNzU=","number":10939,"title":"How to load hive data what type is map to clickhouse","user":{"login":"Zhushatianxia","id":61313678,"node_id":"MDQ6VXNlcjYxMzEzNjc4","avatar_url":"https://avatars.githubusercontent.com/u/61313678?v=4","gravatar_id":"","url":"https://api.github.com/users/Zhushatianxia","html_url":"https://github.com/Zhushatianxia","followers_url":"https://api.github.com/users/Zhushatianxia/followers","following_url":"https://api.github.com/users/Zhushatianxia/following{/other_user}","gists_url":"https://api.github.com/users/Zhushatianxia/gists{/gist_id}","starred_url":"https://api.github.com/users/Zhushatianxia/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Zhushatianxia/subscriptions","organizations_url":"https://api.github.com/users/Zhushatianxia/orgs","repos_url":"https://api.github.com/users/Zhushatianxia/repos","events_url":"https://api.github.com/users/Zhushatianxia/events{/privacy}","received_events_url":"https://api.github.com/users/Zhushatianxia/received_events","type":"User","site_admin":false},"labels":[{"id":386401510,"node_id":"MDU6TGFiZWwzODY0MDE1MTA=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/question","name":"question","color":"bfdadc","default":true,"description":""}],"state":"open","locked":false,"assignee":{"login":"CurtizJ","id":20361854,"node_id":"MDQ6VXNlcjIwMzYxODU0","avatar_url":"https://avatars.githubusercontent.com/u/20361854?v=4","gravatar_id":"","url":"https://api.github.com/users/CurtizJ","html_url":"https://github.com/CurtizJ","followers_url":"https://api.github.com/users/CurtizJ/followers","following_url":"https://api.github.com/users/CurtizJ/following{/other_user}","gists_url":"https://api.github.com/users/CurtizJ/gists{/gist_id}","starred_url":"https://api.github.com/users/CurtizJ/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/CurtizJ/subscriptions","organizations_url":"https://api.github.com/users/CurtizJ/orgs","repos_url":"https://api.github.com/users/CurtizJ/repos","events_url":"https://api.github.com/users/CurtizJ/events{/privacy}","received_events_url":"https://api.github.com/users/CurtizJ/received_events","type":"User","site_admin":false},"assignees":[{"login":"CurtizJ","id":20361854,"node_id":"MDQ6VXNlcjIwMzYxODU0","avatar_url":"https://avatars.githubusercontent.com/u/20361854?v=4","gravatar_id":"","url":"https://api.github.com/users/CurtizJ","html_url":"https://github.com/CurtizJ","followers_url":"https://api.github.com/users/CurtizJ/followers","following_url":"https://api.github.com/users/CurtizJ/following{/other_user}","gists_url":"https://api.github.com/users/CurtizJ/gists{/gist_id}","starred_url":"https://api.github.com/users/CurtizJ/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/CurtizJ/subscriptions","organizations_url":"https://api.github.com/users/CurtizJ/orgs","repos_url":"https://api.github.com/users/CurtizJ/repos","events_url":"https://api.github.com/users/CurtizJ/events{/privacy}","received_events_url":"https://api.github.com/users/CurtizJ/received_events","type":"User","site_admin":false}],"milestone":null,"comments":0,"created_at":"2020-05-15T07:59:26Z","updated_at":"2020-12-17T03:06:42Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Hi,who can help me?\r\nI want use  \"ENGINE = HDFS(URI, format)\" to load data from hive,but the data type is map.\r\nI'm trying to replace \"Nested(id String ,name String)\" with map when creating the clickhouse engine = I found I had failed. \"Select * from table\",can not found nothing from hive。\r\nWhat should I do?;\r\nplease hellp me！！\r\n\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10939/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10939/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10919","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10919/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10919/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10919/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/10919","id":618217419,"node_id":"MDU6SXNzdWU2MTgyMTc0MTk=","number":10919,"title":"Support nested fields in MongoDB dictionaries ","user":{"login":"filimonov","id":1549571,"node_id":"MDQ6VXNlcjE1NDk1NzE=","avatar_url":"https://avatars.githubusercontent.com/u/1549571?v=4","gravatar_id":"","url":"https://api.github.com/users/filimonov","html_url":"https://github.com/filimonov","followers_url":"https://api.github.com/users/filimonov/followers","following_url":"https://api.github.com/users/filimonov/following{/other_user}","gists_url":"https://api.github.com/users/filimonov/gists{/gist_id}","starred_url":"https://api.github.com/users/filimonov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/filimonov/subscriptions","organizations_url":"https://api.github.com/users/filimonov/orgs","repos_url":"https://api.github.com/users/filimonov/repos","events_url":"https://api.github.com/users/filimonov/events{/privacy}","received_events_url":"https://api.github.com/users/filimonov/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":1351463315,"node_id":"MDU6TGFiZWwxMzUxNDYzMzE1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-dictionary","name":"comp-dictionary","color":"b5bcff","default":false,"description":"Dictionaries"},{"id":1365689344,"node_id":"MDU6TGFiZWwxMzY1Njg5MzQ0","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-foreign-db","name":"comp-foreign-db","color":"b5bcff","default":false,"description":"Integrations with other databases"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2020-05-14T13:08:48Z","updated_at":"2021-12-07T23:16:55Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"body":"For such a MongoDB document:\r\n```\r\n   { item: \"journal\", qty: 25, size: { h: 14, w: 21, uom: \"cm\" }, status: \"A\" },\r\n```\r\n\r\nI want to have a way to access `size.h`. (smth like jsonpath?)\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10919/reactions","total_count":2,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":2},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10919/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10913","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10913/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10913/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10913/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/10913","id":618095952,"node_id":"MDU6SXNzdWU2MTgwOTU5NTI=","number":10913,"title":"Index condition not deduced for joined table","user":{"login":"akuzm","id":36882414,"node_id":"MDQ6VXNlcjM2ODgyNDE0","avatar_url":"https://avatars.githubusercontent.com/u/36882414?v=4","gravatar_id":"","url":"https://api.github.com/users/akuzm","html_url":"https://github.com/akuzm","followers_url":"https://api.github.com/users/akuzm/followers","following_url":"https://api.github.com/users/akuzm/following{/other_user}","gists_url":"https://api.github.com/users/akuzm/gists{/gist_id}","starred_url":"https://api.github.com/users/akuzm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/akuzm/subscriptions","organizations_url":"https://api.github.com/users/akuzm/orgs","repos_url":"https://api.github.com/users/akuzm/repos","events_url":"https://api.github.com/users/akuzm/events{/privacy}","received_events_url":"https://api.github.com/users/akuzm/received_events","type":"User","site_admin":false},"labels":[{"id":756395244,"node_id":"MDU6TGFiZWw3NTYzOTUyNDQ=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/performance","name":"performance","color":"c2e0c6","default":false,"description":null},{"id":1357578153,"node_id":"MDU6TGFiZWwxMzU3NTc4MTUz","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-joins","name":"comp-joins","color":"b5bcff","default":false,"description":"JOINs"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2020-05-14T09:59:55Z","updated_at":"2020-10-16T18:09:47Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"body":"```\r\n/4/ :) set force_index_by_date = 1\r\n\r\n\r\n/4/ :) select count(*) from hits l join hits r using EventDate where l.EventDate < today();\r\n\r\nReceived exception from server (version 20.5.1):\r\nCode: 277. DB::Exception: Received from localhost:9000. DB::Exception: MinMax index by columns (EventDate) is not used and setting 'force_index_by_date' is set: While executing CreatingSetsTransform. Stack trace:\r\n```\r\n\r\nThe fix should probably start with adding a general understanding of transitive equality to the query planner.\r\n\r\nAlso, the error message could be better -- it doesn't tell the table name.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10913/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10913/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10906","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10906/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10906/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10906/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/10906","id":617972004,"node_id":"MDU6SXNzdWU2MTc5NzIwMDQ=","number":10906,"title":"Partition prune should work when only partition columns used in a udf in where condition","user":{"login":"kaijianding","id":8663725,"node_id":"MDQ6VXNlcjg2NjM3MjU=","avatar_url":"https://avatars.githubusercontent.com/u/8663725?v=4","gravatar_id":"","url":"https://api.github.com/users/kaijianding","html_url":"https://github.com/kaijianding","followers_url":"https://api.github.com/users/kaijianding/followers","following_url":"https://api.github.com/users/kaijianding/following{/other_user}","gists_url":"https://api.github.com/users/kaijianding/gists{/gist_id}","starred_url":"https://api.github.com/users/kaijianding/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kaijianding/subscriptions","organizations_url":"https://api.github.com/users/kaijianding/orgs","repos_url":"https://api.github.com/users/kaijianding/repos","events_url":"https://api.github.com/users/kaijianding/events{/privacy}","received_events_url":"https://api.github.com/users/kaijianding/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":756395244,"node_id":"MDU6TGFiZWw3NTYzOTUyNDQ=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/performance","name":"performance","color":"c2e0c6","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2020-05-14T06:52:00Z","updated_at":"2020-05-15T16:29:10Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"**Describe the situation**\r\nsql like `select * from test14 where concat(year,month,day)='20200513'`; when year,month,day are partition keys, should do partition prune.\r\n\r\n**How to reproduce**\r\n* Which ClickHouse server version to use\r\n19.17.4.11\r\n\r\n* `CREATE TABLE` statements for all tables involved\r\n```\r\nCREATE TABLE test14 (\r\n  `num` Int32,\r\n  `year` String,\r\n  `month` String,\r\n  `day` String\r\n) ENGINE = ReplicatedMergeTree(\r\n  '/clickhouse/tables/{shard}/test14',\r\n  '{replica}'\r\n) PARTITION BY (year,month,day)\r\nORDER BY\r\n  tuple() SETTINGS index_granularity = 8192\r\n\r\ninsert into test14 (num,year,month,day) values(1,'2020','05','13');\r\ninsert into test14 (num,year,month,day) values(2,'2020','05','14');\r\n\r\nselect name,is_in_partition_key from system.columns where table='test14';\r\n┌─name──┬─is_in_partition_key─┐\r\n│ num   │                   0 │\r\n│ year  │                   1 │\r\n│ month │                   1 │\r\n│ day   │                   1 │\r\n└───────┴─────────────────────┘\r\n```\r\n* Queries to run that lead to slow performance\r\n`select * from test14 where concat(year,month,day)='20200513';`\r\n```\r\n(SelectExecutor): Key condition: unknown\r\n(SelectExecutor): MinMax index condition: unknown\r\n(SelectExecutor): Selected 2 parts by date, 2 parts by key, 2 marks to read from 2 ranges\r\n```\r\n**Expected performance**\r\nyear, month, day are is_in_partition_key=true, thus concat(year, month, day) should be able to use partition meta info to do the fast calculation without access to the real data and partition prune should happen, then only 1 part should be involved.\r\n\r\nupdate:\r\n---------------------------------\r\nA skipping index like `INDEX a (concat(year, month, day)) TYPE minmax GRANULARITY 3`  is helpful to reduce disk read for a sql who has where condition like `concat(year, month, day) between '20191210' and '20200515'`.\r\nsee the below comment","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10906/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10906/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10899","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10899/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10899/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10899/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/10899","id":617684595,"node_id":"MDU6SXNzdWU2MTc2ODQ1OTU=","number":10899,"title":"Clamping of settings instead of query error.","user":{"login":"vitstn","id":7100089,"node_id":"MDQ6VXNlcjcxMDAwODk=","avatar_url":"https://avatars.githubusercontent.com/u/7100089?v=4","gravatar_id":"","url":"https://api.github.com/users/vitstn","html_url":"https://github.com/vitstn","followers_url":"https://api.github.com/users/vitstn/followers","following_url":"https://api.github.com/users/vitstn/following{/other_user}","gists_url":"https://api.github.com/users/vitstn/gists{/gist_id}","starred_url":"https://api.github.com/users/vitstn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vitstn/subscriptions","organizations_url":"https://api.github.com/users/vitstn/orgs","repos_url":"https://api.github.com/users/vitstn/repos","events_url":"https://api.github.com/users/vitstn/events{/privacy}","received_events_url":"https://api.github.com/users/vitstn/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2020-05-13T19:05:20Z","updated_at":"2020-05-13T19:05:20Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"It would allow to add additional constraints, like max_execution_time, for user queries.\n\nSuggested syntax:\n\nsettings_constraints_clamp = 0 | 1 (default 0)","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10899/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10899/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10894","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10894/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10894/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10894/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/10894","id":617622346,"node_id":"MDU6SXNzdWU2MTc2MjIzNDY=","number":10894,"title":"Table aliases in MATERIALIZED VIEWS","user":{"login":"simplemagik","id":130343,"node_id":"MDQ6VXNlcjEzMDM0Mw==","avatar_url":"https://avatars.githubusercontent.com/u/130343?v=4","gravatar_id":"","url":"https://api.github.com/users/simplemagik","html_url":"https://github.com/simplemagik","followers_url":"https://api.github.com/users/simplemagik/followers","following_url":"https://api.github.com/users/simplemagik/following{/other_user}","gists_url":"https://api.github.com/users/simplemagik/gists{/gist_id}","starred_url":"https://api.github.com/users/simplemagik/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/simplemagik/subscriptions","organizations_url":"https://api.github.com/users/simplemagik/orgs","repos_url":"https://api.github.com/users/simplemagik/repos","events_url":"https://api.github.com/users/simplemagik/events{/privacy}","received_events_url":"https://api.github.com/users/simplemagik/received_events","type":"User","site_admin":false},"labels":[{"id":386401505,"node_id":"MDU6TGFiZWwzODY0MDE1MDU=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/bug","name":"bug","color":"ee0701","default":true,"description":"Confirmed user-visible misbehaviour in official release"},{"id":1357578153,"node_id":"MDU6TGFiZWwxMzU3NTc4MTUz","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-joins","name":"comp-joins","color":"b5bcff","default":false,"description":"JOINs"},{"id":1507888214,"node_id":"MDU6TGFiZWwxNTA3ODg4MjE0","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/st-accepted","name":"st-accepted","color":"e5b890","default":false,"description":"The issue is in our backlog, ready to take"},{"id":1907525265,"node_id":"MDU6TGFiZWwxOTA3NTI1MjY1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/v20.3-affected","name":"v20.3-affected","color":"c2bfff","default":false,"description":"This issue affects some releases of v20.3"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2020-05-13T17:21:25Z","updated_at":"2021-10-14T13:42:04Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Seems there is some trouble with table aliases in creating MATERIALIZED VIEWS (mb somewhere else too)\r\n\r\nHow to reproduce:\r\n\r\n```\r\nCREATE TABLE event (\r\n    `event_time` DateTime,\r\n    `event_name` String,\r\n    `user_id` String\r\n)\r\nENGINE = MergeTree()\r\nORDER BY (event_time, event_name)\r\n\r\nCREATE TABLE user (\r\n    `user_id` String,\r\n    `user_type` String\r\n)\r\nENGINE = MergeTree()\r\nORDER BY (user_id)\r\n\r\nINSERT INTO event VALUES\r\n('2020-05-01 00:00:01', 'install', '1'),\r\n('2020-05-01 00:00:02', 'install', '2')\r\n('2020-05-01 00:00:03', 'install', '3')\r\n\r\nINSERT INTO user VALUES\r\n('1', 'type_1'),\r\n('2', 'type_2'),\r\n('3', 'type_3')\r\n\r\nCREATE MATERIALIZED VIEW mv\r\n(\r\n    `event_time` DateTime,\r\n    `event_name` String,\r\n    `user_id` String,\r\n    `user_type` String\r\n)\r\nENGINE = MergeTree()\r\nORDER BY (event_time, event_name) POPULATE AS\r\nSELECT\r\n    e.event_time,\r\n    e.event_name,\r\n    e.user_id,\r\n    u.user_type\r\nFROM event e\r\nINNER JOIN user u ON u.user_id = e.user_id\r\n```\r\n\r\nGot error DB::Exception: Cannot detect left and right JOIN keys. JOIN ON section is ambiguous..\r\n\r\nBut next one works fine\r\n```\r\n\r\nDROP TABLE mv\r\nCREATE MATERIALIZED VIEW mv\r\n(\r\n    `event_time` DateTime,\r\n    `event_name` String,\r\n    `user_id` String,\r\n    `user_type` String\r\n)\r\nENGINE = MergeTree()\r\nORDER BY (event_time, event_name) POPULATE AS\r\nSELECT\r\n    event.event_time,\r\n    event.event_name,\r\n    event.user_id,\r\n    user.user_type\r\nFROM event\r\nINNER JOIN user ON user.user_id = event.user_id\r\n``` ","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10894/reactions","total_count":4,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":4,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10894/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10842","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10842/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10842/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10842/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/10842","id":616525752,"node_id":"MDU6SXNzdWU2MTY1MjU3NTI=","number":10842,"title":"Is table TTL replicated?","user":{"login":"Zer0Divis0r","id":10449753,"node_id":"MDQ6VXNlcjEwNDQ5NzUz","avatar_url":"https://avatars.githubusercontent.com/u/10449753?v=4","gravatar_id":"","url":"https://api.github.com/users/Zer0Divis0r","html_url":"https://github.com/Zer0Divis0r","followers_url":"https://api.github.com/users/Zer0Divis0r/followers","following_url":"https://api.github.com/users/Zer0Divis0r/following{/other_user}","gists_url":"https://api.github.com/users/Zer0Divis0r/gists{/gist_id}","starred_url":"https://api.github.com/users/Zer0Divis0r/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Zer0Divis0r/subscriptions","organizations_url":"https://api.github.com/users/Zer0Divis0r/orgs","repos_url":"https://api.github.com/users/Zer0Divis0r/repos","events_url":"https://api.github.com/users/Zer0Divis0r/events{/privacy}","received_events_url":"https://api.github.com/users/Zer0Divis0r/received_events","type":"User","site_admin":false},"labels":[{"id":386401508,"node_id":"MDU6TGFiZWwzODY0MDE1MDg=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/help%20wanted","name":"help wanted","color":"128A0C","default":true,"description":null},{"id":386401510,"node_id":"MDU6TGFiZWwzODY0MDE1MTA=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/question","name":"question","color":"bfdadc","default":true,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2020-05-12T10:00:14Z","updated_at":"2021-12-13T17:57:44Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Does the command ALTER TABLE MODIFY TTL replicates to other replicas?\r\n\r\nIf yes, do other replicas must have the same storage policy (or policy name?) and same disks/volumes names? \r\n\r\nThis is not clear from, the docs: it says \"different storage policies can be specified for the same table on different replicas\", but it looks like TTL still has to be identical.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10842/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10842/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10824","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10824/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10824/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10824/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/10824","id":616236071,"node_id":"MDU6SXNzdWU2MTYyMzYwNzE=","number":10824,"title":"play.clickhouse.tech displays Int64 incorrectly 9223372033328794000 instead of 9223372033328793741","user":{"login":"den-crane","id":19737682,"node_id":"MDQ6VXNlcjE5NzM3Njgy","avatar_url":"https://avatars.githubusercontent.com/u/19737682?v=4","gravatar_id":"","url":"https://api.github.com/users/den-crane","html_url":"https://github.com/den-crane","followers_url":"https://api.github.com/users/den-crane/followers","following_url":"https://api.github.com/users/den-crane/following{/other_user}","gists_url":"https://api.github.com/users/den-crane/gists{/gist_id}","starred_url":"https://api.github.com/users/den-crane/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/den-crane/subscriptions","organizations_url":"https://api.github.com/users/den-crane/orgs","repos_url":"https://api.github.com/users/den-crane/repos","events_url":"https://api.github.com/users/den-crane/events{/privacy}","received_events_url":"https://api.github.com/users/den-crane/received_events","type":"User","site_admin":false},"labels":[{"id":785082162,"node_id":"MDU6TGFiZWw3ODUwODIxNjI=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-documentation","name":"comp-documentation","color":"b5bcff","default":false,"description":"Used to run automatic builds of the documentation"},{"id":2668414603,"node_id":"MDU6TGFiZWwyNjY4NDE0NjAz","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/bug%20on%20website","name":"bug on website","color":"EA39C8","default":false,"description":""}],"state":"open","locked":false,"assignee":{"login":"qoega","id":2159081,"node_id":"MDQ6VXNlcjIxNTkwODE=","avatar_url":"https://avatars.githubusercontent.com/u/2159081?v=4","gravatar_id":"","url":"https://api.github.com/users/qoega","html_url":"https://github.com/qoega","followers_url":"https://api.github.com/users/qoega/followers","following_url":"https://api.github.com/users/qoega/following{/other_user}","gists_url":"https://api.github.com/users/qoega/gists{/gist_id}","starred_url":"https://api.github.com/users/qoega/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/qoega/subscriptions","organizations_url":"https://api.github.com/users/qoega/orgs","repos_url":"https://api.github.com/users/qoega/repos","events_url":"https://api.github.com/users/qoega/events{/privacy}","received_events_url":"https://api.github.com/users/qoega/received_events","type":"User","site_admin":false},"assignees":[{"login":"qoega","id":2159081,"node_id":"MDQ6VXNlcjIxNTkwODE=","avatar_url":"https://avatars.githubusercontent.com/u/2159081?v=4","gravatar_id":"","url":"https://api.github.com/users/qoega","html_url":"https://github.com/qoega","followers_url":"https://api.github.com/users/qoega/followers","following_url":"https://api.github.com/users/qoega/following{/other_user}","gists_url":"https://api.github.com/users/qoega/gists{/gist_id}","starred_url":"https://api.github.com/users/qoega/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/qoega/subscriptions","organizations_url":"https://api.github.com/users/qoega/orgs","repos_url":"https://api.github.com/users/qoega/repos","events_url":"https://api.github.com/users/qoega/events{/privacy}","received_events_url":"https://api.github.com/users/qoega/received_events","type":"User","site_admin":false}],"milestone":null,"comments":10,"created_at":"2020-05-11T22:46:02Z","updated_at":"2021-01-18T23:40:59Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"body":"```\r\n\r\nSELECT '- '||toString(max(WatchID))||' -', max(WatchID), toString(max(WatchID)) \r\nFROM hits_100m_obfuscated\r\nwhere WatchID = 9223372033328793741\r\n\r\n\r\n- 9223372033328793741 - | 9223372033328794000   | 9223372033328794000\r\n\r\n```\r\nhttps://stackoverflow.com/questions/61739114/condition-on-uint64-field-in-where-clause-in-clickhouse/61740693#61740693\r\n\r\n\r\n```\r\nselect toUInt64(-1) x, toString(x) y, '['||y||']'\r\n18446744073709552000 | 18446744073709552000 | [18446744073709551615]\r\n```\r\n\r\n```\r\nJS issue\r\n\r\n> d=18446744073709551615\r\n18446744073709552000\r\n> d='18446744073709551615'\r\n'18446744073709551615'\r\n```","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10824/reactions","total_count":2,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10824/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10818","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10818/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10818/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10818/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/10818","id":616035913,"node_id":"MDU6SXNzdWU2MTYwMzU5MTM=","number":10818,"title":"Memory usage is larger than needed.","user":{"login":"alexey-milovidov","id":18581488,"node_id":"MDQ6VXNlcjE4NTgxNDg4","avatar_url":"https://avatars.githubusercontent.com/u/18581488?v=4","gravatar_id":"","url":"https://api.github.com/users/alexey-milovidov","html_url":"https://github.com/alexey-milovidov","followers_url":"https://api.github.com/users/alexey-milovidov/followers","following_url":"https://api.github.com/users/alexey-milovidov/following{/other_user}","gists_url":"https://api.github.com/users/alexey-milovidov/gists{/gist_id}","starred_url":"https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexey-milovidov/subscriptions","organizations_url":"https://api.github.com/users/alexey-milovidov/orgs","repos_url":"https://api.github.com/users/alexey-milovidov/repos","events_url":"https://api.github.com/users/alexey-milovidov/events{/privacy}","received_events_url":"https://api.github.com/users/alexey-milovidov/received_events","type":"User","site_admin":false},"labels":[{"id":1532016596,"node_id":"MDU6TGFiZWwxNTMyMDE2NTk2","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/memory","name":"memory","color":"e99695","default":false,"description":"When memory usage is higher than expected"},{"id":1575085465,"node_id":"MDU6TGFiZWwxNTc1MDg1NDY1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/unexpected%20behaviour","name":"unexpected behaviour","color":"e088ca","default":false,"description":""},{"id":2082312777,"node_id":"MDU6TGFiZWwyMDgyMzEyNzc3","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/st-almost-fixed","name":"st-almost-fixed","color":"e5b890","default":false,"description":"Some fixes were applied but some still considered"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":15,"created_at":"2020-05-11T17:01:32Z","updated_at":"2020-05-23T10:12:50Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"The query\r\n```\r\nclickhouse-benchmark --max_threads 16 <<< \"select WatchID from hits_100m_obfuscated group by WatchID limit 10\"\r\n```\r\nwill lead to sustained memory usage of 26 GiB despite the fact that the query only takes 4..5 GiB.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10818/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10818/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10787","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10787/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10787/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10787/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/10787","id":615418082,"node_id":"MDU6SXNzdWU2MTU0MTgwODI=","number":10787,"title":"Introduce io_uring support to ClickHouse","user":{"login":"chhetripradeep","id":30620077,"node_id":"MDQ6VXNlcjMwNjIwMDc3","avatar_url":"https://avatars.githubusercontent.com/u/30620077?v=4","gravatar_id":"","url":"https://api.github.com/users/chhetripradeep","html_url":"https://github.com/chhetripradeep","followers_url":"https://api.github.com/users/chhetripradeep/followers","following_url":"https://api.github.com/users/chhetripradeep/following{/other_user}","gists_url":"https://api.github.com/users/chhetripradeep/gists{/gist_id}","starred_url":"https://api.github.com/users/chhetripradeep/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/chhetripradeep/subscriptions","organizations_url":"https://api.github.com/users/chhetripradeep/orgs","repos_url":"https://api.github.com/users/chhetripradeep/repos","events_url":"https://api.github.com/users/chhetripradeep/events{/privacy}","received_events_url":"https://api.github.com/users/chhetripradeep/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":1365579236,"node_id":"MDU6TGFiZWwxMzY1NTc5MjM2","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/minor","name":"minor","color":"FFF8F8","default":false,"description":"Priority: minor"},{"id":1507867504,"node_id":"MDU6TGFiZWwxNTA3ODY3NTA0","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/st-hold","name":"st-hold","color":"e5b890","default":false,"description":"We've paused the work on issue for some reason"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2020-05-10T15:40:58Z","updated_at":"2021-09-11T22:26:37Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Linux kernel has released a new asynchronous I/O APIs : [io_uring](https://unixism.net/loti/) and has added support for all network and disk I/O syscalls over last 1.5 year and it looks very promising.\r\n\r\nFew of the other project has started adopting it and have seen performance benefits:\r\n- Ceph: https://github.com/ceph/ceph/pull/27392\r\n- Qemu: https://lists.gnu.org/archive/html/qemu-devel/2019-07/msg06733.html\r\n\r\nMany others frameworks like Netty are planning to adopt it too: https://twitter.com/normanmaurer/status/1257597649705893888\r\n\r\nIn context with the scale at which everyone runs clickhouse, I think it will be of great performance improvement.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10787/reactions","total_count":12,"+1":12,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10787/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10781","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10781/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10781/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10781/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/10781","id":615293301,"node_id":"MDU6SXNzdWU2MTUyOTMzMDE=","number":10781,"title":"ODBC table function or dictionary should never log credentials","user":{"login":"alexey-milovidov","id":18581488,"node_id":"MDQ6VXNlcjE4NTgxNDg4","avatar_url":"https://avatars.githubusercontent.com/u/18581488?v=4","gravatar_id":"","url":"https://api.github.com/users/alexey-milovidov","html_url":"https://github.com/alexey-milovidov","followers_url":"https://api.github.com/users/alexey-milovidov/followers","following_url":"https://api.github.com/users/alexey-milovidov/following{/other_user}","gists_url":"https://api.github.com/users/alexey-milovidov/gists{/gist_id}","starred_url":"https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexey-milovidov/subscriptions","organizations_url":"https://api.github.com/users/alexey-milovidov/orgs","repos_url":"https://api.github.com/users/alexey-milovidov/repos","events_url":"https://api.github.com/users/alexey-milovidov/events{/privacy}","received_events_url":"https://api.github.com/users/alexey-milovidov/received_events","type":"User","site_admin":false},"labels":[{"id":1575085465,"node_id":"MDU6TGFiZWwxNTc1MDg1NDY1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/unexpected%20behaviour","name":"unexpected behaviour","color":"e088ca","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2020-05-10T01:20:54Z","updated_at":"2020-05-10T01:20:54Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"This issue was highlighted at ClickHouse Meeting Online in Avito.\r\nhttps://habr.com/en/company/avito/blog/494150/","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10781/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10781/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10730","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10730/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10730/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10730/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/10730","id":614071318,"node_id":"MDU6SXNzdWU2MTQwNzEzMTg=","number":10730,"title":"Ensure config under config.d/users.d are read in some deterministic order","user":{"login":"currybullen","id":8695615,"node_id":"MDQ6VXNlcjg2OTU2MTU=","avatar_url":"https://avatars.githubusercontent.com/u/8695615?v=4","gravatar_id":"","url":"https://api.github.com/users/currybullen","html_url":"https://github.com/currybullen","followers_url":"https://api.github.com/users/currybullen/followers","following_url":"https://api.github.com/users/currybullen/following{/other_user}","gists_url":"https://api.github.com/users/currybullen/gists{/gist_id}","starred_url":"https://api.github.com/users/currybullen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/currybullen/subscriptions","organizations_url":"https://api.github.com/users/currybullen/orgs","repos_url":"https://api.github.com/users/currybullen/repos","events_url":"https://api.github.com/users/currybullen/events{/privacy}","received_events_url":"https://api.github.com/users/currybullen/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2020-05-07T13:46:39Z","updated_at":"2020-05-07T14:23:43Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"**Use case**\r\nIf users are recommended to place custom configuration files under the config.d/ and users.d/ directories, it would be nice to have the ability to have some guarantee for which order those files are parsed in. This would enable one to predictably override settings made in one .xml file under config.d/ by creating an additional one, without editing the original.\r\n\r\n**Describe the solution you'd like**\r\nIt probably makes sense to read the configuration files in an alphabetical order or something. Maybe this already takes place under the hood, if so I can't see it documented anywhere.\r\n\r\n**Describe alternatives you've considered**\r\nCan't think of anything good. A secondary conf.d/ directly under .conf.d/? Probably a bad idea.\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10730/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10730/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10718","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10718/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10718/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10718/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/10718","id":613696200,"node_id":"MDU6SXNzdWU2MTM2OTYyMDA=","number":10718,"title":"Create buffer table with AS command should not fail if destination table contains TTL-columns.","user":{"login":"armenak-baburyan","id":1723973,"node_id":"MDQ6VXNlcjE3MjM5NzM=","avatar_url":"https://avatars.githubusercontent.com/u/1723973?v=4","gravatar_id":"","url":"https://api.github.com/users/armenak-baburyan","html_url":"https://github.com/armenak-baburyan","followers_url":"https://api.github.com/users/armenak-baburyan/followers","following_url":"https://api.github.com/users/armenak-baburyan/following{/other_user}","gists_url":"https://api.github.com/users/armenak-baburyan/gists{/gist_id}","starred_url":"https://api.github.com/users/armenak-baburyan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/armenak-baburyan/subscriptions","organizations_url":"https://api.github.com/users/armenak-baburyan/orgs","repos_url":"https://api.github.com/users/armenak-baburyan/repos","events_url":"https://api.github.com/users/armenak-baburyan/events{/privacy}","received_events_url":"https://api.github.com/users/armenak-baburyan/received_events","type":"User","site_admin":false},"labels":[{"id":386401505,"node_id":"MDU6TGFiZWwzODY0MDE1MDU=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/bug","name":"bug","color":"ee0701","default":true,"description":"Confirmed user-visible misbehaviour in official release"},{"id":845247686,"node_id":"MDU6TGFiZWw4NDUyNDc2ODY=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/usability","name":"usability","color":"ebf28c","default":false,"description":""},{"id":1401282669,"node_id":"MDU6TGFiZWwxNDAxMjgyNjY5","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-ttl","name":"comp-ttl","color":"b5bcff","default":false,"description":"TTL"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2020-05-07T00:38:56Z","updated_at":"2021-08-18T11:04:17Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"**Describe the bug**\r\nCreate buffer table with `AS` command should not fail   if destination table contains TTL-columns.\r\n\r\n**How to reproduce**\r\n* Which ClickHouse server version to use\r\n```\r\nSELECT version()\r\n\r\n┌─version()─┐\r\n│ 20.3.8.53 │\r\n└───────────┘\r\n\r\n1 rows in set. Elapsed: 0.002 sec.\r\n```\r\n\r\n* Queries to run that lead to unexpected result\r\n```SQL\r\nCREATE TABLE test.demo\r\n(\r\n    `timestamp` DateTime,\r\n    `s` String\r\n)\r\nENGINE = MergeTree()\r\nPARTITION BY toYYYYMMDD(timestamp)\r\nORDER BY timestamp\r\nSETTINGS index_granularity = 8192\r\n\r\nOk.\r\n\r\n0 rows in set. Elapsed: 0.392 sec.\r\n\r\n---\r\n\r\nDESCRIBE TABLE test.demo\r\n\r\n┌─name──────┬─type─────┬─default_type─┬─default_expression─┬─comment─┬─codec_expression─┬─ttl_expression─┐\r\n│ timestamp │ DateTime │              │                    │         │                  │                │\r\n│ s         │ String   │              │                    │         │                  │                │\r\n└───────────┴──────────┴──────────────┴────────────────────┴─────────┴──────────────────┴────────────────┘\r\n\r\n2 rows in set. Elapsed: 0.002 sec.\r\n\r\n---\r\n\r\nCREATE TABLE test.demo_buffer AS test.demo\r\nENGINE = Buffer(test, demo, 16, 20, 100, 10000, 1000000, 10000000, 100000000)\r\n\r\nOk.\r\n\r\n0 rows in set. Elapsed: 0.158 sec.\r\n\r\n---\r\n\r\nDROP TABLE test.demo_buffer\r\n\r\nOk.\r\n\r\n0 rows in set. Elapsed: 0.001 sec.\r\n\r\n---\r\n\r\nALTER TABLE test.demo\r\n    MODIFY COLUMN\r\n    `s` String TTL timestamp + toIntervalDay(3)\r\n\r\n\r\nOk.\r\n\r\n0 rows in set. Elapsed: 0.066 sec.\r\n\r\n---\r\n\r\nDESCRIBE TABLE test.demo\r\n\r\n┌─name──────┬─type─────┬─default_type─┬─default_expression─┬─comment─┬─codec_expression─┬─ttl_expression───────────────┐\r\n│ timestamp │ DateTime │              │                    │         │                  │                              │\r\n│ s         │ String   │              │                    │         │                  │ timestamp + toIntervalDay(3) │\r\n└───────────┴──────────┴──────────────┴────────────────────┴─────────┴──────────────────┴──────────────────────────────┘\r\n\r\n2 rows in set. Elapsed: 0.003 sec.\r\n\r\n---\r\n\r\nCREATE TABLE test.demo_buffer AS test.demo\r\nENGINE = Buffer(test, demo, 16, 20, 100, 10000, 1000000, 10000000, 100000000)\r\n\r\nReceived exception from server (version 20.3.8):\r\nCode: 36. DB::Exception: Received from localhost:9000. DB::Exception: Engine Buffer doesn't support TTL clause. Currently only the following engines have support for the feature: [MergeTree, ReplicatedVersionedCollapsingMergeTree, ReplacingMergeTree, ReplicatedSummingMergeTree, ReplicatedAggregatingMergeTree, ReplicatedCollapsingMergeTree, ReplicatedGraphiteMergeTree, ReplicatedMergeTree, ReplicatedReplacingMergeTree, VersionedCollapsingMergeTree, SummingMergeTree, GraphiteMergeTree, CollapsingMergeTree, AggregatingMergeTree].\r\n\r\n0 rows in set. Elapsed: 0.004 sec.\r\n```\r\n**Expected behavior**\r\nBuffer table should be successfully created.\r\n\r\n**Error message and/or stacktrace**\r\n```\r\nCode: 36. DB::Exception: Received from localhost:9000. DB::Exception: Engine Buffer doesn't support TTL clause. Currently only the following engines have support for the feature: [MergeTree, ReplicatedVersionedCollapsingMergeTree, ReplacingMergeTree, ReplicatedSummingMergeTree, ReplicatedAggregatingMergeTree, ReplicatedCollapsingMergeTree, ReplicatedGraphiteMergeTree, ReplicatedMergeTree, ReplicatedReplacingMergeTree, VersionedCollapsingMergeTree, SummingMergeTree, GraphiteMergeTree, CollapsingMergeTree, AggregatingMergeTree].\r\n```","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10718/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10718/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10710","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10710/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10710/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10710/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/10710","id":613522314,"node_id":"MDU6SXNzdWU2MTM1MjIzMTQ=","number":10710,"title":"Push down GROUP BY into subqueries with Distributed tables","user":{"login":"tavplubix","id":14847450,"node_id":"MDQ6VXNlcjE0ODQ3NDUw","avatar_url":"https://avatars.githubusercontent.com/u/14847450?v=4","gravatar_id":"","url":"https://api.github.com/users/tavplubix","html_url":"https://github.com/tavplubix","followers_url":"https://api.github.com/users/tavplubix/followers","following_url":"https://api.github.com/users/tavplubix/following{/other_user}","gists_url":"https://api.github.com/users/tavplubix/gists{/gist_id}","starred_url":"https://api.github.com/users/tavplubix/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tavplubix/subscriptions","organizations_url":"https://api.github.com/users/tavplubix/orgs","repos_url":"https://api.github.com/users/tavplubix/repos","events_url":"https://api.github.com/users/tavplubix/events{/privacy}","received_events_url":"https://api.github.com/users/tavplubix/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":1365579236,"node_id":"MDU6TGFiZWwxMzY1NTc5MjM2","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/minor","name":"minor","color":"FFF8F8","default":false,"description":"Priority: minor"},{"id":1401777979,"node_id":"MDU6TGFiZWwxNDAxNzc3OTc5","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-optimizers","name":"comp-optimizers","color":"b5bcff","default":false,"description":"Query optimizations"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2020-05-06T18:27:04Z","updated_at":"2021-01-13T12:23:01Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"**Use case**\r\nAssume we have the following query:\r\n```\r\nSELECT \r\n    x, \r\n    avg(y)\r\nFROM \r\n(\r\n    SELECT \r\n        x, \r\n        y\r\n    FROM distributed_table_1\r\n    UNION ALL\r\n    SELECT \r\n        x, \r\n        y\r\n    FROM distributed_table_2\r\n)\r\nGROUP BY x\r\n```\r\nIt will read all data from distributed tables and then perform aggregation on host which executes the initial query. However, if we rewrite it like the following:\r\n```\r\nSELECT \r\n    x, \r\n    avgMerge(sy)\r\nFROM \r\n(\r\n    SELECT \r\n        x,\r\n        avgState(y) AS sy, \r\n    FROM distributed_table_1\r\n    GROUP BY x\r\n    UNION ALL\r\n    SELECT \r\n        x,\r\n        avgState(y) AS sy\r\n    FROM distributed_table_2\r\n    GROUP BY x\r\n)\r\nGROUP BY x\r\n```\r\nit will perform pre-aggregation on shards of distributed tables, get intermediate state of aggregation from remote servers and complete aggregation on initial host.\r\n\r\n\r\n**Describe the solution you'd like**\r\nIt would be great to apply such optimization automatically and perform aggregation for the first version of the query on remote servers without manual rewriting with `-State` and `-Merge` functions.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10710/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10710/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10694","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10694/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10694/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10694/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/10694","id":613209578,"node_id":"MDU6SXNzdWU2MTMyMDk1Nzg=","number":10694,"title":"Problem when  query contains nested CAST in presense of JOIN","user":{"login":"XavierQuiniou","id":58552786,"node_id":"MDQ6VXNlcjU4NTUyNzg2","avatar_url":"https://avatars.githubusercontent.com/u/58552786?v=4","gravatar_id":"","url":"https://api.github.com/users/XavierQuiniou","html_url":"https://github.com/XavierQuiniou","followers_url":"https://api.github.com/users/XavierQuiniou/followers","following_url":"https://api.github.com/users/XavierQuiniou/following{/other_user}","gists_url":"https://api.github.com/users/XavierQuiniou/gists{/gist_id}","starred_url":"https://api.github.com/users/XavierQuiniou/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/XavierQuiniou/subscriptions","organizations_url":"https://api.github.com/users/XavierQuiniou/orgs","repos_url":"https://api.github.com/users/XavierQuiniou/repos","events_url":"https://api.github.com/users/XavierQuiniou/events{/privacy}","received_events_url":"https://api.github.com/users/XavierQuiniou/received_events","type":"User","site_admin":false},"labels":[{"id":386401505,"node_id":"MDU6TGFiZWwzODY0MDE1MDU=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/bug","name":"bug","color":"ee0701","default":true,"description":"Confirmed user-visible misbehaviour in official release"},{"id":628291301,"node_id":"MDU6TGFiZWw2MjgyOTEzMDE=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/sql-compatibility","name":"sql-compatibility","color":"006b75","default":false,"description":""},{"id":1357578153,"node_id":"MDU6TGFiZWwxMzU3NTc4MTUz","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-joins","name":"comp-joins","color":"b5bcff","default":false,"description":"JOINs"},{"id":1401777979,"node_id":"MDU6TGFiZWwxNDAxNzc3OTc5","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-optimizers","name":"comp-optimizers","color":"b5bcff","default":false,"description":"Query optimizations"},{"id":1547429435,"node_id":"MDU6TGFiZWwxNTQ3NDI5NDM1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/v19.14","name":"v19.14","color":"55007a","default":false,"description":"Issue affects version 19.14.* or PR was manually backported to related stable branch"},{"id":1907525265,"node_id":"MDU6TGFiZWwxOTA3NTI1MjY1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/v20.3-affected","name":"v20.3-affected","color":"c2bfff","default":false,"description":"This issue affects some releases of v20.3"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2020-05-06T10:21:33Z","updated_at":"2021-06-27T21:21:56Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"<b>Context </b> \r\nWe meet this problem when using Tableau V. 2019-4 (www.tableau.com).\r\n**Error**\r\n```\r\n:Code: 43, e.displayText() = DB::Exception: Second argument to CAST must be a constant string describing type (version 20.3.3.6 (official build))\r\n```\r\n[stacktrace.txt](https://github.com/ClickHouse/ClickHouse/files/4586028/stacktrace.txt)\r\n**Environment**\r\n\tCH \t\tv 20.3.3.6\r\n\tProc.\tIntel Core i7 @ 2500 Mz, 4 procs,  16 go\r\n\tUbuntu  \tv 5.3.0-23\r\n**Test Case**\r\nThe problem is too strange to be described in a few words. So, we have to resort to a test case.\r\n\r\n*Building*\r\n```sql\r\nCREATE TABLE APPLICATION (\r\n  `Name` LowCardinality(String),\r\n  `Base` LowCardinality(String)\r\n) ENGINE = Memory();\r\n\r\ninsert into table APPLICATION values ('ApplicationA', 'BaseA'), ('ApplicationB', 'BaseB') , ('ApplicationC', 'BaseC');\r\n\r\nCREATE TABLE DATABASE_IO (\r\n  `Application` LowCardinality(String),\r\n  `Base` LowCardinality(String),\r\n  `Date` DateTime,\r\n  `Ios` UInt32  ) \r\nENGINE = MergeTree()\r\nORDER BY Date;\r\n  \r\ninsert into table DATABASE_IO  values ('AppA', 'BaseA', '2020-01-01 00:00:00', 1000);\r\n```\r\n*query*\r\n```\r\nSELECT `APPLICATION`.`Name` AS `App`,\r\n       CAST(CAST(`DATABASE_IO`.`Date` AS DATE) AS DATE) AS `date` \r\nFROM   `DATABASE_IO`\r\nINNER \r\nJOIN   `APPLICATION` ON (`DATABASE_IO`.`Base` = `APPLICATION`.`Base`)\r\nWHERE (\r\n       CAST(CAST(`DATABASE_IO`.`Date` AS DATE) AS TIMESTAMP) >= toDateTime('2020-01-01 00:00:00')\r\n)\r\n```\r\n  The execution of this request fails : <tt>Second argument to CAST must be a constant…</tt>\r\nWe should think that CH does not support nested CAST, which is not the case: \r\n```\r\nselect CAST(CAST(toDate('2020-01-01') AS DATE) AS TIMESTAMP)> \r\n```\r\n...works fine :\r\n\r\n**It is strange to note that the problem disappears if we modify the expression of the request a little, or DATABASE_IO engine.**\r\nHere is a list of these changes: \r\n\r\n*Mod 1 : remove clause WHERE* \r\n```sql\r\nSELECT `APPLICATION`.`Name` AS `App`,\r\n       CAST(CAST(`DATABASE_IO`.`Date` AS DATE) AS DATE) AS `date` \r\nFROM   `DATABASE_IO`\r\nINNER \r\nJOIN   `APPLICATION` ON (`DATABASE_IO`.`Base` = `APPLICATION`.`Base`)\r\n```\r\n*Mod 2 : remove clause JOIN*\r\n```sql\r\nSELECT CAST(CAST(`DATABASE_IO`.`Date` AS DATE) AS DATE) AS `date` \r\nFROM   `DATABASE_IO`\r\nWHERE (\r\n       CAST(CAST(`DATABASE_IO`.`Date` AS DATE) AS TIMESTAMP) >= toDateTime('2020-01-01 00:00:00')\r\n)\r\n```\r\n*Mod 3 : remove a nested CAST*\r\n```sql\r\nSELECT `Application`.`Name` AS `App`,\r\n       CAST(`DATABASE_IO`.`Date` AS DATE) AS `date` --- nested CAST removed\r\nFROM   `DATABASE_IO`\r\nINNER \r\nJOIN   `Application` ON (`DATABASE_IO`.`Base` = `Application`.`Base`)\r\nWHERE (\r\n       CAST(CAST(`DATABASE_IO`.`Date` AS DATE) AS TIMESTAMP) >= toDateTime('2020-01-01 00:00:00')\r\n)\r\n```\r\n\r\n*Mod 4 : Duplicate table  DATABASE_IO to  DATABASE_IOmem with ENGINE=Memory()*\r\n```sql\r\nCREATE TABLE gdr_pg2.DATABASE_IOmem (\r\n  `Application` LowCardinality(String),\r\n  `Base` LowCardinality(String),\r\n  `Date` DateTime,\r\n  `Ios` UInt32\r\n) ENGINE = Memory()\r\ninsert into table DATABASE_IOmem\r\nselect * from DATABASE_IO\r\n```\r\n```sql\r\nSELECT `APPLICATION`.`Name` AS `App`,\r\n       CAST(CAST(`DATABASE_IOmem`.`Date` AS DATE) AS DATE) AS `date` \r\nFROM   `DATABASE_IOmem`\r\nINNER \r\nJOIN   `Application` ON (`DATABASE_IOmem`.`Base` = `APPLICATION`.`Base`)\r\nWHERE (\r\n       CAST(CAST(`DATABASE_IOmem`.`Date` AS DATE) AS TIMESTAMP) >= toDateTime('2020-01-01 00:00:00')\r\n)\r\n```\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10694/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10694/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10685","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10685/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10685/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10685/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/10685","id":612967653,"node_id":"MDU6SXNzdWU2MTI5Njc2NTM=","number":10685,"title":"Automagically apply some functions to columns in WHERE, if func(column) present in PK","user":{"login":"UnamedRus","id":9449405,"node_id":"MDQ6VXNlcjk0NDk0MDU=","avatar_url":"https://avatars.githubusercontent.com/u/9449405?v=4","gravatar_id":"","url":"https://api.github.com/users/UnamedRus","html_url":"https://github.com/UnamedRus","followers_url":"https://api.github.com/users/UnamedRus/followers","following_url":"https://api.github.com/users/UnamedRus/following{/other_user}","gists_url":"https://api.github.com/users/UnamedRus/gists{/gist_id}","starred_url":"https://api.github.com/users/UnamedRus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/UnamedRus/subscriptions","organizations_url":"https://api.github.com/users/UnamedRus/orgs","repos_url":"https://api.github.com/users/UnamedRus/repos","events_url":"https://api.github.com/users/UnamedRus/events{/privacy}","received_events_url":"https://api.github.com/users/UnamedRus/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":1401777979,"node_id":"MDU6TGFiZWwxNDAxNzc3OTc5","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-optimizers","name":"comp-optimizers","color":"b5bcff","default":false,"description":"Query optimizations"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2020-05-06T00:05:10Z","updated_at":"2021-09-08T17:00:57Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"**Use case**\r\nWe have some column with very long values in it, but we want to use that column in PRIMARY KEY for faster query lookup (WHERE column = 'long_string' or WHERE column IN ('long_string1','long_string2')). \r\nWe dont want to load all this long values in ram, so we can use some deterministic function(hash, startsWith, slice) to reduce key size.\r\n**Describe the solution you'd like**\r\nAdd some setting and optimization which would replace WHERE column = 'long_row' with\r\nWHERE cityHash64(column) = cityHash64('long_string') AND column = 'long_string' (if table definition contains ORDER BY (cityHash64(column))\r\n\r\n**Describe alternatives you've considered**\r\nSometimes we can write that optimization by yourselfs, but sometimes cant. \r\nFor example if we run queries from software with query builder.\r\n\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10685/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10685/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10681","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10681/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10681/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10681/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/10681","id":612789601,"node_id":"MDU6SXNzdWU2MTI3ODk2MDE=","number":10681,"title":"Synchronous mode of distributed INSERTs with fallback to asynchronous mode.","user":{"login":"alexey-milovidov","id":18581488,"node_id":"MDQ6VXNlcjE4NTgxNDg4","avatar_url":"https://avatars.githubusercontent.com/u/18581488?v=4","gravatar_id":"","url":"https://api.github.com/users/alexey-milovidov","html_url":"https://github.com/alexey-milovidov","followers_url":"https://api.github.com/users/alexey-milovidov/followers","following_url":"https://api.github.com/users/alexey-milovidov/following{/other_user}","gists_url":"https://api.github.com/users/alexey-milovidov/gists{/gist_id}","starred_url":"https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexey-milovidov/subscriptions","organizations_url":"https://api.github.com/users/alexey-milovidov/orgs","repos_url":"https://api.github.com/users/alexey-milovidov/repos","events_url":"https://api.github.com/users/alexey-milovidov/events{/privacy}","received_events_url":"https://api.github.com/users/alexey-milovidov/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":1634829961,"node_id":"MDU6TGFiZWwxNjM0ODI5OTYx","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-distributed","name":"comp-distributed","color":"b5bcff","default":false,"description":"Distributed tables"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2020-05-05T17:59:40Z","updated_at":"2020-05-06T13:18:31Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"**Use case**\r\nJust like `insert_distributed_sync = 1` but with writing data on filesystem for unavailable servers.\r\nThis is the mode that can be convenient enough to make it by default.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10681/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10681/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10680","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10680/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10680/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10680/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/10680","id":612771775,"node_id":"MDU6SXNzdWU2MTI3NzE3NzU=","number":10680,"title":"Parquet files generated in hive has missing columns after downloading the files to ClickHouse server","user":{"login":"Crazylearner30","id":45940564,"node_id":"MDQ6VXNlcjQ1OTQwNTY0","avatar_url":"https://avatars.githubusercontent.com/u/45940564?v=4","gravatar_id":"","url":"https://api.github.com/users/Crazylearner30","html_url":"https://github.com/Crazylearner30","followers_url":"https://api.github.com/users/Crazylearner30/followers","following_url":"https://api.github.com/users/Crazylearner30/following{/other_user}","gists_url":"https://api.github.com/users/Crazylearner30/gists{/gist_id}","starred_url":"https://api.github.com/users/Crazylearner30/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Crazylearner30/subscriptions","organizations_url":"https://api.github.com/users/Crazylearner30/orgs","repos_url":"https://api.github.com/users/Crazylearner30/repos","events_url":"https://api.github.com/users/Crazylearner30/events{/privacy}","received_events_url":"https://api.github.com/users/Crazylearner30/received_events","type":"User","site_admin":false},"labels":[{"id":386401510,"node_id":"MDU6TGFiZWwzODY0MDE1MTA=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/question","name":"question","color":"bfdadc","default":true,"description":""},{"id":1401255404,"node_id":"MDU6TGFiZWwxNDAxMjU1NDA0","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-formats","name":"comp-formats","color":"b5bcff","default":false,"description":"Input / output formats"}],"state":"open","locked":false,"assignee":{"login":"filimonov","id":1549571,"node_id":"MDQ6VXNlcjE1NDk1NzE=","avatar_url":"https://avatars.githubusercontent.com/u/1549571?v=4","gravatar_id":"","url":"https://api.github.com/users/filimonov","html_url":"https://github.com/filimonov","followers_url":"https://api.github.com/users/filimonov/followers","following_url":"https://api.github.com/users/filimonov/following{/other_user}","gists_url":"https://api.github.com/users/filimonov/gists{/gist_id}","starred_url":"https://api.github.com/users/filimonov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/filimonov/subscriptions","organizations_url":"https://api.github.com/users/filimonov/orgs","repos_url":"https://api.github.com/users/filimonov/repos","events_url":"https://api.github.com/users/filimonov/events{/privacy}","received_events_url":"https://api.github.com/users/filimonov/received_events","type":"User","site_admin":false},"assignees":[{"login":"filimonov","id":1549571,"node_id":"MDQ6VXNlcjE1NDk1NzE=","avatar_url":"https://avatars.githubusercontent.com/u/1549571?v=4","gravatar_id":"","url":"https://api.github.com/users/filimonov","html_url":"https://github.com/filimonov","followers_url":"https://api.github.com/users/filimonov/followers","following_url":"https://api.github.com/users/filimonov/following{/other_user}","gists_url":"https://api.github.com/users/filimonov/gists{/gist_id}","starred_url":"https://api.github.com/users/filimonov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/filimonov/subscriptions","organizations_url":"https://api.github.com/users/filimonov/orgs","repos_url":"https://api.github.com/users/filimonov/repos","events_url":"https://api.github.com/users/filimonov/events{/privacy}","received_events_url":"https://api.github.com/users/filimonov/received_events","type":"User","site_admin":false}],"milestone":null,"comments":6,"created_at":"2020-05-05T17:28:40Z","updated_at":"2021-07-14T14:14:39Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Hi,\r\n\r\nPlease help me with the below issue \r\n\r\n**Issue:**  Parquet files generated in hive has missing columns after downloading the files to ClickHouse server.\r\n  But when i created table in athena using the same files(downloaded to ClickHouse ) I could see all the columns present.\r\nClickHouse client version 20.1.11.73.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10680/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10680/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10650","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10650/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10650/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10650/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/10650","id":611712864,"node_id":"MDU6SXNzdWU2MTE3MTI4NjQ=","number":10650,"title":"Disable merges for a volume","user":{"login":"alex-zaitsev","id":25770686,"node_id":"MDQ6VXNlcjI1NzcwNjg2","avatar_url":"https://avatars.githubusercontent.com/u/25770686?v=4","gravatar_id":"","url":"https://api.github.com/users/alex-zaitsev","html_url":"https://github.com/alex-zaitsev","followers_url":"https://api.github.com/users/alex-zaitsev/followers","following_url":"https://api.github.com/users/alex-zaitsev/following{/other_user}","gists_url":"https://api.github.com/users/alex-zaitsev/gists{/gist_id}","starred_url":"https://api.github.com/users/alex-zaitsev/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alex-zaitsev/subscriptions","organizations_url":"https://api.github.com/users/alex-zaitsev/orgs","repos_url":"https://api.github.com/users/alex-zaitsev/repos","events_url":"https://api.github.com/users/alex-zaitsev/events{/privacy}","received_events_url":"https://api.github.com/users/alex-zaitsev/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":1634815111,"node_id":"MDU6TGFiZWwxNjM0ODE1MTEx","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-multidisk","name":"comp-multidisk","color":"b5bcff","default":false,"description":"Storages & policies"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2020-05-04T08:59:45Z","updated_at":"2020-05-04T13:48:37Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"**Use case**\r\n\r\nWith multi-tier configuration, it should be possible to disable merges for slow volumes.\r\n\r\n**Describe the solution you'd like**\r\n\r\n1. Extend current 'stop merges' syntax:\r\n\r\n```\r\nSYSTEM START|STOP MERGES [ON <volume>]\r\n```\r\n\r\n2. Add a setting to volume configuration to disable merges:\r\n\r\n```\r\n<volumes>\r\n  <cold>\r\n    <disable_merges>1</disable_merges>\r\n    <disk> ...\r\n```     \r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10650/reactions","total_count":2,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":2,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10650/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10581","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10581/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10581/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10581/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/10581","id":609002824,"node_id":"MDU6SXNzdWU2MDkwMDI4MjQ=","number":10581,"title":"Roadmap to improve functionality of Live View tables","user":{"login":"vzakaznikov","id":41681088,"node_id":"MDQ6VXNlcjQxNjgxMDg4","avatar_url":"https://avatars.githubusercontent.com/u/41681088?v=4","gravatar_id":"","url":"https://api.github.com/users/vzakaznikov","html_url":"https://github.com/vzakaznikov","followers_url":"https://api.github.com/users/vzakaznikov/followers","following_url":"https://api.github.com/users/vzakaznikov/following{/other_user}","gists_url":"https://api.github.com/users/vzakaznikov/gists{/gist_id}","starred_url":"https://api.github.com/users/vzakaznikov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vzakaznikov/subscriptions","organizations_url":"https://api.github.com/users/vzakaznikov/orgs","repos_url":"https://api.github.com/users/vzakaznikov/repos","events_url":"https://api.github.com/users/vzakaznikov/events{/privacy}","received_events_url":"https://api.github.com/users/vzakaznikov/received_events","type":"User","site_admin":false},"labels":[{"id":845247686,"node_id":"MDU6TGFiZWw4NDUyNDc2ODY=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/usability","name":"usability","color":"ebf28c","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2020-04-29T12:04:33Z","updated_at":"2020-10-23T00:05:52Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Roadmap to improve functionality of Live View tables.\r\n\r\n# Tasks\r\n\r\n## Easy\r\n- [ ] Add support for `TO table` clause when creating live views.\r\n  https://github.com/ClickHouse/ClickHouse/pull/10578\r\n- [ ] Add support for `TO [TABLE] FUNCTION table_function` clause when creating live views.\r\n  https://github.com/ClickHouse/ClickHouse/pull/10568\r\n- [ ] Add support for auto-refresh using `WITH AUTO REFRESH` syntax.\r\n  https://github.com/ClickHouse/ClickHouse/pull/14822\r\n- [ ] Add support for keeping live view table always in sync even if there are no active `WATCH` queries using the `WITH ALWAYS ON` syntax.\r\n- [ ] Add support for using the `WATCH` query inside `SELECT`. For example, `SELECT * FROM WATCH lv`.\r\n- [ ] Add support for selecting specific columns inside the `WATCH` query. For example, change syntax to support only `WATCH  col1, col2 FROM lv` and `WATCH * FROM lv`. Alternatively, without breaking current syntax add support for `WATCH SELECT col1, col2 FROM lv` and `WATCH SELECT * FROM lv`.\r\n\r\n## Medium\r\n- [ ] Add support for `LIVE CHANNEL` in order to combine output of multiple live views into one channel. This is needed for web application that have a dashboard using multiple live views. Browsers, do not support large number of always open connections. Reference https://github.com/ClickHouse/ClickHouse/pull/3925.\r\n- [ ] Add support for `DISTRIBUTED LIVE VIEW` table engine and `SELECT` query over it.\r\n- [ ] Add support for using live views with replicated tables by\r\n      storing mergeable blocks inside the most appropriate `ReplicatedMergeTree` table. \r\n\r\n## Hard\r\n- [ ] Add support for merging of mergeable blocks so that we don't have to re-execute the query after N number of inserts.\r\n- [ ] Add support for reducing mergeable blocks size if the data there is no longer needed. For example, when a stored query has a subquery with a `LIMIT` clause.\r\n\r\n## Super Hard\r\n- [ ] Add support for generic pub/sub interface:\r\n     - [ ] for regular tables subscribe for INSERT blocks\r\n     - [ ] for replicated tables subscribe for INSERT or replicated blocks\r\n     - [ ] for Kafka subscribe for blocks that are consumed\r\n     - [ ] for system tables subscribe for changes\r\n- [ ] Add support for `WATCH` query in the `DISTRIBUTED LIVE VIEW` table engine.\r\n\r\n  \r\n\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10581/reactions","total_count":12,"+1":10,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":2,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10581/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10575","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10575/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10575/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10575/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/10575","id":608880904,"node_id":"MDU6SXNzdWU2MDg4ODA5MDQ=","number":10575,"title":"Rows processed by the right side of IN operator are not counted","user":{"login":"akuzm","id":36882414,"node_id":"MDQ6VXNlcjM2ODgyNDE0","avatar_url":"https://avatars.githubusercontent.com/u/36882414?v=4","gravatar_id":"","url":"https://api.github.com/users/akuzm","html_url":"https://github.com/akuzm","followers_url":"https://api.github.com/users/akuzm/followers","following_url":"https://api.github.com/users/akuzm/following{/other_user}","gists_url":"https://api.github.com/users/akuzm/gists{/gist_id}","starred_url":"https://api.github.com/users/akuzm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/akuzm/subscriptions","organizations_url":"https://api.github.com/users/akuzm/orgs","repos_url":"https://api.github.com/users/akuzm/repos","events_url":"https://api.github.com/users/akuzm/events{/privacy}","received_events_url":"https://api.github.com/users/akuzm/received_events","type":"User","site_admin":false},"labels":[{"id":1575085465,"node_id":"MDU6TGFiZWwxNTc1MDg1NDY1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/unexpected%20behaviour","name":"unexpected behaviour","color":"e088ca","default":false,"description":""},{"id":1948647732,"node_id":"MDU6TGFiZWwxOTQ4NjQ3NzMy","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-processors","name":"comp-processors","color":"b5bcff","default":false,"description":""}],"state":"open","locked":false,"assignee":{"login":"KochetovNicolai","id":4092911,"node_id":"MDQ6VXNlcjQwOTI5MTE=","avatar_url":"https://avatars.githubusercontent.com/u/4092911?v=4","gravatar_id":"","url":"https://api.github.com/users/KochetovNicolai","html_url":"https://github.com/KochetovNicolai","followers_url":"https://api.github.com/users/KochetovNicolai/followers","following_url":"https://api.github.com/users/KochetovNicolai/following{/other_user}","gists_url":"https://api.github.com/users/KochetovNicolai/gists{/gist_id}","starred_url":"https://api.github.com/users/KochetovNicolai/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/KochetovNicolai/subscriptions","organizations_url":"https://api.github.com/users/KochetovNicolai/orgs","repos_url":"https://api.github.com/users/KochetovNicolai/repos","events_url":"https://api.github.com/users/KochetovNicolai/events{/privacy}","received_events_url":"https://api.github.com/users/KochetovNicolai/received_events","type":"User","site_admin":false},"assignees":[{"login":"KochetovNicolai","id":4092911,"node_id":"MDQ6VXNlcjQwOTI5MTE=","avatar_url":"https://avatars.githubusercontent.com/u/4092911?v=4","gravatar_id":"","url":"https://api.github.com/users/KochetovNicolai","html_url":"https://github.com/KochetovNicolai","followers_url":"https://api.github.com/users/KochetovNicolai/followers","following_url":"https://api.github.com/users/KochetovNicolai/following{/other_user}","gists_url":"https://api.github.com/users/KochetovNicolai/gists{/gist_id}","starred_url":"https://api.github.com/users/KochetovNicolai/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/KochetovNicolai/subscriptions","organizations_url":"https://api.github.com/users/KochetovNicolai/orgs","repos_url":"https://api.github.com/users/KochetovNicolai/repos","events_url":"https://api.github.com/users/KochetovNicolai/events{/privacy}","received_events_url":"https://api.github.com/users/KochetovNicolai/received_events","type":"User","site_admin":false}],"milestone":null,"comments":0,"created_at":"2020-04-29T08:42:39Z","updated_at":"2021-01-09T05:20:43Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"body":"The first query uses a subselect for IN, and the second one just uses constants (disregard weird coding with `materialize` etc, this is to work around other bugs). Note that the number of processed rows is the same, despite the fact that the subselect processes another 81k rows.\r\n\r\n```\r\n/4/ :) \r\nSELECT UserID\r\nFROM hits\r\nWHERE (CounterID, EventTime) IN \r\n(\r\n    SELECT \r\n        CounterID, \r\n        max(EventTime)\r\n    FROM hits\r\n    WHERE (CounterID = 25703952) AND (EventDate < '2014-03-20')\r\n    GROUP BY CounterID\r\n)\r\n\r\n┌─────────────UserID─┐\r\n│ 285721602179270679 │\r\n└────────────────────┘\r\n\r\n1 rows in set. Elapsed: 0.008 sec. Processed 155.65 thousand rows, 1.26 MB (20.21 million rows/s., 164.02 MB/s.) \r\n\r\n/4/ :) \r\nSELECT UserID\r\nFROM hits\r\nWHERE (CounterID, EventTime) IN \r\n(\r\n    SELECT \r\n        materialize(toUInt32(25703952)) AS CounterID, \r\n        materialize(toDateTime('2014-03-19 23:59:58')) AS EventTime\r\n    FROM numbers(1)\r\n)\r\n\r\n┌─────────────UserID─┐\r\n│ 285721602179270679 │\r\n└────────────────────┘\r\n\r\n1 rows in set. Elapsed: 0.006 sec. Processed 155.65 thousand rows, 1.26 MB (28.14 million rows/s., 228.40 MB/s.) \r\n```","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10575/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10575/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10540","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10540/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10540/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10540/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/10540","id":607708231,"node_id":"MDU6SXNzdWU2MDc3MDgyMzE=","number":10540,"title":"Small tasks on SQL compatibility","user":{"login":"alexey-milovidov","id":18581488,"node_id":"MDQ6VXNlcjE4NTgxNDg4","avatar_url":"https://avatars.githubusercontent.com/u/18581488?v=4","gravatar_id":"","url":"https://api.github.com/users/alexey-milovidov","html_url":"https://github.com/alexey-milovidov","followers_url":"https://api.github.com/users/alexey-milovidov/followers","following_url":"https://api.github.com/users/alexey-milovidov/following{/other_user}","gists_url":"https://api.github.com/users/alexey-milovidov/gists{/gist_id}","starred_url":"https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexey-milovidov/subscriptions","organizations_url":"https://api.github.com/users/alexey-milovidov/orgs","repos_url":"https://api.github.com/users/alexey-milovidov/repos","events_url":"https://api.github.com/users/alexey-milovidov/events{/privacy}","received_events_url":"https://api.github.com/users/alexey-milovidov/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":628291301,"node_id":"MDU6TGFiZWw2MjgyOTEzMDE=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/sql-compatibility","name":"sql-compatibility","color":"006b75","default":false,"description":""},{"id":2121848770,"node_id":"MDU6TGFiZWwyMTIxODQ4Nzcw","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-sql","name":"comp-sql","color":"b5bcff","default":false,"description":"General SQL support"},{"id":3086255531,"node_id":"MDU6TGFiZWwzMDg2MjU1NTMx","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/warmup%20task","name":"warmup task","color":"FBCA04","default":false,"description":"The task for new ClickHouse team members. Low risk, moderate complexity, no urgency."}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2020-04-27T17:06:24Z","updated_at":"2021-08-23T11:46:30Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"- [x] 1. Implement `UNION DISTINCT`. For implementation just add Distinct transform after union.\r\nAdd syntax `UNION` without ALL or DISTINCT and setting `union_default_mode` (similar to `join_default_strictness`) with values: empty string, ALL, DISTINCT. When set to empty string, UNION without ALL or DISTINCT will throw an exception. When set to ALL or DISTINCT, the query will be rewritten in AST level.\r\n\r\n- [x] 2. Implement NULL and NOT NULL modifiers after data type in table definition and in all places where data type can be parsed (e.g. CAST function/expression). If the type is not Nullable and if NULL is specified, it will be treated as Nullable; if NOT NULL is specified, it's noop. E.g. `INT NULL` is the same as `Nullable(INT)`. If the type is Nullable and NULL or NOT NULL modifiers are specified, exception will be thrown. Add a setting `data_type_default_nullable` with values 0 and 1. If the value is 1, then data types without explicit modifier in table definition will be Nullable.\r\n\r\n- [ ] 3. Implement a setting `rollup_use_null` with values 0 and 1. When value is 1 and there is GROUP BY ... WITH ROLLUP or WITH CUBE, then RollupTransform and CubeTransform will treat GROUP BY keys as Nullable and emit Nullable columns.\r\n\r\n- [x] 4. Implement positional specification for ORDER BY, GROUP BY and LIMIT BY. E.g. ORDER BY 1, 2. This does not correspond to SQL standard but improves compatibility with other DBMS. It should be controlled by setting `enable_positional_arguments`. #2592 \r\n\r\n- [x] 5. Implement a setting `aggregate_functions_nullable_result`. When this setting is enabled, aggregate functions will be rewritten with `-OrNull` modifier. #16123\r\n\r\n- [x] 6. `count` and `countDistinct` (among with all `uniq` variants) from Nullable arguments should return non-Nullable result. For implementation, add a property to `IAggregateFunction`.\r\n\r\n- [x] 7. Add support for multi-word expressions for data types, e.g. CHAR VARYING, DOUBLE PRECISION. Most of these complex expressions will simply map to existing data types.\r\n\r\n- [x] 8. Support numeric parameters in VARCHAR, VARBINARY, INT... data types (e.g. `VARCHAR(255)`) and ignore them completely.\r\n\r\n- [ ] 9. `CAST` operator should accept not only exact data types but also data type modifiers #7119.\r\n\r\n- [x] 10. Provide NUMERIC as a synonim to DECIMAL; provide many other similar symonims. Example: https://dev.mysql.com/doc/refman/8.0/en/other-vendor-data-types.html","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10540/reactions","total_count":5,"+1":5,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10540/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10535","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10535/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10535/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10535/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/10535","id":607586312,"node_id":"MDU6SXNzdWU2MDc1ODYzMTI=","number":10535,"title":"Allow to execute ALTER MODIFY type of key column if the type is expanded.","user":{"login":"alexey-milovidov","id":18581488,"node_id":"MDQ6VXNlcjE4NTgxNDg4","avatar_url":"https://avatars.githubusercontent.com/u/18581488?v=4","gravatar_id":"","url":"https://api.github.com/users/alexey-milovidov","html_url":"https://github.com/alexey-milovidov","followers_url":"https://api.github.com/users/alexey-milovidov/followers","following_url":"https://api.github.com/users/alexey-milovidov/following{/other_user}","gists_url":"https://api.github.com/users/alexey-milovidov/gists{/gist_id}","starred_url":"https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexey-milovidov/subscriptions","organizations_url":"https://api.github.com/users/alexey-milovidov/orgs","repos_url":"https://api.github.com/users/alexey-milovidov/repos","events_url":"https://api.github.com/users/alexey-milovidov/events{/privacy}","received_events_url":"https://api.github.com/users/alexey-milovidov/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2020-04-27T14:15:11Z","updated_at":"2020-04-27T14:15:11Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"**Use case**\r\nChange type from UInt16 to UInt32.\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10535/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10535/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10451","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10451/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10451/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10451/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/10451","id":605352830,"node_id":"MDU6SXNzdWU2MDUzNTI4MzA=","number":10451,"title":"runningAccumulate-like function returning intermediate state of the aggregation","user":{"login":"wheneverifever","id":31898821,"node_id":"MDQ6VXNlcjMxODk4ODIx","avatar_url":"https://avatars.githubusercontent.com/u/31898821?v=4","gravatar_id":"","url":"https://api.github.com/users/wheneverifever","html_url":"https://github.com/wheneverifever","followers_url":"https://api.github.com/users/wheneverifever/followers","following_url":"https://api.github.com/users/wheneverifever/following{/other_user}","gists_url":"https://api.github.com/users/wheneverifever/gists{/gist_id}","starred_url":"https://api.github.com/users/wheneverifever/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wheneverifever/subscriptions","organizations_url":"https://api.github.com/users/wheneverifever/orgs","repos_url":"https://api.github.com/users/wheneverifever/repos","events_url":"https://api.github.com/users/wheneverifever/events{/privacy}","received_events_url":"https://api.github.com/users/wheneverifever/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2020-04-23T08:45:31Z","updated_at":"2020-04-23T08:45:31Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"**Describe the solution you'd like**\r\nIs it possible to add function that works in the same way as runningAccumulate, but returns not the final value, but an intermediate state as the -MergeState combinator?\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10451/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10451/timeline","performed_via_github_app":null}]
