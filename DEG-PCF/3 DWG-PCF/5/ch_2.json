[{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33932","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33932/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33932/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33932/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33932","id":1112106412,"node_id":"I_kwDOA5dJV85CSWWs","number":33932,"title":"substr existing table metadata in zooKeeper differs in partition key expression","user":{"login":"sunny19930321","id":20608540,"node_id":"MDQ6VXNlcjIwNjA4NTQw","avatar_url":"https://avatars.githubusercontent.com/u/20608540?v=4","gravatar_id":"","url":"https://api.github.com/users/sunny19930321","html_url":"https://github.com/sunny19930321","followers_url":"https://api.github.com/users/sunny19930321/followers","following_url":"https://api.github.com/users/sunny19930321/following{/other_user}","gists_url":"https://api.github.com/users/sunny19930321/gists{/gist_id}","starred_url":"https://api.github.com/users/sunny19930321/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sunny19930321/subscriptions","organizations_url":"https://api.github.com/users/sunny19930321/orgs","repos_url":"https://api.github.com/users/sunny19930321/repos","events_url":"https://api.github.com/users/sunny19930321/events{/privacy}","received_events_url":"https://api.github.com/users/sunny19930321/received_events","type":"User","site_admin":false},"labels":[{"id":3260776666,"node_id":"MDU6TGFiZWwzMjYwNzc2NjY2","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/potential%20bug","name":"potential bug","color":"ffc080","default":false,"description":"To be reviewed by developers and confirmed/rejected."}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-01-24T03:01:05Z","updated_at":"2022-01-24T03:01:05Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"\r\n**Describe what's wrong**\r\nWhen version 20.12 is upgraded to version 21.3, an old table is created in a new replica. The local metadata is inconsistent with the zk metadata\r\n\r\n**Does it reproduce on recent release?**\r\n\r\n21.3 version later\r\n\r\n**Enable crash reporting**\r\n\r\nCode: 342. DB::Exception: Received from localhost:9000. DB::Exception: Existing table metadata in ZooKeeper differs in partition key expression. Stored in ZooKeeper: toYYYYMMDD(toDateTime(substr(create_tm, 1, 19))), local: toYYYYMMDD(toDateTime(substring(create_tm, 1, 19))). \r\n\r\n\r\n**How to reproduce**\r\n(1) 20.12  version create a table\r\n```\r\n CREATE TABLE gdm_m07_cps_batch_limit_cate_da_local\r\n(\r\n    `consume_lim` Nullable(String),\r\n    `item_second_cate_cd` Nullable(String),\r\n    `item_third_cate_cd` Nullable(String),\r\n    `present_id` Nullable(String),\r\n    `limit_rule_type_cd` Nullable(String),\r\n    `cate_valid_flag` Nullable(String),\r\n    `batch_id` String,\r\n    `item_third_cate_name` Nullable(String),\r\n    `item_first_cate_name` Nullable(String),\r\n    `cps_face_value` Nullable(String),\r\n    `item_second_cate_name` Nullable(String),\r\n    `activity_key` Nullable(String),\r\n    `activity_applicant_erp_acct` Nullable(String),\r\n    `create_tm` String,\r\n    `cate_use_rule_cd` Nullable(String),\r\n    `item_first_cate_cd` Nullable(String),\r\n    `cps_cate_cd` Nullable(String),\r\n    `cps_name` Nullable(String)\r\n)\r\nENGINE = ReplicatedReplacingMergeTree('/clickhouse/LOCAL_CK_TS_01/jdob_ha/default/{shard}/gdm_m07_cps_batch_limit_cate_da', '{replica}')\r\nPARTITION BY toYYYYMMDD(toDateTime(substr(create_tm, 1, 19)))\r\nORDER BY (batch_id, coalesce(item_first_cate_cd, ''), coalesce(item_second_cate_cd, ''), coalesce(item_third_cate_cd, ''))\r\nTTL toDateTime(substr(create_tm, 1, 19)) + toIntervalDay(30)\r\nSETTINGS index_granularity = 8192\r\n```\r\n(2) upgrade version 21.3，add a new replica，create the table above\r\n```\r\nCode: 342. DB::Exception: Received from localhost:9000. DB::Exception: Existing table metadata in ZooKeeper differs in partition key expression. Stored in ZooKeeper: toYYYYMMDD(toDateTime(substr(create_tm, 1, 19))), local: toYYYYMMDD(toDateTime(substring(create_tm, 1, 19))). \r\n```\r\n![image](https://user-images.githubusercontent.com/20608540/150714701-2ddc641a-fb14-49f1-840e-3c69d0081c37.png)\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33932/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33932/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33931","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33931/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33931/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33931/events","html_url":"https://github.com/ClickHouse/ClickHouse/pull/33931","id":1112096583,"node_id":"PR_kwDOA5dJV84xd6Wt","number":33931,"title":"fix: wrong documentation toc title","user":{"login":"arjenzhou","id":23600703,"node_id":"MDQ6VXNlcjIzNjAwNzAz","avatar_url":"https://avatars.githubusercontent.com/u/23600703?v=4","gravatar_id":"","url":"https://api.github.com/users/arjenzhou","html_url":"https://github.com/arjenzhou","followers_url":"https://api.github.com/users/arjenzhou/followers","following_url":"https://api.github.com/users/arjenzhou/following{/other_user}","gists_url":"https://api.github.com/users/arjenzhou/gists{/gist_id}","starred_url":"https://api.github.com/users/arjenzhou/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/arjenzhou/subscriptions","organizations_url":"https://api.github.com/users/arjenzhou/orgs","repos_url":"https://api.github.com/users/arjenzhou/repos","events_url":"https://api.github.com/users/arjenzhou/events{/privacy}","received_events_url":"https://api.github.com/users/arjenzhou/received_events","type":"User","site_admin":false},"labels":[{"id":1310920248,"node_id":"MDU6TGFiZWwxMzEwOTIwMjQ4","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/pr-documentation","name":"pr-documentation","color":"007700","default":false,"description":"Documentation PRs for the specific code PR"},{"id":3627025164,"node_id":"LA_kwDOA5dJV87YMAMM","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/can%20be%20tested","name":"can be tested","color":"1d76db","default":false,"description":""}],"state":"open","locked":false,"assignee":{"login":"qoega","id":2159081,"node_id":"MDQ6VXNlcjIxNTkwODE=","avatar_url":"https://avatars.githubusercontent.com/u/2159081?v=4","gravatar_id":"","url":"https://api.github.com/users/qoega","html_url":"https://github.com/qoega","followers_url":"https://api.github.com/users/qoega/followers","following_url":"https://api.github.com/users/qoega/following{/other_user}","gists_url":"https://api.github.com/users/qoega/gists{/gist_id}","starred_url":"https://api.github.com/users/qoega/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/qoega/subscriptions","organizations_url":"https://api.github.com/users/qoega/orgs","repos_url":"https://api.github.com/users/qoega/repos","events_url":"https://api.github.com/users/qoega/events{/privacy}","received_events_url":"https://api.github.com/users/qoega/received_events","type":"User","site_admin":false},"assignees":[{"login":"qoega","id":2159081,"node_id":"MDQ6VXNlcjIxNTkwODE=","avatar_url":"https://avatars.githubusercontent.com/u/2159081?v=4","gravatar_id":"","url":"https://api.github.com/users/qoega","html_url":"https://github.com/qoega","followers_url":"https://api.github.com/users/qoega/followers","following_url":"https://api.github.com/users/qoega/following{/other_user}","gists_url":"https://api.github.com/users/qoega/gists{/gist_id}","starred_url":"https://api.github.com/users/qoega/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/qoega/subscriptions","organizations_url":"https://api.github.com/users/qoega/orgs","repos_url":"https://api.github.com/users/qoega/repos","events_url":"https://api.github.com/users/qoega/events{/privacy}","received_events_url":"https://api.github.com/users/qoega/received_events","type":"User","site_admin":false}],"milestone":null,"comments":5,"created_at":"2022-01-24T02:34:34Z","updated_at":"2022-01-27T16:34:48Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/pulls/33931","html_url":"https://github.com/ClickHouse/ClickHouse/pull/33931","diff_url":"https://github.com/ClickHouse/ClickHouse/pull/33931.diff","patch_url":"https://github.com/ClickHouse/ClickHouse/pull/33931.patch","merged_at":null},"body":"Changelog category (leave one):\r\n- Documentation (changelog entry is not required)\r\n\r\n\r\nChangelog entry (a user-readable short description of the changes that goes to CHANGELOG.md):\r\n\r\nfix wrong documentation in `ALTER` toc title. \r\n\r\n\r\n> Information about CI checks: https://clickhouse.tech/docs/en/development/continuous-integration/\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33931/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33931/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33919","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33919/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33919/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33919/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33919","id":1111704340,"node_id":"I_kwDOA5dJV85CQ0MU","number":33919,"title":"Refreshable Materialized Views","user":{"login":"alexey-milovidov","id":18581488,"node_id":"MDQ6VXNlcjE4NTgxNDg4","avatar_url":"https://avatars.githubusercontent.com/u/18581488?v=4","gravatar_id":"","url":"https://api.github.com/users/alexey-milovidov","html_url":"https://github.com/alexey-milovidov","followers_url":"https://api.github.com/users/alexey-milovidov/followers","following_url":"https://api.github.com/users/alexey-milovidov/following{/other_user}","gists_url":"https://api.github.com/users/alexey-milovidov/gists{/gist_id}","starred_url":"https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexey-milovidov/subscriptions","organizations_url":"https://api.github.com/users/alexey-milovidov/orgs","repos_url":"https://api.github.com/users/alexey-milovidov/repos","events_url":"https://api.github.com/users/alexey-milovidov/events{/privacy}","received_events_url":"https://api.github.com/users/alexey-milovidov/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null}],"state":"open","locked":false,"assignee":{"login":"kitaisreal","id":22458333,"node_id":"MDQ6VXNlcjIyNDU4MzMz","avatar_url":"https://avatars.githubusercontent.com/u/22458333?v=4","gravatar_id":"","url":"https://api.github.com/users/kitaisreal","html_url":"https://github.com/kitaisreal","followers_url":"https://api.github.com/users/kitaisreal/followers","following_url":"https://api.github.com/users/kitaisreal/following{/other_user}","gists_url":"https://api.github.com/users/kitaisreal/gists{/gist_id}","starred_url":"https://api.github.com/users/kitaisreal/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kitaisreal/subscriptions","organizations_url":"https://api.github.com/users/kitaisreal/orgs","repos_url":"https://api.github.com/users/kitaisreal/repos","events_url":"https://api.github.com/users/kitaisreal/events{/privacy}","received_events_url":"https://api.github.com/users/kitaisreal/received_events","type":"User","site_admin":false},"assignees":[{"login":"kitaisreal","id":22458333,"node_id":"MDQ6VXNlcjIyNDU4MzMz","avatar_url":"https://avatars.githubusercontent.com/u/22458333?v=4","gravatar_id":"","url":"https://api.github.com/users/kitaisreal","html_url":"https://github.com/kitaisreal","followers_url":"https://api.github.com/users/kitaisreal/followers","following_url":"https://api.github.com/users/kitaisreal/following{/other_user}","gists_url":"https://api.github.com/users/kitaisreal/gists{/gist_id}","starred_url":"https://api.github.com/users/kitaisreal/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kitaisreal/subscriptions","organizations_url":"https://api.github.com/users/kitaisreal/orgs","repos_url":"https://api.github.com/users/kitaisreal/repos","events_url":"https://api.github.com/users/kitaisreal/events{/privacy}","received_events_url":"https://api.github.com/users/kitaisreal/received_events","type":"User","site_admin":false}],"milestone":null,"comments":2,"created_at":"2022-01-22T22:21:52Z","updated_at":"2022-01-25T10:00:02Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"**Use Case**\r\n\r\nAutomate periodic imports of data into ClickHouse. Automate batch jobs for data transformation.\r\n\r\n\r\n**Requirements**\r\n\r\nIt should run a query with some schedule and atomically replace a table with the result.\r\n\r\nSchedule can be aligned to calendar like \"3 AM every Thursday\" or not aligned like \"30 seconds after previous import has been finished\".\r\n\r\nIt can contain some concurrency limits like \"don't do more than 5 jobs of this type concurrently\". Limits should work within named \"concurrency group\". The job also can have numeric priority to control what to run first when resources are available.\r\n\r\nIf it was not possible to run the job due to concurrency limits or if server was not up, the setting should control if it needs to run as soon as possible or skip to the next update time if more than some ratio of time before next update already passed.\r\n\r\nThe settings for randomization to avoid DoS of the sources like \"spread the next update time around three minutes\".\r\n\r\nError recovery: do up to N retries with some initial timeout and exponential backoff saturated up to another timeout.\r\n\r\nChaining and dependencies between the jobs: run a job only after other specified jobs are finished.\r\n\r\nSystem table for introspection of these jobs and system commands to temporary stop scheduling, or stop or pause already running job, or run the job out of order.\r\n\r\nIt should be possible to run clickhouse-server with all the jobs disabled before manual command.\r\n\r\n\r\n**Out of scope**\r\n\r\nIncremental data import into partitions by time. Batch jobs with multiple queries.\r\nWe can think how to extend this mechanism to something like \"every day do import and replace partitions for three previous days\".\r\n\r\nCoordination of jobs in a cluster. (Should be easily extended with schedule in Keeper).\r\n\r\nBacking up old tables after refresh (e.g. store N backups in renamed tables), can be easily implemented.\r\n\r\n\r\n**Proposed solution**\r\n\r\n```\r\nCREATE MATERIALIZED VIEW name\r\n\r\nREFRESH \r\n\r\n    EVERY 1 WEEK /* on Mondays */\r\n    | EVERY 1 WEEK OFFSET 2 DAY 3 HOUR /* Wednedsday 3 AM */\r\n    | EVERY 30 SECOND /* on 00 and 30 second every minute */\r\n    | AFTER 30 SECOND /* unaligned, 30 seconds after previous update has been finished */\r\n    \r\n    RANDOMIZE FOR 3 MINUTE /* spread uniformly random plus minus 1.5 minutes */\r\n    \r\nDEPENDS ON other_view1, other_view2...  /* run after subsequent finish of these views, only for AFTER */\r\n    \r\nSETTINGS /* fine settings for a refresh process */\r\n    max_concurrency = 3,\r\n    concurrency_group = 'import_from_mysql',\r\n    priority = 1,\r\n    max_retries = 5,\r\n    backoff_min_timeout = 10,\r\n    backoff_max_timeout = 600,\r\n    backoff_exponent = 2,\r\n    skip_update_after_seconds = 1000,\r\n    skip_update_after_ratio = 0.5\r\n\r\nENGINE = /* how to store data */\r\n\r\nAS SELECT /* what query to run, possibly including the SETTINGS for the query */\r\n```\r\n\r\n```\r\nSELECT * FROM system.view_refreshes;\r\nSYSTEM REFRESH VIEW name;    /* ask for refresh out of schedule */\r\nSYSTEM STOP|START VIEW name; /* do not run this view on schedule */\r\nSYSTEM CANCEL|PAUSE|START VIEW name; /* for currently running job */\r\n```\r\n\r\nALTER, DROP, RENAME, DETACH, ATTACH work trivially for these views.\r\nALTER is similar to CREATE and simply changes everything (the underlying table itself will be replaced on next update).\r\n\r\nThe underlying table has the same name as the view (the view and its data are represented with the same name in the database).\r\n\r\n**Additional context**\r\n\r\nWith the help of Atomic databases, table replace is lock-free.\r\n\r\nRefreshable materialized views will simplify managing some dictionaries. For example, we can create a view to import data from MySQL to EmbeddedRocksDB table and then create a `direct` dictionary on top of this table.\r\n\r\nNote: this task is not hard to implement, but it contains many minor details and gotchas.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33919/reactions","total_count":10,"+1":5,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":4,"rocket":0,"eyes":1},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33919/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33917","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33917/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33917/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33917/events","html_url":"https://github.com/ClickHouse/ClickHouse/pull/33917","id":1111668127,"node_id":"PR_kwDOA5dJV84xco-c","number":33917,"title":"Support multiple columns as primary key in StorageEmbeddedRocksDB","user":{"login":"usurai","id":9886192,"node_id":"MDQ6VXNlcjk4ODYxOTI=","avatar_url":"https://avatars.githubusercontent.com/u/9886192?v=4","gravatar_id":"","url":"https://api.github.com/users/usurai","html_url":"https://github.com/usurai","followers_url":"https://api.github.com/users/usurai/followers","following_url":"https://api.github.com/users/usurai/following{/other_user}","gists_url":"https://api.github.com/users/usurai/gists{/gist_id}","starred_url":"https://api.github.com/users/usurai/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/usurai/subscriptions","organizations_url":"https://api.github.com/users/usurai/orgs","repos_url":"https://api.github.com/users/usurai/repos","events_url":"https://api.github.com/users/usurai/events{/privacy}","received_events_url":"https://api.github.com/users/usurai/received_events","type":"User","site_admin":false},"labels":[{"id":1304141686,"node_id":"MDU6TGFiZWwxMzA0MTQxNjg2","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/pr-improvement","name":"pr-improvement","color":"007700","default":false,"description":"Pull request with some product improvements"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2022-01-22T19:39:21Z","updated_at":"2022-01-25T12:20:09Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/pulls/33917","html_url":"https://github.com/ClickHouse/ClickHouse/pull/33917","diff_url":"https://github.com/ClickHouse/ClickHouse/pull/33917.diff","patch_url":"https://github.com/ClickHouse/ClickHouse/pull/33917.patch","merged_at":null},"body":"Changelog category (leave one):\r\n- Improvement\r\n\r\n\r\nChangelog entry (a user-readable short description of the changes that goes to CHANGELOG.md):\r\nSupport multiple columns as primary key in StorageEmbeddedRocksDB. closes [#32819](https://github.com/ClickHouse/ClickHouse/issues/32819)\r\n\r\nDetailed description / Documentation draft:\r\nFor `write`, the primary key columns are serialized in order to be the key in RocksDB.\r\nFor `read`, if `WHERE` clause specifies all the primary key columns with `AND`, `EmbeddedRocksDBSource` will `get` from RocksDB by the specified keys. Otherwise, it will iterate through the whole database.\r\n\r\nKey tuples specified by a `WHERE` clause are represented by `KeyFieldVectors`, which is in fact a vector of `FieldVectorPtr`, with each `FieldVector` representing the possible value of a primary key column. For example, \r\n`WHERE key_a IN (1, 2, 3) AND key_b IN (SELECT number FROM numbers(5)`\r\nis represented as `[[1, 2, 3], [1, 2, 3, 4, 5]]`. `EmbeddedRocksDBSource` iterates through `KeyFieldVectors` to generate primary key tuples on the fly in `generate()`. This deduces memory consumption when key tuple number is large.\r\nEach `KeyFieldVectors` can only represents part of key tuples when there is `OR` in `WHERE` clause. `KeyTupleSets`, which is vector of `KeyFieldVectors`, is used to represents all the conditions if there is `OR`. For example,\r\n`WHERE (key_a = 1 AND key_b = 2) OR (key_a = 3 AND key_b = 3)`\r\nis represented by `KeyTupleSets` which is [ [[1], [2]], [[3], [3]] ].\r\n`KeyFieldVectors`s in `KeyTupleSets` are de-duplicated before passing to `EmbeddedRocksDBSource`, this prevent duplicated tuple between clauses. For example, in\r\n`WHERE (key_a IN (1,2) AND key_b IN (3,4,5) AND key_c IN (5,6)) OR (key_a IN (2,3) AND key_b IN (2,3,4) AND key_c IN (6,7))`\r\nboth clauses contain [2, 3, 6] and [2, 4, 6], the de-duplication process will split one of the `KeyFieldVectors` to exclude duplicated tuples.\r\n\r\nDiscussion:\r\nAs we don't know if the key tuple exists in database until actually `get` from RocksDB, it's dangerous to blindly iterate all the possible key tuples if the key space is large, e.g., `WHERE key_a IN (SELECT number FROM numbers(100000)) AND key_b IN (SELECT number FROM numbers(100000))`. What I do here is comparing the number of key tuple with the row number of database before `get`, if it's larger that the row number of database, fall back to `all_scan`. I wonder if there is better solution on this.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33917/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33917/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33915","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33915/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33915/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33915/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33915","id":1111643549,"node_id":"I_kwDOA5dJV85CQlWd","number":33915,"title":"Understanding Explain Plan","user":{"login":"yuval-boker","id":97388509,"node_id":"U_kgDOBc4H3Q","avatar_url":"https://avatars.githubusercontent.com/u/97388509?v=4","gravatar_id":"","url":"https://api.github.com/users/yuval-boker","html_url":"https://github.com/yuval-boker","followers_url":"https://api.github.com/users/yuval-boker/followers","following_url":"https://api.github.com/users/yuval-boker/following{/other_user}","gists_url":"https://api.github.com/users/yuval-boker/gists{/gist_id}","starred_url":"https://api.github.com/users/yuval-boker/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yuval-boker/subscriptions","organizations_url":"https://api.github.com/users/yuval-boker/orgs","repos_url":"https://api.github.com/users/yuval-boker/repos","events_url":"https://api.github.com/users/yuval-boker/events{/privacy}","received_events_url":"https://api.github.com/users/yuval-boker/received_events","type":"User","site_admin":false},"labels":[{"id":386401510,"node_id":"MDU6TGFiZWwzODY0MDE1MTA=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/question","name":"question","color":"bfdadc","default":true,"description":""},{"id":3761121284,"node_id":"LA_kwDOA5dJV87gLigE","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/support-services","name":"support-services","color":"1A70E6","default":false,"description":""}],"state":"open","locked":false,"assignee":{"login":"tom-clickhouse","id":97666923,"node_id":"U_kgDOBdJHaw","avatar_url":"https://avatars.githubusercontent.com/u/97666923?v=4","gravatar_id":"","url":"https://api.github.com/users/tom-clickhouse","html_url":"https://github.com/tom-clickhouse","followers_url":"https://api.github.com/users/tom-clickhouse/followers","following_url":"https://api.github.com/users/tom-clickhouse/following{/other_user}","gists_url":"https://api.github.com/users/tom-clickhouse/gists{/gist_id}","starred_url":"https://api.github.com/users/tom-clickhouse/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tom-clickhouse/subscriptions","organizations_url":"https://api.github.com/users/tom-clickhouse/orgs","repos_url":"https://api.github.com/users/tom-clickhouse/repos","events_url":"https://api.github.com/users/tom-clickhouse/events{/privacy}","received_events_url":"https://api.github.com/users/tom-clickhouse/received_events","type":"User","site_admin":false},"assignees":[{"login":"tom-clickhouse","id":97666923,"node_id":"U_kgDOBdJHaw","avatar_url":"https://avatars.githubusercontent.com/u/97666923?v=4","gravatar_id":"","url":"https://api.github.com/users/tom-clickhouse","html_url":"https://github.com/tom-clickhouse","followers_url":"https://api.github.com/users/tom-clickhouse/followers","following_url":"https://api.github.com/users/tom-clickhouse/following{/other_user}","gists_url":"https://api.github.com/users/tom-clickhouse/gists{/gist_id}","starred_url":"https://api.github.com/users/tom-clickhouse/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tom-clickhouse/subscriptions","organizations_url":"https://api.github.com/users/tom-clickhouse/orgs","repos_url":"https://api.github.com/users/tom-clickhouse/repos","events_url":"https://api.github.com/users/tom-clickhouse/events{/privacy}","received_events_url":"https://api.github.com/users/tom-clickhouse/received_events","type":"User","site_admin":false}],"milestone":null,"comments":0,"created_at":"2022-01-22T18:06:49Z","updated_at":"2022-01-24T16:19:03Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"What is the difference between the following:\r\n\r\n**Expression (( + (Projection + Before ORDER BY)))**  \r\n**Expression ((Projection + Before ORDER BY))**\r\n\r\nFor one of my queries I replaced the literal 0 with an alias to this literal, that is:\r\n**select 0 from (select 0 as x)** instead of **select x from (select 0 as x);** and it slowed the query by a factor of two! (4 sec instead of 2)\r\nI checked the query plan and the only thing changed is that **Expression (( + (Projection + Before ORDER BY)))**  became **Expression ((Projection + Before ORDER BY))**. \r\n\r\nI though exactly the obvious would happen, that using a literal would be faster than using an alias to that literal.\r\nAny thoughts?","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33915/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33915/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33910","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33910/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33910/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33910/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33910","id":1111576660,"node_id":"I_kwDOA5dJV85CQVBU","number":33910,"title":"UUIDs in Native and *Binary formats","user":{"login":"cyanide-burnout","id":2530126,"node_id":"MDQ6VXNlcjI1MzAxMjY=","avatar_url":"https://avatars.githubusercontent.com/u/2530126?v=4","gravatar_id":"","url":"https://api.github.com/users/cyanide-burnout","html_url":"https://github.com/cyanide-burnout","followers_url":"https://api.github.com/users/cyanide-burnout/followers","following_url":"https://api.github.com/users/cyanide-burnout/following{/other_user}","gists_url":"https://api.github.com/users/cyanide-burnout/gists{/gist_id}","starred_url":"https://api.github.com/users/cyanide-burnout/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cyanide-burnout/subscriptions","organizations_url":"https://api.github.com/users/cyanide-burnout/orgs","repos_url":"https://api.github.com/users/cyanide-burnout/repos","events_url":"https://api.github.com/users/cyanide-burnout/events{/privacy}","received_events_url":"https://api.github.com/users/cyanide-burnout/received_events","type":"User","site_admin":false},"labels":[{"id":785082162,"node_id":"MDU6TGFiZWw3ODUwODIxNjI=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-documentation","name":"comp-documentation","color":"b5bcff","default":false,"description":"Used to run automatic builds of the documentation"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-01-22T14:12:10Z","updated_at":"2022-01-22T14:15:48Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"We have found a lack that the format of UUIDs is not defined in documentation for Native and *Binary formats.\r\nBy default it is expected that it uses normal network byte order but in fact a client has to spilt UUID in network byte order into two Uint64 words and then reverse byte order of each part.\r\nI am not specifically writing \"little endian\" because the described operation works in both directions.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33910/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33910/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33909","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33909/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33909/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33909/events","html_url":"https://github.com/ClickHouse/ClickHouse/pull/33909","id":1111539326,"node_id":"PR_kwDOA5dJV84xcO69","number":33909,"title":"Update ansi.md","user":{"login":"Tiaonmmn","id":17075857,"node_id":"MDQ6VXNlcjE3MDc1ODU3","avatar_url":"https://avatars.githubusercontent.com/u/17075857?v=4","gravatar_id":"","url":"https://api.github.com/users/Tiaonmmn","html_url":"https://github.com/Tiaonmmn","followers_url":"https://api.github.com/users/Tiaonmmn/followers","following_url":"https://api.github.com/users/Tiaonmmn/following{/other_user}","gists_url":"https://api.github.com/users/Tiaonmmn/gists{/gist_id}","starred_url":"https://api.github.com/users/Tiaonmmn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Tiaonmmn/subscriptions","organizations_url":"https://api.github.com/users/Tiaonmmn/orgs","repos_url":"https://api.github.com/users/Tiaonmmn/repos","events_url":"https://api.github.com/users/Tiaonmmn/events{/privacy}","received_events_url":"https://api.github.com/users/Tiaonmmn/received_events","type":"User","site_admin":false},"labels":[{"id":1310920248,"node_id":"MDU6TGFiZWwxMzEwOTIwMjQ4","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/pr-documentation","name":"pr-documentation","color":"007700","default":false,"description":"Documentation PRs for the specific code PR"},{"id":3627025164,"node_id":"LA_kwDOA5dJV87YMAMM","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/can%20be%20tested","name":"can be tested","color":"1d76db","default":false,"description":""}],"state":"open","locked":false,"assignee":{"login":"evillique","id":43110995,"node_id":"MDQ6VXNlcjQzMTEwOTk1","avatar_url":"https://avatars.githubusercontent.com/u/43110995?v=4","gravatar_id":"","url":"https://api.github.com/users/evillique","html_url":"https://github.com/evillique","followers_url":"https://api.github.com/users/evillique/followers","following_url":"https://api.github.com/users/evillique/following{/other_user}","gists_url":"https://api.github.com/users/evillique/gists{/gist_id}","starred_url":"https://api.github.com/users/evillique/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/evillique/subscriptions","organizations_url":"https://api.github.com/users/evillique/orgs","repos_url":"https://api.github.com/users/evillique/repos","events_url":"https://api.github.com/users/evillique/events{/privacy}","received_events_url":"https://api.github.com/users/evillique/received_events","type":"User","site_admin":false},"assignees":[{"login":"evillique","id":43110995,"node_id":"MDQ6VXNlcjQzMTEwOTk1","avatar_url":"https://avatars.githubusercontent.com/u/43110995?v=4","gravatar_id":"","url":"https://api.github.com/users/evillique","html_url":"https://github.com/evillique","followers_url":"https://api.github.com/users/evillique/followers","following_url":"https://api.github.com/users/evillique/following{/other_user}","gists_url":"https://api.github.com/users/evillique/gists{/gist_id}","starred_url":"https://api.github.com/users/evillique/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/evillique/subscriptions","organizations_url":"https://api.github.com/users/evillique/orgs","repos_url":"https://api.github.com/users/evillique/repos","events_url":"https://api.github.com/users/evillique/events{/privacy}","received_events_url":"https://api.github.com/users/evillique/received_events","type":"User","site_admin":false}],"milestone":null,"comments":2,"created_at":"2022-01-22T12:54:49Z","updated_at":"2022-01-25T10:25:01Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/pulls/33909","html_url":"https://github.com/ClickHouse/ClickHouse/pull/33909","diff_url":"https://github.com/ClickHouse/ClickHouse/pull/33909.diff","patch_url":"https://github.com/ClickHouse/ClickHouse/pull/33909.patch","merged_at":null},"body":"Changelog category (leave one):\r\n- Documentation (changelog entry is not required)\r\n\r\n\r\nChangelog entry (a user-readable short description of the changes that goes to CHANGELOG.md):\r\nUpdate Simplified Chinese translation of ansi.md\r\n\r\n\r\n> Information about CI checks: https://clickhouse.tech/docs/en/development/continuous-integration/\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33909/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33909/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33906","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33906/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33906/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33906/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33906","id":1111382872,"node_id":"I_kwDOA5dJV85CPltY","number":33906,"title":"Integer from VALUES cannot be parsed as Decimal256","user":{"login":"alexey-milovidov","id":18581488,"node_id":"MDQ6VXNlcjE4NTgxNDg4","avatar_url":"https://avatars.githubusercontent.com/u/18581488?v=4","gravatar_id":"","url":"https://api.github.com/users/alexey-milovidov","html_url":"https://github.com/alexey-milovidov","followers_url":"https://api.github.com/users/alexey-milovidov/followers","following_url":"https://api.github.com/users/alexey-milovidov/following{/other_user}","gists_url":"https://api.github.com/users/alexey-milovidov/gists{/gist_id}","starred_url":"https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexey-milovidov/subscriptions","organizations_url":"https://api.github.com/users/alexey-milovidov/orgs","repos_url":"https://api.github.com/users/alexey-milovidov/repos","events_url":"https://api.github.com/users/alexey-milovidov/events{/privacy}","received_events_url":"https://api.github.com/users/alexey-milovidov/received_events","type":"User","site_admin":false},"labels":[{"id":1575085465,"node_id":"MDU6TGFiZWwxNTc1MDg1NDY1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/unexpected%20behaviour","name":"unexpected behaviour","color":"e088ca","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-01-22T09:31:13Z","updated_at":"2022-01-22T09:31:13Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"`SELECT * FROM values('x Decimal256(0)', (1))`\r\n\r\n```\r\nCode: 53. DB::Exception: Type mismatch in IN or VALUES section. Expected: Decimal(76, 0). Got: UInt64. (TYPE_MISMATCH)\r\n```","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33906/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33906/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33904","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33904/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33904/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33904/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33904","id":1111295048,"node_id":"I_kwDOA5dJV85CPQRI","number":33904,"title":"[Cloud Native Feature] make one node run multi-shards","user":{"login":"LiuYangkuan","id":17986439,"node_id":"MDQ6VXNlcjE3OTg2NDM5","avatar_url":"https://avatars.githubusercontent.com/u/17986439?v=4","gravatar_id":"","url":"https://api.github.com/users/LiuYangkuan","html_url":"https://github.com/LiuYangkuan","followers_url":"https://api.github.com/users/LiuYangkuan/followers","following_url":"https://api.github.com/users/LiuYangkuan/following{/other_user}","gists_url":"https://api.github.com/users/LiuYangkuan/gists{/gist_id}","starred_url":"https://api.github.com/users/LiuYangkuan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/LiuYangkuan/subscriptions","organizations_url":"https://api.github.com/users/LiuYangkuan/orgs","repos_url":"https://api.github.com/users/LiuYangkuan/repos","events_url":"https://api.github.com/users/LiuYangkuan/events{/privacy}","received_events_url":"https://api.github.com/users/LiuYangkuan/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2022-01-22T06:30:35Z","updated_at":"2022-01-22T12:13:12Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"**Use case**\r\n> A clear and concise description of what is the intended usage scenario is.\r\n\r\nAfter separation of storage and compute, It will be very convenient to scale out and add nodes into cluster without data move.\r\nBut there is still an issue that dataset should be split and re-shard because size of data shards is less than compute node size.\r\n\r\n**Describe the solution you'd like**\r\n> A clear and concise description of what you want to happen.\r\n\r\nIf we can make one node run multi-shards, there is no need to split dataset in most cases. For example, If one node runs four shards, we can scale out four times nodes without dataset spliting.\r\n\r\n\r\n**Describe alternatives you've considered**\r\n> A clear and concise description of any alternative solutions or features you've considered.\r\n\r\nA cluster shard is made of (or identified by) host_address, port and default_database. We can use multi `ReplicatedDatabases` with different database name as default_database in a compute node. So we can setup a special cluster which contains compute nodes run multi-shards.\r\n\r\n**Additional context**\r\n> Add any other context or screenshots about the feature request here.\r\n\r\nWe can create a new entity whose kind is `CLUSTER`\r\n```CREATE CLUSTER cluster_name SETTINGS('/clickhouse/zookeeper-path', 'share storage config', shard_size=16)```\r\n\r\nAfter above statement, a ZK-node will be created, whose children contain `ReplicatedDatabase` metadata node and cluster discovery node, etc.\r\nWe can use this PR [#31442](https://github.com/ClickHouse/ClickHouse/pull/31442) idea to generate a dynamic `special cluster` map config\r\n\r\nSupposing we have four compute nodes, and make a normal cluster `default`\r\n\r\n```CREATE DATABASE cloud_db ON CLUSTER default ENGINE = Cloud('/clickhouse/zookeeper-path')```\r\n\r\nHere we import a new database engine `Cloud`, it will register node itself into Cluster through zookeeper-path and join leader election.\r\nOnly one leader can play the role of shard assignment and rebalance when failover.\r\n\r\nAfter shard assignment, every compute node receives multi-shards such as shard4/shard5/shard6/shard7, then the `Cloud` database engine will create four internal databases which engine is `ReplicatedDatabase` and named shard4, shard5, shard6, shard7. All tables created in these databases will use the share storage config and storage_policies from zookeeper.\r\n\r\nUsers work in cloud_db, create MergeTree family tables adding sharding_key as settings, the `Cloud` database will create `Distributed` table additionally in `ReplicatedDatabase`, for example Distributed(cluster, '', table, sharding_key), make database empty and use default_database in cluster for each shard.  And only load or show `Distributed` tables from metadata in zookeeper path.\r\nLocal table and distributed table always make user confused. Cloud database only show logical table that may be more user-friendly.\r\n\r\nAfter all compute nodes register and finish shard assignment, all shards are ready and the `special cluster` can work.\r\nIf the speed of failover is fast enough, the Replicated*MergeTree is not recommended, because share storage make data service high available.\r\n\r\nA high performance and transactional data part service will better in `Cloud Native Warehouse`\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33904/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33904/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33900","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33900/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33900/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33900/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33900","id":1111208284,"node_id":"I_kwDOA5dJV85CO7Fc","number":33900,"title":"same select on distributed table takes different time,  80x slower","user":{"login":"wzisheng","id":87692633,"node_id":"MDQ6VXNlcjg3NjkyNjMz","avatar_url":"https://avatars.githubusercontent.com/u/87692633?v=4","gravatar_id":"","url":"https://api.github.com/users/wzisheng","html_url":"https://github.com/wzisheng","followers_url":"https://api.github.com/users/wzisheng/followers","following_url":"https://api.github.com/users/wzisheng/following{/other_user}","gists_url":"https://api.github.com/users/wzisheng/gists{/gist_id}","starred_url":"https://api.github.com/users/wzisheng/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wzisheng/subscriptions","organizations_url":"https://api.github.com/users/wzisheng/orgs","repos_url":"https://api.github.com/users/wzisheng/repos","events_url":"https://api.github.com/users/wzisheng/events{/privacy}","received_events_url":"https://api.github.com/users/wzisheng/received_events","type":"User","site_admin":false},"labels":[{"id":1575085465,"node_id":"MDU6TGFiZWwxNTc1MDg1NDY1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/unexpected%20behaviour","name":"unexpected behaviour","color":"e088ca","default":false,"description":""},{"id":1669010018,"node_id":"MDU6TGFiZWwxNjY5MDEwMDE4","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/question-answered","name":"question-answered","color":"bfdadc","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2022-01-22T03:15:15Z","updated_at":"2022-01-25T22:20:43Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"v21.3\r\nHi，I have a simple select on distributed table like \r\n\r\n> select * from distributed_table where 'expr' limit 10\r\n\r\none will be end in ms level \r\n\r\n> 17:07:12.137298 [ 5911 ] <Debug> InterpreterSelectQuery: MergeTreeWhereOptimizer: condition \"(xxx = '2022-01-19') AND (xxx = 'xxx') AND (timestamps >= xxx) AND (timestamps <= xxx)\" moved to PREWHERE\r\n17:07:12.138717 [ 5911 ] <Trace> ContextAccess (default): Access granted: xxx\r\n17:07:12.139227 [ 5911 ] <Debug> default.table_test (889c1c33-c0f9-43b6-ba77-4a88119470ec) (SelectExecutor): Key condition: unknown, (column 1 in ['xxx', 'xxx']), and, unknown, and, unknown, and, (column 0 in [1, 1]), and, unknown, (column 1 in ['xxx', 'xxx']), and, unknown, and, unknown, and, and\r\n17:07:12.139241 [ 5911 ] <Debug> default.table_test (889c1c33-c0f9-43b6-ba77-4a88119470ec) (SelectExecutor): MinMax index condition: (column 0 in [19011, 19011]), unknown, and, unknown, and, unknown, and, unknown, and, (column 0 in [19011, 19011]), unknown, and, unknown, and, unknown, and, and\r\n17:07:12.139584 [ 5911 ] <Trace> default.table_test (889c1c33-c0f9-43b6-ba77-4a88119470ec) (SelectExecutor): Running binary search on index range for part 20220119_0_6744_5 (236818 marks)\r\n17:07:12.139609 [ 5911 ] <Trace> default.table_test (889c1c33-c0f9-43b6-ba77-4a88119470ec) (SelectExecutor): Found (LEFT) boundary mark: 0\r\n17:07:12.139632 [ 5911 ] <Trace> default.table_test (889c1c33-c0f9-43b6-ba77-4a88119470ec) (SelectExecutor): Found (RIGHT) boundary mark: 2671\r\n17:07:12.139637 [ 5911 ] <Trace> default.table_test (889c1c33-c0f9-43b6-ba77-4a88119470ec) (SelectExecutor): Found continuous range in 35 steps\r\n17:07:12.143257 [ 5911 ] <Debug> default.table_test (889c1c33-c0f9-43b6-ba77-4a88119470ec) (SelectExecutor): Index `c1_minmax_index` has dropped 0/891 granules.\r\n17:07:12.143269 [ 5911 ] <Debug> default.table_test (889c1c33-c0f9-43b6-ba77-4a88119470ec) (SelectExecutor): Index `test_minmax_index` has dropped 0/891 granules.\r\n17:07:12.143273 [ 5911 ] <Debug> default.table_test (889c1c33-c0f9-43b6-ba77-4a88119470ec) (SelectExecutor): Selected 1/34 parts by partition key, 1 parts by primary key, 2671/236818 marks by primary key, 2671 marks to read from 1 ranges\r\n17:07:12.143422 [ 5911 ] <Trace> default.table_test (889c1c33-c0f9-43b6-ba77-4a88119470ec) (SelectExecutor): Reading approx. 21880832 rows with 16 streams\r\n17:07:12.144269 [ 5911 ] <Trace> InterpreterSelectQuery: FetchColumns -> WithMergeableState\r\n17:07:12.144796 [ 5911 ] <Trace> InterpreterSelectQuery: WithMergeableState -> Complete\r\n17:07:12.173832 [ 31420 ] <Trace> StorageDistributed (table_test_all): (clickhousesgKY:9000) Cancelling query because enough data has been read\r\n17:07:12.180020 [ 11932 ] <Trace> StorageDistributed (table_test_all): (clickhousehost2:9000) Cancelling query because enough data has been read\r\n17:07:12.181963 [ 23398 ] <Trace> StorageDistributed (table_test_all): (clickhousehost4:9000) Cancelling query because enough data has been read\r\n17:07:12.188269 [ 5578 ] <Trace> StorageDistributed (table_test_all): (clickhousehost1:9000) Cancelling query because enough data has been read\r\n17:07:12.208702 [ 5911 ] <Information> executeQuery: **Read 131072 rows, 123.07 MiB in 0.074053698 sec., 1769958 rows/sec., 1.62 GiB/sec.**\r\n17:07:12.208745 [ 5911 ] <Debug> MemoryTracker: Peak memory usage (for query): 635.56 MiB.\r\n\r\nwhiele another ends in seconds level \r\n\r\n> 17:06:59.704876 [ 5911 ] <Debug> InterpreterSelectQuery: MergeTreeWhereOptimizer: condition \"(xxx = '2022-01-19') AND (xxx = 'xxx') AND (timestamps >= xxx) AND (timestamps <= xxx)\" moved to PREWHERE\r\n17:06:59.706266 [ 5911 ] <Trace> ContextAccess (default): Access granted: xxx\r\n17:06:59.706787 [ 5911 ] <Debug> default.table_test (889c1c33-c0f9-43b6-ba77-4a88119470ec) (SelectExecutor): Key condition: unknown, (column 1 in ['xxx', 'xxx']), and, unknown, and, unknown, and, (column 0 in [1, 1]), and, unknown, (column 1 in ['xxx', 'xxx']), and, unknown, and, unknown, and, and\r\n17:06:59.706814 [ 5911 ] <Debug> default.table_test (889c1c33-c0f9-43b6-ba77-4a88119470ec) (SelectExecutor): MinMax index condition: (column 0 in [19011, 19011]), unknown, and, unknown, and, unknown, and, unknown, and, (column 0 in [19011, 19011]), unknown, and, unknown, and, unknown, and, and\r\n17:06:59.707140 [ 5911 ] <Trace> default.table_test (889c1c33-c0f9-43b6-ba77-4a88119470ec) (SelectExecutor): Running binary search on index range for part 20220119_0_6744_5 (236818 marks)\r\n17:06:59.707170 [ 5911 ] <Trace> default.table_test (889c1c33-c0f9-43b6-ba77-4a88119470ec) (SelectExecutor): Found (LEFT) boundary mark: 0\r\n17:06:59.707192 [ 5911 ] <Trace> default.table_test (889c1c33-c0f9-43b6-ba77-4a88119470ec) (SelectExecutor): Found (RIGHT) boundary mark: 2671\r\n17:06:59.707198 [ 5911 ] <Trace> default.table_test (889c1c33-c0f9-43b6-ba77-4a88119470ec) (SelectExecutor): Found continuous range in 35 steps\r\n17:06:59.710851 [ 5911 ] <Debug> default.table_test (889c1c33-c0f9-43b6-ba77-4a88119470ec) (SelectExecutor): Index `c1_minmax_index` has dropped 0/891 granules.\r\n17:06:59.710863 [ 5911 ] <Debug> default.table_test (889c1c33-c0f9-43b6-ba77-4a88119470ec) (SelectExecutor): Index `test_minmax_index` has dropped 0/891 granules.\r\n17:06:59.710867 [ 5911 ] <Debug> default.table_test (889c1c33-c0f9-43b6-ba77-4a88119470ec) (SelectExecutor): Selected 1/44 parts by partition key, 1 parts by primary key, 2671/236818 marks by primary key, 2671 marks to read from 1 ranges\r\n17:06:59.711018 [ 5911 ] <Trace> default.table_test (889c1c33-c0f9-43b6-ba77-4a88119470ec) (SelectExecutor): Reading approx. 21880832 rows with 16 streams\r\n17:06:59.711895 [ 5911 ] <Trace> InterpreterSelectQuery: FetchColumns -> WithMergeableState\r\n17:06:59.712406 [ 5911 ] <Trace> InterpreterSelectQuery: WithMergeableState -> Complete\r\n17:06:59.748571 [ 3536 ] <Trace> StorageDistributed (table_test_all): (clickhousehost1:9000) Cancelling query because enough data has been read\r\n17:06:59.897405 [ 22032 ] <Trace> StorageDistributed (table_test_all): (clickhousehost2:9000) Cancelling query because enough data has been read\r\n17:06:59.920821 [ 31850 ] <Trace> StorageDistributed (table_test_all): (clickhousehost3:9000) Cancelling query because enough data has been read\r\n17:07:01.429952 [ 22032 ] <Trace> StorageDistributed (table_test_all): (clickhousehost4:9000) Cancelling query because enough data has been read\r\n17:07:06.158797 [ 5911 ] <Information> executeQuery: **Read 131072 rows, 123.07 MiB in 6.457007691 sec., 20299 rows/sec., 19.06 MiB/sec.**\r\n17:07:06.158845 [ 5911 ] <Debug> MemoryTracker: Peak memory usage (for query): 635.66 MiB.\r\n\r\nactually they both scan 131072 rows, seems the difference is only RemoteQueryExecutor schedule, do you have any idea for this? \r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33900/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33900/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33897","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33897/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33897/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33897/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33897","id":1111060585,"node_id":"I_kwDOA5dJV85COXBp","number":33897,"title":"Exception when comparing Array(Int64) and Array(UInt64)","user":{"login":"naylinn69","id":6289291,"node_id":"MDQ6VXNlcjYyODkyOTE=","avatar_url":"https://avatars.githubusercontent.com/u/6289291?v=4","gravatar_id":"","url":"https://api.github.com/users/naylinn69","html_url":"https://github.com/naylinn69","followers_url":"https://api.github.com/users/naylinn69/followers","following_url":"https://api.github.com/users/naylinn69/following{/other_user}","gists_url":"https://api.github.com/users/naylinn69/gists{/gist_id}","starred_url":"https://api.github.com/users/naylinn69/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/naylinn69/subscriptions","organizations_url":"https://api.github.com/users/naylinn69/orgs","repos_url":"https://api.github.com/users/naylinn69/repos","events_url":"https://api.github.com/users/naylinn69/events{/privacy}","received_events_url":"https://api.github.com/users/naylinn69/received_events","type":"User","site_admin":false},"labels":[{"id":386401507,"node_id":"MDU6TGFiZWwzODY0MDE1MDc=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/enhancement","name":"enhancement","color":"84b6eb","default":true,"description":null}],"state":"open","locked":false,"assignee":{"login":"kitaisreal","id":22458333,"node_id":"MDQ6VXNlcjIyNDU4MzMz","avatar_url":"https://avatars.githubusercontent.com/u/22458333?v=4","gravatar_id":"","url":"https://api.github.com/users/kitaisreal","html_url":"https://github.com/kitaisreal","followers_url":"https://api.github.com/users/kitaisreal/followers","following_url":"https://api.github.com/users/kitaisreal/following{/other_user}","gists_url":"https://api.github.com/users/kitaisreal/gists{/gist_id}","starred_url":"https://api.github.com/users/kitaisreal/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kitaisreal/subscriptions","organizations_url":"https://api.github.com/users/kitaisreal/orgs","repos_url":"https://api.github.com/users/kitaisreal/repos","events_url":"https://api.github.com/users/kitaisreal/events{/privacy}","received_events_url":"https://api.github.com/users/kitaisreal/received_events","type":"User","site_admin":false},"assignees":[{"login":"kitaisreal","id":22458333,"node_id":"MDQ6VXNlcjIyNDU4MzMz","avatar_url":"https://avatars.githubusercontent.com/u/22458333?v=4","gravatar_id":"","url":"https://api.github.com/users/kitaisreal","html_url":"https://github.com/kitaisreal","followers_url":"https://api.github.com/users/kitaisreal/followers","following_url":"https://api.github.com/users/kitaisreal/following{/other_user}","gists_url":"https://api.github.com/users/kitaisreal/gists{/gist_id}","starred_url":"https://api.github.com/users/kitaisreal/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kitaisreal/subscriptions","organizations_url":"https://api.github.com/users/kitaisreal/orgs","repos_url":"https://api.github.com/users/kitaisreal/repos","events_url":"https://api.github.com/users/kitaisreal/events{/privacy}","received_events_url":"https://api.github.com/users/kitaisreal/received_events","type":"User","site_admin":false}],"milestone":null,"comments":2,"created_at":"2022-01-21T23:29:38Z","updated_at":"2022-01-24T05:31:41Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"**Describe what's wrong**\r\n\r\nComparing Array(Int64) with Array(UInt64) or Array(Int256) with Array(UInt256) throws an `ILLEGAL_TYPE_OF_ARGUMENT` exception. Comparing arrays of other integer sizes works.\r\n\r\n**Does it reproduce on recent release?**\r\n\r\n* 21.9.4.35\r\n* 21.8.9.13\r\n\r\n**How to reproduce**\r\n\r\n* 21.8.9.13\r\n* clickhouse client\r\n* Run queries `SELECT [toInt64(1)] == [toUInt64(1)]` or `SELECT [toInt256(1)] == [toUInt256(1)]`\r\n\r\n**Expected behavior**\r\n\r\n`SELECT [toInt64(1)] == [toUInt64(1)]` should return 1. It does for all other integer sizes\r\n```\r\nSELECT\r\n    [toInt8(1)] = [toUInt8(1)] AS `8`,\r\n    [toInt16(1)] = [toUInt16(1)] AS `16`,\r\n    [toInt32(1)] = [toUInt32(1)] AS `32`,\r\n    [toInt128(1)] = [toUInt128(1)] AS `128`\r\n\r\nQuery id: e2f218b5-dfea-475c-92c6-85e041945bda\r\n\r\n┌─8─┬─16─┬─32─┬─128─┐\r\n│ 1 │  1 │  1 │   1 │\r\n└───┴────┴────┴─────┘\r\n\r\n1 rows in set. Elapsed: 0.007 sec.\r\n```\r\n\r\n**Error message and/or stacktrace**\r\n\r\n```\r\nSELECT [toInt64(1)] = [toUInt64(1)] AS `64`\r\n\r\nQuery id: d4aae777-aca5-4d3d-83eb-8703a3ed2d43\r\n\r\n\r\n0 rows in set. Elapsed: 0.018 sec.\r\n\r\nReceived exception from server (version 21.8.9):\r\nCode: 43. DB::Exception: Received from localhost:9000. DB::Exception: Illegal types of arguments (Array(Int64), Array(UInt64)) of function equals: While processing [toInt64(1)] = [toUInt64(1)] AS `64`.\r\n```\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33897/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33897/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33888","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33888/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33888/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33888/events","html_url":"https://github.com/ClickHouse/ClickHouse/pull/33888","id":1110816758,"node_id":"PR_kwDOA5dJV84xZt3t","number":33888,"title":"Backport #33588 to 22.1: Fix default value generation for columns with dot","user":{"login":"robot-clickhouse","id":41385210,"node_id":"MDQ6VXNlcjQxMzg1MjEw","avatar_url":"https://avatars.githubusercontent.com/u/41385210?v=4","gravatar_id":"","url":"https://api.github.com/users/robot-clickhouse","html_url":"https://github.com/robot-clickhouse","followers_url":"https://api.github.com/users/robot-clickhouse/followers","following_url":"https://api.github.com/users/robot-clickhouse/following{/other_user}","gists_url":"https://api.github.com/users/robot-clickhouse/gists{/gist_id}","starred_url":"https://api.github.com/users/robot-clickhouse/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/robot-clickhouse/subscriptions","organizations_url":"https://api.github.com/users/robot-clickhouse/orgs","repos_url":"https://api.github.com/users/robot-clickhouse/repos","events_url":"https://api.github.com/users/robot-clickhouse/events{/privacy}","received_events_url":"https://api.github.com/users/robot-clickhouse/received_events","type":"User","site_admin":false},"labels":[{"id":1316518062,"node_id":"MDU6TGFiZWwxMzE2NTE4MDYy","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/pr-backport","name":"pr-backport","color":"5fadcc","default":false,"description":"Changes, backported to release branch. Do not use manually - automated use only!"}],"state":"open","locked":false,"assignee":{"login":"KochetovNicolai","id":4092911,"node_id":"MDQ6VXNlcjQwOTI5MTE=","avatar_url":"https://avatars.githubusercontent.com/u/4092911?v=4","gravatar_id":"","url":"https://api.github.com/users/KochetovNicolai","html_url":"https://github.com/KochetovNicolai","followers_url":"https://api.github.com/users/KochetovNicolai/followers","following_url":"https://api.github.com/users/KochetovNicolai/following{/other_user}","gists_url":"https://api.github.com/users/KochetovNicolai/gists{/gist_id}","starred_url":"https://api.github.com/users/KochetovNicolai/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/KochetovNicolai/subscriptions","organizations_url":"https://api.github.com/users/KochetovNicolai/orgs","repos_url":"https://api.github.com/users/KochetovNicolai/repos","events_url":"https://api.github.com/users/KochetovNicolai/events{/privacy}","received_events_url":"https://api.github.com/users/KochetovNicolai/received_events","type":"User","site_admin":false},"assignees":[{"login":"KochetovNicolai","id":4092911,"node_id":"MDQ6VXNlcjQwOTI5MTE=","avatar_url":"https://avatars.githubusercontent.com/u/4092911?v=4","gravatar_id":"","url":"https://api.github.com/users/KochetovNicolai","html_url":"https://github.com/KochetovNicolai","followers_url":"https://api.github.com/users/KochetovNicolai/followers","following_url":"https://api.github.com/users/KochetovNicolai/following{/other_user}","gists_url":"https://api.github.com/users/KochetovNicolai/gists{/gist_id}","starred_url":"https://api.github.com/users/KochetovNicolai/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/KochetovNicolai/subscriptions","organizations_url":"https://api.github.com/users/KochetovNicolai/orgs","repos_url":"https://api.github.com/users/KochetovNicolai/repos","events_url":"https://api.github.com/users/KochetovNicolai/events{/privacy}","received_events_url":"https://api.github.com/users/KochetovNicolai/received_events","type":"User","site_admin":false}],"milestone":null,"comments":0,"created_at":"2022-01-21T19:26:43Z","updated_at":"2022-01-21T19:26:47Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/pulls/33888","html_url":"https://github.com/ClickHouse/ClickHouse/pull/33888","diff_url":"https://github.com/ClickHouse/ClickHouse/pull/33888.diff","patch_url":"https://github.com/ClickHouse/ClickHouse/pull/33888.patch","merged_at":null},"body":"Original pull-request #33588\nCherry-pick pull-request #33876\n\nThis pull-request is a last step of an automated backporting.\nTreat it as a standard pull-request: look at the checks and resolve conflicts.\nMerge it only if you intend to backport changes to the target branch, otherwise just close it.\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33888/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33888/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33887","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33887/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33887/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33887/events","html_url":"https://github.com/ClickHouse/ClickHouse/pull/33887","id":1110816526,"node_id":"PR_kwDOA5dJV84xZt0c","number":33887,"title":"Backport #33588 to 21.3: Fix default value generation for columns with dot","user":{"login":"robot-clickhouse","id":41385210,"node_id":"MDQ6VXNlcjQxMzg1MjEw","avatar_url":"https://avatars.githubusercontent.com/u/41385210?v=4","gravatar_id":"","url":"https://api.github.com/users/robot-clickhouse","html_url":"https://github.com/robot-clickhouse","followers_url":"https://api.github.com/users/robot-clickhouse/followers","following_url":"https://api.github.com/users/robot-clickhouse/following{/other_user}","gists_url":"https://api.github.com/users/robot-clickhouse/gists{/gist_id}","starred_url":"https://api.github.com/users/robot-clickhouse/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/robot-clickhouse/subscriptions","organizations_url":"https://api.github.com/users/robot-clickhouse/orgs","repos_url":"https://api.github.com/users/robot-clickhouse/repos","events_url":"https://api.github.com/users/robot-clickhouse/events{/privacy}","received_events_url":"https://api.github.com/users/robot-clickhouse/received_events","type":"User","site_admin":false},"labels":[{"id":1316518062,"node_id":"MDU6TGFiZWwxMzE2NTE4MDYy","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/pr-backport","name":"pr-backport","color":"5fadcc","default":false,"description":"Changes, backported to release branch. Do not use manually - automated use only!"}],"state":"open","locked":false,"assignee":{"login":"KochetovNicolai","id":4092911,"node_id":"MDQ6VXNlcjQwOTI5MTE=","avatar_url":"https://avatars.githubusercontent.com/u/4092911?v=4","gravatar_id":"","url":"https://api.github.com/users/KochetovNicolai","html_url":"https://github.com/KochetovNicolai","followers_url":"https://api.github.com/users/KochetovNicolai/followers","following_url":"https://api.github.com/users/KochetovNicolai/following{/other_user}","gists_url":"https://api.github.com/users/KochetovNicolai/gists{/gist_id}","starred_url":"https://api.github.com/users/KochetovNicolai/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/KochetovNicolai/subscriptions","organizations_url":"https://api.github.com/users/KochetovNicolai/orgs","repos_url":"https://api.github.com/users/KochetovNicolai/repos","events_url":"https://api.github.com/users/KochetovNicolai/events{/privacy}","received_events_url":"https://api.github.com/users/KochetovNicolai/received_events","type":"User","site_admin":false},"assignees":[{"login":"KochetovNicolai","id":4092911,"node_id":"MDQ6VXNlcjQwOTI5MTE=","avatar_url":"https://avatars.githubusercontent.com/u/4092911?v=4","gravatar_id":"","url":"https://api.github.com/users/KochetovNicolai","html_url":"https://github.com/KochetovNicolai","followers_url":"https://api.github.com/users/KochetovNicolai/followers","following_url":"https://api.github.com/users/KochetovNicolai/following{/other_user}","gists_url":"https://api.github.com/users/KochetovNicolai/gists{/gist_id}","starred_url":"https://api.github.com/users/KochetovNicolai/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/KochetovNicolai/subscriptions","organizations_url":"https://api.github.com/users/KochetovNicolai/orgs","repos_url":"https://api.github.com/users/KochetovNicolai/repos","events_url":"https://api.github.com/users/KochetovNicolai/events{/privacy}","received_events_url":"https://api.github.com/users/KochetovNicolai/received_events","type":"User","site_admin":false}],"milestone":null,"comments":0,"created_at":"2022-01-21T19:26:27Z","updated_at":"2022-01-21T19:26:31Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/pulls/33887","html_url":"https://github.com/ClickHouse/ClickHouse/pull/33887","diff_url":"https://github.com/ClickHouse/ClickHouse/pull/33887.diff","patch_url":"https://github.com/ClickHouse/ClickHouse/pull/33887.patch","merged_at":null},"body":"Original pull-request #33588\nCherry-pick pull-request #33879\n\nThis pull-request is a last step of an automated backporting.\nTreat it as a standard pull-request: look at the checks and resolve conflicts.\nMerge it only if you intend to backport changes to the target branch, otherwise just close it.\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33887/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33887/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33885","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33885/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33885/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33885/events","html_url":"https://github.com/ClickHouse/ClickHouse/pull/33885","id":1110815960,"node_id":"PR_kwDOA5dJV84xZtsh","number":33885,"title":"Backport #33588 to 21.12: Fix default value generation for columns with dot","user":{"login":"robot-clickhouse","id":41385210,"node_id":"MDQ6VXNlcjQxMzg1MjEw","avatar_url":"https://avatars.githubusercontent.com/u/41385210?v=4","gravatar_id":"","url":"https://api.github.com/users/robot-clickhouse","html_url":"https://github.com/robot-clickhouse","followers_url":"https://api.github.com/users/robot-clickhouse/followers","following_url":"https://api.github.com/users/robot-clickhouse/following{/other_user}","gists_url":"https://api.github.com/users/robot-clickhouse/gists{/gist_id}","starred_url":"https://api.github.com/users/robot-clickhouse/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/robot-clickhouse/subscriptions","organizations_url":"https://api.github.com/users/robot-clickhouse/orgs","repos_url":"https://api.github.com/users/robot-clickhouse/repos","events_url":"https://api.github.com/users/robot-clickhouse/events{/privacy}","received_events_url":"https://api.github.com/users/robot-clickhouse/received_events","type":"User","site_admin":false},"labels":[{"id":1316518062,"node_id":"MDU6TGFiZWwxMzE2NTE4MDYy","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/pr-backport","name":"pr-backport","color":"5fadcc","default":false,"description":"Changes, backported to release branch. Do not use manually - automated use only!"}],"state":"open","locked":false,"assignee":{"login":"KochetovNicolai","id":4092911,"node_id":"MDQ6VXNlcjQwOTI5MTE=","avatar_url":"https://avatars.githubusercontent.com/u/4092911?v=4","gravatar_id":"","url":"https://api.github.com/users/KochetovNicolai","html_url":"https://github.com/KochetovNicolai","followers_url":"https://api.github.com/users/KochetovNicolai/followers","following_url":"https://api.github.com/users/KochetovNicolai/following{/other_user}","gists_url":"https://api.github.com/users/KochetovNicolai/gists{/gist_id}","starred_url":"https://api.github.com/users/KochetovNicolai/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/KochetovNicolai/subscriptions","organizations_url":"https://api.github.com/users/KochetovNicolai/orgs","repos_url":"https://api.github.com/users/KochetovNicolai/repos","events_url":"https://api.github.com/users/KochetovNicolai/events{/privacy}","received_events_url":"https://api.github.com/users/KochetovNicolai/received_events","type":"User","site_admin":false},"assignees":[{"login":"KochetovNicolai","id":4092911,"node_id":"MDQ6VXNlcjQwOTI5MTE=","avatar_url":"https://avatars.githubusercontent.com/u/4092911?v=4","gravatar_id":"","url":"https://api.github.com/users/KochetovNicolai","html_url":"https://github.com/KochetovNicolai","followers_url":"https://api.github.com/users/KochetovNicolai/followers","following_url":"https://api.github.com/users/KochetovNicolai/following{/other_user}","gists_url":"https://api.github.com/users/KochetovNicolai/gists{/gist_id}","starred_url":"https://api.github.com/users/KochetovNicolai/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/KochetovNicolai/subscriptions","organizations_url":"https://api.github.com/users/KochetovNicolai/orgs","repos_url":"https://api.github.com/users/KochetovNicolai/repos","events_url":"https://api.github.com/users/KochetovNicolai/events{/privacy}","received_events_url":"https://api.github.com/users/KochetovNicolai/received_events","type":"User","site_admin":false}],"milestone":null,"comments":0,"created_at":"2022-01-21T19:25:55Z","updated_at":"2022-01-21T19:25:59Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/pulls/33885","html_url":"https://github.com/ClickHouse/ClickHouse/pull/33885","diff_url":"https://github.com/ClickHouse/ClickHouse/pull/33885.diff","patch_url":"https://github.com/ClickHouse/ClickHouse/pull/33885.patch","merged_at":null},"body":"Original pull-request #33588\nCherry-pick pull-request #33877\n\nThis pull-request is a last step of an automated backporting.\nTreat it as a standard pull-request: look at the checks and resolve conflicts.\nMerge it only if you intend to backport changes to the target branch, otherwise just close it.\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33885/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33885/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33884","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33884/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33884/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33884/events","html_url":"https://github.com/ClickHouse/ClickHouse/pull/33884","id":1110815704,"node_id":"PR_kwDOA5dJV84xZto_","number":33884,"title":"Backport #33588 to 21.11: Fix default value generation for columns with dot","user":{"login":"robot-clickhouse","id":41385210,"node_id":"MDQ6VXNlcjQxMzg1MjEw","avatar_url":"https://avatars.githubusercontent.com/u/41385210?v=4","gravatar_id":"","url":"https://api.github.com/users/robot-clickhouse","html_url":"https://github.com/robot-clickhouse","followers_url":"https://api.github.com/users/robot-clickhouse/followers","following_url":"https://api.github.com/users/robot-clickhouse/following{/other_user}","gists_url":"https://api.github.com/users/robot-clickhouse/gists{/gist_id}","starred_url":"https://api.github.com/users/robot-clickhouse/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/robot-clickhouse/subscriptions","organizations_url":"https://api.github.com/users/robot-clickhouse/orgs","repos_url":"https://api.github.com/users/robot-clickhouse/repos","events_url":"https://api.github.com/users/robot-clickhouse/events{/privacy}","received_events_url":"https://api.github.com/users/robot-clickhouse/received_events","type":"User","site_admin":false},"labels":[{"id":1316518062,"node_id":"MDU6TGFiZWwxMzE2NTE4MDYy","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/pr-backport","name":"pr-backport","color":"5fadcc","default":false,"description":"Changes, backported to release branch. Do not use manually - automated use only!"}],"state":"open","locked":false,"assignee":{"login":"KochetovNicolai","id":4092911,"node_id":"MDQ6VXNlcjQwOTI5MTE=","avatar_url":"https://avatars.githubusercontent.com/u/4092911?v=4","gravatar_id":"","url":"https://api.github.com/users/KochetovNicolai","html_url":"https://github.com/KochetovNicolai","followers_url":"https://api.github.com/users/KochetovNicolai/followers","following_url":"https://api.github.com/users/KochetovNicolai/following{/other_user}","gists_url":"https://api.github.com/users/KochetovNicolai/gists{/gist_id}","starred_url":"https://api.github.com/users/KochetovNicolai/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/KochetovNicolai/subscriptions","organizations_url":"https://api.github.com/users/KochetovNicolai/orgs","repos_url":"https://api.github.com/users/KochetovNicolai/repos","events_url":"https://api.github.com/users/KochetovNicolai/events{/privacy}","received_events_url":"https://api.github.com/users/KochetovNicolai/received_events","type":"User","site_admin":false},"assignees":[{"login":"KochetovNicolai","id":4092911,"node_id":"MDQ6VXNlcjQwOTI5MTE=","avatar_url":"https://avatars.githubusercontent.com/u/4092911?v=4","gravatar_id":"","url":"https://api.github.com/users/KochetovNicolai","html_url":"https://github.com/KochetovNicolai","followers_url":"https://api.github.com/users/KochetovNicolai/followers","following_url":"https://api.github.com/users/KochetovNicolai/following{/other_user}","gists_url":"https://api.github.com/users/KochetovNicolai/gists{/gist_id}","starred_url":"https://api.github.com/users/KochetovNicolai/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/KochetovNicolai/subscriptions","organizations_url":"https://api.github.com/users/KochetovNicolai/orgs","repos_url":"https://api.github.com/users/KochetovNicolai/repos","events_url":"https://api.github.com/users/KochetovNicolai/events{/privacy}","received_events_url":"https://api.github.com/users/KochetovNicolai/received_events","type":"User","site_admin":false}],"milestone":null,"comments":0,"created_at":"2022-01-21T19:25:40Z","updated_at":"2022-01-21T19:25:45Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/pulls/33884","html_url":"https://github.com/ClickHouse/ClickHouse/pull/33884","diff_url":"https://github.com/ClickHouse/ClickHouse/pull/33884.diff","patch_url":"https://github.com/ClickHouse/ClickHouse/pull/33884.patch","merged_at":null},"body":"Original pull-request #33588\nCherry-pick pull-request #33874\n\nThis pull-request is a last step of an automated backporting.\nTreat it as a standard pull-request: look at the checks and resolve conflicts.\nMerge it only if you intend to backport changes to the target branch, otherwise just close it.\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33884/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33884/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33883","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33883/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33883/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33883/events","html_url":"https://github.com/ClickHouse/ClickHouse/pull/33883","id":1110815421,"node_id":"PR_kwDOA5dJV84xZtk7","number":33883,"title":"Backport #33588 to 21.8: Fix default value generation for columns with dot","user":{"login":"robot-clickhouse","id":41385210,"node_id":"MDQ6VXNlcjQxMzg1MjEw","avatar_url":"https://avatars.githubusercontent.com/u/41385210?v=4","gravatar_id":"","url":"https://api.github.com/users/robot-clickhouse","html_url":"https://github.com/robot-clickhouse","followers_url":"https://api.github.com/users/robot-clickhouse/followers","following_url":"https://api.github.com/users/robot-clickhouse/following{/other_user}","gists_url":"https://api.github.com/users/robot-clickhouse/gists{/gist_id}","starred_url":"https://api.github.com/users/robot-clickhouse/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/robot-clickhouse/subscriptions","organizations_url":"https://api.github.com/users/robot-clickhouse/orgs","repos_url":"https://api.github.com/users/robot-clickhouse/repos","events_url":"https://api.github.com/users/robot-clickhouse/events{/privacy}","received_events_url":"https://api.github.com/users/robot-clickhouse/received_events","type":"User","site_admin":false},"labels":[{"id":1316518062,"node_id":"MDU6TGFiZWwxMzE2NTE4MDYy","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/pr-backport","name":"pr-backport","color":"5fadcc","default":false,"description":"Changes, backported to release branch. Do not use manually - automated use only!"}],"state":"open","locked":false,"assignee":{"login":"KochetovNicolai","id":4092911,"node_id":"MDQ6VXNlcjQwOTI5MTE=","avatar_url":"https://avatars.githubusercontent.com/u/4092911?v=4","gravatar_id":"","url":"https://api.github.com/users/KochetovNicolai","html_url":"https://github.com/KochetovNicolai","followers_url":"https://api.github.com/users/KochetovNicolai/followers","following_url":"https://api.github.com/users/KochetovNicolai/following{/other_user}","gists_url":"https://api.github.com/users/KochetovNicolai/gists{/gist_id}","starred_url":"https://api.github.com/users/KochetovNicolai/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/KochetovNicolai/subscriptions","organizations_url":"https://api.github.com/users/KochetovNicolai/orgs","repos_url":"https://api.github.com/users/KochetovNicolai/repos","events_url":"https://api.github.com/users/KochetovNicolai/events{/privacy}","received_events_url":"https://api.github.com/users/KochetovNicolai/received_events","type":"User","site_admin":false},"assignees":[{"login":"KochetovNicolai","id":4092911,"node_id":"MDQ6VXNlcjQwOTI5MTE=","avatar_url":"https://avatars.githubusercontent.com/u/4092911?v=4","gravatar_id":"","url":"https://api.github.com/users/KochetovNicolai","html_url":"https://github.com/KochetovNicolai","followers_url":"https://api.github.com/users/KochetovNicolai/followers","following_url":"https://api.github.com/users/KochetovNicolai/following{/other_user}","gists_url":"https://api.github.com/users/KochetovNicolai/gists{/gist_id}","starred_url":"https://api.github.com/users/KochetovNicolai/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/KochetovNicolai/subscriptions","organizations_url":"https://api.github.com/users/KochetovNicolai/orgs","repos_url":"https://api.github.com/users/KochetovNicolai/repos","events_url":"https://api.github.com/users/KochetovNicolai/events{/privacy}","received_events_url":"https://api.github.com/users/KochetovNicolai/received_events","type":"User","site_admin":false}],"milestone":null,"comments":0,"created_at":"2022-01-21T19:25:24Z","updated_at":"2022-01-21T19:25:28Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/pulls/33883","html_url":"https://github.com/ClickHouse/ClickHouse/pull/33883","diff_url":"https://github.com/ClickHouse/ClickHouse/pull/33883.diff","patch_url":"https://github.com/ClickHouse/ClickHouse/pull/33883.patch","merged_at":null},"body":"Original pull-request #33588\nCherry-pick pull-request #33875\n\nThis pull-request is a last step of an automated backporting.\nTreat it as a standard pull-request: look at the checks and resolve conflicts.\nMerge it only if you intend to backport changes to the target branch, otherwise just close it.\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33883/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33883/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33867","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33867/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33867/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33867/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33867","id":1110516195,"node_id":"I_kwDOA5dJV85CMSHj","number":33867,"title":"DatabaseReplicated: Replica ... already exists. Replica host ID: 'DROPPED'","user":{"login":"tavplubix","id":14847450,"node_id":"MDQ6VXNlcjE0ODQ3NDUw","avatar_url":"https://avatars.githubusercontent.com/u/14847450?v=4","gravatar_id":"","url":"https://api.github.com/users/tavplubix","html_url":"https://github.com/tavplubix","followers_url":"https://api.github.com/users/tavplubix/followers","following_url":"https://api.github.com/users/tavplubix/following{/other_user}","gists_url":"https://api.github.com/users/tavplubix/gists{/gist_id}","starred_url":"https://api.github.com/users/tavplubix/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tavplubix/subscriptions","organizations_url":"https://api.github.com/users/tavplubix/orgs","repos_url":"https://api.github.com/users/tavplubix/repos","events_url":"https://api.github.com/users/tavplubix/events{/privacy}","received_events_url":"https://api.github.com/users/tavplubix/received_events","type":"User","site_admin":false},"labels":[{"id":2104602822,"node_id":"MDU6TGFiZWwyMTA0NjAyODIy","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/fuzz","name":"fuzz","color":"abc4ea","default":false,"description":""}],"state":"open","locked":false,"assignee":{"login":"tavplubix","id":14847450,"node_id":"MDQ6VXNlcjE0ODQ3NDUw","avatar_url":"https://avatars.githubusercontent.com/u/14847450?v=4","gravatar_id":"","url":"https://api.github.com/users/tavplubix","html_url":"https://github.com/tavplubix","followers_url":"https://api.github.com/users/tavplubix/followers","following_url":"https://api.github.com/users/tavplubix/following{/other_user}","gists_url":"https://api.github.com/users/tavplubix/gists{/gist_id}","starred_url":"https://api.github.com/users/tavplubix/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tavplubix/subscriptions","organizations_url":"https://api.github.com/users/tavplubix/orgs","repos_url":"https://api.github.com/users/tavplubix/repos","events_url":"https://api.github.com/users/tavplubix/events{/privacy}","received_events_url":"https://api.github.com/users/tavplubix/received_events","type":"User","site_admin":false},"assignees":[{"login":"tavplubix","id":14847450,"node_id":"MDQ6VXNlcjE0ODQ3NDUw","avatar_url":"https://avatars.githubusercontent.com/u/14847450?v=4","gravatar_id":"","url":"https://api.github.com/users/tavplubix","html_url":"https://github.com/tavplubix","followers_url":"https://api.github.com/users/tavplubix/followers","following_url":"https://api.github.com/users/tavplubix/following{/other_user}","gists_url":"https://api.github.com/users/tavplubix/gists{/gist_id}","starred_url":"https://api.github.com/users/tavplubix/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tavplubix/subscriptions","organizations_url":"https://api.github.com/users/tavplubix/orgs","repos_url":"https://api.github.com/users/tavplubix/repos","events_url":"https://api.github.com/users/tavplubix/events{/privacy}","received_events_url":"https://api.github.com/users/tavplubix/received_events","type":"User","site_admin":false}],"milestone":null,"comments":0,"created_at":"2022-01-21T14:14:48Z","updated_at":"2022-01-21T14:14:53Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"https://s3.amazonaws.com/clickhouse-test-reports/33847/8921725d716e05b13dc82f2db1c3d5bfc3ad6983/stress_test__debug__actions_.html","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33867/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33867/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33865","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33865/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33865/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33865/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33865","id":1110487042,"node_id":"I_kwDOA5dJV85CMLAC","number":33865,"title":"Respect cgroup-v2 limits on CPU and memory","user":{"login":"JaySon-Huang","id":4865550,"node_id":"MDQ6VXNlcjQ4NjU1NTA=","avatar_url":"https://avatars.githubusercontent.com/u/4865550?v=4","gravatar_id":"","url":"https://api.github.com/users/JaySon-Huang","html_url":"https://github.com/JaySon-Huang","followers_url":"https://api.github.com/users/JaySon-Huang/followers","following_url":"https://api.github.com/users/JaySon-Huang/following{/other_user}","gists_url":"https://api.github.com/users/JaySon-Huang/gists{/gist_id}","starred_url":"https://api.github.com/users/JaySon-Huang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JaySon-Huang/subscriptions","organizations_url":"https://api.github.com/users/JaySon-Huang/orgs","repos_url":"https://api.github.com/users/JaySon-Huang/repos","events_url":"https://api.github.com/users/JaySon-Huang/events{/privacy}","received_events_url":"https://api.github.com/users/JaySon-Huang/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-01-21T13:44:39Z","updated_at":"2022-01-21T13:44:39Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"**Use case**\r\n\r\n> A clear and concise description of what is the intended usage scenario is.\r\n\r\nAfter #30574, #33342, `getMemoryAmount` and `getNumberOfPhysicalCPUCores` respect [cgroup v1](https://www.kernel.org/doc/html/latest/admin-guide/cgroup-v1/index.html) llimits and can get the right amount of CPU and memory when running inside a docker container.\r\n\r\nLinux 4.5 introduce [control group v2](https://www.kernel.org/doc/html/latest/admin-guide/cgroup-v2.html) restriction. Those functions don't follow the restriction of cgroup v2. However, AFAIK, cgroup v2 is not enabled by default and is not widely used, so I create an issue for it. One can pick up this issue if he/she is interested in it.\r\n\r\n/cc @bobrik from https://github.com/ClickHouse/ClickHouse/pull/33342#issuecomment-1005349821\r\n\r\n**Describe the solution you'd like**\r\n\r\n> A clear and concise description of what you want to happen.\r\n\r\nFollow the CPU/Memory restriction on cgroup v2\r\n\r\n**Describe alternatives you've considered**\r\n\r\n> A clear and concise description of any alternative solutions or features you've considered.\r\n\r\n**Additional context**\r\n\r\n> Add any other context or screenshots about the feature request here.\r\n\r\nReference:\r\n* Control Group v2: https://www.kernel.org/doc/html/latest/admin-guide/cgroup-v2.html","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33865/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33865/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33864","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33864/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33864/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33864/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33864","id":1110428602,"node_id":"I_kwDOA5dJV85CL8u6","number":33864,"title":"Metric HTTPConnection may be incorrect","user":{"login":"filimonov","id":1549571,"node_id":"MDQ6VXNlcjE1NDk1NzE=","avatar_url":"https://avatars.githubusercontent.com/u/1549571?v=4","gravatar_id":"","url":"https://api.github.com/users/filimonov","html_url":"https://github.com/filimonov","followers_url":"https://api.github.com/users/filimonov/followers","following_url":"https://api.github.com/users/filimonov/following{/other_user}","gists_url":"https://api.github.com/users/filimonov/gists{/gist_id}","starred_url":"https://api.github.com/users/filimonov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/filimonov/subscriptions","organizations_url":"https://api.github.com/users/filimonov/orgs","repos_url":"https://api.github.com/users/filimonov/repos","events_url":"https://api.github.com/users/filimonov/events{/privacy}","received_events_url":"https://api.github.com/users/filimonov/received_events","type":"User","site_admin":false},"labels":[{"id":845247686,"node_id":"MDU6TGFiZWw4NDUyNDc2ODY=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/usability","name":"usability","color":"ebf28c","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-01-21T12:42:14Z","updated_at":"2022-01-21T12:44:25Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"body":"HTTPConnection is counted on the HTTPHandler level.  While the http connections are maintained on Poco level. \r\n\r\nThat means for example that we can open 1000 connections to HTTP but until some HTTP requests will be sent and poco will call the HTTP hander the metric will be showing 0. \r\n\r\nSo actually it counts in-flight http queries, not connections. \r\n\r\nIdeally would be to count both real connections & in-flight http queries.\r\n\r\nAlso may be a counter of served http queries could be nice (to catch / count fast queries which are hard to see via system.metrics)\r\n\r\nLoosely related to https://github.com/ClickHouse/ClickHouse/issues/23858","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33864/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33864/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33861","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33861/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33861/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33861/events","html_url":"https://github.com/ClickHouse/ClickHouse/pull/33861","id":1110298802,"node_id":"PR_kwDOA5dJV84xYA0T","number":33861,"title":"Fix substring negative offset length","user":{"login":"RogerYK","id":28089185,"node_id":"MDQ6VXNlcjI4MDg5MTg1","avatar_url":"https://avatars.githubusercontent.com/u/28089185?v=4","gravatar_id":"","url":"https://api.github.com/users/RogerYK","html_url":"https://github.com/RogerYK","followers_url":"https://api.github.com/users/RogerYK/followers","following_url":"https://api.github.com/users/RogerYK/following{/other_user}","gists_url":"https://api.github.com/users/RogerYK/gists{/gist_id}","starred_url":"https://api.github.com/users/RogerYK/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/RogerYK/subscriptions","organizations_url":"https://api.github.com/users/RogerYK/orgs","repos_url":"https://api.github.com/users/RogerYK/repos","events_url":"https://api.github.com/users/RogerYK/events{/privacy}","received_events_url":"https://api.github.com/users/RogerYK/received_events","type":"User","site_admin":false},"labels":[{"id":1302792342,"node_id":"MDU6TGFiZWwxMzAyNzkyMzQy","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/pr-bugfix","name":"pr-bugfix","color":"ff4080","default":false,"description":"Pull request with bugfix, not backported by default"},{"id":3627025164,"node_id":"LA_kwDOA5dJV87YMAMM","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/can%20be%20tested","name":"can be tested","color":"1d76db","default":false,"description":""}],"state":"open","locked":false,"assignee":{"login":"kitaisreal","id":22458333,"node_id":"MDQ6VXNlcjIyNDU4MzMz","avatar_url":"https://avatars.githubusercontent.com/u/22458333?v=4","gravatar_id":"","url":"https://api.github.com/users/kitaisreal","html_url":"https://github.com/kitaisreal","followers_url":"https://api.github.com/users/kitaisreal/followers","following_url":"https://api.github.com/users/kitaisreal/following{/other_user}","gists_url":"https://api.github.com/users/kitaisreal/gists{/gist_id}","starred_url":"https://api.github.com/users/kitaisreal/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kitaisreal/subscriptions","organizations_url":"https://api.github.com/users/kitaisreal/orgs","repos_url":"https://api.github.com/users/kitaisreal/repos","events_url":"https://api.github.com/users/kitaisreal/events{/privacy}","received_events_url":"https://api.github.com/users/kitaisreal/received_events","type":"User","site_admin":false},"assignees":[{"login":"kitaisreal","id":22458333,"node_id":"MDQ6VXNlcjIyNDU4MzMz","avatar_url":"https://avatars.githubusercontent.com/u/22458333?v=4","gravatar_id":"","url":"https://api.github.com/users/kitaisreal","html_url":"https://github.com/kitaisreal","followers_url":"https://api.github.com/users/kitaisreal/followers","following_url":"https://api.github.com/users/kitaisreal/following{/other_user}","gists_url":"https://api.github.com/users/kitaisreal/gists{/gist_id}","starred_url":"https://api.github.com/users/kitaisreal/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kitaisreal/subscriptions","organizations_url":"https://api.github.com/users/kitaisreal/orgs","repos_url":"https://api.github.com/users/kitaisreal/repos","events_url":"https://api.github.com/users/kitaisreal/events{/privacy}","received_events_url":"https://api.github.com/users/kitaisreal/received_events","type":"User","site_admin":false}],"milestone":null,"comments":1,"created_at":"2022-01-21T10:21:29Z","updated_at":"2022-01-28T03:35:06Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/pulls/33861","html_url":"https://github.com/ClickHouse/ClickHouse/pull/33861","diff_url":"https://github.com/ClickHouse/ClickHouse/pull/33861.diff","patch_url":"https://github.com/ClickHouse/ClickHouse/pull/33861.patch","merged_at":null},"body":"Changelog category (leave one):\r\n- Bug Fix (user-visible misbehaviour in official stable or prestable release)\r\n\r\nChangelog entry (a user-readable short description of the changes that goes to CHANGELOG.md):\r\n- fix substring function range error length when `offset` and `length` is negative constant and `s` is not constant.\r\n\r\nThis Closes #33736 ","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33861/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33861/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33858","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33858/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33858/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33858/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33858","id":1110123436,"node_id":"I_kwDOA5dJV85CKyOs","number":33858,"title":"Invalid Kerberos auth flow: Server sends 403 instead of 401","user":{"login":"DarkWanderer","id":2542609,"node_id":"MDQ6VXNlcjI1NDI2MDk=","avatar_url":"https://avatars.githubusercontent.com/u/2542609?v=4","gravatar_id":"","url":"https://api.github.com/users/DarkWanderer","html_url":"https://github.com/DarkWanderer","followers_url":"https://api.github.com/users/DarkWanderer/followers","following_url":"https://api.github.com/users/DarkWanderer/following{/other_user}","gists_url":"https://api.github.com/users/DarkWanderer/gists{/gist_id}","starred_url":"https://api.github.com/users/DarkWanderer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DarkWanderer/subscriptions","organizations_url":"https://api.github.com/users/DarkWanderer/orgs","repos_url":"https://api.github.com/users/DarkWanderer/repos","events_url":"https://api.github.com/users/DarkWanderer/events{/privacy}","received_events_url":"https://api.github.com/users/DarkWanderer/received_events","type":"User","site_admin":false},"labels":[{"id":1575085465,"node_id":"MDU6TGFiZWwxNTc1MDg1NDY1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/unexpected%20behaviour","name":"unexpected behaviour","color":"e088ca","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2022-01-21T06:59:17Z","updated_at":"2022-01-22T08:52:47Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"(you don't have to strictly follow this form)\r\n\r\n**Describe the unexpected behaviour**\r\nServer behavior during Kerberos authentication does not conform to [RFC4559](https://datatracker.ietf.org/doc/html/rfc4559#section-4.1). When a client authenticates using Kerberos, it *may* not send authentication headers on first request. In that case, the server should send a \"401 Unauthorized\" status code, and a \"WWW-Authenticate:\" header, which triggers SPNEGO workflow in Curl. However, ClickHouse does not do that and sends back a HTTP 403 instead\r\n\r\n**How to reproduce**\r\n* Observed on 21.9 but likely is present in latest version\r\n* HTTP interface\r\n* Kerberos authentication\r\n\r\n```\r\ncurl -v -u : --negotiate \"http://clickhouse.server:8123/?query=SELECT+VERSION()\"\r\n```\r\n\r\n**Sent headers**\r\n```\r\n> GET ?query=SELECT+VERSION()\r\n> User-Agent: curl/7.29.0\r\n> Host: clickhouse.server:8123\r\n> Accept */*\r\n```\r\n**Expected server response**\r\n```\r\n< HTTP/1.1 401 Unauthorized\r\n< Date: .....\r\n< Connection: Keep-Alive\r\n< WWW-Authenticate: Negotiate\r\n< Content-Type: .....\r\n```\r\n\r\n**Observed server response**\r\n```\r\n< HTTP/1.1 403 Forbidden\r\n< Date: .....\r\n< Connection: Keep-Alive\r\n< X-Clickhouse-Exception-Code: 516\r\n< Content-Type: .....\r\n\r\nCode: 516. DB::Exception: default: Authentication failed: password is incorrect or there is no user with such name. (AUTHENTICATION_FAILED) (version 21.9.2.1)\r\n```\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33858/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33858/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33850","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33850/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33850/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33850/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33850","id":1109779237,"node_id":"I_kwDOA5dJV85CJeMl","number":33850,"title":"Randomization of tests with DETACH/ATTACH table.","user":{"login":"alexey-milovidov","id":18581488,"node_id":"MDQ6VXNlcjE4NTgxNDg4","avatar_url":"https://avatars.githubusercontent.com/u/18581488?v=4","gravatar_id":"","url":"https://api.github.com/users/alexey-milovidov","html_url":"https://github.com/alexey-milovidov","followers_url":"https://api.github.com/users/alexey-milovidov/followers","following_url":"https://api.github.com/users/alexey-milovidov/following{/other_user}","gists_url":"https://api.github.com/users/alexey-milovidov/gists{/gist_id}","starred_url":"https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexey-milovidov/subscriptions","organizations_url":"https://api.github.com/users/alexey-milovidov/orgs","repos_url":"https://api.github.com/users/alexey-milovidov/repos","events_url":"https://api.github.com/users/alexey-milovidov/events{/privacy}","received_events_url":"https://api.github.com/users/alexey-milovidov/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":1955634273,"node_id":"MDU6TGFiZWwxOTU1NjM0Mjcz","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/testing","name":"testing","color":"c9a224","default":false,"description":"Special issue with list of bugs found by CI"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2022-01-20T21:23:02Z","updated_at":"2022-01-28T13:30:15Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"**Use case**\r\n\r\nTest should pass if we detach and attach table in between the queries.\r\n\r\n**Describe the solution you'd like**\r\n\r\nOnly for .sql tests.\r\n\r\nSome Settings for clickhouse-server to track what tables were created in the session, and randomly do DETACH/ATTACH of some of the tables before some other queries.\r\n\r\nIt can be enabled in functional tests by default with some small probability.\r\n\r\n**Additional context**\r\n\r\n#33849\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33850/reactions","total_count":2,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33850/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33839","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33839/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33839/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33839/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33839","id":1109484553,"node_id":"I_kwDOA5dJV85CIWQJ","number":33839,"title":"<Error> executeQuery: Code: 33, e.displayText() = DB::Exception: Cannot read all data. Bytes read: 30. Bytes expected: 250.","user":{"login":"mylqf","id":16940069,"node_id":"MDQ6VXNlcjE2OTQwMDY5","avatar_url":"https://avatars.githubusercontent.com/u/16940069?v=4","gravatar_id":"","url":"https://api.github.com/users/mylqf","html_url":"https://github.com/mylqf","followers_url":"https://api.github.com/users/mylqf/followers","following_url":"https://api.github.com/users/mylqf/following{/other_user}","gists_url":"https://api.github.com/users/mylqf/gists{/gist_id}","starred_url":"https://api.github.com/users/mylqf/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mylqf/subscriptions","organizations_url":"https://api.github.com/users/mylqf/orgs","repos_url":"https://api.github.com/users/mylqf/repos","events_url":"https://api.github.com/users/mylqf/events{/privacy}","received_events_url":"https://api.github.com/users/mylqf/received_events","type":"User","site_admin":false},"labels":[{"id":386401510,"node_id":"MDU6TGFiZWwzODY0MDE1MTA=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/question","name":"question","color":"bfdadc","default":true,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":8,"created_at":"2022-01-20T16:03:56Z","updated_at":"2022-01-22T04:15:42Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"How can I solve this problem when I insert data in batches? Thank you\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33839/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33839/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33837","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33837/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33837/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33837/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33837","id":1109449152,"node_id":"I_kwDOA5dJV85CINnA","number":33837,"title":"Incomplete MaterializePostgreSQL doc","user":{"login":"kokizzu","id":1061610,"node_id":"MDQ6VXNlcjEwNjE2MTA=","avatar_url":"https://avatars.githubusercontent.com/u/1061610?v=4","gravatar_id":"","url":"https://api.github.com/users/kokizzu","html_url":"https://github.com/kokizzu","followers_url":"https://api.github.com/users/kokizzu/followers","following_url":"https://api.github.com/users/kokizzu/following{/other_user}","gists_url":"https://api.github.com/users/kokizzu/gists{/gist_id}","starred_url":"https://api.github.com/users/kokizzu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kokizzu/subscriptions","organizations_url":"https://api.github.com/users/kokizzu/orgs","repos_url":"https://api.github.com/users/kokizzu/repos","events_url":"https://api.github.com/users/kokizzu/events{/privacy}","received_events_url":"https://api.github.com/users/kokizzu/received_events","type":"User","site_admin":false},"labels":[{"id":785082162,"node_id":"MDU6TGFiZWw3ODUwODIxNjI=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-documentation","name":"comp-documentation","color":"b5bcff","default":false,"description":"Used to run automatic builds of the documentation"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-01-20T15:32:50Z","updated_at":"2022-01-20T15:32:50Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"\r\n**Describe the issue**\r\nwhen getting an error\r\n```\r\nReceived exception from server (version 22.1.2):\r\nCode: 336. DB::Exception: Received from localhost:9000. DB::Exception: MaterializedPostgreSQL is an experimental database engine. Enable allow_experimental_database_materialized_postgresql to use it.. (UNKNOWN_DATABASE_ENGINE)\r\n```\r\nmissing info where to put that config when using `MaterializePostgreSQL`, which is should be in `/etc/clickhouse-server/users.xml`\r\n\r\n```xml\r\n<?xml version=\"1.0\"?>\r\n<clickhouse>\r\n<!-- See also the files in users.d directory where the settings can be overridden. -->\r\n\r\n<!-- Profiles of settings. -->\r\n<profiles>\r\n<!-- Default settings. -->\r\n<default>\r\n<!-- allow_experimental_database_materialized_postgresql -->\r\n<allow_experimental_database_materialized_postgresql>1</allow_experimental_database_materialized_postgresql>\r\n```\r\n\r\n**Additional context**\r\nis this why the rating of that section is only 3 '__')?\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33837/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33837/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33836","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33836/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33836/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33836/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33836","id":1109382781,"node_id":"I_kwDOA5dJV85CH9Z9","number":33836,"title":"generateRandom & flatten_nested=0","user":{"login":"den-crane","id":19737682,"node_id":"MDQ6VXNlcjE5NzM3Njgy","avatar_url":"https://avatars.githubusercontent.com/u/19737682?v=4","gravatar_id":"","url":"https://api.github.com/users/den-crane","html_url":"https://github.com/den-crane","followers_url":"https://api.github.com/users/den-crane/followers","following_url":"https://api.github.com/users/den-crane/following{/other_user}","gists_url":"https://api.github.com/users/den-crane/gists{/gist_id}","starred_url":"https://api.github.com/users/den-crane/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/den-crane/subscriptions","organizations_url":"https://api.github.com/users/den-crane/orgs","repos_url":"https://api.github.com/users/den-crane/repos","events_url":"https://api.github.com/users/den-crane/events{/privacy}","received_events_url":"https://api.github.com/users/den-crane/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null}],"state":"open","locked":false,"assignee":{"login":"CurtizJ","id":20361854,"node_id":"MDQ6VXNlcjIwMzYxODU0","avatar_url":"https://avatars.githubusercontent.com/u/20361854?v=4","gravatar_id":"","url":"https://api.github.com/users/CurtizJ","html_url":"https://github.com/CurtizJ","followers_url":"https://api.github.com/users/CurtizJ/followers","following_url":"https://api.github.com/users/CurtizJ/following{/other_user}","gists_url":"https://api.github.com/users/CurtizJ/gists{/gist_id}","starred_url":"https://api.github.com/users/CurtizJ/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/CurtizJ/subscriptions","organizations_url":"https://api.github.com/users/CurtizJ/orgs","repos_url":"https://api.github.com/users/CurtizJ/repos","events_url":"https://api.github.com/users/CurtizJ/events{/privacy}","received_events_url":"https://api.github.com/users/CurtizJ/received_events","type":"User","site_admin":false},"assignees":[{"login":"CurtizJ","id":20361854,"node_id":"MDQ6VXNlcjIwMzYxODU0","avatar_url":"https://avatars.githubusercontent.com/u/20361854?v=4","gravatar_id":"","url":"https://api.github.com/users/CurtizJ","html_url":"https://github.com/CurtizJ","followers_url":"https://api.github.com/users/CurtizJ/followers","following_url":"https://api.github.com/users/CurtizJ/following{/other_user}","gists_url":"https://api.github.com/users/CurtizJ/gists{/gist_id}","starred_url":"https://api.github.com/users/CurtizJ/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/CurtizJ/subscriptions","organizations_url":"https://api.github.com/users/CurtizJ/orgs","repos_url":"https://api.github.com/users/CurtizJ/repos","events_url":"https://api.github.com/users/CurtizJ/events{/privacy}","received_events_url":"https://api.github.com/users/CurtizJ/received_events","type":"User","site_admin":false}],"milestone":null,"comments":0,"created_at":"2022-01-20T14:38:16Z","updated_at":"2022-01-20T16:42:17Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"body":"```sql\r\nset flatten_nested=0;\r\n\r\nSELECT * FROM generateRandom('point Nested(x UInt64,y UInt64,t Nested(z UInt64, S String))', 1, 10, 2) LIMIT 3;\r\n\r\n   DB::Exception: Cannot find column `point` in source stream, there are only columns: []. (THERE_IS_NO_COLUMN)\r\n```","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33836/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33836/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33828","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33828/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33828/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33828/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33828","id":1109206014,"node_id":"I_kwDOA5dJV85CHSP-","number":33828,"title":"User Action Cohorts","user":{"login":"amirvaza","id":25140441,"node_id":"MDQ6VXNlcjI1MTQwNDQx","avatar_url":"https://avatars.githubusercontent.com/u/25140441?v=4","gravatar_id":"","url":"https://api.github.com/users/amirvaza","html_url":"https://github.com/amirvaza","followers_url":"https://api.github.com/users/amirvaza/followers","following_url":"https://api.github.com/users/amirvaza/following{/other_user}","gists_url":"https://api.github.com/users/amirvaza/gists{/gist_id}","starred_url":"https://api.github.com/users/amirvaza/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/amirvaza/subscriptions","organizations_url":"https://api.github.com/users/amirvaza/orgs","repos_url":"https://api.github.com/users/amirvaza/repos","events_url":"https://api.github.com/users/amirvaza/events{/privacy}","received_events_url":"https://api.github.com/users/amirvaza/received_events","type":"User","site_admin":false},"labels":[{"id":386401510,"node_id":"MDU6TGFiZWwzODY0MDE1MTA=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/question","name":"question","color":"bfdadc","default":true,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-01-20T11:49:40Z","updated_at":"2022-01-20T11:49:40Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Hi Everyone,\r\n\r\nI'm looking for way to query user action cohorts.\r\nI went through this solution https://yute.com/post/cohorts-clickhouse/ but it's not good for me.\r\nThey are using JOIN between the ActionX and ActionY.\r\nIt might work for Account level, but for a specific user, when you got millions of users(and more) the join will just kill the memory.\r\n\r\nI could achieve this using the retention function, but only one line at a time.\r\nDoing this for 3 months is a waste of cpu and time.\r\n\r\nIs there any other option into doing such query in one time for the entire cohort table?\r\n\r\nThe scheme is generic: UserId, EventTime, Action\r\nI want to calculate a cohort between 2 dates and 2 different action.\r\n\r\nAny idea/solution is welcome.\r\n\r\nThanks.\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33828/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33828/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33825","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33825/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33825/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33825/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33825","id":1109131611,"node_id":"I_kwDOA5dJV85CHAFb","number":33825,"title":"Incorrect scalar subquery result","user":{"login":"Algunenano","id":664253,"node_id":"MDQ6VXNlcjY2NDI1Mw==","avatar_url":"https://avatars.githubusercontent.com/u/664253?v=4","gravatar_id":"","url":"https://api.github.com/users/Algunenano","html_url":"https://github.com/Algunenano","followers_url":"https://api.github.com/users/Algunenano/followers","following_url":"https://api.github.com/users/Algunenano/following{/other_user}","gists_url":"https://api.github.com/users/Algunenano/gists{/gist_id}","starred_url":"https://api.github.com/users/Algunenano/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Algunenano/subscriptions","organizations_url":"https://api.github.com/users/Algunenano/orgs","repos_url":"https://api.github.com/users/Algunenano/repos","events_url":"https://api.github.com/users/Algunenano/events{/privacy}","received_events_url":"https://api.github.com/users/Algunenano/received_events","type":"User","site_admin":false},"labels":[{"id":3260776666,"node_id":"MDU6TGFiZWwzMjYwNzc2NjY2","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/potential%20bug","name":"potential bug","color":"ffc080","default":false,"description":"To be reviewed by developers and confirmed/rejected."}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2022-01-20T10:34:22Z","updated_at":"2022-01-21T15:18:10Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"**Describe what's wrong**\r\n\r\nFor some reason, the first column of a select is not returning the scalar result and instead returns something else: \r\n\r\n\r\n```\r\nCREATE TABLE t1 (i Int64, j Int64) ENGINE = Memory;\r\nINSERT INTO t1 SELECT number, number FROM system.numbers LIMIT 10;\r\nSELECT\r\n        (SELECT max(i) FROM t1) as i,\r\n        (SELECT max(i) FROM t1) as j,\r\n        (SELECT max(i) FROM t1) as k,\r\n        (SELECT max(i) FROM t1) as l\r\nFROM t1\r\n```\r\n\r\n* Result:\r\n```\r\n┌─i─┬─j─┬─k─┬─l─┐\r\n│ 0 │ 9 │ 9 │ 9 │\r\n│ 1 │ 9 │ 9 │ 9 │\r\n│ 2 │ 9 │ 9 │ 9 │\r\n│ 3 │ 9 │ 9 │ 9 │\r\n│ 4 │ 9 │ 9 │ 9 │\r\n│ 5 │ 9 │ 9 │ 9 │\r\n│ 6 │ 9 │ 9 │ 9 │\r\n│ 7 │ 9 │ 9 │ 9 │\r\n│ 8 │ 9 │ 9 │ 9 │\r\n│ 9 │ 9 │ 9 │ 9 │\r\n└───┴───┴───┴───┘\r\n```\r\n\r\n* Expected:\r\n```\r\n┌─i─┬─j─┬─k─┬─l─┐\r\n│ 9 │ 9 │ 9 │ 9 │\r\n│ 9 │ 9 │ 9 │ 9 │\r\n│ 9 │ 9 │ 9 │ 9 │\r\n│ 9 │ 9 │ 9 │ 9 │\r\n│ 9 │ 9 │ 9 │ 9 │\r\n│ 9 │ 9 │ 9 │ 9 │\r\n│ 9 │ 9 │ 9 │ 9 │\r\n│ 9 │ 9 │ 9 │ 9 │\r\n│ 9 │ 9 │ 9 │ 9 │\r\n│ 9 │ 9 │ 9 │ 9 │\r\n└───┴───┴───┴───┘\r\n\r\n\r\n```\r\n\r\n\r\nThis also happens if I use a CTE to declare **once** the subquery:\r\n```\r\nWITH (\r\n        SELECT max(i)\r\n        FROM t1\r\n    ) AS value\r\nSELECT\r\n    value AS i,\r\n    value AS j,\r\n    value AS k,\r\n    value AS l\r\nFROM t1\r\n\r\nQuery id: 8a85ed02-0ad7-4fe4-b01f-eabbb7521d52\r\n\r\n┌─i─┬─j─┬─k─┬─l─┐\r\n│ 0 │ 9 │ 9 │ 9 │\r\n│ 1 │ 9 │ 9 │ 9 │\r\n│ 2 │ 9 │ 9 │ 9 │\r\n│ 3 │ 9 │ 9 │ 9 │\r\n│ 4 │ 9 │ 9 │ 9 │\r\n│ 5 │ 9 │ 9 │ 9 │\r\n│ 6 │ 9 │ 9 │ 9 │\r\n│ 7 │ 9 │ 9 │ 9 │\r\n│ 8 │ 9 │ 9 │ 9 │\r\n│ 9 │ 9 │ 9 │ 9 │\r\n└───┴───┴───┴───┘\r\n```\r\n\r\n\r\n**Does it reproduce on recent release?**\r\n\r\nTested on 20.7 (the oldest I keep around) and master and both exhibit the same behaviour so I guess everything is affected.\r\n\r\n\r\nOn master, describing the table shows that the first column didn't receive the scalar replacement, otherwise it would have been Nullable(Int64):\r\n\r\n```\r\nDESCRIBE TABLE \r\n(\r\n    SELECT\r\n        (\r\n            SELECT max(i)\r\n            FROM t1\r\n        ) AS i,\r\n        (\r\n            SELECT max(i)\r\n            FROM t1\r\n        ) AS j,\r\n        (\r\n            SELECT max(i)\r\n            FROM t1\r\n        ) AS k,\r\n        (\r\n            SELECT max(i)\r\n            FROM t1\r\n        ) AS l\r\n    FROM t1\r\n)\r\n\r\nQuery id: 0f58496d-7d51-40a1-8ae9-fd68b8e431b6\r\n\r\n┌─name─┬─type────────────┬─default_type─┬─default_expression─┬─comment─┬─codec_expression─┬─ttl_expression─┐\r\n│ i    │ Int64           │              │                    │         │                  │                │\r\n│ j    │ Nullable(Int64) │              │                    │         │                  │                │\r\n│ k    │ Nullable(Int64) │              │                    │         │                  │                │\r\n│ l    │ Nullable(Int64) │              │                    │         │                  │                │\r\n└──────┴─────────────────┴──────────────┴────────────────────┴─────────┴──────────────────┴────────────────┘\r\n\r\n4 rows in set. Elapsed: 0.002 sec. \r\n```","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33825/reactions","total_count":1,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":1},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33825/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33824","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33824/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33824/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33824/events","html_url":"https://github.com/ClickHouse/ClickHouse/pull/33824","id":1109097695,"node_id":"PR_kwDOA5dJV84xUHgZ","number":33824,"title":"Client fault tolerant connection","user":{"login":"DF5HSE","id":55152556,"node_id":"MDQ6VXNlcjU1MTUyNTU2","avatar_url":"https://avatars.githubusercontent.com/u/55152556?v=4","gravatar_id":"","url":"https://api.github.com/users/DF5HSE","html_url":"https://github.com/DF5HSE","followers_url":"https://api.github.com/users/DF5HSE/followers","following_url":"https://api.github.com/users/DF5HSE/following{/other_user}","gists_url":"https://api.github.com/users/DF5HSE/gists{/gist_id}","starred_url":"https://api.github.com/users/DF5HSE/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DF5HSE/subscriptions","organizations_url":"https://api.github.com/users/DF5HSE/orgs","repos_url":"https://api.github.com/users/DF5HSE/repos","events_url":"https://api.github.com/users/DF5HSE/events{/privacy}","received_events_url":"https://api.github.com/users/DF5HSE/received_events","type":"User","site_admin":false},"labels":[{"id":1309674771,"node_id":"MDU6TGFiZWwxMzA5Njc0Nzcx","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/pr-feature","name":"pr-feature","color":"007700","default":false,"description":"Pull request with new product feature"},{"id":1807683251,"node_id":"MDU6TGFiZWwxODA3NjgzMjUx","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/doc-alert","name":"doc-alert","color":"e51068","default":false,"description":"PR where any documentation work is needed or proceeded"},{"id":3627025164,"node_id":"LA_kwDOA5dJV87YMAMM","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/can%20be%20tested","name":"can be tested","color":"1d76db","default":false,"description":""}],"state":"open","locked":false,"assignee":{"login":"Avogar","id":48961922,"node_id":"MDQ6VXNlcjQ4OTYxOTIy","avatar_url":"https://avatars.githubusercontent.com/u/48961922?v=4","gravatar_id":"","url":"https://api.github.com/users/Avogar","html_url":"https://github.com/Avogar","followers_url":"https://api.github.com/users/Avogar/followers","following_url":"https://api.github.com/users/Avogar/following{/other_user}","gists_url":"https://api.github.com/users/Avogar/gists{/gist_id}","starred_url":"https://api.github.com/users/Avogar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Avogar/subscriptions","organizations_url":"https://api.github.com/users/Avogar/orgs","repos_url":"https://api.github.com/users/Avogar/repos","events_url":"https://api.github.com/users/Avogar/events{/privacy}","received_events_url":"https://api.github.com/users/Avogar/received_events","type":"User","site_admin":false},"assignees":[{"login":"Avogar","id":48961922,"node_id":"MDQ6VXNlcjQ4OTYxOTIy","avatar_url":"https://avatars.githubusercontent.com/u/48961922?v=4","gravatar_id":"","url":"https://api.github.com/users/Avogar","html_url":"https://github.com/Avogar","followers_url":"https://api.github.com/users/Avogar/followers","following_url":"https://api.github.com/users/Avogar/following{/other_user}","gists_url":"https://api.github.com/users/Avogar/gists{/gist_id}","starred_url":"https://api.github.com/users/Avogar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Avogar/subscriptions","organizations_url":"https://api.github.com/users/Avogar/orgs","repos_url":"https://api.github.com/users/Avogar/repos","events_url":"https://api.github.com/users/Avogar/events{/privacy}","received_events_url":"https://api.github.com/users/Avogar/received_events","type":"User","site_admin":false}],"milestone":null,"comments":7,"created_at":"2022-01-20T10:02:49Z","updated_at":"2022-01-28T09:57:36Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/pulls/33824","html_url":"https://github.com/ClickHouse/ClickHouse/pull/33824","diff_url":"https://github.com/ClickHouse/ClickHouse/pull/33824.diff","patch_url":"https://github.com/ClickHouse/ClickHouse/pull/33824.patch","merged_at":null},"body":"Changelog category (leave one):\r\n\r\n- New Feature\r\n\r\nChangelog entry (a user-readable short description of the changes that goes to CHANGELOG.md):\r\nParameter `--host` can accept multiple hosts. In case of unavailability of one of them, the client will try to connect to the next one.\r\n\r\nDetailed description / Documentation draft:\r\nFeature accept setting multiple hosts for connection. It approves fault tolerance of connection because when one host isn't alive client can try to connect to another one.\r\n\r\nParameter `--host` can accept multiple addresses. Every address must contain resolvable host and can also contain portif it isn't set, port from `--port` is used). Example of usage:\r\n`clickhouse-client --host host1:1 host2 host3:3 --port 2 --query \"SELECT 1\"`\r\n\r\nWhen multiple addresses are passed to the host argument and the first one is unavailable, the client will try to connect to the next one (round robin approach). In the example, if client can't connect to `host1:1`, it will try to connect to `host2` and port `2`, which is set in `--port`.\r\n\r\n\r\n> Information about CI checks: https://clickhouse.tech/docs/en/development/continuous-integration/\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33824/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33824/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33816","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33816/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33816/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33816/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33816","id":1108959192,"node_id":"I_kwDOA5dJV85CGV_Y","number":33816,"title":"Bogus exception if user name is specified without quotes in table function `remote`","user":{"login":"alexey-milovidov","id":18581488,"node_id":"MDQ6VXNlcjE4NTgxNDg4","avatar_url":"https://avatars.githubusercontent.com/u/18581488?v=4","gravatar_id":"","url":"https://api.github.com/users/alexey-milovidov","html_url":"https://github.com/alexey-milovidov","followers_url":"https://api.github.com/users/alexey-milovidov/followers","following_url":"https://api.github.com/users/alexey-milovidov/following{/other_user}","gists_url":"https://api.github.com/users/alexey-milovidov/gists{/gist_id}","starred_url":"https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexey-milovidov/subscriptions","organizations_url":"https://api.github.com/users/alexey-milovidov/orgs","repos_url":"https://api.github.com/users/alexey-milovidov/repos","events_url":"https://api.github.com/users/alexey-milovidov/events{/privacy}","received_events_url":"https://api.github.com/users/alexey-milovidov/received_events","type":"User","site_admin":false},"labels":[{"id":845247686,"node_id":"MDU6TGFiZWw4NDUyNDc2ODY=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/usability","name":"usability","color":"ebf28c","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-01-20T07:35:24Z","updated_at":"2022-01-20T07:35:24Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"```\r\nmilovidov-desktop :) SELECT count() FROM remoteSecure('gh-api.clickhouse.tech', default, github_events, explorer)\r\n\r\nSELECT count()\r\nFROM remoteSecure('gh-api.clickhouse.tech', default, github_events, explorer)\r\n\r\nQuery id: 86dd3c7d-4b1c-4099-9fd8-57097a5bebed\r\n\r\n\r\n0 rows in set. Elapsed: 0.126 sec. \r\n\r\nReceived exception from server (version 22.2.1):\r\nCode: 516. DB::Exception: Received from localhost:9000. DB::Exception: Received from gh-api.clickhouse.tech:9440. DB::Exception: default: Authentication failed: password is incorrect or there is no user with such name. (AUTHENTICATION_FAILED)\r\n\r\nmilovidov-desktop :) SELECT count() FROM remoteSecure('gh-api.clickhouse.tech', default, github_events, 'explorer')\r\n\r\nSELECT count()\r\nFROM remoteSecure('gh-api.clickhouse.tech', default, github_events, 'explorer')\r\n\r\nQuery id: 7a8006e5-eae1-4b26-9a4b-f021b5933abd\r\n\r\n┌────count()─┐\r\n│ 4254443174 │\r\n└────────────┘\r\n\r\n1 rows in set. Elapsed: 0.115 sec.\r\n```","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33816/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33816/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33815","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33815/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33815/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33815/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33815","id":1108955864,"node_id":"I_kwDOA5dJV85CGVLY","number":33815,"title":"clickhouse-client: replxx: navigation by up/down arrows works bad if query spans more than one page.","user":{"login":"alexey-milovidov","id":18581488,"node_id":"MDQ6VXNlcjE4NTgxNDg4","avatar_url":"https://avatars.githubusercontent.com/u/18581488?v=4","gravatar_id":"","url":"https://api.github.com/users/alexey-milovidov","html_url":"https://github.com/alexey-milovidov","followers_url":"https://api.github.com/users/alexey-milovidov/followers","following_url":"https://api.github.com/users/alexey-milovidov/following{/other_user}","gists_url":"https://api.github.com/users/alexey-milovidov/gists{/gist_id}","starred_url":"https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexey-milovidov/subscriptions","organizations_url":"https://api.github.com/users/alexey-milovidov/orgs","repos_url":"https://api.github.com/users/alexey-milovidov/repos","events_url":"https://api.github.com/users/alexey-milovidov/events{/privacy}","received_events_url":"https://api.github.com/users/alexey-milovidov/received_events","type":"User","site_admin":false},"labels":[{"id":845247686,"node_id":"MDU6TGFiZWw4NDUyNDc2ODY=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/usability","name":"usability","color":"ebf28c","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-01-20T07:30:44Z","updated_at":"2022-01-20T07:30:44Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":null,"reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33815/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33815/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33814","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33814/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33814/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33814/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33814","id":1108933778,"node_id":"I_kwDOA5dJV85CGPyS","number":33814,"title":"const: Poco::Exception. Code: 1000, e.code() = 0, No message received","user":{"login":"DaemonMonch","id":3351861,"node_id":"MDQ6VXNlcjMzNTE4NjE=","avatar_url":"https://avatars.githubusercontent.com/u/3351861?v=4","gravatar_id":"","url":"https://api.github.com/users/DaemonMonch","html_url":"https://github.com/DaemonMonch","followers_url":"https://api.github.com/users/DaemonMonch/followers","following_url":"https://api.github.com/users/DaemonMonch/following{/other_user}","gists_url":"https://api.github.com/users/DaemonMonch/gists{/gist_id}","starred_url":"https://api.github.com/users/DaemonMonch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DaemonMonch/subscriptions","organizations_url":"https://api.github.com/users/DaemonMonch/orgs","repos_url":"https://api.github.com/users/DaemonMonch/repos","events_url":"https://api.github.com/users/DaemonMonch/events{/privacy}","received_events_url":"https://api.github.com/users/DaemonMonch/received_events","type":"User","site_admin":false},"labels":[{"id":386401510,"node_id":"MDU6TGFiZWwzODY0MDE1MTA=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/question","name":"question","color":"bfdadc","default":true,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2022-01-20T07:01:43Z","updated_at":"2022-01-24T01:53:58Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### hi:\r\n\r\n### My clickhouse server version is 21.12.3.32, \r\n### I always get the error log below when  use Replicated*MergeTree , but nothing goes wrong.\r\n### this error happens when fetching parts from another replica  but subsequent retrying will be success ,\r\n### How this happend? is my misconfigure?  thanks!\r\n\r\n\r\n`2022.01.20 14:44:41.470647 [ 104 ] {} <Error> dsp_rpt_cluster.bid_failure_daily (7b0b0c31-4928-4eee-bb0b-0c3149286eee): auto DB::StorageReplicatedMergeTree::processQueueEntry(ReplicatedMergeTreeQueue::SelectedEntryPtr)::(anonymous class)::operator()(DB::StorageReplicatedMergeTree::LogEntryPtr &) const: Poco::Exception. Code: 1000, e.code() = 0, No message received, Stack trace (when copying this message, always include the lines below):\r\n\r\n0. Poco::Net::HTTPResponse::read(std::__1::basic_istream<char, std::__1::char_traits<char> >&) @ 0x16f11bf6 in /usr/bin/clickhouse\r\n1. Poco::Net::HTTPClientSession::receiveResponse(Poco::Net::HTTPResponse&) @ 0x16f06a92 in /usr/bin/clickhouse\r\n2. DB::detail::ReadWriteBufferFromHTTPBase<std::__1::shared_ptr<DB::UpdatablePooledSession> >::call(Poco::URI, Poco::Net::HTTPResponse&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) @ 0x139c1ee6 in /usr/bin/clickhouse\r\n3. DB::detail::ReadWriteBufferFromHTTPBase<std::__1::shared_ptr<DB::UpdatablePooledSession> >::initialize() @ 0x139bdf73 in /usr/bin/clickhouse\r\n4. DB::detail::ReadWriteBufferFromHTTPBase<std::__1::shared_ptr<DB::UpdatablePooledSession> >::ReadWriteBufferFromHTTPBase(std::__1::shared_ptr<DB::UpdatablePooledSession>, Poco::URI, Poco::Net::HTTPBasicCredentials const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::function<void (std::__1::basic_ostream<char, std::__1::char_traits<char> >&)>, unsigned long, DB::ReadSettings const&, std::__1::vector<std::__1::tuple<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::tuple<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >, DB::detail::ReadWriteBufferFromHTTPBase<std::__1::shared_ptr<DB::UpdatablePooledSession> >::Range, DB::RemoteHostFilter const&, bool, bool) @ 0x139bc012 in /usr/bin/clickhouse\r\n5. DB::PooledReadWriteBufferFromHTTP::PooledReadWriteBufferFromHTTP(Poco::URI, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::function<void (std::__1::basic_ostream<char, std::__1::char_traits<char> >&)>, DB::ConnectionTimeouts const&, Poco::Net::HTTPBasicCredentials const&, unsigned long, unsigned long, unsigned long) @ 0x139b4997 in /usr/bin/clickhouse\r\n6. DB::DataPartsExchange::Fetcher::fetchPart(std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, DB::ConnectionTimeouts const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::shared_ptr<DB::Throttler>, bool, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::optional<DB::CurrentlySubmergingEmergingTagger>*, bool, std::__1::shared_ptr<DB::IDisk>) @ 0x139b1bc2 in /usr/bin/clickhouse\r\n7. ? @ 0x1384c7ad in /usr/bin/clickhouse\r\n8. DB::StorageReplicatedMergeTree::fetchPart(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool, unsigned long, std::__1::shared_ptr<zkutil::ZooKeeper>) @ 0x137aa386 in /usr/bin/clickhouse\r\n9. DB::StorageReplicatedMergeTree::executeFetch(DB::ReplicatedMergeTreeLogEntry&) @ 0x1379cd34 in /usr/bin/clickhouse\r\n10. DB::StorageReplicatedMergeTree::executeLogEntry(DB::ReplicatedMergeTreeLogEntry&) @ 0x1378c1cd in /usr/bin/clickhouse\r\n11. ? @ 0x1384a33f in /usr/bin/clickhouse\r\n12. DB::ReplicatedMergeTreeQueue::processEntry(std::__1::function<std::__1::shared_ptr<zkutil::ZooKeeper> ()>, std::__1::shared_ptr<DB::ReplicatedMergeTreeLogEntry>&, std::__1::function<bool (std::__1::shared_ptr<DB::ReplicatedMergeTreeLogEntry>&)>) @ 0x13c57665 in /usr/bin/clickhouse\r\n13. DB::StorageReplicatedMergeTree::processQueueEntry(std::__1::shared_ptr<DB::ReplicatedMergeTreeQueue::SelectedEntry>) @ 0x137ccaf3 in /usr/bin/clickhouse\r\n14. DB::ExecutableLambdaAdapter::executeStep() @ 0x1384ac31 in /usr/bin/clickhouse\r\n15. DB::MergeTreeBackgroundExecutor<DB::OrdinaryRuntimeQueue>::routine(std::__1::shared_ptr<DB::TaskRuntimeData>) @ 0xa1f377a in /usr/bin/clickhouse\r\n16. DB::MergeTreeBackgroundExecutor<DB::OrdinaryRuntimeQueue>::threadFunction() @ 0xa1f3635 in /usr/bin/clickhouse\r\n17. ThreadPoolImpl<ThreadFromGlobalPool>::worker(std::__1::__list_iterator<ThreadFromGlobalPool, void*>) @ 0xa25cfaa in /usr/bin/clickhouse\r\n18. ThreadFromGlobalPool::ThreadFromGlobalPool<void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>(void&&, void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()&&...)::'lambda'()::operator()() @ 0xa25edc4 in /usr/bin/clickhouse\r\n19. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0xa25a3b7 in /usr/bin/clickhouse`","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33814/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33814/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33812","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33812/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33812/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33812/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33812","id":1108898098,"node_id":"I_kwDOA5dJV85CGHEy","number":33812,"title":"Table function(s) to parse formatted data from string literal.","user":{"login":"alexey-milovidov","id":18581488,"node_id":"MDQ6VXNlcjE4NTgxNDg4","avatar_url":"https://avatars.githubusercontent.com/u/18581488?v=4","gravatar_id":"","url":"https://api.github.com/users/alexey-milovidov","html_url":"https://github.com/alexey-milovidov","followers_url":"https://api.github.com/users/alexey-milovidov/followers","following_url":"https://api.github.com/users/alexey-milovidov/following{/other_user}","gists_url":"https://api.github.com/users/alexey-milovidov/gists{/gist_id}","starred_url":"https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexey-milovidov/subscriptions","organizations_url":"https://api.github.com/users/alexey-milovidov/orgs","repos_url":"https://api.github.com/users/alexey-milovidov/repos","events_url":"https://api.github.com/users/alexey-milovidov/events{/privacy}","received_events_url":"https://api.github.com/users/alexey-milovidov/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null}],"state":"open","locked":false,"assignee":{"login":"Avogar","id":48961922,"node_id":"MDQ6VXNlcjQ4OTYxOTIy","avatar_url":"https://avatars.githubusercontent.com/u/48961922?v=4","gravatar_id":"","url":"https://api.github.com/users/Avogar","html_url":"https://github.com/Avogar","followers_url":"https://api.github.com/users/Avogar/followers","following_url":"https://api.github.com/users/Avogar/following{/other_user}","gists_url":"https://api.github.com/users/Avogar/gists{/gist_id}","starred_url":"https://api.github.com/users/Avogar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Avogar/subscriptions","organizations_url":"https://api.github.com/users/Avogar/orgs","repos_url":"https://api.github.com/users/Avogar/repos","events_url":"https://api.github.com/users/Avogar/events{/privacy}","received_events_url":"https://api.github.com/users/Avogar/received_events","type":"User","site_admin":false},"assignees":[{"login":"Avogar","id":48961922,"node_id":"MDQ6VXNlcjQ4OTYxOTIy","avatar_url":"https://avatars.githubusercontent.com/u/48961922?v=4","gravatar_id":"","url":"https://api.github.com/users/Avogar","html_url":"https://github.com/Avogar","followers_url":"https://api.github.com/users/Avogar/followers","following_url":"https://api.github.com/users/Avogar/following{/other_user}","gists_url":"https://api.github.com/users/Avogar/gists{/gist_id}","starred_url":"https://api.github.com/users/Avogar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Avogar/subscriptions","organizations_url":"https://api.github.com/users/Avogar/orgs","repos_url":"https://api.github.com/users/Avogar/repos","events_url":"https://api.github.com/users/Avogar/events{/privacy}","received_events_url":"https://api.github.com/users/Avogar/received_events","type":"User","site_admin":false}],"milestone":null,"comments":1,"created_at":"2022-01-20T06:04:41Z","updated_at":"2022-01-28T09:17:54Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"**Proposal**\r\n\r\n```\r\nSELECT * FROM data(JSONEachRow, \r\n$$\r\n{\"a\": \"Hello\", \"b\": 111}\r\n{\"a\": \"World\", \"b\": 123}\r\n$$)\r\n```\r\n\r\nor\r\n\r\n```\r\nSELECT * FROM format(JSONEachRow, \r\n$$\r\n{\"a\": \"Hello\", \"b\": 111}\r\n{\"a\": \"World\", \"b\": 123}\r\n$$)\r\n```\r\n\r\nor\r\n\r\n```\r\nSELECT * FROM JSONEachRow(\r\n$$\r\n{\"a\": \"Hello\", \"b\": 111}\r\n{\"a\": \"World\", \"b\": 123}\r\n$$)\r\n```\r\n\r\ndid not decide yet.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33812/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33812/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33811","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33811/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33811/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33811/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33811","id":1108895608,"node_id":"I_kwDOA5dJV85CGGd4","number":33811,"title":"Schema inference for table function `values`.","user":{"login":"alexey-milovidov","id":18581488,"node_id":"MDQ6VXNlcjE4NTgxNDg4","avatar_url":"https://avatars.githubusercontent.com/u/18581488?v=4","gravatar_id":"","url":"https://api.github.com/users/alexey-milovidov","html_url":"https://github.com/alexey-milovidov","followers_url":"https://api.github.com/users/alexey-milovidov/followers","following_url":"https://api.github.com/users/alexey-milovidov/following{/other_user}","gists_url":"https://api.github.com/users/alexey-milovidov/gists{/gist_id}","starred_url":"https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexey-milovidov/subscriptions","organizations_url":"https://api.github.com/users/alexey-milovidov/orgs","repos_url":"https://api.github.com/users/alexey-milovidov/repos","events_url":"https://api.github.com/users/alexey-milovidov/events{/privacy}","received_events_url":"https://api.github.com/users/alexey-milovidov/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null}],"state":"open","locked":false,"assignee":{"login":"Avogar","id":48961922,"node_id":"MDQ6VXNlcjQ4OTYxOTIy","avatar_url":"https://avatars.githubusercontent.com/u/48961922?v=4","gravatar_id":"","url":"https://api.github.com/users/Avogar","html_url":"https://github.com/Avogar","followers_url":"https://api.github.com/users/Avogar/followers","following_url":"https://api.github.com/users/Avogar/following{/other_user}","gists_url":"https://api.github.com/users/Avogar/gists{/gist_id}","starred_url":"https://api.github.com/users/Avogar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Avogar/subscriptions","organizations_url":"https://api.github.com/users/Avogar/orgs","repos_url":"https://api.github.com/users/Avogar/repos","events_url":"https://api.github.com/users/Avogar/events{/privacy}","received_events_url":"https://api.github.com/users/Avogar/received_events","type":"User","site_admin":false},"assignees":[{"login":"Avogar","id":48961922,"node_id":"MDQ6VXNlcjQ4OTYxOTIy","avatar_url":"https://avatars.githubusercontent.com/u/48961922?v=4","gravatar_id":"","url":"https://api.github.com/users/Avogar","html_url":"https://github.com/Avogar","followers_url":"https://api.github.com/users/Avogar/followers","following_url":"https://api.github.com/users/Avogar/following{/other_user}","gists_url":"https://api.github.com/users/Avogar/gists{/gist_id}","starred_url":"https://api.github.com/users/Avogar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Avogar/subscriptions","organizations_url":"https://api.github.com/users/Avogar/orgs","repos_url":"https://api.github.com/users/Avogar/repos","events_url":"https://api.github.com/users/Avogar/events{/privacy}","received_events_url":"https://api.github.com/users/Avogar/received_events","type":"User","site_admin":false}],"milestone":null,"comments":1,"created_at":"2022-01-20T06:00:24Z","updated_at":"2022-01-21T02:49:01Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"```\r\nmilovidov-desktop :) SELECT * FROM VALUES('a UInt8, b UInt8', (1, 2), (3, 4))\r\n\r\nSELECT *\r\nFROM VALUES('a UInt8, b UInt8', (1, 2), (3, 4))\r\n\r\nQuery id: a377da6f-64a4-408f-a688-123ceb628236\r\n\r\n┌─a─┬─b─┐\r\n│ 1 │ 2 │\r\n│ 3 │ 4 │\r\n└───┴───┘\r\n\r\n2 rows in set. Elapsed: 0.001 sec. \r\n\r\nmilovidov-desktop :) SELECT * FROM VALUES((1, 2), (3, 4))\r\n\r\nSELECT *\r\nFROM VALUES((1, 2), (3, 4))\r\n\r\nQuery id: 28a73a8d-87e7-49ac-bebd-386d76e0b75e\r\n\r\n\r\n0 rows in set. Elapsed: 0.000 sec. \r\n\r\nReceived exception:\r\nCode: 170. DB::Exception: Bad get: has Tuple, requested String. (BAD_GET)\r\n```","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33811/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33811/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33810","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33810/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33810/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33810/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33810","id":1108891769,"node_id":"I_kwDOA5dJV85CGFh5","number":33810,"title":"File/S3/HDFS as Database engine","user":{"login":"alexey-milovidov","id":18581488,"node_id":"MDQ6VXNlcjE4NTgxNDg4","avatar_url":"https://avatars.githubusercontent.com/u/18581488?v=4","gravatar_id":"","url":"https://api.github.com/users/alexey-milovidov","html_url":"https://github.com/alexey-milovidov","followers_url":"https://api.github.com/users/alexey-milovidov/followers","following_url":"https://api.github.com/users/alexey-milovidov/following{/other_user}","gists_url":"https://api.github.com/users/alexey-milovidov/gists{/gist_id}","starred_url":"https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexey-milovidov/subscriptions","organizations_url":"https://api.github.com/users/alexey-milovidov/orgs","repos_url":"https://api.github.com/users/alexey-milovidov/repos","events_url":"https://api.github.com/users/alexey-milovidov/events{/privacy}","received_events_url":"https://api.github.com/users/alexey-milovidov/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null}],"state":"open","locked":false,"assignee":{"login":"Avogar","id":48961922,"node_id":"MDQ6VXNlcjQ4OTYxOTIy","avatar_url":"https://avatars.githubusercontent.com/u/48961922?v=4","gravatar_id":"","url":"https://api.github.com/users/Avogar","html_url":"https://github.com/Avogar","followers_url":"https://api.github.com/users/Avogar/followers","following_url":"https://api.github.com/users/Avogar/following{/other_user}","gists_url":"https://api.github.com/users/Avogar/gists{/gist_id}","starred_url":"https://api.github.com/users/Avogar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Avogar/subscriptions","organizations_url":"https://api.github.com/users/Avogar/orgs","repos_url":"https://api.github.com/users/Avogar/repos","events_url":"https://api.github.com/users/Avogar/events{/privacy}","received_events_url":"https://api.github.com/users/Avogar/received_events","type":"User","site_admin":false},"assignees":[{"login":"Avogar","id":48961922,"node_id":"MDQ6VXNlcjQ4OTYxOTIy","avatar_url":"https://avatars.githubusercontent.com/u/48961922?v=4","gravatar_id":"","url":"https://api.github.com/users/Avogar","html_url":"https://github.com/Avogar","followers_url":"https://api.github.com/users/Avogar/followers","following_url":"https://api.github.com/users/Avogar/following{/other_user}","gists_url":"https://api.github.com/users/Avogar/gists{/gist_id}","starred_url":"https://api.github.com/users/Avogar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Avogar/subscriptions","organizations_url":"https://api.github.com/users/Avogar/orgs","repos_url":"https://api.github.com/users/Avogar/repos","events_url":"https://api.github.com/users/Avogar/events{/privacy}","received_events_url":"https://api.github.com/users/Avogar/received_events","type":"User","site_admin":false}],"milestone":null,"comments":0,"created_at":"2022-01-20T05:52:43Z","updated_at":"2022-01-20T10:24:28Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"**Use case**\r\n\r\nProcess a bunch of files in the most intuitive way.\r\n\r\n**Describe the solution you'd like**\r\n\r\nAfter #32455 is implemented, the format and structure of remote datasets is autodetected.\r\nSo, we can write `SELECT * FROM url('https://datasets.clickhouse.com/github_events_v2.native.xz')` without specifying data format or data structure.\r\n\r\nNow let's look at the directory with files as a database.\r\nIt will allow to write something like:\r\n\r\n```\r\nSELECT * FROM \"data.parquet\"\r\n```\r\n\r\nThe database engine should do lazy listing of the files.\r\nThe table structure should also be obtained lazily to avoid slow SHOW TABLES.\r\n\r\nDatabase engine can take the following parameters:\r\n- prefix for files;\r\n- filter for filenames / file paths, optional (a question - should it be regexp or glob style);\r\n- should it do recursive directory traversal or look at the immediate directory only (the latter by default);\r\n- maybe a rule to glue some files together by pattern to represent them as a single table;\r\n- maybe a regexp to transform names;\r\n- default format if it is not autodetected, optional (skip unknown by default);\r\n\r\n**Caveats**\r\n\r\n`SELECT * FROM system.tables` without filters will become slower if these types of databases exist.\r\n\r\n**Additional ideas**\r\n\r\nWe can introduce the notion of overlay databases (one database that can shadow tables from another database) and add File database to `clickhouse-local` to be available under default database.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33810/reactions","total_count":1,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":1,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33810/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33805","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33805/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33805/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33805/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33805","id":1108686924,"node_id":"I_kwDOA5dJV85CFThM","number":33805,"title":"Maintain list of trusted servers for access control","user":{"login":"zhicwu","id":4270380,"node_id":"MDQ6VXNlcjQyNzAzODA=","avatar_url":"https://avatars.githubusercontent.com/u/4270380?v=4","gravatar_id":"","url":"https://api.github.com/users/zhicwu","html_url":"https://github.com/zhicwu","followers_url":"https://api.github.com/users/zhicwu/followers","following_url":"https://api.github.com/users/zhicwu/following{/other_user}","gists_url":"https://api.github.com/users/zhicwu/gists{/gist_id}","starred_url":"https://api.github.com/users/zhicwu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zhicwu/subscriptions","organizations_url":"https://api.github.com/users/zhicwu/orgs","repos_url":"https://api.github.com/users/zhicwu/repos","events_url":"https://api.github.com/users/zhicwu/events{/privacy}","received_events_url":"https://api.github.com/users/zhicwu/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2022-01-20T00:10:21Z","updated_at":"2022-01-21T02:59:48Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Sorry if this has been discussed before but I didn't find a similar topic on github :p\r\n\r\nAs of now, if a user has the privilege to use `jdbc` table function, she/he can access all declared external datasources, read or write. It's fine for a development/testing environment but definitely not for production. Does it make sense to enhance ClickHouse to maintain list of trusted servers or names(alias of a server or an endpoint) to tighten control of accessing external datasources via table functions like `url`, `remote`, `mysql`, and `jdbc` etc.? Whitelist and blacklist can be used to simplify configuration. For example:\r\n\r\n1. create a server\r\n  ```sql\r\n  CREATE SERVER bridge1 HOST IP '127.0.0.1' COMMENT 'local testing';\r\n  ```\r\n2. grant user access\r\n  ```sql\r\n  GRANT ALL ON SERVER bridge1 TO john;\r\n  ```\r\n3. access remote server\r\n  ```sql\r\n  -- extract server from the URL\r\n  -- and then check against ACL to see if john is allowed to access the server\r\n  select * from url('https://127.0.0.1/some/path?param=value', CSV, 'value String')\r\n  ```  \r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33805/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33805/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33803","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33803/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33803/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33803/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33803","id":1108675156,"node_id":"I_kwDOA5dJV85CFQpU","number":33803,"title":"Pass execution context to table functions for accessing external datasource","user":{"login":"zhicwu","id":4270380,"node_id":"MDQ6VXNlcjQyNzAzODA=","avatar_url":"https://avatars.githubusercontent.com/u/4270380?v=4","gravatar_id":"","url":"https://api.github.com/users/zhicwu","html_url":"https://github.com/zhicwu","followers_url":"https://api.github.com/users/zhicwu/followers","following_url":"https://api.github.com/users/zhicwu/following{/other_user}","gists_url":"https://api.github.com/users/zhicwu/gists{/gist_id}","starred_url":"https://api.github.com/users/zhicwu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zhicwu/subscriptions","organizations_url":"https://api.github.com/users/zhicwu/orgs","repos_url":"https://api.github.com/users/zhicwu/repos","events_url":"https://api.github.com/users/zhicwu/events{/privacy}","received_events_url":"https://api.github.com/users/zhicwu/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2022-01-19T23:50:57Z","updated_at":"2022-01-20T03:08:21Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Does it make sense to pass execution context to table functions for accessing external datasource?\r\n\r\nTaking `url` and `jdbc` as example, since they're based on http protocol, it would be great if ClickHouse can put below headers in **request**. With that, extension like JDBC bridge can implement role-based access control and detect recursive query like mentioned in #33802. \r\n\r\n| Header | Mandatory | Description |\r\n| ------- | ----------- | ----------- |\r\n| User-Agent | N | server/lib + version |\r\n| X-ClickHouse-Server-Display-Name | N | server display name |\r\n| X-ClickHouse-Format | N | different default value for different table function |\r\n| X-ClickHouse-Query-Id | Y | query id |\r\n| X-ClickHouse-User | Y | user who issued the query on ClickHouse, it could be user name, id or even a hash for security reason |\r\n| X-ClickHouse-Timezone | Y | server time zone |\r\n| X-ClickHouse-Version | N |server version |\r\n| X-ClickHouse-Revision | N | server revision |\r\n\r\nNote: more headers can be added for tracing when needed.\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33803/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33803/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33802","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33802/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33802/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33802/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33802","id":1108664264,"node_id":"I_kwDOA5dJV85CFN_I","number":33802,"title":"Prevent infinite loop caused by recursive query","user":{"login":"zhicwu","id":4270380,"node_id":"MDQ6VXNlcjQyNzAzODA=","avatar_url":"https://avatars.githubusercontent.com/u/4270380?v=4","gravatar_id":"","url":"https://api.github.com/users/zhicwu","html_url":"https://github.com/zhicwu","followers_url":"https://api.github.com/users/zhicwu/followers","following_url":"https://api.github.com/users/zhicwu/following{/other_user}","gists_url":"https://api.github.com/users/zhicwu/gists{/gist_id}","starred_url":"https://api.github.com/users/zhicwu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zhicwu/subscriptions","organizations_url":"https://api.github.com/users/zhicwu/orgs","repos_url":"https://api.github.com/users/zhicwu/repos","events_url":"https://api.github.com/users/zhicwu/events{/privacy}","received_events_url":"https://api.github.com/users/zhicwu/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":1507886722,"node_id":"MDU6TGFiZWwxNTA3ODg2NzIy","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/st-discussion","name":"st-discussion","color":"e5b890","default":false,"description":"The story requires discussion /research / expert help / design & decomposition before will be taken"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2022-01-19T23:31:07Z","updated_at":"2022-01-20T03:06:42Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Below query will end up with error `Too many simultaneous queries. Maximum: 100 (TOO_MANY_SIMULTANEOUS_QUERIES)`. I think using different table function like jdbc or database like Apache Drill or Trino etc. have similar issue. It would be great if the infinite loop can be detected and stopped right before the second run.\r\n\r\n```sql\r\nuse default;\r\ndrop table if exists url_self;\r\ncreate table url_self (s String)\r\nengine=URL('http://localhost:8123/?query=select%20*%20from%20url_self', CSV);\r\n-- Code: 86. DB::Exception: Received error from remote server\r\nselect * from url_self;\r\n```\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33802/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33802/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33801","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33801/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33801/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33801/events","html_url":"https://github.com/ClickHouse/ClickHouse/pull/33801","id":1108561424,"node_id":"PR_kwDOA5dJV84xSY4L","number":33801,"title":"materialized postgresql: throw on detach permanently","user":{"login":"kssenii","id":54203879,"node_id":"MDQ6VXNlcjU0MjAzODc5","avatar_url":"https://avatars.githubusercontent.com/u/54203879?v=4","gravatar_id":"","url":"https://api.github.com/users/kssenii","html_url":"https://github.com/kssenii","followers_url":"https://api.github.com/users/kssenii/followers","following_url":"https://api.github.com/users/kssenii/following{/other_user}","gists_url":"https://api.github.com/users/kssenii/gists{/gist_id}","starred_url":"https://api.github.com/users/kssenii/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kssenii/subscriptions","organizations_url":"https://api.github.com/users/kssenii/orgs","repos_url":"https://api.github.com/users/kssenii/repos","events_url":"https://api.github.com/users/kssenii/events{/privacy}","received_events_url":"https://api.github.com/users/kssenii/received_events","type":"User","site_admin":false},"labels":[{"id":1876999755,"node_id":"MDU6TGFiZWwxODc2OTk5NzU1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/pr-not-for-changelog","name":"pr-not-for-changelog","color":"007700","default":false,"description":"This PR should not be mentioned in the changelog"}],"state":"open","locked":false,"assignee":{"login":"evillique","id":43110995,"node_id":"MDQ6VXNlcjQzMTEwOTk1","avatar_url":"https://avatars.githubusercontent.com/u/43110995?v=4","gravatar_id":"","url":"https://api.github.com/users/evillique","html_url":"https://github.com/evillique","followers_url":"https://api.github.com/users/evillique/followers","following_url":"https://api.github.com/users/evillique/following{/other_user}","gists_url":"https://api.github.com/users/evillique/gists{/gist_id}","starred_url":"https://api.github.com/users/evillique/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/evillique/subscriptions","organizations_url":"https://api.github.com/users/evillique/orgs","repos_url":"https://api.github.com/users/evillique/repos","events_url":"https://api.github.com/users/evillique/events{/privacy}","received_events_url":"https://api.github.com/users/evillique/received_events","type":"User","site_admin":false},"assignees":[{"login":"evillique","id":43110995,"node_id":"MDQ6VXNlcjQzMTEwOTk1","avatar_url":"https://avatars.githubusercontent.com/u/43110995?v=4","gravatar_id":"","url":"https://api.github.com/users/evillique","html_url":"https://github.com/evillique","followers_url":"https://api.github.com/users/evillique/followers","following_url":"https://api.github.com/users/evillique/following{/other_user}","gists_url":"https://api.github.com/users/evillique/gists{/gist_id}","starred_url":"https://api.github.com/users/evillique/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/evillique/subscriptions","organizations_url":"https://api.github.com/users/evillique/orgs","repos_url":"https://api.github.com/users/evillique/repos","events_url":"https://api.github.com/users/evillique/events{/privacy}","received_events_url":"https://api.github.com/users/evillique/received_events","type":"User","site_admin":false}],"milestone":null,"comments":0,"created_at":"2022-01-19T21:06:14Z","updated_at":"2022-01-20T10:09:53Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/pulls/33801","html_url":"https://github.com/ClickHouse/ClickHouse/pull/33801","diff_url":"https://github.com/ClickHouse/ClickHouse/pull/33801.diff","patch_url":"https://github.com/ClickHouse/ClickHouse/pull/33801.patch","merged_at":null},"body":"Changelog category (leave one):\r\n- Not for changelog (changelog entry is not required)\r\n\r\n\r\nChangelog entry (a user-readable short description of the changes that goes to CHANGELOG.md):\r\nForbid DETACH PERMANENTLY for MaterializedPostgreSQL. Permanent removal of tables from replication is done with just \r\nDETACH. Closes https://github.com/ClickHouse/ClickHouse/issues/33800.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33801/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33801/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33800","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33800/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33800/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33800/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33800","id":1108491945,"node_id":"I_kwDOA5dJV85CEj6p","number":33800,"title":"How to remove a table from the list of available tables in MaterializedPostgreSQL?","user":{"login":"Olga-par","id":75472069,"node_id":"MDQ6VXNlcjc1NDcyMDY5","avatar_url":"https://avatars.githubusercontent.com/u/75472069?v=4","gravatar_id":"","url":"https://api.github.com/users/Olga-par","html_url":"https://github.com/Olga-par","followers_url":"https://api.github.com/users/Olga-par/followers","following_url":"https://api.github.com/users/Olga-par/following{/other_user}","gists_url":"https://api.github.com/users/Olga-par/gists{/gist_id}","starred_url":"https://api.github.com/users/Olga-par/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Olga-par/subscriptions","organizations_url":"https://api.github.com/users/Olga-par/orgs","repos_url":"https://api.github.com/users/Olga-par/repos","events_url":"https://api.github.com/users/Olga-par/events{/privacy}","received_events_url":"https://api.github.com/users/Olga-par/received_events","type":"User","site_admin":false},"labels":[{"id":386401510,"node_id":"MDU6TGFiZWwzODY0MDE1MTA=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/question","name":"question","color":"bfdadc","default":true,"description":""},{"id":1669010018,"node_id":"MDU6TGFiZWwxNjY5MDEwMDE4","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/question-answered","name":"question-answered","color":"bfdadc","default":false,"description":""}],"state":"open","locked":false,"assignee":{"login":"kssenii","id":54203879,"node_id":"MDQ6VXNlcjU0MjAzODc5","avatar_url":"https://avatars.githubusercontent.com/u/54203879?v=4","gravatar_id":"","url":"https://api.github.com/users/kssenii","html_url":"https://github.com/kssenii","followers_url":"https://api.github.com/users/kssenii/followers","following_url":"https://api.github.com/users/kssenii/following{/other_user}","gists_url":"https://api.github.com/users/kssenii/gists{/gist_id}","starred_url":"https://api.github.com/users/kssenii/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kssenii/subscriptions","organizations_url":"https://api.github.com/users/kssenii/orgs","repos_url":"https://api.github.com/users/kssenii/repos","events_url":"https://api.github.com/users/kssenii/events{/privacy}","received_events_url":"https://api.github.com/users/kssenii/received_events","type":"User","site_admin":false},"assignees":[{"login":"kssenii","id":54203879,"node_id":"MDQ6VXNlcjU0MjAzODc5","avatar_url":"https://avatars.githubusercontent.com/u/54203879?v=4","gravatar_id":"","url":"https://api.github.com/users/kssenii","html_url":"https://github.com/kssenii","followers_url":"https://api.github.com/users/kssenii/followers","following_url":"https://api.github.com/users/kssenii/following{/other_user}","gists_url":"https://api.github.com/users/kssenii/gists{/gist_id}","starred_url":"https://api.github.com/users/kssenii/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kssenii/subscriptions","organizations_url":"https://api.github.com/users/kssenii/orgs","repos_url":"https://api.github.com/users/kssenii/repos","events_url":"https://api.github.com/users/kssenii/events{/privacy}","received_events_url":"https://api.github.com/users/kssenii/received_events","type":"User","site_admin":false}],"milestone":null,"comments":6,"created_at":"2022-01-19T19:47:19Z","updated_at":"2022-01-20T12:42:03Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Hello.\r\n\r\nI have some problem with removing tables from MaterializedPostgreSQL.\r\nI ran command: \r\n       detach table <name_table> PERMANENTLY;\r\nWhen I performed select * from <name_table> than it's ok.  The message appears: Table <name_table> doesn't exist. \r\nBut when i view the list of tables in dbeaver in replicated database i see this table.\r\nI need recreate  MaterializedPostgreSQL database without this table in order to not view this table in this database?\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33800/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33800/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33799","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33799/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33799/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33799/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33799","id":1108444725,"node_id":"I_kwDOA5dJV85CEYY1","number":33799,"title":"Create profile setting for group","user":{"login":"alexsubota","id":4305175,"node_id":"MDQ6VXNlcjQzMDUxNzU=","avatar_url":"https://avatars.githubusercontent.com/u/4305175?v=4","gravatar_id":"","url":"https://api.github.com/users/alexsubota","html_url":"https://github.com/alexsubota","followers_url":"https://api.github.com/users/alexsubota/followers","following_url":"https://api.github.com/users/alexsubota/following{/other_user}","gists_url":"https://api.github.com/users/alexsubota/gists{/gist_id}","starred_url":"https://api.github.com/users/alexsubota/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexsubota/subscriptions","organizations_url":"https://api.github.com/users/alexsubota/orgs","repos_url":"https://api.github.com/users/alexsubota/repos","events_url":"https://api.github.com/users/alexsubota/events{/privacy}","received_events_url":"https://api.github.com/users/alexsubota/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2022-01-19T18:52:15Z","updated_at":"2022-01-19T21:19:34Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Right now we have profile setting for users.\r\nI suggest to create profile setting for group.\r\nFor example, i want to split resoursec of database for 2 group of users, and set max_memory_usage = 50% of ram.\r\nWhen one of group will run too many queries and will exceed the limit, all queries of this group will failed (or smth like that), but it will not affect queries of second group, and all queries of second group will still works","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33799/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33799/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33798","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33798/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33798/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33798/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33798","id":1108389895,"node_id":"I_kwDOA5dJV85CELAH","number":33798,"title":"optimize_functions_to_subcolumns count(null_column) doesn't use alias for column name","user":{"login":"UnamedRus","id":9449405,"node_id":"MDQ6VXNlcjk0NDk0MDU=","avatar_url":"https://avatars.githubusercontent.com/u/9449405?v=4","gravatar_id":"","url":"https://api.github.com/users/UnamedRus","html_url":"https://github.com/UnamedRus","followers_url":"https://api.github.com/users/UnamedRus/followers","following_url":"https://api.github.com/users/UnamedRus/following{/other_user}","gists_url":"https://api.github.com/users/UnamedRus/gists{/gist_id}","starred_url":"https://api.github.com/users/UnamedRus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/UnamedRus/subscriptions","organizations_url":"https://api.github.com/users/UnamedRus/orgs","repos_url":"https://api.github.com/users/UnamedRus/repos","events_url":"https://api.github.com/users/UnamedRus/events{/privacy}","received_events_url":"https://api.github.com/users/UnamedRus/received_events","type":"User","site_admin":false},"labels":[{"id":386401505,"node_id":"MDU6TGFiZWwzODY0MDE1MDU=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/bug","name":"bug","color":"ee0701","default":true,"description":"Confirmed user-visible misbehaviour in official release"},{"id":1401777979,"node_id":"MDU6TGFiZWwxNDAxNzc3OTc5","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-optimizers","name":"comp-optimizers","color":"b5bcff","default":false,"description":"Query optimizations"}],"state":"open","locked":false,"assignee":{"login":"CurtizJ","id":20361854,"node_id":"MDQ6VXNlcjIwMzYxODU0","avatar_url":"https://avatars.githubusercontent.com/u/20361854?v=4","gravatar_id":"","url":"https://api.github.com/users/CurtizJ","html_url":"https://github.com/CurtizJ","followers_url":"https://api.github.com/users/CurtizJ/followers","following_url":"https://api.github.com/users/CurtizJ/following{/other_user}","gists_url":"https://api.github.com/users/CurtizJ/gists{/gist_id}","starred_url":"https://api.github.com/users/CurtizJ/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/CurtizJ/subscriptions","organizations_url":"https://api.github.com/users/CurtizJ/orgs","repos_url":"https://api.github.com/users/CurtizJ/repos","events_url":"https://api.github.com/users/CurtizJ/events{/privacy}","received_events_url":"https://api.github.com/users/CurtizJ/received_events","type":"User","site_admin":false},"assignees":[{"login":"CurtizJ","id":20361854,"node_id":"MDQ6VXNlcjIwMzYxODU0","avatar_url":"https://avatars.githubusercontent.com/u/20361854?v=4","gravatar_id":"","url":"https://api.github.com/users/CurtizJ","html_url":"https://github.com/CurtizJ","followers_url":"https://api.github.com/users/CurtizJ/followers","following_url":"https://api.github.com/users/CurtizJ/following{/other_user}","gists_url":"https://api.github.com/users/CurtizJ/gists{/gist_id}","starred_url":"https://api.github.com/users/CurtizJ/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/CurtizJ/subscriptions","organizations_url":"https://api.github.com/users/CurtizJ/orgs","repos_url":"https://api.github.com/users/CurtizJ/repos","events_url":"https://api.github.com/users/CurtizJ/events{/privacy}","received_events_url":"https://api.github.com/users/CurtizJ/received_events","type":"User","site_admin":false}],"milestone":null,"comments":0,"created_at":"2022-01-19T17:50:30Z","updated_at":"2022-01-19T18:07:55Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"**Describe what's wrong**\r\n\r\nIn case of using `optimize_functions_to_subcolumns` ClickHouse doesn't use alias for column name.\r\n\r\n**How to reproduce**\r\n\r\nClickHouse 21.13\r\n\r\n```\r\nCREATE TABLE test\r\n(\r\n    `key` UInt32,\r\n    `value` Nullable(UInt32)\r\n)\r\nENGINE = MergeTree\r\nORDER BY key\r\n\r\nINSERT INTO test SELECT\r\n    number,\r\n    NULL\r\nFROM numbers(10000000);\r\n\r\n\r\nSELECT count(value) AS a\r\nFROM test\r\nSETTINGS optimize_functions_to_subcolumns = 0\r\n\r\n┌─a─┐\r\n│ 0 │\r\n└───┘\r\n\r\n1 rows in set. Elapsed: 0.028 sec. Processed 32.50 million rows, 162.52 MB (1.15 billion rows/s., 5.74 GB/s.)\r\n\r\nSELECT count(value) AS a\r\nFROM test\r\nSETTINGS optimize_functions_to_subcolumns = 1\r\n\r\n┌─sum(not(value.null))─┐\r\n│                    0 │\r\n└──────────────────────┘\r\n\r\n1 rows in set. Elapsed: 0.032 sec. Processed 32.50 million rows, 32.50 MB (1.00 billion rows/s., 1.00 GB/s.)\r\n```\r\n\r\n**Expected behavior**\r\n\r\nClickHouse should use alias name.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33798/reactions","total_count":2,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33798/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33795","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33795/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33795/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33795/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33795","id":1108352962,"node_id":"I_kwDOA5dJV85CEB_C","number":33795,"title":"MATERIALIZE COLUMN FINAL ","user":{"login":"den-crane","id":19737682,"node_id":"MDQ6VXNlcjE5NzM3Njgy","avatar_url":"https://avatars.githubusercontent.com/u/19737682?v=4","gravatar_id":"","url":"https://api.github.com/users/den-crane","html_url":"https://github.com/den-crane","followers_url":"https://api.github.com/users/den-crane/followers","following_url":"https://api.github.com/users/den-crane/following{/other_user}","gists_url":"https://api.github.com/users/den-crane/gists{/gist_id}","starred_url":"https://api.github.com/users/den-crane/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/den-crane/subscriptions","organizations_url":"https://api.github.com/users/den-crane/orgs","repos_url":"https://api.github.com/users/den-crane/repos","events_url":"https://api.github.com/users/den-crane/events{/privacy}","received_events_url":"https://api.github.com/users/den-crane/received_events","type":"User","site_admin":false},"labels":[{"id":785082162,"node_id":"MDU6TGFiZWw3ODUwODIxNjI=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-documentation","name":"comp-documentation","color":"b5bcff","default":false,"description":"Used to run automatic builds of the documentation"}],"state":"open","locked":false,"assignee":{"login":"den-crane","id":19737682,"node_id":"MDQ6VXNlcjE5NzM3Njgy","avatar_url":"https://avatars.githubusercontent.com/u/19737682?v=4","gravatar_id":"","url":"https://api.github.com/users/den-crane","html_url":"https://github.com/den-crane","followers_url":"https://api.github.com/users/den-crane/followers","following_url":"https://api.github.com/users/den-crane/following{/other_user}","gists_url":"https://api.github.com/users/den-crane/gists{/gist_id}","starred_url":"https://api.github.com/users/den-crane/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/den-crane/subscriptions","organizations_url":"https://api.github.com/users/den-crane/orgs","repos_url":"https://api.github.com/users/den-crane/repos","events_url":"https://api.github.com/users/den-crane/events{/privacy}","received_events_url":"https://api.github.com/users/den-crane/received_events","type":"User","site_admin":false},"assignees":[{"login":"den-crane","id":19737682,"node_id":"MDQ6VXNlcjE5NzM3Njgy","avatar_url":"https://avatars.githubusercontent.com/u/19737682?v=4","gravatar_id":"","url":"https://api.github.com/users/den-crane","html_url":"https://github.com/den-crane","followers_url":"https://api.github.com/users/den-crane/followers","following_url":"https://api.github.com/users/den-crane/following{/other_user}","gists_url":"https://api.github.com/users/den-crane/gists{/gist_id}","starred_url":"https://api.github.com/users/den-crane/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/den-crane/subscriptions","organizations_url":"https://api.github.com/users/den-crane/orgs","repos_url":"https://api.github.com/users/den-crane/repos","events_url":"https://api.github.com/users/den-crane/events{/privacy}","received_events_url":"https://api.github.com/users/den-crane/received_events","type":"User","site_admin":false}],"milestone":null,"comments":0,"created_at":"2022-01-19T17:11:00Z","updated_at":"2022-01-19T17:11:29Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"body":"https://clickhouse.com/docs/en/sql-reference/statements/alter/column/#materialize-column\r\nMATERIALIZE COLUMN FINAL  was never implemented  https://github.com/ClickHouse/ClickHouse/pull/28011\r\n\r\nMATERIALIZE COLUMN behave differently from the documentation states.\r\n\r\nMATERIALIZE COLUMN updates values always (behaves as FINAL should behave).","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33795/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33795/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33777","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33777/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33777/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33777/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33777","id":1107982365,"node_id":"I_kwDOA5dJV85CCngd","number":33777,"title":"Use of uninitialized value in HashJoin::joinBlockImplCross","user":{"login":"novikd","id":10158699,"node_id":"MDQ6VXNlcjEwMTU4Njk5","avatar_url":"https://avatars.githubusercontent.com/u/10158699?v=4","gravatar_id":"","url":"https://api.github.com/users/novikd","html_url":"https://github.com/novikd","followers_url":"https://api.github.com/users/novikd/followers","following_url":"https://api.github.com/users/novikd/following{/other_user}","gists_url":"https://api.github.com/users/novikd/gists{/gist_id}","starred_url":"https://api.github.com/users/novikd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/novikd/subscriptions","organizations_url":"https://api.github.com/users/novikd/orgs","repos_url":"https://api.github.com/users/novikd/repos","events_url":"https://api.github.com/users/novikd/events{/privacy}","received_events_url":"https://api.github.com/users/novikd/received_events","type":"User","site_admin":false},"labels":[{"id":386401505,"node_id":"MDU6TGFiZWwzODY0MDE1MDU=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/bug","name":"bug","color":"ee0701","default":true,"description":"Confirmed user-visible misbehaviour in official release"},{"id":1955634273,"node_id":"MDU6TGFiZWwxOTU1NjM0Mjcz","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/testing","name":"testing","color":"c9a224","default":false,"description":"Special issue with list of bugs found by CI"},{"id":2104602822,"node_id":"MDU6TGFiZWwyMTA0NjAyODIy","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/fuzz","name":"fuzz","color":"abc4ea","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-01-19T11:24:58Z","updated_at":"2022-01-19T11:24:58Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"```\r\n==99==WARNING: MemorySanitizer: use-of-uninitialized-value\r\n    #0 0x3790a989 in DB::PODArrayBase<8ul, 4096ul, Allocator<false, false>, 15ul, 16ul>::size() const obj-x86_64-linux-gnu/../src/Common/PODArray.h:218:35\r\n    #1 0x3790a989 in DB::ColumnVector<unsigned long>::insertRangeFrom(DB::IColumn const&, unsigned long, unsigned long) obj-x86_64-linux-gnu/../src/Columns/ColumnVector.cpp:285:39\r\n    #2 0x35334f74 in DB::HashJoin::joinBlockImplCross(DB::Block&, std::__1::shared_ptr<DB::ExtraBlock>&) const obj-x86_64-linux-gnu/../src/Interpreters/HashJoin.cpp:1649:62\r\n    #3 0x3533c260 in DB::HashJoin::joinBlock(DB::Block&, std::__1::shared_ptr<DB::ExtraBlock>&) obj-x86_64-linux-gnu/../src/Interpreters/HashJoin.cpp:1750:9\r\n    #4 0x3a33108e in DB::JoiningTransform::readExecute(DB::Chunk&) obj-x86_64-linux-gnu/../src/Processors/Transforms/JoiningTransform.cpp:194:19\r\n    #5 0x3a32eb46 in DB::JoiningTransform::transform(DB::Chunk&) obj-x86_64-linux-gnu/../src/Processors/Transforms/JoiningTransform.cpp:178:17\r\n    #6 0x3a32d1b1 in DB::JoiningTransform::work() obj-x86_64-linux-gnu/../src/Processors/Transforms/JoiningTransform.cpp:112:9\r\n    #7 0x39be9780 in DB::executeJob(DB::IProcessor*) obj-x86_64-linux-gnu/../src/Processors/Executors/ExecutionThreadContext.cpp:45:20\r\n    #8 0x39be9780 in DB::ExecutionThreadContext::executeTask() obj-x86_64-linux-gnu/../src/Processors/Executors/ExecutionThreadContext.cpp:63:9\r\n    #9 0x39bb4c45 in DB::PipelineExecutor::executeStepImpl(unsigned long, std::__1::atomic<bool>*) obj-x86_64-linux-gnu/../src/Processors/Executors/PipelineExecutor.cpp:213:26\r\n    #10 0x39bb3360 in DB::PipelineExecutor::executeSingleThread(unsigned long) obj-x86_64-linux-gnu/../src/Processors/Executors/PipelineExecutor.cpp:178:5\r\n    #11 0x39bb3360 in DB::PipelineExecutor::executeImpl(unsigned long) obj-x86_64-linux-gnu/../src/Processors/Executors/PipelineExecutor.cpp:329:9\r\n    #12 0x39bb0fad in DB::PipelineExecutor::execute(unsigned long) obj-x86_64-linux-gnu/../src/Processors/Executors/PipelineExecutor.cpp:84:9\r\n    #13 0x39bf664d in DB::threadFunction(DB::PullingAsyncPipelineExecutor::Data&, std::__1::shared_ptr<DB::ThreadGroupStatus>, unsigned long) obj-x86_64-linux-gnu/../src/Processors/Executors/PullingAsyncPipelineExecutor.cpp:85:24\r\n    #14 0x39bf664d in DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0::operator()() const obj-x86_64-linux-gnu/../src/Processors/Executors/PullingAsyncPipelineExecutor.cpp:112:13\r\n    #15 0x39bf664d in decltype(std::__1::forward<DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&>(fp)()) std::__1::__invoke_constexpr<DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&>(DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&) obj-x86_64-linux-gnu/../contrib/libcxx/include/type_traits:3682:1\r\n    #16 0x39bf664d in decltype(auto) std::__1::__apply_tuple_impl<DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&, std::__1::tuple<>&>(DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&, std::__1::tuple<>&, std::__1::__tuple_indices<>) obj-x86_64-linux-gnu/../contrib/libcxx/include/tuple:1415:1\r\n    #17 0x39bf664d in decltype(auto) std::__1::apply<DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&, std::__1::tuple<>&>(DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&, std::__1::tuple<>&) obj-x86_64-linux-gnu/../contrib/libcxx/include/tuple:1424:1\r\n    #18 0x39bf664d in ThreadFromGlobalPool::ThreadFromGlobalPool<DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0>(DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&&)::'lambda'()::operator()() obj-x86_64-linux-gnu/../src/Common/ThreadPool.h:188:13\r\n    #19 0x39bf664d in decltype(std::__1::forward<DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0>(fp)()) std::__1::__invoke<ThreadFromGlobalPool::ThreadFromGlobalPool<DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0>(DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&&)::'lambda'()&>(DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&&) obj-x86_64-linux-gnu/../contrib/libcxx/include/type_traits:3676:1\r\n    #20 0x39bf664d in void std::__1::__invoke_void_return_wrapper<void>::__call<ThreadFromGlobalPool::ThreadFromGlobalPool<DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0>(DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&&)::'lambda'()&>(ThreadFromGlobalPool::ThreadFromGlobalPool<DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0>(DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&&)::'lambda'()&) obj-x86_64-linux-gnu/../contrib/libcxx/include/__functional_base:348:9\r\n    #21 0x39bf664d in std::__1::__function::__default_alloc_func<ThreadFromGlobalPool::ThreadFromGlobalPool<DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0>(DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&&)::'lambda'(), void ()>::operator()() obj-x86_64-linux-gnu/../contrib/libcxx/include/functional:1608:12\r\n    #22 0x39bf664d in void std::__1::__function::__policy_invoker<void ()>::__call_impl<std::__1::__function::__default_alloc_func<ThreadFromGlobalPool::ThreadFromGlobalPool<DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0>(DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&&)::'lambda'(), void ()> >(std::__1::__function::__policy_storage const*) obj-x86_64-linux-gnu/../contrib/libcxx/include/functional:2089:16\r\n    #23 0xabda91c in std::__1::__function::__policy_func<void ()>::operator()() const obj-x86_64-linux-gnu/../contrib/libcxx/include/functional:2221:16\r\n    #24 0xabda91c in std::__1::function<void ()>::operator()() const obj-x86_64-linux-gnu/../contrib/libcxx/include/functional:2560:12\r\n    #25 0xabda91c in ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) obj-x86_64-linux-gnu/../src/Common/ThreadPool.cpp:274:17\r\n    #26 0xabe6280 in void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()::operator()() const obj-x86_64-linux-gnu/../src/Common/ThreadPool.cpp:139:73\r\n    #27 0xabe6280 in decltype(std::__1::forward<void>(fp)()) std::__1::__invoke<void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>(void&&) obj-x86_64-linux-gnu/../contrib/libcxx/include/type_traits:3676:1\r\n    #28 0xabe6280 in void std::__1::__thread_execute<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>(std::__1::tuple<void, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>&, std::__1::__tuple_indices<>) obj-x86_64-linux-gnu/../contrib/libcxx/include/thread:280:5\r\n    #29 0xabe6280 in void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()> >(void*) obj-x86_64-linux-gnu/../contrib/libcxx/include/thread:291:5\r\n    #30 0x7fbff1fd6608 in start_thread /build/glibc-eX1tMB/glibc-2.31/nptl/pthread_create.c:477:8\r\n    #31 0x7fbff1efd292 in __clone /build/glibc-eX1tMB/glibc-2.31/misc/../sysdeps/unix/sysv/linux/x86_64/clone.S:95\r\n\r\n  Uninitialized value was created by a heap allocation\r\n    #0 0xa95f8d9 in operator new(unsigned long) (/workspace/clickhouse+0xa95f8d9)\r\n    #1 0x29e11367 in void std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName> >::__emplace_back_slow_path<DB::ColumnWithTypeAndName>(DB::ColumnWithTypeAndName&&) (/workspace/clickhouse+0x29e11367)\r\n    #2 0x339ae3f4 in DB::ColumnWithTypeAndName& std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName> >::emplace_back<DB::ColumnWithTypeAndName>(DB::ColumnWithTypeAndName&&) obj-x86_64-linux-gnu/../contrib/libcxx/include/vector:1687:9\r\n    #3 0x339ae3f4 in DB::Block::insert(DB::ColumnWithTypeAndName) obj-x86_64-linux-gnu/../src/Core/Block.cpp:173:10\r\n    #4 0x3532872a in DB::HashJoin::structureRightBlock(DB::Block const&) const obj-x86_64-linux-gnu/../src/Interpreters/HashJoin.cpp:738:26\r\n    #5 0x35329524 in DB::HashJoin::addJoinedBlock(DB::Block const&, bool) obj-x86_64-linux-gnu/../src/Interpreters/HashJoin.cpp:760:30\r\n    #6 0x3a339fb2 in DB::FillingRightJoinSideTransform::work() obj-x86_64-linux-gnu/../src/Processors/Transforms/JoiningTransform.cpp:295:31\r\n    #7 0x39be9780 in DB::executeJob(DB::IProcessor*) obj-x86_64-linux-gnu/../src/Processors/Executors/ExecutionThreadContext.cpp:45:20\r\n    #8 0x39be9780 in DB::ExecutionThreadContext::executeTask() obj-x86_64-linux-gnu/../src/Processors/Executors/ExecutionThreadContext.cpp:63:9\r\n    #9 0x39bb4c45 in DB::PipelineExecutor::executeStepImpl(unsigned long, std::__1::atomic<bool>*) obj-x86_64-linux-gnu/../src/Processors/Executors/PipelineExecutor.cpp:213:26\r\n    #10 0x39bb3360 in DB::PipelineExecutor::executeSingleThread(unsigned long) obj-x86_64-linux-gnu/../src/Processors/Executors/PipelineExecutor.cpp:178:5\r\n    #11 0x39bb3360 in DB::PipelineExecutor::executeImpl(unsigned long) obj-x86_64-linux-gnu/../src/Processors/Executors/PipelineExecutor.cpp:329:9\r\n    #12 0x39bb0fad in DB::PipelineExecutor::execute(unsigned long) obj-x86_64-linux-gnu/../src/Processors/Executors/PipelineExecutor.cpp:84:9\r\n    #13 0x39bf664d in DB::threadFunction(DB::PullingAsyncPipelineExecutor::Data&, std::__1::shared_ptr<DB::ThreadGroupStatus>, unsigned long) obj-x86_64-linux-gnu/../src/Processors/Executors/PullingAsyncPipelineExecutor.cpp:85:24\r\n    #14 0x39bf664d in DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0::operator()() const obj-x86_64-linux-gnu/../src/Processors/Executors/PullingAsyncPipelineExecutor.cpp:112:13\r\n    #15 0x39bf664d in decltype(std::__1::forward<DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&>(fp)()) std::__1::__invoke_constexpr<DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&>(DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&) obj-x86_64-linux-gnu/../contrib/libcxx/include/type_traits:3682:1\r\n    #16 0x39bf664d in decltype(auto) std::__1::__apply_tuple_impl<DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&, std::__1::tuple<>&>(DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&, std::__1::tuple<>&, std::__1::__tuple_indices<>) obj-x86_64-linux-gnu/../contrib/libcxx/include/tuple:1415:1\r\n    #17 0x39bf664d in decltype(auto) std::__1::apply<DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&, std::__1::tuple<>&>(DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&, std::__1::tuple<>&) obj-x86_64-linux-gnu/../contrib/libcxx/include/tuple:1424:1\r\n    #18 0x39bf664d in ThreadFromGlobalPool::ThreadFromGlobalPool<DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0>(DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&&)::'lambda'()::operator()() obj-x86_64-linux-gnu/../src/Common/ThreadPool.h:188:13\r\n    #19 0x39bf664d in decltype(std::__1::forward<DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0>(fp)()) std::__1::__invoke<ThreadFromGlobalPool::ThreadFromGlobalPool<DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0>(DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&&)::'lambda'()&>(DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&&) obj-x86_64-linux-gnu/../contrib/libcxx/include/type_traits:3676:1\r\n    #20 0x39bf664d in void std::__1::__invoke_void_return_wrapper<void>::__call<ThreadFromGlobalPool::ThreadFromGlobalPool<DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0>(DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&&)::'lambda'()&>(ThreadFromGlobalPool::ThreadFromGlobalPool<DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0>(DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&&)::'lambda'()&) obj-x86_64-linux-gnu/../contrib/libcxx/include/__functional_base:348:9\r\n    #21 0x39bf664d in std::__1::__function::__default_alloc_func<ThreadFromGlobalPool::ThreadFromGlobalPool<DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0>(DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&&)::'lambda'(), void ()>::operator()() obj-x86_64-linux-gnu/../contrib/libcxx/include/functional:1608:12\r\n    #22 0x39bf664d in void std::__1::__function::__policy_invoker<void ()>::__call_impl<std::__1::__function::__default_alloc_func<ThreadFromGlobalPool::ThreadFromGlobalPool<DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0>(DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&&)::'lambda'(), void ()> >(std::__1::__function::__policy_storage const*) obj-x86_64-linux-gnu/../contrib/libcxx/include/functional:2089:16\r\n    #23 0xabda91c in std::__1::__function::__policy_func<void ()>::operator()() const obj-x86_64-linux-gnu/../contrib/libcxx/include/functional:2221:16\r\n    #24 0xabda91c in std::__1::function<void ()>::operator()() const obj-x86_64-linux-gnu/../contrib/libcxx/include/functional:2560:12\r\n    #25 0xabda91c in ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) obj-x86_64-linux-gnu/../src/Common/ThreadPool.cpp:274:17\r\n    #26 0xabe6280 in void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()::operator()() const obj-x86_64-linux-gnu/../src/Common/ThreadPool.cpp:139:73\r\n    #27 0xabe6280 in decltype(std::__1::forward<void>(fp)()) std::__1::__invoke<void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>(void&&) obj-x86_64-linux-gnu/../contrib/libcxx/include/type_traits:3676:1\r\n    #28 0xabe6280 in void std::__1::__thread_execute<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>(std::__1::tuple<void, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>&, std::__1::__tuple_indices<>) obj-x86_64-linux-gnu/../contrib/libcxx/include/thread:280:5\r\n    #29 0xabe6280 in void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()> >(void*) obj-x86_64-linux-gnu/../contrib/libcxx/include/thread:291:5\r\n    #30 0x7fbff1fd6608 in start_thread /build/glibc-eX1tMB/glibc-2.31/nptl/pthread_create.c:477:8\r\n\r\nSUMMARY: MemorySanitizer: use-of-uninitialized-value obj-x86_64-linux-gnu/../src/Common/PODArray.h:218:35 in DB::PODArrayBase<8ul, 4096ul, Allocator<false, false>, 15ul, 16ul>::size() const\r\n```\r\n\r\nhttps://s3.amazonaws.com/clickhouse-test-reports/31182/4e612d0e1ae6dfacc1a25219dfd59d87c0e0826a/fuzzer_astfuzzermsan,actions//report.html","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33777/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33777/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33775","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33775/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33775/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33775/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33775","id":1107943201,"node_id":"I_kwDOA5dJV85CCd8h","number":33775,"title":"ROW POLICY triggering access issue","user":{"login":"melvynator","id":5473562,"node_id":"MDQ6VXNlcjU0NzM1NjI=","avatar_url":"https://avatars.githubusercontent.com/u/5473562?v=4","gravatar_id":"","url":"https://api.github.com/users/melvynator","html_url":"https://github.com/melvynator","followers_url":"https://api.github.com/users/melvynator/followers","following_url":"https://api.github.com/users/melvynator/following{/other_user}","gists_url":"https://api.github.com/users/melvynator/gists{/gist_id}","starred_url":"https://api.github.com/users/melvynator/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/melvynator/subscriptions","organizations_url":"https://api.github.com/users/melvynator/orgs","repos_url":"https://api.github.com/users/melvynator/repos","events_url":"https://api.github.com/users/melvynator/events{/privacy}","received_events_url":"https://api.github.com/users/melvynator/received_events","type":"User","site_admin":false},"labels":[{"id":845247686,"node_id":"MDU6TGFiZWw4NDUyNDc2ODY=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/usability","name":"usability","color":"ebf28c","default":false,"description":""},{"id":3679617212,"node_id":"LA_kwDOA5dJV87bUoC8","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/yandex","name":"yandex","color":"ffcc00","default":false,"description":""}],"state":"open","locked":false,"assignee":{"login":"vitlibar","id":45142681,"node_id":"MDQ6VXNlcjQ1MTQyNjgx","avatar_url":"https://avatars.githubusercontent.com/u/45142681?v=4","gravatar_id":"","url":"https://api.github.com/users/vitlibar","html_url":"https://github.com/vitlibar","followers_url":"https://api.github.com/users/vitlibar/followers","following_url":"https://api.github.com/users/vitlibar/following{/other_user}","gists_url":"https://api.github.com/users/vitlibar/gists{/gist_id}","starred_url":"https://api.github.com/users/vitlibar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vitlibar/subscriptions","organizations_url":"https://api.github.com/users/vitlibar/orgs","repos_url":"https://api.github.com/users/vitlibar/repos","events_url":"https://api.github.com/users/vitlibar/events{/privacy}","received_events_url":"https://api.github.com/users/vitlibar/received_events","type":"User","site_admin":false},"assignees":[{"login":"vitlibar","id":45142681,"node_id":"MDQ6VXNlcjQ1MTQyNjgx","avatar_url":"https://avatars.githubusercontent.com/u/45142681?v=4","gravatar_id":"","url":"https://api.github.com/users/vitlibar","html_url":"https://github.com/vitlibar","followers_url":"https://api.github.com/users/vitlibar/followers","following_url":"https://api.github.com/users/vitlibar/following{/other_user}","gists_url":"https://api.github.com/users/vitlibar/gists{/gist_id}","starred_url":"https://api.github.com/users/vitlibar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vitlibar/subscriptions","organizations_url":"https://api.github.com/users/vitlibar/orgs","repos_url":"https://api.github.com/users/vitlibar/repos","events_url":"https://api.github.com/users/vitlibar/events{/privacy}","received_events_url":"https://api.github.com/users/vitlibar/received_events","type":"User","site_admin":false}],"milestone":null,"comments":3,"created_at":"2022-01-19T10:46:12Z","updated_at":"2022-01-20T12:42:47Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"**Describe the issue**\r\n\r\nWe should clarify the behavior of\r\n\r\n`CREATE ROW POLICY [policy_name] ON [db.table] FOR SELECT`\r\n\r\nIf any ROW POLICY is created on a table, all access to that table for other users and roles must be explicitly granted to that table by another matching ROW POLICY.  So in the case of the access rights on the node you are testing on, to continue to allow admin and other users to query system.tables, you would need an additional row policy such as\r\n\r\n`CREATE ROW POLICY default_row_policy ON system.tables FOR SELECT USING 1 TO ALL EXCEPT test_user_3, analytics_user`\r\n\r\nThis behavior is by design but it is confusing to assign a restriction to one user or role and have it affect other users.\r\n\r\n**How to reproduce**\r\n\r\n```\r\nCREATE DATABASE test;\r\n\r\nCREATE TABLE test.test_db_3\r\n(\r\n    'Title' String,\r\n    'id' UInt32\r\n)\r\nENGINE = MergeTree()\r\nORDER BY (id)\r\n\r\nCREATE ROLE test_role_1 SETTINGS log_profile_events = 1 READONLY, log_queries = 1 READONLY, log_query_settings = 1 READONLY, log_query_threads = 1 READONLY ;\r\n\r\nCREATE USER test_user_3 IDENTIFIED WITH plaintext_password by 'password' DEFAULT ROLE test_role_1\r\n\r\nCREATE ROW POLICY test_user_3_tables_filter ON system.tables FOR SELECT USING database = 'test_db_3' TO test_user_3 ;\r\n```\r\n\r\n* Which ClickHouse server version to use: 2021-12-15\r\n\r\n* Non-default settings, if any:\r\n<access_management>1</access_management>\r\n\r\n**Expected behavior**\r\nA ROW POLICY should only restrict the permission of the specified user or the documentation should be more clear about how to use it. \r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33775/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33775/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33771","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33771/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33771/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33771/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33771","id":1107792297,"node_id":"I_kwDOA5dJV85CB5Gp","number":33771,"title":"Segmentation fault on ECS Fargate when reading from S3","user":{"login":"bryzgaloff","id":15062597,"node_id":"MDQ6VXNlcjE1MDYyNTk3","avatar_url":"https://avatars.githubusercontent.com/u/15062597?v=4","gravatar_id":"","url":"https://api.github.com/users/bryzgaloff","html_url":"https://github.com/bryzgaloff","followers_url":"https://api.github.com/users/bryzgaloff/followers","following_url":"https://api.github.com/users/bryzgaloff/following{/other_user}","gists_url":"https://api.github.com/users/bryzgaloff/gists{/gist_id}","starred_url":"https://api.github.com/users/bryzgaloff/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bryzgaloff/subscriptions","organizations_url":"https://api.github.com/users/bryzgaloff/orgs","repos_url":"https://api.github.com/users/bryzgaloff/repos","events_url":"https://api.github.com/users/bryzgaloff/events{/privacy}","received_events_url":"https://api.github.com/users/bryzgaloff/received_events","type":"User","site_admin":false},"labels":[{"id":1234601830,"node_id":"MDU6TGFiZWwxMjM0NjAxODMw","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/crash","name":"crash","color":"082b68","default":false,"description":"Crash / segfault / abort"},{"id":3260776666,"node_id":"MDU6TGFiZWwzMjYwNzc2NjY2","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/potential%20bug","name":"potential bug","color":"ffc080","default":false,"description":"To be reviewed by developers and confirmed/rejected."}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2022-01-19T08:19:55Z","updated_at":"2022-01-20T18:12:09Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"**Describe what's wrong**\r\n\r\nI am trying to execute `select * from s3(…)` and ClickHouse dies with the following output:\r\n\r\n```\r\nSELECT *\r\nFROM s3('…', 'TSV', 'root String')\r\n\r\nQuery id: 86972283-b218-493b-a56b-c1125f083ce6\r\n\r\n[85b9a88609d0454f8fb03fa59362654d-2580379071] 2022.01.19 07:46:56.066552 [ 251 ] <Fatal> BaseDaemon: ########################################\r\n[85b9a88609d0454f8fb03fa59362654d-2580379071] 2022.01.19 07:46:56.066602 [ 251 ] <Fatal> BaseDaemon: (version 21.12.3.32 (official build), build id: FA4A7F489F3FF6E3) (from thread 97) (query_id: 86972283-b218-493b-a56b-c1125f083ce6) Received signal Segmentation fault (11)\r\n[85b9a88609d0454f8fb03fa59362654d-2580379071] 2022.01.19 07:46:56.066622 [ 251 ] <Fatal> BaseDaemon: Address: 0x7f2172f7a5c0 Access: read. Attempted access has violated the permissions assigned to the memory area.\r\n[85b9a88609d0454f8fb03fa59362654d-2580379071] 2022.01.19 07:46:56.066636 [ 251 ] <Fatal> BaseDaemon: Stack trace: 0x1257420f 0x7f2207ded3c0\r\n[85b9a88609d0454f8fb03fa59362654d-2580379071] 2022.01.19 07:46:56.066666 [ 251 ] <Fatal> BaseDaemon: 0. ? @ 0x1257420f in /usr/bin/clickhouse\r\n[85b9a88609d0454f8fb03fa59362654d-2580379071] 2022.01.19 07:46:56.066700 [ 251 ] <Fatal> BaseDaemon: 1. ? @ 0x7f2207ded3c0 in ?\r\n[85b9a88609d0454f8fb03fa59362654d-2580379071] 2022.01.19 07:46:56.194581 [ 251 ] <Fatal> BaseDaemon: Calculated checksum of the binary: 5BEBF5792A40F7E345921EDA3698245B. There is no information about the reference checksum.\r\nException on client:\r\nCode: 32. DB::Exception: Attempt to read after eof: while receiving packet from 10.0.1.32:9000. (ATTEMPT_TO_READ_AFTER_EOF)\r\n\r\nConnecting to 10.0.1.32:9000 as user default.\r\nCode: 210. DB::NetException: Connection refused (10.0.1.32:9000). (NETWORK_ERROR)\r\n```\r\n\r\n**Does it reproduce on recent release?**\r\n\r\nI use Docker image `yandex/clickhouse-server:21.12.3.32`.\r\n\r\n**How to reproduce**\r\n\r\nI have defined the following Dockerfile:\r\n\r\n```\r\nFROM yandex/clickhouse-server:21.12.3.32\r\nRUN echo '<clickhouse><s3><s3><endpoint>https://s3.eu-central-1.amazonaws.com/my-bucket/some/prefix/</endpoint><use_environment_credentials>true</use_environment_credentials></s3></s3></clickhouse>' \\\r\n        > /etc/clickhouse-server/config.d/s3.xml\r\n```\r\n\r\nAll it does is sets `use_environment_credentials=true` for my bucket in `eu-central-1` AWS region. This is required since I am running ClickHouse on ECS Fargate (in a container) with an IAM role attached to a task.\r\n\r\nHere is service definition in Terraform:\r\n```terraform\r\nlocals {\r\n  clickhouse-server-http-port   = 8123\r\n  clickhouse-server-native-port = 9000\r\n}\r\n\r\nresource \"aws_ecs_task_definition\" \"clickhouse-server\" {\r\n  family                   = \"clickhouse-server\"\r\n  cpu                      = 2048\r\n  memory                   = 8192\r\n  network_mode             = \"awsvpc\"\r\n  execution_role_arn       = aws_iam_role.ecs-exec.arn\r\n  requires_compatibilities = [\"FARGATE\"]\r\n  task_role_arn            = aws_iam_role.clickhouse-access-s3.arn  # HERE I ATTACH A ROLE TO USE TO ACCESS S3\r\n  container_definitions    = jsonencode([\r\n    {\r\n      name             = \"clickhouse-server\"\r\n      image            = # my custom image\r\n      portMappings     = [\r\n        { containerPort = local.clickhouse-server-http-port },\r\n        { containerPort = local.clickhouse-server-native-port },\r\n      ]\r\n      logConfiguration = {\r\n        logDriver = \"awslogs\"\r\n        options   = {\r\n          awslogs-group         = aws_cloudwatch_log_group.clickhouse-server.name\r\n          awslogs-region        = data.aws_region.current.name\r\n          awslogs-stream-prefix = \"clickhouse-server\"\r\n        }\r\n      }\r\n    }\r\n  ])\r\n}\r\n\r\nresource \"aws_iam_role\" \"clickhouse-access-s3\" {\r\n  name               = \"clickhouse-access-s3\"\r\n  assume_role_policy = data.aws_iam_policy_document.assume-ecs-execution-role.json\r\n  inline_policy {\r\n    name   = \"clickhouse-access-s3\"\r\n    policy = data.aws_iam_policy_document.clickhouse-access-s3.json\r\n  }\r\n}\r\ndata \"aws_iam_policy_document\" \"clickhouse-access-s3\" {\r\n  statement {\r\n    effect    = \"Allow\"\r\n    actions   = [\"s3:*\"]\r\n    resources = []  # proper S3 permissions here\r\n  }\r\n}\r\n\r\nresource \"aws_ecs_cluster\" \"clickhouse-server\" {\r\n  name = \"clickhouse-server\"\r\n}\r\n\r\nresource \"aws_ecs_service\" \"clickhouse-server\" {\r\n  name            = \"clickhouse-server\"\r\n  launch_type     = \"FARGATE\"\r\n  desired_count   = 1\r\n  task_definition = aws_ecs_task_definition.clickhouse-server.arn\r\n  cluster         = aws_ecs_cluster.clickhouse-server.arn\r\n  # proper network_configuration {…}\r\n}\r\n\r\nresource \"aws_cloudwatch_log_group\" \"clickhouse-server\" {\r\n  name = \"clickhouse-server\"\r\n}\r\n```\r\n\r\nWhen using s3 table function without config file (running container from pure `yandex/clickhouse-server:21.12.3.32` image without my custom Dockerfile), I was able to read this file from S3 by providing explicit AWS credentials. Now, when configuration is added, the operation fails even with AWS credentials explicitly provided. The error is the same: see traceback above, ClickHouse container dies.\r\n\r\nSolution also works when container is run using `docker run` simply on an EC2 instance (without Fargate service). No error also appears if the service is run without task role attached (`task_role_arn=null` above).\r\n\r\n**Expected behavior**\r\n\r\nI expect s3 table function to use `$AWS_CONTAINER_CREDENTIALS_RELATIVE_URI` when `use_environment_credentials` enabled, and looks like codebase supports it:\r\n\r\nhttps://github.com/ClickHouse/ClickHouse/blob/35883e0dae7be1ffa8948e5c56a168262fc7366f/src/IO/S3Common.cpp#L524-L526\r\n\r\n[AWS documentation](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-iam-roles.html) on AWS_CONTAINER_CREDENTIALS_RELATIVE_URI.\r\n\r\nS3 endpoint settings [documentation](https://clickhouse.com/docs/en/engines/table-engines/integrations/s3/#endpoint-settings).","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33771/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33771/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33768","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33768/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33768/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33768/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33768","id":1107743401,"node_id":"I_kwDOA5dJV85CBtKp","number":33768,"title":"clickhouse server can not start up when set comment for query_log","user":{"login":"xuyatian","id":15261812,"node_id":"MDQ6VXNlcjE1MjYxODEy","avatar_url":"https://avatars.githubusercontent.com/u/15261812?v=4","gravatar_id":"","url":"https://api.github.com/users/xuyatian","html_url":"https://github.com/xuyatian","followers_url":"https://api.github.com/users/xuyatian/followers","following_url":"https://api.github.com/users/xuyatian/following{/other_user}","gists_url":"https://api.github.com/users/xuyatian/gists{/gist_id}","starred_url":"https://api.github.com/users/xuyatian/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xuyatian/subscriptions","organizations_url":"https://api.github.com/users/xuyatian/orgs","repos_url":"https://api.github.com/users/xuyatian/repos","events_url":"https://api.github.com/users/xuyatian/events{/privacy}","received_events_url":"https://api.github.com/users/xuyatian/received_events","type":"User","site_admin":false},"labels":[{"id":1019683656,"node_id":"MDU6TGFiZWwxMDE5NjgzNjU2","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/altinity","name":"altinity","color":"c0f5f9","default":false,"description":""},{"id":1575085465,"node_id":"MDU6TGFiZWwxNTc1MDg1NDY1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/unexpected%20behaviour","name":"unexpected behaviour","color":"e088ca","default":false,"description":""}],"state":"open","locked":false,"assignee":{"login":"Enmk","id":1110183,"node_id":"MDQ6VXNlcjExMTAxODM=","avatar_url":"https://avatars.githubusercontent.com/u/1110183?v=4","gravatar_id":"","url":"https://api.github.com/users/Enmk","html_url":"https://github.com/Enmk","followers_url":"https://api.github.com/users/Enmk/followers","following_url":"https://api.github.com/users/Enmk/following{/other_user}","gists_url":"https://api.github.com/users/Enmk/gists{/gist_id}","starred_url":"https://api.github.com/users/Enmk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Enmk/subscriptions","organizations_url":"https://api.github.com/users/Enmk/orgs","repos_url":"https://api.github.com/users/Enmk/repos","events_url":"https://api.github.com/users/Enmk/events{/privacy}","received_events_url":"https://api.github.com/users/Enmk/received_events","type":"User","site_admin":false},"assignees":[{"login":"Enmk","id":1110183,"node_id":"MDQ6VXNlcjExMTAxODM=","avatar_url":"https://avatars.githubusercontent.com/u/1110183?v=4","gravatar_id":"","url":"https://api.github.com/users/Enmk","html_url":"https://github.com/Enmk","followers_url":"https://api.github.com/users/Enmk/followers","following_url":"https://api.github.com/users/Enmk/following{/other_user}","gists_url":"https://api.github.com/users/Enmk/gists{/gist_id}","starred_url":"https://api.github.com/users/Enmk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Enmk/subscriptions","organizations_url":"https://api.github.com/users/Enmk/orgs","repos_url":"https://api.github.com/users/Enmk/repos","events_url":"https://api.github.com/users/Enmk/events{/privacy}","received_events_url":"https://api.github.com/users/Enmk/received_events","type":"User","site_admin":false}],"milestone":null,"comments":4,"created_at":"2022-01-19T07:16:32Z","updated_at":"2022-01-21T18:26:07Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"\r\n**Describe the unexpected behaviour**\r\nclickhouse server(22.1.1.2542) can not start up when set comment for query_log\r\n**How to reproduce**\r\nadd comment for query_log in config.xml\r\n```\r\n<query_log>\r\n<database>system</database>\r\n<table>query_log</table>\r\n             <engine>ENGINE = MergeTree PARTITION BY (event_date)    \r\n                          ORDER BY (event_time) \r\n                          TTL event_date + INTERVAL 14 DAY DELETE\r\n                          SETTINGS ttl_only_drop_parts=1                              \r\n                          COMMENT 'xxx'\r\n             </engine>\r\n</query_log>\r\n```\r\nrestart clickhouse-server:\r\n2022.01.18 23:07:04.861218 [ 3415373 ] {} <Error> Application: Caught exception while loading metadata: Code: 62. DB::Exception: Syntax error (Storage to create table for query_log): failed at position 259 ('COMMENT') (line 5, col 31): COMMENT 'xxx'\r\n             . Expected end of query. (SYNTAX_ERROR), Stack trace (when copying this message, always include the lines below):\r\n\r\n0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0xa82bc3a in /usr/bin/clickhouse\r\n1. DB::parseQueryAndMovePosition(DB::IParser&, char const*&, char const*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool, unsigned long, unsigned long) @ 0x14d6169f in /usr/bin/clickhouse\r\n2. DB::SystemLogs::SystemLogs(std::__1::shared_ptr<DB::Context const>, Poco::Util::AbstractConfiguration const&) @ 0x13b996bb in /usr/bin/clickhouse\r\n3. DB::Context::initializeSystemLogs() @ 0x134ac6af in /usr/bin/clickhouse\r\n4. DB::Server::main(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0xa8b4b9d in /usr/bin/clickhouse\r\n5. Poco::Util::Application::run() @ 0x17471aa6 in /usr/bin/clickhouse\r\n6. DB::Server::run() @ 0xa8a71d1 in /usr/bin/clickhouse\r\n7. mainEntryClickHouseServer(int, char**) @ 0xa8a4787 in /usr/bin/clickhouse\r\n8. main @ 0xa825fea in /usr/bin/clickhouse\r\n9. __libc_start_main @ 0x7f3e9d62f0b3 in ?\r\n10. _start @ 0xa6acfae in /usr/bin/clickhouse\r\n (version 22.1.1.2542)\r\n\r\n**Expected behavior**\r\nClickhouse server should be up when set comment for query_log. \r\n21.8 is ok.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33768/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33768/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33763","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33763/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33763/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33763/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33763","id":1107644607,"node_id":"I_kwDOA5dJV85CBVC_","number":33763,"title":"`SQLite` as input/output format.","user":{"login":"alexey-milovidov","id":18581488,"node_id":"MDQ6VXNlcjE4NTgxNDg4","avatar_url":"https://avatars.githubusercontent.com/u/18581488?v=4","gravatar_id":"","url":"https://api.github.com/users/alexey-milovidov","html_url":"https://github.com/alexey-milovidov","followers_url":"https://api.github.com/users/alexey-milovidov/followers","following_url":"https://api.github.com/users/alexey-milovidov/following{/other_user}","gists_url":"https://api.github.com/users/alexey-milovidov/gists{/gist_id}","starred_url":"https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexey-milovidov/subscriptions","organizations_url":"https://api.github.com/users/alexey-milovidov/orgs","repos_url":"https://api.github.com/users/alexey-milovidov/repos","events_url":"https://api.github.com/users/alexey-milovidov/events{/privacy}","received_events_url":"https://api.github.com/users/alexey-milovidov/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":1365579236,"node_id":"MDU6TGFiZWwxMzY1NTc5MjM2","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/minor","name":"minor","color":"FFF8F8","default":false,"description":"Priority: minor"},{"id":1401255404,"node_id":"MDU6TGFiZWwxNDAxMjU1NDA0","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-formats","name":"comp-formats","color":"b5bcff","default":false,"description":"Input / output formats"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-01-19T04:59:11Z","updated_at":"2022-01-28T13:32:40Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"**Use case**\r\n\r\nOne random guy asked it on the internet.\r\n\r\n**Describe the solution you'd like**\r\n\r\nOn output it will create SQLite database with a single table named `table`.\r\nOn input it will read SQLite database and pick the first table from it.\r\n\r\nMost likely it has to be read from seekable file.\r\nMost likely it will require to substitute some wrapper around ReadBuffer/WriteBuffer to make SQLite work.\r\nAlternatively it can work by slurping it into memory.\r\n\r\n**Additional notes**\r\n\r\nDo you know that we alrady have `SQLite` as table and database engines?","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33763/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33763/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33762","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33762/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33762/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33762/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33762","id":1107607908,"node_id":"I_kwDOA5dJV85CBMFk","number":33762,"title":"MaterializedMySQL method is imported into clickhouse, the query efficiency is very low, count() 100 million data takes 40s+","user":{"login":"owpqwe","id":97731198,"node_id":"U_kgDOBdNCfg","avatar_url":"https://avatars.githubusercontent.com/u/97731198?v=4","gravatar_id":"","url":"https://api.github.com/users/owpqwe","html_url":"https://github.com/owpqwe","followers_url":"https://api.github.com/users/owpqwe/followers","following_url":"https://api.github.com/users/owpqwe/following{/other_user}","gists_url":"https://api.github.com/users/owpqwe/gists{/gist_id}","starred_url":"https://api.github.com/users/owpqwe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/owpqwe/subscriptions","organizations_url":"https://api.github.com/users/owpqwe/orgs","repos_url":"https://api.github.com/users/owpqwe/repos","events_url":"https://api.github.com/users/owpqwe/events{/privacy}","received_events_url":"https://api.github.com/users/owpqwe/received_events","type":"User","site_admin":false},"labels":[{"id":386401508,"node_id":"MDU6TGFiZWwzODY0MDE1MDg=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/help%20wanted","name":"help wanted","color":"128A0C","default":true,"description":null},{"id":386401510,"node_id":"MDU6TGFiZWwzODY0MDE1MTA=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/question","name":"question","color":"bfdadc","default":true,"description":""},{"id":756395244,"node_id":"MDU6TGFiZWw3NTYzOTUyNDQ=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/performance","name":"performance","color":"c2e0c6","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-01-19T03:45:39Z","updated_at":"2022-01-24T16:19:38Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"MaterializedMySQL method is imported into clickhouse, the query efficiency is very low, count() 100 million data takes 40s+","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33762/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33762/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33757","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33757/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33757/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33757/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33757","id":1107465264,"node_id":"I_kwDOA5dJV85CApQw","number":33757,"title":"Lower amount of recursion in Parser","user":{"login":"alexey-milovidov","id":18581488,"node_id":"MDQ6VXNlcjE4NTgxNDg4","avatar_url":"https://avatars.githubusercontent.com/u/18581488?v=4","gravatar_id":"","url":"https://api.github.com/users/alexey-milovidov","html_url":"https://github.com/alexey-milovidov","followers_url":"https://api.github.com/users/alexey-milovidov/followers","following_url":"https://api.github.com/users/alexey-milovidov/following{/other_user}","gists_url":"https://api.github.com/users/alexey-milovidov/gists{/gist_id}","starred_url":"https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexey-milovidov/subscriptions","organizations_url":"https://api.github.com/users/alexey-milovidov/orgs","repos_url":"https://api.github.com/users/alexey-milovidov/repos","events_url":"https://api.github.com/users/alexey-milovidov/events{/privacy}","received_events_url":"https://api.github.com/users/alexey-milovidov/received_events","type":"User","site_admin":false},"labels":[{"id":756395244,"node_id":"MDU6TGFiZWw3NTYzOTUyNDQ=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/performance","name":"performance","color":"c2e0c6","default":false,"description":null}],"state":"open","locked":false,"assignee":{"login":"evillique","id":43110995,"node_id":"MDQ6VXNlcjQzMTEwOTk1","avatar_url":"https://avatars.githubusercontent.com/u/43110995?v=4","gravatar_id":"","url":"https://api.github.com/users/evillique","html_url":"https://github.com/evillique","followers_url":"https://api.github.com/users/evillique/followers","following_url":"https://api.github.com/users/evillique/following{/other_user}","gists_url":"https://api.github.com/users/evillique/gists{/gist_id}","starred_url":"https://api.github.com/users/evillique/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/evillique/subscriptions","organizations_url":"https://api.github.com/users/evillique/orgs","repos_url":"https://api.github.com/users/evillique/repos","events_url":"https://api.github.com/users/evillique/events{/privacy}","received_events_url":"https://api.github.com/users/evillique/received_events","type":"User","site_admin":false},"assignees":[{"login":"evillique","id":43110995,"node_id":"MDQ6VXNlcjQzMTEwOTk1","avatar_url":"https://avatars.githubusercontent.com/u/43110995?v=4","gravatar_id":"","url":"https://api.github.com/users/evillique","html_url":"https://github.com/evillique","followers_url":"https://api.github.com/users/evillique/followers","following_url":"https://api.github.com/users/evillique/following{/other_user}","gists_url":"https://api.github.com/users/evillique/gists{/gist_id}","starred_url":"https://api.github.com/users/evillique/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/evillique/subscriptions","organizations_url":"https://api.github.com/users/evillique/orgs","repos_url":"https://api.github.com/users/evillique/repos","events_url":"https://api.github.com/users/evillique/events{/privacy}","received_events_url":"https://api.github.com/users/evillique/received_events","type":"User","site_admin":false}],"milestone":null,"comments":0,"created_at":"2022-01-18T23:30:02Z","updated_at":"2022-01-18T23:30:24Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"We are using hand-written recursive descent parser and it is alright.\r\n\r\nBut it is using too deep recursion to parse expression with operators.\r\nSomething like 10 stack frames to parse any expression element.\r\n\r\nWe can get rid of the excessive recursion by using \"precendence climbing\" method or similar:\r\nhttps://en.wikipedia.org/wiki/Operator-precedence_parser\r\n\r\nIt is like parsing expression greedy from left to right and binding the operators to arguments according to the priorities.\r\n\r\nWe have the following operators:\r\n\r\n```\r\na[b]\r\na.b\r\n\r\n-a\r\n+a\r\n\r\nNOT a\r\n\r\nDATE a\r\nTIMESTAMP a\r\n\r\nINTERVAL a UNIT\r\n\r\na IS NULL\r\na IS NOT NULL\r\n\r\na::Type\r\n\r\na + b\r\na - b\r\na * b\r\na / b\r\na % b\r\na DIV b\r\na MOD b\r\na || b\r\n\r\na < b\r\na > b\r\na <= b\r\na >= b\r\na = b\r\na == b\r\na != b\r\na <> b\r\n\r\na AND b\r\na OR b\r\n\r\na ? b : c\r\na BETWEEN b AND c\r\n\r\n[a, b...]\r\n(a, b...)\r\n\r\nf(a, b...)\r\n\r\na -> b\r\n\r\na AS b\r\na b          - only in SELECT expression list\r\n\r\nCASE a WHEN b THEN c ... [ELSE d] END\r\nCASE WHEN a THEN b ... [ELSE d] END\r\n```\r\n\r\nIt is ok if you slightly change some relative priorities of the operators or break some very strange cases.\r\n\r\nExample showing too deep recursion:\r\n\r\n```\r\nclickhouse-local --max_parser_depth 100000 --query \"SELECT f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(fr\nAborted (core dumped)\r\n```\r\n\r\nLess than 1000 levels of nesting are exhausting 2 MiB stack.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33757/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33757/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33756","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33756/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33756/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33756/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33756","id":1107460370,"node_id":"I_kwDOA5dJV85CAoES","number":33756,"title":"Allow to pass UUID in MessagePack","user":{"login":"cyanide-burnout","id":2530126,"node_id":"MDQ6VXNlcjI1MzAxMjY=","avatar_url":"https://avatars.githubusercontent.com/u/2530126?v=4","gravatar_id":"","url":"https://api.github.com/users/cyanide-burnout","html_url":"https://github.com/cyanide-burnout","followers_url":"https://api.github.com/users/cyanide-burnout/followers","following_url":"https://api.github.com/users/cyanide-burnout/following{/other_user}","gists_url":"https://api.github.com/users/cyanide-burnout/gists{/gist_id}","starred_url":"https://api.github.com/users/cyanide-burnout/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cyanide-burnout/subscriptions","organizations_url":"https://api.github.com/users/cyanide-burnout/orgs","repos_url":"https://api.github.com/users/cyanide-burnout/repos","events_url":"https://api.github.com/users/cyanide-burnout/events{/privacy}","received_events_url":"https://api.github.com/users/cyanide-burnout/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null}],"state":"open","locked":false,"assignee":{"login":"Avogar","id":48961922,"node_id":"MDQ6VXNlcjQ4OTYxOTIy","avatar_url":"https://avatars.githubusercontent.com/u/48961922?v=4","gravatar_id":"","url":"https://api.github.com/users/Avogar","html_url":"https://github.com/Avogar","followers_url":"https://api.github.com/users/Avogar/followers","following_url":"https://api.github.com/users/Avogar/following{/other_user}","gists_url":"https://api.github.com/users/Avogar/gists{/gist_id}","starred_url":"https://api.github.com/users/Avogar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Avogar/subscriptions","organizations_url":"https://api.github.com/users/Avogar/orgs","repos_url":"https://api.github.com/users/Avogar/repos","events_url":"https://api.github.com/users/Avogar/events{/privacy}","received_events_url":"https://api.github.com/users/Avogar/received_events","type":"User","site_admin":false},"assignees":[{"login":"Avogar","id":48961922,"node_id":"MDQ6VXNlcjQ4OTYxOTIy","avatar_url":"https://avatars.githubusercontent.com/u/48961922?v=4","gravatar_id":"","url":"https://api.github.com/users/Avogar","html_url":"https://github.com/Avogar","followers_url":"https://api.github.com/users/Avogar/followers","following_url":"https://api.github.com/users/Avogar/following{/other_user}","gists_url":"https://api.github.com/users/Avogar/gists{/gist_id}","starred_url":"https://api.github.com/users/Avogar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Avogar/subscriptions","organizations_url":"https://api.github.com/users/Avogar/orgs","repos_url":"https://api.github.com/users/Avogar/repos","events_url":"https://api.github.com/users/Avogar/events{/privacy}","received_events_url":"https://api.github.com/users/Avogar/received_events","type":"User","site_admin":false}],"milestone":null,"comments":3,"created_at":"2022-01-18T23:22:01Z","updated_at":"2022-01-24T13:02:28Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"It is very efficient to use MessagePack as input data format to pass strict data to ClickHouse and UUID field type to store it. Unfortunately at this moment ClickHouse doesn't handle UUIDs presented in MessagePack and we have to store UUIDs as a fixed strings.\r\nI want to suggest to add parsing UUIDs to MessagePack input parser in two forms:\r\n- as a MessagePack's string of 36 chracters\r\n- as a MessagePack's 16-bytes binary (https://github.com/msgpack/msgpack/blob/master/spec.md#bin-format-family)","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33756/reactions","total_count":8,"+1":8,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33756/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33748","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33748/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33748/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33748/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33748","id":1107232716,"node_id":"I_kwDOA5dJV85B_wfM","number":33748,"title":"How replicated tables without some columns through MaterializedPostgreSQL?","user":{"login":"Olga-par","id":75472069,"node_id":"MDQ6VXNlcjc1NDcyMDY5","avatar_url":"https://avatars.githubusercontent.com/u/75472069?v=4","gravatar_id":"","url":"https://api.github.com/users/Olga-par","html_url":"https://github.com/Olga-par","followers_url":"https://api.github.com/users/Olga-par/followers","following_url":"https://api.github.com/users/Olga-par/following{/other_user}","gists_url":"https://api.github.com/users/Olga-par/gists{/gist_id}","starred_url":"https://api.github.com/users/Olga-par/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Olga-par/subscriptions","organizations_url":"https://api.github.com/users/Olga-par/orgs","repos_url":"https://api.github.com/users/Olga-par/repos","events_url":"https://api.github.com/users/Olga-par/events{/privacy}","received_events_url":"https://api.github.com/users/Olga-par/received_events","type":"User","site_admin":false},"labels":[{"id":386401510,"node_id":"MDU6TGFiZWwzODY0MDE1MTA=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/question","name":"question","color":"bfdadc","default":true,"description":""}],"state":"open","locked":false,"assignee":{"login":"kssenii","id":54203879,"node_id":"MDQ6VXNlcjU0MjAzODc5","avatar_url":"https://avatars.githubusercontent.com/u/54203879?v=4","gravatar_id":"","url":"https://api.github.com/users/kssenii","html_url":"https://github.com/kssenii","followers_url":"https://api.github.com/users/kssenii/followers","following_url":"https://api.github.com/users/kssenii/following{/other_user}","gists_url":"https://api.github.com/users/kssenii/gists{/gist_id}","starred_url":"https://api.github.com/users/kssenii/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kssenii/subscriptions","organizations_url":"https://api.github.com/users/kssenii/orgs","repos_url":"https://api.github.com/users/kssenii/repos","events_url":"https://api.github.com/users/kssenii/events{/privacy}","received_events_url":"https://api.github.com/users/kssenii/received_events","type":"User","site_admin":false},"assignees":[{"login":"kssenii","id":54203879,"node_id":"MDQ6VXNlcjU0MjAzODc5","avatar_url":"https://avatars.githubusercontent.com/u/54203879?v=4","gravatar_id":"","url":"https://api.github.com/users/kssenii","html_url":"https://github.com/kssenii","followers_url":"https://api.github.com/users/kssenii/followers","following_url":"https://api.github.com/users/kssenii/following{/other_user}","gists_url":"https://api.github.com/users/kssenii/gists{/gist_id}","starred_url":"https://api.github.com/users/kssenii/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kssenii/subscriptions","organizations_url":"https://api.github.com/users/kssenii/orgs","repos_url":"https://api.github.com/users/kssenii/repos","events_url":"https://api.github.com/users/kssenii/events{/privacy}","received_events_url":"https://api.github.com/users/kssenii/received_events","type":"User","site_admin":false}],"milestone":null,"comments":2,"created_at":"2022-01-18T18:31:53Z","updated_at":"2022-01-19T19:36:25Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Hello!\r\n\r\nAs part of the project, we use postgresql replication in clickhouse through the creation of MaterializedPostgreSQL.\r\nThere was a need not to replicate some columns of tables.\r\nIs it possible to limit replicated columns in a table?\r\n\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33748/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33748/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33747","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33747/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33747/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33747/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33747","id":1107216389,"node_id":"I_kwDOA5dJV85B_sgF","number":33747,"title":"TRUNCATE TABLE in Replicated DB if multiple partitions exist raises exception: Cannot add ZooKeeper operation because query is executed","user":{"login":"pavel-naumenko","id":87874915,"node_id":"MDQ6VXNlcjg3ODc0OTE1","avatar_url":"https://avatars.githubusercontent.com/u/87874915?v=4","gravatar_id":"","url":"https://api.github.com/users/pavel-naumenko","html_url":"https://github.com/pavel-naumenko","followers_url":"https://api.github.com/users/pavel-naumenko/followers","following_url":"https://api.github.com/users/pavel-naumenko/following{/other_user}","gists_url":"https://api.github.com/users/pavel-naumenko/gists{/gist_id}","starred_url":"https://api.github.com/users/pavel-naumenko/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pavel-naumenko/subscriptions","organizations_url":"https://api.github.com/users/pavel-naumenko/orgs","repos_url":"https://api.github.com/users/pavel-naumenko/repos","events_url":"https://api.github.com/users/pavel-naumenko/events{/privacy}","received_events_url":"https://api.github.com/users/pavel-naumenko/received_events","type":"User","site_admin":false},"labels":[{"id":2673090580,"node_id":"MDU6TGFiZWwyNjczMDkwNTgw","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/bug%20experimental","name":"bug experimental","color":"E99695","default":false,"description":"Bug in the feature that should not be used in production"}],"state":"open","locked":false,"assignee":{"login":"tavplubix","id":14847450,"node_id":"MDQ6VXNlcjE0ODQ3NDUw","avatar_url":"https://avatars.githubusercontent.com/u/14847450?v=4","gravatar_id":"","url":"https://api.github.com/users/tavplubix","html_url":"https://github.com/tavplubix","followers_url":"https://api.github.com/users/tavplubix/followers","following_url":"https://api.github.com/users/tavplubix/following{/other_user}","gists_url":"https://api.github.com/users/tavplubix/gists{/gist_id}","starred_url":"https://api.github.com/users/tavplubix/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tavplubix/subscriptions","organizations_url":"https://api.github.com/users/tavplubix/orgs","repos_url":"https://api.github.com/users/tavplubix/repos","events_url":"https://api.github.com/users/tavplubix/events{/privacy}","received_events_url":"https://api.github.com/users/tavplubix/received_events","type":"User","site_admin":false},"assignees":[{"login":"tavplubix","id":14847450,"node_id":"MDQ6VXNlcjE0ODQ3NDUw","avatar_url":"https://avatars.githubusercontent.com/u/14847450?v=4","gravatar_id":"","url":"https://api.github.com/users/tavplubix","html_url":"https://github.com/tavplubix","followers_url":"https://api.github.com/users/tavplubix/followers","following_url":"https://api.github.com/users/tavplubix/following{/other_user}","gists_url":"https://api.github.com/users/tavplubix/gists{/gist_id}","starred_url":"https://api.github.com/users/tavplubix/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tavplubix/subscriptions","organizations_url":"https://api.github.com/users/tavplubix/orgs","repos_url":"https://api.github.com/users/tavplubix/repos","events_url":"https://api.github.com/users/tavplubix/events{/privacy}","received_events_url":"https://api.github.com/users/tavplubix/received_events","type":"User","site_admin":false}],"milestone":null,"comments":1,"created_at":"2022-01-18T18:12:47Z","updated_at":"2022-01-19T05:05:08Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Version\r\n21.12.3.32\r\n\r\n### Details\r\nCreate Replicated DB\r\n```\r\nCREATE DATABASE IF NOT EXISTS test ON CLUSTER 'test_shard_localhost'\r\nENGINE = Replicated('/clickhouse/{cluster}/db/test', '{shard}', '{replica}') ;\r\n```\r\n\r\nCreate Table in Replicated DB\r\n```\r\nCREATE TABLE IF NOT EXISTS test.events\r\n(\r\n    event_day Date,\r\n    event_id String\r\n)\r\nENGINE = ReplicatedMergeTree('/clickhouse/{cluster}/tables/{uuid}/{shard}', '{replica}')\r\nPARTITION BY (toYYYYMM(event_day))\r\nORDER BY (event_day);\r\n```\r\n\r\nTry to insert data and do truncate.  \r\nIf adding data that fits into one partition => truncate works OK:\r\n```\r\nINSERT INTO test.events(event_day, event_id)\r\nVALUES \r\n\t(toDate('2021-01-01'), 'e1');\r\n\r\nTRUNCATE TABLE test.events;\r\n```\r\n\r\nIf adding data that fits multiple partitions => truncate fails, only first partition removed:\r\n[clickhouse-server.err.log](https://github.com/ClickHouse/ClickHouse/files/7891425/clickhouse-server.err.log)\r\n\r\n```\r\nINSERT INTO test.events(event_day, event_id)\r\nVALUES \r\n\t(toDate('2021-01-01'), 'e1'),\r\n\t(toDate('2022-01-01'), 'e2');\r\n\r\nTRUNCATE TABLE test.events;\r\n => exception\r\n DB::Exception: Cannot add ZooKeeper operation because query is executed. It's a bug. (LOGICAL_ERROR)\r\n\r\nSELECT * from system.parts \r\nWHERE database = 'test' and table ='events';  \r\n=> 1 part left still, if trying additional TRUNCATE statements - those would fail also\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33747/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33747/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33746","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33746/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33746/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33746/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33746","id":1107200425,"node_id":"I_kwDOA5dJV85B_omp","number":33746,"title":"Use of custom query/placeholder in `update_field` of external dictionaries.","user":{"login":"f1yegor","id":1815205,"node_id":"MDQ6VXNlcjE4MTUyMDU=","avatar_url":"https://avatars.githubusercontent.com/u/1815205?v=4","gravatar_id":"","url":"https://api.github.com/users/f1yegor","html_url":"https://github.com/f1yegor","followers_url":"https://api.github.com/users/f1yegor/followers","following_url":"https://api.github.com/users/f1yegor/following{/other_user}","gists_url":"https://api.github.com/users/f1yegor/gists{/gist_id}","starred_url":"https://api.github.com/users/f1yegor/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/f1yegor/subscriptions","organizations_url":"https://api.github.com/users/f1yegor/orgs","repos_url":"https://api.github.com/users/f1yegor/repos","events_url":"https://api.github.com/users/f1yegor/events{/privacy}","received_events_url":"https://api.github.com/users/f1yegor/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":1351463315,"node_id":"MDU6TGFiZWwxMzUxNDYzMzE1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-dictionary","name":"comp-dictionary","color":"b5bcff","default":false,"description":"Dictionaries"}],"state":"open","locked":false,"assignee":{"login":"kitaisreal","id":22458333,"node_id":"MDQ6VXNlcjIyNDU4MzMz","avatar_url":"https://avatars.githubusercontent.com/u/22458333?v=4","gravatar_id":"","url":"https://api.github.com/users/kitaisreal","html_url":"https://github.com/kitaisreal","followers_url":"https://api.github.com/users/kitaisreal/followers","following_url":"https://api.github.com/users/kitaisreal/following{/other_user}","gists_url":"https://api.github.com/users/kitaisreal/gists{/gist_id}","starred_url":"https://api.github.com/users/kitaisreal/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kitaisreal/subscriptions","organizations_url":"https://api.github.com/users/kitaisreal/orgs","repos_url":"https://api.github.com/users/kitaisreal/repos","events_url":"https://api.github.com/users/kitaisreal/events{/privacy}","received_events_url":"https://api.github.com/users/kitaisreal/received_events","type":"User","site_admin":false},"assignees":[{"login":"kitaisreal","id":22458333,"node_id":"MDQ6VXNlcjIyNDU4MzMz","avatar_url":"https://avatars.githubusercontent.com/u/22458333?v=4","gravatar_id":"","url":"https://api.github.com/users/kitaisreal","html_url":"https://github.com/kitaisreal","followers_url":"https://api.github.com/users/kitaisreal/followers","following_url":"https://api.github.com/users/kitaisreal/following{/other_user}","gists_url":"https://api.github.com/users/kitaisreal/gists{/gist_id}","starred_url":"https://api.github.com/users/kitaisreal/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kitaisreal/subscriptions","organizations_url":"https://api.github.com/users/kitaisreal/orgs","repos_url":"https://api.github.com/users/kitaisreal/repos","events_url":"https://api.github.com/users/kitaisreal/events{/privacy}","received_events_url":"https://api.github.com/users/kitaisreal/received_events","type":"User","site_admin":false}],"milestone":null,"comments":0,"created_at":"2022-01-18T17:54:16Z","updated_at":"2022-01-18T22:59:27Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Use of custom query/placeholder in `update_field` of external dictionaries.\r\nAfter adding support for `update_field` for all kind of dictionaries(https://github.com/ClickHouse/ClickHouse/pull/32185/) the usability has improved. However there is still points of improvement.\r\nCurrent implementation supports only simple table field like \r\n`SOURCE(CLICKHOUSE(... update_field 'added_time' update_lag 15))`\r\nbut miss support for complex/compound expressions (that for example could use index more efficiently).\r\n\r\nI don't know whether subselects should be allowed.\r\n\r\nExternalQueryBuilder.cpp\r\n```\r\nvoid ExternalQueryBuilder::composeUpdateCondition(const std::string & update_field, const std::string & time_point, WriteBuffer & out)\r\n{\r\n    writeString(update_field, out);\r\n    writeString(\" >= '\", out);\r\n    writeString(time_point, out);\r\n    writeChar('\\'', out);\r\n}\r\n```\r\nBy introducing this feature work with dictionary sources will be more flexible and general.\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33746/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33746/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33741","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33741/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33741/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33741/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33741","id":1107039624,"node_id":"I_kwDOA5dJV85B_BWI","number":33741,"title":"Segfault in ReadFromMergeTree","user":{"login":"alesapin","id":3684697,"node_id":"MDQ6VXNlcjM2ODQ2OTc=","avatar_url":"https://avatars.githubusercontent.com/u/3684697?v=4","gravatar_id":"","url":"https://api.github.com/users/alesapin","html_url":"https://github.com/alesapin","followers_url":"https://api.github.com/users/alesapin/followers","following_url":"https://api.github.com/users/alesapin/following{/other_user}","gists_url":"https://api.github.com/users/alesapin/gists{/gist_id}","starred_url":"https://api.github.com/users/alesapin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alesapin/subscriptions","organizations_url":"https://api.github.com/users/alesapin/orgs","repos_url":"https://api.github.com/users/alesapin/repos","events_url":"https://api.github.com/users/alesapin/events{/privacy}","received_events_url":"https://api.github.com/users/alesapin/received_events","type":"User","site_admin":false},"labels":[{"id":2104602822,"node_id":"MDU6TGFiZWwyMTA0NjAyODIy","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/fuzz","name":"fuzz","color":"abc4ea","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-01-18T15:24:54Z","updated_at":"2022-01-18T15:25:21Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"Report: https://s3.amazonaws.com/clickhouse-test-reports/33642/eff85d3352dac091bc7d04e7a143a107cdedf4e5/stateless_tests__release__wide_parts_enabled__actions_.html\r\n\r\n\r\n```\r\n+ grep -Fa Fatal /var/log/clickhouse-server/clickhouse-server.log\r\n2022.01.18 22:30:12.564091 [ 310843 ] {} <Fatal> BaseDaemon: ########################################\r\n2022.01.18 22:30:12.564124 [ 310843 ] {} <Fatal> BaseDaemon: (version 22.2.1.2653, build id: 4C4D508A01E79ED3) (from thread 399) (query_id: ce6822cc-e389-4652-9ec1-26b938c1ae85::-1_7_7_0_27) Received signal Segmentation fault (11)\r\n2022.01.18 22:30:12.564157 [ 310843 ] {} <Fatal> BaseDaemon: Address: 0x6a Access: write. Address not mapped to object.\r\n2022.01.18 22:30:12.564182 [ 310843 ] {} <Fatal> BaseDaemon: Stack trace: 0x1342f677 0x1341df79 0x13569f18 0x14273265 0x1432a7f9 0x14afe605 0x14afd8ac 0x14b00358 0x14b008a7 0x14ad0485 0x14ae968d 0x14aeae5f 0x14337b9f 0x13e85072 0x13a73eba 0x13a6bf54 0x13a6ba90 0x13b181a6 0x143ee90f 0x143e7f1b 0x1441ab54 0x14419f62 0xa80431a 0xa803f79 0xa8713ea 0xa873204 0xa86e7f7 0xa8721fd 0x7f0bdd3ad609 0x7f0bdd2d4293\r\n2022.01.18 22:30:12.564241 [ 310843 ] {} <Fatal> BaseDaemon: 2. DB::ActionsDAG::Node::Node(DB::ActionsDAG::Node const&) @ 0x1342f677 in /usr/lib/debug/.build-id/4c/4d508a01e79ed3.debug\r\n2022.01.18 22:30:12.564261 [ 310843 ] {} <Fatal> BaseDaemon: 3. DB::ActionsDAG::clone() const @ 0x1341df79 in /usr/lib/debug/.build-id/4c/4d508a01e79ed3.debug\r\n2022.01.18 22:30:12.564283 [ 310843 ] {} <Fatal> BaseDaemon: 4. DB::ExpressionActions::ExpressionActions(std::__1::shared_ptr<DB::ActionsDAG>, DB::ExpressionActionsSettings const&) @ 0x13569f18 in /usr/lib/debug/.build-id/4c/4d508a01e79ed3.debug\r\n2022.01.18 22:30:12.564302 [ 310843 ] {} <Fatal> BaseDaemon: 5. DB::MergeTreeData::getMinMaxExpr(DB::KeyDescription const&, DB::ExpressionActionsSettings const&) @ 0x14273265 in /usr/lib/debug/.build-id/4c/4d508a01e79ed3.debug\r\n2022.01.18 22:30:12.564342 [ 310843 ] {} <Fatal> BaseDaemon: 6. DB::MergeTreeDataSelectExecutor::filterPartsByPartition(std::__1::vector<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const> > >&, std::__1::optional<std::__1::unordered_set<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::MergeTreeData const&, DB::SelectQueryInfo const&, std::__1::shared_ptr<DB::Context const> const&, std::__1::unordered_map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, long, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, long> > > const*, Poco::Logger*, std::__1::vector<DB::ReadFromMergeTree::IndexStat, std::__1::allocator<DB::ReadFromMergeTree::IndexStat> >&) @ 0x1432a7f9 in /usr/lib/debug/.build-id/4c/4d508a01e79ed3.debug\r\n2022.01.18 22:30:12.564385 [ 310843 ] {} <Fatal> BaseDaemon: 7. DB::ReadFromMergeTree::selectRangesToRead(std::__1::vector<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const> > >, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::SelectQueryInfo const&, std::__1::shared_ptr<DB::Context const>, unsigned int, std::__1::shared_ptr<std::__1::unordered_map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, long, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, long> > > >, DB::MergeTreeData const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, bool, Poco::Logger*) @ 0x14afe605 in /usr/lib/debug/.build-id/4c/4d508a01e79ed3.debug\r\n2022.01.18 22:30:12.564414 [ 310843 ] {} <Fatal> BaseDaemon: 8. DB::ReadFromMergeTree::selectRangesToRead(std::__1::vector<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const> > >) const @ 0x14afd8ac in /usr/lib/debug/.build-id/4c/4d508a01e79ed3.debug\r\n2022.01.18 22:30:12.564433 [ 310843 ] {} <Fatal> BaseDaemon: 9. DB::ReadFromMergeTree::getAnalysisResult() const @ 0x14b00358 in /usr/lib/debug/.build-id/4c/4d508a01e79ed3.debug\r\n2022.01.18 22:30:12.564448 [ 310843 ] {} <Fatal> BaseDaemon: 10. DB::ReadFromMergeTree::initializePipeline(DB::QueryPipelineBuilder&, DB::BuildQueryPipelineSettings const&) @ 0x14b008a7 in /usr/lib/debug/.build-id/4c/4d508a01e79ed3.debug\r\n2022.01.18 22:30:12.564466 [ 310843 ] {} <Fatal> BaseDaemon: 11. DB::ISourceStep::updatePipeline(std::__1::vector<std::__1::unique_ptr<DB::QueryPipelineBuilder, std::__1::default_delete<DB::QueryPipelineBuilder> >, std::__1::allocator<std::__1::unique_ptr<DB::QueryPipelineBuilder, std::__1::default_delete<DB::QueryPipelineBuilder> > > >, DB::BuildQueryPipelineSettings const&) @ 0x14ad0485 in /usr/lib/debug/.build-id/4c/4d508a01e79ed3.debug\r\n2022.01.18 22:30:12.564482 [ 310843 ] {} <Fatal> BaseDaemon: 12. DB::QueryPlan::buildQueryPipeline(DB::QueryPlanOptimizationSettings const&, DB::BuildQueryPipelineSettings const&) @ 0x14ae968d in /usr/lib/debug/.build-id/4c/4d508a01e79ed3.debug\r\n2022.01.18 22:30:12.564497 [ 310843 ] {} <Fatal> BaseDaemon: 13. DB::QueryPlan::convertToPipe(DB::QueryPlanOptimizationSettings const&, DB::BuildQueryPipelineSettings const&) @ 0x14aeae5f in /usr/lib/debug/.build-id/4c/4d508a01e79ed3.debug\r\n2022.01.18 22:30:12.564518 [ 310843 ] {} <Fatal> BaseDaemon: 14. DB::StorageFromMergeTreeDataPart::read(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::SelectQueryInfo&, std::__1::shared_ptr<DB::Context const>, DB::QueryProcessingStage::Enum, unsigned long, unsigned int) @ 0x14337b9f in /usr/lib/debug/.build-id/4c/4d508a01e79ed3.debug\r\n2022.01.18 22:30:12.564544 [ 310843 ] {} <Fatal> BaseDaemon: 15. DB::IStorage::read(DB::QueryPlan&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::SelectQueryInfo&, std::__1::shared_ptr<DB::Context const>, DB::QueryProcessingStage::Enum, unsigned long, unsigned int) @ 0x13e85072 in /usr/lib/debug/.build-id/4c/4d508a01e79ed3.debug\r\n2022.01.18 22:30:12.564561 [ 310843 ] {} <Fatal> BaseDaemon: 16. DB::InterpreterSelectQuery::executeFetchColumns(DB::QueryProcessingStage::Enum, DB::QueryPlan&) @ 0x13a73eba in /usr/lib/debug/.build-id/4c/4d508a01e79ed3.debug\r\n2022.01.18 22:30:12.564578 [ 310843 ] {} <Fatal> BaseDaemon: 17. DB::InterpreterSelectQuery::executeImpl(DB::QueryPlan&, std::__1::optional<DB::Pipe>) @ 0x13a6bf54 in /usr/lib/debug/.build-id/4c/4d508a01e79ed3.debug\r\n2022.01.18 22:30:12.564593 [ 310843 ] {} <Fatal> BaseDaemon: 18. DB::InterpreterSelectQuery::buildQueryPlan(DB::QueryPlan&) @ 0x13a6ba90 in /usr/lib/debug/.build-id/4c/4d508a01e79ed3.debug\r\n2022.01.18 22:30:12.564613 [ 310843 ] {} <Fatal> BaseDaemon: 19. DB::MutationsInterpreter::execute() @ 0x13b181a6 in /usr/lib/debug/.build-id/4c/4d508a01e79ed3.debug\r\n2022.01.18 22:30:12.564628 [ 310843 ] {} <Fatal> BaseDaemon: 20. DB::MutateTask::prepare() @ 0x143ee90f in /usr/lib/debug/.build-id/4c/4d508a01e79ed3.debug\r\n2022.01.18 22:30:12.564643 [ 310843 ] {} <Fatal> BaseDaemon: 21. DB::MutateFromLogEntryTask::executeInnerTask() @ 0x143e7f1b in /usr/lib/debug/.build-id/4c/4d508a01e79ed3.debug\r\n2022.01.18 22:30:12.564657 [ 310843 ] {} <Fatal> BaseDaemon: 22. DB::ReplicatedMergeMutateTaskBase::executeImpl() @ 0x1441ab54 in /usr/lib/debug/.build-id/4c/4d508a01e79ed3.debug\r\n2022.01.18 22:30:12.564671 [ 310843 ] {} <Fatal> BaseDaemon: 23. DB::ReplicatedMergeMutateTaskBase::executeStep() @ 0x14419f62 in /usr/lib/debug/.build-id/4c/4d508a01e79ed3.debug\r\n2022.01.18 22:30:12.564691 [ 310843 ] {} <Fatal> BaseDaemon: 24. DB::MergeTreeBackgroundExecutor<DB::MergeMutateRuntimeQueue>::routine(std::__1::shared_ptr<DB::TaskRuntimeData>) @ 0xa80431a in /usr/lib/debug/.build-id/4c/4d508a01e79ed3.debug\r\n2022.01.18 22:30:12.564709 [ 310843 ] {} <Fatal> BaseDaemon: 25. DB::MergeTreeBackgroundExecutor<DB::MergeMutateRuntimeQueue>::threadFunction() @ 0xa803f79 in /usr/lib/debug/.build-id/4c/4d508a01e79ed3.debug\r\n2022.01.18 22:30:12.564727 [ 310843 ] {} <Fatal> BaseDaemon: 26. ThreadPoolImpl<ThreadFromGlobalPool>::worker(std::__1::__list_iterator<ThreadFromGlobalPool, void*>) @ 0xa8713ea in /usr/lib/debug/.build-id/4c/4d508a01e79ed3.debug\r\n2022.01.18 22:30:12.564752 [ 310843 ] {} <Fatal> BaseDaemon: 27. ThreadFromGlobalPool::ThreadFromGlobalPool<void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>(void&&, void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()&&...)::'lambda'()::operator()() @ 0xa873204 in /usr/lib/debug/.build-id/4c/4d508a01e79ed3.debug\r\n2022.01.18 22:30:12.564770 [ 310843 ] {} <Fatal> BaseDaemon: 28. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0xa86e7f7 in /usr/lib/debug/.build-id/4c/4d508a01e79ed3.debug\r\n2022.01.18 22:30:12.564789 [ 310843 ] {} <Fatal> BaseDaemon: 29. void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()> >(void*) @ 0xa8721fd in /usr/lib/debug/.build-id/4c/4d508a01e79ed3.debug\r\n2022.01.18 22:30:12.564807 [ 310843 ] {} <Fatal> BaseDaemon: 30. ? @ 0x7f0bdd3ad609 in ?\r\n2022.01.18 22:30:12.564817 [ 310843 ] {} <Fatal> BaseDaemon: 31. clone @ 0x7f0bdd2d4293 in ?\r\n2022.01.18 22:30:12.807432 [ 310843 ] {} <Fatal> BaseDaemon: Calculated checksum of the binary: AA48921D5C8CF6227713F69CFAEE6F5E. There is no information about the reference checksum.\r\n2022.01.18 22:30:32.992835 [ 370 ] {} <Fatal> Application: Child process was terminated by signal 11.\r\n```","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33741/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33741/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33736","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33736/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33736/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33736/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33736","id":1106822215,"node_id":"I_kwDOA5dJV85B-MRH","number":33736,"title":"Function subString Inconsistent behavior between constant and table","user":{"login":"RogerYK","id":28089185,"node_id":"MDQ6VXNlcjI4MDg5MTg1","avatar_url":"https://avatars.githubusercontent.com/u/28089185?v=4","gravatar_id":"","url":"https://api.github.com/users/RogerYK","html_url":"https://github.com/RogerYK","followers_url":"https://api.github.com/users/RogerYK/followers","following_url":"https://api.github.com/users/RogerYK/following{/other_user}","gists_url":"https://api.github.com/users/RogerYK/gists{/gist_id}","starred_url":"https://api.github.com/users/RogerYK/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/RogerYK/subscriptions","organizations_url":"https://api.github.com/users/RogerYK/orgs","repos_url":"https://api.github.com/users/RogerYK/repos","events_url":"https://api.github.com/users/RogerYK/events{/privacy}","received_events_url":"https://api.github.com/users/RogerYK/received_events","type":"User","site_admin":false},"labels":[{"id":3260776666,"node_id":"MDU6TGFiZWwzMjYwNzc2NjY2","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/potential%20bug","name":"potential bug","color":"ffc080","default":false,"description":"To be reviewed by developers and confirmed/rejected."}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2022-01-18T12:03:42Z","updated_at":"2022-01-18T12:07:07Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"**Describe what's wrong**\r\nFunction subString Inconsistent behavior between constant and table\r\n\r\n**Does it reproduce on recent release?**\r\nall\r\n\r\n**How to reproduce**\r\n\r\n```sql\r\ncreate table t (s String) ENGINE=MergeTree() order by s;\r\ninsert into t (s) values ('12345');\r\nselect subString(s, -1, -3) from t;\r\nselect subString('12345', -1, -3);\r\n```\r\n\r\n**Expected behavior**\r\n\r\n```\r\n┌─substring(s, -1, -3)─┐\r\n│                      │\r\n└──────────────────────┘\r\n┌─substring('12345', -1, -3)─┐\r\n│                            │\r\n└────────────────────────────┘\r\n\r\n```\r\n\r\n\r\n**Error message and/or stacktrace**\r\n\r\n```\r\n┌─substring(s, -1, -3)─┐\r\n│ 5                    │\r\n└──────────────────────┘\r\n┌─substring('12345', -1, -3)─┐\r\n│                            │\r\n└────────────────────────────┘\r\n\r\n```\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33736/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33736/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33734","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33734/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33734/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33734/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33734","id":1106722358,"node_id":"I_kwDOA5dJV85B9z42","number":33734,"title":"Http query get dictionary in JSON format ","user":{"login":"iusik","id":653759,"node_id":"MDQ6VXNlcjY1Mzc1OQ==","avatar_url":"https://avatars.githubusercontent.com/u/653759?v=4","gravatar_id":"","url":"https://api.github.com/users/iusik","html_url":"https://github.com/iusik","followers_url":"https://api.github.com/users/iusik/followers","following_url":"https://api.github.com/users/iusik/following{/other_user}","gists_url":"https://api.github.com/users/iusik/gists{/gist_id}","starred_url":"https://api.github.com/users/iusik/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/iusik/subscriptions","organizations_url":"https://api.github.com/users/iusik/orgs","repos_url":"https://api.github.com/users/iusik/repos","events_url":"https://api.github.com/users/iusik/events{/privacy}","received_events_url":"https://api.github.com/users/iusik/received_events","type":"User","site_admin":false},"labels":[{"id":386401505,"node_id":"MDU6TGFiZWwzODY0MDE1MDU=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/bug","name":"bug","color":"ee0701","default":true,"description":"Confirmed user-visible misbehaviour in official release"},{"id":1234601830,"node_id":"MDU6TGFiZWwxMjM0NjAxODMw","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/crash","name":"crash","color":"082b68","default":false,"description":"Crash / segfault / abort"}],"state":"open","locked":false,"assignee":{"login":"kitaisreal","id":22458333,"node_id":"MDQ6VXNlcjIyNDU4MzMz","avatar_url":"https://avatars.githubusercontent.com/u/22458333?v=4","gravatar_id":"","url":"https://api.github.com/users/kitaisreal","html_url":"https://github.com/kitaisreal","followers_url":"https://api.github.com/users/kitaisreal/followers","following_url":"https://api.github.com/users/kitaisreal/following{/other_user}","gists_url":"https://api.github.com/users/kitaisreal/gists{/gist_id}","starred_url":"https://api.github.com/users/kitaisreal/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kitaisreal/subscriptions","organizations_url":"https://api.github.com/users/kitaisreal/orgs","repos_url":"https://api.github.com/users/kitaisreal/repos","events_url":"https://api.github.com/users/kitaisreal/events{/privacy}","received_events_url":"https://api.github.com/users/kitaisreal/received_events","type":"User","site_admin":false},"assignees":[{"login":"kitaisreal","id":22458333,"node_id":"MDQ6VXNlcjIyNDU4MzMz","avatar_url":"https://avatars.githubusercontent.com/u/22458333?v=4","gravatar_id":"","url":"https://api.github.com/users/kitaisreal","html_url":"https://github.com/kitaisreal","followers_url":"https://api.github.com/users/kitaisreal/followers","following_url":"https://api.github.com/users/kitaisreal/following{/other_user}","gists_url":"https://api.github.com/users/kitaisreal/gists{/gist_id}","starred_url":"https://api.github.com/users/kitaisreal/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kitaisreal/subscriptions","organizations_url":"https://api.github.com/users/kitaisreal/orgs","repos_url":"https://api.github.com/users/kitaisreal/repos","events_url":"https://api.github.com/users/kitaisreal/events{/privacy}","received_events_url":"https://api.github.com/users/kitaisreal/received_events","type":"User","site_admin":false}],"milestone":null,"comments":1,"created_at":"2022-01-18T10:19:56Z","updated_at":"2022-01-19T05:30:41Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"**Describe what's wrong**\r\n\r\nClickhouse server crashes when sending http request for dictionary with json return format.\r\n\r\n\r\n**Does it reproduce on recent release?**\r\nversion: 21.11.5.33\r\n\r\nIn version: 21.10.5.3 the problem is not reproducing.\r\n\r\n**How to reproduce**\r\n\r\n```\r\nCREATE DICTIONARY geo_city_en\r\n(\r\n    `geoname_id` UInt64,\r\n    `locale_code` String DEFAULT '',\r\n    `continent_code` String DEFAULT '',\r\n    `continent_name` String DEFAULT '',\r\n    `country_iso_code` String DEFAULT '',\r\n    `country_name` String DEFAULT '',\r\n    `subdivision_1_iso_code` String DEFAULT '',\r\n    `subdivision_1_name` String DEFAULT '',\r\n    `subdivision_2_iso_code` String DEFAULT '',\r\n    `subdivision_2_name` String DEFAULT '',\r\n    `city_name` String DEFAULT '',\r\n    `metro_code` UInt32 DEFAULT 0,\r\n    `time_zone` String DEFAULT '',\r\n    `is_in_european_union` UInt8 DEFAULT 0\r\n)\r\nPRIMARY KEY geoname_id\r\nSOURCE(HTTP(URL 'http://s3_proxy.stage_octo:8182/dicts/GeoIP2-City-Locations-en.csv' FORMAT 'CSVWithNames'))\r\nLIFETIME(MIN 0 MAX 300)\r\nLAYOUT(HASHED())\r\nSETTINGS(format_csv_allow_single_quotes = 0)\r\n```\r\n\r\nSend http request to get dictionary:\r\n```\r\nhttp://127.0.0.1:8123/?wait_end_of_query=1&database=default&user=default&password=&wait_end_of_query=1&query=select dictGetString('geo_city_en','country_name', toUInt64(2997838)) as Country_DictName FORMAT JSON\r\n```\r\n\r\n**Expected behavior**\r\n\r\nReturn query result in JSON format.\r\n\r\n**Error message and/or stacktrace**\r\n\r\n```\r\n\r\n2022.01.18 12:20:49.613177 [ 93 ] {58b0300a-75f1-4455-bfbd-65d10bcd17f9} <Debug> executeQuery: (from 10.0.72.3:34832) select dictGetString('dict.geo_city_en','country_name', toUInt64(2997838)) as Country_DictName FORMAT JSON\r\n2022.01.18 12:20:49.613654 [ 93 ] {58b0300a-75f1-4455-bfbd-65d10bcd17f9} <Information> executeQuery: Read 1 rows, 1.00 B in 0.000460057 sec., 2173 rows/sec., 2.12 KiB/sec.\r\n2022.01.18 12:20:49.614070 [ 253 ] {} <Fatal> BaseDaemon: ########################################\r\n2022.01.18 12:20:49.614090 [ 253 ] {} <Fatal> BaseDaemon: (version 21.11.5.33 (official build), build id: 76A10A4F605EF849249F2E8673661F7254B779DA) (from thread 93) (query_id: 58b0300a-75f1-4455-bfbd-65d10bcd17f9) Received signal Segmentation fault (11)\r\n2022.01.18 12:20:49.614108 [ 253 ] {} <Fatal> BaseDaemon: Address: 0x8 Access: write. Address not mapped to object.\r\n2022.01.18 12:20:49.614122 [ 253 ] {} <Fatal> BaseDaemon: Stack trace: 0x130e5bd3 0x9bdfe58 0x130d34ad 0x130d7ac0 0x1313c948 0x15d6e96f 0x15d70d61 0x15e85709 0x15e82e40 0x7fa0ebd90609 0x7fa0ebc8a293\r\n2022.01.18 12:20:49.614174 [ 253 ] {} <Fatal> BaseDaemon: 2. DB::CascadeWriteBuffer::nextImpl() @ 0x130e5bd3 in /usr/bin/clickhouse\r\n2022.01.18 12:20:49.614184 [ 253 ] {} <Fatal> BaseDaemon: 3. DB::WriteBuffer::finalize() @ 0x9bdfe58 in /usr/bin/clickhouse\r\n2022.01.18 12:20:49.614214 [ 253 ] {} <Fatal> BaseDaemon: 4. DB::HTTPHandler::processQuery(DB::HTTPServerRequest&, DB::HTMLForm&, DB::HTTPServerResponse&, DB::HTTPHandler::Output&, std::__1::optional<DB::CurrentThread::QueryScope>&) @ 0x130d34ad in /usr/bin/clickhouse\r\n2022.01.18 12:20:49.614227 [ 253 ] {} <Fatal> BaseDaemon: 5. DB::HTTPHandler::handleRequest(DB::HTTPServerRequest&, DB::HTTPServerResponse&) @ 0x130d7ac0 in /usr/bin/clickhouse\r\n2022.01.18 12:20:49.614234 [ 253 ] {} <Fatal> BaseDaemon: 6. DB::HTTPServerConnection::run() @ 0x1313c948 in /usr/bin/clickhouse\r\n2022.01.18 12:20:49.614241 [ 253 ] {} <Fatal> BaseDaemon: 7. Poco::Net::TCPServerConnection::start() @ 0x15d6e96f in /usr/bin/clickhouse\r\n2022.01.18 12:20:49.614248 [ 253 ] {} <Fatal> BaseDaemon: 8. Poco::Net::TCPServerDispatcher::run() @ 0x15d70d61 in /usr/bin/clickhouse\r\n2022.01.18 12:20:49.614254 [ 253 ] {} <Fatal> BaseDaemon: 9. Poco::PooledThread::run() @ 0x15e85709 in /usr/bin/clickhouse\r\n2022.01.18 12:20:49.614261 [ 253 ] {} <Fatal> BaseDaemon: 10. Poco::ThreadImpl::runnableEntry(void*) @ 0x15e82e40 in /usr/bin/clickhouse\r\n2022.01.18 12:20:49.614271 [ 253 ] {} <Fatal> BaseDaemon: 11. start_thread @ 0x9609 in /usr/lib/x86_64-linux-gnu/libpthread-2.31.so\r\n2022.01.18 12:20:49.614282 [ 253 ] {} <Fatal> BaseDaemon: 12. clone @ 0x122293 in /usr/lib/x86_64-linux-gnu/libc-2.31.so\r\n\r\n```\r\n\r\n\r\n**Additional context**\r\n\r\nThe problem is not reproducing when returning format is CSV.\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33734/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33734/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33726","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33726/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33726/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33726/events","html_url":"https://github.com/ClickHouse/ClickHouse/pull/33726","id":1106557098,"node_id":"PR_kwDOA5dJV84xL1fL","number":33726,"title":"Backport #33021 to 21.8: Fix null pointer dereference in low cardinality data","user":{"login":"robot-clickhouse","id":41385210,"node_id":"MDQ6VXNlcjQxMzg1MjEw","avatar_url":"https://avatars.githubusercontent.com/u/41385210?v=4","gravatar_id":"","url":"https://api.github.com/users/robot-clickhouse","html_url":"https://github.com/robot-clickhouse","followers_url":"https://api.github.com/users/robot-clickhouse/followers","following_url":"https://api.github.com/users/robot-clickhouse/following{/other_user}","gists_url":"https://api.github.com/users/robot-clickhouse/gists{/gist_id}","starred_url":"https://api.github.com/users/robot-clickhouse/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/robot-clickhouse/subscriptions","organizations_url":"https://api.github.com/users/robot-clickhouse/orgs","repos_url":"https://api.github.com/users/robot-clickhouse/repos","events_url":"https://api.github.com/users/robot-clickhouse/events{/privacy}","received_events_url":"https://api.github.com/users/robot-clickhouse/received_events","type":"User","site_admin":false},"labels":[{"id":1316518062,"node_id":"MDU6TGFiZWwxMzE2NTE4MDYy","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/pr-backport","name":"pr-backport","color":"5fadcc","default":false,"description":"Changes, backported to release branch. Do not use manually - automated use only!"}],"state":"open","locked":false,"assignee":{"login":"evillique","id":43110995,"node_id":"MDQ6VXNlcjQzMTEwOTk1","avatar_url":"https://avatars.githubusercontent.com/u/43110995?v=4","gravatar_id":"","url":"https://api.github.com/users/evillique","html_url":"https://github.com/evillique","followers_url":"https://api.github.com/users/evillique/followers","following_url":"https://api.github.com/users/evillique/following{/other_user}","gists_url":"https://api.github.com/users/evillique/gists{/gist_id}","starred_url":"https://api.github.com/users/evillique/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/evillique/subscriptions","organizations_url":"https://api.github.com/users/evillique/orgs","repos_url":"https://api.github.com/users/evillique/repos","events_url":"https://api.github.com/users/evillique/events{/privacy}","received_events_url":"https://api.github.com/users/evillique/received_events","type":"User","site_admin":false},"assignees":[{"login":"evillique","id":43110995,"node_id":"MDQ6VXNlcjQzMTEwOTk1","avatar_url":"https://avatars.githubusercontent.com/u/43110995?v=4","gravatar_id":"","url":"https://api.github.com/users/evillique","html_url":"https://github.com/evillique","followers_url":"https://api.github.com/users/evillique/followers","following_url":"https://api.github.com/users/evillique/following{/other_user}","gists_url":"https://api.github.com/users/evillique/gists{/gist_id}","starred_url":"https://api.github.com/users/evillique/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/evillique/subscriptions","organizations_url":"https://api.github.com/users/evillique/orgs","repos_url":"https://api.github.com/users/evillique/repos","events_url":"https://api.github.com/users/evillique/events{/privacy}","received_events_url":"https://api.github.com/users/evillique/received_events","type":"User","site_admin":false}],"milestone":null,"comments":0,"created_at":"2022-01-18T07:19:48Z","updated_at":"2022-01-19T21:09:07Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/pulls/33726","html_url":"https://github.com/ClickHouse/ClickHouse/pull/33726","diff_url":"https://github.com/ClickHouse/ClickHouse/pull/33726.diff","patch_url":"https://github.com/ClickHouse/ClickHouse/pull/33726.patch","merged_at":null},"body":"Original pull-request #33021\nCherry-pick pull-request #33543\n\nThis pull-request is a last step of an automated backporting.\nTreat it as a standard pull-request: look at the checks and resolve conflicts.\nMerge it only if you intend to backport changes to the target branch, otherwise just close it.\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33726/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33726/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33723","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33723/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33723/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33723/events","html_url":"https://github.com/ClickHouse/ClickHouse/pull/33723","id":1106511092,"node_id":"PR_kwDOA5dJV84xLr9o","number":33723,"title":"Parse and store opentelemetry trace-id in big-endian order","user":{"login":"FrankChen021","id":6525742,"node_id":"MDQ6VXNlcjY1MjU3NDI=","avatar_url":"https://avatars.githubusercontent.com/u/6525742?v=4","gravatar_id":"","url":"https://api.github.com/users/FrankChen021","html_url":"https://github.com/FrankChen021","followers_url":"https://api.github.com/users/FrankChen021/followers","following_url":"https://api.github.com/users/FrankChen021/following{/other_user}","gists_url":"https://api.github.com/users/FrankChen021/gists{/gist_id}","starred_url":"https://api.github.com/users/FrankChen021/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/FrankChen021/subscriptions","organizations_url":"https://api.github.com/users/FrankChen021/orgs","repos_url":"https://api.github.com/users/FrankChen021/repos","events_url":"https://api.github.com/users/FrankChen021/events{/privacy}","received_events_url":"https://api.github.com/users/FrankChen021/received_events","type":"User","site_admin":false},"labels":[{"id":1304141686,"node_id":"MDU6TGFiZWwxMzA0MTQxNjg2","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/pr-improvement","name":"pr-improvement","color":"007700","default":false,"description":"Pull request with some product improvements"},{"id":3627025164,"node_id":"LA_kwDOA5dJV87YMAMM","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/can%20be%20tested","name":"can be tested","color":"1d76db","default":false,"description":""}],"state":"open","locked":false,"assignee":{"login":"evillique","id":43110995,"node_id":"MDQ6VXNlcjQzMTEwOTk1","avatar_url":"https://avatars.githubusercontent.com/u/43110995?v=4","gravatar_id":"","url":"https://api.github.com/users/evillique","html_url":"https://github.com/evillique","followers_url":"https://api.github.com/users/evillique/followers","following_url":"https://api.github.com/users/evillique/following{/other_user}","gists_url":"https://api.github.com/users/evillique/gists{/gist_id}","starred_url":"https://api.github.com/users/evillique/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/evillique/subscriptions","organizations_url":"https://api.github.com/users/evillique/orgs","repos_url":"https://api.github.com/users/evillique/repos","events_url":"https://api.github.com/users/evillique/events{/privacy}","received_events_url":"https://api.github.com/users/evillique/received_events","type":"User","site_admin":false},"assignees":[{"login":"evillique","id":43110995,"node_id":"MDQ6VXNlcjQzMTEwOTk1","avatar_url":"https://avatars.githubusercontent.com/u/43110995?v=4","gravatar_id":"","url":"https://api.github.com/users/evillique","html_url":"https://github.com/evillique","followers_url":"https://api.github.com/users/evillique/followers","following_url":"https://api.github.com/users/evillique/following{/other_user}","gists_url":"https://api.github.com/users/evillique/gists{/gist_id}","starred_url":"https://api.github.com/users/evillique/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/evillique/subscriptions","organizations_url":"https://api.github.com/users/evillique/orgs","repos_url":"https://api.github.com/users/evillique/repos","events_url":"https://api.github.com/users/evillique/events{/privacy}","received_events_url":"https://api.github.com/users/evillique/received_events","type":"User","site_admin":false}],"milestone":null,"comments":6,"created_at":"2022-01-18T06:05:35Z","updated_at":"2022-01-21T01:39:32Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/pulls/33723","html_url":"https://github.com/ClickHouse/ClickHouse/pull/33723","diff_url":"https://github.com/ClickHouse/ClickHouse/pull/33723.diff","patch_url":"https://github.com/ClickHouse/ClickHouse/pull/33723.patch","merged_at":null},"body":"Changelog category (leave one):\r\n- Improvement\r\n\r\nChangelog entry (a user-readable short description of the changes that goes to CHANGELOG.md):\r\n- Parse and store OpenTelemetry trace-id in big-endian order\r\n\r\n\r\nDetailed description / Documentation draft:\r\n\r\nClickHouse now parses the trace id from the opentelemetry HTTP `traceparent` in little end order, which is counterintuitive for users to search the trace in the span log or export the  span log to other system by using URL engine. Users are always struggling dealing with the incorrect string order of the trace id which are stored in ClickHouse and upstream applications.\r\n\r\nLet's take an example.\r\n\r\nBy giving the trace id as **5ff09c5da8c64a1db6c94a073bf0c426**\r\n\r\n![image](https://user-images.githubusercontent.com/6525742/149876858-9054c2a6-0e90-4159-b227-420777f8ea67.png)\r\n\r\nHowever, when we check the records stored in the opentelementry_span_log table, we can see that the trace id is displayed as **6c94a073bf0c426-5ff09c5da8c64a1db**. Note that the first 16 characters and the last 16 characters are in wrong order with the input id.\r\n\r\n![image](https://user-images.githubusercontent.com/6525742/149876984-ab880152-55a8-4121-9c19-9148e7d2ebd0.png)\r\n\r\nIt's not able for us to link the span logs with upstreaming application's together because of the wrong string order.\r\n\r\n## Analysis\r\nCurrent code uses `readHex` function to parse the trace id. It does parse the string from head of the string to tail as if it treats the input in big-endian order.\r\n\r\nBut the problem is, it uses a multiply operator `x *= 16` to calculate the value.\r\n\r\n![image](https://user-images.githubusercontent.com/6525742/149878107-a8d89adb-44f1-4471-8780-ecd2b2756657.png)\r\n\r\nFor the trace id, its underlying data type is `UInt128`, which is actually an array of two `UInt64`. This `UInt128` overrides the `operator *` that it puts the higher 64 bit at index 1 of the array, the lower 64 bit at index 0 of the array.\r\n\r\n![image](https://user-images.githubusercontent.com/6525742/149878058-ca0bc4ae-5fba-436d-bda1-0ba48ad1975b.png)\r\n\r\nThis is why we see the query result of trace id' string order is reversed.\r\n\r\n## The implementation of UUIDStringToNum\r\nActually, the current function `UUIDStringToNum` treats the input string as big-endian order. That means, the index 0 at the underlying UInt64 array stores the higher 64 bit, while the index 1 stores the lower 64 bits. \r\n\r\nThis is a correct behavior that it uses totally different string parse logic that differs from the `readHex` function above.\r\n![image](https://user-images.githubusercontent.com/6525742/149879901-2bdc248d-d266-4c96-88de-d489d3c8a4e8.png)\r\n\r\n\r\n## Changes\r\nSo, in this PR, I changed the parse logic of trace id, to treat it as big-endian order and stores it as big-endian order, like `UUIDStringToNum` has done.\r\n\r\nAnd original `readHex` is replaced by some `unhex` functions to eliminate code duplication. \r\nNote that `unhexUInt<128>` is not used to parse trace id because it also stores the higher 64-bits at index 1 of underlying UInt64 array.\r\n\r\nAfter this change, the trace_id that are stored in the span log is in the right string order with input, so that we can easily link the records together by this trace_id.\r\n\r\n![image](https://user-images.githubusercontent.com/6525742/149879370-b2c74885-e191-40b7-855d-ed2257d3330b.png)\r\n\r\n![image](https://user-images.githubusercontent.com/6525742/149879467-4908de4c-39f9-4916-a556-f0884e525e95.png)\r\n\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33723/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33723/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33717","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33717/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33717/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33717/events","html_url":"https://github.com/ClickHouse/ClickHouse/pull/33717","id":1106344813,"node_id":"PR_kwDOA5dJV84xLKj0","number":33717,"title":"Local cache for remote filesystem","user":{"login":"kssenii","id":54203879,"node_id":"MDQ6VXNlcjU0MjAzODc5","avatar_url":"https://avatars.githubusercontent.com/u/54203879?v=4","gravatar_id":"","url":"https://api.github.com/users/kssenii","html_url":"https://github.com/kssenii","followers_url":"https://api.github.com/users/kssenii/followers","following_url":"https://api.github.com/users/kssenii/following{/other_user}","gists_url":"https://api.github.com/users/kssenii/gists{/gist_id}","starred_url":"https://api.github.com/users/kssenii/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kssenii/subscriptions","organizations_url":"https://api.github.com/users/kssenii/orgs","repos_url":"https://api.github.com/users/kssenii/repos","events_url":"https://api.github.com/users/kssenii/events{/privacy}","received_events_url":"https://api.github.com/users/kssenii/received_events","type":"User","site_admin":false},"labels":[{"id":1309674771,"node_id":"MDU6TGFiZWwxMzA5Njc0Nzcx","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/pr-feature","name":"pr-feature","color":"007700","default":false,"description":"Pull request with new product feature"},{"id":1807683251,"node_id":"MDU6TGFiZWwxODA3NjgzMjUx","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/doc-alert","name":"doc-alert","color":"e51068","default":false,"description":"PR where any documentation work is needed or proceeded"}],"state":"open","locked":false,"assignee":{"login":"alesapin","id":3684697,"node_id":"MDQ6VXNlcjM2ODQ2OTc=","avatar_url":"https://avatars.githubusercontent.com/u/3684697?v=4","gravatar_id":"","url":"https://api.github.com/users/alesapin","html_url":"https://github.com/alesapin","followers_url":"https://api.github.com/users/alesapin/followers","following_url":"https://api.github.com/users/alesapin/following{/other_user}","gists_url":"https://api.github.com/users/alesapin/gists{/gist_id}","starred_url":"https://api.github.com/users/alesapin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alesapin/subscriptions","organizations_url":"https://api.github.com/users/alesapin/orgs","repos_url":"https://api.github.com/users/alesapin/repos","events_url":"https://api.github.com/users/alesapin/events{/privacy}","received_events_url":"https://api.github.com/users/alesapin/received_events","type":"User","site_admin":false},"assignees":[{"login":"alesapin","id":3684697,"node_id":"MDQ6VXNlcjM2ODQ2OTc=","avatar_url":"https://avatars.githubusercontent.com/u/3684697?v=4","gravatar_id":"","url":"https://api.github.com/users/alesapin","html_url":"https://github.com/alesapin","followers_url":"https://api.github.com/users/alesapin/followers","following_url":"https://api.github.com/users/alesapin/following{/other_user}","gists_url":"https://api.github.com/users/alesapin/gists{/gist_id}","starred_url":"https://api.github.com/users/alesapin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alesapin/subscriptions","organizations_url":"https://api.github.com/users/alesapin/orgs","repos_url":"https://api.github.com/users/alesapin/repos","events_url":"https://api.github.com/users/alesapin/events{/privacy}","received_events_url":"https://api.github.com/users/alesapin/received_events","type":"User","site_admin":false}],"milestone":null,"comments":6,"created_at":"2022-01-17T23:45:20Z","updated_at":"2022-01-30T14:12:27Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"draft":true,"pull_request":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/pulls/33717","html_url":"https://github.com/ClickHouse/ClickHouse/pull/33717","diff_url":"https://github.com/ClickHouse/ClickHouse/pull/33717.diff","patch_url":"https://github.com/ClickHouse/ClickHouse/pull/33717.patch","merged_at":null},"body":"Changelog category (leave one):\r\n- New Feature\r\n\r\n\r\nChangelog entry (a user-readable short description of the changes that goes to CHANGELOG.md):\r\nCloses https://github.com/ClickHouse/ClickHouse/issues/28961. Closes #29638.\r\n\r\n\r\nDetailed description / Documentation draft:\r\n.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33717/reactions","total_count":5,"+1":3,"-1":0,"laugh":0,"hooray":2,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33717/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33716","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33716/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33716/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33716/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33716","id":1106320675,"node_id":"I_kwDOA5dJV85B8R0j","number":33716,"title":"Fix the remaining functional tests on AArch64","user":{"login":"alexey-milovidov","id":18581488,"node_id":"MDQ6VXNlcjE4NTgxNDg4","avatar_url":"https://avatars.githubusercontent.com/u/18581488?v=4","gravatar_id":"","url":"https://api.github.com/users/alexey-milovidov","html_url":"https://github.com/alexey-milovidov","followers_url":"https://api.github.com/users/alexey-milovidov/followers","following_url":"https://api.github.com/users/alexey-milovidov/following{/other_user}","gists_url":"https://api.github.com/users/alexey-milovidov/gists{/gist_id}","starred_url":"https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexey-milovidov/subscriptions","organizations_url":"https://api.github.com/users/alexey-milovidov/orgs","repos_url":"https://api.github.com/users/alexey-milovidov/repos","events_url":"https://api.github.com/users/alexey-milovidov/events{/privacy}","received_events_url":"https://api.github.com/users/alexey-milovidov/received_events","type":"User","site_admin":false},"labels":[{"id":521113272,"node_id":"MDU6TGFiZWw1MjExMTMyNzI=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/build","name":"build","color":"800000","default":false,"description":""},{"id":1955634273,"node_id":"MDU6TGFiZWwxOTU1NjM0Mjcz","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/testing","name":"testing","color":"c9a224","default":false,"description":"Special issue with list of bugs found by CI"},{"id":2402913184,"node_id":"MDU6TGFiZWwyNDAyOTEzMTg0","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-aarch64","name":"comp-aarch64","color":"b5bcff","default":false,"description":"arm / aarch platform specific"}],"state":"open","locked":false,"assignee":{"login":"vdimir","id":7023786,"node_id":"MDQ6VXNlcjcwMjM3ODY=","avatar_url":"https://avatars.githubusercontent.com/u/7023786?v=4","gravatar_id":"","url":"https://api.github.com/users/vdimir","html_url":"https://github.com/vdimir","followers_url":"https://api.github.com/users/vdimir/followers","following_url":"https://api.github.com/users/vdimir/following{/other_user}","gists_url":"https://api.github.com/users/vdimir/gists{/gist_id}","starred_url":"https://api.github.com/users/vdimir/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vdimir/subscriptions","organizations_url":"https://api.github.com/users/vdimir/orgs","repos_url":"https://api.github.com/users/vdimir/repos","events_url":"https://api.github.com/users/vdimir/events{/privacy}","received_events_url":"https://api.github.com/users/vdimir/received_events","type":"User","site_admin":false},"assignees":[{"login":"vdimir","id":7023786,"node_id":"MDQ6VXNlcjcwMjM3ODY=","avatar_url":"https://avatars.githubusercontent.com/u/7023786?v=4","gravatar_id":"","url":"https://api.github.com/users/vdimir","html_url":"https://github.com/vdimir","followers_url":"https://api.github.com/users/vdimir/followers","following_url":"https://api.github.com/users/vdimir/following{/other_user}","gists_url":"https://api.github.com/users/vdimir/gists{/gist_id}","starred_url":"https://api.github.com/users/vdimir/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vdimir/subscriptions","organizations_url":"https://api.github.com/users/vdimir/orgs","repos_url":"https://api.github.com/users/vdimir/repos","events_url":"https://api.github.com/users/vdimir/events{/privacy}","received_events_url":"https://api.github.com/users/vdimir/received_events","type":"User","site_admin":false}],"milestone":null,"comments":0,"created_at":"2022-01-17T22:56:25Z","updated_at":"2022-01-17T22:59:01Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"| check_name | name | c | argMax(report_url, check_start_time) |\r\n|:-|:-|-:|:-|\r\n| Stateful tests (aarch64, actions) | 00095_hyperscan_profiler | 44 | https://s3.amazonaws.com/clickhouse-test-reports/0/48d736a0c702e117e45a66538da2b25ea178c112/stateful_tests__aarch64__actions_.html |\r\n| Stateful tests (aarch64, actions) | 00092_obfuscator | 44 | https://s3.amazonaws.com/clickhouse-test-reports/0/48d736a0c702e117e45a66538da2b25ea178c112/stateful_tests__aarch64__actions_.html |\r\n| Stateless tests (aarch64, actions) | 01906_bigint_accurate_cast_ubsan | 20 | https://s3.amazonaws.com/clickhouse-test-reports/0/3414cd8d567afe4a6763d07f3009733e4dc0f362/stateless_tests__aarch64__actions_.html |\r\n| Stateless tests (aarch64, actions) | 02114_hdfs_bad_url | 20 | https://s3.amazonaws.com/clickhouse-test-reports/0/3414cd8d567afe4a6763d07f3009733e4dc0f362/stateless_tests__aarch64__actions_.html |\r\n| Stateless tests (aarch64, actions) | 02004_max_hyperscan_regex_length | 20 | https://s3.amazonaws.com/clickhouse-test-reports/0/3414cd8d567afe4a6763d07f3009733e4dc0f362/stateless_tests__aarch64__actions_.html |\r\n| Stateless tests (aarch64, actions) | 02113_hdfs_assert | 20 | https://s3.amazonaws.com/clickhouse-test-reports/0/3414cd8d567afe4a6763d07f3009733e4dc0f362/stateless_tests__aarch64__actions_.html |\r\n| Stateless tests (aarch64, actions) | 02113_base64encode_trailing_bytes_1 | 20 | https://s3.amazonaws.com/clickhouse-test-reports/0/3414cd8d567afe4a6763d07f3009733e4dc0f362/stateless_tests__aarch64__actions_.html |\r\n| Stateless tests (aarch64, actions) | 02152_http_external_tables_memory_tracking | 20 | https://s3.amazonaws.com/clickhouse-test-reports/0/3414cd8d567afe4a6763d07f3009733e4dc0f362/stateless_tests__aarch64__actions_.html |\r\n| Stateless tests (aarch64, actions) | 02113_base64encode_trailing_bytes | 20 | https://s3.amazonaws.com/clickhouse-test-reports/0/3414cd8d567afe4a6763d07f3009733e4dc0f362/stateless_tests__aarch64__actions_.html |\r\n| Stateless tests (aarch64, actions) | 01854_HTTP_dict_decompression | 20 | https://s3.amazonaws.com/clickhouse-test-reports/0/3414cd8d567afe4a6763d07f3009733e4dc0f362/stateless_tests__aarch64__actions_.html |\r\n| Stateless tests (aarch64, actions) | 00929_multi_match_edit_distance | 19 | https://s3.amazonaws.com/clickhouse-test-reports/0/3414cd8d567afe4a6763d07f3009733e4dc0f362/stateless_tests__aarch64__actions_.html |\r\n| Stateless tests (aarch64, actions) | 01492_format_readable_quantity | 19 | https://s3.amazonaws.com/clickhouse-test-reports/0/3414cd8d567afe4a6763d07f3009733e4dc0f362/stateless_tests__aarch64__actions_.html |\r\n| Stateless tests (aarch64, actions) | 00926_multimatch | 19 | https://s3.amazonaws.com/clickhouse-test-reports/0/3414cd8d567afe4a6763d07f3009733e4dc0f362/stateless_tests__aarch64__actions_.html |\r\n| Stateless tests (aarch64, actions) | 01681_arg_min_max_if_fix | 19 | https://s3.amazonaws.com/clickhouse-test-reports/0/3414cd8d567afe4a6763d07f3009733e4dc0f362/stateless_tests__aarch64__actions_.html |\r\n| Stateless tests (aarch64, actions) | 01670_dictionary_create_key_expression | 19 | https://s3.amazonaws.com/clickhouse-test-reports/0/3414cd8d567afe4a6763d07f3009733e4dc0f362/stateless_tests__aarch64__actions_.html |\r\n| Stateless tests (aarch64, actions) | 01569_query_profiler_big_query_id | 19 | https://s3.amazonaws.com/clickhouse-test-reports/0/3414cd8d567afe4a6763d07f3009733e4dc0f362/stateless_tests__aarch64__actions_.html |\r\n| Stateless tests (aarch64, actions) | 01473_event_time_microseconds | 19 | https://s3.amazonaws.com/clickhouse-test-reports/0/3414cd8d567afe4a6763d07f3009733e4dc0f362/stateless_tests__aarch64__actions_.html |\r\n| Stateless tests (aarch64, actions) | 01666_gcd_ubsan | 19 | https://s3.amazonaws.com/clickhouse-test-reports/0/3414cd8d567afe4a6763d07f3009733e4dc0f362/stateless_tests__aarch64__actions_.html |\r\n| Stateless tests (aarch64, actions) | 01721_dictionary_decimal_p_s | 19 | https://s3.amazonaws.com/clickhouse-test-reports/0/3414cd8d567afe4a6763d07f3009733e4dc0f362/stateless_tests__aarch64__actions_.html |\r\n| Stateless tests (aarch64, actions) | 00974_query_profiler | 19 | https://s3.amazonaws.com/clickhouse-test-reports/0/3414cd8d567afe4a6763d07f3009733e4dc0f362/stateless_tests__aarch64__actions_.html |\r\n| Stateless tests (aarch64, actions) | 01103_check_cpu_instructions_at_startup | 19 | https://s3.amazonaws.com/clickhouse-test-reports/0/3414cd8d567afe4a6763d07f3009733e4dc0f362/stateless_tests__aarch64__actions_.html |\r\n| Stateless tests (aarch64, actions) | 01662_date_ubsan | 19 | https://s3.amazonaws.com/clickhouse-test-reports/0/3414cd8d567afe4a6763d07f3009733e4dc0f362/stateless_tests__aarch64__actions_.html |\r\n| Stateless tests (aarch64, actions) | 01092_memory_profiler | 19 | https://s3.amazonaws.com/clickhouse-test-reports/0/3414cd8d567afe4a6763d07f3009733e4dc0f362/stateless_tests__aarch64__actions_.html |\r\n| Stateless tests (aarch64, actions) | 01526_max_untracked_memory | 19 | https://s3.amazonaws.com/clickhouse-test-reports/0/3414cd8d567afe4a6763d07f3009733e4dc0f362/stateless_tests__aarch64__actions_.html |\r\n| Stateless tests (aarch64, actions) | 02008_complex_key_range_hashed_dictionary | 19 | https://s3.amazonaws.com/clickhouse-test-reports/0/3414cd8d567afe4a6763d07f3009733e4dc0f362/stateless_tests__aarch64__actions_.html |\r\n| Stateless tests (aarch64, actions) | 01016_simhash_minhash | 19 | https://s3.amazonaws.com/clickhouse-test-reports/0/3414cd8d567afe4a6763d07f3009733e4dc0f362/stateless_tests__aarch64__actions_.html |\r\n| Stateless tests (aarch64, actions) | 01086_odbc_roundtrip | 19 | https://s3.amazonaws.com/clickhouse-test-reports/0/3414cd8d567afe4a6763d07f3009733e4dc0f362/stateless_tests__aarch64__actions_.html |\r\n| Stateless tests (aarch64, actions) | 00918_json_functions | 19 | https://s3.amazonaws.com/clickhouse-test-reports/0/3414cd8d567afe4a6763d07f3009733e4dc0f362/stateless_tests__aarch64__actions_.html |\r\n| Stateless tests (aarch64, actions) | 01030_storage_hdfs_syntax | 19 | https://s3.amazonaws.com/clickhouse-test-reports/0/3414cd8d567afe4a6763d07f3009733e4dc0f362/stateless_tests__aarch64__actions_.html |\r\n| Stateless tests (aarch64, actions) | 01666_lcm_ubsan | 19 | https://s3.amazonaws.com/clickhouse-test-reports/0/3414cd8d567afe4a6763d07f3009733e4dc0f362/stateless_tests__aarch64__actions_.html |\r\n\r\nhttps://gh-api.clickhouse.com/play?user=play&url=https%3A%2F%2Fplay-ci.clickhouse.com%2F#U0VMRUNUIGNoZWNrX25hbWUsIHRlc3RfbmFtZSBBUyBuYW1lLCBjb3VudCgpIEFTIGMsIGFyZ01heChyZXBvcnRfdXJsLCBjaGVja19zdGFydF90aW1lKQpGUk9NIGBnaC1kYXRhYC5jaGVja3MKV0hFUkUKICAgIGNoZWNrX25hbWUgTElLRSAnJVN0YXRlJScKICAgIEFORCAodGVzdF9zdGF0dXMgTElLRSAnRiUnIE9SIHRlc3Rfc3RhdHVzIExJS0UgJ0UlJykKICAgIEFORCBwdWxsX3JlcXVlc3RfbnVtYmVyID0gMAogICAgQU5EIGNoZWNrX3N0YXJ0X3RpbWUgPj0gdG9kYXkoKSAtIDcKR1JPVVAgQlkgY2hlY2tfbmFtZSwgbmFtZQpIQVZJTkcgbWF4KGNoZWNrX3N0YXJ0X3RpbWUpID49IG5vdygpIC0gSU5URVJWQUwgNDggSE9VUgpPUkRFUiBCWSBjIERFU0M=","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33716/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33716/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33712","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33712/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33712/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33712/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33712","id":1106118432,"node_id":"I_kwDOA5dJV85B7gcg","number":33712,"title":"After 439 exception clickhouse does not release threads","user":{"login":"rad1k4l","id":42554795,"node_id":"MDQ6VXNlcjQyNTU0Nzk1","avatar_url":"https://avatars.githubusercontent.com/u/42554795?v=4","gravatar_id":"","url":"https://api.github.com/users/rad1k4l","html_url":"https://github.com/rad1k4l","followers_url":"https://api.github.com/users/rad1k4l/followers","following_url":"https://api.github.com/users/rad1k4l/following{/other_user}","gists_url":"https://api.github.com/users/rad1k4l/gists{/gist_id}","starred_url":"https://api.github.com/users/rad1k4l/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rad1k4l/subscriptions","organizations_url":"https://api.github.com/users/rad1k4l/orgs","repos_url":"https://api.github.com/users/rad1k4l/repos","events_url":"https://api.github.com/users/rad1k4l/events{/privacy}","received_events_url":"https://api.github.com/users/rad1k4l/received_events","type":"User","site_admin":false},"labels":[{"id":3260776666,"node_id":"MDU6TGFiZWwzMjYwNzc2NjY2","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/potential%20bug","name":"potential bug","color":"ffc080","default":false,"description":"To be reviewed by developers and confirmed/rejected."}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2022-01-17T17:39:52Z","updated_at":"2022-01-20T10:10:56Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"I have a table **A** which have ~ 200M rows and table **B** with same structure. Clickhouse uses in normal state up to 1k threads. I tried transfer data from A to B with query `INSERT INTO B SELECT * FROM A`. Thread count used by clickhouse incremented to 2k and query throws exception  `Code: 439. DB::Exception: Received from localhost:9000. DB::Exception: Cannot schedule a task: no free thread`. After that clickhouse should decrement thread count using for query execution. But thread count still is 2k \r\n\r\n**Does it reproduce on recent release?**\r\n\r\nNo , i am use clickhouse `21.12.3.32` version\r\n\r\n\r\n**How to reproduce**\r\n\r\n* Which ClickHouse server version to use\r\n*  `21.12.3.32` version\r\n* Queries to run that lead to unexpected result\r\n`INSERT INTO B SELECT * FROM A`\r\n\r\n**Expected behavior**\r\n\r\n> 1k thread using by clickhouse process\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33712/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33712/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33711","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33711/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33711/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33711/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33711","id":1106107621,"node_id":"I_kwDOA5dJV85B7dzl","number":33711,"title":"block columns number mismatch","user":{"login":"amosbird","id":5085485,"node_id":"MDQ6VXNlcjUwODU0ODU=","avatar_url":"https://avatars.githubusercontent.com/u/5085485?v=4","gravatar_id":"","url":"https://api.github.com/users/amosbird","html_url":"https://github.com/amosbird","followers_url":"https://api.github.com/users/amosbird/followers","following_url":"https://api.github.com/users/amosbird/following{/other_user}","gists_url":"https://api.github.com/users/amosbird/gists{/gist_id}","starred_url":"https://api.github.com/users/amosbird/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/amosbird/subscriptions","organizations_url":"https://api.github.com/users/amosbird/orgs","repos_url":"https://api.github.com/users/amosbird/repos","events_url":"https://api.github.com/users/amosbird/events{/privacy}","received_events_url":"https://api.github.com/users/amosbird/received_events","type":"User","site_admin":false},"labels":[{"id":2104602822,"node_id":"MDU6TGFiZWwyMTA0NjAyODIy","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/fuzz","name":"fuzz","color":"abc4ea","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-01-17T17:25:18Z","updated_at":"2022-01-17T17:25:18Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"body":"https://s3.amazonaws.com/clickhouse-test-reports/33695/6d62060e16969fcd31dd180f64fdbab24fa9667c/fuzzer_astfuzzerdebug,actions//report.html\r\n\r\n```\r\nSELECT (NULL, NULL, NULL, NULL, NULL, NULL, NULL)\r\nFROM numbers(0)\r\nGROUP BY number\r\n    WITH TOTALS\r\nHAVING sum(number) <= arrayJoin([])\r\n```","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33711/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33711/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33710","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33710/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33710/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33710/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33710","id":1106073363,"node_id":"I_kwDOA5dJV85B7VcT","number":33710,"title":"Garbage on FS after replicated merge tree table creation with invalid zk path","user":{"login":"GrigoryPervakov","id":36988782,"node_id":"MDQ6VXNlcjM2OTg4Nzgy","avatar_url":"https://avatars.githubusercontent.com/u/36988782?v=4","gravatar_id":"","url":"https://api.github.com/users/GrigoryPervakov","html_url":"https://github.com/GrigoryPervakov","followers_url":"https://api.github.com/users/GrigoryPervakov/followers","following_url":"https://api.github.com/users/GrigoryPervakov/following{/other_user}","gists_url":"https://api.github.com/users/GrigoryPervakov/gists{/gist_id}","starred_url":"https://api.github.com/users/GrigoryPervakov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/GrigoryPervakov/subscriptions","organizations_url":"https://api.github.com/users/GrigoryPervakov/orgs","repos_url":"https://api.github.com/users/GrigoryPervakov/repos","events_url":"https://api.github.com/users/GrigoryPervakov/events{/privacy}","received_events_url":"https://api.github.com/users/GrigoryPervakov/received_events","type":"User","site_admin":false},"labels":[{"id":1365579236,"node_id":"MDU6TGFiZWwxMzY1NTc5MjM2","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/minor","name":"minor","color":"FFF8F8","default":false,"description":"Priority: minor"},{"id":1575085465,"node_id":"MDU6TGFiZWwxNTc1MDg1NDY1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/unexpected%20behaviour","name":"unexpected behaviour","color":"e088ca","default":false,"description":""},{"id":3679617212,"node_id":"LA_kwDOA5dJV87bUoC8","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/yandex","name":"yandex","color":"ffcc00","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2022-01-17T16:47:58Z","updated_at":"2022-01-24T03:50:20Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Garbage on a filesystem after error with invalid zk path, you can't create a table with fixed path due to `Directory for table data data/test_db/test_table/ already exists.` error.\r\n\r\n> A clear and concise description of what works not as it is supposed to.\r\n\r\nI reproduced on 21.8.13.6 and 21.11.9.1\r\n\r\n[The list of releases](https://github.com/ClickHouse/ClickHouse/blob/master/utils/list-versions/version_date.tsv)\r\n\r\n**How to reproduce**\r\n\r\n1. Create Ordinary database(issue less significant on Atomic engine, because it generates new uid on retry)\r\n2. Create ReplicatedMergeTree table with invalid zk path(i.e. without leading /\r\n`CREATE TABLE test_db.test_table (id String) ENGINE = ReplicatedMergeTree('default.test_table', '{replica}') ORDER BY id SETTINGS index_granularity = 8192`, get error `DB::Exception: ZooKeeper path must starts with '/', got 'default.test_table'`\r\n4. Retry query(possibly with fixed zk path), get error `DB::Exception: Directory for table data data/test_db/test_table/ already exists.`\r\n\r\n**Expected behavior**\r\nThe failed table should not create garbage on fs.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33710/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33710/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33708","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33708/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33708/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33708/events","html_url":"https://github.com/ClickHouse/ClickHouse/pull/33708","id":1105996906,"node_id":"PR_kwDOA5dJV84xKB1m","number":33708,"title":"WIP USING for multple JOIN","user":{"login":"ilejn","id":360758,"node_id":"MDQ6VXNlcjM2MDc1OA==","avatar_url":"https://avatars.githubusercontent.com/u/360758?v=4","gravatar_id":"","url":"https://api.github.com/users/ilejn","html_url":"https://github.com/ilejn","followers_url":"https://api.github.com/users/ilejn/followers","following_url":"https://api.github.com/users/ilejn/following{/other_user}","gists_url":"https://api.github.com/users/ilejn/gists{/gist_id}","starred_url":"https://api.github.com/users/ilejn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilejn/subscriptions","organizations_url":"https://api.github.com/users/ilejn/orgs","repos_url":"https://api.github.com/users/ilejn/repos","events_url":"https://api.github.com/users/ilejn/events{/privacy}","received_events_url":"https://api.github.com/users/ilejn/received_events","type":"User","site_admin":false},"labels":[{"id":1304141686,"node_id":"MDU6TGFiZWwxMzA0MTQxNjg2","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/pr-improvement","name":"pr-improvement","color":"007700","default":false,"description":"Pull request with some product improvements"},{"id":3627025164,"node_id":"LA_kwDOA5dJV87YMAMM","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/can%20be%20tested","name":"can be tested","color":"1d76db","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-01-17T15:29:57Z","updated_at":"2022-01-17T15:36:30Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/pulls/33708","html_url":"https://github.com/ClickHouse/ClickHouse/pull/33708","diff_url":"https://github.com/ClickHouse/ClickHouse/pull/33708.diff","patch_url":"https://github.com/ClickHouse/ClickHouse/pull/33708.patch","merged_at":null},"body":"Changelog category (leave one):\r\n- Improvement\r\n\r\n\r\nUSING for multiple JOIN\r\n...\r\n\r\nIt is possible to \r\nSELECT from t1 join t2 on t1.id=t2.id join t3 on t1.id=t3.id\r\nwhile \r\nSELECT from t1 join t2 using(id) join t3 using(id)\r\nis not supported.\r\nTry to have it working.\r\n...\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33708/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33708/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33704","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33704/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33704/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33704/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33704","id":1105911654,"node_id":"I_kwDOA5dJV85B6t9m","number":33704,"title":"formatDatetime support for DateTime64 and fractions formatting","user":{"login":"den-crane","id":19737682,"node_id":"MDQ6VXNlcjE5NzM3Njgy","avatar_url":"https://avatars.githubusercontent.com/u/19737682?v=4","gravatar_id":"","url":"https://api.github.com/users/den-crane","html_url":"https://github.com/den-crane","followers_url":"https://api.github.com/users/den-crane/followers","following_url":"https://api.github.com/users/den-crane/following{/other_user}","gists_url":"https://api.github.com/users/den-crane/gists{/gist_id}","starred_url":"https://api.github.com/users/den-crane/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/den-crane/subscriptions","organizations_url":"https://api.github.com/users/den-crane/orgs","repos_url":"https://api.github.com/users/den-crane/repos","events_url":"https://api.github.com/users/den-crane/events{/privacy}","received_events_url":"https://api.github.com/users/den-crane/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":644208617,"node_id":"MDU6TGFiZWw2NDQyMDg2MTc=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/easy%20task","name":"easy task","color":"0e8a16","default":false,"description":"Good for first contributors"},{"id":1019683656,"node_id":"MDU6TGFiZWwxMDE5NjgzNjU2","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/altinity","name":"altinity","color":"c0f5f9","default":false,"description":""},{"id":1481221764,"node_id":"MDU6TGFiZWwxNDgxMjIxNzY0","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-datetime","name":"comp-datetime","color":"b5bcff","default":false,"description":"date & time & timezone related"}],"state":"open","locked":false,"assignee":{"login":"ryanoliverdev","id":63882612,"node_id":"MDQ6VXNlcjYzODgyNjEy","avatar_url":"https://avatars.githubusercontent.com/u/63882612?v=4","gravatar_id":"","url":"https://api.github.com/users/ryanoliverdev","html_url":"https://github.com/ryanoliverdev","followers_url":"https://api.github.com/users/ryanoliverdev/followers","following_url":"https://api.github.com/users/ryanoliverdev/following{/other_user}","gists_url":"https://api.github.com/users/ryanoliverdev/gists{/gist_id}","starred_url":"https://api.github.com/users/ryanoliverdev/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ryanoliverdev/subscriptions","organizations_url":"https://api.github.com/users/ryanoliverdev/orgs","repos_url":"https://api.github.com/users/ryanoliverdev/repos","events_url":"https://api.github.com/users/ryanoliverdev/events{/privacy}","received_events_url":"https://api.github.com/users/ryanoliverdev/received_events","type":"User","site_admin":false},"assignees":[{"login":"ryanoliverdev","id":63882612,"node_id":"MDQ6VXNlcjYzODgyNjEy","avatar_url":"https://avatars.githubusercontent.com/u/63882612?v=4","gravatar_id":"","url":"https://api.github.com/users/ryanoliverdev","html_url":"https://github.com/ryanoliverdev","followers_url":"https://api.github.com/users/ryanoliverdev/followers","following_url":"https://api.github.com/users/ryanoliverdev/following{/other_user}","gists_url":"https://api.github.com/users/ryanoliverdev/gists{/gist_id}","starred_url":"https://api.github.com/users/ryanoliverdev/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ryanoliverdev/subscriptions","organizations_url":"https://api.github.com/users/ryanoliverdev/orgs","repos_url":"https://api.github.com/users/ryanoliverdev/repos","events_url":"https://api.github.com/users/ryanoliverdev/events{/privacy}","received_events_url":"https://api.github.com/users/ryanoliverdev/received_events","type":"User","site_admin":false}],"milestone":null,"comments":5,"created_at":"2022-01-17T14:16:24Z","updated_at":"2022-01-25T18:33:05Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"body":null,"reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33704/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33704/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33702","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33702/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33702/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33702/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33702","id":1105769441,"node_id":"I_kwDOA5dJV85B6LPh","number":33702,"title":"Creating hardlinks with clickhouse-copier","user":{"login":"melvynator","id":5473562,"node_id":"MDQ6VXNlcjU0NzM1NjI=","avatar_url":"https://avatars.githubusercontent.com/u/5473562?v=4","gravatar_id":"","url":"https://api.github.com/users/melvynator","html_url":"https://github.com/melvynator","followers_url":"https://api.github.com/users/melvynator/followers","following_url":"https://api.github.com/users/melvynator/following{/other_user}","gists_url":"https://api.github.com/users/melvynator/gists{/gist_id}","starred_url":"https://api.github.com/users/melvynator/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/melvynator/subscriptions","organizations_url":"https://api.github.com/users/melvynator/orgs","repos_url":"https://api.github.com/users/melvynator/repos","events_url":"https://api.github.com/users/melvynator/events{/privacy}","received_events_url":"https://api.github.com/users/melvynator/received_events","type":"User","site_admin":false},"labels":[{"id":756395244,"node_id":"MDU6TGFiZWw3NTYzOTUyNDQ=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/performance","name":"performance","color":"c2e0c6","default":false,"description":null},{"id":1401853216,"node_id":"MDU6TGFiZWwxNDAxODUzMjE2","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-copier","name":"comp-copier","color":"b5bcff","default":false,"description":"clickhouse-copier"}],"state":"open","locked":false,"assignee":{"login":"nikitamikhaylov","id":25705399,"node_id":"MDQ6VXNlcjI1NzA1Mzk5","avatar_url":"https://avatars.githubusercontent.com/u/25705399?v=4","gravatar_id":"","url":"https://api.github.com/users/nikitamikhaylov","html_url":"https://github.com/nikitamikhaylov","followers_url":"https://api.github.com/users/nikitamikhaylov/followers","following_url":"https://api.github.com/users/nikitamikhaylov/following{/other_user}","gists_url":"https://api.github.com/users/nikitamikhaylov/gists{/gist_id}","starred_url":"https://api.github.com/users/nikitamikhaylov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nikitamikhaylov/subscriptions","organizations_url":"https://api.github.com/users/nikitamikhaylov/orgs","repos_url":"https://api.github.com/users/nikitamikhaylov/repos","events_url":"https://api.github.com/users/nikitamikhaylov/events{/privacy}","received_events_url":"https://api.github.com/users/nikitamikhaylov/received_events","type":"User","site_admin":false},"assignees":[{"login":"nikitamikhaylov","id":25705399,"node_id":"MDQ6VXNlcjI1NzA1Mzk5","avatar_url":"https://avatars.githubusercontent.com/u/25705399?v=4","gravatar_id":"","url":"https://api.github.com/users/nikitamikhaylov","html_url":"https://github.com/nikitamikhaylov","followers_url":"https://api.github.com/users/nikitamikhaylov/followers","following_url":"https://api.github.com/users/nikitamikhaylov/following{/other_user}","gists_url":"https://api.github.com/users/nikitamikhaylov/gists{/gist_id}","starred_url":"https://api.github.com/users/nikitamikhaylov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nikitamikhaylov/subscriptions","organizations_url":"https://api.github.com/users/nikitamikhaylov/orgs","repos_url":"https://api.github.com/users/nikitamikhaylov/repos","events_url":"https://api.github.com/users/nikitamikhaylov/events{/privacy}","received_events_url":"https://api.github.com/users/nikitamikhaylov/received_events","type":"User","site_admin":false}],"milestone":null,"comments":2,"created_at":"2022-01-17T12:03:17Z","updated_at":"2022-01-17T22:26:01Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"* ClickHouse version: **21.11.5.33**\r\n\r\n* Queries to run that lead to slow performance: \r\n\r\nWhen trying to load data into ClickHouse using clickhouse-copier. The process goes unexpectedly slow. In particular we see slow ALTER TABLE ATTACH PARTITION queries in the query_log.\r\n\r\nThe query ALTER ATTACH PARTITION copies data from one table to another. There is no network interaction, so the data is copied only within the local disk. This is probably an IO bound task and the speed of this operation is fully based on the speed of the reads/writes operations.\r\n\r\nI guess we could speed up this query by creating hardlinks without the actual copying.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33702/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33702/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33698","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33698/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33698/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33698/events","html_url":"https://github.com/ClickHouse/ClickHouse/pull/33698","id":1105552166,"node_id":"PR_kwDOA5dJV84xIjEW","number":33698,"title":"Add more functions for map data type","user":{"login":"hexiaoting","id":7898329,"node_id":"MDQ6VXNlcjc4OTgzMjk=","avatar_url":"https://avatars.githubusercontent.com/u/7898329?v=4","gravatar_id":"","url":"https://api.github.com/users/hexiaoting","html_url":"https://github.com/hexiaoting","followers_url":"https://api.github.com/users/hexiaoting/followers","following_url":"https://api.github.com/users/hexiaoting/following{/other_user}","gists_url":"https://api.github.com/users/hexiaoting/gists{/gist_id}","starred_url":"https://api.github.com/users/hexiaoting/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hexiaoting/subscriptions","organizations_url":"https://api.github.com/users/hexiaoting/orgs","repos_url":"https://api.github.com/users/hexiaoting/repos","events_url":"https://api.github.com/users/hexiaoting/events{/privacy}","received_events_url":"https://api.github.com/users/hexiaoting/received_events","type":"User","site_admin":false},"labels":[{"id":1309674771,"node_id":"MDU6TGFiZWwxMzA5Njc0Nzcx","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/pr-feature","name":"pr-feature","color":"007700","default":false,"description":"Pull request with new product feature"},{"id":1807683251,"node_id":"MDU6TGFiZWwxODA3NjgzMjUx","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/doc-alert","name":"doc-alert","color":"e51068","default":false,"description":"PR where any documentation work is needed or proceeded"}],"state":"open","locked":false,"assignee":{"login":"vdimir","id":7023786,"node_id":"MDQ6VXNlcjcwMjM3ODY=","avatar_url":"https://avatars.githubusercontent.com/u/7023786?v=4","gravatar_id":"","url":"https://api.github.com/users/vdimir","html_url":"https://github.com/vdimir","followers_url":"https://api.github.com/users/vdimir/followers","following_url":"https://api.github.com/users/vdimir/following{/other_user}","gists_url":"https://api.github.com/users/vdimir/gists{/gist_id}","starred_url":"https://api.github.com/users/vdimir/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vdimir/subscriptions","organizations_url":"https://api.github.com/users/vdimir/orgs","repos_url":"https://api.github.com/users/vdimir/repos","events_url":"https://api.github.com/users/vdimir/events{/privacy}","received_events_url":"https://api.github.com/users/vdimir/received_events","type":"User","site_admin":false},"assignees":[{"login":"vdimir","id":7023786,"node_id":"MDQ6VXNlcjcwMjM3ODY=","avatar_url":"https://avatars.githubusercontent.com/u/7023786?v=4","gravatar_id":"","url":"https://api.github.com/users/vdimir","html_url":"https://github.com/vdimir","followers_url":"https://api.github.com/users/vdimir/followers","following_url":"https://api.github.com/users/vdimir/following{/other_user}","gists_url":"https://api.github.com/users/vdimir/gists{/gist_id}","starred_url":"https://api.github.com/users/vdimir/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vdimir/subscriptions","organizations_url":"https://api.github.com/users/vdimir/orgs","repos_url":"https://api.github.com/users/vdimir/repos","events_url":"https://api.github.com/users/vdimir/events{/privacy}","received_events_url":"https://api.github.com/users/vdimir/received_events","type":"User","site_admin":false}],"milestone":null,"comments":2,"created_at":"2022-01-17T08:58:41Z","updated_at":"2022-01-24T10:41:15Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/pulls/33698","html_url":"https://github.com/ClickHouse/ClickHouse/pull/33698","diff_url":"https://github.com/ClickHouse/ClickHouse/pull/33698.diff","patch_url":"https://github.com/ClickHouse/ClickHouse/pull/33698.patch","merged_at":null},"body":"Changelog category (leave one):\r\n- New Feature\r\n\r\n\r\nChangelog entry (a user-readable short description of the changes that goes to CHANGELOG.md):\r\nrelated to issue: https://github.com/ClickHouse/ClickHouse/issues/30715.\r\nAdd three functions for map data type:\r\n1. mapReplace(map1, map2) - replaces values for keys in map1 with the values of the corresponding keys in map2; adds keys from map2 that don't exist in map1.\r\n2. mapFilter \r\n3. mapMap \r\nmapFilter and mapMap are higher order functions , accept two arguments, first argument is  a lambda function with k, v pair , the second argument is a map type column.\r\n\r\nDetailed description / Documentation draft:\r\nExample:\r\n```\r\nselect * from table_map:\r\n┌───id─┬─col────────────────────────────────┐\r\n│  100 │ {'key3':100,'key2':101,'key4':102} │\r\n│  101 │ {'key3':101,'key2':102,'key4':103} │\r\n│  102 │ {'key3':102,'key2':103,'key4':104} │\r\n│  103 │ {'key3':103,'key2':104,'key4':105} │\r\n│ 1111 │ {'key1':1111,'key2':2222}          │\r\n│ 1112 │ {'key1':1112,'key2':2224}          │\r\n│ 1113 │ {'key1':1113,'key2':2226}          │\r\n└──────┴────────────────────────────────────┘\r\n\r\nSELECT col, mapFilter((k, v) -> ((v % 10) > 1), col) FROM table_map ORDER BY id ASC;\r\n┌─mapFilter(lambda(tuple(k, v), greater(modulo(v, 10), 1)), col)─┐\r\n│ {'key4':102}                                                   │\r\n│ {'key2':102,'key4':103}                                        │\r\n│ {'key3':102,'key2':103,'key4':104}                             │\r\n│ {'key3':103,'key2':104,'key4':105}                             │\r\n│ {'key2':2222}                                                  │\r\n│ {'key1':1112,'key2':2224}                                      │\r\n│ {'key1':1113,'key2':2226}                                      │\r\n└────────────────────────────────────────────────────────────────┘\r\n\r\n\r\nSELECT mapMap((k,v)->(k,v+1), col)  FROM table_map ORDER BY id;\r\n┌─mapMap(lambda(tuple(k, v), tuple(k, plus(v, 1))), col)─┐\r\n│ {'key3':101,'key2':102,'key4':103}                     │\r\n│ {'key3':102,'key2':103,'key4':104}                     │\r\n│ {'key3':103,'key2':104,'key4':105}                     │\r\n│ {'key3':104,'key2':105,'key4':106}                     │\r\n│ {'key1':1112,'key2':2223}                              │\r\n│ {'key1':1113,'key2':2225}                              │\r\n│ {'key1':1114,'key2':2227}                              │\r\n└────────────────────────────────────────────────────────┘\r\n```\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33698/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33698/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33697","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33697/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33697/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33697/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33697","id":1105463576,"node_id":"I_kwDOA5dJV85B5AkY","number":33697,"title":"Create arrayEnumerate...() function with reset of counter","user":{"login":"alexsubota","id":4305175,"node_id":"MDQ6VXNlcjQzMDUxNzU=","avatar_url":"https://avatars.githubusercontent.com/u/4305175?v=4","gravatar_id":"","url":"https://api.github.com/users/alexsubota","html_url":"https://github.com/alexsubota","followers_url":"https://api.github.com/users/alexsubota/followers","following_url":"https://api.github.com/users/alexsubota/following{/other_user}","gists_url":"https://api.github.com/users/alexsubota/gists{/gist_id}","starred_url":"https://api.github.com/users/alexsubota/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexsubota/subscriptions","organizations_url":"https://api.github.com/users/alexsubota/orgs","repos_url":"https://api.github.com/users/alexsubota/repos","events_url":"https://api.github.com/users/alexsubota/events{/privacy}","received_events_url":"https://api.github.com/users/alexsubota/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-01-17T07:13:06Z","updated_at":"2022-01-17T07:13:42Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"For example, we have table with 2 columns date and some status\r\n![image](https://user-images.githubusercontent.com/4305175/149723970-08578653-205a-4bd7-9c7f-fb5c3a83062e.png)\r\n\r\nAnd i want to create column with count of current status, from last status change to now, something like\r\n![image](https://user-images.githubusercontent.com/4305175/149723551-aaa40813-b81b-4ccf-b677-0a96c0cb6155.png)\r\n\r\nRight now i have only arrayEnumerate, arrayEnumerateUniq, arrayEnumerateDense enumerate functions, \r\nbut i suggest this new functionality with counter reset","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33697/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33697/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33696","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33696/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33696/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33696/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33696","id":1105449633,"node_id":"I_kwDOA5dJV85B49Kh","number":33696,"title":"Speed difference between table with dictionary engine and engine function","user":{"login":"rnixik","id":1498878,"node_id":"MDQ6VXNlcjE0OTg4Nzg=","avatar_url":"https://avatars.githubusercontent.com/u/1498878?v=4","gravatar_id":"","url":"https://api.github.com/users/rnixik","html_url":"https://github.com/rnixik","followers_url":"https://api.github.com/users/rnixik/followers","following_url":"https://api.github.com/users/rnixik/following{/other_user}","gists_url":"https://api.github.com/users/rnixik/gists{/gist_id}","starred_url":"https://api.github.com/users/rnixik/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rnixik/subscriptions","organizations_url":"https://api.github.com/users/rnixik/orgs","repos_url":"https://api.github.com/users/rnixik/repos","events_url":"https://api.github.com/users/rnixik/events{/privacy}","received_events_url":"https://api.github.com/users/rnixik/received_events","type":"User","site_admin":false},"labels":[{"id":756395244,"node_id":"MDU6TGFiZWw3NTYzOTUyNDQ=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/performance","name":"performance","color":"c2e0c6","default":false,"description":null}],"state":"open","locked":false,"assignee":{"login":"kitaisreal","id":22458333,"node_id":"MDQ6VXNlcjIyNDU4MzMz","avatar_url":"https://avatars.githubusercontent.com/u/22458333?v=4","gravatar_id":"","url":"https://api.github.com/users/kitaisreal","html_url":"https://github.com/kitaisreal","followers_url":"https://api.github.com/users/kitaisreal/followers","following_url":"https://api.github.com/users/kitaisreal/following{/other_user}","gists_url":"https://api.github.com/users/kitaisreal/gists{/gist_id}","starred_url":"https://api.github.com/users/kitaisreal/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kitaisreal/subscriptions","organizations_url":"https://api.github.com/users/kitaisreal/orgs","repos_url":"https://api.github.com/users/kitaisreal/repos","events_url":"https://api.github.com/users/kitaisreal/events{/privacy}","received_events_url":"https://api.github.com/users/kitaisreal/received_events","type":"User","site_admin":false},"assignees":[{"login":"kitaisreal","id":22458333,"node_id":"MDQ6VXNlcjIyNDU4MzMz","avatar_url":"https://avatars.githubusercontent.com/u/22458333?v=4","gravatar_id":"","url":"https://api.github.com/users/kitaisreal","html_url":"https://github.com/kitaisreal","followers_url":"https://api.github.com/users/kitaisreal/followers","following_url":"https://api.github.com/users/kitaisreal/following{/other_user}","gists_url":"https://api.github.com/users/kitaisreal/gists{/gist_id}","starred_url":"https://api.github.com/users/kitaisreal/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kitaisreal/subscriptions","organizations_url":"https://api.github.com/users/kitaisreal/orgs","repos_url":"https://api.github.com/users/kitaisreal/repos","events_url":"https://api.github.com/users/kitaisreal/events{/privacy}","received_events_url":"https://api.github.com/users/kitaisreal/received_events","type":"User","site_admin":false}],"milestone":null,"comments":1,"created_at":"2022-01-17T06:58:35Z","updated_at":"2022-01-17T14:54:48Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"ClickHouse server version 21.12.3 revision 54452\r\nDictionary:\r\n\r\n```\r\ndatabase:                    wdm\r\nname:                        products_dict\r\nuuid:                        0b15d4c1-66b5-427a-8b15-d4c166b5f27a\r\nstatus:                      LOADED\r\norigin:                      0b15d4c1-66b5-427a-8b15-d4c166b5f27a\r\ntype:                        ComplexKeyHashed\r\nkey.names:                   ['product_id']\r\nkey.types:                   ['String']\r\nattribute.names:             ['name']\r\nattribute.types:             ['String']\r\nbytes_allocated:             4831830312\r\nquery_count:                 28961667\r\nhit_rate:                    1\r\nfound_rate:                  1\r\nelement_count:               28961666\r\nload_factor:                 0.4315624535083771\r\nsource:                      PostgreSQL: xxx.\r\nlifetime_min:                0\r\nlifetime_max:                3600\r\nloading_start_time:          2022-01-17 06:42:55\r\nlast_successful_update_time: 2022-01-17 06:44:25\r\nloading_duration:            90.34\r\nlast_exception:              \r\ncomment:                     \r\n\r\n```\r\n\r\nFunction `dictGet`\r\n\r\n```\r\nch01 :) SELECT dictGet('products_dict', 'name', '92764622');\r\n\r\nSELECT dictGet('products_dict', 'name', '92764622')\r\n\r\nQuery id: 757429cd-2e1d-4929-b82c-beeeaed2c8e4\r\n\r\n┌─dictGet('products_dict', 'name', '92764622')────┐\r\n│ XXX                                             │\r\n└─────────────────────────────────────────────────┘\r\n\r\n1 rows in set. Elapsed: 0.002 sec.\r\n```\r\n\r\nSelect from table\r\n\r\n```\r\nch01 :) SELECT name FROM products_dict WHERE  product_id = '92764622';\r\n\r\nSELECT name\r\nFROM products_dict\r\nWHERE product_id = '9764622'\r\n\r\nQuery id: 2b2c7bed-cd16-4dd9-8702-ef803dd50b08\r\n\r\n┌─name──┐\r\n│ XXX   │\r\n└───────┘\r\n\r\n1 rows in set. Elapsed: 2.831 sec. Processed 28.96 million rows, 2.30 GB (10.23 million rows/s., 811.41 MB/s.)\r\n```\r\n\r\nWe can see 0.002 sec and 2.831 sec for the same query for the same data. Why?\r\nHow to improve speed of dictionary table?","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33696/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33696/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33693","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33693/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33693/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33693/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33693","id":1105319547,"node_id":"I_kwDOA5dJV85B4dZ7","number":33693,"title":"Wrong results are returned after TTL merge When there is skip index on the column with ttl.","user":{"login":"zhangjmruc","id":66244986,"node_id":"MDQ6VXNlcjY2MjQ0OTg2","avatar_url":"https://avatars.githubusercontent.com/u/66244986?v=4","gravatar_id":"","url":"https://api.github.com/users/zhangjmruc","html_url":"https://github.com/zhangjmruc","followers_url":"https://api.github.com/users/zhangjmruc/followers","following_url":"https://api.github.com/users/zhangjmruc/following{/other_user}","gists_url":"https://api.github.com/users/zhangjmruc/gists{/gist_id}","starred_url":"https://api.github.com/users/zhangjmruc/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zhangjmruc/subscriptions","organizations_url":"https://api.github.com/users/zhangjmruc/orgs","repos_url":"https://api.github.com/users/zhangjmruc/repos","events_url":"https://api.github.com/users/zhangjmruc/events{/privacy}","received_events_url":"https://api.github.com/users/zhangjmruc/received_events","type":"User","site_admin":false},"labels":[{"id":3260776666,"node_id":"MDU6TGFiZWwzMjYwNzc2NjY2","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/potential%20bug","name":"potential bug","color":"ffc080","default":false,"description":"To be reviewed by developers and confirmed/rejected."}],"state":"open","locked":false,"assignee":{"login":"CurtizJ","id":20361854,"node_id":"MDQ6VXNlcjIwMzYxODU0","avatar_url":"https://avatars.githubusercontent.com/u/20361854?v=4","gravatar_id":"","url":"https://api.github.com/users/CurtizJ","html_url":"https://github.com/CurtizJ","followers_url":"https://api.github.com/users/CurtizJ/followers","following_url":"https://api.github.com/users/CurtizJ/following{/other_user}","gists_url":"https://api.github.com/users/CurtizJ/gists{/gist_id}","starred_url":"https://api.github.com/users/CurtizJ/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/CurtizJ/subscriptions","organizations_url":"https://api.github.com/users/CurtizJ/orgs","repos_url":"https://api.github.com/users/CurtizJ/repos","events_url":"https://api.github.com/users/CurtizJ/events{/privacy}","received_events_url":"https://api.github.com/users/CurtizJ/received_events","type":"User","site_admin":false},"assignees":[{"login":"CurtizJ","id":20361854,"node_id":"MDQ6VXNlcjIwMzYxODU0","avatar_url":"https://avatars.githubusercontent.com/u/20361854?v=4","gravatar_id":"","url":"https://api.github.com/users/CurtizJ","html_url":"https://github.com/CurtizJ","followers_url":"https://api.github.com/users/CurtizJ/followers","following_url":"https://api.github.com/users/CurtizJ/following{/other_user}","gists_url":"https://api.github.com/users/CurtizJ/gists{/gist_id}","starred_url":"https://api.github.com/users/CurtizJ/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/CurtizJ/subscriptions","organizations_url":"https://api.github.com/users/CurtizJ/orgs","repos_url":"https://api.github.com/users/CurtizJ/repos","events_url":"https://api.github.com/users/CurtizJ/events{/privacy}","received_events_url":"https://api.github.com/users/CurtizJ/received_events","type":"User","site_admin":false}],"milestone":null,"comments":1,"created_at":"2022-01-17T03:14:52Z","updated_at":"2022-01-21T04:04:02Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"**Describe what's wrong**\r\nFor a table with ttl, skip index and default value 'b' on a column named s, when I insert some rows, all the values in column s in a data part expire,  then ttl merge deletes this column from the data part in filesystem. Then a select on the table with an equal condition on the column s, \"s='b'\", where the value 'b' is the default value for column s, the skip index causes wrong result.\r\n\r\nSince it is working as designed for column TTL, \" When the values in the column expire, ClickHouse replaces them with the default values for the column data type. If all the column values in the data part expire, ClickHouse deletes this column from the data part in a filesystem.\". For the problem part, there is no data column, should we return result for the query with condition on default value or not?\r\n\r\n**Does it reproduce on recent release?**\r\n\r\nCH 21.12.3.32 (official build).\r\n\r\n**How to reproduce**\r\n\r\ncreate table ttl (i Int, a Int, s String default 'b' ttl a % 2 = 0 ? today() - 10 : toDate('2100-01-01'),\r\n    index ind_s (s) type set(1) granularity 1) engine = MergeTree order by i settings min_bytes_for_wide_part=0;\r\n\r\ninsert into ttl values(5,4,'a'),(6,6,'a');\r\ninsert into ttl values(1,1,'a'),(2,2,'a');\r\n\r\n-- make sure the table is using wide part\r\nselect name, part_type from system.parts where table='ttl';\r\n\r\n┌─name──────┬─part_type─┐\r\n│ all_1_1_0 │ Wide      │\r\n│ all_1_1_1 │ Wide      │ <<< TTL merge happens on the first part\r\n│ all_2_2_0 │ Wide      │\r\n└───────────┴───────────┘\r\n\r\n-- List all the data in ttl\r\nselect * from ttl;\r\n\r\n┌─i─┬─a─┬─s─┐\r\n│ 1 │ 1 │ a │\r\n│ 2 │ 2 │ a │\r\n└───┴───┴───┘\r\n┌─i─┬─a─┬─s─┐\r\n│ 5 │ 4 │ b │\r\n│ 6 │ 6 │ b │\r\n└───┴───┴───┘\r\n\r\n4 rows in set. Elapsed: 0.001 sec.\r\n\r\n**-- For the select on s, it should return 2 rows.**\r\nselect * from ttl where s='b';\r\n\r\nSELECT *\r\nFROM ttl\r\nWHERE s = 'b'\r\n\r\nQuery id: 0f8ab129-5aad-4f67-a6ee-6fdacdeff515\r\n\r\nOk.\r\n\r\n**0 rows in set**. Elapsed: 0.001 sec.\r\n\r\n**Expected behavior**\r\n-- Should return 2 rows.\r\n┌─i─┬─a─┬─s─┐\r\n│ 5 │ 4 │ b │\r\n│ 6 │ 6 │ b │\r\n└───┴───┴───┘\r\n\r\n**Additional context**\r\nIn the data directory, the part after ttl merge doesn't have files for column s, but only the skp index files. all the granuales are dropped by the skip index.\r\n\r\n[root@node231 all_1_1_1]# ll\r\ntotal 44\r\n-rw-r----- 1 clickhouse clickhouse  34 Jan 17 10:56 a.bin\r\n-rw-r----- 1 clickhouse clickhouse  48 Jan 17 10:56 a.mrk2\r\n-rw-r----- 1 clickhouse clickhouse 292 Jan 17 10:56 checksums.txt\r\n-rw-r----- 1 clickhouse clickhouse  57 Jan 17 10:56 columns.txt\r\n-rw-r----- 1 clickhouse clickhouse   1 Jan 17 10:56 count.txt\r\n-rw-r----- 1 clickhouse clickhouse  10 Jan 17 10:56 default_compression_codec.txt\r\n-rw-r----- 1 clickhouse clickhouse  34 Jan 17 10:56 i.bin\r\n-rw-r----- 1 clickhouse clickhouse  48 Jan 17 10:56 i.mrk2\r\n-rw-r----- 1 clickhouse clickhouse   8 Jan 17 10:56 primary.idx\r\n-rw-r----- 1 clickhouse clickhouse  36 Jan 17 10:56 skp_idx_ind_s.idx\r\n-rw-r----- 1 clickhouse clickhouse  24 Jan 17 10:56 skp_idx_ind_s.mrk2\r\n\r\n-- trace log\r\n[node231] 2022.01.17 11:13:41.599952 [ 20500 ] {a99a151c-bc6d-491f-8cdb-b1ff3e88133a} <Debug> executeQuery: (from [::1]:40378) select * from ttl where s='b'\r\n[node231] 2022.01.17 11:13:41.600140 [ 20500 ] {a99a151c-bc6d-491f-8cdb-b1ff3e88133a} <Debug> InterpreterSelectQuery: MergeTreeWhereOptimizer: condition \"s = 'b'\" moved to PREWHERE\r\n[node231] 2022.01.17 11:13:41.600250 [ 20500 ] {a99a151c-bc6d-491f-8cdb-b1ff3e88133a} <Trace> ContextAccess (default): Access granted: SELECT(i, a, s) ON default.ttl\r\n[node231] 2022.01.17 11:13:41.600288 [ 20500 ] {a99a151c-bc6d-491f-8cdb-b1ff3e88133a} <Trace> InterpreterSelectQuery: FetchColumns -> Complete\r\n[node231] 2022.01.17 11:13:41.600381 [ 20500 ] {a99a151c-bc6d-491f-8cdb-b1ff3e88133a} <Debug> default.ttl (e79c1975-0e30-46ff-a79c-19750e30a6ff) (SelectExecutor): Key condition: unknown\r\n[node231] 2022.01.17 11:13:41.600553 [ 20500 ] {a99a151c-bc6d-491f-8cdb-b1ff3e88133a} <Debug> default.ttl (e79c1975-0e30-46ff-a79c-19750e30a6ff) (SelectExecutor): I**ndex `ind_s` has dropped 2/2 granules.**\r\n[node231] 2022.01.17 11:13:41.600586 [ 20500 ] {a99a151c-bc6d-491f-8cdb-b1ff3e88133a} <Debug> default.ttl (e79c1975-0e30-46ff-a79c-19750e30a6ff) (SelectExecutor): Selected 2/2 parts by partition key, 0 parts by primary key, 2/2 marks by primary key, 0 marks to read from 0 ranges\r\n[node231] 2022.01.17 11:13:41.601234 [ 20500 ] {a99a151c-bc6d-491f-8cdb-b1ff3e88133a} <Debug> MemoryTracker: Peak memory usage (for query): 0.00 B.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33693/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33693/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33685","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33685/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33685/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33685/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33685","id":1105054434,"node_id":"I_kwDOA5dJV85B3cri","number":33685,"title":"COLUMNS_COMMENT (EXCLUDE_COMMENT) functions","user":{"login":"UnamedRus","id":9449405,"node_id":"MDQ6VXNlcjk0NDk0MDU=","avatar_url":"https://avatars.githubusercontent.com/u/9449405?v=4","gravatar_id":"","url":"https://api.github.com/users/UnamedRus","html_url":"https://github.com/UnamedRus","followers_url":"https://api.github.com/users/UnamedRus/followers","following_url":"https://api.github.com/users/UnamedRus/following{/other_user}","gists_url":"https://api.github.com/users/UnamedRus/gists{/gist_id}","starred_url":"https://api.github.com/users/UnamedRus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/UnamedRus/subscriptions","organizations_url":"https://api.github.com/users/UnamedRus/orgs","repos_url":"https://api.github.com/users/UnamedRus/repos","events_url":"https://api.github.com/users/UnamedRus/events{/privacy}","received_events_url":"https://api.github.com/users/UnamedRus/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":1507886722,"node_id":"MDU6TGFiZWwxNTA3ODg2NzIy","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/st-discussion","name":"st-discussion","color":"e5b890","default":false,"description":"The story requires discussion /research / expert help / design & decomposition before will be taken"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2022-01-16T13:36:26Z","updated_at":"2022-01-18T19:09:49Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"**Use case**\r\n\r\nAllow to pick columns by their comment instead of column name.\r\n\r\n**Describe the solution you'd like**\r\n\r\n```\r\nCREATE TABLE test_tbl (\r\na UInt32 COMMENT 'key_1',\r\nb UInt32 COMMENT 'key_2',\r\nc UInt32 COMMENT 'metric, sum',\r\nd UInt32 COMMENT 'metric, sum, avg',\r\ne UInt32 COMMENT 'metric, avg',\r\nPROJECTION x_1 (SELECT COLUMNS_COMMENT('key'), COLUMNS_COMMENT('metric') APPLY(sum) GROUP BY COLUMNS_COMMENT('key')),\r\nPROJECTION x_2 (SELECT COLUMNS_COMMENT('key'), COLUMNS_COMMENT('sum') APPLY(sum), COLUMNS_COMMENT('avg') APPLY(avg) GROUP BY COLUMNS_COMMENT('key'))\r\n) ENGINE=MergeTree ORDER BY (a,b)\r\n```\r\n\r\nFor https://github.com/ClickHouse/ClickHouse/issues/33684","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33685/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33685/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33684","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33684/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33684/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33684/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33684","id":1105053526,"node_id":"I_kwDOA5dJV85B3cdW","number":33684,"title":"PROJECTION with COLUMNS('col_name') support for DROP / MODIFY COLUMN","user":{"login":"UnamedRus","id":9449405,"node_id":"MDQ6VXNlcjk0NDk0MDU=","avatar_url":"https://avatars.githubusercontent.com/u/9449405?v=4","gravatar_id":"","url":"https://api.github.com/users/UnamedRus","html_url":"https://github.com/UnamedRus","followers_url":"https://api.github.com/users/UnamedRus/followers","following_url":"https://api.github.com/users/UnamedRus/following{/other_user}","gists_url":"https://api.github.com/users/UnamedRus/gists{/gist_id}","starred_url":"https://api.github.com/users/UnamedRus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/UnamedRus/subscriptions","organizations_url":"https://api.github.com/users/UnamedRus/orgs","repos_url":"https://api.github.com/users/UnamedRus/repos","events_url":"https://api.github.com/users/UnamedRus/events{/privacy}","received_events_url":"https://api.github.com/users/UnamedRus/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2022-01-16T13:32:33Z","updated_at":"2022-01-16T13:59:48Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"**Use case**\r\n\r\nAutomatically follow table schema updates by using COLUMNS function in projection.\r\nIt's already working fine for addition of new columns both to metrics and keys, but throw an error in case of DROP or MODIFY COLUMN data type.\r\n\r\n**Describe the solution you'd like**\r\n```\r\nCREATE TABLE xxxx_p\r\n(\r\n    `key` UInt32,\r\n    `ts` DateTime,\r\n    `value` UInt32,\r\n    PROJECTION proj\r\n    (\r\n        SELECT\r\n            COLUMNS('key'),\r\n            toStartOfHour(ts),\r\n            COLUMNS('value') APPLY sum\r\n        GROUP BY\r\n            COLUMNS('key'),\r\n            toStartOfHour(ts)\r\n    )\r\n)\r\nENGINE = MergeTree\r\nORDER BY (key, ts)\r\n\r\nINSERT INTO xxxx_p SELECT number % 10, number, rand() % 10 FROM numbers(1000000);\r\nALTER TABLE xxxx_p ADD COLUMN key_b UInt32;\r\n\r\nINSERT INTO xxxx_p SELECT number % 10, number, rand() % 10, number % 2 FROM numbers(1000000);\r\n\r\n\r\nSELECT key, toStartOfHour(ts), COLUMNS('value') APPLY sum FROM xxxx_p GROUP BY key, toStartOfHour(ts);\r\n\r\n2780 rows in set. Elapsed: 0.029 sec. Processed 2.00 million rows, 24.00 MB (69.06 million rows/s., 828.73 MB/s.)\r\n\r\nset allow_experimental_projection_optimization=1;\r\n\r\nSELECT key, toStartOfHour(ts), COLUMNS('value') APPLY sum FROM xxxx_p GROUP BY key, toStartOfHour(ts);\r\n\r\n\r\n2780 rows in set. Elapsed: 0.014 sec. Processed 5.56 thousand rows, 146.30 KB (411.37 thousand rows/s., 10.82 MB/s.)\r\n\r\nALTER TABLE xxxx_p ADD COLUMN value_e UInt32;\r\nALTER TABLE xxxx_p ADD COLUMN key_c UInt32;\r\n\r\n\r\nINSERT INTO xxxx_p SELECT number % 10, number, rand() % 10, number % 2, rand()%3, rand() FROM numbers(1000000);\r\n\r\n\r\nSELECT key, toStartOfHour(ts), COLUMNS('value') APPLY sum FROM xxxx_p GROUP BY key, toStartOfHour(ts);\r\n\r\n\r\n0 rows in set. Elapsed: 0.018 sec. Processed 1.00 million rows, 54.31 MB (56.42 million rows/s., 3.05 GB/s.)\r\n\r\nSELECT\r\n    parent_name,\r\n    column\r\nFROM system.projection_parts_columns\r\nWHERE table = 'xxxx_p' AND active\r\n\r\n\r\n┌─parent_name─┬─column────────────┐\r\n│ all_1_1_0   │ key               │\r\n│ all_1_1_0   │ toStartOfHour(ts) │\r\n│ all_1_1_0   │ sum(value)        │\r\n│ all_2_2_0   │ key               │\r\n│ all_2_2_0   │ key_b             │\r\n│ all_2_2_0   │ toStartOfHour(ts) │\r\n│ all_2_2_0   │ sum(value)        │\r\n│ all_3_3_0   │ key               │\r\n│ all_3_3_0   │ key_b             │\r\n│ all_3_3_0   │ key_c             │\r\n│ all_3_3_0   │ toStartOfHour(ts) │\r\n│ all_3_3_0   │ sum(value)        │\r\n│ all_3_3_0   │ sum(value_e)      │\r\n└─────────────┴───────────────────┘\r\n\r\nOPTIMIZE TABLE xxxx_p FINAL;\r\n\r\nSELECT\r\n    parent_name,\r\n    column\r\nFROM system.projection_parts_columns\r\nWHERE (table = 'xxxx_p') AND active\r\n\r\n┌─parent_name─┬─column────────────┐\r\n│ all_1_3_1   │ key               │\r\n│ all_1_3_1   │ key_b             │\r\n│ all_1_3_1   │ key_c             │\r\n│ all_1_3_1   │ toStartOfHour(ts) │\r\n│ all_1_3_1   │ sum(value)        │\r\n│ all_1_3_1   │ sum(value_e)      │\r\n└─────────────┴───────────────────┘\r\n\r\n\r\n\r\nALTER TABLE xxxx_p DROP COLUMN key_c;\r\n\r\nALTER TABLE xxxx_p\r\n    DROP COLUMN key_c\r\n\r\nQuery id: 4648787e-2905-48fa-9f85-ea3a27840574\r\n\r\n2022.01.13 23:22:30.761011 [ 2351 ] {4648787e-2905-48fa-9f85-ea3a27840574} <Debug> executeQuery: (from 127.0.0.1:34946) ALTER TABLE xxxx_p DROP COLUMN key_c;\r\n2022.01.13 23:22:30.761273 [ 2351 ] {4648787e-2905-48fa-9f85-ea3a27840574} <Trace> ContextAccess (default): Access granted: ALTER DROP COLUMN(key_c) ON default.xxxx_p\r\n2022.01.13 23:22:30.770742 [ 2351 ] {4648787e-2905-48fa-9f85-ea3a27840574} <Information> default.xxxx_p: Added mutation: mutation_5.txt\r\n2022.01.13 23:22:30.770858 [ 2351 ] {4648787e-2905-48fa-9f85-ea3a27840574} <Information> default.xxxx_p: Waiting mutation: mutation_5.txt\r\n2022.01.13 23:22:30.774600 [ 2351 ] {4648787e-2905-48fa-9f85-ea3a27840574} <Error> void DB::StorageMergeTree::waitForMutation(DB::Int64, const DB::String &): Code: 341. DB::Exception: Exception happened during execution of mutation 'mutation_5.txt' with part 'all_1_4_1' reason: 'Code: 4. DB::Exception: Index file /var/lib/clickhouse/data/default/xxxx_p/tmp_mut_all_1_4_1_5/proj.proj/primary.idx is unexpectedly long. (EXPECTED_END_OF_FILE) (version 21.13.1.2177)'. This error maybe retryable or not. In case of unretryable error, mutation can be killed with KILL MUTATION query. (UNFINISHED), Stack trace (when copying this message, always include the lines below):\r\n\r\n\r\nKILL MUTATION WHERE is_done=0;\r\n\r\nCREATE TABLE default.xxxx_p\r\n(\r\n    `key` UInt32,\r\n    `ts` DateTime,\r\n    `value` UInt32,\r\n    `key_b` UInt32,\r\n    `value_e` UInt32,\r\n    PROJECTION proj\r\n    (\r\n        SELECT\r\n            COLUMNS('key'),\r\n            toStartOfHour(ts),\r\n            COLUMNS('value') APPLY sum\r\n        GROUP BY\r\n            COLUMNS('key'),\r\n            toStartOfHour(ts)\r\n    )\r\n)\r\nENGINE = MergeTree\r\nORDER BY (key, ts)\r\nSETTINGS index_granularity = 8192\r\n\r\n\r\n\r\n\r\nALTER TABLE xxxx_p\r\n    MODIFY COLUMN `value_e` Float64\r\n\r\nQuery id: e0d1e542-8c00-4a61-8da1-d8d10d2261f2\r\n\r\n2022.01.13 23:26:10.015608 [ 2351 ] {e0d1e542-8c00-4a61-8da1-d8d10d2261f2} <Debug> executeQuery: (from 127.0.0.1:34946) ALTER TABLE xxxx_p MODIFY COLUMN value_e Float64;\r\n2022.01.13 23:26:10.015825 [ 2351 ] {e0d1e542-8c00-4a61-8da1-d8d10d2261f2} <Trace> ContextAccess (default): Access granted: ALTER MODIFY COLUMN(value_e) ON default.xxxx_p\r\n2022.01.13 23:26:10.022948 [ 2351 ] {e0d1e542-8c00-4a61-8da1-d8d10d2261f2} <Information> default.xxxx_p: Added mutation: mutation_6.txt\r\n2022.01.13 23:26:10.023074 [ 2351 ] {e0d1e542-8c00-4a61-8da1-d8d10d2261f2} <Information> default.xxxx_p: Waiting mutation: mutation_6.txt\r\n2022.01.13 23:26:10.027614 [ 2351 ] {e0d1e542-8c00-4a61-8da1-d8d10d2261f2} <Error> void DB::StorageMergeTree::waitForMutation(DB::Int64, const DB::String &): Code: 341. DB::Exception: Exception happened during execution of mutation 'mutation_6.txt' with part 'all_1_4_1' reason: 'Code: 47. DB::Exception: Missing columns: 'value' 'ts' 'key_b' 'key' while processing query: 'SELECT key, key_b, toStartOfHour(ts), sum(value), sum(value_e) GROUP BY key, key_b, toStartOfHour(ts)', required columns: 'key' 'key_b' 'ts' 'value_e' 'value' 'key' 'key_b' 'ts' 'value_e' 'value'. (UNKNOWN_IDENTIFIER) (version 21.13.1.2177)'. This error maybe retryable or not. In case of unretryable error, mutation can be killed with KILL MUTATION query. (UNFINISHED), Stack trace (when copying this message, always include the lines below):\r\n\r\n\r\n\r\n\r\nSELECT key, key_b,toStartOfHour(ts), COLUMNS('value') APPLY sum FROM xxxx_p GROUP BY key, key_b, toStartOfHour(ts);\r\n\r\n\r\nReceived exception from server (version 21.13.1):\r\nCode: 70. DB::Exception: Received from localhost:9000. DB::Exception: Conversion from AggregateFunction(sum, UInt32) to AggregateFunction(sum, Float64) is not supported: While processing _CAST(`sum(value_e)`, 'AggregateFunction(sum, Float64)') AS `sum(value_e)`: (while reading from part /var/lib/clickhouse/data/default/xxxx_p/all_1_4_1/proj.proj/): While executing MergeTreeInOrder. (CANNOT_CONVERT_TYPE)\r\n```","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33684/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33684/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33683","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33683/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33683/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33683/events","html_url":"https://github.com/ClickHouse/ClickHouse/pull/33683","id":1105050694,"node_id":"PR_kwDOA5dJV84xG8zR","number":33683,"title":"Enable allow_experimental_projection_optimization by default","user":{"login":"amosbird","id":5085485,"node_id":"MDQ6VXNlcjUwODU0ODU=","avatar_url":"https://avatars.githubusercontent.com/u/5085485?v=4","gravatar_id":"","url":"https://api.github.com/users/amosbird","html_url":"https://github.com/amosbird","followers_url":"https://api.github.com/users/amosbird/followers","following_url":"https://api.github.com/users/amosbird/following{/other_user}","gists_url":"https://api.github.com/users/amosbird/gists{/gist_id}","starred_url":"https://api.github.com/users/amosbird/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/amosbird/subscriptions","organizations_url":"https://api.github.com/users/amosbird/orgs","repos_url":"https://api.github.com/users/amosbird/repos","events_url":"https://api.github.com/users/amosbird/events{/privacy}","received_events_url":"https://api.github.com/users/amosbird/received_events","type":"User","site_admin":false},"labels":[{"id":1304141686,"node_id":"MDU6TGFiZWwxMzA0MTQxNjg2","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/pr-improvement","name":"pr-improvement","color":"007700","default":false,"description":"Pull request with some product improvements"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-01-16T13:20:18Z","updated_at":"2022-01-17T04:53:52Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"draft":true,"pull_request":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/pulls/33683","html_url":"https://github.com/ClickHouse/ClickHouse/pull/33683","diff_url":"https://github.com/ClickHouse/ClickHouse/pull/33683.diff","patch_url":"https://github.com/ClickHouse/ClickHouse/pull/33683.patch","merged_at":null},"body":"Changelog category (leave one):\r\n- Improvement\r\n\r\nChangelog entry (a user-readable short description of the changes that goes to CHANGELOG.md):\r\nEnable allow_experimental_projection_optimization by default and see if it breaks any existing tests.\r\n\r\n\r\nDetailed description / Documentation draft:\r\n.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33683/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33683/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33681","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33681/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33681/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33681/events","html_url":"https://github.com/ClickHouse/ClickHouse/pull/33681","id":1105024451,"node_id":"PR_kwDOA5dJV84xG35a","number":33681,"title":"Fix aggregation_in_order with normal projection","user":{"login":"amosbird","id":5085485,"node_id":"MDQ6VXNlcjUwODU0ODU=","avatar_url":"https://avatars.githubusercontent.com/u/5085485?v=4","gravatar_id":"","url":"https://api.github.com/users/amosbird","html_url":"https://github.com/amosbird","followers_url":"https://api.github.com/users/amosbird/followers","following_url":"https://api.github.com/users/amosbird/following{/other_user}","gists_url":"https://api.github.com/users/amosbird/gists{/gist_id}","starred_url":"https://api.github.com/users/amosbird/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/amosbird/subscriptions","organizations_url":"https://api.github.com/users/amosbird/orgs","repos_url":"https://api.github.com/users/amosbird/repos","events_url":"https://api.github.com/users/amosbird/events{/privacy}","received_events_url":"https://api.github.com/users/amosbird/received_events","type":"User","site_admin":false},"labels":[{"id":1302792342,"node_id":"MDU6TGFiZWwxMzAyNzkyMzQy","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/pr-bugfix","name":"pr-bugfix","color":"ff4080","default":false,"description":"Pull request with bugfix, not backported by default"}],"state":"open","locked":false,"assignee":{"login":"CurtizJ","id":20361854,"node_id":"MDQ6VXNlcjIwMzYxODU0","avatar_url":"https://avatars.githubusercontent.com/u/20361854?v=4","gravatar_id":"","url":"https://api.github.com/users/CurtizJ","html_url":"https://github.com/CurtizJ","followers_url":"https://api.github.com/users/CurtizJ/followers","following_url":"https://api.github.com/users/CurtizJ/following{/other_user}","gists_url":"https://api.github.com/users/CurtizJ/gists{/gist_id}","starred_url":"https://api.github.com/users/CurtizJ/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/CurtizJ/subscriptions","organizations_url":"https://api.github.com/users/CurtizJ/orgs","repos_url":"https://api.github.com/users/CurtizJ/repos","events_url":"https://api.github.com/users/CurtizJ/events{/privacy}","received_events_url":"https://api.github.com/users/CurtizJ/received_events","type":"User","site_admin":false},"assignees":[{"login":"CurtizJ","id":20361854,"node_id":"MDQ6VXNlcjIwMzYxODU0","avatar_url":"https://avatars.githubusercontent.com/u/20361854?v=4","gravatar_id":"","url":"https://api.github.com/users/CurtizJ","html_url":"https://github.com/CurtizJ","followers_url":"https://api.github.com/users/CurtizJ/followers","following_url":"https://api.github.com/users/CurtizJ/following{/other_user}","gists_url":"https://api.github.com/users/CurtizJ/gists{/gist_id}","starred_url":"https://api.github.com/users/CurtizJ/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/CurtizJ/subscriptions","organizations_url":"https://api.github.com/users/CurtizJ/orgs","repos_url":"https://api.github.com/users/CurtizJ/repos","events_url":"https://api.github.com/users/CurtizJ/events{/privacy}","received_events_url":"https://api.github.com/users/CurtizJ/received_events","type":"User","site_admin":false}],"milestone":null,"comments":0,"created_at":"2022-01-16T11:19:11Z","updated_at":"2022-01-24T17:00:28Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/pulls/33681","html_url":"https://github.com/ClickHouse/ClickHouse/pull/33681","diff_url":"https://github.com/ClickHouse/ClickHouse/pull/33681.diff","patch_url":"https://github.com/ClickHouse/ClickHouse/pull/33681.patch","merged_at":null},"body":"Changelog category (leave one):\r\n- Bug Fix (user-visible misbehaviour in official stable or prestable release)\r\n\r\nChangelog entry (a user-readable short description of the changes that goes to CHANGELOG.md):\r\nFix aggregation_in_order with normal projection. This fixes https://github.com/ClickHouse/ClickHouse/issues/31401\r\n\r\n\r\nDetailed description / Documentation draft:\r\n.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33681/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33681/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33680","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33680/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33680/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33680/events","html_url":"https://github.com/ClickHouse/ClickHouse/pull/33680","id":1104990484,"node_id":"PR_kwDOA5dJV84xGxe2","number":33680,"title":"Fix projection analysis when query contains join","user":{"login":"amosbird","id":5085485,"node_id":"MDQ6VXNlcjUwODU0ODU=","avatar_url":"https://avatars.githubusercontent.com/u/5085485?v=4","gravatar_id":"","url":"https://api.github.com/users/amosbird","html_url":"https://github.com/amosbird","followers_url":"https://api.github.com/users/amosbird/followers","following_url":"https://api.github.com/users/amosbird/following{/other_user}","gists_url":"https://api.github.com/users/amosbird/gists{/gist_id}","starred_url":"https://api.github.com/users/amosbird/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/amosbird/subscriptions","organizations_url":"https://api.github.com/users/amosbird/orgs","repos_url":"https://api.github.com/users/amosbird/repos","events_url":"https://api.github.com/users/amosbird/events{/privacy}","received_events_url":"https://api.github.com/users/amosbird/received_events","type":"User","site_admin":false},"labels":[{"id":1302792342,"node_id":"MDU6TGFiZWwxMzAyNzkyMzQy","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/pr-bugfix","name":"pr-bugfix","color":"ff4080","default":false,"description":"Pull request with bugfix, not backported by default"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2022-01-16T08:42:42Z","updated_at":"2022-01-16T14:16:09Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"draft":true,"pull_request":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/pulls/33680","html_url":"https://github.com/ClickHouse/ClickHouse/pull/33680","diff_url":"https://github.com/ClickHouse/ClickHouse/pull/33680.diff","patch_url":"https://github.com/ClickHouse/ClickHouse/pull/33680.patch","merged_at":null},"body":"Changelog category (leave one):\r\n- Bug Fix (user-visible misbehaviour in official stable or prestable release)\r\n\r\nChangelog entry (a user-readable short description of the changes that goes to CHANGELOG.md):\r\nFix projection analysis when query contains join. This fixes all cases in https://github.com/ClickHouse/ClickHouse/issues/30146\r\n\r\n\r\nDetailed description / Documentation draft:\r\n.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33680/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33680/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33678","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33678/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33678/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33678/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33678","id":1104972549,"node_id":"I_kwDOA5dJV85B3IsF","number":33678,"title":"[Umbrella] Boosting the Projection feature","user":{"login":"amosbird","id":5085485,"node_id":"MDQ6VXNlcjUwODU0ODU=","avatar_url":"https://avatars.githubusercontent.com/u/5085485?v=4","gravatar_id":"","url":"https://api.github.com/users/amosbird","html_url":"https://github.com/amosbird","followers_url":"https://api.github.com/users/amosbird/followers","following_url":"https://api.github.com/users/amosbird/following{/other_user}","gists_url":"https://api.github.com/users/amosbird/gists{/gist_id}","starred_url":"https://api.github.com/users/amosbird/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/amosbird/subscriptions","organizations_url":"https://api.github.com/users/amosbird/orgs","repos_url":"https://api.github.com/users/amosbird/repos","events_url":"https://api.github.com/users/amosbird/events{/privacy}","received_events_url":"https://api.github.com/users/amosbird/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":3045757785,"node_id":"MDU6TGFiZWwzMDQ1NzU3Nzg1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-projections","name":"comp-projections","color":"b5bcff","default":false,"description":""}],"state":"open","locked":false,"assignee":{"login":"amosbird","id":5085485,"node_id":"MDQ6VXNlcjUwODU0ODU=","avatar_url":"https://avatars.githubusercontent.com/u/5085485?v=4","gravatar_id":"","url":"https://api.github.com/users/amosbird","html_url":"https://github.com/amosbird","followers_url":"https://api.github.com/users/amosbird/followers","following_url":"https://api.github.com/users/amosbird/following{/other_user}","gists_url":"https://api.github.com/users/amosbird/gists{/gist_id}","starred_url":"https://api.github.com/users/amosbird/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/amosbird/subscriptions","organizations_url":"https://api.github.com/users/amosbird/orgs","repos_url":"https://api.github.com/users/amosbird/repos","events_url":"https://api.github.com/users/amosbird/events{/privacy}","received_events_url":"https://api.github.com/users/amosbird/received_events","type":"User","site_admin":false},"assignees":[{"login":"amosbird","id":5085485,"node_id":"MDQ6VXNlcjUwODU0ODU=","avatar_url":"https://avatars.githubusercontent.com/u/5085485?v=4","gravatar_id":"","url":"https://api.github.com/users/amosbird","html_url":"https://github.com/amosbird","followers_url":"https://api.github.com/users/amosbird/followers","following_url":"https://api.github.com/users/amosbird/following{/other_user}","gists_url":"https://api.github.com/users/amosbird/gists{/gist_id}","starred_url":"https://api.github.com/users/amosbird/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/amosbird/subscriptions","organizations_url":"https://api.github.com/users/amosbird/orgs","repos_url":"https://api.github.com/users/amosbird/repos","events_url":"https://api.github.com/users/amosbird/events{/privacy}","received_events_url":"https://api.github.com/users/amosbird/received_events","type":"User","site_admin":false}],"milestone":null,"comments":1,"created_at":"2022-01-16T06:46:13Z","updated_at":"2022-01-26T14:01:38Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"body":"The Projection feature has been available for eight months now, and it's been used by several brave users under the experimental flag. I think it's time to make some dedicated effort to get it into a production-ready state.\r\n\r\nThe feature is tangled with many other core parts of ClickHouse, which results in several corner cases. The following list of tasks is ordered by priority:\r\n\r\n## Make tests green (Required)\r\n\r\n- [ ] https://github.com/ClickHouse/ClickHouse/pull/30144 \r\n- [ ] https://github.com/ClickHouse/ClickHouse/issues/30146\r\n- [ ] https://github.com/ClickHouse/ClickHouse/issues/33010\r\n- [ ] https://github.com/ClickHouse/ClickHouse/issues/31401\r\n\r\n## More features (Optional)\r\n\r\n- [ ] Treat projection as real tables which can specify column codecs, indices, etc https://github.com/ClickHouse/ClickHouse/issues/28932\r\n- [ ] Allow to ALTER projection columns (add, drop). Only columns added by the ADD COLUMN command in the same ALTER query are allowed in newly added projection columns, without default column value. This is similar to ALTER ORDER BY.\r\n- [ ] Make projection smarter. https://github.com/ClickHouse/ClickHouse/issues/24779, https://github.com/ClickHouse/ClickHouse/issues/24810, https://github.com/ClickHouse/ClickHouse/issues/26369, https://github.com/ClickHouse/ClickHouse/issues/32488, https://github.com/ClickHouse/ClickHouse/issues/32753\r\n- [ ] Support WHERE clause for projection. https://github.com/ClickHouse/ClickHouse/issues/33587\r\n- [ ] TTL which leaves only projections or only the original data. https://github.com/ClickHouse/ClickHouse/issues/26578, https://github.com/ClickHouse/ClickHouse/issues/9436\r\n- [ ] Indices via projection. https://github.com/ClickHouse/ClickHouse/issues/30530, https://github.com/ClickHouse/ClickHouse/issues/14694\r\n- [ ] More use cases of projections for different types MergeTree engines https://github.com/ClickHouse/ClickHouse/issues/24778, https://github.com/ClickHouse/ClickHouse/issues/28311\r\n- [ ] More types of projection engines https://github.com/ClickHouse/ClickHouse/issues/33615\r\n- [ ] Allow putting projection parts into different storage media. This can be achieved after our cache mechanism. https://github.com/ClickHouse/ClickHouse/issues/28961\r\n- [ ] ProjectionMergeTree https://github.com/ClickHouse/ClickHouse/issues/4419\r\n\r\nThe task list is not meant to be complete. Please feel free to add anything useful.\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33678/reactions","total_count":11,"+1":11,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33678/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33674","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33674/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33674/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33674/events","html_url":"https://github.com/ClickHouse/ClickHouse/pull/33674","id":1104904832,"node_id":"PR_kwDOA5dJV84xGhBo","number":33674,"title":"Release pull request for branch 22.1","user":{"login":"Felixoid","id":3025537,"node_id":"MDQ6VXNlcjMwMjU1Mzc=","avatar_url":"https://avatars.githubusercontent.com/u/3025537?v=4","gravatar_id":"","url":"https://api.github.com/users/Felixoid","html_url":"https://github.com/Felixoid","followers_url":"https://api.github.com/users/Felixoid/followers","following_url":"https://api.github.com/users/Felixoid/following{/other_user}","gists_url":"https://api.github.com/users/Felixoid/gists{/gist_id}","starred_url":"https://api.github.com/users/Felixoid/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Felixoid/subscriptions","organizations_url":"https://api.github.com/users/Felixoid/orgs","repos_url":"https://api.github.com/users/Felixoid/repos","events_url":"https://api.github.com/users/Felixoid/events{/privacy}","received_events_url":"https://api.github.com/users/Felixoid/received_events","type":"User","site_admin":false},"labels":[{"id":1261360622,"node_id":"MDU6TGFiZWwxMjYxMzYwNjIy","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/release","name":"release","color":"34d3a1","default":false,"description":"Label for release pull request"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-01-16T00:39:43Z","updated_at":"2022-01-29T14:16:48Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/pulls/33674","html_url":"https://github.com/ClickHouse/ClickHouse/pull/33674","diff_url":"https://github.com/ClickHouse/ClickHouse/pull/33674.diff","patch_url":"https://github.com/ClickHouse/ClickHouse/pull/33674.patch","merged_at":null},"body":"This PullRequest is part of ClickHouse release cycle. It is used by CI system only. Do not perform any changes with it.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33674/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33674/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33671","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33671/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33671/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33671/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33671","id":1104868787,"node_id":"I_kwDOA5dJV85B2vWz","number":33671,"title":"Implement arithmetic operations between big integers and floating point.","user":{"login":"alexey-milovidov","id":18581488,"node_id":"MDQ6VXNlcjE4NTgxNDg4","avatar_url":"https://avatars.githubusercontent.com/u/18581488?v=4","gravatar_id":"","url":"https://api.github.com/users/alexey-milovidov","html_url":"https://github.com/alexey-milovidov","followers_url":"https://api.github.com/users/alexey-milovidov/followers","following_url":"https://api.github.com/users/alexey-milovidov/following{/other_user}","gists_url":"https://api.github.com/users/alexey-milovidov/gists{/gist_id}","starred_url":"https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexey-milovidov/subscriptions","organizations_url":"https://api.github.com/users/alexey-milovidov/orgs","repos_url":"https://api.github.com/users/alexey-milovidov/repos","events_url":"https://api.github.com/users/alexey-milovidov/events{/privacy}","received_events_url":"https://api.github.com/users/alexey-milovidov/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":1507886722,"node_id":"MDU6TGFiZWwxNTA3ODg2NzIy","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/st-discussion","name":"st-discussion","color":"e5b890","default":false,"description":"The story requires discussion /research / expert help / design & decomposition before will be taken"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2022-01-15T22:26:40Z","updated_at":"2022-01-15T23:32:18Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"**Use case**\r\n\r\n```\r\nSELECT 10000000000000000000::UInt128 * 1.0\r\n```\r\n\r\n**Describe the solution you'd like**\r\n\r\nConvert to `Float64`, then perform the operation.\r\n\r\n**Additional context**\r\n\r\nIt can lead to surprises, example:\r\n\r\n```\r\nSELECT 10000000000000000000::UInt128 + 1.0\r\n```\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33671/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33671/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33670","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33670/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33670/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33670/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33670","id":1104834750,"node_id":"I_kwDOA5dJV85B2nC-","number":33670,"title":"Better EXPLAIN ESTIMATE","user":{"login":"den-crane","id":19737682,"node_id":"MDQ6VXNlcjE5NzM3Njgy","avatar_url":"https://avatars.githubusercontent.com/u/19737682?v=4","gravatar_id":"","url":"https://api.github.com/users/den-crane","html_url":"https://github.com/den-crane","followers_url":"https://api.github.com/users/den-crane/followers","following_url":"https://api.github.com/users/den-crane/following{/other_user}","gists_url":"https://api.github.com/users/den-crane/gists{/gist_id}","starred_url":"https://api.github.com/users/den-crane/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/den-crane/subscriptions","organizations_url":"https://api.github.com/users/den-crane/orgs","repos_url":"https://api.github.com/users/den-crane/repos","events_url":"https://api.github.com/users/den-crane/events{/privacy}","received_events_url":"https://api.github.com/users/den-crane/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":1401777979,"node_id":"MDU6TGFiZWwxNDAxNzc3OTc5","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-optimizers","name":"comp-optimizers","color":"b5bcff","default":false,"description":"Query optimizations"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2022-01-15T20:02:51Z","updated_at":"2022-01-15T21:21:44Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"body":"Now Clickhouse shows only parts, rows, marks.\r\nBut Clickhouse knows which parts & columns need to read, so it's possible to predict number of compressed and uncompressed bytes. \r\nBecause in some cases estimate in rows can be the same but because of columns query can be light or heavy.\r\n\r\n```sql\r\nCREATE TABLE perf( dt DateTime, metric_id Int64, S String ) ENGINE = MergeTree \r\nPARTITION BY toYYYYMMDD(dt) ORDER BY ( metric_id, dt);\r\n\r\n\r\nINSERT INTO perf SELECT\r\n    toDateTime('2021-12-21 00:00:00') + (number / 20),\r\n    number % 1111,\r\n    toString(arrayMap(i -> cityHash64(i * number), range(20)))\r\nFROM numbers(1000000);\r\n\r\nexplain estimate SELECT dt FROM perf \r\n┌─database─┬─table─┬─parts─┬────rows─┬─marks─┐\r\n│ default  │ perf  │     1 │ 1000000 │   123 │\r\n└──────────┴───────┴───────┴─────────┴───────┘\r\n\r\nSELECT dt FROM perf format Null\r\n0 rows in set. Elapsed: 0.008 sec. Processed 1.00 million rows, 4.00 MB\r\n\r\nexplain estimate SELECT dt,S FROM perf \r\n┌─database─┬─table─┬─parts─┬────rows─┬─marks─┐\r\n│ default  │ perf  │     1 │ 1000000 │   123 │\r\n└──────────┴───────┴───────┴─────────┴───────┘\r\n\r\nSELECT dt, S FROM perf format Null\r\n0 rows in set. Elapsed: 0.145 sec. Processed 1.00 million rows, 421.55 MB \r\n```\r\n\r\n`4.00 MB` VS `421.55 MB` \r\n\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33670/reactions","total_count":3,"+1":3,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33670/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33664","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33664/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33664/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33664/events","html_url":"https://github.com/ClickHouse/ClickHouse/pull/33664","id":1104705853,"node_id":"PR_kwDOA5dJV84xF5Pw","number":33664,"title":"Refactor releasing process","user":{"login":"Felixoid","id":3025537,"node_id":"MDQ6VXNlcjMwMjU1Mzc=","avatar_url":"https://avatars.githubusercontent.com/u/3025537?v=4","gravatar_id":"","url":"https://api.github.com/users/Felixoid","html_url":"https://github.com/Felixoid","followers_url":"https://api.github.com/users/Felixoid/followers","following_url":"https://api.github.com/users/Felixoid/following{/other_user}","gists_url":"https://api.github.com/users/Felixoid/gists{/gist_id}","starred_url":"https://api.github.com/users/Felixoid/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Felixoid/subscriptions","organizations_url":"https://api.github.com/users/Felixoid/orgs","repos_url":"https://api.github.com/users/Felixoid/repos","events_url":"https://api.github.com/users/Felixoid/events{/privacy}","received_events_url":"https://api.github.com/users/Felixoid/received_events","type":"User","site_admin":false},"labels":[{"id":1309693854,"node_id":"MDU6TGFiZWwxMzA5NjkzODU0","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/pr-build","name":"pr-build","color":"007700","default":false,"description":"Pull request with build/testing/packaging improvement"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2022-01-15T12:40:34Z","updated_at":"2022-01-28T14:19:44Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"draft":true,"pull_request":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/pulls/33664","html_url":"https://github.com/ClickHouse/ClickHouse/pull/33664","diff_url":"https://github.com/ClickHouse/ClickHouse/pull/33664.diff","patch_url":"https://github.com/ClickHouse/ClickHouse/pull/33664.patch","merged_at":null},"body":"Changelog category (leave one):\r\n- Build/Testing/Packaging Improvement\r\n\r\n\r\nChangelog entry (a user-readable short description of the changes that goes to CHANGELOG.md):\r\nIntroduce a script for prestable releases","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33664/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33664/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33653","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33653/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33653/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33653/events","html_url":"https://github.com/ClickHouse/ClickHouse/pull/33653","id":1104017282,"node_id":"PR_kwDOA5dJV84xDhuO","number":33653,"title":"Enable some settings","user":{"login":"alexey-milovidov","id":18581488,"node_id":"MDQ6VXNlcjE4NTgxNDg4","avatar_url":"https://avatars.githubusercontent.com/u/18581488?v=4","gravatar_id":"","url":"https://api.github.com/users/alexey-milovidov","html_url":"https://github.com/alexey-milovidov","followers_url":"https://api.github.com/users/alexey-milovidov/followers","following_url":"https://api.github.com/users/alexey-milovidov/following{/other_user}","gists_url":"https://api.github.com/users/alexey-milovidov/gists{/gist_id}","starred_url":"https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexey-milovidov/subscriptions","organizations_url":"https://api.github.com/users/alexey-milovidov/orgs","repos_url":"https://api.github.com/users/alexey-milovidov/repos","events_url":"https://api.github.com/users/alexey-milovidov/events{/privacy}","received_events_url":"https://api.github.com/users/alexey-milovidov/received_events","type":"User","site_admin":false},"labels":[{"id":1953721477,"node_id":"MDU6TGFiZWwxOTUzNzIxNDc3","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/pr-backward-incompatible","name":"pr-backward-incompatible","color":"ff00ff","default":false,"description":"Pull request with backwards incompatible changes"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-01-14T19:03:44Z","updated_at":"2022-01-14T19:03:45Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/pulls/33653","html_url":"https://github.com/ClickHouse/ClickHouse/pull/33653","diff_url":"https://github.com/ClickHouse/ClickHouse/pull/33653.diff","patch_url":"https://github.com/ClickHouse/ClickHouse/pull/33653.patch","merged_at":null},"body":"Changelog category (leave one):\r\n- Backward Incompatible Change\r\n\r\n\r\nChangelog entry (a user-readable short description of the changes that goes to CHANGELOG.md):\r\nEnabled some TODO settings by default.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33653/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33653/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33652","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33652/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33652/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33652/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33652","id":1104013295,"node_id":"I_kwDOA5dJV85Bzefv","number":33652,"title":"heap-buffer-overflow in `avro::DataFileReaderBase::readDataBlock()`","user":{"login":"tavplubix","id":14847450,"node_id":"MDQ6VXNlcjE0ODQ3NDUw","avatar_url":"https://avatars.githubusercontent.com/u/14847450?v=4","gravatar_id":"","url":"https://api.github.com/users/tavplubix","html_url":"https://github.com/tavplubix","followers_url":"https://api.github.com/users/tavplubix/followers","following_url":"https://api.github.com/users/tavplubix/following{/other_user}","gists_url":"https://api.github.com/users/tavplubix/gists{/gist_id}","starred_url":"https://api.github.com/users/tavplubix/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tavplubix/subscriptions","organizations_url":"https://api.github.com/users/tavplubix/orgs","repos_url":"https://api.github.com/users/tavplubix/repos","events_url":"https://api.github.com/users/tavplubix/events{/privacy}","received_events_url":"https://api.github.com/users/tavplubix/received_events","type":"User","site_admin":false},"labels":[{"id":1955634273,"node_id":"MDU6TGFiZWwxOTU1NjM0Mjcz","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/testing","name":"testing","color":"c9a224","default":false,"description":"Special issue with list of bugs found by CI"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2022-01-14T18:58:47Z","updated_at":"2022-01-27T09:05:00Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"https://s3.amazonaws.com/clickhouse-test-reports/0/fccdb6583c998888a5f94240a6ba2d3e4b4f0ba0/stress_test__address__actions_.html\r\n\r\n```\r\n==549==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x60200037c8cc at pc 0x000034e6e371 bp 0x7fc5a2e97e50 sp 0x7fc5a2e97e48\r\nREAD of size 1 at 0x60200037c8cc thread T553 (QueryPipelineEx)\r\n    #0 0x34e6e370 in avro::DataFileReaderBase::readDataBlock() obj-x86_64-linux-gnu/../contrib/avro/lang/c++/impl/DataFile.cc:418:18\r\n    #1 0x34e70485 in avro::DataFileReaderBase::hasMore() obj-x86_64-linux-gnu/../contrib/avro/lang/c++/impl/DataFile.cc:338:9\r\n    #2 0x29db5bb9 in DB::AvroRowInputFormat::readRow(std::__1::vector<COW<DB::IColumn>::mutable_ptr<DB::IColumn>, std::__1::allocator<COW<DB::IColumn>::mutable_ptr<DB::IColumn> > >&, DB::RowReadExtension&) obj-x86_64-linux-gnu/../src/Processors/Formats/Impl/AvroRowInputFormat.cpp:632:26\r\n    #3 0x29dfb00d in DB::IRowInputFormat::generate() obj-x86_64-linux-gnu/../src/Processors/Formats/IRowInputFormat.cpp:81:36\r\n    #4 0x29cd55af in DB::ISource::tryGenerate() obj-x86_64-linux-gnu/../src/Processors/ISource.cpp:79:18\r\n    #5 0x29cd489c in DB::ISource::work() obj-x86_64-linux-gnu/../src/Processors/ISource.cpp:53:26\r\n    #6 0x29d2d625 in DB::executeJob(DB::IProcessor*) obj-x86_64-linux-gnu/../src/Processors/Executors/ExecutionThreadContext.cpp:45:20\r\n    #7 0x29d2d625 in DB::ExecutionThreadContext::executeTask() obj-x86_64-linux-gnu/../src/Processors/Executors/ExecutionThreadContext.cpp:63:9\r\n    #8 0x29d0db06 in DB::PipelineExecutor::executeStepImpl(unsigned long, std::__1::atomic<bool>*) obj-x86_64-linux-gnu/../src/Processors/Executors/PipelineExecutor.cpp:213:26\r\n    #9 0x29d0d0b7 in DB::PipelineExecutor::executeStep(std::__1::atomic<bool>*) obj-x86_64-linux-gnu/../src/Processors/Executors/PipelineExecutor.cpp:115:5\r\n    #10 0x29d39545 in DB::PullingPipelineExecutor::pull(DB::Chunk&) obj-x86_64-linux-gnu/../src/Processors/Executors/PullingPipelineExecutor.cpp:50:20\r\n    #11 0x288c8b9c in DB::StorageFileSource::generate() obj-x86_64-linux-gnu/../src/Storages/StorageFile.cpp:473:25\r\n    #12 0x29cd55af in DB::ISource::tryGenerate() obj-x86_64-linux-gnu/../src/Processors/ISource.cpp:79:18\r\n    #13 0x29cd489c in DB::ISource::work() obj-x86_64-linux-gnu/../src/Processors/ISource.cpp:53:26\r\n    #14 0x2a341625 in DB::SourceWithProgress::work() obj-x86_64-linux-gnu/../src/Processors/Sources/SourceWithProgress.cpp:67:30\r\n    #15 0x29d2d625 in DB::executeJob(DB::IProcessor*) obj-x86_64-linux-gnu/../src/Processors/Executors/ExecutionThreadContext.cpp:45:20\r\n    #16 0x29d2d625 in DB::ExecutionThreadContext::executeTask() obj-x86_64-linux-gnu/../src/Processors/Executors/ExecutionThreadContext.cpp:63:9\r\n    #17 0x29d0db06 in DB::PipelineExecutor::executeStepImpl(unsigned long, std::__1::atomic<bool>*) obj-x86_64-linux-gnu/../src/Processors/Executors/PipelineExecutor.cpp:213:26\r\n    #18 0x29d0c02e in DB::PipelineExecutor::executeSingleThread(unsigned long) obj-x86_64-linux-gnu/../src/Processors/Executors/PipelineExecutor.cpp:178:5\r\n    #19 0x29d0c02e in DB::PipelineExecutor::executeImpl(unsigned long) obj-x86_64-linux-gnu/../src/Processors/Executors/PipelineExecutor.cpp:329:9\r\n    #20 0x29d0b2ef in DB::PipelineExecutor::execute(unsigned long) obj-x86_64-linux-gnu/../src/Processors/Executors/PipelineExecutor.cpp:84:9\r\n    #21 0x29d36fba in DB::threadFunction(DB::PullingAsyncPipelineExecutor::Data&, std::__1::shared_ptr<DB::ThreadGroupStatus>, unsigned long) obj-x86_64-linux-gnu/../src/Processors/Executors/PullingAsyncPipelineExecutor.cpp:85:24\r\n    #22 0x29d36fba in DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0::operator()() const obj-x86_64-linux-gnu/../src/Processors/Executors/PullingAsyncPipelineExecutor.cpp:112:13\r\n    #23 0x29d36fba in decltype(std::__1::forward<DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&>(fp)()) std::__1::__invoke_constexpr<DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&>(DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&) obj-x86_64-linux-gnu/../contrib/libcxx/include/type_traits:3682:1\r\n    #24 0x29d36fba in decltype(auto) std::__1::__apply_tuple_impl<DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&, std::__1::tuple<>&>(DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&, std::__1::tuple<>&, std::__1::__tuple_indices<>) obj-x86_64-linux-gnu/../contrib/libcxx/include/tuple:1415:1\r\n    #25 0x29d36fba in decltype(auto) std::__1::apply<DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&, std::__1::tuple<>&>(DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&, std::__1::tuple<>&) obj-x86_64-linux-gnu/../contrib/libcxx/include/tuple:1424:1\r\n    #26 0x29d36fba in ThreadFromGlobalPool::ThreadFromGlobalPool<DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0>(DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&&)::'lambda'()::operator()() obj-x86_64-linux-gnu/../src/Common/ThreadPool.h:188:13\r\n    #27 0x29d36fba in decltype(std::__1::forward<DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0>(fp)()) std::__1::__invoke<ThreadFromGlobalPool::ThreadFromGlobalPool<DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0>(DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&&)::'lambda'()&>(DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&&) obj-x86_64-linux-gnu/../contrib/libcxx/include/type_traits:3676:1\r\n    #28 0x29d36fba in void std::__1::__invoke_void_return_wrapper<void>::__call<ThreadFromGlobalPool::ThreadFromGlobalPool<DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0>(DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&&)::'lambda'()&>(ThreadFromGlobalPool::ThreadFromGlobalPool<DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0>(DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&&)::'lambda'()&) obj-x86_64-linux-gnu/../contrib/libcxx/include/__functional_base:348:9\r\n    #29 0x29d36fba in std::__1::__function::__default_alloc_func<ThreadFromGlobalPool::ThreadFromGlobalPool<DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0>(DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&&)::'lambda'(), void ()>::operator()() obj-x86_64-linux-gnu/../contrib/libcxx/include/functional:1608:12\r\n    #30 0x29d36fba in void std::__1::__function::__policy_invoker<void ()>::__call_impl<std::__1::__function::__default_alloc_func<ThreadFromGlobalPool::ThreadFromGlobalPool<DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0>(DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&&)::'lambda'(), void ()> >(std::__1::__function::__policy_storage const*) obj-x86_64-linux-gnu/../contrib/libcxx/include/functional:2089:16\r\n    #31 0xc59a966 in std::__1::__function::__policy_func<void ()>::operator()() const obj-x86_64-linux-gnu/../contrib/libcxx/include/functional:2221:16\r\n    #32 0xc59a966 in std::__1::function<void ()>::operator()() const obj-x86_64-linux-gnu/../contrib/libcxx/include/functional:2560:12\r\n    #33 0xc59a966 in ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) obj-x86_64-linux-gnu/../src/Common/ThreadPool.cpp:274:17\r\n    #34 0xc5a2cd6 in void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()::operator()() const obj-x86_64-linux-gnu/../src/Common/ThreadPool.cpp:139:73\r\n    #35 0xc5a2cd6 in decltype(std::__1::forward<void>(fp)()) std::__1::__invoke<void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>(void&&) obj-x86_64-linux-gnu/../contrib/libcxx/include/type_traits:3676:1\r\n    #36 0xc5a2cd6 in void std::__1::__thread_execute<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>(std::__1::tuple<void, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>&, std::__1::__tuple_indices<>) obj-x86_64-linux-gnu/../contrib/libcxx/include/thread:280:5\r\n    #37 0xc5a2cd6 in void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()> >(void*) obj-x86_64-linux-gnu/../contrib/libcxx/include/thread:291:5\r\n    #38 0x7fc802f74608 in start_thread (/lib/x86_64-linux-gnu/libpthread.so.0+0x9608)\r\n    #39 0x7fc802e9b292 in __clone (/lib/x86_64-linux-gnu/libc.so.6+0x122292)\r\n\r\n0x60200037c8cc is located 4 bytes to the left of 8-byte region [0x60200037c8d0,0x60200037c8d8)\r\nallocated by thread T553 (QueryPipelineEx) here:\r\n    #0 0xc47babd in operator new(unsigned long) (/usr/bin/clickhouse+0xc47babd)\r\n    #1 0x34e74e28 in void* std::__1::__libcpp_operator_new<unsigned long>(unsigned long) obj-x86_64-linux-gnu/../contrib/libcxx/include/new:235:10\r\n    #2 0x34e74e28 in std::__1::__libcpp_allocate(unsigned long, unsigned long) obj-x86_64-linux-gnu/../contrib/libcxx/include/new:261:10\r\n    #3 0x34e74e28 in std::__1::allocator<char>::allocate(unsigned long) obj-x86_64-linux-gnu/../contrib/libcxx/include/memory:840:38\r\n    #4 0x34e74e28 in std::__1::allocator_traits<std::__1::allocator<char> >::allocate(std::__1::allocator<char>&, unsigned long) obj-x86_64-linux-gnu/../contrib/libcxx/include/__memory/allocator_traits.h:468:21\r\n    #5 0x34e74e28 in std::__1::__split_buffer<char, std::__1::allocator<char>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<char>&) obj-x86_64-linux-gnu/../contrib/libcxx/include/__split_buffer:314:29\r\n    #6 0x34e74e28 in std::__1::enable_if<(__is_cpp17_forward_iterator<unsigned char const*>::value) && (is_constructible<char, std::__1::iterator_traits<unsigned char const*>::reference>::value), std::__1::__wrap_iter<char*> >::type std::__1::vector<char, std::__1::allocator<char> >::insert<unsigned char const*>(std::__1::__wrap_iter<char const*>, unsigned char const*, unsigned char const*) obj-x86_64-linux-gnu/../contrib/libcxx/include/vector:2010:57\r\n    #7 0x34e6ddc2 in avro::DataFileReaderBase::readDataBlock() obj-x86_64-linux-gnu/../contrib/avro/lang/c++/impl/DataFile.cc:415:25\r\n    #8 0x29dfa98b in DB::IRowInputFormat::generate() obj-x86_64-linux-gnu/../src/Processors/Formats/IRowInputFormat.cpp:58:9\r\n    #9 0x29cd55af in DB::ISource::tryGenerate() obj-x86_64-linux-gnu/../src/Processors/ISource.cpp:79:18\r\n    #10 0x29cd489c in DB::ISource::work() obj-x86_64-linux-gnu/../src/Processors/ISource.cpp:53:26\r\n    #11 0x29d2d625 in DB::executeJob(DB::IProcessor*) obj-x86_64-linux-gnu/../src/Processors/Executors/ExecutionThreadContext.cpp:45:20\r\n    #12 0x29d2d625 in DB::ExecutionThreadContext::executeTask() obj-x86_64-linux-gnu/../src/Processors/Executors/ExecutionThreadContext.cpp:63:9\r\n    #13 0x29d0db06 in DB::PipelineExecutor::executeStepImpl(unsigned long, std::__1::atomic<bool>*) obj-x86_64-linux-gnu/../src/Processors/Executors/PipelineExecutor.cpp:213:26\r\n    #14 0x29d0d0b7 in DB::PipelineExecutor::executeStep(std::__1::atomic<bool>*) obj-x86_64-linux-gnu/../src/Processors/Executors/PipelineExecutor.cpp:115:5\r\n    #15 0x29d39545 in DB::PullingPipelineExecutor::pull(DB::Chunk&) obj-x86_64-linux-gnu/../src/Processors/Executors/PullingPipelineExecutor.cpp:50:20\r\n\r\nThread T553 (QueryPipelineEx) created by T447 (TCPHandler) here:\r\n    #0 0xc43439c in pthread_create (/usr/bin/clickhouse+0xc43439c)\r\n    #1 0xc5a1cb6 in std::__1::__libcpp_thread_create(unsigned long*, void* (*)(void*), void*) obj-x86_64-linux-gnu/../contrib/libcxx/include/__threading_support:509:10\r\n    #2 0xc5a1cb6 in std::__1::thread::thread<void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'(), void>(void&&) obj-x86_64-linux-gnu/../contrib/libcxx/include/thread:307:16\r\n    #3 0xc597279 in void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>) obj-x86_64-linux-gnu/../src/Common/ThreadPool.cpp:139:35\r\n    #4 0xc5a5745 in ThreadPoolImpl<std::__1::thread>::scheduleOrThrow(std::__1::function<void ()>, int, unsigned long) obj-x86_64-linux-gnu/../src/Common/ThreadPool.cpp:171:5\r\n    #5 0xc5a5745 in ThreadFromGlobalPool::ThreadFromGlobalPool<void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>(void&&) obj-x86_64-linux-gnu/../src/Common/ThreadPool.h:169:38\r\n    #6 0xc59c5ff in void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>) obj-x86_64-linux-gnu/../src/Common/ThreadPool.cpp:139:35\r\n    #7 0xc59bc95 in ThreadPoolImpl<ThreadFromGlobalPool>::scheduleOrThrowOnError(std::__1::function<void ()>, int) obj-x86_64-linux-gnu/../src/Common/ThreadPool.cpp:159:5\r\n    #8 0x29f6384a in DB::ParallelFormattingOutputFormat::scheduleFormatterThreadForUnitWithNumber(unsigned long, unsigned long) obj-x86_64-linux-gnu/../src/Processors/Formats/Impl/ParallelFormattingOutputFormat.h:251:14\r\n    #9 0x29f5ffc8 in DB::ParallelFormattingOutputFormat::addChunk(DB::Chunk, DB::ParallelFormattingOutputFormat::ProcessingUnitType, bool) obj-x86_64-linux-gnu/../src/Processors/Formats/Impl/ParallelFormattingOutputFormat.cpp:66:9\r\n    #10 0x29f5f410 in DB::ParallelFormattingOutputFormat::finalizeImpl() obj-x86_64-linux-gnu/../src/Processors/Formats/Impl/ParallelFormattingOutputFormat.cpp:13:9\r\n    #11 0x29d4fe37 in DB::IOutputFormat::finalize() obj-x86_64-linux-gnu/../src/Processors/Formats/IOutputFormat.cpp:125:5\r\n    #12 0x29d4fe37 in DB::IOutputFormat::work() obj-x86_64-linux-gnu/../src/Processors/Formats/IOutputFormat.cpp:75:9\r\n    #13 0x29d2d625 in DB::executeJob(DB::IProcessor*) obj-x86_64-linux-gnu/../src/Processors/Executors/ExecutionThreadContext.cpp:45:20\r\n    #14 0x29d2d625 in DB::ExecutionThreadContext::executeTask() obj-x86_64-linux-gnu/../src/Processors/Executors/ExecutionThreadContext.cpp:63:9\r\n    #15 0x29d0db06 in DB::PipelineExecutor::executeStepImpl(unsigned long, std::__1::atomic<bool>*) obj-x86_64-linux-gnu/../src/Processors/Executors/PipelineExecutor.cpp:213:26\r\n    #16 0x29d0c02e in DB::PipelineExecutor::executeSingleThread(unsigned long) obj-x86_64-linux-gnu/../src/Processors/Executors/PipelineExecutor.cpp:178:5\r\n    #17 0x29d0c02e in DB::PipelineExecutor::executeImpl(unsigned long) obj-x86_64-linux-gnu/../src/Processors/Executors/PipelineExecutor.cpp:329:9\r\n    #18 0x29d0b2ef in DB::PipelineExecutor::execute(unsigned long) obj-x86_64-linux-gnu/../src/Processors/Executors/PipelineExecutor.cpp:84:9\r\n    #19 0x29d08680 in DB::CompletedPipelineExecutor::execute() obj-x86_64-linux-gnu/../src/Processors/Executors/CompletedPipelineExecutor.cpp:101:18\r\n    #20 0x28054573 in DB::executeQuery(DB::ReadBuffer&, DB::WriteBuffer&, bool, std::__1::shared_ptr<DB::Context>, std::__1::function<void (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)>, std::__1::optional<DB::FormatSettings> const&) obj-x86_64-linux-gnu/../src/Interpreters/executeQuery.cpp:1126:22\r\n    #21 0x29b20fa6 in DB::HTTPHandler::processQuery(DB::HTTPServerRequest&, DB::HTMLForm&, DB::HTTPServerResponse&, DB::HTTPHandler::Output&, std::__1::optional<DB::CurrentThread::QueryScope>&) obj-x86_64-linux-gnu/../src/Server/HTTPHandler.cpp:790:5\r\n    #22 0x29b2e491 in DB::HTTPHandler::handleRequest(DB::HTTPServerRequest&, DB::HTTPServerResponse&) obj-x86_64-linux-gnu/../src/Server/HTTPHandler.cpp:928:9\r\n    #23 0x29c47a54 in DB::HTTPServerConnection::run() obj-x86_64-linux-gnu/../src/Server/HTTP/HTTPServerConnection.cpp:65:34\r\n    #24 0x30873dce in Poco::Net::TCPServerConnection::start() obj-x86_64-linux-gnu/../contrib/poco/Net/src/TCPServerConnection.cpp:43:3\r\n    #25 0x30874b40 in Poco::Net::TCPServerDispatcher::run() obj-x86_64-linux-gnu/../contrib/poco/Net/src/TCPServerDispatcher.cpp:115:20\r\n    #26 0x30d57265 in Poco::PooledThread::run() obj-x86_64-linux-gnu/../contrib/poco/Foundation/src/ThreadPool.cpp:199:14\r\n    #27 0x30d50519 in Poco::ThreadImpl::runnableEntry(void*) obj-x86_64-linux-gnu/../contrib/poco/Foundation/src/Thread_POSIX.cpp:345:27\r\n    #28 0x7fc802f74608 in start_thread (/lib/x86_64-linux-gnu/libpthread.so.0+0x9608)\r\n\r\nThread T447 (TCPHandler) created by T243 here:\r\n    #0 0xc43439c in pthread_create (/usr/bin/clickhouse+0xc43439c)\r\n    #1 0x30d4f7c9 in Poco::ThreadImpl::startImpl(Poco::SharedPtr<Poco::Runnable, Poco::ReferenceCounter, Poco::ReleasePolicy<Poco::Runnable> >) obj-x86_64-linux-gnu/../contrib/poco/Foundation/src/Thread_POSIX.cpp:202:6\r\n    #2 0x30d5285d in Poco::Thread::start(Poco::Runnable&) obj-x86_64-linux-gnu/../contrib/poco/Foundation/src/Thread.cpp:128:2\r\n    #3 0x30d5b359 in Poco::PooledThread::start() obj-x86_64-linux-gnu/../contrib/poco/Foundation/src/ThreadPool.cpp:85:10\r\n    #4 0x30d5b359 in Poco::ThreadPool::getThread() obj-x86_64-linux-gnu/../contrib/poco/Foundation/src/ThreadPool.cpp:461:14\r\n    #5 0x30d5ba36 in Poco::ThreadPool::startWithPriority(Poco::Thread::Priority, Poco::Runnable&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) obj-x86_64-linux-gnu/../contrib/poco/Foundation/src/ThreadPool.cpp:365:2\r\n    #6 0x30875727 in Poco::Net::TCPServerDispatcher::enqueue(Poco::Net::StreamSocket const&) obj-x86_64-linux-gnu/../contrib/poco/Net/src/TCPServerDispatcher.cpp:152:17\r\n    #7 0x30873600 in Poco::Net::TCPServer::run() obj-x86_64-linux-gnu/../contrib/poco/Net/src/TCPServer.cpp:148:21\r\n    #8 0x30d50519 in Poco::ThreadImpl::runnableEntry(void*) obj-x86_64-linux-gnu/../contrib/poco/Foundation/src/Thread_POSIX.cpp:345:27\r\n    #9 0x7fc802f74608 in start_thread (/lib/x86_64-linux-gnu/libpthread.so.0+0x9608)\r\n\r\nThread T243 created by T0 here:\r\n    #0 0xc43439c in pthread_create (/usr/bin/clickhouse+0xc43439c)\r\n    #1 0x30d4f7c9 in Poco::ThreadImpl::startImpl(Poco::SharedPtr<Poco::Runnable, Poco::ReferenceCounter, Poco::ReleasePolicy<Poco::Runnable> >) obj-x86_64-linux-gnu/../contrib/poco/Foundation/src/Thread_POSIX.cpp:202:6\r\n    #2 0x30d5285d in Poco::Thread::start(Poco::Runnable&) obj-x86_64-linux-gnu/../contrib/poco/Foundation/src/Thread.cpp:128:2\r\n    #3 0xc4a9a3c in DB::ProtocolServerAdapter::start() obj-x86_64-linux-gnu/../src/Server/ProtocolServerAdapter.h:29:26\r\n    #4 0xc4a9a3c in DB::Server::main(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) obj-x86_64-linux-gnu/../programs/server/Server.cpp:1443:24\r\n    #5 0x308a7d1a in Poco::Util::Application::run() obj-x86_64-linux-gnu/../contrib/poco/Util/src/Application.cpp:334:8\r\n    #6 0xc48a398 in DB::Server::run() obj-x86_64-linux-gnu/../programs/server/Server.cpp:447:25\r\n    #7 0x308ed39d in Poco::Util::ServerApplication::run(int, char**) obj-x86_64-linux-gnu/../contrib/poco/Util/src/ServerApplication.cpp:611:9\r\n    #8 0xc483afd in mainEntryClickHouseServer(int, char**) obj-x86_64-linux-gnu/../programs/server/Server.cpp:188:20\r\n    #9 0xc47f688 in main obj-x86_64-linux-gnu/../programs/main.cpp:378:12\r\n    #10 0x7fc802da00b2 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x270b2)\r\n\r\nSUMMARY: AddressSanitizer: heap-buffer-overflow obj-x86_64-linux-gnu/../contrib/avro/lang/c++/impl/DataFile.cc:418:18 in avro::DataFileReaderBase::readDataBlock()\r\nShadow bytes around the buggy address:\r\n  0x0c04800678c0: fa fa fa fa fa fa fd fa fa fa fd fd fa fa fa fa\r\n  0x0c04800678d0: fa fa fd fd fa fa fd fd fa fa 02 fa fa fa fa fa\r\n  0x0c04800678e0: fa fa fd fd fa fa fa fa fa fa fa fa fa fa fa fa\r\n  0x0c04800678f0: fa fa fd fd fa fa fa fa fa fa 00 00 fa fa 00 00\r\n  0x0c0480067900: fa fa fd fd fa fa fa fa fa fa fd fa fa fa fa fa\r\n=>0x0c0480067910: fa fa 00 00 fa fa fa fa fa[fa]fc fa fa fa fd fd\r\n  0x0c0480067920: fa fa fa fa fa fa fd fd fa fa fd fd fa fa fd fd\r\n  0x0c0480067930: fa fa fa fa fa fa fa fa fa fa fd fd fa fa fa fa\r\n  0x0c0480067940: fa fa fd fd fa fa fa fa fa fa fa fa fa fa fd fd\r\n  0x0c0480067950: fa fa fd fa fa fa fa fa fa fa fa fa fa fa fd fd\r\n  0x0c0480067960: fa fa fa fa fa fa fd fa fa fa fd fa fa fa fd fa\r\nShadow byte legend (one shadow byte represents 8 application bytes):\r\n  Addressable:           00\r\n  Partially addressable: 01 02 03 04 05 06 07 \r\n  Heap left redzone:       fa\r\n  Freed heap region:       fd\r\n  Stack left redzone:      f1\r\n  Stack mid redzone:       f2\r\n  Stack right redzone:     f3\r\n  Stack after return:      f5\r\n  Stack use after scope:   f8\r\n  Global redzone:          f9\r\n  Global init order:       f6\r\n  Poisoned by user:        f7\r\n  Container overflow:      fc\r\n  Array cookie:            ac\r\n  Intra object redzone:    bb\r\n  ASan internal:           fe\r\n  Left alloca redzone:     ca\r\n  Right alloca redzone:    cb\r\n==549==ABORTING\r\n```","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33652/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33652/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33651","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33651/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33651/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33651/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33651","id":1104010815,"node_id":"I_kwDOA5dJV85Bzd4_","number":33651,"title":"Segfault in `IProcessor::cancel()`","user":{"login":"tavplubix","id":14847450,"node_id":"MDQ6VXNlcjE0ODQ3NDUw","avatar_url":"https://avatars.githubusercontent.com/u/14847450?v=4","gravatar_id":"","url":"https://api.github.com/users/tavplubix","html_url":"https://github.com/tavplubix","followers_url":"https://api.github.com/users/tavplubix/followers","following_url":"https://api.github.com/users/tavplubix/following{/other_user}","gists_url":"https://api.github.com/users/tavplubix/gists{/gist_id}","starred_url":"https://api.github.com/users/tavplubix/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tavplubix/subscriptions","organizations_url":"https://api.github.com/users/tavplubix/orgs","repos_url":"https://api.github.com/users/tavplubix/repos","events_url":"https://api.github.com/users/tavplubix/events{/privacy}","received_events_url":"https://api.github.com/users/tavplubix/received_events","type":"User","site_admin":false},"labels":[{"id":2104602822,"node_id":"MDU6TGFiZWwyMTA0NjAyODIy","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/fuzz","name":"fuzz","color":"abc4ea","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-01-14T18:55:44Z","updated_at":"2022-01-14T18:55:44Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"https://s3.amazonaws.com/clickhouse-test-reports/0/b72e7db223d87153e36ab16febdb20c554dc8ec6/stress_test__debug__actions_.html\r\n\r\n```\r\n/var/log/clickhouse-server/clickhouse-server.log.2:2022.01.14 20:13:15.612365 [ 30167 ] {} <Fatal> BaseDaemon: ########################################\r\n/var/log/clickhouse-server/clickhouse-server.log.2:2022.01.14 20:13:15.666540 [ 30167 ] {} <Fatal> BaseDaemon: (version 22.1.1.2503, build id: 53139EF8C6A5AD69) (from thread 1880) (query_id: f5b675f7-8244-46b6-b073-f806a1d80a63) Received signal Segmentation fault (11)\r\n/var/log/clickhouse-server/clickhouse-server.log.2:2022.01.14 20:13:15.675979 [ 30167 ] {} <Fatal> BaseDaemon: Address: NULL pointer. Access: read. Unknown si_code.\r\n/var/log/clickhouse-server/clickhouse-server.log.2:2022.01.14 20:13:15.695578 [ 30167 ] {} <Fatal> BaseDaemon: Stack trace: 0x24598c89 0x24597a1f 0x2458b11f 0x245b293f 0x23d11885 0x24598c8c 0x24597a1f 0x2458b11f 0x245adcca 0x2450b787 0x24505740 0x24515505 0x28723159 0x28723968 0x2896ce14 0x289698fa 0x289686dc 0x7f8ee3b67609 0x7f8ee3a8e293\r\n/var/log/clickhouse-server/clickhouse-server.log.2:2022.01.14 20:13:16.340790 [ 30167 ] {} <Fatal> BaseDaemon: 4. ./obj-x86_64-linux-gnu/../src/Processors/IProcessor.h:237: DB::IProcessor::cancel() @ 0x24598c89 in /usr/bin/clickhouse\r\n/var/log/clickhouse-server/clickhouse-server.log.2:2022.01.14 20:13:16.905029 [ 521 ] {} <Fatal> Application: Child process was terminated by signal 11.\r\n```\r\n\r\n```\r\n2022-01-14 20:12:34 Thread 478 \"TCPHandler\" received signal SIGSEGV, Segmentation fault.\r\n2022-01-14 20:12:34 [Switching to Thread 0x7f8ce95e1700 (LWP 1880)]\r\n2022-01-14 20:12:34 0x0000000024598c89 in DB::IProcessor::cancel (this=0x7f8e17c2f218) at ../src/Processors/IProcessor.h:237\r\n2022-01-14 20:13:09 Saved corefile core.522\r\n2022-01-14 20:13:09 #0  0x0000000024598c89 in DB::IProcessor::cancel (this=0x7f8e17c2f218) at ../src/Processors/IProcessor.h:237\r\n2022-01-14 20:13:09 No locals.\r\n2022-01-14 20:13:09 #1  0x0000000024597a1f in DB::ExecutingGraph::cancel (this=0x7f8e0f0a9180) at ../src/Processors/Executors/ExecutingGraph.cpp:363\r\n2022-01-14 20:13:09         processor = @0x7f8e20399510: {__ptr_ = 0x7f8e17c2f218, __cntrl_ = 0x7f8e17c2f200}\r\n2022-01-14 20:13:09         __range1 = @0x7f8e0f0fd670: {<std::__1::__vector_base<std::__1::shared_ptr<DB::IProcessor>, std::__1::allocator<std::__1::shared_ptr<DB::IProcessor> > >> = {<std::__1::__vector_base_common<true>> = {<No data fields>}, __begin_ = 0x0, __end_ = 0x0, __end_cap_ = {<std::__1::__compressed_pair_elem<std::__1::shared_ptr<DB::IProcessor>*, 0, false>> = {__value_ = 0x0}, <std::__1::__compressed_pair_elem<std::__1::allocator<std::__1::shared_ptr<DB::IProcessor> >, 1, true>> = {<std::__1::allocator<std::__1::shared_ptr<DB::IProcessor> >> = {<No data fields>}, <No data fields>}, <No data fields>}}, <No data fields>}\r\n2022-01-14 20:13:09         __begin1 = {__i = 0x7f8e20399510}\r\n2022-01-14 20:13:09         __end1 = {__i = 0x7f8e20399550}\r\n2022-01-14 20:13:09         guard = {__m_ = @0x7f8e0f0a91c8}\r\n2022-01-14 20:13:09 #2  0x000000002458b11f in DB::PipelineExecutor::cancel (this=0x7f8e0f077998) at ../src/Processors/Executors/PipelineExecutor.cpp:68\r\n2022-01-14 20:13:10 No locals.\r\n2022-01-14 20:13:10 #3  0x00000000245b293f in DB::PullingPipelineExecutor::cancel (this=0x7f8d5ddd47a0) at ../src/Processors/Executors/PullingPipelineExecutor.cpp:89\r\n2022-01-14 20:13:10 No locals.\r\n2022-01-14 20:13:10 #4  0x0000000023d11885 in DB::(anonymous namespace)::StorageURLSource::onCancel (this=0x7f8dff5cee98) at ../src/Storages/StorageURL.cpp:150\r\n2022-01-14 20:13:10 No locals.\r\n2022-01-14 20:13:10 #5  0x0000000024598c8c in DB::IProcessor::cancel (this=0x7f8dff5cee98) at ../src/Processors/IProcessor.h:237\r\n2022-01-14 20:13:10 No locals.\r\n2022-01-14 20:13:10 #6  0x0000000024597a1f in DB::ExecutingGraph::cancel (this=0x7f8e02a9e040) at ../src/Processors/Executors/ExecutingGraph.cpp:363\r\n2022-01-14 20:13:10         processor = @0x7f8e01738a00: {__ptr_ = 0x7f8dff5cee98, __cntrl_ = 0x7f8dff5cee80}\r\n2022-01-14 20:13:10         __range1 = @0x7f8cf9fd5d38: {<std::__1::__vector_base<std::__1::shared_ptr<DB::IProcessor>, std::__1::allocator<std::__1::shared_ptr<DB::IProcessor> > >> = {<std::__1::__vector_base_common<true>> = {<No data fields>}, __begin_ = 0x7f8e01738a00, __end_ = 0x7f8e01738b90, __end_cap_ = {<std::__1::__compressed_pair_elem<std::__1::shared_ptr<DB::IProcessor>*, 0, false>> = {__value_ = 0x7f8e01738c00}, <std::__1::__compressed_pair_elem<std::__1::allocator<std::__1::shared_ptr<DB::IProcessor> >, 1, true>> = {<std::__1::allocator<std::__1::shared_ptr<DB::IProcessor> >> = {<No data fields>}, <No data fields>}, <No data fields>}}, <No data fields>}\r\n2022-01-14 20:13:10         __begin1 = {__i = 0x7f8e01738a00}\r\n2022-01-14 20:13:10         __end1 = {__i = 0x7f8e01738b90}\r\n2022-01-14 20:13:10         guard = {__m_ = @0x7f8e02a9e088}\r\n2022-01-14 20:13:10 #7  0x000000002458b11f in DB::PipelineExecutor::cancel (this=0x7f8dc4492118) at ../src/Processors/Executors/PipelineExecutor.cpp:68\r\n2022-01-14 20:13:10 No locals.\r\n2022-01-14 20:13:10 #8  0x00000000245adcca in DB::PullingAsyncPipelineExecutor::cancel (this=0x7f8ce95d5f60) at ../src/Processors/Executors/PullingAsyncPipelineExecutor.cpp:180\r\n2022-01-14 20:13:10 No locals.\r\n2022-01-14 20:13:10 #9  0x000000002450b787 in DB::TCPHandler::processOrdinaryQueryWithProcessors (this=0x7f8cf9fd5a00) at ../src/Server/TCPHandler.cpp:689\r\n2022-01-14 20:13:10         lock = {__m_ = 0x7f8cf9fd5b88, __owns_ = false}\r\n2022-01-14 20:13:10         executor = {pipeline = @0x7f8cf9fd5cc8, lazy_format = {__ptr_ = 0x7f8e0de9b518, __cntrl_ = 0x7f8e0de9b500}, data = {__ptr_ = {<std::__1::__compressed_pair_elem<DB::PullingAsyncPipelineExecutor::Data*, 0, false>> = {__value_ = 0x7f8e01c79240}, <std::__1::__compressed_pair_elem<std::__1::default_delete<DB::PullingAsyncPipelineExecutor::Data>, 1, true>> = {<std::__1::default_delete<DB::PullingAsyncPipelineExecutor::Data>> = {<No data fields>}, <No data fields>}, <No data fields>}}}\r\n2022-01-14 20:13:10         query_thread_metric_increment = {what = 0x2c6ef530 <CurrentMetrics::values+256>, amount = 1}\r\n2022-01-14 20:13:10         block = {data = {<std::__1::__vector_base<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName> >> = {<std::__1::__vector_base_common<true>> = {<No data fields>}, __begin_ = 0x0, __end_ = 0x0, __end_cap_ = {<std::__1::__compressed_pair_elem<DB::ColumnWithTypeAndName*, 0, false>> = {__value_ = 0x0}, <std::__1::__compressed_pair_elem<std::__1::allocator<DB::ColumnWithTypeAndName>, 1, true>> = {<std::__1::allocator<DB::ColumnWithTypeAndName>> = {<No data fields>}, <No data fields>}, <No data fields>}}, <No data fields>}, index_by_name = {__table_ = {__bucket_list_ = {__ptr_ = {<std::__1::__compressed_pair_elem<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::string, unsigned long>, void*>*>**, 0, false>> = {__value_ = 0x0}, <std::__1::__compressed_pair_elem<std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::string, unsigned long>, void*>*>*> >, 1, false>> = {__value_ = {__data_ = {<std::__1::__compressed_pair_elem<unsigned long, 0, false>> = {__value_ = 0}, <std::__1::__compressed_pair_elem<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::string, unsigned long>, void*>*>*>, 1, true>> = {<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::string, unsigned long>, void*>*>*>> = {<No data fields>}, <No data fields>}, <No data fields>}}}, <No data fields>}}, __p1_ = {<std::__1::__compressed_pair_elem<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::string, unsigned long>, void*>*>, 0, false>> = {__value_ = {__next_ = 0x0}}, <std::__1::__compressed_pair_elem<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::string, unsigned long>, void*> >, 1, true>> = {<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::string, unsigned long>, void*> >> = {<No data fields>}, <No data fields>}, <No data fields>}, __p2_ = {<std::__1::__compressed_pair_elem<unsigned long, 0, false>> = {__value_ = 0}, <std::__1::__compressed_pair_elem<std::__1::__unordered_map_hasher<std::__1::string, std::__1::__hash_value_type<std::__1::string, unsigned long>, std::__1::hash<std::__1::string>, std::__1::equal_to<std::__1::string>, true>, 1, true>> = {<std::__1::__unordered_map_hasher<std::__1::string, std::__1::__hash_value_type<std::__1::string, unsigned long>, std::__1::hash<std::__1::string>, std::__1::equal_to<std::__1::string>, true>> = {<std::__1::hash<std::__1::string>> = {<std::__1::unary_function<std::__1::string, unsigned long>> = {<No data fields>}, <No data fields>}, <No data fields>}, <No data fields>}, <No data fields>}, __p3_ = {<std::__1::__compressed_pair_elem<float, 0, false>> = {__value_ = 1}, <std::__1::__compressed_pair_elem<std::__1::__unordered_map_equal<std::__1::string, std::__1::__hash_value_type<std::__1::string, unsigned long>, std::__1::equal_to<std::__1::string>, std::__1::hash<std::__1::string>, true>, 1, true>> = {<std::__1::__unordered_map_equal<std::__1::string, std::__1::__hash_value_type<std::__1::string, unsigned long>, std::__1::equal_to<std::__1::string>, std::__1::hash<std::__1::string>, true>> = {<std::__1::equal_to<std::__1::string>> = {<std::__1::binary_function<std::__1::string, std::__1::string, bool>> = {<No data fields>}, <No data fields>}, <No data fields>}, <No data fields>}, <No data fields>}}}, info = {is_overflows = false, bucket_num = -1}}\r\n2022-01-14 20:13:10         pipeline = @0x7f8cf9fd5cc8: {resources = {interpreter_context = {<std::__1::__vector_base<std::__1::shared_ptr<DB::Context const>, std::__1::allocator<std::__1::shared_ptr<DB::Context const> > >> = {<std::__1::__vector_base_common<true>> = {<No data fields>}, __begin_ = 0x7f8e05a5c580, __end_ = 0x7f8e05a5c5a0, __end_cap_ = {<std::__1::__compressed_pair_elem<std::__1::shared_ptr<DB::Context const>*, 0, false>> = {__value_ = 0x7f8e05a5c5a0}, <std::__1::__compressed_pair_elem<std::__1::allocator<std::__1::shared_ptr<DB::Context const> >, 1, true>> = {<std::__1::allocator<std::__1::shared_ptr<DB::Context const> >> = {<No data fields>}, <No data fields>}, <No data fields>}}, <No data fields>}, storage_holders = {<std::__1::__vector_base<std::__1::shared_ptr<DB::IStorage>, std::__1::allocator<std::__1::shared_ptr<DB::IStorage> > >> = {<std::__1::__vector_base_common<true>> = {<No data fields>}, __begin_ = 0x7f8deacd05c0, __end_ = 0x7f8deacd05d0, __end_cap_ = {<std::__1::__compressed_pair_elem<std::__1::shared_ptr<DB::IStorage>*, 0, false>> = {__value_ = 0x7f8deacd05d0}, <std::__1::__compressed_pair_elem<std::__1::allocator<std::__1::shared_ptr<DB::IStorage> >, 1, true>> = {<std::__1::allocator<std::__1::shared_ptr<DB::IStorage> >> = {<No data fields>}, <No data fields>}, <No data fields>}}, <No data fields>}, table_locks = {<std::__1::__vector_base<std::__1::shared_ptr<DB::RWLockImpl::LockHolderImpl>, std::__1::allocator<std::__1::shared_ptr<DB::RWLockImpl::LockHolderImpl> > >> = {<std::__1::__vector_base_common<true>> = {<No data fields>}, __begin_ = 0x7f8e138dc3e0, __end_ = 0x7f8e138dc3f0, __end_cap_ = {<std::__1::__compressed_pair_elem<std::__1::shared_ptr<DB::RWLockImpl::LockHolderImpl>*, 0, false>> = {__value_ = 0x7f8e138dc3f0}, <std::__1::__compressed_pair_elem<std::__1::allocator<std::__1::shared_ptr<DB::RWLockImpl::LockHolderImpl> >, 1, true>> = {<std::__1::allocator<std::__1::shared_ptr<DB::RWLockImpl::LockHolderImpl> >> = {<No data fields>}, <No data fields>}, <No data fields>}}, <No data fields>}, query_plans = {<std::__1::__vector_base<std::__1::unique_ptr<DB::QueryPlan, std::__1::default_delete<DB::QueryPlan> >, std::__1::allocator<std::__1::unique_ptr<DB::QueryPlan, std::__1::default_delete<DB::QueryPlan> > > >> = {<std::__1::__vector_base_common<true>> = {<No data fields>}, __begin_ = 0x0, __end_ = 0x0, __end_cap_ = {<std::__1::__compressed_pair_elem<std::__1::unique_ptr<DB::QueryPlan, std::__1::default_delete<DB::QueryPlan> >*, 0, false>> = {__value_ = 0x0}, <std::__1::__compressed_pair_elem<std::__1::allocator<std::__1::unique_ptr<DB::QueryPlan, std::__1::default_delete<DB::QueryPlan> > >, 1, true>> = {<std::__1::allocator<std::__1::unique_ptr<DB::QueryPlan, std::__1::default_delete<DB::QueryPlan> > >> = {<No data fields>}, <No data fields>}, <No data fields>}}, <No data fields>}, query_id_holder = {__ptr_ = 0x0, __cntrl_ = 0x0}}, processors = {<std::__1::__vector_base<std::__1::shared_ptr<DB::IProcessor>, std::__1::allocator<std::__1::shared_ptr<DB::IProcessor> > >> = {<std::__1::__vector_base_common<true>> = {<No data fields>}, __begin_ = 0x7f8e01738a00, __end_ = 0x7f8e01738b90, __end_cap_ = {<std::__1::__compressed_pair_elem<std::__1::shared_ptr<DB::IProcessor>*, 0, false>> = {__value_ = 0x7f8e01738c00}, <std::__1::__compressed_pair_elem<std::__1::allocator<std::__1::shared_ptr<DB::IProcessor> >, 1, true>> = {<std::__1::allocator<std::__1::shared_ptr<DB::IProcessor> >> = {<No data fields>}, <No data fields>}, <No data fields>}}, <No data fields>}, input = 0x0, output = 0x0, totals = 0x0, extremes = 0x0, process_list_element = 0x7f8e05b68590, output_format = 0x7f8e0de9b518, num_threads = 10}\r\n2022-01-14 20:13:10 #10 0x0000000024505740 in DB::TCPHandler::runImpl (this=0x7f8cf9fd5a00) at ../src/Server/TCPHandler.cpp:346\r\n2022-01-14 20:13:11         scope_exit212 = {static is_nullable = <optimized out>, function = {this = 0x7f8cf9fd5a00}}\r\n2022-01-14 20:13:11         client_logs_level = {value = DB::LogsLevel::warning, changed = true}\r\n2022-01-14 20:13:11         watch = {start_ns = 12141276637187, stop_ns = 0, clock_type = 1, is_running = true}\r\n2022-01-14 20:13:11         query_scope = {<std::__1::__optional_move_assign_base<DB::CurrentThread::QueryScope, false>> = {<std::__1::__optional_copy_assign_base<DB::CurrentThread::QueryScope, false>> = {<std::__1::__optional_move_base<DB::CurrentThread::QueryScope, false>> = {<std::__1::__optional_copy_base<DB::CurrentThread::QueryScope, false>> = {<std::__1::__optional_storage_base<DB::CurrentThread::QueryScope, false>> = {<std::__1::__optional_destruct_base<DB::CurrentThread::QueryScope, false>> = {{__null_state_ = 1 '\\001', __val_ = {log_peak_memory_usage_in_destructor = true}}, __engaged_ = true}, <No data fields>}, <No data fields>}, <No data fields>}, <No data fields>}, <No data fields>}, <std::__1::__sfinae_ctor_base<true, true>> = {<No data fields>}, <std::__1::__sfinae_assign_base<true, true>> = {<No data fields>}, <No data fields>}\r\n2022-01-14 20:13:11         exception = {<std::__1::__optional_move_assign_base<DB::Exception, false>> = {<std::__1::__optional_copy_assign_base<DB::Exception, false>> = {<std::__1::__optional_move_base<DB::Exception, false>> = {<std::__1::__optional_copy_base<DB::Exception, false>> = {<std::__1::__optional_storage_base<DB::Exception, false>> = {<std::__1::__optional_destruct_base<DB::Exception, false>> = {{__null_state_ = 0 '\\000', __val_ = {<Poco::Exception> = {<std::exception> = {_vptr$exception = 0x7f8ce95d6e00, static capacity = 32, frames = {0x28613b3f <rtree_leaf_elm_lookup+575>, 0x7f8dff7533d0, 0x1ff5d8990, 0x7f8dff7533d0, 0x7f8ce95d8990, 0x2c8671a0 <extents_rtree>, 0x1617a788 <pthread_mutex_unlock(pthread_mutex_t*)+232>, 0x0, 0x0, 0x7f8ce95d6e00, 0x2861361f <atomic_load_p+31>, 0x7f8e2adfbb58, 0x7f8ce95d6de8, 0xc0000000, 0x37f8e0221ba81, 0xe95d6e30, 0x7f8e2adfbb58, 0x7f8ce95d6e30, 0x28614034 <rtree_leaf_elm_bits_read+52>, 0x1007f8ce95d8960, 0x12adfbb58, 0x7f8ce95d8b58, 0x37f8e0221ba81, 0x7f8ce95d6e50, 0x2861329a <ticker_tick+26>, 0x7f8dff7533d0, 0x7f8ce95d8b58, 0x7f8ce95d6e70, 0x28612abd <tcache_event+29>, 0x7f8ce95d8b50, 0x7f8ce95d8960, 0x7f8ce95d6ec0}, size = 677466099}, _msg = {<std::__1::__basic_string_common<true>> = {<No data fields>}, static __short_mask = 128, static __long_mask = 9223372036854775808, __r_ = {<std::__1::__compressed_pair_elem<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, 0, false>> = {__value_ = {{__l = {__data_ = 0x7f8e2adfbb58 \"\\201\\272!\\002\\216\\177\\003\", __size_ = 140248581389144, __cap_ = 140251676805388}, __s = {__data_ = \"X\\273\\337*\\216\\177\\000\\000X\\273\\337*\\216\\177\\000\\000\\f\\t`\\343\\216\\177\", {<std::__1::__padding<char, 1>> = {<No data fields>}, __size_ = 0 '\\000'}}, __r = {__words = {140248581389144, 140248581389144, 140251676805388}}}}}, <std::__1::__compressed_pair_elem<std::__1::allocator<char>, 1, true>> = {<std::__1::allocator<char>> = {<No data fields>}, <No data fields>}, <No data fields>}, static npos = 18446744073709551615}, _pNested = 0x7f8ce95d8ba8, _code = 22900416}, remote = 3}}, __engaged_ = false}, <No data fields>}, <No data fields>}, <No data fields>}, <No data fields>}, <No data fields>}, <std::__1::__sfinae_ctor_base<true, true>> = {<No data fields>}, <std::__1::__sfinae_assign_base<true, true>> = {<No data fields>}, <No data fields>}\r\n2022-01-14 20:13:11         network_error = false\r\n2022-01-14 20:13:11         e = <error reading variable>\r\n2022-01-14 20:13:11         e = <error reading variable>\r\n2022-01-14 20:13:11         e = <error reading variable>\r\n2022-01-14 20:13:11         e = <error reading variable>\r\n2022-01-14 20:13:11         e = @0x7f8ce95db560: {_vptr$exception = 0x14057b7ef767814f, static capacity = 32, frames = {0x5851f42d4c957f2d, 0x8272fc285f5fed1f, 0x9647a0e77f9478d7, 0x1, 0x7f8ce8de2000, 0x800000, 0x0 <repeats 26 times>}, size = 0}\r\n2022-01-14 20:13:14         thread_status = {<boost::noncopyable_::noncopyable> = {<boost::noncopyable_::base_token> = {<No data fields>}, <No data fields>}, thread_id = 1880, os_thread_priority = 0, performance_counters = {counters = 0x7f8c48906800, counters_holder = {__ptr_ = {<std::__1::__compressed_pair_elem<std::__1::atomic<unsigned long>*, 0, false>> = {__value_ = 0x7f8c48906800}, <std::__1::__compressed_pair_elem<std::__1::default_delete<std::__1::atomic<unsigned long> []>, 1, true>> = {<std::__1::default_delete<std::__1::atomic<unsigned long> []>> = {<No data fields>}, <No data fields>}, <No data fields>}}, parent = 0x7f8e05b069c0, level = VariableContext::Thread, static num_counters = 239}, memory_tracker = {amount = {<std::__1::__atomic_base<long, true>> = {<std::__1::__atomic_base<long, false>> = {__a_ = {<std::__1::__cxx_atomic_base_impl<long>> = {__a_value = 2121158}, <No data fields>}, static is_always_lock_free = <optimized out>}, <No data fields>}, <No data fields>}, peak = {<std::__1::__atomic_base<long, true>> = {<std::__1::__atomic_base<long, false>> = {__a_ = {<std::__1::__cxx_atomic_base_impl<long>> = {__a_value = 2121158}, <No data fields>}, static is_always_lock_free = <optimized out>}, <No data fields>}, <No data fields>}, hard_limit = {<std::__1::__atomic_base<long, true>> = {<std::__1::__atomic_base<long, false>> = {__a_ = {<std::__1::__cxx_atomic_base_impl<long>> = {__a_value = 0}, <No data fields>}, static is_always_lock_free = <optimized out>}, <No data fields>}, <No data fields>}, profiler_limit = {<std::__1::__atomic_base<long, true>> = {<std::__1::__atomic_base<long, false>> = {__a_ = {<std::__1::__cxx_atomic_base_impl<long>> = {__a_value = 0}, <No data fields>}, static is_always_lock_free = <optimized out>}, <No data fields>}, <No data fields>}, profiler_step = 0, fault_probability = 0, sample_probability = 0, parent = {<std::__1::__atomic_base<MemoryTracker*, false>> = {__a_ = {<std::__1::__cxx_atomic_base_impl<MemoryTracker*>> = {__a_value = 0x7f8e05b069e0}, <No data fields>}, static is_always_lock_free = <optimized out>}, <No data fields>}, metric = {<std::__1::__atomic_base<unsigned long, true>> = {<std::__1::__atomic_base<unsigned long, false>> = {__a_ = {<std::__1::__cxx_atomic_base_impl<unsigned long>> = {__a_value = 77}, <No data fields>}, static is_always_lock_free = <optimized out>}, <No data fields>}, <No data fields>}, description_ptr = {<std::__1::__atomic_base<char const*, false>> = {__a_ = {<std::__1::__cxx_atomic_base_impl<char const*>> = {__a_value = 0xd38b3ca \"(for thread)\"}, <No data fields>}, static is_always_lock_free = <optimized out>}, <No data fields>}, static USAGE_EVENT_NAME = <optimized out>, level = VariableContext::Thread}, untracked_memory = 160240, untracked_memory_limit = 1048576, progress_in = {read_rows = {<std::__1::__atomic_base<unsigned long, true>> = {<std::__1::__atomic_base<unsigned long, false>> = {__a_ = {<std::__1::__cxx_atomic_base_impl<unsigned long>> = {__a_value = 0}, <No data fields>}, static is_always_lock_free = <optimized out>}, <No data fields>}, <No data fields>}, read_bytes = {<std::__1::__atomic_base<unsigned long, true>> = {<std::__1::__atomic_base<unsigned long, false>> = {__a_ = {<std::__1::__cxx_atomic_base_impl<unsigned long>> = {__a_value = 0}, <No data fields>}, static is_always_lock_free = <optimized out>}, <No data fields>}, <No data fields>}, read_raw_bytes = {<std::__1::__atomic_base<unsigned long, true>> = {<std::__1::__atomic_base<unsigned long, false>> = {__a_ = {<std::__1::__cxx_atomic_base_impl<unsigned long>> = {__a_value = 0}, <No data fields>}, static is_always_lock_free = <optimized out>}, <No data fields>}, <No data fields>}, total_rows_to_read = {<std::__1::__atomic_base<unsigned long, true>> = {<std::__1::__atomic_base<unsigned long, false>> = {__a_ = {<std::__1::__cxx_atomic_base_impl<unsigned long>> = {__a_value = 0}, <No data fields>}, static is_always_lock_free = <optimized out>}, <No data fields>}, <No data fields>}, total_raw_bytes_to_read = {<std::__1::__atomic_base<unsigned long, true>> = {<std::__1::__atomic_base<unsigned long, false>> = {__a_ = {<std::__1::__cxx_atomic_base_impl<unsigned long>> = {__a_value = 0}, <No data fields>}, static is_always_lock_free = <optimized out>}, <No data fields>}, <No data fields>}, written_rows = {<std::__1::__atomic_base<unsigned long, true>> = {<std::__1::__atomic_base<unsigned long, false>> = {__a_ = {<std::__1::__cxx_atomic_base_impl<unsigned long>> = {__a_value = 0}, <No data fields>}, static is_always_lock_free = <optimized out>}, <No data fields>}, <No data fields>}, written_bytes = {<std::__1::__atomic_base<unsigned long, true>> = {<std::__1::__atomic_base<unsigned long, false>> = {__a_ = {<std::__1::__cxx_atomic_base_impl<unsigned long>> = {__a_value = 0}, <No data fields>}, static is_always_lock_free = <optimized out>}, <No data fields>}, <No data fields>}}, progress_out = {read_rows = {<std::__1::__atomic_base<unsigned long, true>> = {<std::__1::__atomic_base<unsigned long, false>> = {__a_ = {<std::__1::__cxx_atomic_base_impl<unsigned long>> = {__a_value = 0}, <No data fields>}, static is_always_lock_free = <optimized out>}, <No data fields>}, <No data fields>}, read_bytes = {<std::__1::__atomic_base<unsigned long, true>> = {<std::__1::__atomic_base<unsigned long, false>> = {__a_ = {<std::__1::__cxx_atomic_base_impl<unsigned long>> = {__a_value = 0}, <No data fields>}, static is_always_lock_free = <optimized out>}, <No data fields>}, <No data fields>}, read_raw_bytes = {<std::__1::__atomic_base<unsigned long, true>> = {<std::__1::__atomic_base<unsigned long, false>> = {__a_ = {<std::__1::__cxx_atomic_base_impl<unsigned long>> = {__a_value = 0}, <No data fields>}, static is_always_lock_free = <optimized out>}, <No data fields>}, <No data fields>}, total_rows_to_read = {<std::__1::__atomic_base<unsigned long, true>> = {<std::__1::__atomic_base<unsigned long, false>> = {__a_ = {<std::__1::__cxx_atomic_base_impl<unsigned long>> = {__a_value = 0}, <No data fields>}, static is_always_lock_free = <optimized out>}, <No data fields>}, <No data fields>}, total_raw_bytes_to_read = {<std::__1::__atomic_base<unsigned long, true>> = {<std::__1::__atomic_base<unsigned long, false>> = {__a_ = {<std::__1::__cxx_atomic_base_impl<unsigned long>> = {__a_value = 0}, <No data fields>}, static is_always_lock_free = <optimized out>}, <No data fields>}, <No data fields>}, written_rows = {<std::__1::__atomic_base<unsigned long, true>> = {<std::__1::__atomic_base<unsigned long, false>> = {__a_ = {<std::__1::__cxx_atomic_base_impl<unsigned long>> = {__a_value = 0}, <No data fields>}, static is_always_lock_free = <optimized out>}, <No data fields>}, <No data fields>}, written_bytes = {<std::__1::__atomic_base<unsigned long, true>> = {<std::__1::__atomic_base<unsigned long, false>> = {__a_ = {<std::__1::__cxx_atomic_base_impl<unsigned long>> = {__a_value = 0}, <No data fields>}, static is_always_lock_free = <optimized out>}, <No data fields>}, <No data fields>}}, deleter = {<std::__1::__function::__maybe_derive_from_unary_function<void ()>> = {<No data fields>}, <std::__1::__function::__maybe_derive_from_binary_function<void ()>> = {<No data fields>}, __f_ = {__buf_ = {__small = \"\\240\\367e#\", '\\000' <repeats 11 times>, __large = 0x2365f7a0 <DB::CurrentThread::defaultThreadDeleter()>}, __invoker_ = {__call_ = 0x23668d00 <std::__1::__function::__policy_invoker<void ()>::__call_impl<std::__1::__function::__default_alloc_func<void (*)(), void ()> >(std::__1::__function::__policy_storage const*)>}, __policy_ = 0xdf2a6f8 <std::__1::__function::__policy::__choose_policy<std::__1::__function::__default_alloc_func<void (*)(), void ()> >(std::__1::integral_constant<bool, true>)::__policy_>}}, thread_trace_context = {trace_id = {t = {items = {0, 0}}}, span_id = 0, tracestate = {<std::__1::__basic_string_common<true>> = {<No data fields>}, static __short_mask = 128, static __long_mask = 9223372036854775808, __r_ = {<std::__1::__compressed_pair_elem<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, 0, false>> = {__value_ = {{__l = {__data_ = 0x0, __size_ = 0, __cap_ = 0}, __s = {__data_ = '\\000' <repeats 22 times>, {<std::__1::__padding<char, 1>> = {<No data fields>}, __size_ = 0 '\\000'}}, __r = {__words = {0, 0, 0}}}}}, <std::__1::__compressed_pair_elem<std::__1::allocator<char>, 1, true>> = {<std::__1::allocator<char>> = {<No data fields>}, <No data fields>}, <No data fields>}, static npos = 18446744073709551615}, trace_flags = 0 '\\000'}, thread_group = {__ptr_ = 0x7f8e05b06998, __cntrl_ = 0x7f8e05b06980}, thread_state = {<std::__1::__atomic_base<int, true>> = {<std::__1::__atomic_base<int, false>> = {__a_ = {<std::__1::__cxx_atomic_base_impl<int>> = {__a_value = 1}, <No data fields>}, static is_always_lock_free = <optimized out>}, <No data fields>}, <No data fields>}, global_context = {__ptr_ = 0x7f8ee2d3d000, __cntrl_ = 0x7f8ee2c993e0}, query_context = {__ptr_ = 0x7f8cfa06c000, __cntrl_ = 0x7f8d621d57a0}, query_id = {<std::__1::__basic_string_common<true>> = {<No data fields>}, static __short_mask = 128, static __long_mask = 9223372036854775808, __r_ = {<std::__1::__compressed_pair_elem<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, 0, false>> = {__value_ = {{__l = {__data_ = 0x7f8d6e016010 \"f5b675f7-8244-46b6-b073-f806a1d80a63\", __size_ = 36, __cap_ = 9223372036854775856}, __s = {__data_ = \"\\020`\\001n\\215\\177\\000\\000$\\000\\000\\000\\000\\000\\000\\000\\060\\000\\000\\000\\000\\000\", {<std::__1::__padding<char, 1>> = {<No data fields>}, __size_ = 128 '\\200'}}, __r = {__words = {140245412700176, 36, 9223372036854775856}}}}}, <std::__1::__compressed_pair_elem<std::__1::allocator<char>, 1, true>> = {<std::__1::allocator<char>> = {<No data fields>}, <No data fields>}, <No data fields>}, static npos = 18446744073709551615}, logs_queue_ptr = {__ptr_ = 0x7f8d5f946418, __cntrl_ = 0x7f8d5f946400}, profile_queue_ptr = {__ptr_ = 0x7f8d5f5d0b58, __cntrl_ = 0x7f8d5f5d0b40}, performance_counters_finalized = false, query_start_time_nanoseconds = 1642180349621407000, query_start_time_microseconds = 1642180349621407, query_start_time = 1642180349, queries_started = 1, query_profiler_real = {__ptr_ = {<std::__1::__compressed_pair_elem<DB::QueryProfilerReal*, 0, false>> = {__value_ = 0x7f8e08e2ca80}, <std::__1::__compressed_pair_elem<std::__1::default_delete<DB::QueryProfilerReal>, 1, true>> = {<std::__1::default_delete<DB::QueryProfilerReal>> = {<No data fields>}, <No data fields>}, <No data fields>}}, query_profiler_cpu = {__ptr_ = {<std::__1::__compressed_pair_elem<DB::QueryProfilerCPU*, 0, false>> = {__value_ = 0x7f8d62be1100}, <std::__1::__compressed_pair_elem<std::__1::default_delete<DB::QueryProfilerCPU>, 1, true>> = {<std::__1::default_delete<DB::QueryProfilerCPU>> = {<No data fields>}, <No data fields>}, <No data fields>}}, log = 0x7f8ee2d39d00, last_rusage = {__ptr_ = {<std::__1::__compressed_pair_elem<DB::RUsageCounters*, 0, false>> = {__value_ = 0x7f8d61497e50}, <std::__1::__compressed_pair_elem<std::__1::default_delete<DB::RUsageCounters>, 1, true>> = {<std::__1::default_delete<DB::RUsageCounters>> = {<No data fields>}, <No data fields>}, <No data fields>}}, taskstats = {__ptr_ = {<std::__1::__compressed_pair_elem<DB::TasksStatsCounters*, 0, false>> = {__value_ = 0x7f8e1343e700}, <std::__1::__compressed_pair_elem<std::__1::default_delete<DB::TasksStatsCounters>, 1, true>> = {<std::__1::default_delete<DB::TasksStatsCounters>> = {<No data fields>}, <No data fields>}, <No data fields>}}, fatal_error_callback = {<std::__1::__function::__maybe_derive_from_unary_function<void ()>> = {<No data fields>}, <std::__1::__function::__maybe_derive_from_binary_function<void ()>> = {<No data fields>}, __f_ = {__buf_ = {__small = \"\\000Z\\375\\371\\214\\177\\000\\000\\000\\000\\000\\000\\000\\000\\000\", __large = 0x7f8cf9fd5a00}, __invoker_ = {__call_ = 0x24516ca0 <std::__1::__function::__policy_invoker<void ()>::__call_impl<std::__1::__function::__default_alloc_func<DB::TCPHandler::runImpl()::$_2, void ()> >(std::__1::__function::__policy_storage const*)>}, __policy_ = 0xdf8ce50 <std::__1::__function::__policy::__choose_policy<std::__1::__function::__default_alloc_func<DB::TCPHandler::runImpl()::$_2, void ()> >(std::__1::integral_constant<bool, true>)::__policy_>}}, query_profiler_enabled = true}\r\n2022-01-14 20:13:14         e = @0x2c6ef3e0: {<Poco::Exception> = {<std::exception> = {_vptr$exception = 0x1ecb032fc, static capacity = 32, frames = {0xcdbfdb000, 0x1ecc00000, 0x400000, 0x0, 0x0, 0x0, 0x22, 0xd0785ed, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x3, 0x0, 0x0, 0x0, 0x0, 0x0, 0x58429309, 0x0, 0x0, 0x40, 0x0, 0x9, 0x0}, size = 0}, _msg = {<std::__1::__basic_string_common<true>> = {<No data fields>}, static __short_mask = 128, static __long_mask = 9223372036854775808, __r_ = {<std::__1::__compressed_pair_elem<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, 0, false>> = {__value_ = {{__l = {__data_ = 0x142 <error: Cannot access memory at address 0x142>, __size_ = 303, __cap_ = 1}, __s = {__data_ = \"B\\001\\000\\000\\000\\000\\000\\000/\\001\\000\\000\\000\\000\\000\\000\\001\\000\\000\\000\\000\\000\", {<std::__1::__padding<char, 1>> = {<No data fields>}, __size_ = 0 '\\000'}}, __r = {__words = {322, 303, 1}}}}}, <std::__1::__compressed_pair_elem<std::__1::allocator<char>, 1, true>> = {<std::__1::allocator<char>> = {<No data fields>}, <No data fields>}, <No data fields>}, static npos = 18446744073709551615}, _pNested = 0x1, _code = 0}, remote = false}\r\n2022-01-14 20:13:14 #11 0x0000000024515505 in DB::TCPHandler::run (this=0x7f8cf9fd5a00) at ../src/Server/TCPHandler.cpp:1909\r\n2022-01-14 20:13:14         e = <error reading variable>\r\n2022-01-14 20:13:14 #12 0x0000000028723159 in Poco::Net::TCPServerConnection::start (this=0x7f8cf9fd5a00) at ../contrib/poco/Net/src/TCPServerConnection.cpp:43\r\n2022-01-14 20:13:14         exc = @0x7f8ce95d7f30: {<std::exception> = {_vptr$exception = 0x7f8cf9fd5a00, static capacity = 32, frames = {0x7f8dc46adf00, 0x7f8dc46adf00, 0x7f8e11f38d28, 0x7f8ce95d7f70, 0x2710222959d5, 0x7f8debd76700, 0x7f8debd76700, 0x7f8ce95d7fd0, 0x2896ce14 <Poco::PooledThread::run()+116>, 0x0, 0x0, 0x7f8e11f38b00, 0x7f8e11f38d28, 0x7f8ce95d7fc0, 0x161ed479 <Poco::RefCountedObject::duplicate() const+25>, 0x7f8e11f3a690, 0x7f8e11f3a680, 0x7f8debd76700, 0x7f8e11f38b00, 0x7f8ce95d7ff0, 0x289698fa <Poco::(anonymous namespace)::RunnableHolder::run()+26>, 0x7f8e11f38b38, 0x7f8e11f3c120, 0x7f8ce95d80f0, 0x289686dc <Poco::ThreadImpl::runnableEntry(void*)+220>, 0x0, 0x0, 0x0, 0x7f8e11f3c120, 0x7f8ce95d8068, 0x7f8ce95d8058, 0x7f8e11f3a680}, size = 0}, _msg = {<std::__1::__basic_string_common<true>> = {<No data fields>}, static __short_mask = 128, static __long_mask = 9223372036854775808, __r_ = {<std::__1::__compressed_pair_elem<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, 0, false>> = {__value_ = {{__l = {__data_ = 0x0, __size_ = 0, __cap_ = 0}, __s = {__data_ = '\\000' <repeats 22 times>, {<std::__1::__padding<char, 1>> = {<No data fields>}, __size_ = 0 '\\000'}}, __r = {__words = {0, 0, 0}}}}}, <std::__1::__compressed_pair_elem<std::__1::allocator<char>, 1, true>> = {<std::__1::allocator<char>> = {<No data fields>}, <No data fields>}, <No data fields>}, static npos = 18446744073709551615}, _pNested = 0x7f8e11f3a680, _code = 301173560}\r\n2022-01-14 20:13:14         exc = @0x7f8ce95d7ea0: {_vptr$exception = 0x7f8ce95d7f70, static capacity = 32, frames = {0x28723968 <Poco::Net::TCPServerDispatcher::run()+616>, 0x0, 0x7f8cf9fd5a00, 0x7f8dc46adf10, 0x7f8e0219ba00, 0x7f8dc46adf00, 0x7f8dc46adf00, 0x7f8dc46adf00, 0x7f8dc46adf00, 0x2710, 0x7f8e0218c260, 0x7f8debd76700, 0x7f8e0218c250, 0x211f38b60, 0x7f8e11f38d28, 0x7f8ce95d7f40, 0x222959d5 <Poco::FastMutex::unlock()+21>, 0x7f8cf9fd5a00, 0x7f8dc46adf00, 0x7f8dc46adf00, 0x7f8e11f38d28, 0x7f8ce95d7f70, 0x2710222959d5, 0x7f8debd76700, 0x7f8debd76700, 0x7f8ce95d7fd0, 0x2896ce14 <Poco::PooledThread::run()+116>, 0x0, 0x0, 0x7f8e11f38b00, 0x7f8e11f38d28, 0x7f8ce95d7fc0}, size = 371119225}\r\n2022-01-14 20:13:14 #13 0x0000000028723968 in Poco::Net::TCPServerDispatcher::run (this=0x7f8debd76700) at ../contrib/poco/Net/src/TCPServerDispatcher.cpp:115\r\n2022-01-14 20:13:15         pConnection = {__ptr_ = {<std::__1::__compressed_pair_elem<Poco::Net::TCPServerConnection*, 0, false>> = {__value_ = 0x7f8cf9fd5a00}, <std::__1::__compressed_pair_elem<std::__1::default_delete<Poco::Net::TCPServerConnection>, 1, true>> = {<std::__1::default_delete<Poco::Net::TCPServerConnection>> = {<No data fields>}, <No data fields>}, <No data fields>}}\r\n2022-01-14 20:13:15         pCNf = 0x7f8dc46adf00\r\n2022-01-14 20:13:15         pNf = {_ptr = 0x7f8dc46adf00}\r\n2022-01-14 20:13:15         exc = @0x7f8ce95d7f40: {<std::exception> = {_vptr$exception = 0x7f8dc46adf00, static capacity = 32, frames = {0x7f8e11f38d28, 0x7f8ce95d7f70, 0x2710222959d5, 0x7f8debd76700, 0x7f8debd76700, 0x7f8ce95d7fd0, 0x2896ce14 <Poco::PooledThread::run()+116>, 0x0, 0x0, 0x7f8e11f38b00, 0x7f8e11f38d28, 0x7f8ce95d7fc0, 0x161ed479 <Poco::RefCountedObject::duplicate() const+25>, 0x7f8e11f3a690, 0x7f8e11f3a680, 0x7f8debd76700, 0x7f8e11f38b00, 0x7f8ce95d7ff0, 0x289698fa <Poco::(anonymous namespace)::RunnableHolder::run()+26>, 0x7f8e11f38b38, 0x7f8e11f3c120, 0x7f8ce95d80f0, 0x289686dc <Poco::ThreadImpl::runnableEntry(void*)+220>, 0x0, 0x0, 0x0, 0x7f8e11f3c120, 0x7f8ce95d8068, 0x7f8ce95d8058, 0x7f8e11f3a680, 0x0, 0x0}, size = 0}, _msg = {<std::__1::__basic_string_common<true>> = {<No data fields>}, static __short_mask = 128, static __long_mask = 9223372036854775808, __r_ = {<std::__1::__compressed_pair_elem<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, 0, false>> = {__value_ = {{__l = {__data_ = 0x0, __size_ = 140248163264128, __cap_ = 140248163257144}, __s = {__data_ = \"\\000\\000\\000\\000\\000\\000\\000\\000\\200\\246\\363\\021\\216\\177\\000\\000\\070\\213\\363\\021\\216\\177\", {<std::__1::__padding<char, 1>> = {<No data fields>}, __size_ = 0 '\\000'}}, __r = {__words = {0, 140248163264128, 140248163257144}}}}}, <std::__1::__compressed_pair_elem<std::__1::allocator<char>, 1, true>> = {<std::__1::allocator<char>> = {<No data fields>}, <No data fields>}, <No data fields>}, static npos = 18446744073709551615}, _pNested = 0x5004, _code = 0}\r\n2022-01-14 20:13:15         lock = {_mutex = @0x7f8e11f38d28}\r\n2022-01-14 20:13:15         exc = @0x222959d5: {_vptr$exception = 0xccccc35d10c48348, static capacity = 32, frames = {0x48e5894855cccccc, 0x48f87d894840ec83, 0xf3ee4cabe8f87d8b, 0x9f840f00f883, 0x98e800000138bf00, 0x8948c189480a3212, 0x894801d345c6c04d, 0x480c8a5d6ebec845, 0xf3e4663be8e07d8d, 0x7d8b4800000000e9, 0xe8d231e0758d48c8, 0xe90664fee7, 0xd345c6c07d8b4800, 0x80ba0ff87fd0be00, 0xa3214cbe8288e5a, 0xc1894800000052e9, 0x4589d84d8948d089, 0x894800000015e9d4, 0x89d84d8948d089c1, 0x80e8e07d8d48d445, 0xf01d345f6f3e464, 0x9e90000000585, 0x68e8c07d8b480000, 0x6e90a3213, 0x8b48c35d40c48348, 0xcc0a32d774e8d87d, 0xcccccccccccccccc, 0xcccccccccccccccc, 0x48e5894855cccccc, 0x48f87d894820ec83, 0x48f87d8b48f07589, 0xe8f0758b48e87d89}, size = 223}\r\n2022-01-14 20:13:15         guard = {_ptr = 0x7f8debd76700}\r\n2022-01-14 20:13:15         idleTime = 10000\r\n2022-01-14 20:13:15 #14 0x000000002896ce14 in Poco::PooledThread::run (this=0x7f8e11f38b00) at ../contrib/poco/Foundation/src/ThreadPool.cpp:199\r\n2022-01-14 20:13:15         pTarget = 0x7f8debd76700\r\n2022-01-14 20:13:15         exc = @0x7f8ce95d7fc0: {<std::exception> = {_vptr$exception = 0x7f8debd76700, static capacity = 32, frames = {0x7f8e11f38b00, 0x7f8ce95d7ff0, 0x289698fa <Poco::(anonymous namespace)::RunnableHolder::run()+26>, 0x7f8e11f38b38, 0x7f8e11f3c120, 0x7f8ce95d80f0, 0x289686dc <Poco::ThreadImpl::runnableEntry(void*)+220>, 0x0, 0x0, 0x0, 0x7f8e11f3c120, 0x7f8ce95d8068, 0x7f8ce95d8058, 0x7f8e11f3a680, 0x0, 0x0, 0x0, 0x0, 0x7f8e11f3a680, 0x7f8e11f38b38, 0x5004, 0x0 <repeats 11 times>}, size = 0}, _msg = {<std::__1::__basic_string_common<true>> = {<No data fields>}, static __short_mask = 128, static __long_mask = 9223372036854775808, __r_ = {<std::__1::__compressed_pair_elem<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, 0, false>> = {__value_ = {{__l = {__data_ = 0x0, __size_ = 0, __cap_ = 0}, __s = {__data_ = '\\000' <repeats 22 times>, {<std::__1::__padding<char, 1>> = {<No data fields>}, __size_ = 0 '\\000'}}, __r = {__words = {0, 0, 0}}}}}, <std::__1::__compressed_pair_elem<std::__1::allocator<char>, 1, true>> = {<std::__1::allocator<char>> = {<No data fields>}, <No data fields>}, <No data fields>}, static npos = 18446744073709551615}, _pNested = 0x7f8e11f38b38, _code = 0}\r\n2022-01-14 20:13:15         lock = {_mutex = @0x7f8e11f38d28}\r\n2022-01-14 20:13:15         exc = @0x161ed479: {_vptr$exception = 0x55ccc35d10c48348, static capacity = 32, frames = {0x48f87d8948e58948, 0xffffffffb8f84d8b, 0x5d01e88301c10ff0, 0x55ccccccccccccc3, 0x48f87d8948e58948, 0x1b8f84d8b, 0x5d01c08301c10ff0, 0x55ccccccccccccc3, 0x4820ec8348e58948, 0x48f0758948f87d89, 0x48e8458948f8458b, 0x43840ff04539, 0x388348e8458b4800, 0x480000000c840f00, 0x44e8388b48e8458b, 0x48e8458b48000000, 0x8948098b48f04d8b, 0xc840f0038834808, 0x48e8458b48000000, 0xe900000080e8388b, 0xe8458b4800000000, 0xccccc35d20c48348, 0xcccccccccccccccc, 0x55cccccccccccccc, 0x4810ec8348e58948, 0x48f84d8b48f87d89, 0xc08308418bf04d89, 0xf00f883084189ff, 0x458b480000001d85, 0xa840f00f88348f0, 0x48f07d8b48000000, 0xe91050ff078b}, size = -2092433408}\r\n2022-01-14 20:13:15 #15 0x00000000289698fa in Poco::(anonymous namespace)::RunnableHolder::run (this=0x7f8e11f3c120) at ../contrib/poco/Foundation/src/Thread.cpp:55\r\n2022-01-14 20:13:15 No locals.\r\n2022-01-14 20:13:15 #16 0x00000000289686dc in Poco::ThreadImpl::runnableEntry (pThread=0x7f8e11f38b38) at ../contrib/poco/Foundation/src/Thread_POSIX.cpp:345\r\n2022-01-14 20:13:15         sset = {__val = {20484, 0 <repeats 15 times>}}\r\n2022-01-14 20:13:15         pThreadImpl = 0x7f8e11f38b38\r\n2022-01-14 20:13:15         pData = {_ptr = 0x7f8e11f3a680}\r\n2022-01-14 20:13:15         exc = <error reading variable>\r\n2022-01-14 20:13:15         exc = <error reading variable>\r\n2022-01-14 20:13:15 #17 0x00007f8ee3b67609 in start_thread () from /lib/x86_64-linux-gnu/libpthread.so.0\r\n2022-01-14 20:13:15 No symbol table info available.\r\n2022-01-14 20:13:15 #18 0x00007f8ee3a8e293 in clone () from /lib/x86_64-linux-gnu/libc.so.6\r\n2022-01-14 20:13:15 No symbol table info available.\r\n```\r\n\r\ncc: @KochetovNicolai ","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33651/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33651/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33645","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33645/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33645/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33645/events","html_url":"https://github.com/ClickHouse/ClickHouse/pull/33645","id":1103848715,"node_id":"PR_kwDOA5dJV84xC9im","number":33645,"title":"Turn on `optimize_functions_to_subcolumns` by default","user":{"login":"CurtizJ","id":20361854,"node_id":"MDQ6VXNlcjIwMzYxODU0","avatar_url":"https://avatars.githubusercontent.com/u/20361854?v=4","gravatar_id":"","url":"https://api.github.com/users/CurtizJ","html_url":"https://github.com/CurtizJ","followers_url":"https://api.github.com/users/CurtizJ/followers","following_url":"https://api.github.com/users/CurtizJ/following{/other_user}","gists_url":"https://api.github.com/users/CurtizJ/gists{/gist_id}","starred_url":"https://api.github.com/users/CurtizJ/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/CurtizJ/subscriptions","organizations_url":"https://api.github.com/users/CurtizJ/orgs","repos_url":"https://api.github.com/users/CurtizJ/repos","events_url":"https://api.github.com/users/CurtizJ/events{/privacy}","received_events_url":"https://api.github.com/users/CurtizJ/received_events","type":"User","site_admin":false},"labels":[{"id":1876999755,"node_id":"MDU6TGFiZWwxODc2OTk5NzU1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/pr-not-for-changelog","name":"pr-not-for-changelog","color":"007700","default":false,"description":"This PR should not be mentioned in the changelog"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2022-01-14T16:11:29Z","updated_at":"2022-01-24T22:33:41Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"draft":true,"pull_request":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/pulls/33645","html_url":"https://github.com/ClickHouse/ClickHouse/pull/33645","diff_url":"https://github.com/ClickHouse/ClickHouse/pull/33645.diff","patch_url":"https://github.com/ClickHouse/ClickHouse/pull/33645.patch","merged_at":null},"body":"Changelog category (leave one):\r\n- Not for changelog (changelog entry is not required)","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33645/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33645/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33636","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33636/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33636/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33636/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33636","id":1103690002,"node_id":"I_kwDOA5dJV85ByPkS","number":33636,"title":"ThreadFromGlobalPool: destroy of a locked mutex (double join?)","user":{"login":"tavplubix","id":14847450,"node_id":"MDQ6VXNlcjE0ODQ3NDUw","avatar_url":"https://avatars.githubusercontent.com/u/14847450?v=4","gravatar_id":"","url":"https://api.github.com/users/tavplubix","html_url":"https://github.com/tavplubix","followers_url":"https://api.github.com/users/tavplubix/followers","following_url":"https://api.github.com/users/tavplubix/following{/other_user}","gists_url":"https://api.github.com/users/tavplubix/gists{/gist_id}","starred_url":"https://api.github.com/users/tavplubix/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tavplubix/subscriptions","organizations_url":"https://api.github.com/users/tavplubix/orgs","repos_url":"https://api.github.com/users/tavplubix/repos","events_url":"https://api.github.com/users/tavplubix/events{/privacy}","received_events_url":"https://api.github.com/users/tavplubix/received_events","type":"User","site_admin":false},"labels":[{"id":1955634273,"node_id":"MDU6TGFiZWwxOTU1NjM0Mjcz","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/testing","name":"testing","color":"c9a224","default":false,"description":"Special issue with list of bugs found by CI"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2022-01-14T14:10:01Z","updated_at":"2022-01-25T16:06:31Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"https://s3.amazonaws.com/clickhouse-test-reports/0/1254225061d3dc75d0925d5db04a2e43cc8cdfcd/stress_test__thread__actions_.html\r\n\r\n```\r\n==================\r\nWARNING: ThreadSanitizer: destroy of a locked mutex (pid=502)\r\n    #0 pthread_mutex_destroy <null> (clickhouse+0xa3b0738)\r\n    #1 Poco::Event::~Event() obj-x86_64-linux-gnu/../contrib/poco/Foundation/src/Event_POSIX.cpp:96:2 (clickhouse+0x1b2f1626)\r\n    #2 std::__1::allocator<Poco::Event>::destroy(Poco::Event*) obj-x86_64-linux-gnu/../contrib/libcxx/include/memory:891:15 (clickhouse+0xa447c7d)\r\n    #3 void std::__1::allocator_traits<std::__1::allocator<Poco::Event> >::__destroy<Poco::Event>(std::__1::integral_constant<bool, true>, std::__1::allocator<Poco::Event>&, Poco::Event*) obj-x86_64-linux-gnu/../contrib/libcxx/include/__memory/allocator_traits.h:539:21 (clickhouse+0xa447c7d)\r\n    #4 void std::__1::allocator_traits<std::__1::allocator<Poco::Event> >::destroy<Poco::Event>(std::__1::allocator<Poco::Event>&, Poco::Event*) obj-x86_64-linux-gnu/../contrib/libcxx/include/__memory/allocator_traits.h:487:14 (clickhouse+0xa447c7d)\r\n    #5 std::__1::__shared_ptr_emplace<Poco::Event, std::__1::allocator<Poco::Event> >::__on_zero_shared() obj-x86_64-linux-gnu/../contrib/libcxx/include/memory:2611:9 (clickhouse+0xa447c7d)\r\n    #6 std::__1::__shared_count::__release_shared() obj-x86_64-linux-gnu/../contrib/libcxx/include/memory:2475:9 (clickhouse+0x1827da52)\r\n    #7 std::__1::__shared_weak_count::__release_shared() obj-x86_64-linux-gnu/../contrib/libcxx/include/memory:2517:27 (clickhouse+0x1827da52)\r\n    #8 std::__1::shared_ptr<Poco::Event>::~shared_ptr() obj-x86_64-linux-gnu/../contrib/libcxx/include/memory:3212:19 (clickhouse+0x1827da52)\r\n    #9 std::__1::shared_ptr<Poco::Event>::reset() obj-x86_64-linux-gnu/../contrib/libcxx/include/memory:3308:5 (clickhouse+0x1827da52)\r\n    #10 ThreadFromGlobalPool::join() obj-x86_64-linux-gnu/../src/Common/ThreadPool.h:218:15 (clickhouse+0x1827da52)\r\n    #11 DB::ParallelParsingInputFormat::finishAndWait() obj-x86_64-linux-gnu/../src/Processors/Formats/Impl/ParallelParsingInputFormat.h:275:32 (clickhouse+0x1827da52)\r\n    #12 DB::ParallelParsingInputFormat::onCancel() obj-x86_64-linux-gnu/../src/Processors/Formats/Impl/ParallelParsingInputFormat.h:139:9 (clickhouse+0x1827ce39)\r\n    #13 DB::IProcessor::cancel() obj-x86_64-linux-gnu/../src/Processors/IProcessor.h:237:9 (clickhouse+0x1817b15e)\r\n    #14 DB::ExecutingGraph::cancel() obj-x86_64-linux-gnu/../src/Processors/Executors/ExecutingGraph.cpp:363:20 (clickhouse+0x1817b15e)\r\n    #15 DB::PipelineExecutor::cancel() obj-x86_64-linux-gnu/../src/Processors/Executors/PipelineExecutor.cpp:68:12 (clickhouse+0x18173760)\r\n    #16 DB::PullingPipelineExecutor::cancel() obj-x86_64-linux-gnu/../src/Processors/Executors/PullingPipelineExecutor.cpp:89:19 (clickhouse+0x18187e28)\r\n    #17 DB::(anonymous namespace)::StorageURLSource::onCancel() obj-x86_64-linux-gnu/../src/Storages/StorageURL.cpp:150:25 (clickhouse+0x17adee4e)\r\n    #18 DB::IProcessor::cancel() obj-x86_64-linux-gnu/../src/Processors/IProcessor.h:237:9 (clickhouse+0x1817b15e)\r\n    #19 DB::ExecutingGraph::cancel() obj-x86_64-linux-gnu/../src/Processors/Executors/ExecutingGraph.cpp:363:20 (clickhouse+0x1817b15e)\r\n    #20 DB::PipelineExecutor::cancel() obj-x86_64-linux-gnu/../src/Processors/Executors/PipelineExecutor.cpp:68:12 (clickhouse+0x18173760)\r\n    #21 DB::PullingAsyncPipelineExecutor::cancel() obj-x86_64-linux-gnu/../src/Processors/Executors/PullingAsyncPipelineExecutor.cpp:180:25 (clickhouse+0x18185227)\r\n    #22 DB::TCPHandler::processOrdinaryQueryWithProcessors() obj-x86_64-linux-gnu/../src/Server/TCPHandler.cpp:689:26 (clickhouse+0x18101f06)\r\n    #23 DB::TCPHandler::runImpl() obj-x86_64-linux-gnu/../src/Server/TCPHandler.cpp:346:17 (clickhouse+0x180fb119)\r\n    #24 DB::TCPHandler::run() obj-x86_64-linux-gnu/../src/Server/TCPHandler.cpp:1909:9 (clickhouse+0x18110547)\r\n    #25 Poco::Net::TCPServerConnection::start() obj-x86_64-linux-gnu/../contrib/poco/Net/src/TCPServerConnection.cpp:43:3 (clickhouse+0x1b135082)\r\n    #26 Poco::Net::TCPServerDispatcher::run() obj-x86_64-linux-gnu/../contrib/poco/Net/src/TCPServerDispatcher.cpp:115:20 (clickhouse+0x1b1358f2)\r\n    #27 Poco::PooledThread::run() obj-x86_64-linux-gnu/../contrib/poco/Foundation/src/ThreadPool.cpp:199:14 (clickhouse+0x1b3938b5)\r\n    #28 Poco::(anonymous namespace)::RunnableHolder::run() obj-x86_64-linux-gnu/../contrib/poco/Foundation/src/Thread.cpp:55:11 (clickhouse+0x1b391a4f)\r\nThreadSanitizer: memory flush check RSS=110 LAST=110 LIMIT=46080\r\n    #29 Poco::ThreadImpl::runnableEntry(void*) obj-x86_64-linux-gnu/../contrib/poco/Foundation/src/Thread_POSIX.cpp:345:27 (clickhouse+0x1b3900c7)\r\n\r\n  and:\r\n    #0 pthread_cond_wait <null> (clickhouse+0xa3af94a)\r\n    #1 Poco::EventImpl::waitImpl() obj-x86_64-linux-gnu/../contrib/poco/Foundation/src/Event_POSIX.cpp:106:7 (clickhouse+0x1b2f1697)\r\n    #2 Poco::Event::wait() obj-x86_64-linux-gnu/../contrib/poco/Foundation/include/Poco/Event.h:97:2 (clickhouse+0x1827d9f1)\r\n    #3 ThreadFromGlobalPool::join() obj-x86_64-linux-gnu/../src/Common/ThreadPool.h:217:16 (clickhouse+0x1827d9f1)\r\n    #4 DB::ParallelParsingInputFormat::finishAndWait() obj-x86_64-linux-gnu/../src/Processors/Formats/Impl/ParallelParsingInputFormat.h:275:32 (clickhouse+0x1827d9f1)\r\n    #5 DB::ParallelParsingInputFormat::~ParallelParsingInputFormat() obj-x86_64-linux-gnu/../src/Processors/Formats/Impl/ParallelParsingInputFormat.h:107:9 (clickhouse+0x1827cf19)\r\n    #6 std::__1::allocator<DB::ParallelParsingInputFormat>::destroy(DB::ParallelParsingInputFormat*) obj-x86_64-linux-gnu/../contrib/libcxx/include/memory:891:15 (clickhouse+0x1812cdc8)\r\n    #7 void std::__1::allocator_traits<std::__1::allocator<DB::ParallelParsingInputFormat> >::__destroy<DB::ParallelParsingInputFormat>(std::__1::integral_constant<bool, true>, std::__1::allocator<DB::ParallelParsingInputFormat>&, DB::ParallelParsingInputFormat*) obj-x86_64-linux-gnu/../contrib/libcxx/include/__memory/allocator_traits.h:539:21 (clickhouse+0x1812cdc8)\r\n    #8 void std::__1::allocator_traits<std::__1::allocator<DB::ParallelParsingInputFormat> >::destroy<DB::ParallelParsingInputFormat>(std::__1::allocator<DB::ParallelParsingInputFormat>&, DB::ParallelParsingInputFormat*) obj-x86_64-linux-gnu/../contrib/libcxx/include/__memory/allocator_traits.h:487:14 (clickhouse+0x1812cdc8)\r\n    #9 std::__1::__shared_ptr_emplace<DB::ParallelParsingInputFormat, std::__1::allocator<DB::ParallelParsingInputFormat> >::__on_zero_shared() obj-x86_64-linux-gnu/../contrib/libcxx/include/memory:2611:9 (clickhouse+0x1812cdc8)\r\n    #10 std::__1::__shared_count::__release_shared() obj-x86_64-linux-gnu/../contrib/libcxx/include/memory:2475:9 (clickhouse+0x166346ba)\r\n    #11 std::__1::__shared_weak_count::__release_shared() obj-x86_64-linux-gnu/../contrib/libcxx/include/memory:2517:27 (clickhouse+0x166346ba)\r\n    #12 std::__1::shared_ptr<DB::IProcessor>::~shared_ptr() obj-x86_64-linux-gnu/../contrib/libcxx/include/memory:3212:19 (clickhouse+0x166346ba)\r\n    #13 std::__1::allocator<std::__1::shared_ptr<DB::IProcessor> >::destroy(std::__1::shared_ptr<DB::IProcessor>*) obj-x86_64-linux-gnu/../contrib/libcxx/include/memory:891:15 (clickhouse+0x166346ba)\r\n    #14 void std::__1::allocator_traits<std::__1::allocator<std::__1::shared_ptr<DB::IProcessor> > >::__destroy<std::__1::shared_ptr<DB::IProcessor> >(std::__1::integral_constant<bool, true>, std::__1::allocator<std::__1::shared_ptr<DB::IProcessor> >&, std::__1::shared_ptr<DB::IProcessor>*) obj-x86_64-linux-gnu/../contrib/libcxx/include/__memory/allocator_traits.h:539:21 (clickhouse+0x166346ba)\r\nThreadSanitizer: memory flush check RSS=32697 LAST=32691 LIMIT=46080\r\nThreadSanitizer: memory flush check RSS=32697 LAST=32691 LIMIT=46080\r\n    #15 void std::__1::allocator_traits<std::__1::allocator<std::__1::shared_ptr<DB::IProcessor> > >::destroy<std::__1::shared_ptr<DB::IProcessor> >(std::__1::allocator<std::__1::shared_ptr<DB::IProcessor> >&, std::__1::shared_ptr<DB::IProcessor>*) obj-x86_64-linux-gnu/../contrib/libcxx/include/__memory/allocator_traits.h:487:14 (clickhouse+0x166346ba)\r\n    #16 std::__1::__vector_base<std::__1::shared_ptr<DB::IProcessor>, std::__1::allocator<std::__1::shared_ptr<DB::IProcessor> > >::__destruct_at_end(std::__1::shared_ptr<DB::IProcessor>*) obj-x86_64-linux-gnu/../contrib/libcxx/include/vector:428:9 (clickhouse+0x166346ba)\r\n    #17 std::__1::__vector_base<std::__1::shared_ptr<DB::IProcessor>, std::__1::allocator<std::__1::shared_ptr<DB::IProcessor> > >::clear() obj-x86_64-linux-gnu/../contrib/libcxx/include/vector:371:29 (clickhouse+0x166346ba)\r\n    #18 std::__1::__vector_base<std::__1::shared_ptr<DB::IProcessor>, std::__1::allocator<std::__1::shared_ptr<DB::IProcessor> > >::~__vector_base() obj-x86_64-linux-gnu/../contrib/libcxx/include/vector:465:9 (clickhouse+0x166346ba)\r\n    #19 std::__1::vector<std::__1::shared_ptr<DB::IProcessor>, std::__1::allocator<std::__1::shared_ptr<DB::IProcessor> > >::~vector() obj-x86_64-linux-gnu/../contrib/libcxx/include/vector:557:5 (clickhouse+0x166346ba)\r\n    #20 DB::QueryPipeline::~QueryPipeline() obj-x86_64-linux-gnu/../src/QueryPipeline/QueryPipeline.cpp:29:31 (clickhouse+0x166346ba)\r\n    #21 DB::QueryPipeline::reset() obj-x86_64-linux-gnu/../src/QueryPipeline/QueryPipeline.cpp:535:1 (clickhouse+0x166346ba)\r\n    #22 DB::(anonymous namespace)::StorageURLSource::generate() obj-x86_64-linux-gnu/../src/Storages/StorageURL.cpp:262:27 (clickhouse+0x17adf146)\r\n    #23 DB::ISource::tryGenerate() obj-x86_64-linux-gnu/../src/Processors/ISource.cpp:79:18 (clickhouse+0x1815beb4)\r\n    #24 DB::ISource::work() obj-x86_64-linux-gnu/../src/Processors/ISource.cpp:53:26 (clickhouse+0x1815b972)\r\n    #25 DB::SourceWithProgress::work() obj-x86_64-linux-gnu/../src/Processors/Sources/SourceWithProgress.cpp:67:30 (clickhouse+0x18431449)\r\n    #26 DB::executeJob(DB::IProcessor*) obj-x86_64-linux-gnu/../src/Processors/Executors/ExecutionThreadContext.cpp:45:20 (clickhouse+0x18182bee)\r\n    #27 DB::ExecutionThreadContext::executeTask() obj-x86_64-linux-gnu/../src/Processors/Executors/ExecutionThreadContext.cpp:63:9 (clickhouse+0x18182bee)\r\n    #28 DB::PipelineExecutor::executeStepImpl(unsigned long, std::__1::atomic<bool>*) obj-x86_64-linux-gnu/../src/Processors/Executors/PipelineExecutor.cpp:213:26 (clickhouse+0x18174b40)\r\n    #29 DB::PipelineExecutor::executeSingleThread(unsigned long) obj-x86_64-linux-gnu/../src/Processors/Executors/PipelineExecutor.cpp:178:5 (clickhouse+0x18175d34)\r\n    #30 DB::PipelineExecutor::executeImpl(unsigned long)::$_1::operator()() const obj-x86_64-linux-gnu/../src/Processors/Executors/PipelineExecutor.cpp:311:21 (clickhouse+0x18175d34)\r\n    #31 decltype(std::__1::forward<DB::PipelineExecutor::executeImpl(unsigned long)::$_1&>(fp)()) std::__1::__invoke_constexpr<DB::PipelineExecutor::executeImpl(unsigned long)::$_1&>(DB::PipelineExecutor::executeImpl(unsigned long)::$_1&) obj-x86_64-linux-gnu/../contrib/libcxx/include/type_traits:3682:1 (clickhouse+0x18175d34)\r\n    #32 decltype(auto) std::__1::__apply_tuple_impl<DB::PipelineExecutor::executeImpl(unsigned long)::$_1&, std::__1::tuple<>&>(DB::PipelineExecutor::executeImpl(unsigned long)::$_1&, std::__1::tuple<>&, std::__1::__tuple_indices<>) obj-x86_64-linux-gnu/../contrib/libcxx/include/tuple:1415:1 (clickhouse+0x18175d34)\r\n    #33 decltype(auto) std::__1::apply<DB::PipelineExecutor::executeImpl(unsigned long)::$_1&, std::__1::tuple<>&>(DB::PipelineExecutor::executeImpl(unsigned long)::$_1&, std::__1::tuple<>&) obj-x86_64-linux-gnu/../contrib/libcxx/include/tuple:1424:1 (clickhouse+0x18175d34)\r\n    #34 ThreadFromGlobalPool::ThreadFromGlobalPool<DB::PipelineExecutor::executeImpl(unsigned long)::$_1>(DB::PipelineExecutor::executeImpl(unsigned long)::$_1&&)::'lambda'()::operator()() obj-x86_64-linux-gnu/../src/Common/ThreadPool.h:188:13 (clickhouse+0x18175d34)\r\n    #35 decltype(std::__1::forward<DB::PipelineExecutor::executeImpl(unsigned long)::$_1>(fp)()) std::__1::__invoke<ThreadFromGlobalPool::ThreadFromGlobalPool<DB::PipelineExecutor::executeImpl(unsigned long)::$_1>(DB::PipelineExecutor::executeImpl(unsigned long)::$_1&&)::'lambda'()&>(DB::PipelineExecutor::executeImpl(unsigned long)::$_1&&) obj-x86_64-linux-gnu/../contrib/libcxx/include/type_traits:3676:1 (clickhouse+0x18175d34)\r\n    #36 void std::__1::__invoke_void_return_wrapper<void>::__call<ThreadFromGlobalPool::ThreadFromGlobalPool<DB::PipelineExecutor::executeImpl(unsigned long)::$_1>(DB::PipelineExecutor::executeImpl(unsigned long)::$_1&&)::'lambda'()&>(ThreadFromGlobalPool::ThreadFromGlobalPool<DB::PipelineExecutor::executeImpl(unsigned long)::$_1>(DB::PipelineExecutor::executeImpl(unsigned long)::$_1&&)::'lambda'()&) obj-x86_64-linux-gnu/../contrib/libcxx/include/__functional_base:348:9 (clickhouse+0x18175d34)\r\n    #37 std::__1::__function::__default_alloc_func<ThreadFromGlobalPool::ThreadFromGlobalPool<DB::PipelineExecutor::executeImpl(unsigned long)::$_1>(DB::PipelineExecutor::executeImpl(unsigned long)::$_1&&)::'lambda'(), void ()>::operator()() obj-x86_64-linux-gnu/../contrib/libcxx/include/functional:1608:12 (clickhouse+0x18175d34)\r\n    #38 void std::__1::__function::__policy_invoker<void ()>::__call_impl<std::__1::__function::__default_alloc_func<ThreadFromGlobalPool::ThreadFromGlobalPool<DB::PipelineExecutor::executeImpl(unsigned long)::$_1>(DB::PipelineExecutor::executeImpl(unsigned long)::$_1&&)::'lambda'(), void ()> >(std::__1::__function::__policy_storage const*) obj-x86_64-linux-gnu/../contrib/libcxx/include/functional:2089:16 (clickhouse+0x18175d34)\r\n    #39 std::__1::__function::__policy_func<void ()>::operator()() const obj-x86_64-linux-gnu/../contrib/libcxx/include/functional:2221:16 (clickhouse+0xa49610d)\r\n    #40 std::__1::function<void ()>::operator()() const obj-x86_64-linux-gnu/../contrib/libcxx/include/functional:2560:12 (clickhouse+0xa49610d)\r\n    #41 ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) obj-x86_64-linux-gnu/../src/Common/ThreadPool.cpp:274:17 (clickhouse+0xa49610d)\r\n    #42 void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()::operator()() const obj-x86_64-linux-gnu/../src/Common/ThreadPool.cpp:139:73 (clickhouse+0xa4998d0)\r\n    #43 decltype(std::__1::forward<void>(fp)()) std::__1::__invoke<void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>(void&&) obj-x86_64-linux-gnu/../contrib/libcxx/include/type_traits:3676:1 (clickhouse+0xa4998d0)\r\n    #44 void std::__1::__thread_execute<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>(std::__1::tuple<void, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>&, std::__1::__tuple_indices<>) obj-x86_64-linux-gnu/../contrib/libcxx/include/thread:280:5 (clickhouse+0xa4998d0)\r\n    #45 void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()> >(void*) obj-x86_64-linux-gnu/../contrib/libcxx/include/thread:291:5 (clickhouse+0xa4998d0)\r\n\r\n  Location is heap block of size 120 at 0x7b200043c200 allocated by thread T566:\r\n    #0 operator new(unsigned long) <null> (clickhouse+0xa423b98)\r\n    #1 void* std::__1::__libcpp_operator_new<unsigned long>(unsigned long) obj-x86_64-linux-gnu/../contrib/libcxx/include/new:235:10 (clickhouse+0x1827c973)\r\n    #2 std::__1::__libcpp_allocate(unsigned long, unsigned long) obj-x86_64-linux-gnu/../contrib/libcxx/include/new:261:10 (clickhouse+0x1827c973)\r\n    #3 std::__1::allocator<std::__1::__shared_ptr_emplace<Poco::Event, std::__1::allocator<Poco::Event> > >::allocate(unsigned long) obj-x86_64-linux-gnu/../contrib/libcxx/include/memory:840:38 (clickhouse+0x1827c973)\r\n    #4 std::__1::allocator_traits<std::__1::allocator<std::__1::__shared_ptr_emplace<Poco::Event, std::__1::allocator<Poco::Event> > > >::allocate(std::__1::allocator<std::__1::__shared_ptr_emplace<Poco::Event, std::__1::allocator<Poco::Event> > >&, unsigned long) obj-x86_64-linux-gnu/../contrib/libcxx/include/__memory/allocator_traits.h:468:21 (clickhouse+0x1827c973)\r\n    #5 std::__1::__allocation_guard<std::__1::allocator<std::__1::__shared_ptr_emplace<Poco::Event, std::__1::allocator<Poco::Event> > > >::__allocation_guard<std::__1::allocator<Poco::Event> >(std::__1::allocator<Poco::Event>, unsigned long) obj-x86_64-linux-gnu/../contrib/libcxx/include/__memory/utilities.h:56:18 (clickhouse+0x1827c973)\r\n    #6 std::__1::shared_ptr<Poco::Event> std::__1::allocate_shared<Poco::Event, std::__1::allocator<Poco::Event>, void>(std::__1::allocator<Poco::Event> const&) obj-x86_64-linux-gnu/../contrib/libcxx/include/memory:3359:48 (clickhouse+0x1827c973)\r\n    #7 std::__1::shared_ptr<Poco::Event> std::__1::make_shared<Poco::Event, void>() obj-x86_64-linux-gnu/../contrib/libcxx/include/memory:3369:12 (clickhouse+0x1827c973)\r\n    #8 ThreadFromGlobalPool::ThreadFromGlobalPool<void (DB::ParallelParsingInputFormat::*)(std::__1::shared_ptr<DB::ThreadGroupStatus>), DB::ParallelParsingInputFormat*, std::__1::shared_ptr<DB::ThreadGroupStatus> >(void (DB::ParallelParsingInputFormat::*&&)(std::__1::shared_ptr<DB::ThreadGroupStatus>), DB::ParallelParsingInputFormat*&&, std::__1::shared_ptr<DB::ThreadGroupStatus>&&) obj-x86_64-linux-gnu/../src/Common/ThreadPool.h:165:17 (clickhouse+0x1827c973)\r\n    #9 DB::ParallelParsingInputFormat::generate() obj-x86_64-linux-gnu/../src/Processors/Formats/Impl/ParallelParsingInputFormat.cpp:153:30 (clickhouse+0x1827b36b)\r\n    #10 DB::ISource::tryGenerate() obj-x86_64-linux-gnu/../src/Processors/ISource.cpp:79:18 (clickhouse+0x1815beb4)\r\n    #11 DB::ISource::work() obj-x86_64-linux-gnu/../src/Processors/ISource.cpp:53:26 (clickhouse+0x1815b972)\r\n    #12 DB::executeJob(DB::IProcessor*) obj-x86_64-linux-gnu/../src/Processors/Executors/ExecutionThreadContext.cpp:45:20 (clickhouse+0x18182bee)\r\nThreadSanitizer: memory flush check RSS=110 LAST=110 LIMIT=46080\r\n    #13 DB::ExecutionThreadContext::executeTask() obj-x86_64-linux-gnu/../src/Processors/Executors/ExecutionThreadContext.cpp:63:9 (clickhouse+0x18182bee)\r\n    #14 DB::PipelineExecutor::executeStepImpl(unsigned long, std::__1::atomic<bool>*) obj-x86_64-linux-gnu/../src/Processors/Executors/PipelineExecutor.cpp:213:26 (clickhouse+0x18174b40)\r\n    #15 DB::PipelineExecutor::executeStep(std::__1::atomic<bool>*) obj-x86_64-linux-gnu/../src/Processors/Executors/PipelineExecutor.cpp:115:5 (clickhouse+0x181744e3)\r\n    #16 DB::PullingPipelineExecutor::pull(DB::Chunk&) obj-x86_64-linux-gnu/../src/Processors/Executors/PullingPipelineExecutor.cpp:50:20 (clickhouse+0x18187f02)\r\n    #17 DB::(anonymous namespace)::StorageURLSource::generate() obj-x86_64-linux-gnu/../src/Storages/StorageURL.cpp:259:29 (clickhouse+0x17adf094)\r\n    #18 DB::ISource::tryGenerate() obj-x86_64-linux-gnu/../src/Processors/ISource.cpp:79:18 (clickhouse+0x1815beb4)\r\n    #19 DB::ISource::work() obj-x86_64-linux-gnu/../src/Processors/ISource.cpp:53:26 (clickhouse+0x1815b972)\r\n    #20 DB::SourceWithProgress::work() obj-x86_64-linux-gnu/../src/Processors/Sources/SourceWithProgress.cpp:67:30 (clickhouse+0x18431449)\r\n    #21 DB::executeJob(DB::IProcessor*) obj-x86_64-linux-gnu/../src/Processors/Executors/ExecutionThreadContext.cpp:45:20 (clickhouse+0x18182bee)\r\n    #22 DB::ExecutionThreadContext::executeTask() obj-x86_64-linux-gnu/../src/Processors/Executors/ExecutionThreadContext.cpp:63:9 (clickhouse+0x18182bee)\r\n    #23 DB::PipelineExecutor::executeStepImpl(unsigned long, std::__1::atomic<bool>*) obj-x86_64-linux-gnu/../src/Processors/Executors/PipelineExecutor.cpp:213:26 (clickhouse+0x18174b40)\r\n    #24 DB::PipelineExecutor::executeSingleThread(unsigned long) obj-x86_64-linux-gnu/../src/Processors/Executors/PipelineExecutor.cpp:178:5 (clickhouse+0x18175d34)\r\n    #25 DB::PipelineExecutor::executeImpl(unsigned long)::$_1::operator()() const obj-x86_64-linux-gnu/../src/Processors/Executors/PipelineExecutor.cpp:311:21 (clickhouse+0x18175d34)\r\n    #26 decltype(std::__1::forward<DB::PipelineExecutor::executeImpl(unsigned long)::$_1&>(fp)()) std::__1::__invoke_constexpr<DB::PipelineExecutor::executeImpl(unsigned long)::$_1&>(DB::PipelineExecutor::executeImpl(unsigned long)::$_1&) obj-x86_64-linux-gnu/../contrib/libcxx/include/type_traits:3682:1 (clickhouse+0x18175d34)\r\n    #27 decltype(auto) std::__1::__apply_tuple_impl<DB::PipelineExecutor::executeImpl(unsigned long)::$_1&, std::__1::tuple<>&>(DB::PipelineExecutor::executeImpl(unsigned long)::$_1&, std::__1::tuple<>&, std::__1::__tuple_indices<>) obj-x86_64-linux-gnu/../contrib/libcxx/include/tuple:1415:1 (clickhouse+0x18175d34)\r\n    #28 decltype(auto) std::__1::apply<DB::PipelineExecutor::executeImpl(unsigned long)::$_1&, std::__1::tuple<>&>(DB::PipelineExecutor::executeImpl(unsigned long)::$_1&, std::__1::tuple<>&) obj-x86_64-linux-gnu/../contrib/libcxx/include/tuple:1424:1 (clickhouse+0x18175d34)\r\n    #29 ThreadFromGlobalPool::ThreadFromGlobalPool<DB::PipelineExecutor::executeImpl(unsigned long)::$_1>(DB::PipelineExecutor::executeImpl(unsigned long)::$_1&&)::'lambda'()::operator()() obj-x86_64-linux-gnu/../src/Common/ThreadPool.h:188:13 (clickhouse+0x18175d34)\r\n    #30 decltype(std::__1::forward<DB::PipelineExecutor::executeImpl(unsigned long)::$_1>(fp)()) std::__1::__invoke<ThreadFromGlobalPool::ThreadFromGlobalPool<DB::PipelineExecutor::executeImpl(unsigned long)::$_1>(DB::PipelineExecutor::executeImpl(unsigned long)::$_1&&)::'lambda'()&>(DB::PipelineExecutor::executeImpl(unsigned long)::$_1&&) obj-x86_64-linux-gnu/../contrib/libcxx/include/type_traits:3676:1 (clickhouse+0x18175d34)\r\nThreadSanitizer: memory flush check RSS=32723 LAST=32697 LIMIT=46080\r\n    #31 void std::__1::__invoke_void_return_wrapper<void>::__call<ThreadFromGlobalPool::ThreadFromGlobalPool<DB::PipelineExecutor::executeImpl(unsigned long)::$_1>(DB::PipelineExecutor::executeImpl(unsigned long)::$_1&&)::'lambda'()&>(ThreadFromGlobalPool::ThreadFromGlobalPool<DB::PipelineExecutor::executeImpl(unsigned long)::$_1>(DB::PipelineExecutor::executeImpl(unsigned long)::$_1&&)::'lambda'()&) obj-x86_64-linux-gnu/../contrib/libcxx/include/__functional_base:348:9 (clickhouse+0x18175d34)\r\nThreadSanitizer: memory flush check RSS=32723 LAST=32697 LIMIT=46080\r\n    #32 std::__1::__function::__default_alloc_func<ThreadFromGlobalPool::ThreadFromGlobalPool<DB::PipelineExecutor::executeImpl(unsigned long)::$_1>(DB::PipelineExecutor::executeImpl(unsigned long)::$_1&&)::'lambda'(), void ()>::operator()() obj-x86_64-linux-gnu/../contrib/libcxx/include/functional:1608:12 (clickhouse+0x18175d34)\r\n    #33 void std::__1::__function::__policy_invoker<void ()>::__call_impl<std::__1::__function::__default_alloc_func<ThreadFromGlobalPool::ThreadFromGlobalPool<DB::PipelineExecutor::executeImpl(unsigned long)::$_1>(DB::PipelineExecutor::executeImpl(unsigned long)::$_1&&)::'lambda'(), void ()> >(std::__1::__function::__policy_storage const*) obj-x86_64-linux-gnu/../contrib/libcxx/include/functional:2089:16 (clickhouse+0x18175d34)\r\n    #34 std::__1::__function::__policy_func<void ()>::operator()() const obj-x86_64-linux-gnu/../contrib/libcxx/include/functional:2221:16 (clickhouse+0xa49610d)\r\n    #35 std::__1::function<void ()>::operator()() const obj-x86_64-linux-gnu/../contrib/libcxx/include/functional:2560:12 (clickhouse+0xa49610d)\r\n    #36 ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) obj-x86_64-linux-gnu/../src/Common/ThreadPool.cpp:274:17 (clickhouse+0xa49610d)\r\n    #37 void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()::operator()() const obj-x86_64-linux-gnu/../src/Common/ThreadPool.cpp:139:73 (clickhouse+0xa4998d0)\r\n    #38 decltype(std::__1::forward<void>(fp)()) std::__1::__invoke<void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>(void&&) obj-x86_64-linux-gnu/../contrib/libcxx/include/type_traits:3676:1 (clickhouse+0xa4998d0)\r\n    #39 void std::__1::__thread_execute<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>(std::__1::tuple<void, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>&, std::__1::__tuple_indices<>) obj-x86_64-linux-gnu/../contrib/libcxx/include/thread:280:5 (clickhouse+0xa4998d0)\r\n    #40 void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()> >(void*) obj-x86_64-linux-gnu/../contrib/libcxx/include/thread:291:5 (clickhouse+0xa4998d0)\r\n\r\n  Mutex M355919747935879712 is already destroyed.\r\n\r\n  Thread T566 'QueryPipelineEx' (tid=37832, running) created by thread T565 at:\r\n    #0 pthread_create <null> (clickhouse+0xa3aee5d)\r\n    #1 std::__1::__libcpp_thread_create(unsigned long*, void* (*)(void*), void*) obj-x86_64-linux-gnu/../contrib/libcxx/include/__threading_support:509:10 (clickhouse+0xa499346)\r\n    #2 std::__1::thread::thread<void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'(), void>(void&&) obj-x86_64-linux-gnu/../contrib/libcxx/include/thread:307:16 (clickhouse+0xa499346)\r\n    #3 void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>) obj-x86_64-linux-gnu/../src/Common/ThreadPool.cpp:139:35 (clickhouse+0xa494774)\r\n    #4 ThreadPoolImpl<std::__1::thread>::scheduleOrThrow(std::__1::function<void ()>, int, unsigned long) obj-x86_64-linux-gnu/../src/Common/ThreadPool.cpp:171:5 (clickhouse+0xa4950a7)\r\n    #5 ThreadFromGlobalPool::ThreadFromGlobalPool<DB::PipelineExecutor::executeImpl(unsigned long)::$_1>(DB::PipelineExecutor::executeImpl(unsigned long)::$_1&&) obj-x86_64-linux-gnu/../src/Common/ThreadPool.h:169:38 (clickhouse+0x181759a7)\r\n    #6 void std::__1::allocator<ThreadFromGlobalPool>::construct<ThreadFromGlobalPool, DB::PipelineExecutor::executeImpl(unsigned long)::$_1>(ThreadFromGlobalPool*, DB::PipelineExecutor::executeImpl(unsigned long)::$_1&&) obj-x86_64-linux-gnu/../contrib/libcxx/include/memory:886:28 (clickhouse+0x181759a7)\r\n    #7 void std::__1::allocator_traits<std::__1::allocator<ThreadFromGlobalPool> >::__construct<ThreadFromGlobalPool, DB::PipelineExecutor::executeImpl(unsigned long)::$_1>(std::__1::integral_constant<bool, true>, std::__1::allocator<ThreadFromGlobalPool>&, ThreadFromGlobalPool*, DB::PipelineExecutor::executeImpl(unsigned long)::$_1&&) obj-x86_64-linux-gnu/../contrib/libcxx/include/__memory/allocator_traits.h:519:21 (clickhouse+0x181759a7)\r\n    #8 void std::__1::allocator_traits<std::__1::allocator<ThreadFromGlobalPool> >::construct<ThreadFromGlobalPool, DB::PipelineExecutor::executeImpl(unsigned long)::$_1>(std::__1::allocator<ThreadFromGlobalPool>&, ThreadFromGlobalPool*, DB::PipelineExecutor::executeImpl(unsigned long)::$_1&&) obj-x86_64-linux-gnu/../contrib/libcxx/include/__memory/allocator_traits.h:481:14 (clickhouse+0x181759a7)\r\n    #9 void std::__1::vector<ThreadFromGlobalPool, std::__1::allocator<ThreadFromGlobalPool> >::__construct_one_at_end<DB::PipelineExecutor::executeImpl(unsigned long)::$_1>(DB::PipelineExecutor::executeImpl(unsigned long)::$_1&&) obj-x86_64-linux-gnu/../contrib/libcxx/include/vector:926:5 (clickhouse+0x18173b64)\r\n    #10 ThreadFromGlobalPool& std::__1::vector<ThreadFromGlobalPool, std::__1::allocator<ThreadFromGlobalPool> >::emplace_back<DB::PipelineExecutor::executeImpl(unsigned long)::$_1>(DB::PipelineExecutor::executeImpl(unsigned long)::$_1&&) obj-x86_64-linux-gnu/../contrib/libcxx/include/vector:1684:9 (clickhouse+0x18173b64)\r\n    #11 DB::PipelineExecutor::executeImpl(unsigned long) obj-x86_64-linux-gnu/../src/Processors/Executors/PipelineExecutor.cpp:295:21 (clickhouse+0x18173b64)\r\n    #12 DB::PipelineExecutor::execute(unsigned long) obj-x86_64-linux-gnu/../src/Processors/Executors/PipelineExecutor.cpp:84:9 (clickhouse+0x18173858)\r\n    #13 DB::threadFunction(DB::PullingAsyncPipelineExecutor::Data&, std::__1::shared_ptr<DB::ThreadGroupStatus>, unsigned long) obj-x86_64-linux-gnu/../src/Processors/Executors/PullingAsyncPipelineExecutor.cpp:85:24 (clickhouse+0x18186d44)\r\n    #14 DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0::operator()() const obj-x86_64-linux-gnu/../src/Processors/Executors/PullingAsyncPipelineExecutor.cpp:112:13 (clickhouse+0x18186d44)\r\n    #15 decltype(std::__1::forward<DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&>(fp)()) std::__1::__invoke_constexpr<DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&>(DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&) obj-x86_64-linux-gnu/../contrib/libcxx/include/type_traits:3682:1 (clickhouse+0x18186d44)\r\n    #16 decltype(auto) std::__1::__apply_tuple_impl<DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&, std::__1::tuple<>&>(DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&, std::__1::tuple<>&, std::__1::__tuple_indices<>) obj-x86_64-linux-gnu/../contrib/libcxx/include/tuple:1415:1 (clickhouse+0x18186d44)\r\n    #17 decltype(auto) std::__1::apply<DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&, std::__1::tuple<>&>(DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&, std::__1::tuple<>&) obj-x86_64-linux-gnu/../contrib/libcxx/include/tuple:1424:1 (clickhouse+0x18186d44)\r\n    #18 ThreadFromGlobalPool::ThreadFromGlobalPool<DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0>(DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&&)::'lambda'()::operator()() obj-x86_64-linux-gnu/../src/Common/ThreadPool.h:188:13 (clickhouse+0x18186d44)\r\n    #19 decltype(std::__1::forward<DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0>(fp)()) std::__1::__invoke<ThreadFromGlobalPool::ThreadFromGlobalPool<DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0>(DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&&)::'lambda'()&>(DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&&) obj-x86_64-linux-gnu/../contrib/libcxx/include/type_traits:3676:1 (clickhouse+0x18186d44)\r\n    #20 void std::__1::__invoke_void_return_wrapper<void>::__call<ThreadFromGlobalPool::ThreadFromGlobalPool<DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0>(DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&&)::'lambda'()&>(ThreadFromGlobalPool::ThreadFromGlobalPool<DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0>(DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&&)::'lambda'()&) obj-x86_64-linux-gnu/../contrib/libcxx/include/__functional_base:348:9 (clickhouse+0x18186d44)\r\n    #21 std::__1::__function::__default_alloc_func<ThreadFromGlobalPool::ThreadFromGlobalPool<DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0>(DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&&)::'lambda'(), void ()>::operator()() obj-x86_64-linux-gnu/../contrib/libcxx/include/functional:1608:12 (clickhouse+0x18186d44)\r\n    #22 void std::__1::__function::__policy_invoker<void ()>::__call_impl<std::__1::__function::__default_alloc_func<ThreadFromGlobalPool::ThreadFromGlobalPool<DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0>(DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&&)::'lambda'(), void ()> >(std::__1::__function::__policy_storage const*) obj-x86_64-linux-gnu/../contrib/libcxx/include/functional:2089:16 (clickhouse+0x18186d44)\r\n    #23 std::__1::__function::__policy_func<void ()>::operator()() const obj-x86_64-linux-gnu/../contrib/libcxx/include/functional:2221:16 (clickhouse+0xa49610d)\r\n    #24 std::__1::function<void ()>::operator()() const obj-x86_64-linux-gnu/../contrib/libcxx/include/functional:2560:12 (clickhouse+0xa49610d)\r\n    #25 ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) obj-x86_64-linux-gnu/../src/Common/ThreadPool.cpp:274:17 (clickhouse+0xa49610d)\r\n    #26 void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()::operator()() const obj-x86_64-linux-gnu/../src/Common/ThreadPool.cpp:139:73 (clickhouse+0xa4998d0)\r\n    #27 decltype(std::__1::forward<void>(fp)()) std::__1::__invoke<void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>(void&&) obj-x86_64-linux-gnu/../contrib/libcxx/include/type_traits:3676:1 (clickhouse+0xa4998d0)\r\n    #28 void std::__1::__thread_execute<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>(std::__1::tuple<void, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>&, std::__1::__tuple_indices<>) obj-x86_64-linux-gnu/../contrib/libcxx/include/thread:280:5 (clickhouse+0xa4998d0)\r\n    #29 void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()> >(void*) obj-x86_64-linux-gnu/../contrib/libcxx/include/thread:291:5 (clickhouse+0xa4998d0)\r\n\r\nSUMMARY: ThreadSanitizer: destroy of a locked mutex (/usr/bin/clickhouse+0xa3b0738) in pthread_mutex_destroy\r\n==================\r\n```","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33636/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33636/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33632","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33632/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33632/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33632/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33632","id":1103638226,"node_id":"I_kwDOA5dJV85ByC7S","number":33632,"title":"ROLLUP on constant column doesn't produce subtotal row","user":{"login":"adrian17","id":4729533,"node_id":"MDQ6VXNlcjQ3Mjk1MzM=","avatar_url":"https://avatars.githubusercontent.com/u/4729533?v=4","gravatar_id":"","url":"https://api.github.com/users/adrian17","html_url":"https://github.com/adrian17","followers_url":"https://api.github.com/users/adrian17/followers","following_url":"https://api.github.com/users/adrian17/following{/other_user}","gists_url":"https://api.github.com/users/adrian17/gists{/gist_id}","starred_url":"https://api.github.com/users/adrian17/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/adrian17/subscriptions","organizations_url":"https://api.github.com/users/adrian17/orgs","repos_url":"https://api.github.com/users/adrian17/repos","events_url":"https://api.github.com/users/adrian17/events{/privacy}","received_events_url":"https://api.github.com/users/adrian17/received_events","type":"User","site_admin":false},"labels":[{"id":1575085465,"node_id":"MDU6TGFiZWwxNTc1MDg1NDY1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/unexpected%20behaviour","name":"unexpected behaviour","color":"e088ca","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2022-01-14T13:26:26Z","updated_at":"2022-01-17T04:39:58Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Tested on 21.12.3.32 .\r\n\r\nQuery:\r\n```sql\r\nselect key, sum(value) as result from (select 1 as key, 1 as value) group by key with rollup;\r\nkey\tresult\r\n1\t1\r\n0\t1\r\n\r\n\r\nselect 1 as key, sum(value) as result from (select 1 as value) group by key with rollup;\r\nkey\tresult\r\n1\t1\r\n```\r\nI would have expected both queries to produce the same result (the former, with the subtotal).\r\n\r\nFor comparison, MySQL produces the same result for both:\r\n```sql\r\nselect mykey, sum(value) as result from (select 1 as mykey, 1 as value) as subquery group by mykey with rollup;\r\n|  mykey | result |\r\n|--------|--------|\r\n|      1 |      1 |\r\n| (null) |      1 |\r\n        \r\n\r\nselect 1 as mykey, sum(value) as result from (select 1 as value) as subquery group by mykey with rollup;\r\n|  mykey | result |\r\n|--------|--------|\r\n|      1 |      1 |\r\n| (null) |      1 |\r\n```\r\nAnd postgres:\r\n\r\n```sql\r\nselect mykey, sum(value) as result from (select 1 as mykey, 1 as value) as subquery group by rollup(mykey);\r\n|  mykey | result |\r\n|--------|--------|\r\n|      1 |      1 |\r\n| (null) |      1 |\r\n\r\nselect 1 as mykey, sum(value) as result from (select 1 as value) as subquery group by rollup(mykey);\r\n|  mykey | result |\r\n|--------|--------|\r\n|      1 |      1 |\r\n| (null) |      1 |\r\n```\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33632/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33632/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33631","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33631/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33631/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33631/events","html_url":"https://github.com/ClickHouse/ClickHouse/pull/33631","id":1103635772,"node_id":"PR_kwDOA5dJV84xCPCn","number":33631,"title":"Grouping sets fix","user":{"login":"novikd","id":10158699,"node_id":"MDQ6VXNlcjEwMTU4Njk5","avatar_url":"https://avatars.githubusercontent.com/u/10158699?v=4","gravatar_id":"","url":"https://api.github.com/users/novikd","html_url":"https://github.com/novikd","followers_url":"https://api.github.com/users/novikd/followers","following_url":"https://api.github.com/users/novikd/following{/other_user}","gists_url":"https://api.github.com/users/novikd/gists{/gist_id}","starred_url":"https://api.github.com/users/novikd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/novikd/subscriptions","organizations_url":"https://api.github.com/users/novikd/orgs","repos_url":"https://api.github.com/users/novikd/repos","events_url":"https://api.github.com/users/novikd/events{/privacy}","received_events_url":"https://api.github.com/users/novikd/received_events","type":"User","site_admin":false},"labels":[{"id":1876999755,"node_id":"MDU6TGFiZWwxODc2OTk5NzU1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/pr-not-for-changelog","name":"pr-not-for-changelog","color":"007700","default":false,"description":"This PR should not be mentioned in the changelog"}],"state":"open","locked":false,"assignee":{"login":"kitaisreal","id":22458333,"node_id":"MDQ6VXNlcjIyNDU4MzMz","avatar_url":"https://avatars.githubusercontent.com/u/22458333?v=4","gravatar_id":"","url":"https://api.github.com/users/kitaisreal","html_url":"https://github.com/kitaisreal","followers_url":"https://api.github.com/users/kitaisreal/followers","following_url":"https://api.github.com/users/kitaisreal/following{/other_user}","gists_url":"https://api.github.com/users/kitaisreal/gists{/gist_id}","starred_url":"https://api.github.com/users/kitaisreal/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kitaisreal/subscriptions","organizations_url":"https://api.github.com/users/kitaisreal/orgs","repos_url":"https://api.github.com/users/kitaisreal/repos","events_url":"https://api.github.com/users/kitaisreal/events{/privacy}","received_events_url":"https://api.github.com/users/kitaisreal/received_events","type":"User","site_admin":false},"assignees":[{"login":"kitaisreal","id":22458333,"node_id":"MDQ6VXNlcjIyNDU4MzMz","avatar_url":"https://avatars.githubusercontent.com/u/22458333?v=4","gravatar_id":"","url":"https://api.github.com/users/kitaisreal","html_url":"https://github.com/kitaisreal","followers_url":"https://api.github.com/users/kitaisreal/followers","following_url":"https://api.github.com/users/kitaisreal/following{/other_user}","gists_url":"https://api.github.com/users/kitaisreal/gists{/gist_id}","starred_url":"https://api.github.com/users/kitaisreal/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kitaisreal/subscriptions","organizations_url":"https://api.github.com/users/kitaisreal/orgs","repos_url":"https://api.github.com/users/kitaisreal/repos","events_url":"https://api.github.com/users/kitaisreal/events{/privacy}","received_events_url":"https://api.github.com/users/kitaisreal/received_events","type":"User","site_admin":false}],"milestone":null,"comments":3,"created_at":"2022-01-14T13:24:23Z","updated_at":"2022-01-28T15:35:17Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/pulls/33631","html_url":"https://github.com/ClickHouse/ClickHouse/pull/33631","diff_url":"https://github.com/ClickHouse/ClickHouse/pull/33631.diff","patch_url":"https://github.com/ClickHouse/ClickHouse/pull/33631.patch","merged_at":null},"body":"Changelog category (leave one):\r\n\r\n- Not for changelog (changelog entry is not required)\r\n\r\nDetailed description / Documentation draft:\r\n\r\nFollow up after #33186. Fixes possible crash during execution of GROUPING SETS.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33631/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33631/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33630","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33630/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33630/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33630/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33630","id":1103616799,"node_id":"I_kwDOA5dJV85Bx9sf","number":33630,"title":"Provide a new setting to control `X-ClickHouse-Summary` header","user":{"login":"FrankChen021","id":6525742,"node_id":"MDQ6VXNlcjY1MjU3NDI=","avatar_url":"https://avatars.githubusercontent.com/u/6525742?v=4","gravatar_id":"","url":"https://api.github.com/users/FrankChen021","html_url":"https://github.com/FrankChen021","followers_url":"https://api.github.com/users/FrankChen021/followers","following_url":"https://api.github.com/users/FrankChen021/following{/other_user}","gists_url":"https://api.github.com/users/FrankChen021/gists{/gist_id}","starred_url":"https://api.github.com/users/FrankChen021/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/FrankChen021/subscriptions","organizations_url":"https://api.github.com/users/FrankChen021/orgs","repos_url":"https://api.github.com/users/FrankChen021/repos","events_url":"https://api.github.com/users/FrankChen021/events{/privacy}","received_events_url":"https://api.github.com/users/FrankChen021/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-01-14T13:08:54Z","updated_at":"2022-01-14T13:08:54Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"**Use case**\r\n\r\nWe have multiple large clusters, and we have some reverse-proxy servers to proxy all client requests to ClickHouse clusters via HTTP. We also collect some metrics from these proxy servers. among those metrics, the query level metrics, which is stored in the `X-ClickHouse-Summary` header, are also collected.\r\n\r\nTo ask ClickHouse nodes put correct values in `X-ClickHouse-Summary`, we need to put `send_progress_in_http_headers=1` on the request url. But this switch also asks ClickHouse to send `X-ClickHouse-Progress` header to the client, which is obviously no use for the proxy servers and the client.  \r\n\r\nThe progress header is sent to client at a default 100ms interval. If there's time-consuming query, there will be lots of such header in the HTTP response, which causes an extra-large HTTP header. Many proxy servers have size limitation on the HTTP header, for example 8KiB by default on some netty servers, such size limitation will lead to a failure of proxying.\r\n\r\nCurrently there's no way to disable this progress header while enabling the summary header at the same time unless by setting `http_headers_progress_interval_ms` to a very large value.  \r\n\r\nIn this case, we only want ClickHouse nodes return `X-ClickHouse-Summary` header, so any changes on the setting of the progress seems very strange.\r\n\r\n**Describe the solution you'd like**\r\n\r\nThis proposal here is to define an independent setting, for example `send_summary_in_http_headers`, which has nothing to do with `send_progress_in_http_headers`, although internally they may share same progress callback.\r\n\r\nBy defult, this new setting is disabled to make it compatible with current behaviour.\r\n\r\n\r\nIf the proposal is OK, I will open a PR.\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33630/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33630/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33615","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33615/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33615/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33615/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33615","id":1102437522,"node_id":"I_kwDOA5dJV85BtdyS","number":33615,"title":"PROJECTION lalala (SELECT DISTINCT key_a ORDER BY key_a)","user":{"login":"UnamedRus","id":9449405,"node_id":"MDQ6VXNlcjk0NDk0MDU=","avatar_url":"https://avatars.githubusercontent.com/u/9449405?v=4","gravatar_id":"","url":"https://api.github.com/users/UnamedRus","html_url":"https://github.com/UnamedRus","followers_url":"https://api.github.com/users/UnamedRus/followers","following_url":"https://api.github.com/users/UnamedRus/following{/other_user}","gists_url":"https://api.github.com/users/UnamedRus/gists{/gist_id}","starred_url":"https://api.github.com/users/UnamedRus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/UnamedRus/subscriptions","organizations_url":"https://api.github.com/users/UnamedRus/orgs","repos_url":"https://api.github.com/users/UnamedRus/repos","events_url":"https://api.github.com/users/UnamedRus/events{/privacy}","received_events_url":"https://api.github.com/users/UnamedRus/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":3045757785,"node_id":"MDU6TGFiZWwzMDQ1NzU3Nzg1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-projections","name":"comp-projections","color":"b5bcff","default":false,"description":""}],"state":"open","locked":false,"assignee":{"login":"amosbird","id":5085485,"node_id":"MDQ6VXNlcjUwODU0ODU=","avatar_url":"https://avatars.githubusercontent.com/u/5085485?v=4","gravatar_id":"","url":"https://api.github.com/users/amosbird","html_url":"https://github.com/amosbird","followers_url":"https://api.github.com/users/amosbird/followers","following_url":"https://api.github.com/users/amosbird/following{/other_user}","gists_url":"https://api.github.com/users/amosbird/gists{/gist_id}","starred_url":"https://api.github.com/users/amosbird/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/amosbird/subscriptions","organizations_url":"https://api.github.com/users/amosbird/orgs","repos_url":"https://api.github.com/users/amosbird/repos","events_url":"https://api.github.com/users/amosbird/events{/privacy}","received_events_url":"https://api.github.com/users/amosbird/received_events","type":"User","site_admin":false},"assignees":[{"login":"amosbird","id":5085485,"node_id":"MDQ6VXNlcjUwODU0ODU=","avatar_url":"https://avatars.githubusercontent.com/u/5085485?v=4","gravatar_id":"","url":"https://api.github.com/users/amosbird","html_url":"https://github.com/amosbird","followers_url":"https://api.github.com/users/amosbird/followers","following_url":"https://api.github.com/users/amosbird/following{/other_user}","gists_url":"https://api.github.com/users/amosbird/gists{/gist_id}","starred_url":"https://api.github.com/users/amosbird/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/amosbird/subscriptions","organizations_url":"https://api.github.com/users/amosbird/orgs","repos_url":"https://api.github.com/users/amosbird/repos","events_url":"https://api.github.com/users/amosbird/events{/privacy}","received_events_url":"https://api.github.com/users/amosbird/received_events","type":"User","site_admin":false}],"milestone":null,"comments":0,"created_at":"2022-01-13T21:51:47Z","updated_at":"2022-01-16T06:26:39Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"**Use case**\r\n\r\nNasty bi tools, which tries to run \r\n\r\n```sql\r\nSELECT DISTINCT key FROM table ORDER BY key ASC NULLS FIRST ...\r\n```\r\nquery against multi billion row table in order to populate selector (I'm looking at you DataLens) \r\n \r\n**Describe the solution you'd like**\r\n\r\n```sql\r\nCREATE TABLE table(\r\nkey UInt32,\r\nvalue UInt32,\r\nts DateTime,\r\nPROJECTION selector_key (\r\nSELECT DISTINCT key ORDER BY key))\r\nENGINE=MergeTree PARTITION BY toYYYYMM(ts) ORDER BY (key)\r\n```\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33615/reactions","total_count":2,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":1},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33615/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33604","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33604/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33604/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33604/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33604","id":1101905496,"node_id":"I_kwDOA5dJV85Brb5Y","number":33604,"title":"Change `group by` keys order according to the `order by` keys order when aggregating in order","user":{"login":"nickitat","id":5218483,"node_id":"MDQ6VXNlcjUyMTg0ODM=","avatar_url":"https://avatars.githubusercontent.com/u/5218483?v=4","gravatar_id":"","url":"https://api.github.com/users/nickitat","html_url":"https://github.com/nickitat","followers_url":"https://api.github.com/users/nickitat/followers","following_url":"https://api.github.com/users/nickitat/following{/other_user}","gists_url":"https://api.github.com/users/nickitat/gists{/gist_id}","starred_url":"https://api.github.com/users/nickitat/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nickitat/subscriptions","organizations_url":"https://api.github.com/users/nickitat/orgs","repos_url":"https://api.github.com/users/nickitat/repos","events_url":"https://api.github.com/users/nickitat/events{/privacy}","received_events_url":"https://api.github.com/users/nickitat/received_events","type":"User","site_admin":false},"labels":[{"id":756395244,"node_id":"MDU6TGFiZWw3NTYzOTUyNDQ=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/performance","name":"performance","color":"c2e0c6","default":false,"description":null}],"state":"open","locked":false,"assignee":{"login":"CurtizJ","id":20361854,"node_id":"MDQ6VXNlcjIwMzYxODU0","avatar_url":"https://avatars.githubusercontent.com/u/20361854?v=4","gravatar_id":"","url":"https://api.github.com/users/CurtizJ","html_url":"https://github.com/CurtizJ","followers_url":"https://api.github.com/users/CurtizJ/followers","following_url":"https://api.github.com/users/CurtizJ/following{/other_user}","gists_url":"https://api.github.com/users/CurtizJ/gists{/gist_id}","starred_url":"https://api.github.com/users/CurtizJ/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/CurtizJ/subscriptions","organizations_url":"https://api.github.com/users/CurtizJ/orgs","repos_url":"https://api.github.com/users/CurtizJ/repos","events_url":"https://api.github.com/users/CurtizJ/events{/privacy}","received_events_url":"https://api.github.com/users/CurtizJ/received_events","type":"User","site_admin":false},"assignees":[{"login":"CurtizJ","id":20361854,"node_id":"MDQ6VXNlcjIwMzYxODU0","avatar_url":"https://avatars.githubusercontent.com/u/20361854?v=4","gravatar_id":"","url":"https://api.github.com/users/CurtizJ","html_url":"https://github.com/CurtizJ","followers_url":"https://api.github.com/users/CurtizJ/followers","following_url":"https://api.github.com/users/CurtizJ/following{/other_user}","gists_url":"https://api.github.com/users/CurtizJ/gists{/gist_id}","starred_url":"https://api.github.com/users/CurtizJ/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/CurtizJ/subscriptions","organizations_url":"https://api.github.com/users/CurtizJ/orgs","repos_url":"https://api.github.com/users/CurtizJ/repos","events_url":"https://api.github.com/users/CurtizJ/events{/privacy}","received_events_url":"https://api.github.com/users/CurtizJ/received_events","type":"User","site_admin":false}],"milestone":null,"comments":0,"created_at":"2022-01-13T15:01:25Z","updated_at":"2022-01-13T22:58:20Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"**Describe the situation**\r\nThese two queries have different running times.\r\n\r\n```\r\nnickitat-nix :) show create table test\r\n\r\n┌─statement──────────────────────────────────────────────────────────────────────────────────────────────────────────────────┐\r\n│ CREATE TABLE default.test\r\n(\r\n    `a` UInt64,\r\n    `b` UInt64\r\n)\r\nENGINE = MergeTree\r\nORDER BY (a, b)\r\nSETTINGS index_granularity = 8192 │\r\n└────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┘\r\n```\r\n\r\n```\r\nnickitat-nix :) select count(*) from test group by a, b order by a, b format Null settings optimize_aggregation_in_order = 1\r\n\r\n0 rows in set. Elapsed: 1.264 sec. Processed 10.00 million rows, 160.00 MB (7.91 million rows/s., 126.59 MB/s.)\r\n```\r\n\r\n```\r\nnickitat-nix :) select count(*) from test group by b, a order by a, b format Null settings optimize_aggregation_in_order = 1\r\n\r\n0 rows in set. Elapsed: 3.493 sec. Processed 10.00 million rows, 160.00 MB (2.86 million rows/s., 45.81 MB/s.)\r\n```\r\n\r\n**Expected performance**\r\nThe same in both cases.\r\n\r\n**Additional context**\r\nFor example PG executes both in the same time.\r\n\r\n```\r\npostgres=# \\d+ test\r\n                                   Table \"public.test\"\r\n Column |  Type  | Collation | Nullable | Default | Storage | Stats target | Description \r\n--------+--------+-----------+----------+---------+---------+--------------+-------------\r\n a      | bigint |           |          |         | plain   |              | \r\n b      | bigint |           |          |         | plain   |              | \r\nIndexes:\r\n    \"xxxxxx\" btree (a, b)\r\n\r\npostgres=# explain select a, b, count(*) from test group by a, b order by a, b;\r\n                                        QUERY PLAN                                        \r\n------------------------------------------------------------------------------------------\r\n GroupAggregate  (cost=0.42..117584.43 rows=1000000 width=24)\r\n   Group Key: a, b\r\n   ->  Index Only Scan using xxxxxx on test  (cost=0.42..100084.43 rows=1000000 width=16)\r\n\r\npostgres=# explain select a, b, count(*) from test group by b, a order by a, b;\r\n                                        QUERY PLAN                                        \r\n------------------------------------------------------------------------------------------\r\n GroupAggregate  (cost=0.42..117584.43 rows=1000000 width=24)\r\n   Group Key: a, b\r\n   ->  Index Only Scan using xxxxxx on test  (cost=0.42..100084.43 rows=1000000 width=16)\r\n```","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33604/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33604/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33599","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33599/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33599/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33599/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33599","id":1101741325,"node_id":"I_kwDOA5dJV85Bqz0N","number":33599,"title":"STORJ instead of S3?","user":{"login":"sv3t0sl4v","id":56256300,"node_id":"MDQ6VXNlcjU2MjU2MzAw","avatar_url":"https://avatars.githubusercontent.com/u/56256300?v=4","gravatar_id":"","url":"https://api.github.com/users/sv3t0sl4v","html_url":"https://github.com/sv3t0sl4v","followers_url":"https://api.github.com/users/sv3t0sl4v/followers","following_url":"https://api.github.com/users/sv3t0sl4v/following{/other_user}","gists_url":"https://api.github.com/users/sv3t0sl4v/gists{/gist_id}","starred_url":"https://api.github.com/users/sv3t0sl4v/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sv3t0sl4v/subscriptions","organizations_url":"https://api.github.com/users/sv3t0sl4v/orgs","repos_url":"https://api.github.com/users/sv3t0sl4v/repos","events_url":"https://api.github.com/users/sv3t0sl4v/events{/privacy}","received_events_url":"https://api.github.com/users/sv3t0sl4v/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":9,"created_at":"2022-01-13T13:37:09Z","updated_at":"2022-01-14T06:52:10Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"\r\n**Use case** Shard out to STORJ instead of S3\r\n\r\n**Describe the solution you'd like**: STORJ is **about 6 times cheaper** than S3 and is:\r\n- cheaper - Oh! I said that already!\r\n- more secure - you do not have to trust STORJ or node operators - nobody knows what they store and they can't use the data. On the other hand, you have to trust Amazon with your ClickHouse data, which is... Ha-ha! No.\r\n- has no downtime as it is decentralized cloud storage: data is torn to pieces, encrypted and spread across thousands of nodes all over the world \r\n...\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33599/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33599/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33596","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33596/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33596/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33596/events","html_url":"https://github.com/ClickHouse/ClickHouse/pull/33596","id":1101658682,"node_id":"PR_kwDOA5dJV84w7UV1","number":33596,"title":"WIP Update GraphiteMergeTree documentation (splitted GraphiteMergeTree rollup rules)","user":{"login":"msaf1980","id":20159464,"node_id":"MDQ6VXNlcjIwMTU5NDY0","avatar_url":"https://avatars.githubusercontent.com/u/20159464?v=4","gravatar_id":"","url":"https://api.github.com/users/msaf1980","html_url":"https://github.com/msaf1980","followers_url":"https://api.github.com/users/msaf1980/followers","following_url":"https://api.github.com/users/msaf1980/following{/other_user}","gists_url":"https://api.github.com/users/msaf1980/gists{/gist_id}","starred_url":"https://api.github.com/users/msaf1980/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/msaf1980/subscriptions","organizations_url":"https://api.github.com/users/msaf1980/orgs","repos_url":"https://api.github.com/users/msaf1980/repos","events_url":"https://api.github.com/users/msaf1980/events{/privacy}","received_events_url":"https://api.github.com/users/msaf1980/received_events","type":"User","site_admin":false},"labels":[{"id":1310920248,"node_id":"MDU6TGFiZWwxMzEwOTIwMjQ4","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/pr-documentation","name":"pr-documentation","color":"007700","default":false,"description":"Documentation PRs for the specific code PR"},{"id":3627025164,"node_id":"LA_kwDOA5dJV87YMAMM","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/can%20be%20tested","name":"can be tested","color":"1d76db","default":false,"description":""}],"state":"open","locked":false,"assignee":{"login":"Felixoid","id":3025537,"node_id":"MDQ6VXNlcjMwMjU1Mzc=","avatar_url":"https://avatars.githubusercontent.com/u/3025537?v=4","gravatar_id":"","url":"https://api.github.com/users/Felixoid","html_url":"https://github.com/Felixoid","followers_url":"https://api.github.com/users/Felixoid/followers","following_url":"https://api.github.com/users/Felixoid/following{/other_user}","gists_url":"https://api.github.com/users/Felixoid/gists{/gist_id}","starred_url":"https://api.github.com/users/Felixoid/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Felixoid/subscriptions","organizations_url":"https://api.github.com/users/Felixoid/orgs","repos_url":"https://api.github.com/users/Felixoid/repos","events_url":"https://api.github.com/users/Felixoid/events{/privacy}","received_events_url":"https://api.github.com/users/Felixoid/received_events","type":"User","site_admin":false},"assignees":[{"login":"Felixoid","id":3025537,"node_id":"MDQ6VXNlcjMwMjU1Mzc=","avatar_url":"https://avatars.githubusercontent.com/u/3025537?v=4","gravatar_id":"","url":"https://api.github.com/users/Felixoid","html_url":"https://github.com/Felixoid","followers_url":"https://api.github.com/users/Felixoid/followers","following_url":"https://api.github.com/users/Felixoid/following{/other_user}","gists_url":"https://api.github.com/users/Felixoid/gists{/gist_id}","starred_url":"https://api.github.com/users/Felixoid/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Felixoid/subscriptions","organizations_url":"https://api.github.com/users/Felixoid/orgs","repos_url":"https://api.github.com/users/Felixoid/repos","events_url":"https://api.github.com/users/Felixoid/events{/privacy}","received_events_url":"https://api.github.com/users/Felixoid/received_events","type":"User","site_admin":false}],"milestone":null,"comments":2,"created_at":"2022-01-13T12:36:18Z","updated_at":"2022-01-19T12:22:01Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/pulls/33596","html_url":"https://github.com/ClickHouse/ClickHouse/pull/33596","diff_url":"https://github.com/ClickHouse/ClickHouse/pull/33596.diff","patch_url":"https://github.com/ClickHouse/ClickHouse/pull/33596.patch","merged_at":null},"body":"Changelog category:\r\n- Documentation\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33596/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33596/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33584","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33584/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33584/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33584/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33584","id":1101167932,"node_id":"I_kwDOA5dJV85Bon08","number":33584,"title":"clickhouse-local - support shebang","user":{"login":"mikeTWC1984","id":31977106,"node_id":"MDQ6VXNlcjMxOTc3MTA2","avatar_url":"https://avatars.githubusercontent.com/u/31977106?v=4","gravatar_id":"","url":"https://api.github.com/users/mikeTWC1984","html_url":"https://github.com/mikeTWC1984","followers_url":"https://api.github.com/users/mikeTWC1984/followers","following_url":"https://api.github.com/users/mikeTWC1984/following{/other_user}","gists_url":"https://api.github.com/users/mikeTWC1984/gists{/gist_id}","starred_url":"https://api.github.com/users/mikeTWC1984/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikeTWC1984/subscriptions","organizations_url":"https://api.github.com/users/mikeTWC1984/orgs","repos_url":"https://api.github.com/users/mikeTWC1984/repos","events_url":"https://api.github.com/users/mikeTWC1984/events{/privacy}","received_events_url":"https://api.github.com/users/mikeTWC1984/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":644208617,"node_id":"MDU6TGFiZWw2NDQyMDg2MTc=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/easy%20task","name":"easy task","color":"0e8a16","default":false,"description":"Good for first contributors"}],"state":"open","locked":false,"assignee":{"login":"egor-sivokhin2001","id":98153984,"node_id":"U_kgDOBdm2AA","avatar_url":"https://avatars.githubusercontent.com/u/98153984?v=4","gravatar_id":"","url":"https://api.github.com/users/egor-sivokhin2001","html_url":"https://github.com/egor-sivokhin2001","followers_url":"https://api.github.com/users/egor-sivokhin2001/followers","following_url":"https://api.github.com/users/egor-sivokhin2001/following{/other_user}","gists_url":"https://api.github.com/users/egor-sivokhin2001/gists{/gist_id}","starred_url":"https://api.github.com/users/egor-sivokhin2001/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/egor-sivokhin2001/subscriptions","organizations_url":"https://api.github.com/users/egor-sivokhin2001/orgs","repos_url":"https://api.github.com/users/egor-sivokhin2001/repos","events_url":"https://api.github.com/users/egor-sivokhin2001/events{/privacy}","received_events_url":"https://api.github.com/users/egor-sivokhin2001/received_events","type":"User","site_admin":false},"assignees":[{"login":"egor-sivokhin2001","id":98153984,"node_id":"U_kgDOBdm2AA","avatar_url":"https://avatars.githubusercontent.com/u/98153984?v=4","gravatar_id":"","url":"https://api.github.com/users/egor-sivokhin2001","html_url":"https://github.com/egor-sivokhin2001","followers_url":"https://api.github.com/users/egor-sivokhin2001/followers","following_url":"https://api.github.com/users/egor-sivokhin2001/following{/other_user}","gists_url":"https://api.github.com/users/egor-sivokhin2001/gists{/gist_id}","starred_url":"https://api.github.com/users/egor-sivokhin2001/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/egor-sivokhin2001/subscriptions","organizations_url":"https://api.github.com/users/egor-sivokhin2001/orgs","repos_url":"https://api.github.com/users/egor-sivokhin2001/repos","events_url":"https://api.github.com/users/egor-sivokhin2001/events{/privacy}","received_events_url":"https://api.github.com/users/egor-sivokhin2001/received_events","type":"User","site_admin":false}],"milestone":null,"comments":1,"created_at":"2022-01-13T04:05:00Z","updated_at":"2022-01-27T07:48:04Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"\r\n\r\n**Use case**\r\n\r\nSince clickhouse-local act like a repl now, that would be logical to allow it to execute sql statements with shebang\r\nThat would be useful for cronjob scripts and CH based tool building (e.g. format convertor), etc\r\n```bash\r\n#!/usr/bin/env -S clichouse-local  --input-format Parquet\r\nselect * from table FORMAT Pretty\r\n```\r\n\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33584/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33584/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33583","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33583/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33583/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33583/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33583","id":1101007325,"node_id":"I_kwDOA5dJV85BoAnd","number":33583,"title":"trait for Skip index filtering before ORDER BY index","user":{"login":"UnamedRus","id":9449405,"node_id":"MDQ6VXNlcjk0NDk0MDU=","avatar_url":"https://avatars.githubusercontent.com/u/9449405?v=4","gravatar_id":"","url":"https://api.github.com/users/UnamedRus","html_url":"https://github.com/UnamedRus","followers_url":"https://api.github.com/users/UnamedRus/followers","following_url":"https://api.github.com/users/UnamedRus/following{/other_user}","gists_url":"https://api.github.com/users/UnamedRus/gists{/gist_id}","starred_url":"https://api.github.com/users/UnamedRus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/UnamedRus/subscriptions","organizations_url":"https://api.github.com/users/UnamedRus/orgs","repos_url":"https://api.github.com/users/UnamedRus/repos","events_url":"https://api.github.com/users/UnamedRus/events{/privacy}","received_events_url":"https://api.github.com/users/UnamedRus/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":845267693,"node_id":"MDU6TGFiZWw4NDUyNjc2OTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/st-need-info","name":"st-need-info","color":"e5b890","default":false,"description":"We need extra data to continue"},{"id":1507886722,"node_id":"MDU6TGFiZWwxNTA3ODg2NzIy","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/st-discussion","name":"st-discussion","color":"e5b890","default":false,"description":"The story requires discussion /research / expert help / design & decomposition before will be taken"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2022-01-13T01:25:32Z","updated_at":"2022-01-18T01:16:24Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"**Use case**\r\n\r\nIn specific use cases, we may want to create skip index, which will have high granularity and are going to be used as part skipping index.\r\nBut now, it will be applied after ORDER BY index, which can lead to major slowdown in case of big table with a lot of rows.\r\n\r\n**Describe the solution you'd like**\r\n\r\nSpecial trait, which will specify order in which ClickHouse need to use skip index (and ORDER BY index)\r\n\r\n```\r\nCREATE TABLE table (\r\nkey UInt32,\r\nts DateTime,\r\nts2 DateTime,\r\nvalue String,\r\nINDEX ts2_idx ts2 TYPE minmax GRANULARITY 1000 BEFORE ORDER BY,\r\nINDEX key_idx key TYPE minmax GRANULARITY 50 BEFORE value_idx,\r\nINDEX value_idx value TYPE minmax GRANULARITY 10)\r\nENGINE=MergeTree PARTITION BY toYYYYMM(ts) ORDER BY key;\r\n```","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33583/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33583/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33582","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33582/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33582/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33582/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33582","id":1100854876,"node_id":"I_kwDOA5dJV85BnbZc","number":33582,"title":"JOIN algorithm to properly use key-value tables.","user":{"login":"alexey-milovidov","id":18581488,"node_id":"MDQ6VXNlcjE4NTgxNDg4","avatar_url":"https://avatars.githubusercontent.com/u/18581488?v=4","gravatar_id":"","url":"https://api.github.com/users/alexey-milovidov","html_url":"https://github.com/alexey-milovidov","followers_url":"https://api.github.com/users/alexey-milovidov/followers","following_url":"https://api.github.com/users/alexey-milovidov/following{/other_user}","gists_url":"https://api.github.com/users/alexey-milovidov/gists{/gist_id}","starred_url":"https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexey-milovidov/subscriptions","organizations_url":"https://api.github.com/users/alexey-milovidov/orgs","repos_url":"https://api.github.com/users/alexey-milovidov/repos","events_url":"https://api.github.com/users/alexey-milovidov/events{/privacy}","received_events_url":"https://api.github.com/users/alexey-milovidov/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null}],"state":"open","locked":false,"assignee":{"login":"vdimir","id":7023786,"node_id":"MDQ6VXNlcjcwMjM3ODY=","avatar_url":"https://avatars.githubusercontent.com/u/7023786?v=4","gravatar_id":"","url":"https://api.github.com/users/vdimir","html_url":"https://github.com/vdimir","followers_url":"https://api.github.com/users/vdimir/followers","following_url":"https://api.github.com/users/vdimir/following{/other_user}","gists_url":"https://api.github.com/users/vdimir/gists{/gist_id}","starred_url":"https://api.github.com/users/vdimir/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vdimir/subscriptions","organizations_url":"https://api.github.com/users/vdimir/orgs","repos_url":"https://api.github.com/users/vdimir/repos","events_url":"https://api.github.com/users/vdimir/events{/privacy}","received_events_url":"https://api.github.com/users/vdimir/received_events","type":"User","site_admin":false},"assignees":[{"login":"vdimir","id":7023786,"node_id":"MDQ6VXNlcjcwMjM3ODY=","avatar_url":"https://avatars.githubusercontent.com/u/7023786?v=4","gravatar_id":"","url":"https://api.github.com/users/vdimir","html_url":"https://github.com/vdimir","followers_url":"https://api.github.com/users/vdimir/followers","following_url":"https://api.github.com/users/vdimir/following{/other_user}","gists_url":"https://api.github.com/users/vdimir/gists{/gist_id}","starred_url":"https://api.github.com/users/vdimir/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vdimir/subscriptions","organizations_url":"https://api.github.com/users/vdimir/orgs","repos_url":"https://api.github.com/users/vdimir/repos","events_url":"https://api.github.com/users/vdimir/events{/privacy}","received_events_url":"https://api.github.com/users/vdimir/received_events","type":"User","site_admin":false}],"milestone":null,"comments":0,"created_at":"2022-01-12T22:33:38Z","updated_at":"2022-01-14T00:06:43Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"**Use case**\r\n\r\nThere are table engines that support key-value requests efficiently. Mainly, `EmbeddedRocksDB` and more to come.\r\nBut if you JOIN with that table, it is using one large request to form a hash table in memory and process lookups from the hash table.\r\n\r\nWhile hash table in memory can serve 250 000 000 totally random requests per second (and more than a billion if it fits in cache) and RocksDB backed by array of NVMe SSDs with non-skewed distribution of requests can serve not more than single millions requests per second, it can be still good when data does not fit in memory.\r\n\r\n**Describe the solution you'd like**\r\n\r\nRequires (2) from here: #33581\r\n\r\nAdd `join_algorithm = 'direct'` that will force direct requests when it is possible.\r\n\r\n**Additional context**\r\n\r\nIt will not work out of the box for RIGHT and FULL JOIN, we can use other join algorithms for that cases.\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33582/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33582/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33581","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33581/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33581/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33581/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33581","id":1100848803,"node_id":"I_kwDOA5dJV85BnZ6j","number":33581,"title":"Key-value Data Marts","user":{"login":"alexey-milovidov","id":18581488,"node_id":"MDQ6VXNlcjE4NTgxNDg4","avatar_url":"https://avatars.githubusercontent.com/u/18581488?v=4","gravatar_id":"","url":"https://api.github.com/users/alexey-milovidov","html_url":"https://github.com/alexey-milovidov","followers_url":"https://api.github.com/users/alexey-milovidov/followers","following_url":"https://api.github.com/users/alexey-milovidov/following{/other_user}","gists_url":"https://api.github.com/users/alexey-milovidov/gists{/gist_id}","starred_url":"https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexey-milovidov/subscriptions","organizations_url":"https://api.github.com/users/alexey-milovidov/orgs","repos_url":"https://api.github.com/users/alexey-milovidov/repos","events_url":"https://api.github.com/users/alexey-milovidov/events{/privacy}","received_events_url":"https://api.github.com/users/alexey-milovidov/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":1507871495,"node_id":"MDU6TGFiZWwxNTA3ODcxNDk1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/st-community-taken","name":"st-community-taken","color":"e5b890","default":false,"description":"External developer is working on that"}],"state":"open","locked":false,"assignee":{"login":"dankondr","id":40788758,"node_id":"MDQ6VXNlcjQwNzg4NzU4","avatar_url":"https://avatars.githubusercontent.com/u/40788758?v=4","gravatar_id":"","url":"https://api.github.com/users/dankondr","html_url":"https://github.com/dankondr","followers_url":"https://api.github.com/users/dankondr/followers","following_url":"https://api.github.com/users/dankondr/following{/other_user}","gists_url":"https://api.github.com/users/dankondr/gists{/gist_id}","starred_url":"https://api.github.com/users/dankondr/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dankondr/subscriptions","organizations_url":"https://api.github.com/users/dankondr/orgs","repos_url":"https://api.github.com/users/dankondr/repos","events_url":"https://api.github.com/users/dankondr/events{/privacy}","received_events_url":"https://api.github.com/users/dankondr/received_events","type":"User","site_admin":false},"assignees":[{"login":"dankondr","id":40788758,"node_id":"MDQ6VXNlcjQwNzg4NzU4","avatar_url":"https://avatars.githubusercontent.com/u/40788758?v=4","gravatar_id":"","url":"https://api.github.com/users/dankondr","html_url":"https://github.com/dankondr","followers_url":"https://api.github.com/users/dankondr/followers","following_url":"https://api.github.com/users/dankondr/following{/other_user}","gists_url":"https://api.github.com/users/dankondr/gists{/gist_id}","starred_url":"https://api.github.com/users/dankondr/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dankondr/subscriptions","organizations_url":"https://api.github.com/users/dankondr/orgs","repos_url":"https://api.github.com/users/dankondr/repos","events_url":"https://api.github.com/users/dankondr/events{/privacy}","received_events_url":"https://api.github.com/users/dankondr/received_events","type":"User","site_admin":false}],"milestone":null,"comments":4,"created_at":"2022-01-12T22:26:57Z","updated_at":"2022-01-14T00:06:15Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"**Use case**\r\n\r\nClickHouse should be able to serve large amount of short queries on prepared datasets.\r\n\r\nFor example, you can prepare a dataset for user personalization or antifraud and serve it directly by clickhouse-server in realtime in ad-network, RTB, for DDoS prevention, e-commerce apps, games, etc...\r\n\r\n**Describe the solution you'd like**\r\n\r\n1. clickhouse-server should have TCPHandler that will implement Redis or Memcached protocol.\r\n2. Add `get` method to `IStorage` interface and `supportsGetRequests`. The method takes array of Fields and returns array of Fields.\r\n3. Implement this method for `StorageDictionary`, `EmbeddedRocksDB`, `Join`, `Set` and (when it will be ready), `AggregatingMemory`. Then implement it for `Distributed` tables.\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33581/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33581/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33579","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33579/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33579/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33579/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33579","id":1100777190,"node_id":"I_kwDOA5dJV85BnIbm","number":33579,"title":"Server falls when execute EXPLAIN","user":{"login":"infisamk","id":22649369,"node_id":"MDQ6VXNlcjIyNjQ5MzY5","avatar_url":"https://avatars.githubusercontent.com/u/22649369?v=4","gravatar_id":"","url":"https://api.github.com/users/infisamk","html_url":"https://github.com/infisamk","followers_url":"https://api.github.com/users/infisamk/followers","following_url":"https://api.github.com/users/infisamk/following{/other_user}","gists_url":"https://api.github.com/users/infisamk/gists{/gist_id}","starred_url":"https://api.github.com/users/infisamk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/infisamk/subscriptions","organizations_url":"https://api.github.com/users/infisamk/orgs","repos_url":"https://api.github.com/users/infisamk/repos","events_url":"https://api.github.com/users/infisamk/events{/privacy}","received_events_url":"https://api.github.com/users/infisamk/received_events","type":"User","site_admin":false},"labels":[{"id":1575085465,"node_id":"MDU6TGFiZWwxNTc1MDg1NDY1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/unexpected%20behaviour","name":"unexpected behaviour","color":"e088ca","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":10,"created_at":"2022-01-12T20:50:16Z","updated_at":"2022-01-13T11:33:06Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Clickhouse run in Docker with 2 CPU and 3GB RAM. All settings are default.\r\n\r\nWhen I execute EXPLAIN my query, server falls.\r\n\r\nReproduce:\r\n\r\n1. Create any table:\r\n\r\n```sql\r\nCREATE TABLE stock (\r\n    id UInt64,\r\n    dd DateTime,\r\n    val1 Int64,\r\n    val2 Int64,\r\n    val3 Int64,\r\n    val4 Int64,\r\n    val5 Int64,\r\n    type Int8,\r\n    state Int8,\r\n    reference UInt64\r\n) ENGINE = MergeTree()\r\nORDER BY (dd, id)\r\nPARTITION BY toYYYYMM(dd);\r\n```\r\n\r\n2. Run first EXPLAIN, that response error `Code: 168. DB::Exception: AST is too big. Maximum: 500000: (after expansion of aliases). (TOO_BIG_AST) (version 21.12.2.17 (official build))`:\r\n\r\n```sql\r\nexplain\r\nwith\r\n    '2020-01-01 00:00:00' as beginPeriod,\r\n    '2021-12-31 23:59:59' as endPeriod,\r\n    all_stock as (select * from default.stock where dd between beginPeriod and endPeriod),\r\n    cancels as (select reference as transactionId from all_stock where type = 9),\r\n    full_returned as (\r\n        select id\r\n        from (\r\n            select t.id,\r\n                sum(t.val1 + trc.val1) as val1,\r\n                sum(t.val2 + trc.val2) as val2,\r\n                sum(t.val3 + trc.val3) as val3,\r\n                sum(t.val4 + trc.val4) as val4\r\n            from all_stock as t\r\n            left join (\r\n                select *\r\n                from all_stock\r\n                where type = 7 and id not in (cancels)\r\n            ) as trc on (t.id = trc.reference)\r\n            where trc.reference > 0\r\n            group by id\r\n            ) as ts\r\n        where ts.val1 = 0 and ts.val2 = 0 and ts.val3 = 0 and ts.val4 = 0\r\n    ),\r\n    normal_stock as (\r\n        select *\r\n        from all_stock\r\n        where id not in (cancels) and id not in (full_returned)\r\n    ),\r\n    without_returns as (select * from all_stock where id not in (cancels)),\r\n    (select count() from normal_stock where val5 > 0 and type < 7) as field_3,\r\n    (select sum(val1) from normal_stock where val5 = 0 and type < 7) as field_4,\r\n    (select sum(val2) from normal_stock where val5 = 0 and type < 7) as field_5,\r\n    (select count() from normal_stock where val5 > 0 and type < 7 and state = 3) as field_6,\r\n    (select sum(val1) from normal_stock where val5 = 0 and type < 7 and state = 3) as field_7,\r\n    (select sum(abs(val3)) from normal_stock where type = 11) as field_8,\r\n    (select sum(val4) from (\r\n        select argMax(val4, dd) val4 from normal_stock where type < 7 group by state\r\n    )) as field_9,\r\n    \r\n    /* After expressions below we get error. If there is no line below, then there is enough memory to execute EXPLAIN. */\r\n\r\n    (select round(avg(val4)/count(), 0) from (\r\n        select argMax(val4, dd) as val4 from normal_stock where state > 0 group by state\r\n    )) as field_10,\r\n    (select sum(val1)/count() from without_returns where val5 > 0 and type < 7) as field_11,\r\n    (select sum(val1)/count() from without_returns where val5 > 0 and type < 7 and state = 3) as field_12,\r\n    (select sum(val1 - val2)/count() from without_returns where val5 > 0 and type < 7) as field_13,\r\n    (select sum(val2) from all_stock where id not in (cancels) and type < 7) as field_14,\r\n    (select sum(val2)/count() from all_stock where id not in (cancels) and type < 7 and val2 > 0) as field_15,\r\n    (select sum(val3) from all_stock where type in (1, 2, 3, 4, 5, 6, 7, 9)) as field_16,\r\n\r\n    (select sum(val2) from all_stock where type = 8 and val3 > 0) as field_28\r\nselect\r\n    beginPeriod,    /*  1 */\r\n    endPeriod,      /*  2 */\r\n    field_3,        /*  3 */\r\n    field_4,        /*  4 */\r\n    field_5,        /*  5 */\r\n    field_6,        /*  6 */\r\n    field_7,        /*  7 */\r\n    field_8,        /*  8 */\r\n    field_9,        /*  9 */\r\n\r\n    field_10,       /* 10 */\r\n    field_11,       /* 11 */\r\n    field_12,       /* 12 */\r\n    field_13,       /* 13 */\r\n    field_14,       /* 14 */\r\n    field_15,       /* 15 */\r\n    field_16,       /* 16 */\r\n\r\n    field_28        /* 28 */;\r\n```\r\n\r\n3. Let's add one more expression, and then the query will be like this:\r\n\r\n```sql\r\nexplain\r\nwith\r\n    '2020-01-01 00:00:00' as beginPeriod,\r\n    '2021-12-31 23:59:59' as endPeriod,\r\n    all_stock as (select * from default.stock where dd between beginPeriod and endPeriod),\r\n    cancels as (select reference as transactionId from all_stock where type = 9),\r\n    full_returned as (\r\n        select id\r\n        from (\r\n            select t.id,\r\n                sum(t.val1 + trc.val1) as val1,\r\n                sum(t.val2 + trc.val2) as val2,\r\n                sum(t.val3 + trc.val3) as val3,\r\n                sum(t.val4 + trc.val4) as val4\r\n            from all_stock as t\r\n            left join (\r\n                select *\r\n                from all_stock\r\n                where type = 7 and id not in (cancels)\r\n            ) as trc on (t.id = trc.reference)\r\n            where trc.reference > 0\r\n            group by id\r\n            ) as ts\r\n        where ts.val1 = 0 and ts.val2 = 0 and ts.val3 = 0 and ts.val4 = 0\r\n    ),\r\n    normal_stock as (\r\n        select *\r\n        from all_stock\r\n        where id not in (cancels) and id not in (full_returned)\r\n    ),\r\n    without_returns as (select * from all_stock where id not in (cancels)),\r\n    (select count() from normal_stock where val5 > 0 and type < 7) as field_3,\r\n    (select sum(val1) from normal_stock where val5 = 0 and type < 7) as field_4,\r\n    (select sum(val2) from normal_stock where val5 = 0 and type < 7) as field_5,\r\n    (select count() from normal_stock where val5 > 0 and type < 7 and state = 3) as field_6,\r\n    (select sum(val1) from normal_stock where val5 = 0 and type < 7 and state = 3) as field_7,\r\n    (select sum(abs(val3)) from normal_stock where type = 11) as field_8,\r\n    (select sum(val4) from (\r\n        select argMax(val4, dd) val4 from normal_stock where type < 7 group by state\r\n    )) as field_9,\r\n\r\n    (select round(avg(val4)/count(), 0) from (\r\n        select argMax(val4, dd) as val4 from normal_stock where state > 0 group by state\r\n    )) as field_10,\r\n    (select sum(val1)/count() from without_returns where val5 > 0 and type < 7) as field_11,\r\n    (select sum(val1)/count() from without_returns where val5 > 0 and type < 7 and state = 3) as field_12,\r\n    (select sum(val1 - val2)/count() from without_returns where val5 > 0 and type < 7) as field_13,\r\n    (select sum(val2) from all_stock where id not in (cancels) and type < 7) as field_14,\r\n    (select sum(val2)/count() from all_stock where id not in (cancels) and type < 7 and val2 > 0) as field_15,\r\n    (select sum(val3) from all_stock where type in (1, 2, 3, 4, 5, 6, 7, 9)) as field_16,\r\n\r\n    (select field_16/count() from all_stock where type in (1, 2, 3, 4, 5, 6, 7, 9) and val3 > 0) as field_17,\r\n\r\n    (select sum(val2) from all_stock where type = 8 and val3 > 0) as field_28\r\nselect\r\n    beginPeriod,    /*  1 */\r\n    endPeriod,      /*  2 */\r\n    field_3,        /*  3 */\r\n    field_4,        /*  4 */\r\n    field_5,        /*  5 */\r\n    field_6,        /*  6 */\r\n    field_7,        /*  7 */\r\n    field_8,        /*  8 */\r\n    field_9,        /*  9 */\r\n\r\n    field_10,       /* 10 */\r\n    field_11,       /* 11 */\r\n    field_12,       /* 12 */\r\n    field_13,       /* 13 */\r\n    field_14,       /* 14 */\r\n    field_15,       /* 15 */\r\n    field_16,       /* 16 */\r\n\r\n    field_17,       /* 17 */\r\n\r\n    field_28        /* 28 */;\r\n```\r\n\r\nOops... Server falls. Because there was not enough memory.\r\n\r\nAny user can crash the server - classic DoS.\r\n\r\nWhy is EXPLAIN so memory hungry? As example, sometimes it happens.\r\n\r\nQuery:\r\n```sql\r\nEXPLAIN\r\nWITH\r\n    '2020-01-01 00:00:00' AS beginPeriod,\r\n    '2021-12-31 23:59:59' AS endPeriod,\r\n    all_transactions AS\r\n    (\r\n        SELECT *\r\n        FROM cns.transactions\r\n        WHERE (dateBuy >= beginPeriod) AND (dateBuy <= endPeriod)\r\n    ),\r\n    cancels AS\r\n    (\r\n        SELECT reference AS transactionId\r\n        FROM all_transactions\r\n        WHERE type = 9\r\n    ),\r\n    full_returned AS\r\n    (\r\n        SELECT transactionId\r\n        FROM\r\n        (\r\n            SELECT\r\n                t.transactionId,\r\n                sum(t.amount + trc.amount) AS amount,\r\n                sum(t.amountDiscount + trc.amountDiscount) AS amountDiscount,\r\n                sum(t.amountBonus + trc.amountBonus) AS amountBonus,\r\n                sum(t.amountCharge + trc.amountCharge) AS amountCharge\r\n            FROM all_transactions AS t\r\n            LEFT JOIN\r\n            (\r\n                SELECT *\r\n                FROM all_transactions\r\n                WHERE (type = 7) AND (transactionId NOT IN (cancels))\r\n            ) AS trc ON t.transactionId = trc.reference\r\n            WHERE trc.reference > 0\r\n            GROUP BY transactionId\r\n        ) AS ts\r\n        WHERE (ts.amount = 0) AND (ts.amountDiscount = 0) AND (ts.amountBonus = 0) AND (ts.amountCharge = 0)\r\n    ),\r\n    normal_transactions AS\r\n    (\r\n        SELECT *\r\n        FROM all_transactions\r\n        WHERE (transactionId NOT IN (cancels)) AND (transactionId NOT IN (full_returned))\r\n    ),\r\n    without_returns AS\r\n    (\r\n        SELECT *\r\n        FROM all_transactions\r\n        WHERE transactionId NOT IN (cancels)\r\n    ),\r\n    (\r\n        SELECT count()\r\n        FROM normal_transactions\r\n        WHERE (cardId > 0) AND (type < 7)\r\n    ) AS cnt_with_cards\r\nSELECT cnt_with_cards\r\n```\r\n\r\nError:\r\n```\r\nReceived exception from server (version 21.12.2):\r\nCode: 241. DB::Exception: Received from x.x.x.x:9000. DB::Exception: Memory limit (total) exceeded: would use 3.94 GiB (attempt to allocate chunk of 0 bytes), maximum: 2.79 GiB: While executing AggregatingTransform: While processing (WITH '2020-01-01 00:00:00' AS beginPeriod, '2021-12-31 23:59:59' AS endPeriod SELECT count() FROM normal_transactions WHERE (cardId > 0) AND (type < 7)) AS cnt_with_cards. (MEMORY_LIMIT_EXCEEDED)\r\n```\r\n\r\nHm... `While executing AggregatingTransform` in EXPLAIN? Why?\r\n\r\nP.S. In all cases the tables are empty.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33579/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33579/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33576","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33576/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33576/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33576/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33576","id":1100647847,"node_id":"I_kwDOA5dJV85Bmo2n","number":33576,"title":"Split database resources to multiple groups of users","user":{"login":"alexsubota","id":4305175,"node_id":"MDQ6VXNlcjQzMDUxNzU=","avatar_url":"https://avatars.githubusercontent.com/u/4305175?v=4","gravatar_id":"","url":"https://api.github.com/users/alexsubota","html_url":"https://github.com/alexsubota","followers_url":"https://api.github.com/users/alexsubota/followers","following_url":"https://api.github.com/users/alexsubota/following{/other_user}","gists_url":"https://api.github.com/users/alexsubota/gists{/gist_id}","starred_url":"https://api.github.com/users/alexsubota/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexsubota/subscriptions","organizations_url":"https://api.github.com/users/alexsubota/orgs","repos_url":"https://api.github.com/users/alexsubota/repos","events_url":"https://api.github.com/users/alexsubota/events{/privacy}","received_events_url":"https://api.github.com/users/alexsubota/received_events","type":"User","site_admin":false},"labels":[{"id":386401510,"node_id":"MDU6TGFiZWwzODY0MDE1MTA=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/question","name":"question","color":"bfdadc","default":true,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2022-01-12T18:14:56Z","updated_at":"2022-01-23T01:12:49Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"ClickHouse v.21.8\r\n\r\nI have ClickHouse machine with 32GB RAM. I want to split ram for 2 user groups. Like 50% for 10 users, and 50% to one user(Alex).\r\nFor example, if 10 users run query that need 2GB, then all of these queiries must be fail, but the queries from Alex will work without any problems.\r\n\r\nHow i can make this? Is settings profiles is the right way to do this?","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33576/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33576/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33572","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33572/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33572/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33572/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33572","id":1100599413,"node_id":"I_kwDOA5dJV85BmdB1","number":33572,"title":"Install Clickhouse on Pfsense ","user":{"login":"AnhTuanNguyenn","id":24913199,"node_id":"MDQ6VXNlcjI0OTEzMTk5","avatar_url":"https://avatars.githubusercontent.com/u/24913199?v=4","gravatar_id":"","url":"https://api.github.com/users/AnhTuanNguyenn","html_url":"https://github.com/AnhTuanNguyenn","followers_url":"https://api.github.com/users/AnhTuanNguyenn/followers","following_url":"https://api.github.com/users/AnhTuanNguyenn/following{/other_user}","gists_url":"https://api.github.com/users/AnhTuanNguyenn/gists{/gist_id}","starred_url":"https://api.github.com/users/AnhTuanNguyenn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/AnhTuanNguyenn/subscriptions","organizations_url":"https://api.github.com/users/AnhTuanNguyenn/orgs","repos_url":"https://api.github.com/users/AnhTuanNguyenn/repos","events_url":"https://api.github.com/users/AnhTuanNguyenn/events{/privacy}","received_events_url":"https://api.github.com/users/AnhTuanNguyenn/received_events","type":"User","site_admin":false},"labels":[{"id":521113272,"node_id":"MDU6TGFiZWw1MjExMTMyNzI=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/build","name":"build","color":"800000","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-01-12T17:21:55Z","updated_at":"2022-01-12T17:23:36Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"hello, i'm just new here, \r\ni try to install ntopng with dumping data but when i tried to install clickhouse that seem not working for me, \r\n\r\nos: freebds 12 amd64\r\nntop 5.1\r\n\r\nsomeone have any link for tutorial ? i tried install followed link on web but dontwork too, \r\nthank for your help \r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33572/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33572/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33553","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33553/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33553/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33553/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33553","id":1100051327,"node_id":"I_kwDOA5dJV85BkXN_","number":33553,"title":"Code 209 Socket Timeout when communicationg with replica","user":{"login":"pawellrus","id":20677956,"node_id":"MDQ6VXNlcjIwNjc3OTU2","avatar_url":"https://avatars.githubusercontent.com/u/20677956?v=4","gravatar_id":"","url":"https://api.github.com/users/pawellrus","html_url":"https://github.com/pawellrus","followers_url":"https://api.github.com/users/pawellrus/followers","following_url":"https://api.github.com/users/pawellrus/following{/other_user}","gists_url":"https://api.github.com/users/pawellrus/gists{/gist_id}","starred_url":"https://api.github.com/users/pawellrus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pawellrus/subscriptions","organizations_url":"https://api.github.com/users/pawellrus/orgs","repos_url":"https://api.github.com/users/pawellrus/repos","events_url":"https://api.github.com/users/pawellrus/events{/privacy}","received_events_url":"https://api.github.com/users/pawellrus/received_events","type":"User","site_admin":false},"labels":[{"id":386401510,"node_id":"MDU6TGFiZWwzODY0MDE1MTA=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/question","name":"question","color":"bfdadc","default":true,"description":""},{"id":1006992822,"node_id":"MDU6TGFiZWwxMDA2OTkyODIy","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/operations","name":"operations","color":"7fe8ba","default":false,"description":""}],"state":"open","locked":false,"assignee":{"login":"Avogar","id":48961922,"node_id":"MDQ6VXNlcjQ4OTYxOTIy","avatar_url":"https://avatars.githubusercontent.com/u/48961922?v=4","gravatar_id":"","url":"https://api.github.com/users/Avogar","html_url":"https://github.com/Avogar","followers_url":"https://api.github.com/users/Avogar/followers","following_url":"https://api.github.com/users/Avogar/following{/other_user}","gists_url":"https://api.github.com/users/Avogar/gists{/gist_id}","starred_url":"https://api.github.com/users/Avogar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Avogar/subscriptions","organizations_url":"https://api.github.com/users/Avogar/orgs","repos_url":"https://api.github.com/users/Avogar/repos","events_url":"https://api.github.com/users/Avogar/events{/privacy}","received_events_url":"https://api.github.com/users/Avogar/received_events","type":"User","site_admin":false},"assignees":[{"login":"Avogar","id":48961922,"node_id":"MDQ6VXNlcjQ4OTYxOTIy","avatar_url":"https://avatars.githubusercontent.com/u/48961922?v=4","gravatar_id":"","url":"https://api.github.com/users/Avogar","html_url":"https://github.com/Avogar","followers_url":"https://api.github.com/users/Avogar/followers","following_url":"https://api.github.com/users/Avogar/following{/other_user}","gists_url":"https://api.github.com/users/Avogar/gists{/gist_id}","starred_url":"https://api.github.com/users/Avogar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Avogar/subscriptions","organizations_url":"https://api.github.com/users/Avogar/orgs","repos_url":"https://api.github.com/users/Avogar/repos","events_url":"https://api.github.com/users/Avogar/events{/privacy}","received_events_url":"https://api.github.com/users/Avogar/received_events","type":"User","site_admin":false}],"milestone":null,"comments":2,"created_at":"2022-01-12T08:51:47Z","updated_at":"2022-01-19T12:41:53Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Recently I find out sime implicit issue. From time to time (0-2 times in a day) Clickhouse throws an exception during communtication with replicas. Traceback is below.\r\n\r\nClickhouse version is version 21.10.2.15.\r\n\r\nSince issue is not obvious, and no hardware/network issues was found, I'm trying to find out the true reason of this events.\r\nAny suggestions about timeout to tune will be appreciated.\r\n \r\n\r\n````\r\nTCPHandler: Code: 279. DB::Exception: All connection tries failed. Log: \r\n\r\nCode: 210. DB::NetException: I/O error: Broken pipe, while writing to socket (172.16.200.62:9440). (NETWORK_ERROR) (version 21.10.2.15 (official build))\r\nCode: 209. DB::NetException: Timeout (server:9440). (SOCKET_TIMEOUT) (version 21.10.2.15 (official build))\r\nCode: 209. DB::NetException: Timeout (server:9440). (SOCKET_TIMEOUT) (version 21.10.2.15 (official build))\r\n\r\n: While executing Remote. (ALL_CONNECTION_TRIES_FAILED), Stack trace (when copying this message, always include the lines below):\r\n\r\n0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x944bdda in /usr/bin/clickhouse\r\n1. DB::HedgedConnectionsFactory::getManyConnections(DB::PoolMode) @ 0x118b41c6 in /usr/bin/clickhouse\r\n2. DB::HedgedConnections::HedgedConnections(std::__1::shared_ptr<DB::ConnectionPoolWithFailover> const&, std::__1::shared_ptr<DB::Context const>, DB::ConnectionTimeouts const&, std::__1::shared_ptr<DB::Throttler> const&, DB::PoolMode, std::__1::shared_ptr<DB::QualifiedTableName>) @ 0x118a71b9 in /usr/bin/clickhouse\r\n3. ? @ 0x1061fbde in /usr/bin/clickhouse\r\n4. DB::RemoteQueryExecutor::sendQuery() @ 0x10616eef in /usr/bin/clickhouse\r\n5. DB::RemoteSource::tryGenerate() @ 0x11b7da47 in /usr/bin/clickhouse\r\n6. DB::ISource::work() @ 0x119a2a5a in /usr/bin/clickhouse\r\n7. DB::SourceWithProgress::work() @ 0x11b83d82 in /usr/bin/clickhouse\r\n8. ? @ 0x119dd93d in /usr/bin/clickhouse\r\n9. DB::PipelineExecutor::executeStepImpl(unsigned long, unsigned long, std::__1::atomic<bool>*) @ 0x119da111 in /usr/bin/clickhouse\r\n10. ? @ 0x119df056 in /usr/bin/clickhouse\r\n11. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x948ce7f in /usr/bin/clickhouse\r\n12. ? @ 0x9490763 in /usr/bin/clickhouse\r\n13. start_thread @ 0x7dd5 in /usr/lib64/libpthread-2.17.so\r\n14. __clone @ 0xfdf6d in /usr/lib64/libc-2.17.so\r\n````\r\n\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33553/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33553/timeline","performed_via_github_app":null}]
