[{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33550","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33550/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33550/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33550/events","html_url":"https://github.com/ClickHouse/ClickHouse/pull/33550","id":1099858534,"node_id":"PR_kwDOA5dJV84w1Wm9","number":33550,"title":"Backport #33021 to 21.11: Fix null pointer dereference in low cardinality data","user":{"login":"robot-clickhouse","id":41385210,"node_id":"MDQ6VXNlcjQxMzg1MjEw","avatar_url":"https://avatars.githubusercontent.com/u/41385210?v=4","gravatar_id":"","url":"https://api.github.com/users/robot-clickhouse","html_url":"https://github.com/robot-clickhouse","followers_url":"https://api.github.com/users/robot-clickhouse/followers","following_url":"https://api.github.com/users/robot-clickhouse/following{/other_user}","gists_url":"https://api.github.com/users/robot-clickhouse/gists{/gist_id}","starred_url":"https://api.github.com/users/robot-clickhouse/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/robot-clickhouse/subscriptions","organizations_url":"https://api.github.com/users/robot-clickhouse/orgs","repos_url":"https://api.github.com/users/robot-clickhouse/repos","events_url":"https://api.github.com/users/robot-clickhouse/events{/privacy}","received_events_url":"https://api.github.com/users/robot-clickhouse/received_events","type":"User","site_admin":false},"labels":[{"id":1316518062,"node_id":"MDU6TGFiZWwxMzE2NTE4MDYy","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/pr-backport","name":"pr-backport","color":"5fadcc","default":false,"description":"Changes, backported to release branch. Do not use manually - automated use only!"}],"state":"open","locked":false,"assignee":{"login":"evillique","id":43110995,"node_id":"MDQ6VXNlcjQzMTEwOTk1","avatar_url":"https://avatars.githubusercontent.com/u/43110995?v=4","gravatar_id":"","url":"https://api.github.com/users/evillique","html_url":"https://github.com/evillique","followers_url":"https://api.github.com/users/evillique/followers","following_url":"https://api.github.com/users/evillique/following{/other_user}","gists_url":"https://api.github.com/users/evillique/gists{/gist_id}","starred_url":"https://api.github.com/users/evillique/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/evillique/subscriptions","organizations_url":"https://api.github.com/users/evillique/orgs","repos_url":"https://api.github.com/users/evillique/repos","events_url":"https://api.github.com/users/evillique/events{/privacy}","received_events_url":"https://api.github.com/users/evillique/received_events","type":"User","site_admin":false},"assignees":[{"login":"evillique","id":43110995,"node_id":"MDQ6VXNlcjQzMTEwOTk1","avatar_url":"https://avatars.githubusercontent.com/u/43110995?v=4","gravatar_id":"","url":"https://api.github.com/users/evillique","html_url":"https://github.com/evillique","followers_url":"https://api.github.com/users/evillique/followers","following_url":"https://api.github.com/users/evillique/following{/other_user}","gists_url":"https://api.github.com/users/evillique/gists{/gist_id}","starred_url":"https://api.github.com/users/evillique/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/evillique/subscriptions","organizations_url":"https://api.github.com/users/evillique/orgs","repos_url":"https://api.github.com/users/evillique/repos","events_url":"https://api.github.com/users/evillique/events{/privacy}","received_events_url":"https://api.github.com/users/evillique/received_events","type":"User","site_admin":false}],"milestone":null,"comments":0,"created_at":"2022-01-12T04:15:44Z","updated_at":"2022-01-19T21:12:53Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/pulls/33550","html_url":"https://github.com/ClickHouse/ClickHouse/pull/33550","diff_url":"https://github.com/ClickHouse/ClickHouse/pull/33550.diff","patch_url":"https://github.com/ClickHouse/ClickHouse/pull/33550.patch","merged_at":null},"body":"Original pull-request #33021\nCherry-pick pull-request #33540\n\nThis pull-request is a last step of an automated backporting.\nTreat it as a standard pull-request: look at the checks and resolve conflicts.\nMerge it only if you intend to backport changes to the target branch, otherwise just close it.\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33550/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33550/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33549","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33549/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33549/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33549/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33549","id":1099847607,"node_id":"I_kwDOA5dJV85Bjle3","number":33549,"title":"infinite loop in MaterializeMySQL replicaton","user":{"login":"awesomeleo","id":6779544,"node_id":"MDQ6VXNlcjY3Nzk1NDQ=","avatar_url":"https://avatars.githubusercontent.com/u/6779544?v=4","gravatar_id":"","url":"https://api.github.com/users/awesomeleo","html_url":"https://github.com/awesomeleo","followers_url":"https://api.github.com/users/awesomeleo/followers","following_url":"https://api.github.com/users/awesomeleo/following{/other_user}","gists_url":"https://api.github.com/users/awesomeleo/gists{/gist_id}","starred_url":"https://api.github.com/users/awesomeleo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/awesomeleo/subscriptions","organizations_url":"https://api.github.com/users/awesomeleo/orgs","repos_url":"https://api.github.com/users/awesomeleo/repos","events_url":"https://api.github.com/users/awesomeleo/events{/privacy}","received_events_url":"https://api.github.com/users/awesomeleo/received_events","type":"User","site_admin":false},"labels":[{"id":2673090580,"node_id":"MDU6TGFiZWwyNjczMDkwNTgw","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/bug%20experimental","name":"bug experimental","color":"E99695","default":false,"description":"Bug in the feature that should not be used in production"}],"state":"open","locked":false,"assignee":{"login":"tavplubix","id":14847450,"node_id":"MDQ6VXNlcjE0ODQ3NDUw","avatar_url":"https://avatars.githubusercontent.com/u/14847450?v=4","gravatar_id":"","url":"https://api.github.com/users/tavplubix","html_url":"https://github.com/tavplubix","followers_url":"https://api.github.com/users/tavplubix/followers","following_url":"https://api.github.com/users/tavplubix/following{/other_user}","gists_url":"https://api.github.com/users/tavplubix/gists{/gist_id}","starred_url":"https://api.github.com/users/tavplubix/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tavplubix/subscriptions","organizations_url":"https://api.github.com/users/tavplubix/orgs","repos_url":"https://api.github.com/users/tavplubix/repos","events_url":"https://api.github.com/users/tavplubix/events{/privacy}","received_events_url":"https://api.github.com/users/tavplubix/received_events","type":"User","site_admin":false},"assignees":[{"login":"tavplubix","id":14847450,"node_id":"MDQ6VXNlcjE0ODQ3NDUw","avatar_url":"https://avatars.githubusercontent.com/u/14847450?v=4","gravatar_id":"","url":"https://api.github.com/users/tavplubix","html_url":"https://github.com/tavplubix","followers_url":"https://api.github.com/users/tavplubix/followers","following_url":"https://api.github.com/users/tavplubix/following{/other_user}","gists_url":"https://api.github.com/users/tavplubix/gists{/gist_id}","starred_url":"https://api.github.com/users/tavplubix/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tavplubix/subscriptions","organizations_url":"https://api.github.com/users/tavplubix/orgs","repos_url":"https://api.github.com/users/tavplubix/repos","events_url":"https://api.github.com/users/tavplubix/events{/privacy}","received_events_url":"https://api.github.com/users/tavplubix/received_events","type":"User","site_admin":false}],"milestone":null,"comments":2,"created_at":"2022-01-12T03:54:01Z","updated_at":"2022-01-13T01:16:25Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"**Describe what's wrong**\r\nWhen I do incremental replication from MySQL to ClickHouse by using MaterializeMySQL. Then I drop database from MySQL side first  , and then drop from ClickHouse side. The drop op will hang there.\r\nI print the stacktrace and find the readOneBinlogEvent is not return. and DB::ReadBuffer::readStrict is in an infinite loop.\r\n\r\n**Does it reproduce on recent release?**\r\nI use V21.8.9.13-lts\r\n\r\n**How to reproduce**\r\ncreate a database in MySQL side , and replicate (do incremental replication ) it to ClickHouse for a while. and then drop it from MySQL side first, and then drop it from clickhouse side.\r\n\r\n* Which ClickHouse server version to use\r\n* V21.8.9.13-lts\r\n\r\n**Error message and/or stacktrace**\r\n\r\n```\r\n#0  DB::ReadBuffer::readStrict (this=<optimized out>, to=<optimized out>, n=0) at ../src/IO/ReadBuffer.h:185\r\n#1  0x000000000dcd439a in DB::MySQLBinlogEventReadBuffer::nextImpl (this=0x7fee251ea540) at ../src/IO/MySQLBinlogEventReadBuffer.cpp:49\r\n#2  0x000000000778dca4 in DB::ReadBuffer::next (this=this@entry=0x7fee251ea540) at ../src/IO/ReadBuffer.h:62\r\n#3  0x000000000778dd88 in eof (this=0x7fee251ea540) at ../src/IO/ReadBuffer.h:175\r\n#4  DB::ReadBuffer::read (this=0x7fee251ea540, to=0x7fee251ea1fc \"\", n=4) at ../src/IO/ReadBuffer.h:170\r\n#5  0x00000000077a8c59 in DB::ReadBuffer::readStrict (this=<optimized out>, to=<optimized out>, n=4) at ../src/IO/ReadBuffer.h:184\r\n#6  0x000000000d5c3096 in DB::MySQLReplication::readBigEndianStrict (payload=..., to=to@entry=0x7fee251ea1fc \"\", n=4) at ../src/Core/MySQL/MySQLReplication.h:38\r\n#7  0x000000000d5c4403 in _ZZN2DB16MySQLReplication9RowsEvent8parseRowERNS_10ReadBufferERN5boost14dynamic_bitsetImNSt3__19allocatorImEEEEENKUlmmT_E0_clINS_7DecimalIN4wide7integerILm256EiEEEEEEDammSB_.constprop.0 () at ../src/Core/MySQL/MySQLReplication.cpp:634\r\n#8  0x000000000d5c4634 in operator()<DB::MySQLReplication::RowsEvent::parseRow(DB::ReadBuffer&, DB::MySQLReplication::Bitmap&)::<lambda(size_t, size_t, auto:9)> >(size_t, size_t, const struct {...} &) (precision=precision@entry=576460752303423488, scale=scale@entry=8, function=..., __closure=<optimized out>) at ../src/Core/MySQL/MySQLReplication.cpp:589\r\n#9  0x000000000d5c79db in DB::MySQLReplication::RowsEvent::parseRow(DB::ReadBuffer&, boost::dynamic_bitset<unsigned long, std::__1::allocator<unsigned long> >&) ()\r\n    at ../src/Core/MySQL/MySQLReplication.cpp:676\r\n#10 0x000000000d5c87fb in DB::MySQLReplication::RowsEvent::parseImpl (this=0x7fee358b3718, payload=...) at ../src/Core/MySQL/MySQLReplication.cpp:404\r\n#11 0x000000000d5c8c74 in DB::MySQLReplication::MySQLFlavor::readPayloadImpl(DB::ReadBuffer&) () at ../src/Core/MySQL/MySQLReplication.cpp:1063\r\n#12 0x000000000daedab2 in DB::MySQLProtocol::IMySQLReadPacket::readPayload(DB::ReadBuffer&, unsigned char&) () at ../src/Core/MySQL/IMySQLReadPacket.cpp:20\r\n#13 0x000000000d5cc736 in DB::MySQLProtocol::PacketEndpoint::tryReceivePacket(DB::MySQLProtocol::IMySQLReadPacket&, unsigned long) () at ../src/Core/MySQL/PacketEndpoint.cpp:49\r\n#14 0x000000000d5be1fe in DB::MySQLClient::readOneBinlogEvent (this=this@entry=0x7fee359fa310, milliseconds=<optimized out>) at ../src/Core/MySQL/MySQLClient.cpp:175\r\n#15 0x000000000cd94ee1 in DB::MaterializeMySQLSyncThread::synchronization() () at ../src/Databases/MySQL/MaterializeMySQLSyncThread.cpp:238\r\n#16 0x000000000cd9510d in _ZZN20ThreadFromGlobalPoolC4IZN2DB26MaterializeMySQLSyncThread20startSynchronizationEvEUlvE_JEEEOT_DpOT0_ENUlvE_clEv () at ../src/Common/ThreadPool.h:166\r\n#17 0x00000000077d8d9d in ThreadPoolImpl<std::__1::thread>::worker (this=0x7feff12a6f00, thread_it=...) at ../src/Common/ThreadPool.cpp:228\r\n#18 0x00000000077d908c in void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::{lambda()#3}::operator()() \r\n```\r\n\r\nI have debuged it and found something wrong. But I don't know how to handle this situation.\r\n\r\nIn IO/MySQLBinlogEventReadBuffer.cpp:49\r\n```\r\nelse\r\n    {\r\n        for (size_t index = 0; index < checksum_buff_size - checksum_buff_limit; ++index)\r\n            checksum_buf[index] = checksum_buf[checksum_buff_limit + index];\r\n\r\n        checksum_buff_size -= checksum_buff_limit;\r\n        size_t read_bytes = checksum_signature_length - checksum_buff_size;\r\n        in.readStrict(checksum_buf + checksum_buff_size, read_bytes);   /// Minimum checksum_signature_length bytes\r\n        checksum_buff_size = checksum_buff_limit = checksum_signature_length;\r\n    }\r\n```\r\n the read_bytes  is 0, should I return false here if the read_bytes  is 0?\r\n\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33549/reactions","total_count":1,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":1},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33549/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33546","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33546/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33546/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33546/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33546","id":1099788533,"node_id":"I_kwDOA5dJV85BjXD1","number":33546,"title":"optimize_functions_to_subcolumns doesn't work for map length","user":{"login":"UnamedRus","id":9449405,"node_id":"MDQ6VXNlcjk0NDk0MDU=","avatar_url":"https://avatars.githubusercontent.com/u/9449405?v=4","gravatar_id":"","url":"https://api.github.com/users/UnamedRus","html_url":"https://github.com/UnamedRus","followers_url":"https://api.github.com/users/UnamedRus/followers","following_url":"https://api.github.com/users/UnamedRus/following{/other_user}","gists_url":"https://api.github.com/users/UnamedRus/gists{/gist_id}","starred_url":"https://api.github.com/users/UnamedRus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/UnamedRus/subscriptions","organizations_url":"https://api.github.com/users/UnamedRus/orgs","repos_url":"https://api.github.com/users/UnamedRus/repos","events_url":"https://api.github.com/users/UnamedRus/events{/privacy}","received_events_url":"https://api.github.com/users/UnamedRus/received_events","type":"User","site_admin":false},"labels":[{"id":756395244,"node_id":"MDU6TGFiZWw3NTYzOTUyNDQ=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/performance","name":"performance","color":"c2e0c6","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-01-12T01:51:45Z","updated_at":"2022-01-12T01:51:45Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"\r\n\r\n**How to reproduce**\r\nClickHouse 21.13.1.852\r\n \r\n```\r\nCREATE TABLE default.test_constr\r\n(\r\n    `key` UInt32,\r\n    `map` Map(String, String),\r\n    `key_a` String DEFAULT map['key_a'],\r\n    CONSTRAINT key_a_constr ASSUME key_a = (map['key_a']),\r\n    CONSTRAINT key_a_constr ASSUME (map['key_a']) = key_a\r\n)\r\nENGINE = MergeTree\r\nORDER BY key\r\nSETTINGS index_granularity = 8192;\r\n\r\nINSERT INTO test_constr(key, map) SELECT number, map('key_a','lala', 'key_b','lalalalalalalalalalalalala','key_c', 'lalalalalalalalalala') FROM numbers(1000000);\r\n\r\nSELECT count(mapKeys(map))\r\nFROM test_constr\r\nSETTINGS optimize_functions_to_subcolumns = 0\r\n\r\n┌─count(mapKeys(map))─┐\r\n│             1000000 │\r\n└─────────────────────┘\r\n\r\n1 rows in set. Elapsed: 0.042 sec. Processed 1.00 million rows, 127.00 MB (24.05 million rows/s., 3.05 GB/s.)\r\n\r\nSELECT count(mapKeys(map))\r\nFROM test_constr\r\nSETTINGS optimize_functions_to_subcolumns = 1\r\n\r\n┌─count(map.keys)─┐\r\n│         1000000 │\r\n└─────────────────┘\r\n\r\n1 rows in set. Elapsed: 0.018 sec. Processed 1.00 million rows, 50.00 MB (54.28 million rows/s., 2.71 GB/s.)\r\n\r\nSELECT count(length(map))\r\nFROM test_constr\r\nSETTINGS optimize_functions_to_subcolumns = 1\r\n\r\n┌─count(length(map))─┐\r\n│            1000000 │\r\n└────────────────────┘\r\n\r\n1 rows in set. Elapsed: 0.039 sec. Processed 1.00 million rows, 127.00 MB (25.59 million rows/s., 3.25 GB/s.)\r\n\r\n\r\nSELECT count(length(mapKeys(map)))\r\nFROM test_constr\r\nSETTINGS optimize_functions_to_subcolumns = 1\r\n\r\n┌─count(length(map.keys))─┐\r\n│                 1000000 │\r\n└─────────────────────────┘\r\n\r\n1 rows in set. Elapsed: 0.016 sec. Processed 1.00 million rows, 50.00 MB (61.34 million rows/s., 3.07 GB/s.)\r\n\r\nSELECT count(length(map.keys))\r\nFROM test_constr\r\nSETTINGS optimize_functions_to_subcolumns = 1\r\n\r\n┌─count(length(map.keys))─┐\r\n│                 1000000 │\r\n└─────────────────────────┘\r\n\r\n1 rows in set. Elapsed: 0.013 sec. Processed 1.00 million rows, 50.00 MB (79.52 million rows/s., 3.98 GB/s.)\r\n\r\nSELECT count(map.size0)\r\nFROM test_constr\r\nSETTINGS optimize_functions_to_subcolumns = 1\r\n\r\n┌─count(map.size0)─┐\r\n│          1000000 │\r\n└──────────────────┘\r\n\r\n1 rows in set. Elapsed: 0.005 sec. Processed 1.00 million rows, 8.00 MB (186.18 million rows/s., 1.49 GB/s.)\r\n```\r\n\r\n**Expected performance**\r\nlength(map), length(mapKeys(map)), length(map.keys) will use map.size0 subcolumn\r\n\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33546/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33546/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33544","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33544/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33544/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33544/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33544","id":1099780017,"node_id":"I_kwDOA5dJV85BjU-x","number":33544,"title":"Columns for constraint optimization being searched only in WHERE clause","user":{"login":"UnamedRus","id":9449405,"node_id":"MDQ6VXNlcjk0NDk0MDU=","avatar_url":"https://avatars.githubusercontent.com/u/9449405?v=4","gravatar_id":"","url":"https://api.github.com/users/UnamedRus","html_url":"https://github.com/UnamedRus","followers_url":"https://api.github.com/users/UnamedRus/followers","following_url":"https://api.github.com/users/UnamedRus/following{/other_user}","gists_url":"https://api.github.com/users/UnamedRus/gists{/gist_id}","starred_url":"https://api.github.com/users/UnamedRus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/UnamedRus/subscriptions","organizations_url":"https://api.github.com/users/UnamedRus/orgs","repos_url":"https://api.github.com/users/UnamedRus/repos","events_url":"https://api.github.com/users/UnamedRus/events{/privacy}","received_events_url":"https://api.github.com/users/UnamedRus/received_events","type":"User","site_admin":false},"labels":[{"id":1397894054,"node_id":"MDU6TGFiZWwxMzk3ODk0MDU0","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/unfinished%20code","name":"unfinished code","color":"ff8800","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2022-01-12T01:32:34Z","updated_at":"2022-01-12T21:23:10Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"\r\n**How to reproduce**\r\nClickHouse 21.13.1.852\r\n\r\n```\r\nCREATE TABLE default.test_constr\r\n(\r\n    `key` UInt32,\r\n    `map` Map(String, String),\r\n    `key_a` String DEFAULT map['key_a'],\r\n    CONSTRAINT key_a_constr ASSUME key_a = (map['key_a']),\r\n    CONSTRAINT key_a_constr ASSUME (map['key_a']) = key_a\r\n)\r\nENGINE = MergeTree\r\nORDER BY key\r\nSETTINGS index_granularity = 8192;\r\n\r\nset optimize_using_constraints =1, optimize_substitute_columns = 1, convert_query_to_cnf =1, optimize_append_index=1;\r\n\r\nINSERT INTO test_constr(key, map) SELECT number, map('key_a','lala', 'key_b','lalalalalalalalalalalalala','key_c', 'lalalalalalalalalala') FROM numbers(1000000);\r\n\r\nSELECT count(map['key_a'])\r\nFROM test_constr\r\n\r\n┌─count(arrayElement(map, 'key_a'))─┐\r\n│                           1000000 │\r\n└───────────────────────────────────┘\r\n\r\n1 rows in set. Elapsed: 0.064 sec. Processed 1.00 million rows, 127.00 MB (15.55 million rows/s., 1.97 GB/s.)\r\n\r\nSELECT count(key_a)\r\nFROM test_constr\r\n\r\n┌─count(key_a)─┐\r\n│      1000000 │\r\n└──────────────┘\r\n\r\n1 rows in set. Elapsed: 0.008 sec. Processed 1.00 million rows, 13.00 MB (120.52 million rows/s., 1.57 GB/s.)\r\n\r\nSELECT count()\r\nFROM test_constr\r\nWHERE NOT ignore(map['key_a'])\r\n\r\n┌─count()─┐\r\n│ 1000000 │\r\n└─────────┘\r\n\r\n1 rows in set. Elapsed: 0.009 sec. Processed 1.00 million rows, 13.00 MB (110.58 million rows/s., 1.44 GB/s.)\r\n\r\nSELECT count()\r\nFROM test_constr\r\nWHERE NOT ignore(key_a)\r\n\r\n┌─count()─┐\r\n│ 1000000 │\r\n└─────────┘\r\n\r\n1 rows in set. Elapsed: 0.015 sec. Processed 1.00 million rows, 13.00 MB (67.03 million rows/s., 871.37 MB/s.)\r\n\r\nSELECT count(x)\r\nFROM test_constr\r\nWHERE NOT ignore(map['key_a'] AS x)\r\n\r\n┌─count(arrayElement(map, 'key_a'))─┐\r\n│                           1000000 │\r\n└───────────────────────────────────┘\r\n\r\n1 rows in set. Elapsed: 0.010 sec. Processed 1.00 million rows, 13.00 MB (96.81 million rows/s., 1.26 GB/s.)\r\n\r\nEXPLAIN SYNTAX\r\nSELECT count(x)\r\nFROM test_constr\r\nWHERE NOT ignore(map['key_a'] AS x)\r\n\r\n┌─explain─────────────────────────────────────────────────────────┐\r\n│ SELECT count(key_a AS x) AS `count(arrayElement(map, 'key_a'))` │\r\n│ FROM test_constr                                                │\r\n│ WHERE NOT ignore(key_a)                                         │\r\n└─────────────────────────────────────────────────────────────────┘\r\n```\r\n\r\n\r\n**Expected behavior**\r\nAll queries will be optimized by CONSTRAINT optimization\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33544/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33544/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33538","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33538/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33538/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33538/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33538","id":1099706764,"node_id":"I_kwDOA5dJV85BjDGM","number":33538,"title":"clickhouse-local + use db_name = Not implemented exception (but works)","user":{"login":"filimonov","id":1549571,"node_id":"MDQ6VXNlcjE1NDk1NzE=","avatar_url":"https://avatars.githubusercontent.com/u/1549571?v=4","gravatar_id":"","url":"https://api.github.com/users/filimonov","html_url":"https://github.com/filimonov","followers_url":"https://api.github.com/users/filimonov/followers","following_url":"https://api.github.com/users/filimonov/following{/other_user}","gists_url":"https://api.github.com/users/filimonov/gists{/gist_id}","starred_url":"https://api.github.com/users/filimonov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/filimonov/subscriptions","organizations_url":"https://api.github.com/users/filimonov/orgs","repos_url":"https://api.github.com/users/filimonov/repos","events_url":"https://api.github.com/users/filimonov/events{/privacy}","received_events_url":"https://api.github.com/users/filimonov/received_events","type":"User","site_admin":false},"labels":[{"id":1575085465,"node_id":"MDU6TGFiZWwxNTc1MDg1NDY1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/unexpected%20behaviour","name":"unexpected behaviour","color":"e088ca","default":false,"description":""},{"id":2079355812,"node_id":"MDU6TGFiZWwyMDc5MzU1ODEy","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-local","name":"comp-local","color":"b5bcff","default":false,"description":""}],"state":"open","locked":false,"assignee":{"login":"kssenii","id":54203879,"node_id":"MDQ6VXNlcjU0MjAzODc5","avatar_url":"https://avatars.githubusercontent.com/u/54203879?v=4","gravatar_id":"","url":"https://api.github.com/users/kssenii","html_url":"https://github.com/kssenii","followers_url":"https://api.github.com/users/kssenii/followers","following_url":"https://api.github.com/users/kssenii/following{/other_user}","gists_url":"https://api.github.com/users/kssenii/gists{/gist_id}","starred_url":"https://api.github.com/users/kssenii/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kssenii/subscriptions","organizations_url":"https://api.github.com/users/kssenii/orgs","repos_url":"https://api.github.com/users/kssenii/repos","events_url":"https://api.github.com/users/kssenii/events{/privacy}","received_events_url":"https://api.github.com/users/kssenii/received_events","type":"User","site_admin":false},"assignees":[{"login":"kssenii","id":54203879,"node_id":"MDQ6VXNlcjU0MjAzODc5","avatar_url":"https://avatars.githubusercontent.com/u/54203879?v=4","gravatar_id":"","url":"https://api.github.com/users/kssenii","html_url":"https://github.com/kssenii","followers_url":"https://api.github.com/users/kssenii/followers","following_url":"https://api.github.com/users/kssenii/following{/other_user}","gists_url":"https://api.github.com/users/kssenii/gists{/gist_id}","starred_url":"https://api.github.com/users/kssenii/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kssenii/subscriptions","organizations_url":"https://api.github.com/users/kssenii/orgs","repos_url":"https://api.github.com/users/kssenii/repos","events_url":"https://api.github.com/users/kssenii/events{/privacy}","received_events_url":"https://api.github.com/users/kssenii/received_events","type":"User","site_admin":false}],"milestone":null,"comments":0,"created_at":"2022-01-11T23:18:08Z","updated_at":"2022-01-24T13:51:24Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"body":"```\r\nclickhouse-local --stacktrace\r\nClickHouse local version 21.13.1.2142.\r\n\r\nlaptop-5591 :) select currentDatabase();\r\n\r\nSELECT currentDatabase()\r\n\r\nQuery id: 8bc158bf-426e-4f12-a0dd-bdd3812f48c2\r\n\r\n┌─currentDatabase()─┐\r\n│ _local            │\r\n└───────────────────┘\r\n\r\n1 rows in set. Elapsed: 0.001 sec. \r\n\r\nlaptop-5591 :) use system;\r\n\r\nUSE system\r\n\r\nQuery id: f28a1fe7-d03b-4b89-ae99-21d8b8d7aabe\r\n\r\nOk.\r\nException on client:\r\nCode: 48. DB::Exception: Not implemented. (NOT_IMPLEMENTED), Stack trace (when copying this message, always include the lines below):\r\n\r\n0. ./build_docker/../contrib/libcxx/include/exception:133: Poco::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int) @ 0x1445c56c in /usr/bin/clickhouse\r\n1. ./build_docker/../src/Common/Exception.cpp:57: DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9edc2fa in /usr/bin/clickhouse\r\n2. ./build_docker/../src/Common/Exception.h:0: DB::LocalConnection::setDefaultDatabase(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) @ 0x12353b75 in /usr/bin/clickhouse\r\n3. ./build_docker/../contrib/libcxx/include/vector:658: DB::ClientBase::processParsedSingleQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::shared_ptr<DB::IAST>, std::__1::optional<bool>, bool) @ 0x12312a17 in /usr/bin/clickhouse\r\n4. ./build_docker/../src/Client/ClientBase.cpp:579: DB::ClientBase::processTextAsSingleQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) @ 0x12312091 in /usr/bin/clickhouse\r\n5. ./build_docker/../src/Client/ClientBase.cpp:0: DB::ClientBase::processQueryText(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) @ 0x1231939f in /usr/bin/clickhouse\r\n6. ./build_docker/../src/Client/ClientBase.cpp:1559: DB::ClientBase::runInteractive() @ 0x1231a71c in /usr/bin/clickhouse\r\n7. ./build_docker/../programs/local/LocalServer.cpp:482: DB::LocalServer::main(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x9f97bf0 in /usr/bin/clickhouse\r\n8. ./build_docker/../contrib/poco/Util/src/Application.cpp:0: Poco::Util::Application::run() @ 0x1435afa6 in /usr/bin/clickhouse\r\n9. ./build_docker/../programs/local/LocalServer.cpp:0: mainEntryClickHouseLocal(int, char**) @ 0x9f9da00 in /usr/bin/clickhouse\r\n10. ./build_docker/../programs/main.cpp:0: main @ 0x9ed7221 in /usr/bin/clickhouse\r\n11. __libc_start_main @ 0x7f6eadd0e0b3 in ?\r\n12. _start @ 0x9ed6bae in /usr/bin/clickhouse\r\n\r\n\r\nlaptop-5591 :) select currentDatabase();\r\n\r\nSELECT currentDatabase()\r\n\r\nQuery id: 08b87a7c-b587-4327-8a15-92b2147c7ee2\r\n\r\n┌─currentDatabase()─┐\r\n│ system            │\r\n└───────────────────┘\r\n\r\n1 rows in set. Elapsed: 0.001 sec. \r\n```","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33538/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33538/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33532","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33532/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33532/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33532/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33532","id":1099491316,"node_id":"I_kwDOA5dJV85BiOf0","number":33532,"title":"PREWHERE clause in a live view on a replicated table causes remote inserts to fail.","user":{"login":"btimby","id":669270,"node_id":"MDQ6VXNlcjY2OTI3MA==","avatar_url":"https://avatars.githubusercontent.com/u/669270?v=4","gravatar_id":"","url":"https://api.github.com/users/btimby","html_url":"https://github.com/btimby","followers_url":"https://api.github.com/users/btimby/followers","following_url":"https://api.github.com/users/btimby/following{/other_user}","gists_url":"https://api.github.com/users/btimby/gists{/gist_id}","starred_url":"https://api.github.com/users/btimby/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/btimby/subscriptions","organizations_url":"https://api.github.com/users/btimby/orgs","repos_url":"https://api.github.com/users/btimby/repos","events_url":"https://api.github.com/users/btimby/events{/privacy}","received_events_url":"https://api.github.com/users/btimby/received_events","type":"User","site_admin":false},"labels":[{"id":2020006233,"node_id":"MDU6TGFiZWwyMDIwMDA2MjMz","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-liveview","name":"comp-liveview","color":"b5bcff","default":false,"description":""},{"id":2673090580,"node_id":"MDU6TGFiZWwyNjczMDkwNTgw","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/bug%20experimental","name":"bug experimental","color":"E99695","default":false,"description":"Bug in the feature that should not be used in production"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-01-11T18:26:07Z","updated_at":"2022-01-12T09:58:12Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"**Describe what's wrong**\r\n\r\n`PREWHERE` clause in a live view on a replicated table causes remote inserts to fail.\r\n\r\n**Does it reproduce on recent release?**\r\n\r\nYes, I tested 21.\r\n\r\n**Enable crash reporting**\r\n\r\nIt does not crash the server process.\r\n\r\n**How to reproduce**\r\n\r\n* Which ClickHouse server version to use: 21\r\n* Which interface to use, if matters: I am using `clickhouse-client`, binary protocol.\r\n* Non-default settings, if any: `SET allow_experimental_live_view = 1`\r\n* `CREATE TABLE` statements for all tables involved\r\n* Sample data for all these tables, use [clickhouse-obfuscator](https://github.com/ClickHouse/ClickHouse/blob/master/programs/obfuscator/Obfuscator.cpp#L42-L80) if necessary\r\n* Queries to run that lead to unexpected result\r\n\r\nThis only occurs when using a replicated table.\r\n\r\nNODE A & B:\r\n```\r\nCREATE TABLE IF NOT EXISTS `foo_local` (\r\n  `seqno` UInt64 CODEC( DoubleDelta, ZSTD(1) ),\r\n  `ts` DateTime MATERIALIZED toDateTime64(bitShiftRight(`seqno`, 16) / 1000, 3, 'UTC') CODEC( DoubleDelta, ZSTD(1) )\r\n) ENGINE = ReplicatedMergeTree('/clickhouse/tables/{shard}/smartfile.audit_local', '{replica}')\r\nPARTITION BY (\r\n  toStartOfWeek(`ts`)\r\n)\r\nORDER BY (\r\n  -`seqno`\r\n);\r\n\r\nCREATE TABLE IF NOT EXISTS `foo`\r\nAS `foo_local`\r\nENGINE = Distributed('Replicated', `db`, `foo_local`, rand());\r\n```\r\n\r\nNODE A:\r\n```\r\nCREATE LIVE VIEW `bar` AS SELECT * FROM `foo` PREWHERE `seqno` >= 105538049529085952;\r\nWATCH `bar`;\r\n```\r\n\r\nNODE B:\r\n```\r\nINSERT INTO `foo` (seqno) VALUES (105538049529085953)\r\n\r\nQuery id: 6f7e3983-bc04-4484-a1c5-cbbeaf1c3830\r\n\r\n1 rows in set. Elapsed: 0.181 sec. \r\n\r\nReceived exception from server (version 21.12.3):\r\nCode: 10. DB::Exception: Received from localhost:9000. DB::Exception: Not found column greaterOrEquals(seqno, 105537992086978560) in block: while pushing to view smartfile.`58357143-042e-44c4-a969-0b76fc5bb772` (93f9fd9b-af74-4eef-93f9-fd9baf743eef). (NOT_FOUND_COLUMN_IN_BLOCK)\r\n```\r\n\r\nNODE A:\r\n```\r\nINSERT INTO foo (seqno) FORMAT Values\r\n\r\nQuery id: bcd43ae6-f58e-48a2-a4b9-040b6f9a1b96\r\n\r\nOk.\r\n\r\n1 rows in set. Elapsed: 0.064 sec. \r\n```\r\n\r\nOnly the remote insert causes an error. The insert is actually successful (pushing to the live view must not be part of the insert operation). The local insert succeeds. If you modify the live view to use `WHERE` instead of `PREWHERE` then both inserts work properly.\r\n\r\n**Expected behavior**\r\n\r\ninsert should function properly on either node, even when a live view contains a `PREWHERE` clause.\r\n\r\n**Error message and/or stacktrace**\r\n\r\n```\r\nReceived exception from server (version 21.12.3):\r\nCode: 10. DB::Exception: Received from localhost:9000. DB::Exception: Not found column greaterOrEquals(seqno, 105537992086978560) in block: while pushing to view smartfile.`58357143-042e-44c4-a969-0b76fc5bb772` (93f9fd9b-af74-4eef-93f9-fd9baf743eef). (NOT_FOUND_COLUMN_IN_BLOCK)\r\n```\r\n\r\n**Additional context**\r\n\r\nThis is only a problem in a cluster with replicated tables.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33532/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33532/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33531","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33531/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33531/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33531/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33531","id":1099486087,"node_id":"I_kwDOA5dJV85BiNOH","number":33531,"title":"Segfault in libunwind","user":{"login":"tavplubix","id":14847450,"node_id":"MDQ6VXNlcjE0ODQ3NDUw","avatar_url":"https://avatars.githubusercontent.com/u/14847450?v=4","gravatar_id":"","url":"https://api.github.com/users/tavplubix","html_url":"https://github.com/tavplubix","followers_url":"https://api.github.com/users/tavplubix/followers","following_url":"https://api.github.com/users/tavplubix/following{/other_user}","gists_url":"https://api.github.com/users/tavplubix/gists{/gist_id}","starred_url":"https://api.github.com/users/tavplubix/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tavplubix/subscriptions","organizations_url":"https://api.github.com/users/tavplubix/orgs","repos_url":"https://api.github.com/users/tavplubix/repos","events_url":"https://api.github.com/users/tavplubix/events{/privacy}","received_events_url":"https://api.github.com/users/tavplubix/received_events","type":"User","site_admin":false},"labels":[{"id":2104602822,"node_id":"MDU6TGFiZWwyMTA0NjAyODIy","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/fuzz","name":"fuzz","color":"abc4ea","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2022-01-11T18:19:56Z","updated_at":"2022-01-11T19:13:45Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"https://s3.amazonaws.com/clickhouse-test-reports/0/a9f389d546359055f3180b04faf0ee8474adc371/stress_test__address__actions_.html\r\n\r\nFinally we have caught the stacktrace:\r\n\r\n```\r\n2022-01-11 13:26:34 Thread 818 \"QueryPipelineEx\" received signal SIGSEGV, Segmentation fault.\r\n2022-01-11 13:26:34 [Switching to Thread 0x7fb10f38a700 (LWP 6322)]\r\n2022-01-11 13:26:34 libunwind::DwarfInstructions<libunwind::LocalAddressSpace, libunwind::Registers_x86_64>::getSavedRegister (addressSpace=..., registers=..., cfa=cfa@entry=4294967313, savedReg=...) at ../contrib/libunwind/src/DwarfInstructions.hpp:100\r\n2022-01-11 13:26:34 #0  libunwind::DwarfInstructions<libunwind::LocalAddressSpace, libunwind::Registers_x86_64>::getSavedRegister (addressSpace=..., registers=..., cfa=cfa@entry=4294967313, savedReg=...) at ../contrib/libunwind/src/DwarfInstructions.hpp:100\r\n2022-01-11 13:26:34 No locals.\r\n2022-01-11 13:26:34 #1  0x0000000037ea986f in libunwind::DwarfInstructions<libunwind::LocalAddressSpace, libunwind::Registers_x86_64>::stepWithDwarf (addressSpace=..., pc=<optimized out>, fdeStart=<optimized out>, registers=...) at ../contrib/libunwind/src/DwarfInstructions.hpp:215\r\n2022-01-11 13:26:34         i = 3\r\n2022-01-11 13:26:34         newRegisters = {_registers = {__rax = <optimized out>, __rbx = <optimized out>, __rcx = <optimized out>, __rdx = <optimized out>, __rdi = <optimized out>, __rsi = <optimized out>, __rbp = <optimized out>, __rsp = <optimized out>, __r8 = <optimized out>, __r9 = <optimized out>, __r10 = <optimized out>, __r11 = <optimized out>, __r12 = <optimized out>, __r13 = <optimized out>, __r14 = <optimized out>, __r15 = <optimized out>, __rip = <optimized out>, __rflags = 140398441257872, __cs = 17549805157236, __fs = 10, __gs = 105828009323536}}\r\n2022-01-11 13:26:34         cfa = 140398441256912\r\n2022-01-11 13:26:34         lastReg = 32\r\n2022-01-11 13:26:34         returnAddress = 0\r\n2022-01-11 13:26:34         prolog = {cfaRegister = 6, cfaRegisterOffset = 16, cfaExpression = 0, spExtraArgSize = 0, codeOffsetAtStackDecrement = 1, registersInOtherRegisters = false, sameValueUsed = false, savedRegisters = {{location = libunwind::kRegisterUnused, value = 0}, {location = libunwind::kRegisterUnused, value = 0}, {location = libunwind::kRegisterUnused, value = 0}, {location = libunwind::kRegisterInCFA, value = -48}, {location = libunwind::kRegisterUnused, value = 0}, {location = libunwind::kRegisterUnused, value = 0}, {location = libunwind::kRegisterInCFA, value = -16}, {location = libunwind::kRegisterUnused, value = 0}, {location = libunwind::kRegisterUnused, value = 0}, {location = libunwind::kRegisterUnused, value = 0}, {location = libunwind::kRegisterUnused, value = 0}, {location = libunwind::kRegisterUnused, value = 0}, {location = libunwind::kRegisterInCFA, value = -40}, {location = libunwind::kRegisterUnused, value = 0}, {location = libunwind::kRegisterInCFA, value = -32}, {location = libunwind::kRegisterInCFA, value = -24}, {location = libunwind::kRegisterInCFA, value = -8}, {location = libunwind::kRegisterUnused, value = 0} <repeats 16 times>}}\r\n2022-01-11 13:26:34         fdeInfo = {fdeStart = 174863768, fdeLength = 64, fdeInstructions = 174863785, pcStart = 202615776, pcEnd = 202616495, lsda = 0}\r\n2022-01-11 13:26:34         cieInfo = {cieStart = 174806504, cieLength = 24, cieInstructions = 174806521, pointerEncoding = 27 '\\033', lsdaEncoding = 255 '\\377', personalityEncoding = 0 '\\000', personalityOffsetInCIE = 0 '\\000', personality = 0, codeAlignFactor = 1, dataAlignFactor = -8, isSignalFrame = false, fdesHaveAugmentationData = true, returnAddressRegister = 16 '\\020'}\r\n2022-01-11 13:26:34 #2  0x0000000037ea93c1 in libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_x86_64>::stepWithDwarfFDE (this=0x7fb10f37d7c0) at ../contrib/libunwind/src/UnwindCursor.hpp:933\r\n2022-01-11 13:26:34 No locals.\r\n2022-01-11 13:26:34 #3  libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_x86_64>::step (this=0x7fb10f37d7c0) at ../contrib/libunwind/src/UnwindCursor.hpp:1987\r\n2022-01-11 13:26:35         result = <optimized out>\r\n2022-01-11 13:26:35 #4  0x0000000037ea9008 in unw_backtrace (buffer=0x7fb10f37de50, size=45) at ../contrib/libunwind/src/libunwind.cpp:297\r\n2022-01-11 13:26:35         context = {data = {140398441258560, 140398441258576, 140398441258880, 140398441258880, 140398441257160, 45, 140398441257376, 140398441256896, 5, 4, 32, 17551952608247, 17940362863843014904, 17549805157184, 140398441258576, 45, 938119046, 140398441257872, 17549805157236, 10, 105828009323536}}\r\n2022-01-11 13:26:35         cursor = {data = {159365944, 967060832, 140398441264864, 140402494883840, 17549805158105, 32, 140398441264832, 32, 4294967297, 140398441262544, 0, 6984974018888649, 0, 83576157, 20484, 140398441264704, 140402494881792, 140398441262624, 202616187, 140398441257872, 17549805157236, 10, 105828009323536, 202615776, 202616495, 0, 0, 0, 0, 274945015808, 174863768, 202109440, 0}}\r\n2022-01-11 13:26:35         current = 5\r\n2022-01-11 13:26:35         ip = <optimized out>\r\n2022-01-11 13:26:35 #5  0x000000000c2341cd in StackTrace::tryCapture (this=0x7fb10f37de40) at ../src/Common/StackTrace.cpp:305\r\n2022-01-11 13:26:35 No locals.\r\n2022-01-11 13:26:35 #6  StackTrace::StackTrace (this=0x7fb10f37de40, signal_context=...) at ../src/Common/StackTrace.cpp:271\r\n2022-01-11 13:26:35         caller_address = <optimized out>\r\n2022-01-11 13:26:35 #7  0x0000000024eb6706 in DB::(anonymous namespace)::signalHandler (info=<optimized out>, context=<optimized out>) at ../src/Storages/System/StorageSystemStackTrace.cpp:84\r\n2022-01-11 13:26:35         signal_context = {uc_flags = 7, uc_link = 0x0, uc_stack = {ss_sp = 0x7fb2dc13d000, ss_flags = 0, ss_size = 32768}, uc_mcontext = {gregs = {0, 6984974018888649, 0, 83576157, 140398694187104, 140398441264704, 140398441264832, 140398694187104, 140398441264832, 32, 140398441264656, 32, 32, 140398441264864, 17549805158105, 140398441262536, 202616496, 514, 12103423998558259, 0, 0, 20484, 0}, fpregs = 0x7fb10f37e280, __reserved1 = {203851955, 140398441259840, 204852388, 1172321806, 83576150, 204851136, 2897561901077514607, 4720223906611369058}}, uc_sigmask = {__val = {20484, 34, 4294967295, 544, 2155, 0 <repeats 11 times>}}, __fpregs_mem = {cwd = 0, swd = 0, ftw = 0, fop = 0, rip = 4985484787500187648, rdp = 4985484787500187648, mxcsr = 35652479, mxcr_mask = 0, _st = {{significand = {37513, 12342, 0, 0}, exponent = 0, __glibc_reserved1 = {0, 0, 0}}, {significand = {8103, 0, 65535, 0}, exponent = 0, __glibc_reserved1 = {0, 0, 0}}, {significand = {0, 0, 0, 0}, exponent = 0, __glibc_reserved1 = {0, 0, 0}}, {significand = {0, 0, 0, 0}, exponent = 0, __glibc_reserved1 = {0, 0, 0}}, {significand = {0, 0, 0, 0}, exponent = 0, __glibc_reserved1 = {0, 0, 0}}, {significand = {0, 0, 0, 0}, exponent = 0, __glibc_reserved1 = {0, 0, 0}}, {significand = {0, 0, 0, 0}, exponent = 0, __glibc_reserved1 = {0, 0, 0}}, {significand = {0, 0, 0, 0}, exponent = 55050, __glibc_reserved1 = {28835, 2621, 41943}}}, _xmm = {{element = {16376, 0, 1889785610, 2748779069}}, {element = {16377, 0, 0, 0}}, {element = {0, 0, 0, 0}}, {element = {0, 0, 1651340654, 740913765}}, {element = {1836412448, 695362914, 1885959276, 1948809580}}, {element = {1953384815, 674641202, 1720771303, 1098993586}}, {element = {0, 0, 1720771303, 1095847858}}, {element = {0, 0, 0, 0}}, {element = {0, 0, 0, 0}}, {element = {0, 0, 0, 0}}, {element = {0, 0, 4, 0}}, {element = {4, 0, 3753902080, 3196848895}}, {element = {0, 0, 0, 1127219200}}, {element = {0, 1127219200, 0, 1160773632}}, {element = {0, 1160773632, 1048576, 1160773632}}, {element = {1048576, 1160773632, 0, 1005584384}}}, __glibc_reserved1 = {0, 1005584384, 0, 0, 0, 0, 255324296, 32689, 202616521, 0, 518, 0, 51, 2818048, 0, 0, 0, 0, 1179670611, 2700, 767, 0, 2696, 0}}}\r\n2022-01-11 13:26:35         saved_errno = 0\r\n2022-01-11 13:26:35         notification_num = <optimized out>\r\n2022-01-11 13:26:35         expected = false\r\n2022-01-11 13:26:35         query_id = <optimized out>\r\n2022-01-11 13:26:35         res = <optimized out>\r\n2022-01-11 13:26:35 #8  <signal handler called>\r\n2022-01-11 13:26:35 No symbol table info available.\r\n2022-01-11 13:26:35 #9  0x000000000c13aeb0 in __asan::QuickCheckForUnpoisonedRegion(unsigned long, unsigned long) ()\r\n2022-01-11 13:26:35 No symbol table info available.\r\n2022-01-11 13:26:35 #10 0x000000000c13ad7b in __asan_memcpy ()\r\n2022-01-11 13:26:35 No symbol table info available.\r\n2022-01-11 13:26:35 #11 0x0000000016359417 in void DB::impl_::BinaryOperation<wide::integer<256ul, int>, unsigned long, DB::MultiplyImpl<wide::integer<256ul, int>, unsigned long>, wide::integer<256ul, int> >::process<(DB::impl_::OpCase)0>(wide::integer<256ul, int> const*, unsigned long const*, wide::integer<256ul, int>*, unsigned long, DB::PODArray<char8_t, 4096ul, Allocator<false, false>, 15ul, 16ul> const*) ()\r\n2022-01-11 13:26:35 No symbol table info available.\r\n2022-01-11 13:26:35 #12 0x00000000165cc789 in COW<DB::IColumn>::immutable_ptr<DB::IColumn> DB::FunctionBinaryArithmetic<DB::MultiplyImpl, DB::NameMultiply, true, true, false>::executeNumeric<DB::DataTypeNumber<wide::integer<256ul, int> >, DB::DataTypeNumber<unsigned long> >(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName> > const&, DB::DataTypeNumber<wide::integer<256ul, int> > const&, DB::DataTypeNumber<unsigned long> const&, DB::PODArray<char8_t, 4096ul, Allocator<false, false>, 15ul, 16ul> const*) const ()\r\n2022-01-11 13:26:35 No symbol table info available.\r\n2022-01-11 13:26:35 #13 0x00000000165c6eeb in bool DB::castTypeToEither<DB::DataTypeNumber<char8_t>, DB::DataTypeNumber<unsigned short>, DB::DataTypeNumber<unsigned int>, DB::DataTypeNumber<unsigned long>, DB::DataTypeNumber<wide::integer<128ul, unsigned int> >, DB::DataTypeNumber<wide::integer<256ul, unsigned int> >, DB::DataTypeNumber<signed char>, DB::DataTypeNumber<short>, DB::DataTypeNumber<int>, DB::DataTypeNumber<long>, DB::DataTypeNumber<wide::integer<128ul, int> >, DB::DataTypeNumber<wide::integer<256ul, int> >, DB::DataTypeDecimal<DB::Decimal<int> >, DB::DataTypeDecimal<DB::Decimal<long> >, DB::DataTypeDecimal<DB::Decimal<wide::integer<128ul, int> > >, DB::DataTypeDecimal<DB::Decimal<wide::integer<256ul, int> > >, DB::DataTypeDate, DB::DataTypeDateTime, DB::DataTypeFixedString, DB::DataTypeString, DB::DataTypeNumber<float>, DB::DataTypeNumber<double>, DB::IDataType, DB::FunctionBinaryArithmetic<DB::MultiplyImpl, DB::NameMultiply, true, true, false>::castBothTypes<DB::FunctionBinaryArithmetic<DB::MultiplyImpl, DB::NameMultiply, true, true, false>::executeImpl2(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName> > const&, std::__1::shared_ptr<DB::IDataType const> const&, unsigned long, DB::PODArray<char8_t, 4096ul, Allocator<false, false>, 15ul, 16ul> const*) const::{lambda(auto:1 const&, auto:2 const&)#1}>(DB::IDataType const*, DB::FunctionBinaryArithmetic<DB::MultiplyImpl, DB::NameMultiply, true, true, false>::executeImpl2(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName> > const&, std::__1::shared_ptr<DB::IDataType const> const&, unsigned long, DB::PODArray<char8_t, 4096ul, Allocator<false, false>, 15ul, 16ul> const*) const::{lambda(auto:1 const&, auto:2 const&)#1}, DB::FunctionBinaryArithmetic<DB::MultiplyImpl, DB::NameMultiply, true, true, false>::executeImpl2(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName> > const&, std::__1::shared_ptr<DB::IDataType const> const&, unsigned long, DB::PODArray<char8_t, 4096ul, Allocator<false, false>, 15ul, 16ul> const*) const::{lambda(auto:1 const&, auto:2 const&)#1}&&)::{lambda(auto:1 const&)#1}::operator()<DB::DataTypeNumber<wide::integer<256ul, int> > >(DB::DataTypeNumber<wide::integer<256ul, int> > const&) const::{lambda(auto:1 const&)#1}>(TypeList<DB::DataTypeNumber<char8_t>, DB::DataTypeNumber<unsigned short>, DB::DataTypeNumber<unsigned int>, DB::DataTypeNumber<unsigned long>, DB::DataTypeNumber<wide::integer<128ul, unsigned int> >, DB::DataTypeNumber<wide::integer<256ul, unsigned int> >, DB::DataTypeNumber<signed char>, DB::DataTypeNumber<short>, DB::DataTypeNumber<int>, DB::DataTypeNumber<long>, DB::DataTypeNumber<wide::integer<128ul, int> >, DB::DataTypeNumber<wide::integer<256ul, int> >, DB::DataTypeDecimal<DB::Decimal<int> >, DB::DataTypeDecimal<DB::Decimal<long> >, DB::DataTypeDecimal<DB::Decimal<wide::integer<128ul, int> > >, DB::DataTypeDecimal<DB::Decimal<wide::integer<256ul, int> > >, DB::DataTypeDate, DB::DataTypeDateTime, DB::DataTypeFixedString, DB::DataTypeString, DB::DataTypeNumber<float>, DB::DataTypeNumber<double> >, DB::IDataType const*, DB::FunctionBinaryArithmetic<DB::MultiplyImpl, DB::NameMultiply, true, true, false>::castBothTypes<DB::FunctionBinaryArithmetic<DB::MultiplyImpl, DB::NameMultiply, true, true, false>::executeImpl2(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName> > const&, std::__1::shared_ptr<DB::IDataType const> const&, unsigned long, DB::PODArray<char8_t, 4096ul, Allocator<false, false>, 15ul, 16ul> const*) const::{lambda(auto:1 const&, auto:2 const&)#1}>(DB::IDataType const*, DB::FunctionBinaryArithmetic<DB::MultiplyImpl, DB::NameMultiply, true, true, false>::executeImpl2(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName> > const&, std::__1::shared_ptr<DB::IDataType const> const&, unsigned long, DB::PODArray<char8_t, 4096ul, Allocator<false, false>, 15ul, 16ul> const*) const::{lambda(auto:1 const&, auto:2 const&)#1}, DB::FunctionBinaryArithmetic<DB::MultiplyImpl, DB::NameMultiply, true, true, false>::executeImpl2(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName> > const&, std::__1::shared_ptr<DB::IDataType const> const&, unsigned long, DB::PODArray<char8_t, 4096ul, Allocator<false, false>, 15ul, 16ul> const*) const::{lambda(auto:1 const&, auto:2 const&)#1}&&)::{lambda(auto:1 const&)#1}::operator()<DB::DataTypeNumber<wide::integer<256ul, int> > >(DB::DataTypeNumber<wide::integer<256ul, int> > const&) const::{lambda(auto:1 const&)#1}&&) ()\r\n2022-01-11 13:26:35 No symbol table info available.\r\n2022-01-11 13:26:35 #14 0x00000000164c0fab in bool DB::castTypeToEither<DB::DataTypeNumber<char8_t>, DB::DataTypeNumber<unsigned short>, DB::DataTypeNumber<unsigned int>, DB::DataTypeNumber<unsigned long>, DB::DataTypeNumber<wide::integer<128ul, unsigned int> >, DB::DataTypeNumber<wide::integer<256ul, unsigned int> >, DB::DataTypeNumber<signed char>, DB::DataTypeNumber<short>, DB::DataTypeNumber<int>, DB::DataTypeNumber<long>, DB::DataTypeNumber<wide::integer<128ul, int> >, DB::DataTypeNumber<wide::integer<256ul, int> >, DB::DataTypeDecimal<DB::Decimal<int> >, DB::DataTypeDecimal<DB::Decimal<long> >, DB::DataTypeDecimal<DB::Decimal<wide::integer<128ul, int> > >, DB::DataTypeDecimal<DB::Decimal<wide::integer<256ul, int> > >, DB::DataTypeDate, DB::DataTypeDateTime, DB::DataTypeFixedString, DB::DataTypeString, DB::DataTypeNumber<float>, DB::DataTypeNumber<double>, DB::IDataType, DB::FunctionBinaryArithmetic<DB::MultiplyImpl, DB::NameMultiply, true, true, false>::castBothTypes<DB::FunctionBinaryArithmetic<DB::MultiplyImpl, DB::NameMultiply, true, true, false>::executeImpl2(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName> > const&, std::__1::shared_ptr<DB::IDataType const> const&, unsigned long, DB::PODArray<char8_t, 4096ul, Allocator<false, false>, 15ul, 16ul> const*) const::{lambda(auto:1 const&, auto:2 const&)#1}>(DB::IDataType const*, DB::FunctionBinaryArithmetic<DB::MultiplyImpl, DB::NameMultiply, true, true, false>::executeImpl2(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName> > const&, std::__1::shared_ptr<DB::IDataType const> const&, unsigned long, DB::PODArray<char8_t, 4096ul, Allocator<false, false>, 15ul, 16ul> const*) const::{lambda(auto:1 const&, auto:2 const&)#1}, DB::FunctionBinaryArithmetic<DB::MultiplyImpl, DB::NameMultiply, true, true, false>::executeImpl2(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName> > const&, std::__1::shared_ptr<DB::IDataType const> const&, unsigned long, DB::PODArray<char8_t, 4096ul, Allocator<false, false>, 15ul, 16ul> const*) const::{lambda(auto:1 const&, auto:2 const&)#1}&&)::{lambda(auto:1 const&)#1}>(TypeList<DB::DataTypeNumber<char8_t>, DB::DataTypeNumber<unsigned short>, DB::DataTypeNumber<unsigned int>, DB::DataTypeNumber<unsigned long>, DB::DataTypeNumber<wide::integer<128ul, unsigned int> >, DB::DataTypeNumber<wide::integer<256ul, unsigned int> >, DB::DataTypeNumber<signed char>, DB::DataTypeNumber<short>, DB::DataTypeNumber<int>, DB::DataTypeNumber<long>, DB::DataTypeNumber<wide::integer<128ul, int> >, DB::DataTypeNumber<wide::integer<256ul, int> >, DB::DataTypeDecimal<DB::Decimal<int> >, DB::DataTypeDecimal<DB::Decimal<long> >, DB::DataTypeDecimal<DB::Decimal<wide::integer<128ul, int> > >, DB::DataTypeDecimal<DB::Decimal<wide::integer<256ul, int> > >, DB::DataTypeDate, DB::DataTypeDateTime, DB::DataTypeFixedString, DB::DataTypeString, DB::DataTypeNumber<float>, DB::DataTypeNumber<double> >, DB::IDataType const*, DB::FunctionBinaryArithmetic<DB::MultiplyImpl, DB::NameMultiply, true, true, false>::castBothTypes<DB::FunctionBinaryArithmetic<DB::MultiplyImpl, DB::NameMultiply, true, true, false>::executeImpl2(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName> > const&, std::__1::shared_ptr<DB::IDataType const> const&, unsigned long, DB::PODArray<char8_t, 4096ul, Allocator<false, false>, 15ul, 16ul> const*) const::{lambda(auto:1 const&, auto:2 const&)#1}>(DB::IDataType const*, DB::FunctionBinaryArithmetic<DB::MultiplyImpl, DB::NameMultiply, true, true, false>::executeImpl2(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName> > const&, std::__1::shared_ptr<DB::IDataType const> const&, unsigned long, DB::PODArray<char8_t, 4096ul, Allocator<false, false>, 15ul, 16ul> const*) const::{lambda(auto:1 const&, auto:2 const&)#1}, DB::FunctionBinaryArithmetic<DB::MultiplyImpl, DB::NameMultiply, true, true, false>::executeImpl2(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName> > const&, std::__1::shared_ptr<DB::IDataType const> const&, unsigned long, DB::PODArray<char8_t, 4096ul, Allocator<false, false>, 15ul, 16ul> const*) const::{lambda(auto:1 const&, auto:2 const&)#1}&&)::{lambda(auto:1 const&)#1}&&) ()\r\n2022-01-11 13:26:35 No symbol table info available.\r\n2022-01-11 13:26:35 #15 0x00000000164bf5e5 in DB::FunctionBinaryArithmetic<DB::MultiplyImpl, DB::NameMultiply, true, true, false>::executeImpl2(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName> > const&, std::__1::shared_ptr<DB::IDataType const> const&, unsigned long, DB::PODArray<char8_t, 4096ul, Allocator<false, false>, 15ul, 16ul> const*) const ()\r\n2022-01-11 13:26:35 No symbol table info available.\r\n2022-01-11 13:26:35 #16 0x00000000164bc021 in DB::FunctionBinaryArithmetic<DB::MultiplyImpl, DB::NameMultiply, true, true, false>::executeImpl(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName> > const&, std::__1::shared_ptr<DB::IDataType const> const&, unsigned long) const ()\r\n2022-01-11 13:26:35 No symbol table info available.\r\n2022-01-11 13:26:35 #17 0x00000000128d10ec in DB::FunctionToExecutableFunctionAdaptor::executeImpl(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName> > const&, std::__1::shared_ptr<DB::IDataType const> const&, unsigned long) const ()\r\n2022-01-11 13:26:36 No symbol table info available.\r\n2022-01-11 13:26:36 #18 0x0000000025203303 in DB::IExecutableFunction::executeWithoutLowCardinalityColumns (this=0x603000dcb7c0, args=..., result_type=..., input_rows_count=65505, dry_run=<optimized out>) at ../src/Functions/IFunction.cpp:216\r\n2022-01-11 13:26:36         res = {<boost::intrusive_ptr<DB::IColumn const>> = {px = 0x0}, <No data fields>}\r\n2022-01-11 13:26:36 #19 0x0000000025204225 in DB::IExecutableFunction::executeWithoutSparseColumns (this=<optimized out>, arguments=..., result_type=..., input_rows_count=<optimized out>, dry_run=<optimized out>) at ../src/Functions/IFunction.cpp:264\r\n2022-01-11 13:26:36         res_low_cardinality_type = <optimized out>\r\n2022-01-11 13:26:36         columns_without_low_cardinality = {<std::__1::__vector_base<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName> >> = {<std::__1::__vector_base_common<true>> = {<No data fields>}, __begin_ = 0x608001782420, __end_ = 0x608001782480, __end_cap_ = {<std::__1::__compressed_pair_elem<DB::ColumnWithTypeAndName*, 0, false>> = {__value_ = 0x608001782480}, <std::__1::__compressed_pair_elem<std::__1::allocator<DB::ColumnWithTypeAndName>, 1, true>> = {<std::__1::allocator<DB::ColumnWithTypeAndName>> = {<No data fields>}, <No data fields>}, <No data fields>}}, <No data fields>}\r\n2022-01-11 13:26:36         result = <optimized out>\r\n2022-01-11 13:26:36 #20 0x0000000025207fcf in DB::IExecutableFunction::execute (this=0x20, arguments=..., result_type=..., input_rows_count=<optimized out>, dry_run=<optimized out>) at ../src/Functions/IFunction.cpp:334\r\n2022-01-11 13:26:36         columns_without_sparse = {<std::__1::__vector_base<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName> >> = {<std::__1::__vector_base_common<true>> = {<No data fields>}, __begin_ = 0x608002f5d7a0, __end_ = 0x608002f5d800, __end_cap_ = {<std::__1::__compressed_pair_elem<DB::ColumnWithTypeAndName*, 0, false>> = {__value_ = 0x608002f5d800}, <std::__1::__compressed_pair_elem<std::__1::allocator<DB::ColumnWithTypeAndName>, 1, true>> = {<std::__1::allocator<DB::ColumnWithTypeAndName>> = {<No data fields>}, <No data fields>}, <No data fields>}}, <No data fields>}\r\n2022-01-11 13:26:36         sparse_column_position = <optimized out>\r\n2022-01-11 13:26:36         num_full_columns = <optimized out>\r\n2022-01-11 13:26:36         num_sparse_columns = <optimized out>\r\n2022-01-11 13:26:36 #21 0x00000000263ac887 in DB::executeAction (action=..., execution_context=..., dry_run=false) at ../src/Interpreters/ExpressionActions.cpp:601\r\n2022-01-11 13:26:36         arguments = {<std::__1::__vector_base<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName> >> = {<std::__1::__vector_base_common<true>> = {<No data fields>}, __begin_ = 0x60800402ee20, __end_ = 0x60800402ee80, __end_cap_ = {<std::__1::__compressed_pair_elem<DB::ColumnWithTypeAndName*, 0, false>> = {__value_ = 0x60800402ee80}, <std::__1::__compressed_pair_elem<std::__1::allocator<DB::ColumnWithTypeAndName>, 1, true>> = {<std::__1::allocator<DB::ColumnWithTypeAndName>> = {<No data fields>}, <No data fields>}, <No data fields>}}, <No data fields>}\r\n2022-01-11 13:26:36         res_column = @0x61000127f170: {column = {<boost::intrusive_ptr<DB::IColumn const>> = {px = 0x0}, <No data fields>}, type = {__ptr_ = 0x6070022567b8, __cntrl_ = 0x6070022567a0}, name = {<std::__1::__basic_string_common<true>> = {<No data fields>}, static __short_mask = 128, static __long_mask = 9223372036854775808, __r_ = {<std::__1::__compressed_pair_elem<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, 0, false>> = {__value_ = {{__l = {__data_ = 0x604000416e50 \"multiply(toInt256(number), number)\", __size_ = 34, __cap_ = 9223372036854775856}, __s = {__data_ = \"PnA\\000@`\\000\\000\\\"\\000\\000\\000\\000\\000\\000\\000\\060\\000\\000\\000\\000\\000\", {<std::__1::__padding<char, 1>> = {<No data fields>}, __size_ = 128 '\\200'}}, __r = {__words = {105827998461520, 34, 9223372036854775856}}}}}, <std::__1::__compressed_pair_elem<std::__1::allocator<char>, 1, true>> = {<std::__1::allocator<char>> = {<No data fields>}, <No data fields>}, <No data fields>}, static npos = 18446744073709551615}}\r\n2022-01-11 13:26:36         inputs = <optimized out>\r\n2022-01-11 13:26:36         columns = @0x7fb10f381148: {<std::__1::__vector_base<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName> >> = {<std::__1::__vector_base_common<true>> = {<No data fields>}, __begin_ = 0x61000127f140, __end_ = 0x61000127f200, __end_cap_ = {<std::__1::__compressed_pair_elem<DB::ColumnWithTypeAndName*, 0, false>> = {__value_ = 0x61000127f200}, <std::__1::__compressed_pair_elem<std::__1::allocator<DB::ColumnWithTypeAndName>, 1, true>> = {<std::__1::allocator<DB::ColumnWithTypeAndName>> = {<No data fields>}, <No data fields>}, <No data fields>}}, <No data fields>}\r\n2022-01-11 13:26:36         num_rows = @0x7fb10f381178: 65505\r\n2022-01-11 13:26:36         pos = <optimized out>\r\n2022-01-11 13:26:36         arguments = <optimized out>\r\n2022-01-11 13:26:36         res_column = <optimized out>\r\n2022-01-11 13:26:36         i = <optimized out>\r\n2022-01-11 13:26:36         arg = <optimized out>\r\n2022-01-11 13:26:36         array_join_key = <optimized out>\r\n2022-01-11 13:26:36         array_join_key_pos = <optimized out>\r\n2022-01-11 13:26:36         array = <optimized out>\r\n2022-01-11 13:26:36         res_column = <optimized out>\r\n2022-01-11 13:26:36         __range3 = <optimized out>\r\n2022-01-11 13:26:36         __begin3 = <optimized out>\r\n2022-01-11 13:26:36         __end3 = <optimized out>\r\n2022-01-11 13:26:36         column = <optimized out>\r\n2022-01-11 13:26:36         __range3 = <optimized out>\r\n2022-01-11 13:26:36         __begin3 = <optimized out>\r\n2022-01-11 13:26:36         __end3 = <optimized out>\r\n2022-01-11 13:26:36         column = <optimized out>\r\n2022-01-11 13:26:36         res_column = <optimized out>\r\n2022-01-11 13:26:36 #22 DB::ExpressionActions::execute (this=<optimized out>, block=..., num_rows=<optimized out>, dry_run=<optimized out>) at ../src/Interpreters/ExpressionActions.cpp:718\r\n2022-01-11 13:26:36         e = <optimized out>\r\n2022-01-11 13:26:36         action = <optimized out>\r\n2022-01-11 13:26:36         __range1 = @0x6120025093e8: {<std::__1::__vector_base<DB::ExpressionActions::Action, std::__1::allocator<DB::ExpressionActions::Action> >> = {<std::__1::__vector_base_common<true>> = {<No data fields>}, __begin_ = 0x6130001b62c0, __end_ = 0x6130001b63e0, __end_cap_ = {<std::__1::__compressed_pair_elem<DB::ExpressionActions::Action*, 0, false>> = {__value_ = 0x6130001b6440}, <std::__1::__compressed_pair_elem<std::__1::allocator<DB::ExpressionActions::Action>, 1, true>> = {<std::__1::allocator<DB::ExpressionActions::Action>> = {<No data fields>}, <No data fields>}, <No data fields>}}, <No data fields>}\r\n2022-01-11 13:26:36         __begin1 = <optimized out>\r\n2022-01-11 13:26:36         __end1 = {__i = 0x6130001b63e0}\r\n2022-01-11 13:26:36         execution_context = {inputs = @0x7fb10f381640, columns = {<std::__1::__vector_base<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName> >> = {<std::__1::__vector_base_common<true>> = {<No data fields>}, __begin_ = 0x61000127f140, __end_ = 0x61000127f200, __end_cap_ = {<std::__1::__compressed_pair_elem<DB::ColumnWithTypeAndName*, 0, false>> = {__value_ = 0x61000127f200}, <std::__1::__compressed_pair_elem<std::__1::allocator<DB::ColumnWithTypeAndName>, 1, true>> = {<std::__1::allocator<DB::ColumnWithTypeAndName>> = {<No data fields>}, <No data fields>}, <No data fields>}}, <No data fields>}, inputs_pos = {<std::__1::__vector_base<long, std::__1::allocator<long> >> = {<std::__1::__vector_base_common<true>> = {<No data fields>}, __begin_ = 0x60200065c950, __end_ = 0x60200065c958, __end_cap_ = {<std::__1::__compressed_pair_elem<long*, 0, false>> = {__value_ = 0x60200065c958}, <std::__1::__compressed_pair_elem<std::__1::allocator<long>, 1, true>> = {<std::__1::allocator<long>> = {<No data fields>}, <No data fields>}, <No data fields>}}, <No data fields>}, num_rows = 65505}\r\n2022-01-11 13:26:36         res = {data = {<std::__1::__vector_base<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName> >> = {<std::__1::__vector_base_common<true>> = {<No data fields>}, __begin_ = 0x7fb10f381460, __end_ = 0x0, __end_cap_ = {<std::__1::__compressed_pair_elem<DB::ColumnWithTypeAndName*, 0, false>> = {__value_ = 0x7fb10f3815b0}, <std::__1::__compressed_pair_elem<std::__1::allocator<DB::ColumnWithTypeAndName>, 1, true>> = {<std::__1::allocator<DB::ColumnWithTypeAndName>> = {<No data fields>}, <No data fields>}, <No data fields>}}, <No data fields>}, index_by_name = {__table_ = {__bucket_list_ = {__ptr_ = {<std::__1::__compressed_pair_elem<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::string, unsigned long>, void*>*>**, 0, false>> = {__value_ = 0x2558497b <DB::Block::cloneWithColumns(std::__1::vector<COW<DB::IColumn>::immutable_ptr<DB::IColumn>, std::__1::allocator<COW<DB::IColumn>::immutable_ptr<DB::IColumn> > > const&) const+1147>}, <std::__1::__compressed_pair_elem<std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::string, unsigned long>, void*>*>*> >, 1, false>> = {__value_ = {__data_ = {<std::__1::__compressed_pair_elem<unsigned long, 0, false>> = {__value_ = 1172321806}, <std::__1::__compressed_pair_elem<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::string, unsigned long>, void*>*>*>, 1, true>> = {<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::string, unsigned long>, void*>*>*>> = {<No data fields>}, <No data fields>}, <No data fields>}}}, <No data fields>}}, __p1_ = {<std::__1::__compressed_pair_elem<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::string, unsigned long>, void*>*>, 0, false>> = {__value_ = {__next_ = 0x53bc7cf}}, <std::__1::__compressed_pair_elem<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::string, unsigned long>, void*> >, 1, true>> = {<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::string, unsigned long>, void*> >> = {<No data fields>}, <No data fields>}, <No data fields>}, __p2_ = {<std::__1::__compressed_pair_elem<unsigned long, 0, false>> = {__value_ = 626541824}, <std::__1::__compressed_pair_elem<std::__1::__unordered_map_hasher<std::__1::string, std::__1::__hash_value_type<std::__1::string, unsigned long>, std::__1::hash<std::__1::string>, std::__1::equal_to<std::__1::string>, true>, 1, true>> = {<std::__1::__unordered_map_hasher<std::__1::string, std::__1::__hash_value_type<std::__1::string, unsigned long>, std::__1::hash<std::__1::string>, std::__1::equal_to<std::__1::string>, true>> = {<std::__1::hash<std::__1::string>> = {<std::__1::unary_function<std::__1::string, unsigned long>> = {<No data fields>}, <No data fields>}, <No data fields>}, <No data fields>}, <No data fields>}, __p3_ = {<std::__1::__compressed_pair_elem<float, 0, false>> = {__value_ = 1.08057459e-31}, <std::__1::__compressed_pair_elem<std::__1::__unordered_map_equal<std::__1::string, std::__1::__hash_value_type<std::__1::string, unsigned long>, std::__1::equal_to<std::__1::string>, std::__1::hash<std::__1::string>, true>, 1, true>> = {<std::__1::__unordered_map_equal<std::__1::string, std::__1::__hash_value_type<std::__1::string, unsigned long>, std::__1::equal_to<std::__1::string>, std::__1::hash<std::__1::string>, true>> = {<std::__1::equal_to<std::__1::string>> = {<std::__1::binary_function<std::__1::string, std::__1::string, bool>> = {<No data fields>}, <No data fields>}, <No data fields>}, <No data fields>}, <No data fields>}}}, info = {is_overflows = true, bucket_num = 0}}\r\n2022-01-11 13:26:36 #23 0x0000000029ddf069 in DB::FilterTransform::transform (this=<optimized out>, chunk=...) at ../src/Processors/Transforms/FilterTransform.cpp:109\r\n2022-01-11 13:26:36         block = {data = {<std::__1::__vector_base<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName> >> = {<std::__1::__vector_base_common<true>> = {<No data fields>}, __begin_ = 0x604001399890, __end_ = 0x6040013998c0, __end_cap_ = {<std::__1::__compressed_pair_elem<DB::ColumnWithTypeAndName*, 0, false>> = {__value_ = 0x6040013998c0}, <std::__1::__compressed_pair_elem<std::__1::allocator<DB::ColumnWithTypeAndName>, 1, true>> = {<std::__1::allocator<DB::ColumnWithTypeAndName>> = {<No data fields>}, <No data fields>}, <No data fields>}}, <No data fields>}, index_by_name = {__table_ = {__bucket_list_ = {__ptr_ = {<std::__1::__compressed_pair_elem<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::string, unsigned long>, void*>*>**, 0, false>> = {__value_ = 0x6020010c00b0}, <std::__1::__compressed_pair_elem<std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::string, unsigned long>, void*>*>*> >, 1, false>> = {__value_ = {__data_ = {<std::__1::__compressed_pair_elem<unsigned long, 0, false>> = {__value_ = 2}, <std::__1::__compressed_pair_elem<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::string, unsigned long>, void*>*>*>, 1, true>> = {<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::string, unsigned long>, void*>*>*>> = {<No data fields>}, <No data fields>}, <No data fields>}}}, <No data fields>}}, __p1_ = {<std::__1::__compressed_pair_elem<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::string, unsigned long>, void*>*>, 0, false>> = {__value_ = {__next_ = 0x604002e96650}}, <std::__1::__compressed_pair_elem<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::string, unsigned long>, void*> >, 1, true>> = {<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::string, unsigned long>, void*> >> = {<No data fields>}, <No data fields>}, <No data fields>}, __p2_ = {<std::__1::__compressed_pair_elem<unsigned long, 0, false>> = {__value_ = 1}, <std::__1::__compressed_pair_elem<std::__1::__unordered_map_hasher<std::__1::string, std::__1::__hash_value_type<std::__1::string, unsigned long>, std::__1::hash<std::__1::string>, std::__1::equal_to<std::__1::string>, true>, 1, true>> = {<std::__1::__unordered_map_hasher<std::__1::string, std::__1::__hash_value_type<std::__1::string, unsigned long>, std::__1::hash<std::__1::string>, std::__1::equal_to<std::__1::string>, true>> = {<std::__1::hash<std::__1::string>> = {<std::__1::unary_function<std::__1::string, unsigned long>> = {<No data fields>}, <No data fields>}, <No data fields>}, <No data fields>}, <No data fields>}, __p3_ = {<std::__1::__compressed_pair_elem<float, 0, false>> = {__value_ = 1}, <std::__1::__compressed_pair_elem<std::__1::__unordered_map_equal<std::__1::string, std::__1::__hash_value_type<std::__1::string, unsigned long>, std::__1::equal_to<std::__1::string>, std::__1::hash<std::__1::string>, true>, 1, true>> = {<std::__1::__unordered_map_equal<std::__1::string, std::__1::__hash_value_type<std::__1::string, unsigned long>, std::__1::equal_to<std::__1::string>, std::__1::hash<std::__1::string>, true>> = {<std::__1::equal_to<std::__1::string>> = {<std::__1::binary_function<std::__1::string, std::__1::string, bool>> = {<No data fields>}, <No data fields>}, <No data fields>}, <No data fields>}, <No data fields>}}}, info = {is_overflows = false, bucket_num = -1}}\r\n2022-01-11 13:26:36         columns = {<std::__1::__vector_base<COW<DB::IColumn>::immutable_ptr<DB::IColumn>, std::__1::allocator<COW<DB::IColumn>::immutable_ptr<DB::IColumn> > >> = {<std::__1::__vector_base_common<true>> = {<No data fields>}, __begin_ = 0x6020006a29f0, __end_ = 0x6020006a29f0, __end_cap_ = {<std::__1::__compressed_pair_elem<COW<DB::IColumn>::immutable_ptr<DB::IColumn>*, 0, false>> = {__value_ = 0x6020006a29f8}, <std::__1::__compressed_pair_elem<std::__1::allocator<COW<DB::IColumn>::immutable_ptr<DB::IColumn> >, 1, true>> = {<std::__1::allocator<COW<DB::IColumn>::immutable_ptr<DB::IColumn> >> = {<No data fields>}, <No data fields>}, <No data fields>}}, <No data fields>}\r\n2022-01-11 13:26:36         filter_and_holder = {data = 0x7fb10f381860, data_holder = {<boost::intrusive_ptr<DB::IColumn const>> = {px = 0xff6a1e682f4}, <No data fields>}}\r\n2022-01-11 13:26:36         num_rows_before_filtration = <optimized out>\r\n2022-01-11 13:26:36         num_columns = <optimized out>\r\n2022-01-11 13:26:36         filter_column = <optimized out>\r\n2022-01-11 13:26:36         first_non_constant_column = <optimized out>\r\n2022-01-11 13:26:36         num_filtered_rows = <optimized out>\r\n2022-01-11 13:26:36 #24 0x000000002015b77e in DB::ISimpleTransform::transform (this=0x7fb10f37f6c0, input_chunk=..., output_chunk=...) at ../src/Processors/ISimpleTransform.h:37\r\n2022-01-11 13:26:36 No locals.\r\n2022-01-11 13:26:36 #25 0x00000000298ab318 in DB::ISimpleTransform::work (this=0x614001eca658) at ../src/Processors/ISimpleTransform.cpp:89\r\n2022-01-11 13:26:36 No locals.\r\n2022-01-11 13:26:36 #26 0x000000002990d806 in DB::executeJob (processor=0x614001eca658) at ../src/Processors/Executors/ExecutionThreadContext.cpp:45\r\n2022-01-11 13:26:36         exception = <optimized out>\r\n2022-01-11 13:26:36 #27 DB::ExecutionThreadContext::executeTask (this=<optimized out>) at ../src/Processors/Executors/ExecutionThreadContext.cpp:63\r\n2022-01-11 13:26:36 No locals.\r\n2022-01-11 13:26:36 #28 0x00000000298edce7 in DB::PipelineExecutor::executeStepImpl (this=<optimized out>, thread_num=<optimized out>, yield_flag=<optimized out>) at ../src/Processors/Executors/PipelineExecutor.cpp:213\r\n2022-01-11 13:26:37         yield = false\r\n2022-01-11 13:26:37         context = @0x60f000cde820: {async_tasks = {c = {<std::__1::__deque_base<DB::ExecutingGraph::Node*, std::__1::allocator<DB::ExecutingGraph::Node*> >> = {<std::__1::__deque_base_common<true>> = {<No data fields>}, static __block_size = <optimized out>, __map_ = {<std::__1::__split_buffer_common<true>> = {<No data fields>}, __first_ = 0x0, __begin_ = 0x0, __end_ = 0x0, __end_cap_ = {<std::__1::__compressed_pair_elem<DB::ExecutingGraph::Node***, 0, false>> = {__value_ = 0x0}, <std::__1::__compressed_pair_elem<std::__1::allocator<DB::ExecutingGraph::Node**>, 1, true>> = {<std::__1::allocator<DB::ExecutingGraph::Node**>> = {<No data fields>}, <No data fields>}, <No data fields>}}, __start_ = 0, __size_ = {<std::__1::__compressed_pair_elem<unsigned long, 0, false>> = {__value_ = 0}, <std::__1::__compressed_pair_elem<std::__1::allocator<DB::ExecutingGraph::Node*>, 1, true>> = {<std::__1::allocator<DB::ExecutingGraph::Node*>> = {<No data fields>}, <No data fields>}, <No data fields>}}, <No data fields>}}, has_async_tasks = {<std::__1::__atomic_base<bool, false>> = {__a_ = {<std::__1::__cxx_atomic_base_impl<bool>> = {__a_value = false}, <No data fields>}, static is_always_lock_free = <optimized out>}, <No data fields>}, condvar = {__cv_ = {__data = {{__wseq = 0, __wseq32 = {__low = 0, __high = 0}}, {__g1_start = 0, __g1_start32 = {__low = 0, __high = 0}}, __g_refs = {0, 0}, __g_size = {0, 0}, __g1_orig_size = 0, __wrefs = 0, __g_signals = {0, 0}}, __size = '\\000' <repeats 47 times>, __align = 0}}, mutex = {__m_ = {__data = {__lock = 0, __count = 0, __owner = 0, __nusers = 0, __kind = 0, __spins = 0, __elision = 0, __list = {__prev = 0x0, __next = 0x0}}, __size = '\\000' <repeats 39 times>, __align = 0}}, wake_flag = false, node = 0x611003239c00, exception = {__ptr_ = 0x0}, thread_number = 17}\r\n2022-01-11 13:26:37 #29 0x00000000298f09e6 in DB::PipelineExecutor::executeSingleThread (this=0x61300462f7d8, thread_num=32) at ../src/Processors/Executors/PipelineExecutor.cpp:178\r\n2022-01-11 13:26:37 No locals.\r\n2022-01-11 13:26:37 #30 DB::PipelineExecutor::executeImpl(unsigned long)::$_1::operator()() const (this=<optimized out>) at ../src/Processors/Executors/PipelineExecutor.cpp:311\r\n2022-01-11 13:26:37         scope_exit307 = {static is_nullable = false, function = {<No data fields>}}\r\n2022-01-11 13:26:37 #31 std::__1::__invoke_constexpr<DB::PipelineExecutor::executeImpl(unsigned long)::$_1&> (__f=...) at ../contrib/libcxx/include/type_traits:3682\r\n2022-01-11 13:26:37 No locals.\r\n2022-01-11 13:26:37 #32 std::__1::__apply_tuple_impl<DB::PipelineExecutor::executeImpl(unsigned long)::$_1&, std::__1::tuple<>&>(DB::PipelineExecutor::executeImpl(unsigned long)::$_1&, std::__1::tuple<>&, std::__1::__tuple_indices<>) (__f=..., __t=...) at ../contrib/libcxx/include/tuple:1415\r\n2022-01-11 13:26:37 No locals.\r\n2022-01-11 13:26:37 #33 std::__1::apply<DB::PipelineExecutor::executeImpl(unsigned long)::$_1&, std::__1::tuple<>&>(DB::PipelineExecutor::executeImpl(unsigned long)::$_1&, std::__1::tuple<>&) (__f=..., __t=...) at ../contrib/libcxx/include/tuple:1424\r\n2022-01-11 13:26:37 No locals.\r\n2022-01-11 13:26:37 #34 ThreadFromGlobalPool::ThreadFromGlobalPool<DB::PipelineExecutor::executeImpl(unsigned long)::$_1>(DB::PipelineExecutor::executeImpl(unsigned long)::$_1&&)::{lambda()#1}::operator()() (this=<optimized out>) at ../src/Common/ThreadPool.h:188\r\n2022-01-11 13:26:38         function = {this = 0x61300462f7d8, thread_group = {__ptr_ = 0x614005376658, __cntrl_ = 0x614005376640}, thread_num = 17}\r\n2022-01-11 13:26:40         thread_status = {<boost::noncopyable_::noncopyable> = {<boost::noncopyable_::base_token> = {<No data fields>}, <No data fields>}, thread_id = 6322, os_thread_priority = 0, performance_counters = {counters = 0x61c006972080, counters_holder = {__ptr_ = {<std::__1::__compressed_pair_elem<std::__1::atomic<unsigned long>*, 0, false>> = {__value_ = 0x61c006972080}, <std::__1::__compressed_pair_elem<std::__1::default_delete<std::__1::atomic<unsigned long> []>, 1, true>> = {<std::__1::default_delete<std::__1::atomic<unsigned long> []>> = {<No data fields>}, <No data fields>}, <No data fields>}}, parent = 0x614005376680, level = VariableContext::Thread, static num_counters = 238}, memory_tracker = {amount = {<std::__1::__atomic_base<long, true>> = {<std::__1::__atomic_base<long, false>> = {__a_ = {<std::__1::__cxx_atomic_base_impl<long>> = {__a_value = 5766952}, <No data fields>}, static is_always_lock_free = <optimized out>}, <No data fields>}, <No data fields>}, peak = {<std::__1::__atomic_base<long, true>> = {<std::__1::__atomic_base<long, false>> = {__a_ = {<std::__1::__cxx_atomic_base_impl<long>> = {__a_value = 5766952}, <No data fields>}, static is_always_lock_free = <optimized out>}, <No data fields>}, <No data fields>}, hard_limit = {<std::__1::__atomic_base<long, true>> = {<std::__1::__atomic_base<long, false>> = {__a_ = {<std::__1::__cxx_atomic_base_impl<long>> = {__a_value = 0}, <No data fields>}, static is_always_lock_free = <optimized out>}, <No data fields>}, <No data fields>}, profiler_limit = {<std::__1::__atomic_base<long, true>> = {<std::__1::__atomic_base<long, false>> = {__a_ = {<std::__1::__cxx_atomic_base_impl<long>> = {__a_value = 0}, <No data fields>}, static is_always_lock_free = <optimized out>}, <No data fields>}, <No data fields>}, profiler_step = 0, fault_probability = 0, sample_probability = 0, parent = {<std::__1::__atomic_base<MemoryTracker*, false>> = {__a_ = {<std::__1::__cxx_atomic_base_impl<MemoryTracker*>> = {__a_value = 0x6140053766a0}, <No data fields>}, static is_always_lock_free = <optimized out>}, <No data fields>}, metric = {<std::__1::__atomic_base<unsigned long, true>> = {<std::__1::__atomic_base<unsigned long, false>> = {__a_ = {<std::__1::__cxx_atomic_base_impl<unsigned long>> = {__a_value = 77}, <No data fields>}, static is_always_lock_free = <optimized out>}, <No data fields>}, <No data fields>}, description_ptr = {<std::__1::__atomic_base<char const*, false>> = {__a_ = {<std::__1::__cxx_atomic_base_impl<char const*>> = {__a_value = 0x6744420 <str> \"(for thread)\"}, <No data fields>}, static is_always_lock_free = <optimized out>}, <No data fields>}, static USAGE_EVENT_NAME = <optimized out>, level = VariableContext::Thread}, untracked_memory = 0, untracked_memory_limit = 1048576, progress_in = {read_rows = {<std::__1::__atomic_base<unsigned long, true>> = {<std::__1::__atomic_base<unsigned long, false>> = {__a_ = {<std::__1::__cxx_atomic_base_impl<unsigned long>> = {__a_value = 4847370}, <No data fields>}, static is_always_lock_free = <optimized out>}, <No data fields>}, <No data fields>}, read_bytes = {<std::__1::__atomic_base<unsigned long, true>> = {<std::__1::__atomic_base<unsigned long, false>> = {__a_ = {<std::__1::__cxx_atomic_base_impl<unsigned long>> = {__a_value = 38778960}, <No data fields>}, static is_always_lock_free = <optimized out>}, <No data fields>}, <No data fields>}, read_raw_bytes = {<std::__1::__atomic_base<unsigned long, true>> = {<std::__1::__atomic_base<unsigned long, false>> = {__a_ = {<std::__1::__cxx_atomic_base_impl<unsigned long>> = {__a_value = 0}, <No data fields>}, static is_always_lock_free = <optimized out>}, <No data fields>}, <No data fields>}, total_rows_to_read = {<std::__1::__atomic_base<unsigned long, true>> = {<std::__1::__atomic_base<unsigned long, false>> = {__a_ = {<std::__1::__cxx_atomic_base_impl<unsigned long>> = {__a_value = 0}, <No data fields>}, static is_always_lock_free = <optimized out>}, <No data fields>}, <No data fields>}, total_raw_bytes_to_read = {<std::__1::__atomic_base<unsigned long, true>> = {<std::__1::__atomic_base<unsigned long, false>> = {__a_ = {<std::__1::__cxx_atomic_base_impl<unsigned long>> = {__a_value = 0}, <No data fields>}, static is_always_lock_free = <optimized out>}, <No data fields>}, <No data fields>}, written_rows = {<std::__1::__atomic_base<unsigned long, true>> = {<std::__1::__atomic_base<unsigned long, false>> = {__a_ = {<std::__1::__cxx_atomic_base_impl<unsigned long>> = {__a_value = 0}, <No data fields>}, static is_always_lock_free = <optimized out>}, <No data fields>}, <No data fields>}, written_bytes = {<std::__1::__atomic_base<unsigned long, true>> = {<std::__1::__atomic_base<unsigned long, false>> = {__a_ = {<std::__1::__cxx_atomic_base_impl<unsigned long>> = {__a_value = 0}, <No data fields>}, static is_always_lock_free = <optimized out>}, <No data fields>}, <No data fields>}}, progress_out = {read_rows = {<std::__1::__atomic_base<unsigned long, true>> = {<std::__1::__atomic_base<unsigned long, false>> = {__a_ = {<std::__1::__cxx_atomic_base_impl<unsigned long>> = {__a_value = 0}, <No data fields>}, static is_always_lock_free = <optimized out>}, <No data fields>}, <No data fields>}, read_bytes = {<std::__1::__atomic_base<unsigned long, true>> = {<std::__1::__atomic_base<unsigned long, false>> = {__a_ = {<std::__1::__cxx_atomic_base_impl<unsigned long>> = {__a_value = 0}, <No data fields>}, static is_always_lock_free = <optimized out>}, <No data fields>}, <No data fields>}, read_raw_bytes = {<std::__1::__atomic_base<unsigned long, true>> = {<std::__1::__atomic_base<unsigned long, false>> = {__a_ = {<std::__1::__cxx_atomic_base_impl<unsigned long>> = {__a_value = 0}, <No data fields>}, static is_always_lock_free = <optimized out>}, <No data fields>}, <No data fields>}, total_rows_to_read = {<std::__1::__atomic_base<unsigned long, true>> = {<std::__1::__atomic_base<unsigned long, false>> = {__a_ = {<std::__1::__cxx_atomic_base_impl<unsigned long>> = {__a_value = 0}, <No data fields>}, static is_always_lock_free = <optimized out>}, <No data fields>}, <No data fields>}, total_raw_bytes_to_read = {<std::__1::__atomic_base<unsigned long, true>> = {<std::__1::__atomic_base<unsigned long, false>> = {__a_ = {<std::__1::__cxx_atomic_base_impl<unsigned long>> = {__a_value = 0}, <No data fields>}, static is_always_lock_free = <optimized out>}, <No data fields>}, <No data fields>}, written_rows = {<std::__1::__atomic_base<unsigned long, true>> = {<std::__1::__atomic_base<unsigned long, false>> = {__a_ = {<std::__1::__cxx_atomic_base_impl<unsigned long>> = {__a_value = 0}, <No data fields>}, static is_always_lock_free = <optimized out>}, <No data fields>}, <No data fields>}, written_bytes = {<std::__1::__atomic_base<unsigned long, true>> = {<std::__1::__atomic_base<unsigned long, false>> = {__a_ = {<std::__1::__cxx_atomic_base_impl<unsigned long>> = {__a_value = 0}, <No data fields>}, static is_always_lock_free = <optimized out>}, <No data fields>}, <No data fields>}}, deleter = {<std::__1::__function::__maybe_derive_from_unary_function<void ()>> = {<No data fields>}, <std::__1::__function::__maybe_derive_from_binary_function<void ()>> = {<No data fields>}, __f_ = {__buf_ = {__small = \"\\200\\337\\256'\", '\\000' <repeats 11 times>, __large = 0x27aedf80 <DB::CurrentThread::defaultThreadDeleter()>}, __invoker_ = {__call_ = 0x27aff3c0 <std::__1::__function::__policy_invoker<void ()>::__call_impl<std::__1::__function::__default_alloc_func<void (*)(), void ()> >(std::__1::__function::__policy_storage const*)>}, __policy_ = 0x6744c28 <std::__1::__function::__policy::__choose_policy<std::__1::__function::__default_alloc_func<void (*)(), void ()> >(std::__1::integral_constant<bool, true>)::__policy_>}}, thread_trace_context = {trace_id = {t = {items = {0, 0}}}, span_id = 0, tracestate = {<std::__1::__basic_string_common<true>> = {<No data fields>}, static __short_mask = 128, static __long_mask = 9223372036854775808, __r_ = {<std::__1::__compressed_pair_elem<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, 0, false>> = {__value_ = {{__l = {__data_ = 0x0, __size_ = 0, __cap_ = 0}, __s = {__data_ = '\\000' <repeats 22 times>, {<std::__1::__padding<char, 1>> = {<No data fields>}, __size_ = 0 '\\000'}}, __r = {__words = {0, 0, 0}}}}}, <std::__1::__compressed_pair_elem<std::__1::allocator<char>, 1, true>> = {<std::__1::allocator<char>> = {<No data fields>}, <No data fields>}, <No data fields>}, static npos = 18446744073709551615}, trace_flags = 0 '\\000'}, thread_group = {__ptr_ = 0x614005376658, __cntrl_ = 0x614005376640}, thread_state = {<std::__1::__atomic_base<int, true>> = {<std::__1::__atomic_base<int, false>> = {__a_ = {<std::__1::__cxx_atomic_base_impl<int>> = {__a_value = 1}, <No data fields>}, static is_always_lock_free = <optimized out>}, <No data fields>}, <No data fields>}, global_context = {__ptr_ = 0x624000052100, __cntrl_ = 0x603000095b60}, query_context = {__ptr_ = 0x624002000100, __cntrl_ = 0x603001452880}, query_id = {<std::__1::__basic_string_common<true>> = {<No data fields>}, static __short_mask = 128, static __long_mask = 9223372036854775808, __r_ = {<std::__1::__compressed_pair_elem<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, 0, false>> = {__value_ = {{__l = {__data_ = 0x60400333e650 \"9d69cb63-fe52-4264-9cd7-b145beb65201\", __size_ = 36, __cap_ = 9223372036854775856}, __s = {__data_ = \"P\\346\\063\\003@`\\000\\000$\\000\\000\\000\\000\\000\\000\\000\\060\\000\\000\\000\\000\\000\", {<std::__1::__padding<char, 1>> = {<No data fields>}, __size_ = 128 '\\200'}}, __r = {__words = {105828047906384, 36, 9223372036854775856}}}}}, <std::__1::__compressed_pair_elem<std::__1::allocator<char>, 1, true>> = {<std::__1::allocator<char>> = {<No data fields>}, <No data fields>}, <No data fields>}, static npos = 18446744073709551615}, logs_queue_ptr = {__ptr_ = 0x61100406f918, __cntrl_ = 0x61100406f900}, profile_queue_ptr = {__ptr_ = 0x611003244258, __cntrl_ = 0x611003244240}, performance_counters_finalized = false, query_start_time_nanoseconds = 1641896773803597000, query_start_time_microseconds = 1641896773803597, query_start_time = 1641896773, queries_started = 1, query_profiler_real = {__ptr_ = {<std::__1::__compressed_pair_elem<DB::QueryProfilerReal*, 0, false>> = {__value_ = 0x0}, <std::__1::__compressed_pair_elem<std::__1::default_delete<DB::QueryProfilerReal>, 1, true>> = {<std::__1::default_delete<DB::QueryProfilerReal>> = {<No data fields>}, <No data fields>}, <No data fields>}}, query_profiler_cpu = {__ptr_ = {<std::__1::__compressed_pair_elem<DB::QueryProfilerCPU*, 0, false>> = {__value_ = 0x0}, <std::__1::__compressed_pair_elem<std::__1::default_delete<DB::QueryProfilerCPU>, 1, true>> = {<std::__1::default_delete<DB::QueryProfilerCPU>> = {<No data fields>}, <No data fields>}, <No data fields>}}, log = 0x606000060e60, last_rusage = {__ptr_ = {<std::__1::__compressed_pair_elem<DB::RUsageCounters*, 0, false>> = {__value_ = 0x604003bc29d0}, <std::__1::__compressed_pair_elem<std::__1::default_delete<DB::RUsageCounters>, 1, true>> = {<std::__1::default_delete<DB::RUsageCounters>> = {<No data fields>}, <No data fields>}, <No data fields>}}, taskstats = {__ptr_ = {<std::__1::__compressed_pair_elem<DB::TasksStatsCounters*, 0, false>> = {__value_ = 0x6130005fd900}, <std::__1::__compressed_pair_elem<std::__1::default_delete<DB::TasksStatsCounters>, 1, true>> = {<std::__1::default_delete<DB::TasksStatsCounters>> = {<No data fields>}, <No data fields>}, <No data fields>}}, fatal_error_callback = {<std::__1::__function::__maybe_derive_from_unary_function<void ()>> = {<No data fields>}, <std::__1::__function::__maybe_derive_from_binary_function<void ()>> = {<No data fields>}, __f_ = {__buf_ = {__small = \"\\200\\n\\203\\003\\240a\\000\\000\\000\\000\\000\\000\\000\\000\\000\", __large = 0x61a003830a80}, __invoker_ = {__call_ = 0x29812ea0 <std::__1::__function::__policy_invoker<void ()>::__call_impl<std::__1::__function::__default_alloc_func<DB::TCPHandler::runImpl()::$_2, void ()> >(std::__1::__function::__policy_storage const*)>}, __policy_ = 0x68cfde0 <std::__1::__function::__policy::__choose_policy<std::__1::__function::__default_alloc_func<DB::TCPHandler::runImpl()::$_2, void ()> >(std::__1::integral_constant<bool, true>)::__policy_>}}, query_profiler_enabled = true}\r\n2022-01-11 13:26:40         event = {__ptr_ = 0x60c000da9c98, __cntrl_ = 0x60c000da9c80}\r\n2022-01-11 13:26:40         scope_exit176 = <optimized out>\r\n2022-01-11 13:26:40         arguments = <optimized out>\r\n2022-01-11 13:26:40 #35 std::__1::__invoke<ThreadFromGlobalPool::ThreadFromGlobalPool<DB::PipelineExecutor::executeImpl(unsigned long)::$_1>(DB::PipelineExecutor::executeImpl(unsigned long)::$_1&&)::{lambda()#1}&> (__f=...) at ../contrib/libcxx/include/type_traits:3676\r\n2022-01-11 13:26:40 No locals.\r\n2022-01-11 13:26:40 #36 std::__1::__invoke_void_return_wrapper<void>::__call<ThreadFromGlobalPool::ThreadFromGlobalPool<DB::PipelineExecutor::executeImpl(unsigned long)::$_1>(DB::PipelineExecutor::executeImpl(unsigned long)::$_1&&)::{lambda()#1}&>(ThreadFromGlobalPool::ThreadFromGlobalPool<DB::PipelineExecutor::executeImpl(unsigned long)::$_1>(DB::PipelineExecutor::executeImpl(unsigned long)::$_1&&)::{lambda()#1}&) (__args=...) at ../contrib/libcxx/include/__functional_base:348\r\n2022-01-11 13:26:40 No locals.\r\n2022-01-11 13:26:40 #37 std::__1::__function::__default_alloc_func<ThreadFromGlobalPool::ThreadFromGlobalPool<DB::PipelineExecutor::executeImpl(unsigned long)::$_1>(DB::PipelineExecutor::executeImpl(unsigned long)::$_1&&)::{lambda()#1}, void ()>::operator()() (this=<optimized out>) at ../contrib/libcxx/include/functional:1608\r\n2022-01-11 13:26:40 No locals.\r\n2022-01-11 13:26:40 #38 std::__1::__function::__policy_invoker<void ()>::__call_impl<std::__1::__function::__default_alloc_func<ThreadFromGlobalPool::ThreadFromGlobalPool<DB::PipelineExecutor::executeImpl(unsigned long)::$_1>(DB::PipelineExecutor::executeImpl(unsigned long)::$_1&&)::{lambda()#1}, void ()> >(std::__1::__function::__policy_storage const*) (__buf=<optimized out>) at ../contrib/libcxx/include/functional:2089\r\n2022-01-11 13:26:40         __f = <optimized out>\r\n2022-01-11 13:26:40 #39 0x000000000c28b4c7 in std::__1::__function::__policy_func<void ()>::operator()() const (this=0x7fb10f3825a0) at ../contrib/libcxx/include/functional:2221\r\n2022-01-11 13:26:40 No locals.\r\n2022-01-11 13:26:40 #40 std::__1::function<void ()>::operator()() const (this=0x7fb10f3825a0) at ../contrib/libcxx/include/functional:2560\r\n2022-01-11 13:26:40 No locals.\r\n2022-01-11 13:26:40 #41 ThreadPoolImpl<std::__1::thread>::worker (this=<optimized out>, thread_it=...) at ../src/Common/ThreadPool.cpp:274\r\n2022-01-11 13:26:40         metric_active_threads = {what = <optimized out>, amount = 1}\r\n2022-01-11 13:26:40         job = {<std::__1::__function::__maybe_derive_from_unary_function<void ()>> = {<No data fields>}, <std::__1::__function::__maybe_derive_from_binary_function<void ()>> = {<No data fields>}, __f_ = {__buf_ = {__small = \"pL\\033\\003p`\\000\\000\\000\\000\\000\\000\\000\\000\\000\", __large = 0x6070031b4c70}, __invoker_ = {__call_ = 0x298f05c0 <std::__1::__function::__policy_invoker<void ()>::__call_impl<std::__1::__function::__default_alloc_func<ThreadFromGlobalPool::ThreadFromGlobalPool<DB::PipelineExecutor::executeImpl(unsigned long)::$_1>(DB::PipelineExecutor::executeImpl(unsigned long)::$_1&&)::{lambda()#1}, void ()> >(std::__1::__function::__policy_storage const*)>}, __policy_ = 0x68dee60 <std::__1::__function::__policy::__choose_policy<std::__1::__function::__default_alloc_func<ThreadFromGlobalPool::ThreadFromGlobalPool<DB::PipelineExecutor::executeImpl(unsigned long)::$_1>(DB::PipelineExecutor::executeImpl(unsigned long)::$_1&&)::{lambda()#1}, void ()> >(std::__1::integral_constant<bool, false>)::__policy_>}}\r\n2022-01-11 13:26:40         need_shutdown = <optimized out>\r\n2022-01-11 13:26:40         metric_all_threads = {what = <optimized out>, amount = 1}\r\n2022-01-11 13:26:40 #42 0x000000000c293837 in ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::{lambda()#2}::operator()() const (this=<optimized out>) at ../src/Common/ThreadPool.cpp:139\r\n2022-01-11 13:26:40 No locals.\r\n2022-01-11 13:26:40 #43 std::__1::__invoke<ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::{lambda()#2}> (__f=...) at ../contrib/libcxx/include/type_traits:3676\r\n2022-01-11 13:26:40 No locals.\r\n2022-01-11 13:26:40 #44 std::__1::__thread_execute<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::{lambda()#2}>(std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::{lambda()#2}>&, std::__1::__tuple_indices<>) (__t=...) at ../contrib/libcxx/include/thread:280\r\n2022-01-11 13:26:40 No locals.\r\n2022-01-11 13:26:40 #45 std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::{lambda()#2}> >(std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::{lambda()#2}>) (__vp=<optimized out>) at ../contrib/libcxx/include/thread:291\r\n2022-01-11 13:26:40         __p = {__ptr_ = {<std::__1::__compressed_pair_elem<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, (lambda at ../src/Common/ThreadPool.cpp:139:42)> *, 0, false>> = {__value_ = 0x603000761080}, <std::__1::__compressed_pair_elem<std::__1::default_delete<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, (lambda at ../src/Common/ThreadPool.cpp:139:42)> >, 1, true>> = {<std::__1::default_delete<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, (lambda at ../src/Common/ThreadPool.cpp:139:42)> >> = {<No data fields>}, <No data fields>}, <No data fields>}}\r\n2022-01-11 13:26:40 #46 0x00007fb3c1c26609 in start_thread () from /lib/x86_64-linux-gnu/libpthread.so.0\r\n2022-01-11 13:26:40 No symbol table info available.\r\n2022-01-11 13:26:40 #47 0x00007fb3c1b4d293 in clone () from /lib/x86_64-linux-gnu/libc.so.6\r\n2022-01-11 13:26:40 No symbol table info available.\r\n```\r\n\r\nMore info:\r\n```\r\ninfo locals\r\n2022-01-11 13:26:40 No locals.\r\n\r\ninfo registers\r\n2022-01-11 13:26:40 rax            0x100000011         4294967313\r\n2022-01-11 13:26:40 rbx            0x7fb10f37d458      140398441256024\r\n2022-01-11 13:26:40 rcx            0xffffffffffffffd0  -48\r\n2022-01-11 13:26:40 rdx            0x7fb10f37d7d0      140398441256912\r\n2022-01-11 13:26:40 rsi            0x39a42d60          967060832\r\n2022-01-11 13:26:40 rdi            0x0                 0\r\n2022-01-11 13:26:40 rbp            0x7fb10f37d3f0      0x7fb10f37d3f0\r\n2022-01-11 13:26:40 rsp            0x7fb10f37d3e0      0x7fb10f37d3e0\r\n2022-01-11 13:26:40 r8             0x8                 8\r\n2022-01-11 13:26:40 r9             0xc13ad7a           202616186\r\n2022-01-11 13:26:40 r10            0xa6c35c3           174863811\r\n2022-01-11 13:26:40 r11            0x246               582\r\n2022-01-11 13:26:40 r12            0x0                 0\r\n2022-01-11 13:26:40 r13            0x7fb10f37d7d0      140398441256912\r\n2022-01-11 13:26:40 r14            0x39a42d60          967060832\r\n2022-01-11 13:26:40 r15            0x3                 3\r\n2022-01-11 13:26:40 rip            0x37ea9be8          0x37ea9be8 <libunwind::DwarfInstructions<libunwind::LocalAddressSpace, libunwind::Registers_x86_64>::getSavedRegister(libunwind::LocalAddressSpace&, libunwind::Registers_x86_64 const&, unsigned long, libunwind::RegisterLocation const&)+40>\r\n2022-01-11 13:26:40 eflags         0x10297             [ CF PF AF SF IF RF ]\r\n2022-01-11 13:26:40 cs             0x33                51\r\n2022-01-11 13:26:40 ss             0x2b                43\r\n2022-01-11 13:26:40 ds             0x0                 0\r\n2022-01-11 13:26:40 es             0x0                 0\r\n2022-01-11 13:26:40 fs             0x0                 0\r\n2022-01-11 13:26:40 gs             0x0                 0\r\n2022-01-11 13:26:40 k0             0x0                 0\r\n2022-01-11 13:26:40 k1             0x0                 0\r\n2022-01-11 13:26:40 k2             0x0                 0\r\n2022-01-11 13:26:40 k3             0x0                 0\r\n2022-01-11 13:26:40 k4             0x0                 0\r\n2022-01-11 13:26:40 k5             0x0                 0\r\n2022-01-11 13:26:40 k6             0x0                 0\r\n2022-01-11 13:26:40 k7             0x0                 0\r\n\r\ndisassemble /s\r\n2022-01-11 13:26:40 Dump of assembler code for function libunwind::DwarfInstructions<libunwind::LocalAddressSpace, libunwind::Registers_x86_64>::getSavedRegister(libunwind::LocalAddressSpace&, libunwind::Registers_x86_64 const&, unsigned long, libunwind::RegisterLocation const&):\r\n2022-01-11 13:26:40 ../contrib/libunwind/src/DwarfInstructions.hpp:\r\n2022-01-11 13:26:40 97\tin ../contrib/libunwind/src/DwarfInstructions.hpp\r\n2022-01-11 13:26:40    0x0000000037ea9bc0 <+0>:\tpush   %rbp\r\n2022-01-11 13:26:40    0x0000000037ea9bc1 <+1>:\tmov    %rsp,%rbp\r\n2022-01-11 13:26:40    0x0000000037ea9bc4 <+4>:\tpush   %rbx\r\n2022-01-11 13:26:40    0x0000000037ea9bc5 <+5>:\tpush   %rax\r\n2022-01-11 13:26:40    0x0000000037ea9bc6 <+6>:\tmov    %rdx,%rax\r\n2022-01-11 13:26:40    0x0000000037ea9bc9 <+9>:\tmov    %rsi,%rdx\r\n2022-01-11 13:26:40    0x0000000037ea9bcc <+12>:\tmov    %rdi,%rsi\r\n2022-01-11 13:26:40 \r\n2022-01-11 13:26:40 98\tin ../contrib/libunwind/src/DwarfInstructions.hpp\r\n2022-01-11 13:26:40    0x0000000037ea9bcf <+15>:\tmov    (%rcx),%edi\r\n2022-01-11 13:26:40    0x0000000037ea9bd1 <+17>:\tadd    $0xffffffff,%edi\r\n2022-01-11 13:26:40    0x0000000037ea9bd4 <+20>:\tcmp    $0x4,%edi\r\n2022-01-11 13:26:40    0x0000000037ea9bd7 <+23>:\tja     0x37ea9d01 <libunwind::DwarfInstructions<libunwind::LocalAddressSpace, libunwind::Registers_x86_64>::getSavedRegister(libunwind::LocalAddressSpace&, libunwind::Registers_x86_64 const&, unsigned long, libunwind::RegisterLocation const&)+321>\r\n2022-01-11 13:26:40    0x0000000037ea9bdd <+29>:\tjmpq   *0x97fabf0(,%rdi,8)\r\n2022-01-11 13:26:40 \r\n2022-01-11 13:26:40 99\tin ../contrib/libunwind/src/DwarfInstructions.hpp\r\n2022-01-11 13:26:40 100\tin ../contrib/libunwind/src/DwarfInstructions.hpp\r\n2022-01-11 13:26:40    0x0000000037ea9be4 <+36>:\tmov    0x8(%rcx),%rcx\r\n2022-01-11 13:26:40 \r\n2022-01-11 13:26:40 ../contrib/libunwind/src/AddressSpace.hpp:\r\n2022-01-11 13:26:40 => 0x0000000037ea9be8 <+40>:\tmov    (%rcx,%rax,1),%rax\r\n2022-01-11 13:26:40 \r\n2022-01-11 13:26:40 ../contrib/libunwind/src/DwarfInstructions.hpp:\r\n2022-01-11 13:26:40    0x0000000037ea9bec <+44>:\tadd    $0x8,%rsp\r\n2022-01-11 13:26:40    0x0000000037ea9bf0 <+48>:\tpop    %rbx\r\n2022-01-11 13:26:40    0x0000000037ea9bf1 <+49>:\tpop    %rbp\r\n2022-01-11 13:26:40    0x0000000037ea9bf2 <+50>:\tretq   \r\n2022-01-11 13:26:40 \r\n...\r\n```\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33531/reactions","total_count":1,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":1},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33531/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33530","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33530/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33530/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33530/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33530","id":1099473710,"node_id":"I_kwDOA5dJV85BiKMu","number":33530,"title":"alter enum to String unexpected result","user":{"login":"den-crane","id":19737682,"node_id":"MDQ6VXNlcjE5NzM3Njgy","avatar_url":"https://avatars.githubusercontent.com/u/19737682?v=4","gravatar_id":"","url":"https://api.github.com/users/den-crane","html_url":"https://github.com/den-crane","followers_url":"https://api.github.com/users/den-crane/followers","following_url":"https://api.github.com/users/den-crane/following{/other_user}","gists_url":"https://api.github.com/users/den-crane/gists{/gist_id}","starred_url":"https://api.github.com/users/den-crane/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/den-crane/subscriptions","organizations_url":"https://api.github.com/users/den-crane/orgs","repos_url":"https://api.github.com/users/den-crane/repos","events_url":"https://api.github.com/users/den-crane/events{/privacy}","received_events_url":"https://api.github.com/users/den-crane/received_events","type":"User","site_admin":false},"labels":[{"id":1575085465,"node_id":"MDU6TGFiZWwxNTc1MDg1NDY1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/unexpected%20behaviour","name":"unexpected behaviour","color":"e088ca","default":false,"description":""}],"state":"open","locked":false,"assignee":{"login":"KochetovNicolai","id":4092911,"node_id":"MDQ6VXNlcjQwOTI5MTE=","avatar_url":"https://avatars.githubusercontent.com/u/4092911?v=4","gravatar_id":"","url":"https://api.github.com/users/KochetovNicolai","html_url":"https://github.com/KochetovNicolai","followers_url":"https://api.github.com/users/KochetovNicolai/followers","following_url":"https://api.github.com/users/KochetovNicolai/following{/other_user}","gists_url":"https://api.github.com/users/KochetovNicolai/gists{/gist_id}","starred_url":"https://api.github.com/users/KochetovNicolai/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/KochetovNicolai/subscriptions","organizations_url":"https://api.github.com/users/KochetovNicolai/orgs","repos_url":"https://api.github.com/users/KochetovNicolai/repos","events_url":"https://api.github.com/users/KochetovNicolai/events{/privacy}","received_events_url":"https://api.github.com/users/KochetovNicolai/received_events","type":"User","site_admin":false},"assignees":[{"login":"KochetovNicolai","id":4092911,"node_id":"MDQ6VXNlcjQwOTI5MTE=","avatar_url":"https://avatars.githubusercontent.com/u/4092911?v=4","gravatar_id":"","url":"https://api.github.com/users/KochetovNicolai","html_url":"https://github.com/KochetovNicolai","followers_url":"https://api.github.com/users/KochetovNicolai/followers","following_url":"https://api.github.com/users/KochetovNicolai/following{/other_user}","gists_url":"https://api.github.com/users/KochetovNicolai/gists{/gist_id}","starred_url":"https://api.github.com/users/KochetovNicolai/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/KochetovNicolai/subscriptions","organizations_url":"https://api.github.com/users/KochetovNicolai/orgs","repos_url":"https://api.github.com/users/KochetovNicolai/repos","events_url":"https://api.github.com/users/KochetovNicolai/events{/privacy}","received_events_url":"https://api.github.com/users/KochetovNicolai/received_events","type":"User","site_admin":false}],"milestone":null,"comments":0,"created_at":"2022-01-11T18:06:00Z","updated_at":"2022-01-12T12:28:24Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"body":"```\r\ncreate table tt( a Int64, e Enum8 ('CATALOG' = 0, 'CHARTS' = 1) ) Engine = MergeTree order by a;\r\ninsert into tt select number, number%2 from numbers(2);\r\n┌─a─┬─e───────┐\r\n│ 0 │ CATALOG │\r\n│ 1 │ CHARTS  │\r\n└───┴─────────┘\r\n\r\nalter table tt modify column e Enum8 ('CATALOG' = 0, 'CHARTS11111' = 1);\r\nselect distinct e from tt;\r\n┌─e───────────┐\r\n│ CATALOG     │\r\n│ CHARTS11111 │\r\n└─────────────┘\r\n\r\n-- WA to refresh columns.txt \r\n-- alter table tt update e=e where 1 settings mutations_sync=2; \r\n\r\nalter table tt modify column e LowCardinality(String);\r\nselect distinct e from tt;\r\n┌─e───────┐\r\n│ CATALOG │\r\n│ CHARTS  │ -- expected CHARTS11111\r\n└─────────┘\r\n```\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33530/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33530/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33522","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33522/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33522/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33522/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33522","id":1099266281,"node_id":"I_kwDOA5dJV85BhXjp","number":33522,"title":"Return column structure in case of empty resultset","user":{"login":"UnamedRus","id":9449405,"node_id":"MDQ6VXNlcjk0NDk0MDU=","avatar_url":"https://avatars.githubusercontent.com/u/9449405?v=4","gravatar_id":"","url":"https://api.github.com/users/UnamedRus","html_url":"https://github.com/UnamedRus","followers_url":"https://api.github.com/users/UnamedRus/followers","following_url":"https://api.github.com/users/UnamedRus/following{/other_user}","gists_url":"https://api.github.com/users/UnamedRus/gists{/gist_id}","starred_url":"https://api.github.com/users/UnamedRus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/UnamedRus/subscriptions","organizations_url":"https://api.github.com/users/UnamedRus/orgs","repos_url":"https://api.github.com/users/UnamedRus/repos","events_url":"https://api.github.com/users/UnamedRus/events{/privacy}","received_events_url":"https://api.github.com/users/UnamedRus/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-01-11T15:00:35Z","updated_at":"2022-01-11T15:00:35Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"**Use case**\r\n\r\nSome drivers can't create correct structure in case of empty resultset being returned by ClickHouse (clickhouse-driver for python for example, query_dataframe will return empty dataframe without columns)\r\n\r\n```\r\npostgres=# SELECT 1  LIMIT 0;\r\n ?column?\r\n----------\r\n(0 rows)\r\n\r\nLAPTOP-319G0GMQ.localdomain :) SELECT 1 LIMIT 0;\r\n\r\nSELECT 1\r\nLIMIT 0\r\n\r\nQuery id: 5e966bd4-4f2f-4a44-9269-b81655e7cdad\r\n\r\nOk.\r\n\r\nSELECT 1\r\nLIMIT 0\r\nFORMAT Native\r\n\r\nQuery id: 9c4dd458-abe4-40c9-bb1f-6f0c2771170d\r\n\r\nOk.\r\n\r\n0 rows in set. Elapsed: 0.002 sec.\r\n\r\nSELECT 1\r\nLIMIT 1\r\nFORMAT Native\r\n\r\nQuery id: b6b2f85b-9a7c-4b95-8563-df180edb8704\r\n\r\n\u0001\u0001\u00011\u0005UInt8\u0001\r\n```\r\n\r\n**Describe the solution you'd like**\r\n\r\nHave a new setting, which will change behavior in case of empty result set being returned.\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33522/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33522/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33502","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33502/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33502/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33502/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33502","id":1097924530,"node_id":"I_kwDOA5dJV85BcP-y","number":33502,"title":"Does postgres engine support foreign wrappers?","user":{"login":"simPod","id":327717,"node_id":"MDQ6VXNlcjMyNzcxNw==","avatar_url":"https://avatars.githubusercontent.com/u/327717?v=4","gravatar_id":"","url":"https://api.github.com/users/simPod","html_url":"https://github.com/simPod","followers_url":"https://api.github.com/users/simPod/followers","following_url":"https://api.github.com/users/simPod/following{/other_user}","gists_url":"https://api.github.com/users/simPod/gists{/gist_id}","starred_url":"https://api.github.com/users/simPod/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/simPod/subscriptions","organizations_url":"https://api.github.com/users/simPod/orgs","repos_url":"https://api.github.com/users/simPod/repos","events_url":"https://api.github.com/users/simPod/events{/privacy}","received_events_url":"https://api.github.com/users/simPod/received_events","type":"User","site_admin":false},"labels":[{"id":386401510,"node_id":"MDU6TGFiZWwzODY0MDE1MTA=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/question","name":"question","color":"bfdadc","default":true,"description":""}],"state":"open","locked":false,"assignee":{"login":"kssenii","id":54203879,"node_id":"MDQ6VXNlcjU0MjAzODc5","avatar_url":"https://avatars.githubusercontent.com/u/54203879?v=4","gravatar_id":"","url":"https://api.github.com/users/kssenii","html_url":"https://github.com/kssenii","followers_url":"https://api.github.com/users/kssenii/followers","following_url":"https://api.github.com/users/kssenii/following{/other_user}","gists_url":"https://api.github.com/users/kssenii/gists{/gist_id}","starred_url":"https://api.github.com/users/kssenii/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kssenii/subscriptions","organizations_url":"https://api.github.com/users/kssenii/orgs","repos_url":"https://api.github.com/users/kssenii/repos","events_url":"https://api.github.com/users/kssenii/events{/privacy}","received_events_url":"https://api.github.com/users/kssenii/received_events","type":"User","site_admin":false},"assignees":[{"login":"kssenii","id":54203879,"node_id":"MDQ6VXNlcjU0MjAzODc5","avatar_url":"https://avatars.githubusercontent.com/u/54203879?v=4","gravatar_id":"","url":"https://api.github.com/users/kssenii","html_url":"https://github.com/kssenii","followers_url":"https://api.github.com/users/kssenii/followers","following_url":"https://api.github.com/users/kssenii/following{/other_user}","gists_url":"https://api.github.com/users/kssenii/gists{/gist_id}","starred_url":"https://api.github.com/users/kssenii/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kssenii/subscriptions","organizations_url":"https://api.github.com/users/kssenii/orgs","repos_url":"https://api.github.com/users/kssenii/repos","events_url":"https://api.github.com/users/kssenii/events{/privacy}","received_events_url":"https://api.github.com/users/kssenii/received_events","type":"User","site_admin":false}],"milestone":null,"comments":6,"created_at":"2022-01-10T13:49:15Z","updated_at":"2022-01-10T14:40:41Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"I'm using https://clickhouse.com/docs/en/engines/database-engines/postgresql/ to connect into a pg db that has a foreign schema wrapper.  \r\nhttps://www.postgresql.org/docs/current/postgres-fdw.html\r\n\r\nIs foreign wrapper supported by clickhouse? I'm able to create a database `CREATE DATABASE a ENGINE = PostgreSQL` but there are no tables.\r\n\r\n```sql\r\nCREATE DATABASE pg_old\r\nENGINE = PostgreSQL('pg:5432', 'db', 'clickhouse', 'pwd', `foreign_schema`); -- connection is ok, no tables fetched by clickhouse\r\nCREATE DATABASE pg_public\r\nENGINE = PostgreSQL('pg:5432', 'db', 'clickhouse', 'pwd', `public`); -- this one works, tables present, selects can be done etc.\r\n```","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33502/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33502/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33501","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33501/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33501/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33501/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33501","id":1097851519,"node_id":"I_kwDOA5dJV85Bb-J_","number":33501,"title":"Add toEndOfMonth function ","user":{"login":"alexandr-subota-idf","id":66726662,"node_id":"MDQ6VXNlcjY2NzI2NjYy","avatar_url":"https://avatars.githubusercontent.com/u/66726662?v=4","gravatar_id":"","url":"https://api.github.com/users/alexandr-subota-idf","html_url":"https://github.com/alexandr-subota-idf","followers_url":"https://api.github.com/users/alexandr-subota-idf/followers","following_url":"https://api.github.com/users/alexandr-subota-idf/following{/other_user}","gists_url":"https://api.github.com/users/alexandr-subota-idf/gists{/gist_id}","starred_url":"https://api.github.com/users/alexandr-subota-idf/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexandr-subota-idf/subscriptions","organizations_url":"https://api.github.com/users/alexandr-subota-idf/orgs","repos_url":"https://api.github.com/users/alexandr-subota-idf/repos","events_url":"https://api.github.com/users/alexandr-subota-idf/events{/privacy}","received_events_url":"https://api.github.com/users/alexandr-subota-idf/received_events","type":"User","site_admin":false},"labels":[{"id":386401508,"node_id":"MDU6TGFiZWwzODY0MDE1MDg=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/help%20wanted","name":"help wanted","color":"128A0C","default":true,"description":null},{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":644208617,"node_id":"MDU6TGFiZWw2NDQyMDg2MTc=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/easy%20task","name":"easy task","color":"0e8a16","default":false,"description":"Good for first contributors"},{"id":1507888214,"node_id":"MDU6TGFiZWwxNTA3ODg4MjE0","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/st-accepted","name":"st-accepted","color":"e5b890","default":false,"description":"The issue is in our backlog, ready to take"}],"state":"open","locked":false,"assignee":{"login":"holadepo","id":28206424,"node_id":"MDQ6VXNlcjI4MjA2NDI0","avatar_url":"https://avatars.githubusercontent.com/u/28206424?v=4","gravatar_id":"","url":"https://api.github.com/users/holadepo","html_url":"https://github.com/holadepo","followers_url":"https://api.github.com/users/holadepo/followers","following_url":"https://api.github.com/users/holadepo/following{/other_user}","gists_url":"https://api.github.com/users/holadepo/gists{/gist_id}","starred_url":"https://api.github.com/users/holadepo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/holadepo/subscriptions","organizations_url":"https://api.github.com/users/holadepo/orgs","repos_url":"https://api.github.com/users/holadepo/repos","events_url":"https://api.github.com/users/holadepo/events{/privacy}","received_events_url":"https://api.github.com/users/holadepo/received_events","type":"User","site_admin":false},"assignees":[{"login":"holadepo","id":28206424,"node_id":"MDQ6VXNlcjI4MjA2NDI0","avatar_url":"https://avatars.githubusercontent.com/u/28206424?v=4","gravatar_id":"","url":"https://api.github.com/users/holadepo","html_url":"https://github.com/holadepo","followers_url":"https://api.github.com/users/holadepo/followers","following_url":"https://api.github.com/users/holadepo/following{/other_user}","gists_url":"https://api.github.com/users/holadepo/gists{/gist_id}","starred_url":"https://api.github.com/users/holadepo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/holadepo/subscriptions","organizations_url":"https://api.github.com/users/holadepo/orgs","repos_url":"https://api.github.com/users/holadepo/repos","events_url":"https://api.github.com/users/holadepo/events{/privacy}","received_events_url":"https://api.github.com/users/holadepo/received_events","type":"User","site_admin":false}],"milestone":null,"comments":6,"created_at":"2022-01-10T12:38:20Z","updated_at":"2022-01-22T00:38:00Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Currently we need to write smth like\r\nselect toStartOfMonth(date) + interval 1 month - interval 1 day\r\nto get the date of last day of month.\r\n\r\nCan we have function toEndOfMonth to get the date of last day of month?\r\n*With synonym LAST_DAY() (function name from MySql)","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33501/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33501/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33500","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33500/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33500/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33500/events","html_url":"https://github.com/ClickHouse/ClickHouse/pull/33500","id":1097846379,"node_id":"PR_kwDOA5dJV84wuzHj","number":33500,"title":"support to write merge tree parts in parallel","user":{"login":"hucome","id":3118756,"node_id":"MDQ6VXNlcjMxMTg3NTY=","avatar_url":"https://avatars.githubusercontent.com/u/3118756?v=4","gravatar_id":"","url":"https://api.github.com/users/hucome","html_url":"https://github.com/hucome","followers_url":"https://api.github.com/users/hucome/followers","following_url":"https://api.github.com/users/hucome/following{/other_user}","gists_url":"https://api.github.com/users/hucome/gists{/gist_id}","starred_url":"https://api.github.com/users/hucome/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hucome/subscriptions","organizations_url":"https://api.github.com/users/hucome/orgs","repos_url":"https://api.github.com/users/hucome/repos","events_url":"https://api.github.com/users/hucome/events{/privacy}","received_events_url":"https://api.github.com/users/hucome/received_events","type":"User","site_admin":false},"labels":[{"id":1304141686,"node_id":"MDU6TGFiZWwxMzA0MTQxNjg2","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/pr-improvement","name":"pr-improvement","color":"007700","default":false,"description":"Pull request with some product improvements"},{"id":3627025164,"node_id":"LA_kwDOA5dJV87YMAMM","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/can%20be%20tested","name":"can be tested","color":"1d76db","default":false,"description":""}],"state":"open","locked":false,"assignee":{"login":"KochetovNicolai","id":4092911,"node_id":"MDQ6VXNlcjQwOTI5MTE=","avatar_url":"https://avatars.githubusercontent.com/u/4092911?v=4","gravatar_id":"","url":"https://api.github.com/users/KochetovNicolai","html_url":"https://github.com/KochetovNicolai","followers_url":"https://api.github.com/users/KochetovNicolai/followers","following_url":"https://api.github.com/users/KochetovNicolai/following{/other_user}","gists_url":"https://api.github.com/users/KochetovNicolai/gists{/gist_id}","starred_url":"https://api.github.com/users/KochetovNicolai/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/KochetovNicolai/subscriptions","organizations_url":"https://api.github.com/users/KochetovNicolai/orgs","repos_url":"https://api.github.com/users/KochetovNicolai/repos","events_url":"https://api.github.com/users/KochetovNicolai/events{/privacy}","received_events_url":"https://api.github.com/users/KochetovNicolai/received_events","type":"User","site_admin":false},"assignees":[{"login":"KochetovNicolai","id":4092911,"node_id":"MDQ6VXNlcjQwOTI5MTE=","avatar_url":"https://avatars.githubusercontent.com/u/4092911?v=4","gravatar_id":"","url":"https://api.github.com/users/KochetovNicolai","html_url":"https://github.com/KochetovNicolai","followers_url":"https://api.github.com/users/KochetovNicolai/followers","following_url":"https://api.github.com/users/KochetovNicolai/following{/other_user}","gists_url":"https://api.github.com/users/KochetovNicolai/gists{/gist_id}","starred_url":"https://api.github.com/users/KochetovNicolai/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/KochetovNicolai/subscriptions","organizations_url":"https://api.github.com/users/KochetovNicolai/orgs","repos_url":"https://api.github.com/users/KochetovNicolai/repos","events_url":"https://api.github.com/users/KochetovNicolai/events{/privacy}","received_events_url":"https://api.github.com/users/KochetovNicolai/received_events","type":"User","site_admin":false}],"milestone":null,"comments":8,"created_at":"2022-01-10T12:33:25Z","updated_at":"2022-01-13T11:47:59Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/pulls/33500","html_url":"https://github.com/ClickHouse/ClickHouse/pull/33500","diff_url":"https://github.com/ClickHouse/ClickHouse/pull/33500.diff","patch_url":"https://github.com/ClickHouse/ClickHouse/pull/33500.patch","merged_at":null},"body":"support to write merge tree parts in parallel, which can be controlled by setting max_part_writing_threads in merge tree settings in config.xml, for example\r\n<merge_tree>\r\n    <max_part_writing_threads>10</max_part_writing_threads>\r\n</merge_tree>\r\n\r\nChangelog category (leave one):\r\n- Improvement\r\n\r\nChangelog entry (a user-readable short description of the changes that goes to CHANGELOG.md):\r\nsupport to write merge tree parts in parallel\r\n\r\nDetailed description / Documentation draft:\r\nUse the configuration merge_tree.max_part_writing_threads to control the number of threads for writing merge tree parts. By default, there is only one working thread as in the original mechanism. This improvement is very useful when inserting data into remote storage such as s3.\r\n\r\n> By adding documentation, you'll allow users to try your new feature immediately, not when someone else will have time to document it later. Documentation is necessary for all features that affect user experience in any way. You can add brief documentation draft above, or add documentation right into your patch as Markdown files in [docs](https://github.com/ClickHouse/ClickHouse/tree/master/docs) folder.\r\n\r\n> If you are doing this for the first time, it's recommended to read the lightweight [Contributing to ClickHouse Documentation](https://github.com/ClickHouse/ClickHouse/tree/master/docs/README.md) guide first.\r\n\r\n\r\n> Information about CI checks: https://clickhouse.tech/docs/en/development/continuous-integration/\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33500/reactions","total_count":3,"+1":3,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33500/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33493","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33493/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33493/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33493/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33493","id":1097453333,"node_id":"I_kwDOA5dJV85Bac8V","number":33493,"title":"Support TTL with Datetime64","user":{"login":"mr-karan","id":5689132,"node_id":"MDQ6VXNlcjU2ODkxMzI=","avatar_url":"https://avatars.githubusercontent.com/u/5689132?v=4","gravatar_id":"","url":"https://api.github.com/users/mr-karan","html_url":"https://github.com/mr-karan","followers_url":"https://api.github.com/users/mr-karan/followers","following_url":"https://api.github.com/users/mr-karan/following{/other_user}","gists_url":"https://api.github.com/users/mr-karan/gists{/gist_id}","starred_url":"https://api.github.com/users/mr-karan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mr-karan/subscriptions","organizations_url":"https://api.github.com/users/mr-karan/orgs","repos_url":"https://api.github.com/users/mr-karan/repos","events_url":"https://api.github.com/users/mr-karan/events{/privacy}","received_events_url":"https://api.github.com/users/mr-karan/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null}],"state":"open","locked":false,"assignee":{"login":"Enmk","id":1110183,"node_id":"MDQ6VXNlcjExMTAxODM=","avatar_url":"https://avatars.githubusercontent.com/u/1110183?v=4","gravatar_id":"","url":"https://api.github.com/users/Enmk","html_url":"https://github.com/Enmk","followers_url":"https://api.github.com/users/Enmk/followers","following_url":"https://api.github.com/users/Enmk/following{/other_user}","gists_url":"https://api.github.com/users/Enmk/gists{/gist_id}","starred_url":"https://api.github.com/users/Enmk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Enmk/subscriptions","organizations_url":"https://api.github.com/users/Enmk/orgs","repos_url":"https://api.github.com/users/Enmk/repos","events_url":"https://api.github.com/users/Enmk/events{/privacy}","received_events_url":"https://api.github.com/users/Enmk/received_events","type":"User","site_admin":false},"assignees":[{"login":"Enmk","id":1110183,"node_id":"MDQ6VXNlcjExMTAxODM=","avatar_url":"https://avatars.githubusercontent.com/u/1110183?v=4","gravatar_id":"","url":"https://api.github.com/users/Enmk","html_url":"https://github.com/Enmk","followers_url":"https://api.github.com/users/Enmk/followers","following_url":"https://api.github.com/users/Enmk/following{/other_user}","gists_url":"https://api.github.com/users/Enmk/gists{/gist_id}","starred_url":"https://api.github.com/users/Enmk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Enmk/subscriptions","organizations_url":"https://api.github.com/users/Enmk/orgs","repos_url":"https://api.github.com/users/Enmk/repos","events_url":"https://api.github.com/users/Enmk/events{/privacy}","received_events_url":"https://api.github.com/users/Enmk/received_events","type":"User","site_admin":false}],"milestone":null,"comments":2,"created_at":"2022-01-10T04:40:56Z","updated_at":"2022-01-15T21:53:52Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"**Use case**\r\n\r\nMy table structure involves a `timestamp` column (which is also used as the sorting key) but the type of that column is `Datetime64(3, 'Asia/Kolkata')`. \r\n\r\n```sql\r\nCREATE TABLE IF NOT EXISTS events.local ON CLUSTER '{cluster}' (\r\n    `_timestamp` Datetime64(3, 'Asia/Kolkata'),\r\n    ...\r\n)\r\nENGINE = ReplicatedMergeTree('/clickhouse/tables/{cluster}/{shard}/table', '{replica}')\r\nPARTITION BY toYYYYMMDD(_timestamp)\r\nORDER BY _timestamp\r\nTTL _timestamp + INTERVAL 30 DAY;\r\n```\r\n\r\nI would like to set a TTL based on this column but I get an error right now:\r\n\r\n```\r\nCode: 450. DB::Exception: Received from localhost:9000. DB::Exception: There was an error on [clickhouse-green-1:9000]: Code: 450. DB::Exception: TTL expression result column should have DateTime or Date type, but has DateTime64(3, 'Asia/Kolkata'). (BAD_TTL_EXPRESSION) (version 21.12.3.32 (official build)). (BAD_TTL_EXPRESSION)\r\n```\r\n\r\n**Describe the solution you'd like**\r\n\r\nIs it possible to support `DateTime64` for adding TTLs? Would be really helpful!\r\n\r\n**Describe alternatives you've considered**\r\n\r\nUse a separate column to store timestamp with `ms` precision and another column to store with `seconds` precision, just to satisfy the TTL limitation.\r\n\r\nThanks!","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33493/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33493/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33490","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33490/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33490/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33490/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33490","id":1097346419,"node_id":"I_kwDOA5dJV85BaC1z","number":33490,"title":"Stream partial aggregation results from shards.","user":{"login":"UnamedRus","id":9449405,"node_id":"MDQ6VXNlcjk0NDk0MDU=","avatar_url":"https://avatars.githubusercontent.com/u/9449405?v=4","gravatar_id":"","url":"https://api.github.com/users/UnamedRus","html_url":"https://github.com/UnamedRus","followers_url":"https://api.github.com/users/UnamedRus/followers","following_url":"https://api.github.com/users/UnamedRus/following{/other_user}","gists_url":"https://api.github.com/users/UnamedRus/gists{/gist_id}","starred_url":"https://api.github.com/users/UnamedRus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/UnamedRus/subscriptions","organizations_url":"https://api.github.com/users/UnamedRus/orgs","repos_url":"https://api.github.com/users/UnamedRus/repos","events_url":"https://api.github.com/users/UnamedRus/events{/privacy}","received_events_url":"https://api.github.com/users/UnamedRus/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":1507886722,"node_id":"MDU6TGFiZWwxNTA3ODg2NzIy","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/st-discussion","name":"st-discussion","color":"e5b890","default":false,"description":"The story requires discussion /research / expert help / design & decomposition before will be taken"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2022-01-10T00:33:44Z","updated_at":"2022-01-15T22:23:49Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"**Use case**\r\n\r\nHeavy GROUP BY with a lot of uniq keys or/and with big states (uniq/quantile/sequenceMatch)\r\n\r\n**Describe the solution you'd like**\r\n\r\nInstead of waiting for the query to complete on remote shard and sending result of this aggregation.\r\nWe can stream partial result of aggregation to initiator replica, which will merge those results as usual.\r\n \r\nIt will increase amount of send data over network for sure, but network in cloud usually cheap and fast (you can easily get 20+Gbps adapters for relatively small instances https://aws.amazon.com/ec2/instance-types/m6i/)\r\n\r\nBecause we will send blocks of data as soon as possible, it will reduce time spend in wait to receive all data (because we wouldn't wait query completion on shard), and lower amount of memory used on remote shards. \r\n\r\nIt will add more sense to setups with bigger and costly initiator nodes (which has ~768+GiB of RAM) and cheap storage nodes (~128 GIB of RAM)\r\nIt will also reduce total memory footprint (on all shards) for heavy queries. \r\nIt will work especially good for GROUP BY statements, which almost doesn't collapse rows, so after we form stream block, it's unlikely that we will ever see those keys in any next block on this shard.\r\n\r\nAs next step for two-level aggregation, it could be possible to distribute finalization of GROUP BY by sending each bucket to specific node.\r\n\r\nWe can also have settings like this:\r\n\r\n```\r\nmax_memory_usage_before_result_streaming\r\nmax_amount_of_rows_in_one_streaming_block\r\ndelay_sec_before_streaming_results\r\nmax_aggregation_factor_before_result_streaming\r\n```\r\n\r\n**Additional context**\r\n\r\nRelated https://github.com/ClickHouse/ClickHouse/issues/9604 https://github.com/ClickHouse/ClickHouse/issues/28855","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33490/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33490/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33486","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33486/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33486/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33486/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33486","id":1097136474,"node_id":"I_kwDOA5dJV85BZPla","number":33486,"title":"Shard Out Approach: Shard2Shard Storage Policy?","user":{"login":"sv3t0sl4v","id":56256300,"node_id":"MDQ6VXNlcjU2MjU2MzAw","avatar_url":"https://avatars.githubusercontent.com/u/56256300?v=4","gravatar_id":"","url":"https://api.github.com/users/sv3t0sl4v","html_url":"https://github.com/sv3t0sl4v","followers_url":"https://api.github.com/users/sv3t0sl4v/followers","following_url":"https://api.github.com/users/sv3t0sl4v/following{/other_user}","gists_url":"https://api.github.com/users/sv3t0sl4v/gists{/gist_id}","starred_url":"https://api.github.com/users/sv3t0sl4v/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sv3t0sl4v/subscriptions","organizations_url":"https://api.github.com/users/sv3t0sl4v/orgs","repos_url":"https://api.github.com/users/sv3t0sl4v/repos","events_url":"https://api.github.com/users/sv3t0sl4v/events{/privacy}","received_events_url":"https://api.github.com/users/sv3t0sl4v/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-01-09T08:26:53Z","updated_at":"2022-01-09T08:28:38Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"How to approach sharding out with shards of different storage speed, size and capacity? Could the moved parts be queried while moving? Best way to load balance and not query entire cluster? Started a discussion.\r\n\r\n### Discussed in https://github.com/ClickHouse/ClickHouse/discussions/33477","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33486/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33486/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33485","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33485/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33485/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33485/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33485","id":1097124295,"node_id":"I_kwDOA5dJV85BZMnH","number":33485,"title":"Datas don't be distributed by sharding_key","user":{"login":"cainiaodidi","id":65587510,"node_id":"MDQ6VXNlcjY1NTg3NTEw","avatar_url":"https://avatars.githubusercontent.com/u/65587510?v=4","gravatar_id":"","url":"https://api.github.com/users/cainiaodidi","html_url":"https://github.com/cainiaodidi","followers_url":"https://api.github.com/users/cainiaodidi/followers","following_url":"https://api.github.com/users/cainiaodidi/following{/other_user}","gists_url":"https://api.github.com/users/cainiaodidi/gists{/gist_id}","starred_url":"https://api.github.com/users/cainiaodidi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cainiaodidi/subscriptions","organizations_url":"https://api.github.com/users/cainiaodidi/orgs","repos_url":"https://api.github.com/users/cainiaodidi/repos","events_url":"https://api.github.com/users/cainiaodidi/events{/privacy}","received_events_url":"https://api.github.com/users/cainiaodidi/received_events","type":"User","site_admin":false},"labels":[{"id":386401510,"node_id":"MDU6TGFiZWwzODY0MDE1MTA=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/question","name":"question","color":"bfdadc","default":true,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2022-01-09T07:12:55Z","updated_at":"2022-01-10T03:03:46Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"On my cluster, there are 60nodes with 30 shards and 2 replicas, and I create a distributed engine table(named table_dist) with sharding_key(named id), and the config of cluster is that all of nodes are the same weight(weight=1), and I insert data into table_dist. And I find that some datas with id%30 equals 10 or 0 are on the same shard_1(shard_num=1). And there are two different value id%30 on most of nodes(eg. id%30==12 or 1 are on the shard_2; id%30==10 or 11 are on the shard_11). It's strange.  Anyway,  on a single node, there must be one value of id%30, why do this happen? ","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33485/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33485/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33476","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33476/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33476/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33476/events","html_url":"https://github.com/ClickHouse/ClickHouse/pull/33476","id":1096943373,"node_id":"PR_kwDOA5dJV84wsHJZ","number":33476,"title":"Added system query update dictionary","user":{"login":"kitaisreal","id":22458333,"node_id":"MDQ6VXNlcjIyNDU4MzMz","avatar_url":"https://avatars.githubusercontent.com/u/22458333?v=4","gravatar_id":"","url":"https://api.github.com/users/kitaisreal","html_url":"https://github.com/kitaisreal","followers_url":"https://api.github.com/users/kitaisreal/followers","following_url":"https://api.github.com/users/kitaisreal/following{/other_user}","gists_url":"https://api.github.com/users/kitaisreal/gists{/gist_id}","starred_url":"https://api.github.com/users/kitaisreal/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kitaisreal/subscriptions","organizations_url":"https://api.github.com/users/kitaisreal/orgs","repos_url":"https://api.github.com/users/kitaisreal/repos","events_url":"https://api.github.com/users/kitaisreal/events{/privacy}","received_events_url":"https://api.github.com/users/kitaisreal/received_events","type":"User","site_admin":false},"labels":[{"id":1309674771,"node_id":"MDU6TGFiZWwxMzA5Njc0Nzcx","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/pr-feature","name":"pr-feature","color":"007700","default":false,"description":"Pull request with new product feature"},{"id":1807683251,"node_id":"MDU6TGFiZWwxODA3NjgzMjUx","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/doc-alert","name":"doc-alert","color":"e51068","default":false,"description":"PR where any documentation work is needed or proceeded"}],"state":"open","locked":false,"assignee":{"login":"tavplubix","id":14847450,"node_id":"MDQ6VXNlcjE0ODQ3NDUw","avatar_url":"https://avatars.githubusercontent.com/u/14847450?v=4","gravatar_id":"","url":"https://api.github.com/users/tavplubix","html_url":"https://github.com/tavplubix","followers_url":"https://api.github.com/users/tavplubix/followers","following_url":"https://api.github.com/users/tavplubix/following{/other_user}","gists_url":"https://api.github.com/users/tavplubix/gists{/gist_id}","starred_url":"https://api.github.com/users/tavplubix/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tavplubix/subscriptions","organizations_url":"https://api.github.com/users/tavplubix/orgs","repos_url":"https://api.github.com/users/tavplubix/repos","events_url":"https://api.github.com/users/tavplubix/events{/privacy}","received_events_url":"https://api.github.com/users/tavplubix/received_events","type":"User","site_admin":false},"assignees":[{"login":"tavplubix","id":14847450,"node_id":"MDQ6VXNlcjE0ODQ3NDUw","avatar_url":"https://avatars.githubusercontent.com/u/14847450?v=4","gravatar_id":"","url":"https://api.github.com/users/tavplubix","html_url":"https://github.com/tavplubix","followers_url":"https://api.github.com/users/tavplubix/followers","following_url":"https://api.github.com/users/tavplubix/following{/other_user}","gists_url":"https://api.github.com/users/tavplubix/gists{/gist_id}","starred_url":"https://api.github.com/users/tavplubix/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tavplubix/subscriptions","organizations_url":"https://api.github.com/users/tavplubix/orgs","repos_url":"https://api.github.com/users/tavplubix/repos","events_url":"https://api.github.com/users/tavplubix/events{/privacy}","received_events_url":"https://api.github.com/users/tavplubix/received_events","type":"User","site_admin":false}],"milestone":null,"comments":0,"created_at":"2022-01-08T14:33:59Z","updated_at":"2022-01-10T16:04:28Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/pulls/33476","html_url":"https://github.com/ClickHouse/ClickHouse/pull/33476","diff_url":"https://github.com/ClickHouse/ClickHouse/pull/33476.diff","patch_url":"https://github.com/ClickHouse/ClickHouse/pull/33476.patch","merged_at":null},"body":"Changelog category (leave one):\r\n- New Feature\r\n\r\nChangelog entry (a user-readable short description of the changes that goes to CHANGELOG.md):\r\nAdded system queries `SYSTEM UPDATE DICTIONARY`, `SYSTEM UPDATE DICTIONARIES`. Closes #28702.\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33476/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33476/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33473","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33473/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33473/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33473/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33473","id":1096928710,"node_id":"I_kwDOA5dJV85BYc3G","number":33473,"title":"Tabular SQL user define functions ","user":{"login":"er77","id":12100294,"node_id":"MDQ6VXNlcjEyMTAwMjk0","avatar_url":"https://avatars.githubusercontent.com/u/12100294?v=4","gravatar_id":"","url":"https://api.github.com/users/er77","html_url":"https://github.com/er77","followers_url":"https://api.github.com/users/er77/followers","following_url":"https://api.github.com/users/er77/following{/other_user}","gists_url":"https://api.github.com/users/er77/gists{/gist_id}","starred_url":"https://api.github.com/users/er77/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/er77/subscriptions","organizations_url":"https://api.github.com/users/er77/orgs","repos_url":"https://api.github.com/users/er77/repos","events_url":"https://api.github.com/users/er77/events{/privacy}","received_events_url":"https://api.github.com/users/er77/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2022-01-08T13:32:07Z","updated_at":"2022-01-08T20:52:10Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"> (you don't have to strictly follow this form)\r\n\r\n\"parameterized view \" - possibility to use parameters not only in \"where\" statement - in any place in SQL query \r\n\r\n> A clear and concise description of what is the intended usage scenario is.\r\n\r\n https://docs.snowflake.com/en/developer-guide/udf/sql/udf-sql-scalar-functions.html\r\n\r\n> A clear and concise description of what you want to happen.\r\n\r\n ","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33473/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33473/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33472","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33472/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33472/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33472/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33472","id":1096925933,"node_id":"I_kwDOA5dJV85BYcLt","number":33472,"title":"variables ","user":{"login":"er77","id":12100294,"node_id":"MDQ6VXNlcjEyMTAwMjk0","avatar_url":"https://avatars.githubusercontent.com/u/12100294?v=4","gravatar_id":"","url":"https://api.github.com/users/er77","html_url":"https://github.com/er77","followers_url":"https://api.github.com/users/er77/followers","following_url":"https://api.github.com/users/er77/following{/other_user}","gists_url":"https://api.github.com/users/er77/gists{/gist_id}","starred_url":"https://api.github.com/users/er77/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/er77/subscriptions","organizations_url":"https://api.github.com/users/er77/orgs","repos_url":"https://api.github.com/users/er77/repos","events_url":"https://api.github.com/users/er77/events{/privacy}","received_events_url":"https://api.github.com/users/er77/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2022-01-08T13:20:13Z","updated_at":"2022-01-08T22:22:35Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"> (you don't have to strictly follow this form)\r\n\r\nuse query result in the different SQL statements \r\n\r\n> A clear and concise description of what is the intended usage scenario is.\r\n\r\nhttps://docs.snowflake.com/en/sql-reference/session-variables.html\r\n\r\n ","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33472/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33472/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33471","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33471/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33471/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33471/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33471","id":1096924746,"node_id":"I_kwDOA5dJV85BYb5K","number":33471,"title":"CONNECTION_LINK ","user":{"login":"er77","id":12100294,"node_id":"MDQ6VXNlcjEyMTAwMjk0","avatar_url":"https://avatars.githubusercontent.com/u/12100294?v=4","gravatar_id":"","url":"https://api.github.com/users/er77","html_url":"https://github.com/er77","followers_url":"https://api.github.com/users/er77/followers","following_url":"https://api.github.com/users/er77/following{/other_user}","gists_url":"https://api.github.com/users/er77/gists{/gist_id}","starred_url":"https://api.github.com/users/er77/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/er77/subscriptions","organizations_url":"https://api.github.com/users/er77/orgs","repos_url":"https://api.github.com/users/er77/repos","events_url":"https://api.github.com/users/er77/events{/privacy}","received_events_url":"https://api.github.com/users/er77/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":1365579236,"node_id":"MDU6TGFiZWwxMzY1NTc5MjM2","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/minor","name":"minor","color":"FFF8F8","default":false,"description":"Priority: minor"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2022-01-08T13:14:33Z","updated_at":"2022-01-09T16:26:23Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"> (you don't have to strictly follow this form)\r\n\r\nPossibility to avoid hardcoding external table credentials in the each tables definitions\r\n\r\nfor example \r\n\r\nas is \r\n \r\nCREATE TABLE s3_engine_table (name String, value UInt32)\r\n    ENGINE = S3(path, [aws_access_key_id, aws_secret_access_key,] format, [compression])\r\n    [SETTINGS ...] \r\n\r\n to be\r\n\r\nCREATE EXTERNAL_CONNECTION EXTERNAL_CONNECTION_NAME as \r\n(path, [aws_access_key_id, aws_secret_access_key,] format, [compression]) ;\r\n\r\nCREATE TABLE s3_engine_table (name String, value UInt32)\r\n    ENGINE = S3(EXTERNAL_CONNECTION_NAME)\r\n    [SETTINGS ...] \r\n \r\n\r\n> A clear and concise description of what is the intended usage scenario is.\r\n\r\nIt helps to change security credentials for all external tables with one command\r\n ","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33471/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33471/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33467","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33467/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33467/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33467/events","html_url":"https://github.com/ClickHouse/ClickHouse/pull/33467","id":1096914891,"node_id":"PR_kwDOA5dJV84wsC_-","number":33467,"title":"add function addressToLineWithInlines","user":{"login":"cmsxbc","id":3500109,"node_id":"MDQ6VXNlcjM1MDAxMDk=","avatar_url":"https://avatars.githubusercontent.com/u/3500109?v=4","gravatar_id":"","url":"https://api.github.com/users/cmsxbc","html_url":"https://github.com/cmsxbc","followers_url":"https://api.github.com/users/cmsxbc/followers","following_url":"https://api.github.com/users/cmsxbc/following{/other_user}","gists_url":"https://api.github.com/users/cmsxbc/gists{/gist_id}","starred_url":"https://api.github.com/users/cmsxbc/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cmsxbc/subscriptions","organizations_url":"https://api.github.com/users/cmsxbc/orgs","repos_url":"https://api.github.com/users/cmsxbc/repos","events_url":"https://api.github.com/users/cmsxbc/events{/privacy}","received_events_url":"https://api.github.com/users/cmsxbc/received_events","type":"User","site_admin":false},"labels":[{"id":1304141686,"node_id":"MDU6TGFiZWwxMzA0MTQxNjg2","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/pr-improvement","name":"pr-improvement","color":"007700","default":false,"description":"Pull request with some product improvements"},{"id":3627025164,"node_id":"LA_kwDOA5dJV87YMAMM","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/can%20be%20tested","name":"can be tested","color":"1d76db","default":false,"description":""}],"state":"open","locked":false,"assignee":{"login":"CurtizJ","id":20361854,"node_id":"MDQ6VXNlcjIwMzYxODU0","avatar_url":"https://avatars.githubusercontent.com/u/20361854?v=4","gravatar_id":"","url":"https://api.github.com/users/CurtizJ","html_url":"https://github.com/CurtizJ","followers_url":"https://api.github.com/users/CurtizJ/followers","following_url":"https://api.github.com/users/CurtizJ/following{/other_user}","gists_url":"https://api.github.com/users/CurtizJ/gists{/gist_id}","starred_url":"https://api.github.com/users/CurtizJ/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/CurtizJ/subscriptions","organizations_url":"https://api.github.com/users/CurtizJ/orgs","repos_url":"https://api.github.com/users/CurtizJ/repos","events_url":"https://api.github.com/users/CurtizJ/events{/privacy}","received_events_url":"https://api.github.com/users/CurtizJ/received_events","type":"User","site_admin":false},"assignees":[{"login":"CurtizJ","id":20361854,"node_id":"MDQ6VXNlcjIwMzYxODU0","avatar_url":"https://avatars.githubusercontent.com/u/20361854?v=4","gravatar_id":"","url":"https://api.github.com/users/CurtizJ","html_url":"https://github.com/CurtizJ","followers_url":"https://api.github.com/users/CurtizJ/followers","following_url":"https://api.github.com/users/CurtizJ/following{/other_user}","gists_url":"https://api.github.com/users/CurtizJ/gists{/gist_id}","starred_url":"https://api.github.com/users/CurtizJ/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/CurtizJ/subscriptions","organizations_url":"https://api.github.com/users/CurtizJ/orgs","repos_url":"https://api.github.com/users/CurtizJ/repos","events_url":"https://api.github.com/users/CurtizJ/events{/privacy}","received_events_url":"https://api.github.com/users/CurtizJ/received_events","type":"User","site_admin":false}],"milestone":null,"comments":5,"created_at":"2022-01-08T12:27:28Z","updated_at":"2022-01-28T08:20:51Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/pulls/33467","html_url":"https://github.com/ClickHouse/ClickHouse/pull/33467","diff_url":"https://github.com/ClickHouse/ClickHouse/pull/33467.diff","patch_url":"https://github.com/ClickHouse/ClickHouse/pull/33467.patch","merged_at":null},"body":"Changelog category (leave one):\r\n- Improvement\r\n\r\n\r\nChangelog entry (a user-readable short description of the changes that goes to CHANGELOG.md):\r\nadd function addressToLineWithInlines. Close #26211 \r\n\r\nDetailed description / Documentation draft:\r\nSee #26211 \r\nThe 2 old test changed because I add a new privilege make them failed.\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33467/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33467/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33463","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33463/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33463/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33463/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33463","id":1096829571,"node_id":"I_kwDOA5dJV85BYEqD","number":33463,"title":"Bug in Apache Avro","user":{"login":"alexey-milovidov","id":18581488,"node_id":"MDQ6VXNlcjE4NTgxNDg4","avatar_url":"https://avatars.githubusercontent.com/u/18581488?v=4","gravatar_id":"","url":"https://api.github.com/users/alexey-milovidov","html_url":"https://github.com/alexey-milovidov","followers_url":"https://api.github.com/users/alexey-milovidov/followers","following_url":"https://api.github.com/users/alexey-milovidov/following{/other_user}","gists_url":"https://api.github.com/users/alexey-milovidov/gists{/gist_id}","starred_url":"https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexey-milovidov/subscriptions","organizations_url":"https://api.github.com/users/alexey-milovidov/orgs","repos_url":"https://api.github.com/users/alexey-milovidov/repos","events_url":"https://api.github.com/users/alexey-milovidov/events{/privacy}","received_events_url":"https://api.github.com/users/alexey-milovidov/received_events","type":"User","site_admin":false},"labels":[{"id":2104602822,"node_id":"MDU6TGFiZWwyMTA0NjAyODIy","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/fuzz","name":"fuzz","color":"abc4ea","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-01-08T04:23:27Z","updated_at":"2022-01-08T04:23:27Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"[A link to the report](https://s3.amazonaws.com/clickhouse-test-reports/33451/905d5be28854abab9e7dd847912fd15b40441876/stress_test__address__actions_/stderr.log)\r\n\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33463/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33463/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33461","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33461/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33461/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33461/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33461","id":1096682697,"node_id":"I_kwDOA5dJV85BXgzJ","number":33461,"title":"Unexpected behaviour on adding a column using sub-query ","user":{"login":"sulayliu","id":65028492,"node_id":"MDQ6VXNlcjY1MDI4NDky","avatar_url":"https://avatars.githubusercontent.com/u/65028492?v=4","gravatar_id":"","url":"https://api.github.com/users/sulayliu","html_url":"https://github.com/sulayliu","followers_url":"https://api.github.com/users/sulayliu/followers","following_url":"https://api.github.com/users/sulayliu/following{/other_user}","gists_url":"https://api.github.com/users/sulayliu/gists{/gist_id}","starred_url":"https://api.github.com/users/sulayliu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sulayliu/subscriptions","organizations_url":"https://api.github.com/users/sulayliu/orgs","repos_url":"https://api.github.com/users/sulayliu/repos","events_url":"https://api.github.com/users/sulayliu/events{/privacy}","received_events_url":"https://api.github.com/users/sulayliu/received_events","type":"User","site_admin":false},"labels":[{"id":1575085465,"node_id":"MDU6TGFiZWwxNTc1MDg1NDY1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/unexpected%20behaviour","name":"unexpected behaviour","color":"e088ca","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2022-01-07T21:28:15Z","updated_at":"2022-01-12T17:55:21Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"CH version: 21.12.3 /21.8.12\r\n\r\n```\r\nCREATE TABLE m1 (\r\n\ta Int32, \r\n\tb String\r\n) ENGINE=MergeTree ORDER BY tuple();\r\n\r\nINSERT INTO m1 (a,b) VALUES (1,'Val1'),(2,'Val2');\r\n\r\nCREATE TABLE m2 (\r\n\ta Int32, \r\n\tb String, \r\n    c String MATERIALIZED (SELECT ifNull(b,'') FROM m1 WHERE a = 1 LIMIT 1)\r\n) ENGINE=MergeTree ORDER BY tuple();\r\n```\r\nwhen a column using subquery, it will throw error:\r\n>Code: 116. DB::Exception: Received from localhost:9000. DB::Exception: Select query is not allowed in columns DEFAULT expression. (THERE_IS_NO_DEFAULT_VALUE)\r\n\r\nthis is expected.\r\nbut if we create `m2` using If function, no error:\r\n```\r\nCREATE TABLE m2 (\r\n\ta Int32, \r\n\tb String, \r\n    c String MATERIALIZED IF(a=1, (SELECT ifNull(b,'') FROM m1 WHERE a = 1 LIMIT 1),(SELECT ifNull(b,'') FROM m1 WHERE a = 2 LIMIT 1))\r\n) ENGINE=MergeTree ORDER BY tuple();\r\n\r\nINSERT INTO m2 VALUES (1, 'Name1'), (2, 'Name2'),(1, 'Name3'), (2, 'Name4');\r\n\r\nselect *,c from m2;\r\n\r\n┌─a─┬─b─────┬─c────┐\r\n│ 1 │ Name1 │ Val1 │\r\n│ 2 │ Name2 │ Val2 │\r\n│ 1 │ Name3 │ Val1 │\r\n│ 2 │ Name4 │ Val2 │\r\n└───┴───────┴──────┘\r\n\r\n```\r\n\r\n**Unexpected behaviour:\r\ntable m2 should not create, because using  subquery on column c.**\r\n\r\nwhile I drop `m1', and detach and attach `m2`,\r\n```\r\ndrop table m1;\r\ndetach table m2;\r\nattach table m2;\r\n```\r\n\r\nit will throw an exception:\r\n```\r\nReceived exception from server (version 21.12.3):\r\nCode: 60. DB::Exception: Received from localhost:9000. DB::Exception: Table default.m1 doesn't exist: While processing (SELECT ifNull(b, '') FROM default.m1 WHERE a = 1 LIMIT 1) AS _subquery41: While processing if(a = 1, (SELECT ifNull(b, '') FROM default.m1 WHERE a = 1 LIMIT 1) AS _subquery41, (SELECT ifNull(b, '') FROM default.m1 WHERE a = 2 LIMIT 1) AS _subquery42) AS c_tmp_alter10149437386605524296: While processing _CAST(if(a = 1, (SELECT ifNull(b, '') FROM default.m1 WHERE a = 1 LIMIT 1) AS _subquery41, (SELECT ifNull(b, '') FROM default.m1 WHERE a = 2 LIMIT 1) AS _subquery42) AS c_tmp_alter10149437386605524296, 'String') AS c: default expression and column type are incompatible.. (UNKNOWN_TABLE)\r\n```\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33461/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33461/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33457","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33457/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33457/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33457/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33457","id":1096529593,"node_id":"I_kwDOA5dJV85BW7a5","number":33457,"title":"Lock free drop partition (part) / truncate","user":{"login":"den-crane","id":19737682,"node_id":"MDQ6VXNlcjE5NzM3Njgy","avatar_url":"https://avatars.githubusercontent.com/u/19737682?v=4","gravatar_id":"","url":"https://api.github.com/users/den-crane","html_url":"https://github.com/den-crane","followers_url":"https://api.github.com/users/den-crane/followers","following_url":"https://api.github.com/users/den-crane/following{/other_user}","gists_url":"https://api.github.com/users/den-crane/gists{/gist_id}","starred_url":"https://api.github.com/users/den-crane/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/den-crane/subscriptions","organizations_url":"https://api.github.com/users/den-crane/orgs","repos_url":"https://api.github.com/users/den-crane/repos","events_url":"https://api.github.com/users/den-crane/events{/privacy}","received_events_url":"https://api.github.com/users/den-crane/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null}],"state":"open","locked":false,"assignee":{"login":"tavplubix","id":14847450,"node_id":"MDQ6VXNlcjE0ODQ3NDUw","avatar_url":"https://avatars.githubusercontent.com/u/14847450?v=4","gravatar_id":"","url":"https://api.github.com/users/tavplubix","html_url":"https://github.com/tavplubix","followers_url":"https://api.github.com/users/tavplubix/followers","following_url":"https://api.github.com/users/tavplubix/following{/other_user}","gists_url":"https://api.github.com/users/tavplubix/gists{/gist_id}","starred_url":"https://api.github.com/users/tavplubix/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tavplubix/subscriptions","organizations_url":"https://api.github.com/users/tavplubix/orgs","repos_url":"https://api.github.com/users/tavplubix/repos","events_url":"https://api.github.com/users/tavplubix/events{/privacy}","received_events_url":"https://api.github.com/users/tavplubix/received_events","type":"User","site_admin":false},"assignees":[{"login":"tavplubix","id":14847450,"node_id":"MDQ6VXNlcjE0ODQ3NDUw","avatar_url":"https://avatars.githubusercontent.com/u/14847450?v=4","gravatar_id":"","url":"https://api.github.com/users/tavplubix","html_url":"https://github.com/tavplubix","followers_url":"https://api.github.com/users/tavplubix/followers","following_url":"https://api.github.com/users/tavplubix/following{/other_user}","gists_url":"https://api.github.com/users/tavplubix/gists{/gist_id}","starred_url":"https://api.github.com/users/tavplubix/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tavplubix/subscriptions","organizations_url":"https://api.github.com/users/tavplubix/orgs","repos_url":"https://api.github.com/users/tavplubix/repos","events_url":"https://api.github.com/users/tavplubix/events{/privacy}","received_events_url":"https://api.github.com/users/tavplubix/received_events","type":"User","site_admin":false}],"milestone":null,"comments":4,"created_at":"2022-01-07T17:43:07Z","updated_at":"2022-01-18T13:51:32Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"body":"The current behavior \r\n\r\n```sql\r\ncreate table x (a Int64) Engine=MergeTree order by a;\r\ninsert into x select from numbers(10);\r\n\r\nT1:\r\nsession1: select sleepEachRow(3) from x;\r\nsession2: truncate table x;  -- blocked\r\nsession3: select * from x;   -- blocked\r\n\r\nT2: \r\nsession1: 10 rows in set. Elapsed: 33.002 sec.\r\nsession2: Ok. Elapsed: 30.810 sec.                  (session2 is blocked by Read Lock from session1.)\r\nsession3: 0 rows in set. Elapsed: 28.604 sec.       (session3 is blocked by Write Lock from session2.)\r\n```\r\n\r\n\r\n\r\n\r\nBut what if `truncate`, `drop partition` and `drop part` just mark the removed parts as inactive?\r\n\r\nIn this case they became almost lock free because no need to wait for session1. \r\nAnd these operations became almost instant because there is no need to wait for a long file removal (ext4 sync unlink).\r\n\r\nIt makes problems:\r\n\r\n1) disk space not-immediate freeing. But instead of 8 minutes these special inactive parts can be stored for 1 second (no problem with racing `SELECTs` because of refcnt=1)\r\n(moreover all inactive parts, even already existing, should be stored for only \"1\" second)\r\n\r\n2) inactive parts resurrection for not-Replicated tables after restart. But we could implement a some registry for inactive parts, for example move to a folder `/inactive` or rename them with prefix `inactive_` or we could create an empty part which covers all removed parts in a partition (by min block and max block).\r\n(currently an empty active part will be removed immediately, it should be addressed for this special case).\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33457/reactions","total_count":2,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33457/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33449","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33449/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33449/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33449/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33449","id":1096175566,"node_id":"I_kwDOA5dJV85BVk_O","number":33449,"title":"Hashtable-like analogue of map","user":{"login":"yard","id":62775,"node_id":"MDQ6VXNlcjYyNzc1","avatar_url":"https://avatars.githubusercontent.com/u/62775?v=4","gravatar_id":"","url":"https://api.github.com/users/yard","html_url":"https://github.com/yard","followers_url":"https://api.github.com/users/yard/followers","following_url":"https://api.github.com/users/yard/following{/other_user}","gists_url":"https://api.github.com/users/yard/gists{/gist_id}","starred_url":"https://api.github.com/users/yard/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yard/subscriptions","organizations_url":"https://api.github.com/users/yard/orgs","repos_url":"https://api.github.com/users/yard/repos","events_url":"https://api.github.com/users/yard/events{/privacy}","received_events_url":"https://api.github.com/users/yard/received_events","type":"User","site_admin":false},"labels":[{"id":386401510,"node_id":"MDU6TGFiZWwzODY0MDE1MTA=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/question","name":"question","color":"bfdadc","default":true,"description":""}],"state":"open","locked":false,"assignee":{"login":"CurtizJ","id":20361854,"node_id":"MDQ6VXNlcjIwMzYxODU0","avatar_url":"https://avatars.githubusercontent.com/u/20361854?v=4","gravatar_id":"","url":"https://api.github.com/users/CurtizJ","html_url":"https://github.com/CurtizJ","followers_url":"https://api.github.com/users/CurtizJ/followers","following_url":"https://api.github.com/users/CurtizJ/following{/other_user}","gists_url":"https://api.github.com/users/CurtizJ/gists{/gist_id}","starred_url":"https://api.github.com/users/CurtizJ/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/CurtizJ/subscriptions","organizations_url":"https://api.github.com/users/CurtizJ/orgs","repos_url":"https://api.github.com/users/CurtizJ/repos","events_url":"https://api.github.com/users/CurtizJ/events{/privacy}","received_events_url":"https://api.github.com/users/CurtizJ/received_events","type":"User","site_admin":false},"assignees":[{"login":"CurtizJ","id":20361854,"node_id":"MDQ6VXNlcjIwMzYxODU0","avatar_url":"https://avatars.githubusercontent.com/u/20361854?v=4","gravatar_id":"","url":"https://api.github.com/users/CurtizJ","html_url":"https://github.com/CurtizJ","followers_url":"https://api.github.com/users/CurtizJ/followers","following_url":"https://api.github.com/users/CurtizJ/following{/other_user}","gists_url":"https://api.github.com/users/CurtizJ/gists{/gist_id}","starred_url":"https://api.github.com/users/CurtizJ/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/CurtizJ/subscriptions","organizations_url":"https://api.github.com/users/CurtizJ/orgs","repos_url":"https://api.github.com/users/CurtizJ/repos","events_url":"https://api.github.com/users/CurtizJ/events{/privacy}","received_events_url":"https://api.github.com/users/CurtizJ/received_events","type":"User","site_admin":false}],"milestone":null,"comments":9,"created_at":"2022-01-07T10:11:15Z","updated_at":"2022-01-13T09:27:23Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Since maps are implemented as arrays in Clickhouse, doing lookups (via `[]` indexer, using `mapContains` etc) is taking linear time. \r\n\r\nIs there any way to \"convert\" key-value pairs into a hashtable-like sturcture to get better (logarithmic or constant) lookup time?\r\n\r\nA practical example: imagine a query doing a scan on big table where some dimension's value requiring a re-map of column's value into another value via a user-provided map. Normally, a dictionary could be employed here, but it proves impractical if the user-provided map is highly dynamic or simply too big to account for all possible combinations, whereas a specific instance of a query requires just a subset of those pairs. One can come up with a setup like:\r\n\r\n```\r\nSELECT count(value) FROM (\r\n    WITH map(0, '1', 2, '3', 4, '5', 6, '7', 8, '9') AS lookup\r\n    SELECT lookup[n.number % 9] AS value FROM numbers(1e8) AS n\r\n)\r\n```\r\n\r\nThis works moderately well as long as the map is \"small\" – the above query reports around ~100M rows/sec on my setup. However, as soon as the map grows, to \"bigger\" values (I am quoting here since \"bigger\" can be as small as 10s of elements), the performance degrades:\r\n\r\n```\r\nSELECT count(value) FROM (\r\n    WITH map(0, '1', 2, '3', 4, '5', 6, '7', 8, '9', 10, '11', 12, '13', 14, '15', 16, '17', 18, '19', 20, '21', 22, '23', 24, '25', 26, '27', 28, '29', 30, '31', 32, '33', 34, '35', 36, '37', 38, '39', 40, '41', 42, '43', 44, '45', 46, '47', 48, '49', 50, '51', 52, '53', 54, '55', 56, '57', 58, '59', 60, '61', 62, '63') AS lookup\r\n    SELECT lookup[n.number % 63] value FROM numbers(1e8) AS n\r\n)\r\n```\r\n\r\nThe above runs twice as slow as the first one. Supplying a map of 256 elements (which is arguably a very reasonable size still), scan speed becomes under 20M rows/sec.\r\n\r\nP.S. Clickhouse version used for above tests is 21.10.5.3 running on x86 (AWS c5.4xlarge instance).","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33449/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33449/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33448","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33448/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33448/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33448/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33448","id":1096135820,"node_id":"I_kwDOA5dJV85BVbSM","number":33448,"title":"Which settings or parameters in ClickHouse control the IO speed when materialize Projection","user":{"login":"ggchangan","id":6263801,"node_id":"MDQ6VXNlcjYyNjM4MDE=","avatar_url":"https://avatars.githubusercontent.com/u/6263801?v=4","gravatar_id":"","url":"https://api.github.com/users/ggchangan","html_url":"https://github.com/ggchangan","followers_url":"https://api.github.com/users/ggchangan/followers","following_url":"https://api.github.com/users/ggchangan/following{/other_user}","gists_url":"https://api.github.com/users/ggchangan/gists{/gist_id}","starred_url":"https://api.github.com/users/ggchangan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ggchangan/subscriptions","organizations_url":"https://api.github.com/users/ggchangan/orgs","repos_url":"https://api.github.com/users/ggchangan/repos","events_url":"https://api.github.com/users/ggchangan/events{/privacy}","received_events_url":"https://api.github.com/users/ggchangan/received_events","type":"User","site_admin":false},"labels":[{"id":386401510,"node_id":"MDU6TGFiZWwzODY0MDE1MTA=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/question","name":"question","color":"bfdadc","default":true,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2022-01-07T09:25:05Z","updated_at":"2022-01-15T08:03:20Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"The disk read through is about 250Mb/s when I do materialize Projection operation. and it's still about 250Mb/s even when I materialize 10 different Projections in the same table. So I want to know which settings or parameters in ClickHouse control the IO speed when materialize Projection.\r\nThanks very much for any response!","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33448/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33448/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33446","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33446/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33446/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33446/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33446","id":1096060676,"node_id":"I_kwDOA5dJV85BVI8E","number":33446,"title":"Query with 1000 JOINs takes long time to run","user":{"login":"alexey-milovidov","id":18581488,"node_id":"MDQ6VXNlcjE4NTgxNDg4","avatar_url":"https://avatars.githubusercontent.com/u/18581488?v=4","gravatar_id":"","url":"https://api.github.com/users/alexey-milovidov","html_url":"https://github.com/alexey-milovidov","followers_url":"https://api.github.com/users/alexey-milovidov/followers","following_url":"https://api.github.com/users/alexey-milovidov/following{/other_user}","gists_url":"https://api.github.com/users/alexey-milovidov/gists{/gist_id}","starred_url":"https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexey-milovidov/subscriptions","organizations_url":"https://api.github.com/users/alexey-milovidov/orgs","repos_url":"https://api.github.com/users/alexey-milovidov/repos","events_url":"https://api.github.com/users/alexey-milovidov/events{/privacy}","received_events_url":"https://api.github.com/users/alexey-milovidov/received_events","type":"User","site_admin":false},"labels":[{"id":756395244,"node_id":"MDU6TGFiZWw3NTYzOTUyNDQ=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/performance","name":"performance","color":"c2e0c6","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2022-01-07T07:29:37Z","updated_at":"2022-01-07T22:01:39Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"This query does not finish in several seconds:\r\n\r\n`SELECT * FROM (SELECT 1 AS x) t1 JOIN (SELECT 1 AS x) t2 ON t1.x = t2.x JOIN (SELECT 1 AS x) t3 ON t1.x = t3.x JOIN (SELECT 1 AS x) t4 ON t1.x = t4.x JOIN (SELECT 1 AS x) t5 ON t1.x = t5.x JOIN (SELECT 1 AS x) t6 ON t1.x = t6.x JOIN (SELECT 1 AS x) t7 ON t1.x = t7.x JOIN (SELECT 1 AS x) t8 ON t1.x = t8.x JOIN (SELECT 1 AS x) t9 ON t1.x = t9.x JOIN (SELECT 1 AS x) t10 ON t1.x = t10.x JOIN (SELECT 1 AS x) t11 ON t1.x = t11.x JOIN (SELECT 1 AS x) t12 ON t1.x = t12.x JOIN (SELECT 1 AS x) t13 ON t1.x = t13.x JOIN (SELECT 1 AS x) t14 ON t1.x = t14.x JOIN (SELECT 1 AS x) t15 ON t1.x = t15.x JOIN (SELECT 1 AS x) t16 ON t1.x = t16.x JOIN (SELECT 1 AS x) t17 ON t1.x = t17.x JOIN (SELECT 1 AS x) t18 ON t1.x = t18.x JOIN (SELECT 1 AS x) t19 ON t1.x = t19.x JOIN (SELECT 1 AS x) t20 ON t1.x = t20.x JOIN (SELECT 1 AS x) t21 ON t1.x = t21.x JOIN (SELECT 1 AS x) t22 ON t1.x = t22.x JOIN (SELECT 1 AS x) t23 ON t1.x = t23.x JOIN (SELECT 1 AS x) t24 ON t1.x = t24.x JOIN (SELECT 1 AS x) t25 ON t1.x = t25.x JOIN (SELECT 1 AS x) t26 ON t1.x = t26.x JOIN (SELECT 1 AS x) t27 ON t1.x = t27.x JOIN (SELECT 1 AS x) t28 ON t1.x = t28.x JOIN (SELECT 1 AS x) t29 ON t1.x = t29.x JOIN (SELECT 1 AS x) t30 ON t1.x = t30.x JOIN (SELECT 1 AS x) t31 ON t1.x = t31.x JOIN (SELECT 1 AS x) t32 ON t1.x = t32.x JOIN (SELECT 1 AS x) t33 ON t1.x = t33.x JOIN (SELECT 1 AS x) t34 ON t1.x = t34.x JOIN (SELECT 1 AS x) t35 ON t1.x = t35.x JOIN (SELECT 1 AS x) t36 ON t1.x = t36.x JOIN (SELECT 1 AS x) t37 ON t1.x = t37.x JOIN (SELECT 1 AS x) t38 ON t1.x = t38.x JOIN (SELECT 1 AS x) t39 ON t1.x = t39.x JOIN (SELECT 1 AS x) t40 ON t1.x = t40.x JOIN (SELECT 1 AS x) t41 ON t1.x = t41.x JOIN (SELECT 1 AS x) t42 ON t1.x = t42.x JOIN (SELECT 1 AS x) t43 ON t1.x = t43.x JOIN (SELECT 1 AS x) t44 ON t1.x = t44.x JOIN (SELECT 1 AS x) t45 ON t1.x = t45.x JOIN (SELECT 1 AS x) t46 ON t1.x = t46.x JOIN (SELECT 1 AS x) t47 ON t1.x = t47.x JOIN (SELECT 1 AS x) t48 ON t1.x = t48.x JOIN (SELECT 1 AS x) t49 ON t1.x = t49.x JOIN (SELECT 1 AS x) t50 ON t1.x = t50.x JOIN (SELECT 1 AS x) t51 ON t1.x = t51.x JOIN (SELECT 1 AS x) t52 ON t1.x = t52.x JOIN (SELECT 1 AS x) t53 ON t1.x = t53.x JOIN (SELECT 1 AS x) t54 ON t1.x = t54.x JOIN (SELECT 1 AS x) t55 ON t1.x = t55.x JOIN (SELECT 1 AS x) t56 ON t1.x = t56.x JOIN (SELECT 1 AS x) t57 ON t1.x = t57.x JOIN (SELECT 1 AS x) t58 ON t1.x = t58.x JOIN (SELECT 1 AS x) t59 ON t1.x = t59.x JOIN (SELECT 1 AS x) t60 ON t1.x = t60.x JOIN (SELECT 1 AS x) t61 ON t1.x = t61.x JOIN (SELECT 1 AS x) t62 ON t1.x = t62.x JOIN (SELECT 1 AS x) t63 ON t1.x = t63.x JOIN (SELECT 1 AS x) t64 ON t1.x = t64.x JOIN (SELECT 1 AS x) t65 ON t1.x = t65.x JOIN (SELECT 1 AS x) t66 ON t1.x = t66.x JOIN (SELECT 1 AS x) t67 ON t1.x = t67.x JOIN (SELECT 1 AS x) t68 ON t1.x = t68.x JOIN (SELECT 1 AS x) t69 ON t1.x = t69.x JOIN (SELECT 1 AS x) t70 ON t1.x = t70.x JOIN (SELECT 1 AS x) t71 ON t1.x = t71.x JOIN (SELECT 1 AS x) t72 ON t1.x = t72.x JOIN (SELECT 1 AS x) t73 ON t1.x = t73.x JOIN (SELECT 1 AS x) t74 ON t1.x = t74.x JOIN (SELECT 1 AS x) t75 ON t1.x = t75.x JOIN (SELECT 1 AS x) t76 ON t1.x = t76.x JOIN (SELECT 1 AS x) t77 ON t1.x = t77.x JOIN (SELECT 1 AS x) t78 ON t1.x = t78.x JOIN (SELECT 1 AS x) t79 ON t1.x = t79.x JOIN (SELECT 1 AS x) t80 ON t1.x = t80.x JOIN (SELECT 1 AS x) t81 ON t1.x = t81.x JOIN (SELECT 1 AS x) t82 ON t1.x = t82.x JOIN (SELECT 1 AS x) t83 ON t1.x = t83.x JOIN (SELECT 1 AS x) t84 ON t1.x = t84.x JOIN (SELECT 1 AS x) t85 ON t1.x = t85.x JOIN (SELECT 1 AS x) t86 ON t1.x = t86.x JOIN (SELECT 1 AS x) t87 ON t1.x = t87.x JOIN (SELECT 1 AS x) t88 ON t1.x = t88.x JOIN (SELECT 1 AS x) t89 ON t1.x = t89.x JOIN (SELECT 1 AS x) t90 ON t1.x = t90.x JOIN (SELECT 1 AS x) t91 ON t1.x = t91.x JOIN (SELECT 1 AS x) t92 ON t1.x = t92.x JOIN (SELECT 1 AS x) t93 ON t1.x = t93.x JOIN (SELECT 1 AS x) t94 ON t1.x = t94.x JOIN (SELECT 1 AS x) t95 ON t1.x = t95.x JOIN (SELECT 1 AS x) t96 ON t1.x = t96.x JOIN (SELECT 1 AS x) t97 ON t1.x = t97.x JOIN (SELECT 1 AS x) t98 ON t1.x = t98.x JOIN (SELECT 1 AS x) t99 ON t1.x = t99.x JOIN (SELECT 1 AS x) t100 ON t1.x = t100.x JOIN (SELECT 1 AS x) t101 ON t1.x = t101.x JOIN (SELECT 1 AS x) t102 ON t1.x = t102.x JOIN (SELECT 1 AS x) t103 ON t1.x = t103.x JOIN (SELECT 1 AS x) t104 ON t1.x = t104.x JOIN (SELECT 1 AS x) t105 ON t1.x = t105.x JOIN (SELECT 1 AS x) t106 ON t1.x = t106.x JOIN (SELECT 1 AS x) t107 ON t1.x = t107.x JOIN (SELECT 1 AS x) t108 ON t1.x = t108.x JOIN (SELECT 1 AS x) t109 ON t1.x = t109.x JOIN (SELECT 1 AS x) t110 ON t1.x = t110.x JOIN (SELECT 1 AS x) t111 ON t1.x = t111.x JOIN (SELECT 1 AS x) t112 ON t1.x = t112.x JOIN (SELECT 1 AS x) t113 ON t1.x = t113.x JOIN (SELECT 1 AS x) t114 ON t1.x = t114.x JOIN (SELECT 1 AS x) t115 ON t1.x = t115.x JOIN (SELECT 1 AS x) t116 ON t1.x = t116.x JOIN (SELECT 1 AS x) t117 ON t1.x = t117.x JOIN (SELECT 1 AS x) t118 ON t1.x = t118.x JOIN (SELECT 1 AS x) t119 ON t1.x = t119.x JOIN (SELECT 1 AS x) t120 ON t1.x = t120.x JOIN (SELECT 1 AS x) t121 ON t1.x = t121.x JOIN (SELECT 1 AS x) t122 ON t1.x = t122.x JOIN (SELECT 1 AS x) t123 ON t1.x = t123.x JOIN (SELECT 1 AS x) t124 ON t1.x = t124.x JOIN (SELECT 1 AS x) t125 ON t1.x = t125.x JOIN (SELECT 1 AS x) t126 ON t1.x = t126.x JOIN (SELECT 1 AS x) t127 ON t1.x = t127.x JOIN (SELECT 1 AS x) t128 ON t1.x = t128.x JOIN (SELECT 1 AS x) t129 ON t1.x = t129.x JOIN (SELECT 1 AS x) t130 ON t1.x = t130.x JOIN (SELECT 1 AS x) t131 ON t1.x = t131.x JOIN (SELECT 1 AS x) t132 ON t1.x = t132.x JOIN (SELECT 1 AS x) t133 ON t1.x = t133.x JOIN (SELECT 1 AS x) t134 ON t1.x = t134.x JOIN (SELECT 1 AS x) t135 ON t1.x = t135.x JOIN (SELECT 1 AS x) t136 ON t1.x = t136.x JOIN (SELECT 1 AS x) t137 ON t1.x = t137.x JOIN (SELECT 1 AS x) t138 ON t1.x = t138.x JOIN (SELECT 1 AS x) t139 ON t1.x = t139.x JOIN (SELECT 1 AS x) t140 ON t1.x = t140.x JOIN (SELECT 1 AS x) t141 ON t1.x = t141.x JOIN (SELECT 1 AS x) t142 ON t1.x = t142.x JOIN (SELECT 1 AS x) t143 ON t1.x = t143.x JOIN (SELECT 1 AS x) t144 ON t1.x = t144.x JOIN (SELECT 1 AS x) t145 ON t1.x = t145.x JOIN (SELECT 1 AS x) t146 ON t1.x = t146.x JOIN (SELECT 1 AS x) t147 ON t1.x = t147.x JOIN (SELECT 1 AS x) t148 ON t1.x = t148.x JOIN (SELECT 1 AS x) t149 ON t1.x = t149.x JOIN (SELECT 1 AS x) t150 ON t1.x = t150.x JOIN (SELECT 1 AS x) t151 ON t1.x = t151.x JOIN (SELECT 1 AS x) t152 ON t1.x = t152.x JOIN (SELECT 1 AS x) t153 ON t1.x = t153.x JOIN (SELECT 1 AS x) t154 ON t1.x = t154.x JOIN (SELECT 1 AS x) t155 ON t1.x = t155.x JOIN (SELECT 1 AS x) t156 ON t1.x = t156.x JOIN (SELECT 1 AS x) t157 ON t1.x = t157.x JOIN (SELECT 1 AS x) t158 ON t1.x = t158.x JOIN (SELECT 1 AS x) t159 ON t1.x = t159.x JOIN (SELECT 1 AS x) t160 ON t1.x = t160.x JOIN (SELECT 1 AS x) t161 ON t1.x = t161.x JOIN (SELECT 1 AS x) t162 ON t1.x = t162.x JOIN (SELECT 1 AS x) t163 ON t1.x = t163.x JOIN (SELECT 1 AS x) t164 ON t1.x = t164.x JOIN (SELECT 1 AS x) t165 ON t1.x = t165.x JOIN (SELECT 1 AS x) t166 ON t1.x = t166.x JOIN (SELECT 1 AS x) t167 ON t1.x = t167.x JOIN (SELECT 1 AS x) t168 ON t1.x = t168.x JOIN (SELECT 1 AS x) t169 ON t1.x = t169.x JOIN (SELECT 1 AS x) t170 ON t1.x = t170.x JOIN (SELECT 1 AS x) t171 ON t1.x = t171.x JOIN (SELECT 1 AS x) t172 ON t1.x = t172.x JOIN (SELECT 1 AS x) t173 ON t1.x = t173.x JOIN (SELECT 1 AS x) t174 ON t1.x = t174.x JOIN (SELECT 1 AS x) t175 ON t1.x = t175.x JOIN (SELECT 1 AS x) t176 ON t1.x = t176.x JOIN (SELECT 1 AS x) t177 ON t1.x = t177.x JOIN (SELECT 1 AS x) t178 ON t1.x = t178.x JOIN (SELECT 1 AS x) t179 ON t1.x = t179.x JOIN (SELECT 1 AS x) t180 ON t1.x = t180.x JOIN (SELECT 1 AS x) t181 ON t1.x = t181.x JOIN (SELECT 1 AS x) t182 ON t1.x = t182.x JOIN (SELECT 1 AS x) t183 ON t1.x = t183.x JOIN (SELECT 1 AS x) t184 ON t1.x = t184.x JOIN (SELECT 1 AS x) t185 ON t1.x = t185.x JOIN (SELECT 1 AS x) t186 ON t1.x = t186.x JOIN (SELECT 1 AS x) t187 ON t1.x = t187.x JOIN (SELECT 1 AS x) t188 ON t1.x = t188.x JOIN (SELECT 1 AS x) t189 ON t1.x = t189.x JOIN (SELECT 1 AS x) t190 ON t1.x = t190.x JOIN (SELECT 1 AS x) t191 ON t1.x = t191.x JOIN (SELECT 1 AS x) t192 ON t1.x = t192.x JOIN (SELECT 1 AS x) t193 ON t1.x = t193.x JOIN (SELECT 1 AS x) t194 ON t1.x = t194.x JOIN (SELECT 1 AS x) t195 ON t1.x = t195.x JOIN (SELECT 1 AS x) t196 ON t1.x = t196.x JOIN (SELECT 1 AS x) t197 ON t1.x = t197.x JOIN (SELECT 1 AS x) t198 ON t1.x = t198.x JOIN (SELECT 1 AS x) t199 ON t1.x = t199.x JOIN (SELECT 1 AS x) t200 ON t1.x = t200.x JOIN (SELECT 1 AS x) t201 ON t1.x = t201.x JOIN (SELECT 1 AS x) t202 ON t1.x = t202.x JOIN (SELECT 1 AS x) t203 ON t1.x = t203.x JOIN (SELECT 1 AS x) t204 ON t1.x = t204.x JOIN (SELECT 1 AS x) t205 ON t1.x = t205.x JOIN (SELECT 1 AS x) t206 ON t1.x = t206.x JOIN (SELECT 1 AS x) t207 ON t1.x = t207.x JOIN (SELECT 1 AS x) t208 ON t1.x = t208.x JOIN (SELECT 1 AS x) t209 ON t1.x = t209.x JOIN (SELECT 1 AS x) t210 ON t1.x = t210.x JOIN (SELECT 1 AS x) t211 ON t1.x = t211.x JOIN (SELECT 1 AS x) t212 ON t1.x = t212.x JOIN (SELECT 1 AS x) t213 ON t1.x = t213.x JOIN (SELECT 1 AS x) t214 ON t1.x = t214.x JOIN (SELECT 1 AS x) t215 ON t1.x = t215.x JOIN (SELECT 1 AS x) t216 ON t1.x = t216.x JOIN (SELECT 1 AS x) t217 ON t1.x = t217.x JOIN (SELECT 1 AS x) t218 ON t1.x = t218.x JOIN (SELECT 1 AS x) t219 ON t1.x = t219.x JOIN (SELECT 1 AS x) t220 ON t1.x = t220.x JOIN (SELECT 1 AS x) t221 ON t1.x = t221.x JOIN (SELECT 1 AS x) t222 ON t1.x = t222.x JOIN (SELECT 1 AS x) t223 ON t1.x = t223.x JOIN (SELECT 1 AS x) t224 ON t1.x = t224.x JOIN (SELECT 1 AS x) t225 ON t1.x = t225.x JOIN (SELECT 1 AS x) t226 ON t1.x = t226.x JOIN (SELECT 1 AS x) t227 ON t1.x = t227.x JOIN (SELECT 1 AS x) t228 ON t1.x = t228.x JOIN (SELECT 1 AS x) t229 ON t1.x = t229.x JOIN (SELECT 1 AS x) t230 ON t1.x = t230.x JOIN (SELECT 1 AS x) t231 ON t1.x = t231.x JOIN (SELECT 1 AS x) t232 ON t1.x = t232.x JOIN (SELECT 1 AS x) t233 ON t1.x = t233.x JOIN (SELECT 1 AS x) t234 ON t1.x = t234.x JOIN (SELECT 1 AS x) t235 ON t1.x = t235.x JOIN (SELECT 1 AS x) t236 ON t1.x = t236.x JOIN (SELECT 1 AS x) t237 ON t1.x = t237.x JOIN (SELECT 1 AS x) t238 ON t1.x = t238.x JOIN (SELECT 1 AS x) t239 ON t1.x = t239.x JOIN (SELECT 1 AS x) t240 ON t1.x = t240.x JOIN (SELECT 1 AS x) t241 ON t1.x = t241.x JOIN (SELECT 1 AS x) t242 ON t1.x = t242.x JOIN (SELECT 1 AS x) t243 ON t1.x = t243.x JOIN (SELECT 1 AS x) t244 ON t1.x = t244.x JOIN (SELECT 1 AS x) t245 ON t1.x = t245.x JOIN (SELECT 1 AS x) t246 ON t1.x = t246.x JOIN (SELECT 1 AS x) t247 ON t1.x = t247.x JOIN (SELECT 1 AS x) t248 ON t1.x = t248.x JOIN (SELECT 1 AS x) t249 ON t1.x = t249.x JOIN (SELECT 1 AS x) t250 ON t1.x = t250.x JOIN (SELECT 1 AS x) t251 ON t1.x = t251.x JOIN (SELECT 1 AS x) t252 ON t1.x = t252.x JOIN (SELECT 1 AS x) t253 ON t1.x = t253.x JOIN (SELECT 1 AS x) t254 ON t1.x = t254.x JOIN (SELECT 1 AS x) t255 ON t1.x = t255.x JOIN (SELECT 1 AS x) t256 ON t1.x = t256.x JOIN (SELECT 1 AS x) t257 ON t1.x = t257.x JOIN (SELECT 1 AS x) t258 ON t1.x = t258.x JOIN (SELECT 1 AS x) t259 ON t1.x = t259.x JOIN (SELECT 1 AS x) t260 ON t1.x = t260.x JOIN (SELECT 1 AS x) t261 ON t1.x = t261.x JOIN (SELECT 1 AS x) t262 ON t1.x = t262.x JOIN (SELECT 1 AS x) t263 ON t1.x = t263.x JOIN (SELECT 1 AS x) t264 ON t1.x = t264.x JOIN (SELECT 1 AS x) t265 ON t1.x = t265.x JOIN (SELECT 1 AS x) t266 ON t1.x = t266.x JOIN (SELECT 1 AS x) t267 ON t1.x = t267.x JOIN (SELECT 1 AS x) t268 ON t1.x = t268.x JOIN (SELECT 1 AS x) t269 ON t1.x = t269.x JOIN (SELECT 1 AS x) t270 ON t1.x = t270.x JOIN (SELECT 1 AS x) t271 ON t1.x = t271.x JOIN (SELECT 1 AS x) t272 ON t1.x = t272.x JOIN (SELECT 1 AS x) t273 ON t1.x = t273.x JOIN (SELECT 1 AS x) t274 ON t1.x = t274.x JOIN (SELECT 1 AS x) t275 ON t1.x = t275.x JOIN (SELECT 1 AS x) t276 ON t1.x = t276.x JOIN (SELECT 1 AS x) t277 ON t1.x = t277.x JOIN (SELECT 1 AS x) t278 ON t1.x = t278.x JOIN (SELECT 1 AS x) t279 ON t1.x = t279.x JOIN (SELECT 1 AS x) t280 ON t1.x = t280.x JOIN (SELECT 1 AS x) t281 ON t1.x = t281.x JOIN (SELECT 1 AS x) t282 ON t1.x = t282.x JOIN (SELECT 1 AS x) t283 ON t1.x = t283.x JOIN (SELECT 1 AS x) t284 ON t1.x = t284.x JOIN (SELECT 1 AS x) t285 ON t1.x = t285.x JOIN (SELECT 1 AS x) t286 ON t1.x = t286.x JOIN (SELECT 1 AS x) t287 ON t1.x = t287.x JOIN (SELECT 1 AS x) t288 ON t1.x = t288.x JOIN (SELECT 1 AS x) t289 ON t1.x = t289.x JOIN (SELECT 1 AS x) t290 ON t1.x = t290.x JOIN (SELECT 1 AS x) t291 ON t1.x = t291.x JOIN (SELECT 1 AS x) t292 ON t1.x = t292.x JOIN (SELECT 1 AS x) t293 ON t1.x = t293.x JOIN (SELECT 1 AS x) t294 ON t1.x = t294.x JOIN (SELECT 1 AS x) t295 ON t1.x = t295.x JOIN (SELECT 1 AS x) t296 ON t1.x = t296.x JOIN (SELECT 1 AS x) t297 ON t1.x = t297.x JOIN (SELECT 1 AS x) t298 ON t1.x = t298.x JOIN (SELECT 1 AS x) t299 ON t1.x = t299.x JOIN (SELECT 1 AS x) t300 ON t1.x = t300.x JOIN (SELECT 1 AS x) t301 ON t1.x = t301.x JOIN (SELECT 1 AS x) t302 ON t1.x = t302.x JOIN (SELECT 1 AS x) t303 ON t1.x = t303.x JOIN (SELECT 1 AS x) t304 ON t1.x = t304.x JOIN (SELECT 1 AS x) t305 ON t1.x = t305.x JOIN (SELECT 1 AS x) t306 ON t1.x = t306.x JOIN (SELECT 1 AS x) t307 ON t1.x = t307.x JOIN (SELECT 1 AS x) t308 ON t1.x = t308.x JOIN (SELECT 1 AS x) t309 ON t1.x = t309.x JOIN (SELECT 1 AS x) t310 ON t1.x = t310.x JOIN (SELECT 1 AS x) t311 ON t1.x = t311.x JOIN (SELECT 1 AS x) t312 ON t1.x = t312.x JOIN (SELECT 1 AS x) t313 ON t1.x = t313.x JOIN (SELECT 1 AS x) t314 ON t1.x = t314.x JOIN (SELECT 1 AS x) t315 ON t1.x = t315.x JOIN (SELECT 1 AS x) t316 ON t1.x = t316.x JOIN (SELECT 1 AS x) t317 ON t1.x = t317.x JOIN (SELECT 1 AS x) t318 ON t1.x = t318.x JOIN (SELECT 1 AS x) t319 ON t1.x = t319.x JOIN (SELECT 1 AS x) t320 ON t1.x = t320.x JOIN (SELECT 1 AS x) t321 ON t1.x = t321.x JOIN (SELECT 1 AS x) t322 ON t1.x = t322.x JOIN (SELECT 1 AS x) t323 ON t1.x = t323.x JOIN (SELECT 1 AS x) t324 ON t1.x = t324.x JOIN (SELECT 1 AS x) t325 ON t1.x = t325.x JOIN (SELECT 1 AS x) t326 ON t1.x = t326.x JOIN (SELECT 1 AS x) t327 ON t1.x = t327.x JOIN (SELECT 1 AS x) t328 ON t1.x = t328.x JOIN (SELECT 1 AS x) t329 ON t1.x = t329.x JOIN (SELECT 1 AS x) t330 ON t1.x = t330.x JOIN (SELECT 1 AS x) t331 ON t1.x = t331.x JOIN (SELECT 1 AS x) t332 ON t1.x = t332.x JOIN (SELECT 1 AS x) t333 ON t1.x = t333.x JOIN (SELECT 1 AS x) t334 ON t1.x = t334.x JOIN (SELECT 1 AS x) t335 ON t1.x = t335.x JOIN (SELECT 1 AS x) t336 ON t1.x = t336.x JOIN (SELECT 1 AS x) t337 ON t1.x = t337.x JOIN (SELECT 1 AS x) t338 ON t1.x = t338.x JOIN (SELECT 1 AS x) t339 ON t1.x = t339.x JOIN (SELECT 1 AS x) t340 ON t1.x = t340.x JOIN (SELECT 1 AS x) t341 ON t1.x = t341.x JOIN (SELECT 1 AS x) t342 ON t1.x = t342.x JOIN (SELECT 1 AS x) t343 ON t1.x = t343.x JOIN (SELECT 1 AS x) t344 ON t1.x = t344.x JOIN (SELECT 1 AS x) t345 ON t1.x = t345.x JOIN (SELECT 1 AS x) t346 ON t1.x = t346.x JOIN (SELECT 1 AS x) t347 ON t1.x = t347.x JOIN (SELECT 1 AS x) t348 ON t1.x = t348.x JOIN (SELECT 1 AS x) t349 ON t1.x = t349.x JOIN (SELECT 1 AS x) t350 ON t1.x = t350.x JOIN (SELECT 1 AS x) t351 ON t1.x = t351.x JOIN (SELECT 1 AS x) t352 ON t1.x = t352.x JOIN (SELECT 1 AS x) t353 ON t1.x = t353.x JOIN (SELECT 1 AS x) t354 ON t1.x = t354.x JOIN (SELECT 1 AS x) t355 ON t1.x = t355.x JOIN (SELECT 1 AS x) t356 ON t1.x = t356.x JOIN (SELECT 1 AS x) t357 ON t1.x = t357.x JOIN (SELECT 1 AS x) t358 ON t1.x = t358.x JOIN (SELECT 1 AS x) t359 ON t1.x = t359.x JOIN (SELECT 1 AS x) t360 ON t1.x = t360.x JOIN (SELECT 1 AS x) t361 ON t1.x = t361.x JOIN (SELECT 1 AS x) t362 ON t1.x = t362.x JOIN (SELECT 1 AS x) t363 ON t1.x = t363.x JOIN (SELECT 1 AS x) t364 ON t1.x = t364.x JOIN (SELECT 1 AS x) t365 ON t1.x = t365.x JOIN (SELECT 1 AS x) t366 ON t1.x = t366.x JOIN (SELECT 1 AS x) t367 ON t1.x = t367.x JOIN (SELECT 1 AS x) t368 ON t1.x = t368.x JOIN (SELECT 1 AS x) t369 ON t1.x = t369.x JOIN (SELECT 1 AS x) t370 ON t1.x = t370.x JOIN (SELECT 1 AS x) t371 ON t1.x = t371.x JOIN (SELECT 1 AS x) t372 ON t1.x = t372.x JOIN (SELECT 1 AS x) t373 ON t1.x = t373.x JOIN (SELECT 1 AS x) t374 ON t1.x = t374.x JOIN (SELECT 1 AS x) t375 ON t1.x = t375.x JOIN (SELECT 1 AS x) t376 ON t1.x = t376.x JOIN (SELECT 1 AS x) t377 ON t1.x = t377.x JOIN (SELECT 1 AS x) t378 ON t1.x = t378.x JOIN (SELECT 1 AS x) t379 ON t1.x = t379.x JOIN (SELECT 1 AS x) t380 ON t1.x = t380.x JOIN (SELECT 1 AS x) t381 ON t1.x = t381.x JOIN (SELECT 1 AS x) t382 ON t1.x = t382.x JOIN (SELECT 1 AS x) t383 ON t1.x = t383.x JOIN (SELECT 1 AS x) t384 ON t1.x = t384.x JOIN (SELECT 1 AS x) t385 ON t1.x = t385.x JOIN (SELECT 1 AS x) t386 ON t1.x = t386.x JOIN (SELECT 1 AS x) t387 ON t1.x = t387.x JOIN (SELECT 1 AS x) t388 ON t1.x = t388.x JOIN (SELECT 1 AS x) t389 ON t1.x = t389.x JOIN (SELECT 1 AS x) t390 ON t1.x = t390.x JOIN (SELECT 1 AS x) t391 ON t1.x = t391.x JOIN (SELECT 1 AS x) t392 ON t1.x = t392.x JOIN (SELECT 1 AS x) t393 ON t1.x = t393.x JOIN (SELECT 1 AS x) t394 ON t1.x = t394.x JOIN (SELECT 1 AS x) t395 ON t1.x = t395.x JOIN (SELECT 1 AS x) t396 ON t1.x = t396.x JOIN (SELECT 1 AS x) t397 ON t1.x = t397.x JOIN (SELECT 1 AS x) t398 ON t1.x = t398.x JOIN (SELECT 1 AS x) t399 ON t1.x = t399.x JOIN (SELECT 1 AS x) t400 ON t1.x = t400.x JOIN (SELECT 1 AS x) t401 ON t1.x = t401.x JOIN (SELECT 1 AS x) t402 ON t1.x = t402.x JOIN (SELECT 1 AS x) t403 ON t1.x = t403.x JOIN (SELECT 1 AS x) t404 ON t1.x = t404.x JOIN (SELECT 1 AS x) t405 ON t1.x = t405.x JOIN (SELECT 1 AS x) t406 ON t1.x = t406.x JOIN (SELECT 1 AS x) t407 ON t1.x = t407.x JOIN (SELECT 1 AS x) t408 ON t1.x = t408.x JOIN (SELECT 1 AS x) t409 ON t1.x = t409.x JOIN (SELECT 1 AS x) t410 ON t1.x = t410.x JOIN (SELECT 1 AS x) t411 ON t1.x = t411.x JOIN (SELECT 1 AS x) t412 ON t1.x = t412.x JOIN (SELECT 1 AS x) t413 ON t1.x = t413.x JOIN (SELECT 1 AS x) t414 ON t1.x = t414.x JOIN (SELECT 1 AS x) t415 ON t1.x = t415.x JOIN (SELECT 1 AS x) t416 ON t1.x = t416.x JOIN (SELECT 1 AS x) t417 ON t1.x = t417.x JOIN (SELECT 1 AS x) t418 ON t1.x = t418.x JOIN (SELECT 1 AS x) t419 ON t1.x = t419.x JOIN (SELECT 1 AS x) t420 ON t1.x = t420.x JOIN (SELECT 1 AS x) t421 ON t1.x = t421.x JOIN (SELECT 1 AS x) t422 ON t1.x = t422.x JOIN (SELECT 1 AS x) t423 ON t1.x = t423.x JOIN (SELECT 1 AS x) t424 ON t1.x = t424.x JOIN (SELECT 1 AS x) t425 ON t1.x = t425.x JOIN (SELECT 1 AS x) t426 ON t1.x = t426.x JOIN (SELECT 1 AS x) t427 ON t1.x = t427.x JOIN (SELECT 1 AS x) t428 ON t1.x = t428.x JOIN (SELECT 1 AS x) t429 ON t1.x = t429.x JOIN (SELECT 1 AS x) t430 ON t1.x = t430.x JOIN (SELECT 1 AS x) t431 ON t1.x = t431.x JOIN (SELECT 1 AS x) t432 ON t1.x = t432.x JOIN (SELECT 1 AS x) t433 ON t1.x = t433.x JOIN (SELECT 1 AS x) t434 ON t1.x = t434.x JOIN (SELECT 1 AS x) t435 ON t1.x = t435.x JOIN (SELECT 1 AS x) t436 ON t1.x = t436.x JOIN (SELECT 1 AS x) t437 ON t1.x = t437.x JOIN (SELECT 1 AS x) t438 ON t1.x = t438.x JOIN (SELECT 1 AS x) t439 ON t1.x = t439.x JOIN (SELECT 1 AS x) t440 ON t1.x = t440.x JOIN (SELECT 1 AS x) t441 ON t1.x = t441.x JOIN (SELECT 1 AS x) t442 ON t1.x = t442.x JOIN (SELECT 1 AS x) t443 ON t1.x = t443.x JOIN (SELECT 1 AS x) t444 ON t1.x = t444.x JOIN (SELECT 1 AS x) t445 ON t1.x = t445.x JOIN (SELECT 1 AS x) t446 ON t1.x = t446.x JOIN (SELECT 1 AS x) t447 ON t1.x = t447.x JOIN (SELECT 1 AS x) t448 ON t1.x = t448.x JOIN (SELECT 1 AS x) t449 ON t1.x = t449.x JOIN (SELECT 1 AS x) t450 ON t1.x = t450.x JOIN (SELECT 1 AS x) t451 ON t1.x = t451.x JOIN (SELECT 1 AS x) t452 ON t1.x = t452.x JOIN (SELECT 1 AS x) t453 ON t1.x = t453.x JOIN (SELECT 1 AS x) t454 ON t1.x = t454.x JOIN (SELECT 1 AS x) t455 ON t1.x = t455.x JOIN (SELECT 1 AS x) t456 ON t1.x = t456.x JOIN (SELECT 1 AS x) t457 ON t1.x = t457.x JOIN (SELECT 1 AS x) t458 ON t1.x = t458.x JOIN (SELECT 1 AS x) t459 ON t1.x = t459.x JOIN (SELECT 1 AS x) t460 ON t1.x = t460.x JOIN (SELECT 1 AS x) t461 ON t1.x = t461.x JOIN (SELECT 1 AS x) t462 ON t1.x = t462.x JOIN (SELECT 1 AS x) t463 ON t1.x = t463.x JOIN (SELECT 1 AS x) t464 ON t1.x = t464.x JOIN (SELECT 1 AS x) t465 ON t1.x = t465.x JOIN (SELECT 1 AS x) t466 ON t1.x = t466.x JOIN (SELECT 1 AS x) t467 ON t1.x = t467.x JOIN (SELECT 1 AS x) t468 ON t1.x = t468.x JOIN (SELECT 1 AS x) t469 ON t1.x = t469.x JOIN (SELECT 1 AS x) t470 ON t1.x = t470.x JOIN (SELECT 1 AS x) t471 ON t1.x = t471.x JOIN (SELECT 1 AS x) t472 ON t1.x = t472.x JOIN (SELECT 1 AS x) t473 ON t1.x = t473.x JOIN (SELECT 1 AS x) t474 ON t1.x = t474.x JOIN (SELECT 1 AS x) t475 ON t1.x = t475.x JOIN (SELECT 1 AS x) t476 ON t1.x = t476.x JOIN (SELECT 1 AS x) t477 ON t1.x = t477.x JOIN (SELECT 1 AS x) t478 ON t1.x = t478.x JOIN (SELECT 1 AS x) t479 ON t1.x = t479.x JOIN (SELECT 1 AS x) t480 ON t1.x = t480.x JOIN (SELECT 1 AS x) t481 ON t1.x = t481.x JOIN (SELECT 1 AS x) t482 ON t1.x = t482.x JOIN (SELECT 1 AS x) t483 ON t1.x = t483.x JOIN (SELECT 1 AS x) t484 ON t1.x = t484.x JOIN (SELECT 1 AS x) t485 ON t1.x = t485.x JOIN (SELECT 1 AS x) t486 ON t1.x = t486.x JOIN (SELECT 1 AS x) t487 ON t1.x = t487.x JOIN (SELECT 1 AS x) t488 ON t1.x = t488.x JOIN (SELECT 1 AS x) t489 ON t1.x = t489.x JOIN (SELECT 1 AS x) t490 ON t1.x = t490.x JOIN (SELECT 1 AS x) t491 ON t1.x = t491.x JOIN (SELECT 1 AS x) t492 ON t1.x = t492.x JOIN (SELECT 1 AS x) t493 ON t1.x = t493.x JOIN (SELECT 1 AS x) t494 ON t1.x = t494.x JOIN (SELECT 1 AS x) t495 ON t1.x = t495.x JOIN (SELECT 1 AS x) t496 ON t1.x = t496.x JOIN (SELECT 1 AS x) t497 ON t1.x = t497.x JOIN (SELECT 1 AS x) t498 ON t1.x = t498.x JOIN (SELECT 1 AS x) t499 ON t1.x = t499.x JOIN (SELECT 1 AS x) t500 ON t1.x = t500.x JOIN (SELECT 1 AS x) t501 ON t1.x = t501.x JOIN (SELECT 1 AS x) t502 ON t1.x = t502.x JOIN (SELECT 1 AS x) t503 ON t1.x = t503.x JOIN (SELECT 1 AS x) t504 ON t1.x = t504.x JOIN (SELECT 1 AS x) t505 ON t1.x = t505.x JOIN (SELECT 1 AS x) t506 ON t1.x = t506.x JOIN (SELECT 1 AS x) t507 ON t1.x = t507.x JOIN (SELECT 1 AS x) t508 ON t1.x = t508.x JOIN (SELECT 1 AS x) t509 ON t1.x = t509.x JOIN (SELECT 1 AS x) t510 ON t1.x = t510.x JOIN (SELECT 1 AS x) t511 ON t1.x = t511.x JOIN (SELECT 1 AS x) t512 ON t1.x = t512.x JOIN (SELECT 1 AS x) t513 ON t1.x = t513.x JOIN (SELECT 1 AS x) t514 ON t1.x = t514.x JOIN (SELECT 1 AS x) t515 ON t1.x = t515.x JOIN (SELECT 1 AS x) t516 ON t1.x = t516.x JOIN (SELECT 1 AS x) t517 ON t1.x = t517.x JOIN (SELECT 1 AS x) t518 ON t1.x = t518.x JOIN (SELECT 1 AS x) t519 ON t1.x = t519.x JOIN (SELECT 1 AS x) t520 ON t1.x = t520.x JOIN (SELECT 1 AS x) t521 ON t1.x = t521.x JOIN (SELECT 1 AS x) t522 ON t1.x = t522.x JOIN (SELECT 1 AS x) t523 ON t1.x = t523.x JOIN (SELECT 1 AS x) t524 ON t1.x = t524.x JOIN (SELECT 1 AS x) t525 ON t1.x = t525.x JOIN (SELECT 1 AS x) t526 ON t1.x = t526.x JOIN (SELECT 1 AS x) t527 ON t1.x = t527.x JOIN (SELECT 1 AS x) t528 ON t1.x = t528.x JOIN (SELECT 1 AS x) t529 ON t1.x = t529.x JOIN (SELECT 1 AS x) t530 ON t1.x = t530.x JOIN (SELECT 1 AS x) t531 ON t1.x = t531.x JOIN (SELECT 1 AS x) t532 ON t1.x = t532.x JOIN (SELECT 1 AS x) t533 ON t1.x = t533.x JOIN (SELECT 1 AS x) t534 ON t1.x = t534.x JOIN (SELECT 1 AS x) t535 ON t1.x = t535.x JOIN (SELECT 1 AS x) t536 ON t1.x = t536.x JOIN (SELECT 1 AS x) t537 ON t1.x = t537.x JOIN (SELECT 1 AS x) t538 ON t1.x = t538.x JOIN (SELECT 1 AS x) t539 ON t1.x = t539.x JOIN (SELECT 1 AS x) t540 ON t1.x = t540.x JOIN (SELECT 1 AS x) t541 ON t1.x = t541.x JOIN (SELECT 1 AS x) t542 ON t1.x = t542.x JOIN (SELECT 1 AS x) t543 ON t1.x = t543.x JOIN (SELECT 1 AS x) t544 ON t1.x = t544.x JOIN (SELECT 1 AS x) t545 ON t1.x = t545.x JOIN (SELECT 1 AS x) t546 ON t1.x = t546.x JOIN (SELECT 1 AS x) t547 ON t1.x = t547.x JOIN (SELECT 1 AS x) t548 ON t1.x = t548.x JOIN (SELECT 1 AS x) t549 ON t1.x = t549.x JOIN (SELECT 1 AS x) t550 ON t1.x = t550.x JOIN (SELECT 1 AS x) t551 ON t1.x = t551.x JOIN (SELECT 1 AS x) t552 ON t1.x = t552.x JOIN (SELECT 1 AS x) t553 ON t1.x = t553.x JOIN (SELECT 1 AS x) t554 ON t1.x = t554.x JOIN (SELECT 1 AS x) t555 ON t1.x = t555.x JOIN (SELECT 1 AS x) t556 ON t1.x = t556.x JOIN (SELECT 1 AS x) t557 ON t1.x = t557.x JOIN (SELECT 1 AS x) t558 ON t1.x = t558.x JOIN (SELECT 1 AS x) t559 ON t1.x = t559.x JOIN (SELECT 1 AS x) t560 ON t1.x = t560.x JOIN (SELECT 1 AS x) t561 ON t1.x = t561.x JOIN (SELECT 1 AS x) t562 ON t1.x = t562.x JOIN (SELECT 1 AS x) t563 ON t1.x = t563.x JOIN (SELECT 1 AS x) t564 ON t1.x = t564.x JOIN (SELECT 1 AS x) t565 ON t1.x = t565.x JOIN (SELECT 1 AS x) t566 ON t1.x = t566.x JOIN (SELECT 1 AS x) t567 ON t1.x = t567.x JOIN (SELECT 1 AS x) t568 ON t1.x = t568.x JOIN (SELECT 1 AS x) t569 ON t1.x = t569.x JOIN (SELECT 1 AS x) t570 ON t1.x = t570.x JOIN (SELECT 1 AS x) t571 ON t1.x = t571.x JOIN (SELECT 1 AS x) t572 ON t1.x = t572.x JOIN (SELECT 1 AS x) t573 ON t1.x = t573.x JOIN (SELECT 1 AS x) t574 ON t1.x = t574.x JOIN (SELECT 1 AS x) t575 ON t1.x = t575.x JOIN (SELECT 1 AS x) t576 ON t1.x = t576.x JOIN (SELECT 1 AS x) t577 ON t1.x = t577.x JOIN (SELECT 1 AS x) t578 ON t1.x = t578.x JOIN (SELECT 1 AS x) t579 ON t1.x = t579.x JOIN (SELECT 1 AS x) t580 ON t1.x = t580.x JOIN (SELECT 1 AS x) t581 ON t1.x = t581.x JOIN (SELECT 1 AS x) t582 ON t1.x = t582.x JOIN (SELECT 1 AS x) t583 ON t1.x = t583.x JOIN (SELECT 1 AS x) t584 ON t1.x = t584.x JOIN (SELECT 1 AS x) t585 ON t1.x = t585.x JOIN (SELECT 1 AS x) t586 ON t1.x = t586.x JOIN (SELECT 1 AS x) t587 ON t1.x = t587.x JOIN (SELECT 1 AS x) t588 ON t1.x = t588.x JOIN (SELECT 1 AS x) t589 ON t1.x = t589.x JOIN (SELECT 1 AS x) t590 ON t1.x = t590.x JOIN (SELECT 1 AS x) t591 ON t1.x = t591.x JOIN (SELECT 1 AS x) t592 ON t1.x = t592.x JOIN (SELECT 1 AS x) t593 ON t1.x = t593.x JOIN (SELECT 1 AS x) t594 ON t1.x = t594.x JOIN (SELECT 1 AS x) t595 ON t1.x = t595.x JOIN (SELECT 1 AS x) t596 ON t1.x = t596.x JOIN (SELECT 1 AS x) t597 ON t1.x = t597.x JOIN (SELECT 1 AS x) t598 ON t1.x = t598.x JOIN (SELECT 1 AS x) t599 ON t1.x = t599.x JOIN (SELECT 1 AS x) t600 ON t1.x = t600.x JOIN (SELECT 1 AS x) t601 ON t1.x = t601.x JOIN (SELECT 1 AS x) t602 ON t1.x = t602.x JOIN (SELECT 1 AS x) t603 ON t1.x = t603.x JOIN (SELECT 1 AS x) t604 ON t1.x = t604.x JOIN (SELECT 1 AS x) t605 ON t1.x = t605.x JOIN (SELECT 1 AS x) t606 ON t1.x = t606.x JOIN (SELECT 1 AS x) t607 ON t1.x = t607.x JOIN (SELECT 1 AS x) t608 ON t1.x = t608.x JOIN (SELECT 1 AS x) t609 ON t1.x = t609.x JOIN (SELECT 1 AS x) t610 ON t1.x = t610.x JOIN (SELECT 1 AS x) t611 ON t1.x = t611.x JOIN (SELECT 1 AS x) t612 ON t1.x = t612.x JOIN (SELECT 1 AS x) t613 ON t1.x = t613.x JOIN (SELECT 1 AS x) t614 ON t1.x = t614.x JOIN (SELECT 1 AS x) t615 ON t1.x = t615.x JOIN (SELECT 1 AS x) t616 ON t1.x = t616.x JOIN (SELECT 1 AS x) t617 ON t1.x = t617.x JOIN (SELECT 1 AS x) t618 ON t1.x = t618.x JOIN (SELECT 1 AS x) t619 ON t1.x = t619.x JOIN (SELECT 1 AS x) t620 ON t1.x = t620.x JOIN (SELECT 1 AS x) t621 ON t1.x = t621.x JOIN (SELECT 1 AS x) t622 ON t1.x = t622.x JOIN (SELECT 1 AS x) t623 ON t1.x = t623.x JOIN (SELECT 1 AS x) t624 ON t1.x = t624.x JOIN (SELECT 1 AS x) t625 ON t1.x = t625.x JOIN (SELECT 1 AS x) t626 ON t1.x = t626.x JOIN (SELECT 1 AS x) t627 ON t1.x = t627.x JOIN (SELECT 1 AS x) t628 ON t1.x = t628.x JOIN (SELECT 1 AS x) t629 ON t1.x = t629.x JOIN (SELECT 1 AS x) t630 ON t1.x = t630.x JOIN (SELECT 1 AS x) t631 ON t1.x = t631.x JOIN (SELECT 1 AS x) t632 ON t1.x = t632.x JOIN (SELECT 1 AS x) t633 ON t1.x = t633.x JOIN (SELECT 1 AS x) t634 ON t1.x = t634.x JOIN (SELECT 1 AS x) t635 ON t1.x = t635.x JOIN (SELECT 1 AS x) t636 ON t1.x = t636.x JOIN (SELECT 1 AS x) t637 ON t1.x = t637.x JOIN (SELECT 1 AS x) t638 ON t1.x = t638.x JOIN (SELECT 1 AS x) t639 ON t1.x = t639.x JOIN (SELECT 1 AS x) t640 ON t1.x = t640.x JOIN (SELECT 1 AS x) t641 ON t1.x = t641.x JOIN (SELECT 1 AS x) t642 ON t1.x = t642.x JOIN (SELECT 1 AS x) t643 ON t1.x = t643.x JOIN (SELECT 1 AS x) t644 ON t1.x = t644.x JOIN (SELECT 1 AS x) t645 ON t1.x = t645.x JOIN (SELECT 1 AS x) t646 ON t1.x = t646.x JOIN (SELECT 1 AS x) t647 ON t1.x = t647.x JOIN (SELECT 1 AS x) t648 ON t1.x = t648.x JOIN (SELECT 1 AS x) t649 ON t1.x = t649.x JOIN (SELECT 1 AS x) t650 ON t1.x = t650.x JOIN (SELECT 1 AS x) t651 ON t1.x = t651.x JOIN (SELECT 1 AS x) t652 ON t1.x = t652.x JOIN (SELECT 1 AS x) t653 ON t1.x = t653.x JOIN (SELECT 1 AS x) t654 ON t1.x = t654.x JOIN (SELECT 1 AS x) t655 ON t1.x = t655.x JOIN (SELECT 1 AS x) t656 ON t1.x = t656.x JOIN (SELECT 1 AS x) t657 ON t1.x = t657.x JOIN (SELECT 1 AS x) t658 ON t1.x = t658.x JOIN (SELECT 1 AS x) t659 ON t1.x = t659.x JOIN (SELECT 1 AS x) t660 ON t1.x = t660.x JOIN (SELECT 1 AS x) t661 ON t1.x = t661.x JOIN (SELECT 1 AS x) t662 ON t1.x = t662.x JOIN (SELECT 1 AS x) t663 ON t1.x = t663.x JOIN (SELECT 1 AS x) t664 ON t1.x = t664.x JOIN (SELECT 1 AS x) t665 ON t1.x = t665.x JOIN (SELECT 1 AS x) t666 ON t1.x = t666.x JOIN (SELECT 1 AS x) t667 ON t1.x = t667.x JOIN (SELECT 1 AS x) t668 ON t1.x = t668.x JOIN (SELECT 1 AS x) t669 ON t1.x = t669.x JOIN (SELECT 1 AS x) t670 ON t1.x = t670.x JOIN (SELECT 1 AS x) t671 ON t1.x = t671.x JOIN (SELECT 1 AS x) t672 ON t1.x = t672.x JOIN (SELECT 1 AS x) t673 ON t1.x = t673.x JOIN (SELECT 1 AS x) t674 ON t1.x = t674.x JOIN (SELECT 1 AS x) t675 ON t1.x = t675.x JOIN (SELECT 1 AS x) t676 ON t1.x = t676.x JOIN (SELECT 1 AS x) t677 ON t1.x = t677.x JOIN (SELECT 1 AS x) t678 ON t1.x = t678.x JOIN (SELECT 1 AS x) t679 ON t1.x = t679.x JOIN (SELECT 1 AS x) t680 ON t1.x = t680.x JOIN (SELECT 1 AS x) t681 ON t1.x = t681.x JOIN (SELECT 1 AS x) t682 ON t1.x = t682.x JOIN (SELECT 1 AS x) t683 ON t1.x = t683.x JOIN (SELECT 1 AS x) t684 ON t1.x = t684.x JOIN (SELECT 1 AS x) t685 ON t1.x = t685.x JOIN (SELECT 1 AS x) t686 ON t1.x = t686.x JOIN (SELECT 1 AS x) t687 ON t1.x = t687.x JOIN (SELECT 1 AS x) t688 ON t1.x = t688.x JOIN (SELECT 1 AS x) t689 ON t1.x = t689.x JOIN (SELECT 1 AS x) t690 ON t1.x = t690.x JOIN (SELECT 1 AS x) t691 ON t1.x = t691.x JOIN (SELECT 1 AS x) t692 ON t1.x = t692.x JOIN (SELECT 1 AS x) t693 ON t1.x = t693.x JOIN (SELECT 1 AS x) t694 ON t1.x = t694.x JOIN (SELECT 1 AS x) t695 ON t1.x = t695.x JOIN (SELECT 1 AS x) t696 ON t1.x = t696.x JOIN (SELECT 1 AS x) t697 ON t1.x = t697.x JOIN (SELECT 1 AS x) t698 ON t1.x = t698.x JOIN (SELECT 1 AS x) t699 ON t1.x = t699.x JOIN (SELECT 1 AS x) t700 ON t1.x = t700.x JOIN (SELECT 1 AS x) t701 ON t1.x = t701.x JOIN (SELECT 1 AS x) t702 ON t1.x = t702.x JOIN (SELECT 1 AS x) t703 ON t1.x = t703.x JOIN (SELECT 1 AS x) t704 ON t1.x = t704.x JOIN (SELECT 1 AS x) t705 ON t1.x = t705.x JOIN (SELECT 1 AS x) t706 ON t1.x = t706.x JOIN (SELECT 1 AS x) t707 ON t1.x = t707.x JOIN (SELECT 1 AS x) t708 ON t1.x = t708.x JOIN (SELECT 1 AS x) t709 ON t1.x = t709.x JOIN (SELECT 1 AS x) t710 ON t1.x = t710.x JOIN (SELECT 1 AS x) t711 ON t1.x = t711.x JOIN (SELECT 1 AS x) t712 ON t1.x = t712.x JOIN (SELECT 1 AS x) t713 ON t1.x = t713.x JOIN (SELECT 1 AS x) t714 ON t1.x = t714.x JOIN (SELECT 1 AS x) t715 ON t1.x = t715.x JOIN (SELECT 1 AS x) t716 ON t1.x = t716.x JOIN (SELECT 1 AS x) t717 ON t1.x = t717.x JOIN (SELECT 1 AS x) t718 ON t1.x = t718.x JOIN (SELECT 1 AS x) t719 ON t1.x = t719.x JOIN (SELECT 1 AS x) t720 ON t1.x = t720.x JOIN (SELECT 1 AS x) t721 ON t1.x = t721.x JOIN (SELECT 1 AS x) t722 ON t1.x = t722.x JOIN (SELECT 1 AS x) t723 ON t1.x = t723.x JOIN (SELECT 1 AS x) t724 ON t1.x = t724.x JOIN (SELECT 1 AS x) t725 ON t1.x = t725.x JOIN (SELECT 1 AS x) t726 ON t1.x = t726.x JOIN (SELECT 1 AS x) t727 ON t1.x = t727.x JOIN (SELECT 1 AS x) t728 ON t1.x = t728.x JOIN (SELECT 1 AS x) t729 ON t1.x = t729.x JOIN (SELECT 1 AS x) t730 ON t1.x = t730.x JOIN (SELECT 1 AS x) t731 ON t1.x = t731.x JOIN (SELECT 1 AS x) t732 ON t1.x = t732.x JOIN (SELECT 1 AS x) t733 ON t1.x = t733.x JOIN (SELECT 1 AS x) t734 ON t1.x = t734.x JOIN (SELECT 1 AS x) t735 ON t1.x = t735.x JOIN (SELECT 1 AS x) t736 ON t1.x = t736.x JOIN (SELECT 1 AS x) t737 ON t1.x = t737.x JOIN (SELECT 1 AS x) t738 ON t1.x = t738.x JOIN (SELECT 1 AS x) t739 ON t1.x = t739.x JOIN (SELECT 1 AS x) t740 ON t1.x = t740.x JOIN (SELECT 1 AS x) t741 ON t1.x = t741.x JOIN (SELECT 1 AS x) t742 ON t1.x = t742.x JOIN (SELECT 1 AS x) t743 ON t1.x = t743.x JOIN (SELECT 1 AS x) t744 ON t1.x = t744.x JOIN (SELECT 1 AS x) t745 ON t1.x = t745.x JOIN (SELECT 1 AS x) t746 ON t1.x = t746.x JOIN (SELECT 1 AS x) t747 ON t1.x = t747.x JOIN (SELECT 1 AS x) t748 ON t1.x = t748.x JOIN (SELECT 1 AS x) t749 ON t1.x = t749.x JOIN (SELECT 1 AS x) t750 ON t1.x = t750.x JOIN (SELECT 1 AS x) t751 ON t1.x = t751.x JOIN (SELECT 1 AS x) t752 ON t1.x = t752.x JOIN (SELECT 1 AS x) t753 ON t1.x = t753.x JOIN (SELECT 1 AS x) t754 ON t1.x = t754.x JOIN (SELECT 1 AS x) t755 ON t1.x = t755.x JOIN (SELECT 1 AS x) t756 ON t1.x = t756.x JOIN (SELECT 1 AS x) t757 ON t1.x = t757.x JOIN (SELECT 1 AS x) t758 ON t1.x = t758.x JOIN (SELECT 1 AS x) t759 ON t1.x = t759.x JOIN (SELECT 1 AS x) t760 ON t1.x = t760.x JOIN (SELECT 1 AS x) t761 ON t1.x = t761.x JOIN (SELECT 1 AS x) t762 ON t1.x = t762.x JOIN (SELECT 1 AS x) t763 ON t1.x = t763.x JOIN (SELECT 1 AS x) t764 ON t1.x = t764.x JOIN (SELECT 1 AS x) t765 ON t1.x = t765.x JOIN (SELECT 1 AS x) t766 ON t1.x = t766.x JOIN (SELECT 1 AS x) t767 ON t1.x = t767.x JOIN (SELECT 1 AS x) t768 ON t1.x = t768.x JOIN (SELECT 1 AS x) t769 ON t1.x = t769.x JOIN (SELECT 1 AS x) t770 ON t1.x = t770.x JOIN (SELECT 1 AS x) t771 ON t1.x = t771.x JOIN (SELECT 1 AS x) t772 ON t1.x = t772.x JOIN (SELECT 1 AS x) t773 ON t1.x = t773.x JOIN (SELECT 1 AS x) t774 ON t1.x = t774.x JOIN (SELECT 1 AS x) t775 ON t1.x = t775.x JOIN (SELECT 1 AS x) t776 ON t1.x = t776.x JOIN (SELECT 1 AS x) t777 ON t1.x = t777.x JOIN (SELECT 1 AS x) t778 ON t1.x = t778.x JOIN (SELECT 1 AS x) t779 ON t1.x = t779.x JOIN (SELECT 1 AS x) t780 ON t1.x = t780.x JOIN (SELECT 1 AS x) t781 ON t1.x = t781.x JOIN (SELECT 1 AS x) t782 ON t1.x = t782.x JOIN (SELECT 1 AS x) t783 ON t1.x = t783.x JOIN (SELECT 1 AS x) t784 ON t1.x = t784.x JOIN (SELECT 1 AS x) t785 ON t1.x = t785.x JOIN (SELECT 1 AS x) t786 ON t1.x = t786.x JOIN (SELECT 1 AS x) t787 ON t1.x = t787.x JOIN (SELECT 1 AS x) t788 ON t1.x = t788.x JOIN (SELECT 1 AS x) t789 ON t1.x = t789.x JOIN (SELECT 1 AS x) t790 ON t1.x = t790.x JOIN (SELECT 1 AS x) t791 ON t1.x = t791.x JOIN (SELECT 1 AS x) t792 ON t1.x = t792.x JOIN (SELECT 1 AS x) t793 ON t1.x = t793.x JOIN (SELECT 1 AS x) t794 ON t1.x = t794.x JOIN (SELECT 1 AS x) t795 ON t1.x = t795.x JOIN (SELECT 1 AS x) t796 ON t1.x = t796.x JOIN (SELECT 1 AS x) t797 ON t1.x = t797.x JOIN (SELECT 1 AS x) t798 ON t1.x = t798.x JOIN (SELECT 1 AS x) t799 ON t1.x = t799.x JOIN (SELECT 1 AS x) t800 ON t1.x = t800.x JOIN (SELECT 1 AS x) t801 ON t1.x = t801.x JOIN (SELECT 1 AS x) t802 ON t1.x = t802.x JOIN (SELECT 1 AS x) t803 ON t1.x = t803.x JOIN (SELECT 1 AS x) t804 ON t1.x = t804.x JOIN (SELECT 1 AS x) t805 ON t1.x = t805.x JOIN (SELECT 1 AS x) t806 ON t1.x = t806.x JOIN (SELECT 1 AS x) t807 ON t1.x = t807.x JOIN (SELECT 1 AS x) t808 ON t1.x = t808.x JOIN (SELECT 1 AS x) t809 ON t1.x = t809.x JOIN (SELECT 1 AS x) t810 ON t1.x = t810.x JOIN (SELECT 1 AS x) t811 ON t1.x = t811.x JOIN (SELECT 1 AS x) t812 ON t1.x = t812.x JOIN (SELECT 1 AS x) t813 ON t1.x = t813.x JOIN (SELECT 1 AS x) t814 ON t1.x = t814.x JOIN (SELECT 1 AS x) t815 ON t1.x = t815.x JOIN (SELECT 1 AS x) t816 ON t1.x = t816.x JOIN (SELECT 1 AS x) t817 ON t1.x = t817.x JOIN (SELECT 1 AS x) t818 ON t1.x = t818.x JOIN (SELECT 1 AS x) t819 ON t1.x = t819.x JOIN (SELECT 1 AS x) t820 ON t1.x = t820.x JOIN (SELECT 1 AS x) t821 ON t1.x = t821.x JOIN (SELECT 1 AS x) t822 ON t1.x = t822.x JOIN (SELECT 1 AS x) t823 ON t1.x = t823.x JOIN (SELECT 1 AS x) t824 ON t1.x = t824.x JOIN (SELECT 1 AS x) t825 ON t1.x = t825.x JOIN (SELECT 1 AS x) t826 ON t1.x = t826.x JOIN (SELECT 1 AS x) t827 ON t1.x = t827.x JOIN (SELECT 1 AS x) t828 ON t1.x = t828.x JOIN (SELECT 1 AS x) t829 ON t1.x = t829.x JOIN (SELECT 1 AS x) t830 ON t1.x = t830.x JOIN (SELECT 1 AS x) t831 ON t1.x = t831.x JOIN (SELECT 1 AS x) t832 ON t1.x = t832.x JOIN (SELECT 1 AS x) t833 ON t1.x = t833.x JOIN (SELECT 1 AS x) t834 ON t1.x = t834.x JOIN (SELECT 1 AS x) t835 ON t1.x = t835.x JOIN (SELECT 1 AS x) t836 ON t1.x = t836.x JOIN (SELECT 1 AS x) t837 ON t1.x = t837.x JOIN (SELECT 1 AS x) t838 ON t1.x = t838.x JOIN (SELECT 1 AS x) t839 ON t1.x = t839.x JOIN (SELECT 1 AS x) t840 ON t1.x = t840.x JOIN (SELECT 1 AS x) t841 ON t1.x = t841.x JOIN (SELECT 1 AS x) t842 ON t1.x = t842.x JOIN (SELECT 1 AS x) t843 ON t1.x = t843.x JOIN (SELECT 1 AS x) t844 ON t1.x = t844.x JOIN (SELECT 1 AS x) t845 ON t1.x = t845.x JOIN (SELECT 1 AS x) t846 ON t1.x = t846.x JOIN (SELECT 1 AS x) t847 ON t1.x = t847.x JOIN (SELECT 1 AS x) t848 ON t1.x = t848.x JOIN (SELECT 1 AS x) t849 ON t1.x = t849.x JOIN (SELECT 1 AS x) t850 ON t1.x = t850.x JOIN (SELECT 1 AS x) t851 ON t1.x = t851.x JOIN (SELECT 1 AS x) t852 ON t1.x = t852.x JOIN (SELECT 1 AS x) t853 ON t1.x = t853.x JOIN (SELECT 1 AS x) t854 ON t1.x = t854.x JOIN (SELECT 1 AS x) t855 ON t1.x = t855.x JOIN (SELECT 1 AS x) t856 ON t1.x = t856.x JOIN (SELECT 1 AS x) t857 ON t1.x = t857.x JOIN (SELECT 1 AS x) t858 ON t1.x = t858.x JOIN (SELECT 1 AS x) t859 ON t1.x = t859.x JOIN (SELECT 1 AS x) t860 ON t1.x = t860.x JOIN (SELECT 1 AS x) t861 ON t1.x = t861.x JOIN (SELECT 1 AS x) t862 ON t1.x = t862.x JOIN (SELECT 1 AS x) t863 ON t1.x = t863.x JOIN (SELECT 1 AS x) t864 ON t1.x = t864.x JOIN (SELECT 1 AS x) t865 ON t1.x = t865.x JOIN (SELECT 1 AS x) t866 ON t1.x = t866.x JOIN (SELECT 1 AS x) t867 ON t1.x = t867.x JOIN (SELECT 1 AS x) t868 ON t1.x = t868.x JOIN (SELECT 1 AS x) t869 ON t1.x = t869.x JOIN (SELECT 1 AS x) t870 ON t1.x = t870.x JOIN (SELECT 1 AS x) t871 ON t1.x = t871.x JOIN (SELECT 1 AS x) t872 ON t1.x = t872.x JOIN (SELECT 1 AS x) t873 ON t1.x = t873.x JOIN (SELECT 1 AS x) t874 ON t1.x = t874.x JOIN (SELECT 1 AS x) t875 ON t1.x = t875.x JOIN (SELECT 1 AS x) t876 ON t1.x = t876.x JOIN (SELECT 1 AS x) t877 ON t1.x = t877.x JOIN (SELECT 1 AS x) t878 ON t1.x = t878.x JOIN (SELECT 1 AS x) t879 ON t1.x = t879.x JOIN (SELECT 1 AS x) t880 ON t1.x = t880.x JOIN (SELECT 1 AS x) t881 ON t1.x = t881.x JOIN (SELECT 1 AS x) t882 ON t1.x = t882.x JOIN (SELECT 1 AS x) t883 ON t1.x = t883.x JOIN (SELECT 1 AS x) t884 ON t1.x = t884.x JOIN (SELECT 1 AS x) t885 ON t1.x = t885.x JOIN (SELECT 1 AS x) t886 ON t1.x = t886.x JOIN (SELECT 1 AS x) t887 ON t1.x = t887.x JOIN (SELECT 1 AS x) t888 ON t1.x = t888.x JOIN (SELECT 1 AS x) t889 ON t1.x = t889.x JOIN (SELECT 1 AS x) t890 ON t1.x = t890.x JOIN (SELECT 1 AS x) t891 ON t1.x = t891.x JOIN (SELECT 1 AS x) t892 ON t1.x = t892.x JOIN (SELECT 1 AS x) t893 ON t1.x = t893.x JOIN (SELECT 1 AS x) t894 ON t1.x = t894.x JOIN (SELECT 1 AS x) t895 ON t1.x = t895.x JOIN (SELECT 1 AS x) t896 ON t1.x = t896.x JOIN (SELECT 1 AS x) t897 ON t1.x = t897.x JOIN (SELECT 1 AS x) t898 ON t1.x = t898.x JOIN (SELECT 1 AS x) t899 ON t1.x = t899.x JOIN (SELECT 1 AS x) t900 ON t1.x = t900.x JOIN (SELECT 1 AS x) t901 ON t1.x = t901.x JOIN (SELECT 1 AS x) t902 ON t1.x = t902.x JOIN (SELECT 1 AS x) t903 ON t1.x = t903.x JOIN (SELECT 1 AS x) t904 ON t1.x = t904.x JOIN (SELECT 1 AS x) t905 ON t1.x = t905.x JOIN (SELECT 1 AS x) t906 ON t1.x = t906.x JOIN (SELECT 1 AS x) t907 ON t1.x = t907.x JOIN (SELECT 1 AS x) t908 ON t1.x = t908.x JOIN (SELECT 1 AS x) t909 ON t1.x = t909.x JOIN (SELECT 1 AS x) t910 ON t1.x = t910.x JOIN (SELECT 1 AS x) t911 ON t1.x = t911.x JOIN (SELECT 1 AS x) t912 ON t1.x = t912.x JOIN (SELECT 1 AS x) t913 ON t1.x = t913.x JOIN (SELECT 1 AS x) t914 ON t1.x = t914.x JOIN (SELECT 1 AS x) t915 ON t1.x = t915.x JOIN (SELECT 1 AS x) t916 ON t1.x = t916.x JOIN (SELECT 1 AS x) t917 ON t1.x = t917.x JOIN (SELECT 1 AS x) t918 ON t1.x = t918.x JOIN (SELECT 1 AS x) t919 ON t1.x = t919.x JOIN (SELECT 1 AS x) t920 ON t1.x = t920.x JOIN (SELECT 1 AS x) t921 ON t1.x = t921.x JOIN (SELECT 1 AS x) t922 ON t1.x = t922.x JOIN (SELECT 1 AS x) t923 ON t1.x = t923.x JOIN (SELECT 1 AS x) t924 ON t1.x = t924.x JOIN (SELECT 1 AS x) t925 ON t1.x = t925.x JOIN (SELECT 1 AS x) t926 ON t1.x = t926.x JOIN (SELECT 1 AS x) t927 ON t1.x = t927.x JOIN (SELECT 1 AS x) t928 ON t1.x = t928.x JOIN (SELECT 1 AS x) t929 ON t1.x = t929.x JOIN (SELECT 1 AS x) t930 ON t1.x = t930.x JOIN (SELECT 1 AS x) t931 ON t1.x = t931.x JOIN (SELECT 1 AS x) t932 ON t1.x = t932.x JOIN (SELECT 1 AS x) t933 ON t1.x = t933.x JOIN (SELECT 1 AS x) t934 ON t1.x = t934.x JOIN (SELECT 1 AS x) t935 ON t1.x = t935.x JOIN (SELECT 1 AS x) t936 ON t1.x = t936.x JOIN (SELECT 1 AS x) t937 ON t1.x = t937.x JOIN (SELECT 1 AS x) t938 ON t1.x = t938.x JOIN (SELECT 1 AS x) t939 ON t1.x = t939.x JOIN (SELECT 1 AS x) t940 ON t1.x = t940.x JOIN (SELECT 1 AS x) t941 ON t1.x = t941.x JOIN (SELECT 1 AS x) t942 ON t1.x = t942.x JOIN (SELECT 1 AS x) t943 ON t1.x = t943.x JOIN (SELECT 1 AS x) t944 ON t1.x = t944.x JOIN (SELECT 1 AS x) t945 ON t1.x = t945.x JOIN (SELECT 1 AS x) t946 ON t1.x = t946.x JOIN (SELECT 1 AS x) t947 ON t1.x = t947.x JOIN (SELECT 1 AS x) t948 ON t1.x = t948.x JOIN (SELECT 1 AS x) t949 ON t1.x = t949.x JOIN (SELECT 1 AS x) t950 ON t1.x = t950.x JOIN (SELECT 1 AS x) t951 ON t1.x = t951.x JOIN (SELECT 1 AS x) t952 ON t1.x = t952.x JOIN (SELECT 1 AS x) t953 ON t1.x = t953.x JOIN (SELECT 1 AS x) t954 ON t1.x = t954.x JOIN (SELECT 1 AS x) t955 ON t1.x = t955.x JOIN (SELECT 1 AS x) t956 ON t1.x = t956.x JOIN (SELECT 1 AS x) t957 ON t1.x = t957.x JOIN (SELECT 1 AS x) t958 ON t1.x = t958.x JOIN (SELECT 1 AS x) t959 ON t1.x = t959.x JOIN (SELECT 1 AS x) t960 ON t1.x = t960.x JOIN (SELECT 1 AS x) t961 ON t1.x = t961.x JOIN (SELECT 1 AS x) t962 ON t1.x = t962.x JOIN (SELECT 1 AS x) t963 ON t1.x = t963.x JOIN (SELECT 1 AS x) t964 ON t1.x = t964.x JOIN (SELECT 1 AS x) t965 ON t1.x = t965.x JOIN (SELECT 1 AS x) t966 ON t1.x = t966.x JOIN (SELECT 1 AS x) t967 ON t1.x = t967.x JOIN (SELECT 1 AS x) t968 ON t1.x = t968.x JOIN (SELECT 1 AS x) t969 ON t1.x = t969.x JOIN (SELECT 1 AS x) t970 ON t1.x = t970.x JOIN (SELECT 1 AS x) t971 ON t1.x = t971.x JOIN (SELECT 1 AS x) t972 ON t1.x = t972.x JOIN (SELECT 1 AS x) t973 ON t1.x = t973.x JOIN (SELECT 1 AS x) t974 ON t1.x = t974.x JOIN (SELECT 1 AS x) t975 ON t1.x = t975.x JOIN (SELECT 1 AS x) t976 ON t1.x = t976.x JOIN (SELECT 1 AS x) t977 ON t1.x = t977.x JOIN (SELECT 1 AS x) t978 ON t1.x = t978.x JOIN (SELECT 1 AS x) t979 ON t1.x = t979.x JOIN (SELECT 1 AS x) t980 ON t1.x = t980.x JOIN (SELECT 1 AS x) t981 ON t1.x = t981.x JOIN (SELECT 1 AS x) t982 ON t1.x = t982.x JOIN (SELECT 1 AS x) t983 ON t1.x = t983.x JOIN (SELECT 1 AS x) t984 ON t1.x = t984.x JOIN (SELECT 1 AS x) t985 ON t1.x = t985.x JOIN (SELECT 1 AS x) t986 ON t1.x = t986.x JOIN (SELECT 1 AS x) t987 ON t1.x = t987.x JOIN (SELECT 1 AS x) t988 ON t1.x = t988.x JOIN (SELECT 1 AS x) t989 ON t1.x = t989.x JOIN (SELECT 1 AS x) t990 ON t1.x = t990.x JOIN (SELECT 1 AS x) t991 ON t1.x = t991.x JOIN (SELECT 1 AS x) t992 ON t1.x = t992.x JOIN (SELECT 1 AS x) t993 ON t1.x = t993.x JOIN (SELECT 1 AS x) t994 ON t1.x = t994.x JOIN (SELECT 1 AS x) t995 ON t1.x = t995.x JOIN (SELECT 1 AS x) t996 ON t1.x = t996.x JOIN (SELECT 1 AS x) t997 ON t1.x = t997.x JOIN (SELECT 1 AS x) t998 ON t1.x = t998.x JOIN (SELECT 1 AS x) t999 ON t1.x = t999.x JOIN (SELECT 1 AS x) t1000 ON t1.x = t1000.x`","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33446/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33446/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33441","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33441/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33441/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33441/events","html_url":"https://github.com/ClickHouse/ClickHouse/pull/33441","id":1095925368,"node_id":"PR_kwDOA5dJV84wo9PO","number":33441,"title":"Make the znode ctime and mtime consistent between servers.","user":{"login":"nicelulu","id":18606973,"node_id":"MDQ6VXNlcjE4NjA2OTcz","avatar_url":"https://avatars.githubusercontent.com/u/18606973?v=4","gravatar_id":"","url":"https://api.github.com/users/nicelulu","html_url":"https://github.com/nicelulu","followers_url":"https://api.github.com/users/nicelulu/followers","following_url":"https://api.github.com/users/nicelulu/following{/other_user}","gists_url":"https://api.github.com/users/nicelulu/gists{/gist_id}","starred_url":"https://api.github.com/users/nicelulu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nicelulu/subscriptions","organizations_url":"https://api.github.com/users/nicelulu/orgs","repos_url":"https://api.github.com/users/nicelulu/repos","events_url":"https://api.github.com/users/nicelulu/events{/privacy}","received_events_url":"https://api.github.com/users/nicelulu/received_events","type":"User","site_admin":false},"labels":[{"id":1304141686,"node_id":"MDU6TGFiZWwxMzA0MTQxNjg2","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/pr-improvement","name":"pr-improvement","color":"007700","default":false,"description":"Pull request with some product improvements"},{"id":3627025164,"node_id":"LA_kwDOA5dJV87YMAMM","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/can%20be%20tested","name":"can be tested","color":"1d76db","default":false,"description":""}],"state":"open","locked":false,"assignee":{"login":"novikd","id":10158699,"node_id":"MDQ6VXNlcjEwMTU4Njk5","avatar_url":"https://avatars.githubusercontent.com/u/10158699?v=4","gravatar_id":"","url":"https://api.github.com/users/novikd","html_url":"https://github.com/novikd","followers_url":"https://api.github.com/users/novikd/followers","following_url":"https://api.github.com/users/novikd/following{/other_user}","gists_url":"https://api.github.com/users/novikd/gists{/gist_id}","starred_url":"https://api.github.com/users/novikd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/novikd/subscriptions","organizations_url":"https://api.github.com/users/novikd/orgs","repos_url":"https://api.github.com/users/novikd/repos","events_url":"https://api.github.com/users/novikd/events{/privacy}","received_events_url":"https://api.github.com/users/novikd/received_events","type":"User","site_admin":false},"assignees":[{"login":"novikd","id":10158699,"node_id":"MDQ6VXNlcjEwMTU4Njk5","avatar_url":"https://avatars.githubusercontent.com/u/10158699?v=4","gravatar_id":"","url":"https://api.github.com/users/novikd","html_url":"https://github.com/novikd","followers_url":"https://api.github.com/users/novikd/followers","following_url":"https://api.github.com/users/novikd/following{/other_user}","gists_url":"https://api.github.com/users/novikd/gists{/gist_id}","starred_url":"https://api.github.com/users/novikd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/novikd/subscriptions","organizations_url":"https://api.github.com/users/novikd/orgs","repos_url":"https://api.github.com/users/novikd/repos","events_url":"https://api.github.com/users/novikd/events{/privacy}","received_events_url":"https://api.github.com/users/novikd/received_events","type":"User","site_admin":false}],"milestone":null,"comments":7,"created_at":"2022-01-07T02:38:04Z","updated_at":"2022-01-30T00:06:52Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/pulls/33441","html_url":"https://github.com/ClickHouse/ClickHouse/pull/33441","diff_url":"https://github.com/ClickHouse/ClickHouse/pull/33441.diff","patch_url":"https://github.com/ClickHouse/ClickHouse/pull/33441.patch","merged_at":null},"body":"Changelog category (leave one):\r\n\r\n- Improvement\r\n\r\nChangelog entry (a user-readable short description of the changes that goes to CHANGELOG.md):\r\n\r\nMake the znode ctime and mtime consistent between servers.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33441/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33441/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33439","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33439/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33439/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33439/events","html_url":"https://github.com/ClickHouse/ClickHouse/pull/33439","id":1095710709,"node_id":"PR_kwDOA5dJV84woPSZ","number":33439,"title":"Predict size of hash table for GROUP BY","user":{"login":"nickitat","id":5218483,"node_id":"MDQ6VXNlcjUyMTg0ODM=","avatar_url":"https://avatars.githubusercontent.com/u/5218483?v=4","gravatar_id":"","url":"https://api.github.com/users/nickitat","html_url":"https://github.com/nickitat","followers_url":"https://api.github.com/users/nickitat/followers","following_url":"https://api.github.com/users/nickitat/following{/other_user}","gists_url":"https://api.github.com/users/nickitat/gists{/gist_id}","starred_url":"https://api.github.com/users/nickitat/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nickitat/subscriptions","organizations_url":"https://api.github.com/users/nickitat/orgs","repos_url":"https://api.github.com/users/nickitat/repos","events_url":"https://api.github.com/users/nickitat/events{/privacy}","received_events_url":"https://api.github.com/users/nickitat/received_events","type":"User","site_admin":false},"labels":[{"id":1309683578,"node_id":"MDU6TGFiZWwxMzA5NjgzNTc4","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/pr-performance","name":"pr-performance","color":"007700","default":false,"description":"Pull request with some performance improvements"},{"id":3627025164,"node_id":"LA_kwDOA5dJV87YMAMM","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/can%20be%20tested","name":"can be tested","color":"1d76db","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2022-01-06T21:29:16Z","updated_at":"2022-01-29T19:51:26Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":true,"pull_request":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/pulls/33439","html_url":"https://github.com/ClickHouse/ClickHouse/pull/33439","diff_url":"https://github.com/ClickHouse/ClickHouse/pull/33439.diff","patch_url":"https://github.com/ClickHouse/ClickHouse/pull/33439.patch","merged_at":null},"body":"Changelog category (leave one):\r\n- Performance Improvement\r\n\r\n\r\nChangelog entry (a user-readable short description of the changes that goes to CHANGELOG.md):\r\n...\r\n\r\n\r\nDetailed description / Documentation draft:\r\n...\r\n\r\n\r\nI see the following options to improve the current implementation:\r\n* For now statistics collecting and usage is not implemented for merging partially aggregated results. It happens in a notable number of queries (distributed, in-order, cube & rollup), so it may worth doing.\r\n* Currently `HashTableGrower` preallocates up to 4 times more memory than was requested in the corresponding HashTable's constructor. So if we trust our predictions, maybe it is better to use smth like `log + 1`.\r\n* Export cache metadata through AsynchronousMetrics as azat@ [suggests](https://github.com/ClickHouse/ClickHouse/pull/33439#discussion_r780183607).\r\n* The implemented calculation of `size_hint` may become inaccurate if another calls of `clearAndShrink` or SLT will be added to the code. It probably would be more robust if we wrap hash tables in a some class which would update the observed size before calling any modification on the hash table itself.\r\n\r\nAnd there is a question about testing. The only \"observable behaviour\" here is performance and in theory performance tests on sufficiently rich set of queries may be enough. But there are enough places where things may go wrong and rely only on perf tests is insufficient IMO. Tests by logs is a bad thing, but it seemed hard to write good unit tests in this case. So I would be glad to hear your thoughts.\r\n\r\nIssue #24317","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33439/reactions","total_count":5,"+1":5,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33439/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33437","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33437/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33437/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33437/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33437","id":1095567381,"node_id":"I_kwDOA5dJV85BTQgV","number":33437,"title":"ExceptionBeforeStart timestamps may be confusing.","user":{"login":"filimonov","id":1549571,"node_id":"MDQ6VXNlcjE1NDk1NzE=","avatar_url":"https://avatars.githubusercontent.com/u/1549571?v=4","gravatar_id":"","url":"https://api.github.com/users/filimonov","html_url":"https://github.com/filimonov","followers_url":"https://api.github.com/users/filimonov/followers","following_url":"https://api.github.com/users/filimonov/following{/other_user}","gists_url":"https://api.github.com/users/filimonov/gists{/gist_id}","starred_url":"https://api.github.com/users/filimonov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/filimonov/subscriptions","organizations_url":"https://api.github.com/users/filimonov/orgs","repos_url":"https://api.github.com/users/filimonov/repos","events_url":"https://api.github.com/users/filimonov/events{/privacy}","received_events_url":"https://api.github.com/users/filimonov/received_events","type":"User","site_admin":false},"labels":[{"id":845247686,"node_id":"MDU6TGFiZWw4NDUyNDc2ODY=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/usability","name":"usability","color":"ebf28c","default":false,"description":""},{"id":1365579236,"node_id":"MDU6TGFiZWwxMzY1NTc5MjM2","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/minor","name":"minor","color":"FFF8F8","default":false,"description":"Priority: minor"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-01-06T18:15:16Z","updated_at":"2022-01-07T07:36:06Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"body":"```\r\ntype:                                  ExceptionBeforeStart\r\nevent_time:                            2022-01-06 16:58:03\r\nevent_time_microseconds:               2022-01-06 16:58:03.334283\r\nquery_start_time:                      2022-01-06 16:58:03\r\nquery_start_time_microseconds:         2022-01-06 16:58:03.334283\r\n....\r\nquery:                                 truncate table XXXX\r\nexception:                             Code: 473, e.displayText() = DB::Exception: WRITE locking attempt on \"XXXX\" has timed out! (120000ms)\r\n```\r\n\r\nIn logs;\r\n```\r\n2022.01.06 16:58:03.334343 [ 1157 ] {0fbfdca0-3a42-4de5-9923-cbc7f9b22b44} <Debug> executeQuery: (from 10.131.52.244:41054, user: admin) truncate table XXXX\r\n2022.01.06 17:00:03.338396 [ 1157 ] {0fbfdca0-3a42-4de5-9923-cbc7f9b22b44} <Error> executeQuery: Code: 473, e.displayText() = DB::Exception: WRITE locking attempt on \"XXXX\" has timed out! (120000ms)\r\n```\r\n\r\nMaybe we should write into `event_time` the actual timestamp of an exception instead of repeating `query_start_time` there once again? ","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33437/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33437/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33435","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33435/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33435/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33435/events","html_url":"https://github.com/ClickHouse/ClickHouse/pull/33435","id":1095430781,"node_id":"PR_kwDOA5dJV84wnVDj","number":33435,"title":"Integrating Rust code into ClickHouse","user":{"login":"BoloniniD","id":54375878,"node_id":"MDQ6VXNlcjU0Mzc1ODc4","avatar_url":"https://avatars.githubusercontent.com/u/54375878?v=4","gravatar_id":"","url":"https://api.github.com/users/BoloniniD","html_url":"https://github.com/BoloniniD","followers_url":"https://api.github.com/users/BoloniniD/followers","following_url":"https://api.github.com/users/BoloniniD/following{/other_user}","gists_url":"https://api.github.com/users/BoloniniD/gists{/gist_id}","starred_url":"https://api.github.com/users/BoloniniD/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/BoloniniD/subscriptions","organizations_url":"https://api.github.com/users/BoloniniD/orgs","repos_url":"https://api.github.com/users/BoloniniD/repos","events_url":"https://api.github.com/users/BoloniniD/events{/privacy}","received_events_url":"https://api.github.com/users/BoloniniD/received_events","type":"User","site_admin":false},"labels":[{"id":1309674771,"node_id":"MDU6TGFiZWwxMzA5Njc0Nzcx","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/pr-feature","name":"pr-feature","color":"007700","default":false,"description":"Pull request with new product feature"},{"id":1807683251,"node_id":"MDU6TGFiZWwxODA3NjgzMjUx","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/doc-alert","name":"doc-alert","color":"e51068","default":false,"description":"PR where any documentation work is needed or proceeded"},{"id":3627025164,"node_id":"LA_kwDOA5dJV87YMAMM","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/can%20be%20tested","name":"can be tested","color":"1d76db","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2022-01-06T15:31:51Z","updated_at":"2022-01-27T17:14:57Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/pulls/33435","html_url":"https://github.com/ClickHouse/ClickHouse/pull/33435","diff_url":"https://github.com/ClickHouse/ClickHouse/pull/33435.diff","patch_url":"https://github.com/ClickHouse/ClickHouse/pull/33435.patch","merged_at":null},"body":"Changelog category (leave one):\r\n- New Feature\r\n\r\nChangelog entry (a user-readable short description of the changes that goes to CHANGELOG.md):\r\nAdd Rust code support into ClickHouse with BLAKE3 hash-function library as an example.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33435/reactions","total_count":9,"+1":8,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":1,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33435/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33434","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33434/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33434/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33434/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33434","id":1095396518,"node_id":"I_kwDOA5dJV85BSmym","number":33434,"title":"how to remove an element from groupBitmap ","user":{"login":"liweigong","id":7710640,"node_id":"MDQ6VXNlcjc3MTA2NDA=","avatar_url":"https://avatars.githubusercontent.com/u/7710640?v=4","gravatar_id":"","url":"https://api.github.com/users/liweigong","html_url":"https://github.com/liweigong","followers_url":"https://api.github.com/users/liweigong/followers","following_url":"https://api.github.com/users/liweigong/following{/other_user}","gists_url":"https://api.github.com/users/liweigong/gists{/gist_id}","starred_url":"https://api.github.com/users/liweigong/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/liweigong/subscriptions","organizations_url":"https://api.github.com/users/liweigong/orgs","repos_url":"https://api.github.com/users/liweigong/repos","events_url":"https://api.github.com/users/liweigong/events{/privacy}","received_events_url":"https://api.github.com/users/liweigong/received_events","type":"User","site_admin":false},"labels":[{"id":386401510,"node_id":"MDU6TGFiZWwzODY0MDE1MTA=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/question","name":"question","color":"bfdadc","default":true,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2022-01-06T14:55:10Z","updated_at":"2022-01-10T08:26:26Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"I have two table like this:\r\n\r\n> create table IF NOT EXISTS user_tb_local (\r\n>     gender String ,\r\n>     user  String,\r\n>     offset UInt64,\r\n>     delete_flag UInt8,\r\n>     dt String    \r\n> )engine=Null;\r\n\r\n\r\n> create table IF NOT EXISTS gender_bitmap_tb_local (\r\n>     gender String ,\r\n>     user_bitmap AggregateFunction(groupBitmap,UInt64) ,\r\n>     dt String    \r\n> )engine=ReplicatedAggregatingMergeTree\r\n> PARTITION BY dt ORDER BY (dt,code)\r\n> SETTINGS index_granularity=1,index_granularity_bytes=0;\r\n\r\n\r\nand I want to create two marterial view  like this：\r\none to add user to the bitmap.\r\n\r\n> CREATE MATERIALIZED VIEW add_user_mv  to gender_bitmap_tb_local  as\r\n> SELECT\r\n>     gender,groupBitmapOr(bitmapBuild(offset)),dt\r\n> FROM user_tb_local where delete_flag = 0;\r\n\r\nthe other to remove user from the bitmap when user is delete\r\n\r\n> CREATE MATERIALIZED VIEW remove_user_mv  to gender_bitmap_tb_local  as\r\n> SELECT\r\n>     gender,groupBitmapXor(bitmapBuild(offset)),dt\r\n> FROM user_tb_local where delete_flag = 1;\r\n\r\n\r\nbut  now the   AggregateFunction(groupBitmap,UInt64) seems only support  groupBitmapMerge which equals groupBitmapOr，\r\nhow can I remove an element from a bitmap  by using the MATERIALIZED VIEW since I know that the MATERIALIZED VIEW  is like a trigger？\r\n\r\n\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33434/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33434/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33427","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33427/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33427/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33427/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33427","id":1094943369,"node_id":"I_kwDOA5dJV85BQ4KJ","number":33427,"title":"Auto optimization the order of joining between tables","user":{"login":"oceanliuyang8","id":89071950,"node_id":"MDQ6VXNlcjg5MDcxOTUw","avatar_url":"https://avatars.githubusercontent.com/u/89071950?v=4","gravatar_id":"","url":"https://api.github.com/users/oceanliuyang8","html_url":"https://github.com/oceanliuyang8","followers_url":"https://api.github.com/users/oceanliuyang8/followers","following_url":"https://api.github.com/users/oceanliuyang8/following{/other_user}","gists_url":"https://api.github.com/users/oceanliuyang8/gists{/gist_id}","starred_url":"https://api.github.com/users/oceanliuyang8/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/oceanliuyang8/subscriptions","organizations_url":"https://api.github.com/users/oceanliuyang8/orgs","repos_url":"https://api.github.com/users/oceanliuyang8/repos","events_url":"https://api.github.com/users/oceanliuyang8/events{/privacy}","received_events_url":"https://api.github.com/users/oceanliuyang8/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2022-01-06T03:59:39Z","updated_at":"2022-01-08T07:45:49Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"> (you don't have to strictly follow this form)\r\n\r\n### **Use case**\r\nsmall table join big table **will cause OOM**\r\n\r\n### **Describe the solution you'd like**\r\ncan auto optimization the join order of small table and big table，The optimization result is  that the big table is in front and the small table is behind","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33427/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33427/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33425","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33425/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33425/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33425/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33425","id":1094932173,"node_id":"I_kwDOA5dJV85BQ1bN","number":33425,"title":"syntex error in join query","user":{"login":"awesomeleo","id":6779544,"node_id":"MDQ6VXNlcjY3Nzk1NDQ=","avatar_url":"https://avatars.githubusercontent.com/u/6779544?v=4","gravatar_id":"","url":"https://api.github.com/users/awesomeleo","html_url":"https://github.com/awesomeleo","followers_url":"https://api.github.com/users/awesomeleo/followers","following_url":"https://api.github.com/users/awesomeleo/following{/other_user}","gists_url":"https://api.github.com/users/awesomeleo/gists{/gist_id}","starred_url":"https://api.github.com/users/awesomeleo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/awesomeleo/subscriptions","organizations_url":"https://api.github.com/users/awesomeleo/orgs","repos_url":"https://api.github.com/users/awesomeleo/repos","events_url":"https://api.github.com/users/awesomeleo/events{/privacy}","received_events_url":"https://api.github.com/users/awesomeleo/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2022-01-06T03:28:26Z","updated_at":"2022-01-10T02:48:50Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"> You have to provide the following information whenever possible.\r\n\r\n**Describe what's wrong**\r\nselect t.a from (( select t1.a from t1 )t left join t2 on t2.a=t.a)  ClickHouse reports syntex error.\r\nI test the same query with MySQL, and it works well. It's a simplify of my real query.\r\n\r\nlocalhost :) select t.a from (( select t1.a from t1 )t left join t2 on t2.a=t.a);\r\nSyntax error: failed at position 41 ('t'):\r\nselect t.a from (( select t1.a from t1 )t left join t2 on t2.a=t.a);\r\nExpected UNION\r\n\r\n\r\n> A clear and concise description of what works not as it is supposed to.\r\n\r\n**Does it reproduce on recent release?**\r\nI test with v21.8.9.13-lts\r\n\r\n**How to reproduce**\r\n create table t1(a Int32) engine = MergeTree() order by a;\r\n create table t2(a Int32) engine = MergeTree() order by a;\r\n insert into t1 values(1),(2),(3)\r\n insert into t2 values(1),(2),(3)\r\n select t.a from (( select t1.a from t1 )t left join t2 on t2.a=t.a)\r\n\r\n* Which ClickHouse server version to use\r\nv21.8.9.13-lts\r\n\r\n* CREATE TABLE` statements for all tables involved\r\n create table t1(a Int32) engine = MergeTree() order by a;\r\n create table t2(a Int32) engine = MergeTree() order by a;\r\n insert into t1 values(1),(2),(3)\r\n insert into t2 values(1),(2),(3)\r\n\r\n\r\n* Queries to run that lead to unexpected result\r\n select t.a from (( select t1.a from t1 )t left join t2 on t2.a=t.a)\r\n\r\n**Expected behavior**\r\n It can work.\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33425/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33425/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33424","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33424/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33424/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33424/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33424","id":1094922377,"node_id":"I_kwDOA5dJV85BQzCJ","number":33424,"title":"If i set always_fetch_merged_part is true, How long the read replica get merged parts after the write replicas write parts?","user":{"login":"ggchangan","id":6263801,"node_id":"MDQ6VXNlcjYyNjM4MDE=","avatar_url":"https://avatars.githubusercontent.com/u/6263801?v=4","gravatar_id":"","url":"https://api.github.com/users/ggchangan","html_url":"https://github.com/ggchangan","followers_url":"https://api.github.com/users/ggchangan/followers","following_url":"https://api.github.com/users/ggchangan/following{/other_user}","gists_url":"https://api.github.com/users/ggchangan/gists{/gist_id}","starred_url":"https://api.github.com/users/ggchangan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ggchangan/subscriptions","organizations_url":"https://api.github.com/users/ggchangan/orgs","repos_url":"https://api.github.com/users/ggchangan/repos","events_url":"https://api.github.com/users/ggchangan/events{/privacy}","received_events_url":"https://api.github.com/users/ggchangan/received_events","type":"User","site_admin":false},"labels":[{"id":386401510,"node_id":"MDU6TGFiZWwzODY0MDE1MTA=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/question","name":"question","color":"bfdadc","default":true,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2022-01-06T03:06:46Z","updated_at":"2022-01-07T09:37:51Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":null,"reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33424/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33424/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33414","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33414/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33414/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33414/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33414","id":1094305485,"node_id":"I_kwDOA5dJV85BOcbN","number":33414,"title":"Idle Clickhouse Server unresponsive with excessive CPU and Swap usage on MacOS","user":{"login":"mikolajsnioch","id":22744577,"node_id":"MDQ6VXNlcjIyNzQ0NTc3","avatar_url":"https://avatars.githubusercontent.com/u/22744577?v=4","gravatar_id":"","url":"https://api.github.com/users/mikolajsnioch","html_url":"https://github.com/mikolajsnioch","followers_url":"https://api.github.com/users/mikolajsnioch/followers","following_url":"https://api.github.com/users/mikolajsnioch/following{/other_user}","gists_url":"https://api.github.com/users/mikolajsnioch/gists{/gist_id}","starred_url":"https://api.github.com/users/mikolajsnioch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikolajsnioch/subscriptions","organizations_url":"https://api.github.com/users/mikolajsnioch/orgs","repos_url":"https://api.github.com/users/mikolajsnioch/repos","events_url":"https://api.github.com/users/mikolajsnioch/events{/privacy}","received_events_url":"https://api.github.com/users/mikolajsnioch/received_events","type":"User","site_admin":false},"labels":[{"id":1273656645,"node_id":"MDU6TGFiZWwxMjczNjU2NjQ1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/alternative%20build","name":"alternative build","color":"fef2c0","default":false,"description":""},{"id":1725813383,"node_id":"MDU6TGFiZWwxNzI1ODEzMzgz","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-darwin","name":"comp-darwin","color":"b5bcff","default":false,"description":"Darwin-related builds and cross-builds"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":17,"created_at":"2022-01-05T12:33:14Z","updated_at":"2022-01-07T17:16:19Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Hello,\r\n\r\nI noticed that after I let the macbook idle overnight, it gets hot in the morning. Upon inspecting the load with htop, I can see that Clickhouse server, which was not queried by any application or hasn't been doing any work, is under heavy load:\r\n<img width=\"1587\" alt=\"Screenshot 2022-01-05 at 13 20 49\" src=\"https://user-images.githubusercontent.com/22744577/148217318-c46c72b1-f1c3-4481-8dcc-ae6fb2bcf0b8.png\">\r\n\r\nIf I try to start `clickhouse client` I see the following output:\r\n```\r\nmks@mkss-MBP ~ % clickhouse client\r\nClickHouse client version 21.12.2.1.\r\nConnecting to localhost:9000 as user default.\r\nConnected to ClickHouse server version 21.12.2 revision 54452.\r\n\r\nmkss-MBP :) Cannot load data for command line suggestions: Code: 241. DB::Exception: Received from localhost:9000. DB::Exception: Memory limit (total) exceeded: would use 229.60 TiB (attempt to allocate chunk of 4414670 bytes), maximum: 28.80 GiB. (MEMORY_LIMIT_EXCEEDED) (version 21.12.2.1)\r\n```\r\n\r\nTo get it to work I need to restart the server, after which it works OK until I leave the computer idle for a few hours again:\r\n```\r\nmks@mkss-MBP ~ % brew services restart clickhouse\r\nStopping `clickhouse@21.12`... (might take a while)\r\n==> Successfully stopped `clickhouse@21.12` (label: homebrew.mxcl.clickhouse@21.12)\r\n==> Successfully started `clickhouse@21.12` (label: homebrew.mxcl.clickhouse@21.12)\r\nmks@mkss-MBP ~ % clickhouse client\r\nClickHouse client version 21.12.2.1.\r\nConnecting to localhost:9000 as user default.\r\nConnected to ClickHouse server version 21.12.2 revision 54452.\r\n\r\nmkss-MBP :) \r\n```\r\n\r\nClickhouse version, as seen on the snippets above, is 21.12.2.1 installed with brew. The computer is Macbook Pro M1 Max, 32 GB RAM, macOS Monterey 12.1","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33414/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33414/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33408","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33408/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33408/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33408/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33408","id":1093994427,"node_id":"I_kwDOA5dJV85BNQe7","number":33408,"title":"Full / Right Join Unexpected Behavior","user":{"login":"fancyqlx","id":6196299,"node_id":"MDQ6VXNlcjYxOTYyOTk=","avatar_url":"https://avatars.githubusercontent.com/u/6196299?v=4","gravatar_id":"","url":"https://api.github.com/users/fancyqlx","html_url":"https://github.com/fancyqlx","followers_url":"https://api.github.com/users/fancyqlx/followers","following_url":"https://api.github.com/users/fancyqlx/following{/other_user}","gists_url":"https://api.github.com/users/fancyqlx/gists{/gist_id}","starred_url":"https://api.github.com/users/fancyqlx/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fancyqlx/subscriptions","organizations_url":"https://api.github.com/users/fancyqlx/orgs","repos_url":"https://api.github.com/users/fancyqlx/repos","events_url":"https://api.github.com/users/fancyqlx/events{/privacy}","received_events_url":"https://api.github.com/users/fancyqlx/received_events","type":"User","site_admin":false},"labels":[{"id":1357578153,"node_id":"MDU6TGFiZWwxMzU3NTc4MTUz","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-joins","name":"comp-joins","color":"b5bcff","default":false,"description":"JOINs"},{"id":1575085465,"node_id":"MDU6TGFiZWwxNTc1MDg1NDY1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/unexpected%20behaviour","name":"unexpected behaviour","color":"e088ca","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-01-05T05:24:14Z","updated_at":"2022-01-05T12:57:33Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"(you don't have to strictly follow this form)\r\n\r\n**Describe the unexpected behaviour**\r\n\r\nHi, we recently found that full / right join doesn't have an expected results. It seems that join on multiple nodes is not same as theoretical results.\r\n\r\n**How to reproduce**\r\n\r\nwe create distributed table on a two shards cluster\r\n\r\n```\r\nCREATE TABLE default.test_ccc\r\n(\r\n    `p_date` Date,\r\n    `id` Int32\r\n)\r\nENGINE = MergeTree\r\nPARTITION BY p_date\r\nORDER BY id\r\nSETTINGS index_granularity = 8192\r\n\r\nCREATE TABLE default.test_jjj\r\n(\r\n    `p_date` Date,\r\n    `id` Int32\r\n)\r\nENGINE = MergeTree\r\nPARTITION BY p_date\r\nORDER BY id\r\nSETTINGS index_granularity = 8192\r\n\r\nCREATE TABLE default.test_jjj_all\r\n(\r\n    `p_date` Date,\r\n    `id` Int32\r\n)\r\nENGINE = Distributed('test_cluster_two_shards_localhost', '', 'test_jjj')\r\n\r\nCREATE TABLE default.test_ccc_all\r\n(\r\n    `p_date` Date,\r\n    `id` Int32\r\n)\r\nENGINE = Distributed('test_cluster_two_shards_localhost', '', 'test_ccc')\r\n```\r\n\r\nthen insert values to only one of shards\r\n\r\n`insert into test_ccc values ('2021-01-01', 1)\r\n`\r\n\r\nthen join the tables\r\n\r\n```\r\nSELECT *\r\nFROM test_jjj_all AS a\r\nFULL OUTER JOIN test_ccc_all AS b ON a.id = b.id\r\n```\r\n\r\n![image](https://user-images.githubusercontent.com/6196299/148164884-0db2e8f6-21af-463c-b65e-ea2506c57b67.png)\r\n\r\n\r\nok, now we found it outputs two rows ( this behavior also same on global join). It is because the shard which has no values also output non-join rows, it is a correct full / right join behavior on each node. But the final results seems not an expected behavior which theoretically should only output one row. \r\n\r\nso I am wondering that it is a designed behavior you ever know or it is actually a problem?\r\n\r\n* Which ClickHouse server version to use\r\n\r\nI think all the version of ClickHouse has this kind of problems.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33408/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33408/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33405","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33405/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33405/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33405/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33405","id":1093951039,"node_id":"I_kwDOA5dJV85BNF4_","number":33405,"title":"Support column-level lineage analyze when creating mv","user":{"login":"wangqinghuan","id":22762150,"node_id":"MDQ6VXNlcjIyNzYyMTUw","avatar_url":"https://avatars.githubusercontent.com/u/22762150?v=4","gravatar_id":"","url":"https://api.github.com/users/wangqinghuan","html_url":"https://github.com/wangqinghuan","followers_url":"https://api.github.com/users/wangqinghuan/followers","following_url":"https://api.github.com/users/wangqinghuan/following{/other_user}","gists_url":"https://api.github.com/users/wangqinghuan/gists{/gist_id}","starred_url":"https://api.github.com/users/wangqinghuan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wangqinghuan/subscriptions","organizations_url":"https://api.github.com/users/wangqinghuan/orgs","repos_url":"https://api.github.com/users/wangqinghuan/repos","events_url":"https://api.github.com/users/wangqinghuan/events{/privacy}","received_events_url":"https://api.github.com/users/wangqinghuan/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2022-01-05T03:46:08Z","updated_at":"2022-01-25T06:06:26Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"for example\r\n\r\n1.CREATE TABLE\r\n```\r\nCREATE TABLE A\r\n(\r\n   a1 String,\r\n   a2 String,\r\n   ...\r\n)\r\n\r\nCREATE TABLE B\r\n(\r\n   b1 String,\r\n   b2 String,\r\n   ...\r\n)\r\n\r\nCREATE MATERIALIZED VIEW mv_A_to_B to B AS \r\nSELECT\r\n    a1,\r\n    a2,\r\n    ...\r\n  FROM  A\r\n\r\n```\r\n2.the lineage is \r\n\r\n>  field B.b1 origin from  A.a1\r\n>  field B.b2 origin from  A.a2\r\n>  ...","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33405/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33405/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33398","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33398/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33398/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33398/events","html_url":"https://github.com/ClickHouse/ClickHouse/pull/33398","id":1093561019,"node_id":"PR_kwDOA5dJV84whTh5","number":33398,"title":"Implement proportionsZTest","user":{"login":"achimbab","id":36371084,"node_id":"MDQ6VXNlcjM2MzcxMDg0","avatar_url":"https://avatars.githubusercontent.com/u/36371084?v=4","gravatar_id":"","url":"https://api.github.com/users/achimbab","html_url":"https://github.com/achimbab","followers_url":"https://api.github.com/users/achimbab/followers","following_url":"https://api.github.com/users/achimbab/following{/other_user}","gists_url":"https://api.github.com/users/achimbab/gists{/gist_id}","starred_url":"https://api.github.com/users/achimbab/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/achimbab/subscriptions","organizations_url":"https://api.github.com/users/achimbab/orgs","repos_url":"https://api.github.com/users/achimbab/repos","events_url":"https://api.github.com/users/achimbab/events{/privacy}","received_events_url":"https://api.github.com/users/achimbab/received_events","type":"User","site_admin":false},"labels":[{"id":1309674771,"node_id":"MDU6TGFiZWwxMzA5Njc0Nzcx","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/pr-feature","name":"pr-feature","color":"007700","default":false,"description":"Pull request with new product feature"},{"id":1807683251,"node_id":"MDU6TGFiZWwxODA3NjgzMjUx","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/doc-alert","name":"doc-alert","color":"e51068","default":false,"description":"PR where any documentation work is needed or proceeded"}],"state":"open","locked":false,"assignee":{"login":"nikitamikhaylov","id":25705399,"node_id":"MDQ6VXNlcjI1NzA1Mzk5","avatar_url":"https://avatars.githubusercontent.com/u/25705399?v=4","gravatar_id":"","url":"https://api.github.com/users/nikitamikhaylov","html_url":"https://github.com/nikitamikhaylov","followers_url":"https://api.github.com/users/nikitamikhaylov/followers","following_url":"https://api.github.com/users/nikitamikhaylov/following{/other_user}","gists_url":"https://api.github.com/users/nikitamikhaylov/gists{/gist_id}","starred_url":"https://api.github.com/users/nikitamikhaylov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nikitamikhaylov/subscriptions","organizations_url":"https://api.github.com/users/nikitamikhaylov/orgs","repos_url":"https://api.github.com/users/nikitamikhaylov/repos","events_url":"https://api.github.com/users/nikitamikhaylov/events{/privacy}","received_events_url":"https://api.github.com/users/nikitamikhaylov/received_events","type":"User","site_admin":false},"assignees":[{"login":"nikitamikhaylov","id":25705399,"node_id":"MDQ6VXNlcjI1NzA1Mzk5","avatar_url":"https://avatars.githubusercontent.com/u/25705399?v=4","gravatar_id":"","url":"https://api.github.com/users/nikitamikhaylov","html_url":"https://github.com/nikitamikhaylov","followers_url":"https://api.github.com/users/nikitamikhaylov/followers","following_url":"https://api.github.com/users/nikitamikhaylov/following{/other_user}","gists_url":"https://api.github.com/users/nikitamikhaylov/gists{/gist_id}","starred_url":"https://api.github.com/users/nikitamikhaylov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nikitamikhaylov/subscriptions","organizations_url":"https://api.github.com/users/nikitamikhaylov/orgs","repos_url":"https://api.github.com/users/nikitamikhaylov/repos","events_url":"https://api.github.com/users/nikitamikhaylov/events{/privacy}","received_events_url":"https://api.github.com/users/nikitamikhaylov/received_events","type":"User","site_admin":false}],"milestone":null,"comments":4,"created_at":"2022-01-04T16:51:10Z","updated_at":"2022-01-28T00:09:18Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/pulls/33398","html_url":"https://github.com/ClickHouse/ClickHouse/pull/33398","diff_url":"https://github.com/ClickHouse/ClickHouse/pull/33398.diff","patch_url":"https://github.com/ClickHouse/ClickHouse/pull/33398.patch","merged_at":null},"body":"Changelog category (leave one):\r\n- New Feature\r\n\r\n\r\nChangelog entry (a user-readable short description of the changes that goes to CHANGELOG.md):\r\nImplemented proportionsZTest function.\r\n\r\n\r\nDetailed description / Documentation draft:\r\nI implemented proportionsZTest in order to test for proportions based on normal (z) test. \r\n~You can use `SELECT proportionsZTest(10, 11, 100, 101, 0.95, 'two-sided', 'unpooled');`.~\r\nYou can use `SELECT proportionsZTest(10, 11, 100, 101, 0.95, 'unpooled');`.\r\n\r\nHappy new year :)","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33398/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33398/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33391","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33391/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33391/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33391/events","html_url":"https://github.com/ClickHouse/ClickHouse/pull/33391","id":1093317280,"node_id":"PR_kwDOA5dJV84wggPs","number":33391,"title":"Fix Alter ttl modification unsupported table engine","user":{"login":"zhongyuankai","id":54787696,"node_id":"MDQ6VXNlcjU0Nzg3Njk2","avatar_url":"https://avatars.githubusercontent.com/u/54787696?v=4","gravatar_id":"","url":"https://api.github.com/users/zhongyuankai","html_url":"https://github.com/zhongyuankai","followers_url":"https://api.github.com/users/zhongyuankai/followers","following_url":"https://api.github.com/users/zhongyuankai/following{/other_user}","gists_url":"https://api.github.com/users/zhongyuankai/gists{/gist_id}","starred_url":"https://api.github.com/users/zhongyuankai/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zhongyuankai/subscriptions","organizations_url":"https://api.github.com/users/zhongyuankai/orgs","repos_url":"https://api.github.com/users/zhongyuankai/repos","events_url":"https://api.github.com/users/zhongyuankai/events{/privacy}","received_events_url":"https://api.github.com/users/zhongyuankai/received_events","type":"User","site_admin":false},"labels":[{"id":1302792342,"node_id":"MDU6TGFiZWwxMzAyNzkyMzQy","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/pr-bugfix","name":"pr-bugfix","color":"ff4080","default":false,"description":"Pull request with bugfix, not backported by default"},{"id":3627025164,"node_id":"LA_kwDOA5dJV87YMAMM","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/can%20be%20tested","name":"can be tested","color":"1d76db","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":11,"created_at":"2022-01-04T12:42:06Z","updated_at":"2022-01-24T14:15:59Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/pulls/33391","html_url":"https://github.com/ClickHouse/ClickHouse/pull/33391","diff_url":"https://github.com/ClickHouse/ClickHouse/pull/33391.diff","patch_url":"https://github.com/ClickHouse/ClickHouse/pull/33391.patch","merged_at":null},"body":"Changelog category (leave one):\r\n\r\n- Bug Fix (user-visible misbehaviour in official stable or prestable release)\r\n\r\nChangelog entry (a user-readable short description of the changes that goes to CHANGELOG.md):\r\n\r\nDisallow ALTER TTL for engines that does not support it, to avoid breaking ATTACH TABLE (closes #33344)","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33391/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33391/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33376","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33376/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33376/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33376/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33376","id":1092926647,"node_id":"I_kwDOA5dJV85BJLy3","number":33376,"title":"Inconsistent behaviour of rankCorr (compared to corr) when sample is a constant","user":{"login":"dwa","id":54095,"node_id":"MDQ6VXNlcjU0MDk1","avatar_url":"https://avatars.githubusercontent.com/u/54095?v=4","gravatar_id":"","url":"https://api.github.com/users/dwa","html_url":"https://github.com/dwa","followers_url":"https://api.github.com/users/dwa/followers","following_url":"https://api.github.com/users/dwa/following{/other_user}","gists_url":"https://api.github.com/users/dwa/gists{/gist_id}","starred_url":"https://api.github.com/users/dwa/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dwa/subscriptions","organizations_url":"https://api.github.com/users/dwa/orgs","repos_url":"https://api.github.com/users/dwa/repos","events_url":"https://api.github.com/users/dwa/events{/privacy}","received_events_url":"https://api.github.com/users/dwa/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-01-04T01:02:24Z","updated_at":"2022-01-04T01:02:24Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"The following query (using rankCorr) throws an exception, but expected behaviour would be returning `nan` (if `corr` is anything to go by):\r\n\r\n```\r\ntma-1.local :) with asdf as (select * from (select [1,1,2] AS \"x.foo\", [4,4,4] AS \"x.bar\") array join x) select rankCorr(x.foo, x.bar) from asdf;\r\n\r\nWITH asdf AS\r\n    (\r\n        SELECT *\r\n        FROM\r\n        (\r\n            SELECT\r\n                [1, 1, 2] AS `x.foo`,\r\n                [4, 4, 4] AS `x.bar`\r\n        )\r\nARRAY JOIN x\r\n    )\r\nSELECT rankCorr(x.foo, x.bar)\r\nFROM asdf\r\n\r\nQuery id: ccc57d85-5f7b-45e5-82ae-6dc2d2ace595\r\n\r\n\r\n0 rows in set. Elapsed: 0.010 sec.\r\n\r\nReceived exception from server (version 21.12.3):\r\nCode: 36. DB::Exception: Received from localhost:9000. DB::Exception: All numbers in both samples are identical: While executing ConvertingAggregatedToChunksTransform. (BAD_ARGUMENTS)\r\n```\r\n\r\nThe expected behaviour would be similar to using `corr`:\r\n\r\n```\r\ntma-1.local :) with asdf as (select * from (select [1,1,2] AS \"x.foo\", [4,4,4] AS \"x.bar\") array join x) select corr(x.foo, x.bar) from asdf;\r\n\r\nWITH asdf AS\r\n    (\r\n        SELECT *\r\n        FROM\r\n        (\r\n            SELECT\r\n                [1, 1, 2] AS `x.foo`,\r\n                [4, 4, 4] AS `x.bar`\r\n        )\r\nARRAY JOIN x\r\n    )\r\nSELECT corr(x.foo, x.bar)\r\nFROM asdf\r\n\r\nQuery id: 0f93163b-8735-46c8-9252-dd5a995ced43\r\n\r\n┌─corr(x.foo, x.bar)─┐\r\n│                nan │\r\n└────────────────────┘\r\n```\r\nI believe the culprit to be the following lines:\r\nhttps://github.com/ClickHouse/ClickHouse/blob/bdc5b97d020b4576e31590cf1e9ac598bf389923/src/AggregateFunctions/StatCommon.h#L58-L60\r\n\r\nScipy gives a warning (but no exception), and returns `nan` values, both for spearman and pearson:\r\n\r\n```\r\n❯ ipython\r\nPython 3.9.9 | packaged by conda-forge | (main, Dec 20 2021, 02:41:03)\r\nType 'copyright', 'credits' or 'license' for more information\r\nIPython 7.30.1 -- An enhanced Interactive Python. Type '?' for help.\r\n\r\nIn [1]: from scipy.stats import spearmanr\r\n\r\nIn [2]: import numpy as np\r\n\r\nIn [3]: a = np.array([1,2,3])\r\n\r\nIn [4]: b = np.array([4,5,6])\r\n\r\nIn [5]: c = np.array([4,4,4])\r\n\r\nIn [6]: spearmanr(a,b)\r\nOut[6]: SpearmanrResult(correlation=1.0, pvalue=0.0)\r\n\r\nIn [7]: spearmanr(a,c)\r\n/home/dwa/.conda/envs/dev/lib/python3.9/site-packages/scipy/stats/stats.py:4484: SpearmanRConstantInputWarning: An input array is constant; the correlation coefficient is not defined.\r\n  warnings.warn(SpearmanRConstantInputWarning())\r\nOut[7]: SpearmanrResult(correlation=nan, pvalue=nan)\r\n\r\nIn [8]: from scipy.stats import pearsonr\r\n\r\nIn [9]: pearsonr(a,b)\r\nOut[9]: (0.9999999999999998, 1.3415758552508151e-08)\r\n\r\nIn [10]: pearsonr(a,c)\r\n/home/dwa/.conda/envs/dev/lib/python3.9/site-packages/scipy/stats/stats.py:4023: PearsonRConstantInputWarning: An input array is constant; the correlation coefficient is not defined.\r\n  warnings.warn(PearsonRConstantInputWarning())\r\nOut[10]: (nan, nan)\r\n```\r\n\r\nSimilar results for Octave:\r\n\r\n```\r\noctave:1> a = [1,2,3]\r\na =\r\n\r\n   1   2   3\r\n\r\noctave:2> b = [4,5,6]\r\nb =\r\n\r\n   4   5   6\r\n\r\noctave:3> spearman (a,b)\r\nans = 1\r\noctave:4> c = [4,4,4]\r\nc =\r\n\r\n   4   4   4\r\n\r\noctave:5> spearman (a,c)\r\nans = NaN\r\n```\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33376/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33376/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33371","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33371/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33371/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33371/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33371","id":1092480288,"node_id":"I_kwDOA5dJV85BHe0g","number":33371,"title":"Check for errors in config","user":{"login":"rkozlo","id":44550015,"node_id":"MDQ6VXNlcjQ0NTUwMDE1","avatar_url":"https://avatars.githubusercontent.com/u/44550015?v=4","gravatar_id":"","url":"https://api.github.com/users/rkozlo","html_url":"https://github.com/rkozlo","followers_url":"https://api.github.com/users/rkozlo/followers","following_url":"https://api.github.com/users/rkozlo/following{/other_user}","gists_url":"https://api.github.com/users/rkozlo/gists{/gist_id}","starred_url":"https://api.github.com/users/rkozlo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rkozlo/subscriptions","organizations_url":"https://api.github.com/users/rkozlo/orgs","repos_url":"https://api.github.com/users/rkozlo/repos","events_url":"https://api.github.com/users/rkozlo/events{/privacy}","received_events_url":"https://api.github.com/users/rkozlo/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2022-01-03T12:43:51Z","updated_at":"2022-01-03T14:43:40Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Hi.\r\nI would like to has some endpoint to check if config reload passed successfully. Have many clusters with many nodes and configs are stored in repository. Sometimes i make some typo, or according to documentation passing some options to server while in my version it is user level option. I would like to monitor if it is reloaded or there is some error and not waiting for server restart.\r\nMaybe there is a way to check this, LMK if so. I was looking in system tables and didn't find antything. Not metrics neither errors.\r\n21.3 clickhouse version","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33371/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33371/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33370","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33370/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33370/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33370/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33370","id":1092445509,"node_id":"I_kwDOA5dJV85BHWVF","number":33370,"title":"Clickhouse-copier Timeout exceeded while reading from socket","user":{"login":"BhavyaRajSharma","id":40774184,"node_id":"MDQ6VXNlcjQwNzc0MTg0","avatar_url":"https://avatars.githubusercontent.com/u/40774184?v=4","gravatar_id":"","url":"https://api.github.com/users/BhavyaRajSharma","html_url":"https://github.com/BhavyaRajSharma","followers_url":"https://api.github.com/users/BhavyaRajSharma/followers","following_url":"https://api.github.com/users/BhavyaRajSharma/following{/other_user}","gists_url":"https://api.github.com/users/BhavyaRajSharma/gists{/gist_id}","starred_url":"https://api.github.com/users/BhavyaRajSharma/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/BhavyaRajSharma/subscriptions","organizations_url":"https://api.github.com/users/BhavyaRajSharma/orgs","repos_url":"https://api.github.com/users/BhavyaRajSharma/repos","events_url":"https://api.github.com/users/BhavyaRajSharma/events{/privacy}","received_events_url":"https://api.github.com/users/BhavyaRajSharma/received_events","type":"User","site_admin":false},"labels":[{"id":386401510,"node_id":"MDU6TGFiZWwzODY0MDE1MTA=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/question","name":"question","color":"bfdadc","default":true,"description":""},{"id":3761121284,"node_id":"LA_kwDOA5dJV87gLigE","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/support-services","name":"support-services","color":"1A70E6","default":false,"description":""}],"state":"open","locked":false,"assignee":{"login":"gingerwizard","id":12695796,"node_id":"MDQ6VXNlcjEyNjk1Nzk2","avatar_url":"https://avatars.githubusercontent.com/u/12695796?v=4","gravatar_id":"","url":"https://api.github.com/users/gingerwizard","html_url":"https://github.com/gingerwizard","followers_url":"https://api.github.com/users/gingerwizard/followers","following_url":"https://api.github.com/users/gingerwizard/following{/other_user}","gists_url":"https://api.github.com/users/gingerwizard/gists{/gist_id}","starred_url":"https://api.github.com/users/gingerwizard/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gingerwizard/subscriptions","organizations_url":"https://api.github.com/users/gingerwizard/orgs","repos_url":"https://api.github.com/users/gingerwizard/repos","events_url":"https://api.github.com/users/gingerwizard/events{/privacy}","received_events_url":"https://api.github.com/users/gingerwizard/received_events","type":"User","site_admin":false},"assignees":[{"login":"gingerwizard","id":12695796,"node_id":"MDQ6VXNlcjEyNjk1Nzk2","avatar_url":"https://avatars.githubusercontent.com/u/12695796?v=4","gravatar_id":"","url":"https://api.github.com/users/gingerwizard","html_url":"https://github.com/gingerwizard","followers_url":"https://api.github.com/users/gingerwizard/followers","following_url":"https://api.github.com/users/gingerwizard/following{/other_user}","gists_url":"https://api.github.com/users/gingerwizard/gists{/gist_id}","starred_url":"https://api.github.com/users/gingerwizard/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gingerwizard/subscriptions","organizations_url":"https://api.github.com/users/gingerwizard/orgs","repos_url":"https://api.github.com/users/gingerwizard/repos","events_url":"https://api.github.com/users/gingerwizard/events{/privacy}","received_events_url":"https://api.github.com/users/gingerwizard/received_events","type":"User","site_admin":false}],"milestone":null,"comments":0,"created_at":"2022-01-03T11:50:55Z","updated_at":"2022-01-24T16:23:14Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"I am trying to copy tables data from one cluster to another. Clickhouse-copier works fine at start but after around 3 hour of processing it fails with below error :\r\n\r\n```\r\n2022.01.03 03:12:01.978502 [ 18645 ] {} <Trace> Connection (10.49.3.109:9100): Connecting. Database: dbuli. User: default\r\n2022.01.03 03:12:01.979051 [ 18645 ] {} <Trace> Connection (10.49.3.109:9100): Connected to ClickHouse server version 21.12.2.\r\n2022.01.03 03:17:02.078058 [ 18645 ] {} <Warning> Application: An error occurred while processing query :\r\n  ALTER TABLE dbuli.Imsi_Uli_local ATTACH PARTITION 20211125 FROM dbuli.Imsi_Uli_local_piece_0\r\n2022.01.03 03:17:02.078195 [ 18645 ] {} <Error> Application: Code: 209. DB::NetException: Timeout exceeded while reading from socket (10.49.3.109:9100, 300000 ms): while receiving packet from 10.49.3.109:9100. (SOCKET_TIMEOUT), Stack trace (when copying this message, always include the lines below):\r\n\r\n0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0xa20d85a in ?\r\n1. DB::ReadBufferFromPocoSocket::nextImpl() @ 0x1296c991 in ?\r\n2. void DB::readVarUIntImpl<false>(unsigned long&, DB::ReadBuffer&) @ 0xa25afd3 in ?\r\n3. DB::Connection::receivePacket() @ 0x13cb6109 in ?\r\n4. DB::MultiplexedConnections::receivePacketUnlocked(std::__1::function<void (int, Poco::Timespan, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)>, bool) @ 0x13ce3061 in ?\r\n5. DB::MultiplexedConnections::receivePacket() @ 0x13ce2cb7 in ?\r\n6. DB::RemoteQueryExecutor::read() @ 0x1295fe0f in ?\r\n7. DB::ClusterCopier::executeQueryOnCluster(std::__1::shared_ptr<DB::Cluster> const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Settings const&, DB::ClusterCopier::ClusterExecutionMode) const @ 0xa334521 in ?\r\n8. DB::ClusterCopier::tryMoveAllPiecesToDestinationTable(DB::TaskTable const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) @ 0xa3309f2 in ?\r\n9. DB::ClusterCopier::tryProcessTable(DB::ConnectionTimeouts const&, DB::TaskTable&) @ 0xa3278ff in ?\r\n10. DB::ClusterCopier::process(DB::ConnectionTimeouts const&) @ 0xa324d1e in ?\r\n11. DB::ClusterCopierApp::mainImpl() @ 0xa318c08 in ?\r\n12. DB::ClusterCopierApp::main(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0xa31971d in ?\r\n13. Poco::Util::Application::run() @ 0x16ef8546 in ?\r\n14. mainEntryClickHouseClusterCopier(int, char**) @ 0xa3199e0 in ?\r\n15. main @ 0xa207cca in ?\r\n16. __libc_start_main @ 0x380dc1ed5d in ?\r\n17. _start @ 0xa09c1ee in ?\r\n (version 21.12.2.17 (official build))\r\n\r\n```\r\n\r\n\r\n**Any reasons for it?**\r\n\r\nschema.xml\r\n\r\n```\r\n<yandex>\r\n        <remote_servers>\r\n                <source_cluster>\r\n                        <shard> \r\n                           <replica> \r\n                               <default_database>dbuli</default_database> \r\n                               <host>10.49.3.102</host> \r\n                               <port>9100</port> \r\n                           </replica> \r\n                           <replica> \r\n                               <default_database>dbuli</default_database> \r\n                               <host>10.49.3.101</host>\r\n                              <port>9100</port> \r\n                           </replica> \r\n                       </shard>\r\n                </source_cluster>\r\n                <target_cluster>\r\n                        <shard> \r\n                           <replica> \r\n                                 <default_database>dbuli</default_database> \r\n                                 <host>10.49.3.109</host> \r\n                                 <port>9100</port> \r\n                           </replica> \r\n                           <replica> \r\n                               <default_database>dbuli</default_database> \r\n                               <host>10.49.3.111</host> \r\n                               <port>9100</port> \r\n                           </replica> \r\n                         </shard>\r\n                </target_cluster>\r\n        </remote_servers>\r\n        <max_workers>1</max_workers>\r\n        <settings_pull>\r\n                <readonly>1</readonly>\r\n        </settings_pull>\r\n        <settings_push>\r\n                <readonly>0</readonly>\r\n        </settings_push>\r\n        <settings>\r\n                <connect_timeout>999999999</connect_timeout>\r\n                <insert_distributed_sync>1</insert_distributed_sync>\r\n        </settings>\r\n        <tables>\r\n                <Imsi_Uli> <cluster_pull>source_cluster</cluster_pull> <database_pull>dbuli</database_pull> <table_pull>Imsi_Uli</table_pull> <cluster_push>target_cluster</cluster_push> <database_push>dbuli</database_push> <table_push>Imsi_Uli_local</table_push> <engine>ENGINE = ReplicatedReplacingMergeTree('/clickhouse/tables/{shard1}/Imsi_Uli/1640259971', '{replica1}', ver) PARTITION BY toYYYYMMDD(ulidate) PRIMARY KEY (imsi, ulidate) ORDER BY (imsi, ulidate, ulihash)</engine> <sharding_key>(rand())</sharding_key> <where_condition>ulidate BETWEEN '2021-11-27 00:23:56' and '2021-12-09 00:23:56'</where_condition> </Imsi_Uli>\r\n        </tables>\r\n</yandex>\r\n\r\n```\r\n\r\nzookeeper.xml\r\n\r\n```\r\n<yandex> \r\n <logger> \r\n  <level>trace</level> \r\n  <size>100M</size> \r\n  <count>3</count> \r\n </logger> \r\n <zookeeper> \r\n  <node index=\"0\">\r\n   <host>10.49.3.111</host>\r\n   <port>2181</port>\r\n  </node> \r\n </zookeeper> \r\n</yandex>\r\n\r\n```\r\n\r\nClickhouse version Used\r\n\r\n```\r\nClickHouse client version 21.12.2.17 (official build).\r\nConnecting to 10.49.3.109:9100 as user default.\r\n```\r\n\r\nData Info in Source CLuster : \r\n```\r\n\r\nTotal Size: 61.442,144,991\r\nTotal size: 2571325431520 bytes\r\n```\r\n\r\nData Info in Target CLuster( after it failed): \r\n```\r\n\r\nTotal Size: 2,784,377,513\r\nTotal size: 125789072380 bytes\r\n```\r\n\r\nWe also reduced data to transfer by adding where condition in the schema.xml to limit the rows count from 61billion to 6 billion, but didn't work then as well.\r\nWe also increased below values which didn't help\r\n  \r\n```\r\n<max_session_timeout>360000</max_session_timeout>\r\n\r\n    <!-- Default session timeout, in seconds. Default: 60. -->\r\n    <default_session_timeout>6000000</default_session_timeout>\r\n\r\n```","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33370/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33370/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33367","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33367/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33367/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33367/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33367","id":1092114709,"node_id":"I_kwDOA5dJV85BGFkV","number":33367,"title":"Let SQLite database engine to create an empty db file if it doesn't exist.","user":{"login":"ramazanpolat","id":3527695,"node_id":"MDQ6VXNlcjM1Mjc2OTU=","avatar_url":"https://avatars.githubusercontent.com/u/3527695?v=4","gravatar_id":"","url":"https://api.github.com/users/ramazanpolat","html_url":"https://github.com/ramazanpolat","followers_url":"https://api.github.com/users/ramazanpolat/followers","following_url":"https://api.github.com/users/ramazanpolat/following{/other_user}","gists_url":"https://api.github.com/users/ramazanpolat/gists{/gist_id}","starred_url":"https://api.github.com/users/ramazanpolat/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ramazanpolat/subscriptions","organizations_url":"https://api.github.com/users/ramazanpolat/orgs","repos_url":"https://api.github.com/users/ramazanpolat/repos","events_url":"https://api.github.com/users/ramazanpolat/events{/privacy}","received_events_url":"https://api.github.com/users/ramazanpolat/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null}],"state":"open","locked":false,"assignee":{"login":"kssenii","id":54203879,"node_id":"MDQ6VXNlcjU0MjAzODc5","avatar_url":"https://avatars.githubusercontent.com/u/54203879?v=4","gravatar_id":"","url":"https://api.github.com/users/kssenii","html_url":"https://github.com/kssenii","followers_url":"https://api.github.com/users/kssenii/followers","following_url":"https://api.github.com/users/kssenii/following{/other_user}","gists_url":"https://api.github.com/users/kssenii/gists{/gist_id}","starred_url":"https://api.github.com/users/kssenii/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kssenii/subscriptions","organizations_url":"https://api.github.com/users/kssenii/orgs","repos_url":"https://api.github.com/users/kssenii/repos","events_url":"https://api.github.com/users/kssenii/events{/privacy}","received_events_url":"https://api.github.com/users/kssenii/received_events","type":"User","site_admin":false},"assignees":[{"login":"kssenii","id":54203879,"node_id":"MDQ6VXNlcjU0MjAzODc5","avatar_url":"https://avatars.githubusercontent.com/u/54203879?v=4","gravatar_id":"","url":"https://api.github.com/users/kssenii","html_url":"https://github.com/kssenii","followers_url":"https://api.github.com/users/kssenii/followers","following_url":"https://api.github.com/users/kssenii/following{/other_user}","gists_url":"https://api.github.com/users/kssenii/gists{/gist_id}","starred_url":"https://api.github.com/users/kssenii/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kssenii/subscriptions","organizations_url":"https://api.github.com/users/kssenii/orgs","repos_url":"https://api.github.com/users/kssenii/repos","events_url":"https://api.github.com/users/kssenii/events{/privacy}","received_events_url":"https://api.github.com/users/kssenii/received_events","type":"User","site_admin":false}],"milestone":null,"comments":6,"created_at":"2022-01-02T22:30:53Z","updated_at":"2022-01-07T10:22:52Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Any chance creating the sqlite db file if it doesn't exist?\r\n\r\n```sql\r\nCREATE DATABASE [IF NOT EXISTS] sqlite_database \r\n    ENGINE = SQLite('db_path')\r\n```\r\n\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33367/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33367/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33364","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33364/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33364/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33364/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33364","id":1092032357,"node_id":"I_kwDOA5dJV85BFxdl","number":33364,"title":"PostgreSQL DB Engine timestamp issue","user":{"login":"ramazanpolat","id":3527695,"node_id":"MDQ6VXNlcjM1Mjc2OTU=","avatar_url":"https://avatars.githubusercontent.com/u/3527695?v=4","gravatar_id":"","url":"https://api.github.com/users/ramazanpolat","html_url":"https://github.com/ramazanpolat","followers_url":"https://api.github.com/users/ramazanpolat/followers","following_url":"https://api.github.com/users/ramazanpolat/following{/other_user}","gists_url":"https://api.github.com/users/ramazanpolat/gists{/gist_id}","starred_url":"https://api.github.com/users/ramazanpolat/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ramazanpolat/subscriptions","organizations_url":"https://api.github.com/users/ramazanpolat/orgs","repos_url":"https://api.github.com/users/ramazanpolat/repos","events_url":"https://api.github.com/users/ramazanpolat/events{/privacy}","received_events_url":"https://api.github.com/users/ramazanpolat/received_events","type":"User","site_admin":false},"labels":[{"id":1397894054,"node_id":"MDU6TGFiZWwxMzk3ODk0MDU0","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/unfinished%20code","name":"unfinished code","color":"ff8800","default":false,"description":""}],"state":"open","locked":false,"assignee":{"login":"kssenii","id":54203879,"node_id":"MDQ6VXNlcjU0MjAzODc5","avatar_url":"https://avatars.githubusercontent.com/u/54203879?v=4","gravatar_id":"","url":"https://api.github.com/users/kssenii","html_url":"https://github.com/kssenii","followers_url":"https://api.github.com/users/kssenii/followers","following_url":"https://api.github.com/users/kssenii/following{/other_user}","gists_url":"https://api.github.com/users/kssenii/gists{/gist_id}","starred_url":"https://api.github.com/users/kssenii/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kssenii/subscriptions","organizations_url":"https://api.github.com/users/kssenii/orgs","repos_url":"https://api.github.com/users/kssenii/repos","events_url":"https://api.github.com/users/kssenii/events{/privacy}","received_events_url":"https://api.github.com/users/kssenii/received_events","type":"User","site_admin":false},"assignees":[{"login":"kssenii","id":54203879,"node_id":"MDQ6VXNlcjU0MjAzODc5","avatar_url":"https://avatars.githubusercontent.com/u/54203879?v=4","gravatar_id":"","url":"https://api.github.com/users/kssenii","html_url":"https://github.com/kssenii","followers_url":"https://api.github.com/users/kssenii/followers","following_url":"https://api.github.com/users/kssenii/following{/other_user}","gists_url":"https://api.github.com/users/kssenii/gists{/gist_id}","starred_url":"https://api.github.com/users/kssenii/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kssenii/subscriptions","organizations_url":"https://api.github.com/users/kssenii/orgs","repos_url":"https://api.github.com/users/kssenii/repos","events_url":"https://api.github.com/users/kssenii/events{/privacy}","received_events_url":"https://api.github.com/users/kssenii/received_events","type":"User","site_admin":false}],"milestone":null,"comments":2,"created_at":"2022-01-02T14:34:00Z","updated_at":"2022-01-07T10:25:00Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"**Describe the unexpected behaviour**\r\nWe use PostgreSQL database engine and get data from PostgreSQL. Unfortunately, the `timestamp` columns in the PostgreSQL tables are not displayed correctly if the date is before `1970-01-01`.\r\n\r\nThis prevents getting data from PostgreSQL correctly.\r\n\r\n**How to reproduce**\r\n* ClickHouse version: 21.12.3.32\r\n* PostgreSQL version: 14.1\r\n* On ClickHouse: \r\n`CREATE DATABASE postgres ENGINE = PostgreSQL('host:5432', 'database', 'user', 'password', 'public');`\r\n* On PostgreSQL we have a table with this definition:\r\n```\r\nCREATE TABLE history (\r\n   date_action timestamp without time zone,\r\n   org_code character varying(4)\r\n); \r\n```\r\n* Insert data into PostgreSQL table:\r\n`INSERT INTO public.history ('1960-01-01 01:01:01','ABCD');`\r\n\r\n* Selecting data from PostgreSQL shows the `date_action` column correctly. But when queried from ClickHouse, the `date_action` column is shown as  `1970-01-01 02:00:00.000000`\r\n\r\n**Expected behavior**\r\nWe expect it to show the date as is, like `1960-01-01 01:01:01` or `1960-01-01 01:01:01.000000`.\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33364/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33364/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33359","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33359/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33359/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33359/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33359","id":1091931924,"node_id":"I_kwDOA5dJV85BFY8U","number":33359,"title":"ANY (CLOSEST) RIGHT ASOF JOIN","user":{"login":"UnamedRus","id":9449405,"node_id":"MDQ6VXNlcjk0NDk0MDU=","avatar_url":"https://avatars.githubusercontent.com/u/9449405?v=4","gravatar_id":"","url":"https://api.github.com/users/UnamedRus","html_url":"https://github.com/UnamedRus","followers_url":"https://api.github.com/users/UnamedRus/followers","following_url":"https://api.github.com/users/UnamedRus/following{/other_user}","gists_url":"https://api.github.com/users/UnamedRus/gists{/gist_id}","starred_url":"https://api.github.com/users/UnamedRus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/UnamedRus/subscriptions","organizations_url":"https://api.github.com/users/UnamedRus/orgs","repos_url":"https://api.github.com/users/UnamedRus/repos","events_url":"https://api.github.com/users/UnamedRus/events{/privacy}","received_events_url":"https://api.github.com/users/UnamedRus/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-01-02T01:45:39Z","updated_at":"2022-01-02T01:45:39Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"**Use case**\r\n\r\n2 tables with significantly different size:\r\ntable_a has 1 billion records.\r\ntable_b has ~ 100k records.\r\n\r\nWe want to find closest event from table_a to event from table_b.\r\nBecause of this difference in table size, we want to put table_b in memory and table_a as left, so ClickHouse will build small and fast hashtable from table_b.\r\nBut now it will produce row for every record from table_a.\r\n\r\n```\r\nWITH tbl AS\r\n    (\r\n        SELECT\r\n            1 AS id,\r\n            number AS time\r\n        FROM numbers(100)\r\n    )\r\nSELECT *\r\nFROM\r\n(\r\n    SELECT *\r\n    FROM tbl\r\n) AS a\r\nASOF INNER JOIN\r\n(\r\n    SELECT *\r\n    FROM tbl\r\n    WHERE (time % 10) = 9\r\n) AS b ON (a.id = b.id) AND (a.time < b.time)\r\nORDER BY time DESC\r\nLIMIT 1 BY b.time\r\n\r\nQuery id: 3d4f1874-4a05-4eed-8ba2-e8e15745ca66\r\n\r\n┌─id─┬─time─┬─b.id─┬─b.time─┐\r\n│  1 │   98 │    1 │     99 │\r\n│  1 │   88 │    1 │     89 │\r\n│  1 │   78 │    1 │     79 │\r\n│  1 │   68 │    1 │     69 │\r\n│  1 │   58 │    1 │     59 │\r\n│  1 │   48 │    1 │     49 │\r\n│  1 │   38 │    1 │     39 │\r\n│  1 │   28 │    1 │     29 │\r\n│  1 │   18 │    1 │     19 │\r\n│  1 │    8 │    1 │      9 │\r\n└────┴──────┴──────┴────────┘\r\n\r\n10 rows in set. Elapsed: 0.004 sec.\r\n```\r\n\r\nWe can use `ORDER BY time LIMIT 1 BY b.time`, but it will be too slow to sort billions of rows from table_a.\r\n\r\n**Describe the solution you'd like**\r\n\r\nAbility to return only one row with closest match for every row from table_b.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33359/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33359/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33358","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33358/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33358/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33358/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33358","id":1091924524,"node_id":"I_kwDOA5dJV85BFXIs","number":33358,"title":"-DistinctBy (-DistinctOn) aggregate function combinator","user":{"login":"UnamedRus","id":9449405,"node_id":"MDQ6VXNlcjk0NDk0MDU=","avatar_url":"https://avatars.githubusercontent.com/u/9449405?v=4","gravatar_id":"","url":"https://api.github.com/users/UnamedRus","html_url":"https://github.com/UnamedRus","followers_url":"https://api.github.com/users/UnamedRus/followers","following_url":"https://api.github.com/users/UnamedRus/following{/other_user}","gists_url":"https://api.github.com/users/UnamedRus/gists{/gist_id}","starred_url":"https://api.github.com/users/UnamedRus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/UnamedRus/subscriptions","organizations_url":"https://api.github.com/users/UnamedRus/orgs","repos_url":"https://api.github.com/users/UnamedRus/repos","events_url":"https://api.github.com/users/UnamedRus/events{/privacy}","received_events_url":"https://api.github.com/users/UnamedRus/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-01-02T00:48:01Z","updated_at":"2022-01-02T02:00:23Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"**Use case**\r\n\r\n```\r\nSELECT *\r\nFROM\r\n(\r\n    SELECT\r\n        1 AS product_id,\r\n        rand() % 10 AS sold,\r\n        arrayJoin([1, 2, 3, 4, 10]) AS category_id,\r\n        today() + number AS date\r\n    FROM numbers(5)\r\n)\r\n\r\n┌─product_id─┬─sold─┬─category_id─┬───────date─┐\r\n│          1 │    8 │           1 │ 2022-01-02 │\r\n│          1 │    8 │           2 │ 2022-01-02 │\r\n│          1 │    8 │           3 │ 2022-01-02 │\r\n│          1 │    8 │           4 │ 2022-01-02 │\r\n│          1 │    8 │          10 │ 2022-01-02 │\r\n│          1 │    7 │           1 │ 2022-01-03 │\r\n│          1 │    7 │           2 │ 2022-01-03 │\r\n│          1 │    7 │           3 │ 2022-01-03 │\r\n│          1 │    7 │           4 │ 2022-01-03 │\r\n│          1 │    7 │          10 │ 2022-01-03 │\r\n│          1 │    3 │           1 │ 2022-01-04 │\r\n│          1 │    3 │           2 │ 2022-01-04 │\r\n│          1 │    3 │           3 │ 2022-01-04 │\r\n│          1 │    3 │           4 │ 2022-01-04 │\r\n│          1 │    3 │          10 │ 2022-01-04 │\r\n│          1 │    1 │           1 │ 2022-01-05 │\r\n│          1 │    1 │           2 │ 2022-01-05 │\r\n│          1 │    1 │           3 │ 2022-01-05 │\r\n│          1 │    1 │           4 │ 2022-01-05 │\r\n│          1 │    1 │          10 │ 2022-01-05 │\r\n│          1 │    0 │           1 │ 2022-01-06 │\r\n│          1 │    0 │           2 │ 2022-01-06 │\r\n│          1 │    0 │           3 │ 2022-01-06 │\r\n│          1 │    0 │           4 │ 2022-01-06 │\r\n│          1 │    0 │          10 │ 2022-01-06 │\r\n└────────────┴──────┴─────────────┴────────────┘\r\n```\r\n\r\nAmount of sold product's being duplicated by each category per day.\r\nWe don't know category_id for each product_id in advance, so we can't use -If combinator to properly sum sold count only for 1 category. (we don't care which one, because sold value is the same for all categories for specific day)\r\n\r\n**Describe the solution you'd like**\r\n\r\n```\r\nSELECT product_id, sumDistinctBy(sold, date) FROM table GROUP BY product_id\r\n\r\nOr DistinctOn\r\n\r\nSELECT product_id, sumDistinctOn(sold, date) FROM table GROUP BY product_id\r\n```\r\n\r\n**Describe alternatives you've considered**\r\n\r\n```\r\nSELECT product_id, sum(sold) FROM( SELECT product_id, any(sold) as sold FROM table GROUP BY product_id, date) GROUP BY product_Id\r\n```\r\n\r\nBut having 2 GROUP BY and first have 30 times higher cardinality (If we assume, that we query data for 1 month) making query quite slow. \r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33358/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33358/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33344","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33344/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33344/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33344/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33344","id":1091494805,"node_id":"I_kwDOA5dJV85BDuOV","number":33344,"title":"Block TTL's for Distributed tables during alters","user":{"login":"rkozlo","id":44550015,"node_id":"MDQ6VXNlcjQ0NTUwMDE1","avatar_url":"https://avatars.githubusercontent.com/u/44550015?v=4","gravatar_id":"","url":"https://api.github.com/users/rkozlo","html_url":"https://github.com/rkozlo","followers_url":"https://api.github.com/users/rkozlo/followers","following_url":"https://api.github.com/users/rkozlo/following{/other_user}","gists_url":"https://api.github.com/users/rkozlo/gists{/gist_id}","starred_url":"https://api.github.com/users/rkozlo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rkozlo/subscriptions","organizations_url":"https://api.github.com/users/rkozlo/orgs","repos_url":"https://api.github.com/users/rkozlo/repos","events_url":"https://api.github.com/users/rkozlo/events{/privacy}","received_events_url":"https://api.github.com/users/rkozlo/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-12-31T09:29:46Z","updated_at":"2021-12-31T09:29:46Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Right now clickhouse allows to create TTL columns for Distributed tables during alters. It is working normally until server restart. After that it won't start because engine distributed doesn't support TTL clause. Modify metadata is required.\r\n\r\nMy cluster has 21.3 but tested it also with 21.11 and the same behavior.\r\nIt is blocked during create but it should be also be blocked during alters.\r\nTested on table from tutorial\r\nENGINE = Distributed('stage, 'default', 'hits_v1') \r\nalter table hits_v1_all modify column UTMCampaign String TTL EventDate + INTERVAL 1 MONTH ← it passes normally","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33344/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33344/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33332","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33332/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33332/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33332/events","html_url":"https://github.com/ClickHouse/ClickHouse/pull/33332","id":1091248500,"node_id":"PR_kwDOA5dJV84wZ6e0","number":33332,"title":"MeiliSearch","user":{"login":"Michicosun","id":34075916,"node_id":"MDQ6VXNlcjM0MDc1OTE2","avatar_url":"https://avatars.githubusercontent.com/u/34075916?v=4","gravatar_id":"","url":"https://api.github.com/users/Michicosun","html_url":"https://github.com/Michicosun","followers_url":"https://api.github.com/users/Michicosun/followers","following_url":"https://api.github.com/users/Michicosun/following{/other_user}","gists_url":"https://api.github.com/users/Michicosun/gists{/gist_id}","starred_url":"https://api.github.com/users/Michicosun/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Michicosun/subscriptions","organizations_url":"https://api.github.com/users/Michicosun/orgs","repos_url":"https://api.github.com/users/Michicosun/repos","events_url":"https://api.github.com/users/Michicosun/events{/privacy}","received_events_url":"https://api.github.com/users/Michicosun/received_events","type":"User","site_admin":false},"labels":[{"id":1309674771,"node_id":"MDU6TGFiZWwxMzA5Njc0Nzcx","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/pr-feature","name":"pr-feature","color":"007700","default":false,"description":"Pull request with new product feature"},{"id":1807683251,"node_id":"MDU6TGFiZWwxODA3NjgzMjUx","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/doc-alert","name":"doc-alert","color":"e51068","default":false,"description":"PR where any documentation work is needed or proceeded"},{"id":3627025164,"node_id":"LA_kwDOA5dJV87YMAMM","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/can%20be%20tested","name":"can be tested","color":"1d76db","default":false,"description":""}],"state":"open","locked":false,"assignee":{"login":"kssenii","id":54203879,"node_id":"MDQ6VXNlcjU0MjAzODc5","avatar_url":"https://avatars.githubusercontent.com/u/54203879?v=4","gravatar_id":"","url":"https://api.github.com/users/kssenii","html_url":"https://github.com/kssenii","followers_url":"https://api.github.com/users/kssenii/followers","following_url":"https://api.github.com/users/kssenii/following{/other_user}","gists_url":"https://api.github.com/users/kssenii/gists{/gist_id}","starred_url":"https://api.github.com/users/kssenii/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kssenii/subscriptions","organizations_url":"https://api.github.com/users/kssenii/orgs","repos_url":"https://api.github.com/users/kssenii/repos","events_url":"https://api.github.com/users/kssenii/events{/privacy}","received_events_url":"https://api.github.com/users/kssenii/received_events","type":"User","site_admin":false},"assignees":[{"login":"kssenii","id":54203879,"node_id":"MDQ6VXNlcjU0MjAzODc5","avatar_url":"https://avatars.githubusercontent.com/u/54203879?v=4","gravatar_id":"","url":"https://api.github.com/users/kssenii","html_url":"https://github.com/kssenii","followers_url":"https://api.github.com/users/kssenii/followers","following_url":"https://api.github.com/users/kssenii/following{/other_user}","gists_url":"https://api.github.com/users/kssenii/gists{/gist_id}","starred_url":"https://api.github.com/users/kssenii/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kssenii/subscriptions","organizations_url":"https://api.github.com/users/kssenii/orgs","repos_url":"https://api.github.com/users/kssenii/repos","events_url":"https://api.github.com/users/kssenii/events{/privacy}","received_events_url":"https://api.github.com/users/kssenii/received_events","type":"User","site_admin":false}],"milestone":null,"comments":1,"created_at":"2021-12-30T18:27:16Z","updated_at":"2022-01-28T06:13:04Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/pulls/33332","html_url":"https://github.com/ClickHouse/ClickHouse/pull/33332","diff_url":"https://github.com/ClickHouse/ClickHouse/pull/33332.diff","patch_url":"https://github.com/ClickHouse/ClickHouse/pull/33332.patch","merged_at":null},"body":"Changelog category (leave one):\r\n- New Feature\r\n\r\nChangelog entry (a user-readable short description of the changes that goes to CHANGELOG.md):\r\nadd implementation of MeiliSearch storage\r\n\r\nDetailed description / Documentation draft:\r\nadd realization of main functions of MeiliSearch storage, using MeiliSearch API and curllib ","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33332/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33332/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33325","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33325/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33325/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33325/events","html_url":"https://github.com/ClickHouse/ClickHouse/pull/33325","id":1091105627,"node_id":"PR_kwDOA5dJV84wZcu_","number":33325,"title":"Rewrite right table of join in buildJoinedPlan","user":{"login":"vdimir","id":7023786,"node_id":"MDQ6VXNlcjcwMjM3ODY=","avatar_url":"https://avatars.githubusercontent.com/u/7023786?v=4","gravatar_id":"","url":"https://api.github.com/users/vdimir","html_url":"https://github.com/vdimir","followers_url":"https://api.github.com/users/vdimir/followers","following_url":"https://api.github.com/users/vdimir/following{/other_user}","gists_url":"https://api.github.com/users/vdimir/gists{/gist_id}","starred_url":"https://api.github.com/users/vdimir/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vdimir/subscriptions","organizations_url":"https://api.github.com/users/vdimir/orgs","repos_url":"https://api.github.com/users/vdimir/repos","events_url":"https://api.github.com/users/vdimir/events{/privacy}","received_events_url":"https://api.github.com/users/vdimir/received_events","type":"User","site_admin":false},"labels":[{"id":1302792342,"node_id":"MDU6TGFiZWwxMzAyNzkyMzQy","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/pr-bugfix","name":"pr-bugfix","color":"ff4080","default":false,"description":"Pull request with bugfix, not backported by default"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-12-30T13:27:27Z","updated_at":"2021-12-30T13:27:30Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"draft":true,"pull_request":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/pulls/33325","html_url":"https://github.com/ClickHouse/ClickHouse/pull/33325","diff_url":"https://github.com/ClickHouse/ClickHouse/pull/33325.diff","patch_url":"https://github.com/ClickHouse/ClickHouse/pull/33325.patch","merged_at":null},"body":"Changelog category (leave one):\r\n\r\n- Bug Fix (user-visible misbehaviour in official stable or prestable release)\r\n\r\n\r\n\r\nChangelog entry (a user-readable short description of the changes that goes to CHANGELOG.md):\r\nissue #31184 \r\n\r\n\r\nDetailed description / Documentation draft:\r\n...\r\n\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33325/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33325/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33324","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33324/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33324/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33324/events","html_url":"https://github.com/ClickHouse/ClickHouse/pull/33324","id":1091077840,"node_id":"PR_kwDOA5dJV84wZW4M","number":33324,"title":"Simplify different block structure (i.e. after ALTER) support for Buffer","user":{"login":"azat","id":430798,"node_id":"MDQ6VXNlcjQzMDc5OA==","avatar_url":"https://avatars.githubusercontent.com/u/430798?v=4","gravatar_id":"","url":"https://api.github.com/users/azat","html_url":"https://github.com/azat","followers_url":"https://api.github.com/users/azat/followers","following_url":"https://api.github.com/users/azat/following{/other_user}","gists_url":"https://api.github.com/users/azat/gists{/gist_id}","starred_url":"https://api.github.com/users/azat/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/azat/subscriptions","organizations_url":"https://api.github.com/users/azat/orgs","repos_url":"https://api.github.com/users/azat/repos","events_url":"https://api.github.com/users/azat/events{/privacy}","received_events_url":"https://api.github.com/users/azat/received_events","type":"User","site_admin":false},"labels":[{"id":1876999755,"node_id":"MDU6TGFiZWwxODc2OTk5NzU1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/pr-not-for-changelog","name":"pr-not-for-changelog","color":"007700","default":false,"description":"This PR should not be mentioned in the changelog"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2021-12-30T12:33:08Z","updated_at":"2022-01-30T10:14:44Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/pulls/33324","html_url":"https://github.com/ClickHouse/ClickHouse/pull/33324","diff_url":"https://github.com/ClickHouse/ClickHouse/pull/33324.diff","patch_url":"https://github.com/ClickHouse/ClickHouse/pull/33324.patch","merged_at":null},"body":"Changelog category (leave one):\r\n- Not for changelog (changelog entry is not required)\r\n\r\nChangelog entry (a user-readable short description of the changes that goes to CHANGELOG.md):\r\nSimplify different block structure (i.e. after ALTER) support for Buffer\r\n\r\nFollow-up for: #30565 (Cc @KochetovNicolai)\r\nFollow-up for: #15192 (Cc @alesapin)","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33324/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33324/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33322","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33322/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33322/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33322/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33322","id":1091061526,"node_id":"I_kwDOA5dJV85BCEcW","number":33322,"title":"Support LowCardinality for argMax","user":{"login":"jrdi","id":67608,"node_id":"MDQ6VXNlcjY3NjA4","avatar_url":"https://avatars.githubusercontent.com/u/67608?v=4","gravatar_id":"","url":"https://api.github.com/users/jrdi","html_url":"https://github.com/jrdi","followers_url":"https://api.github.com/users/jrdi/followers","following_url":"https://api.github.com/users/jrdi/following{/other_user}","gists_url":"https://api.github.com/users/jrdi/gists{/gist_id}","starred_url":"https://api.github.com/users/jrdi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jrdi/subscriptions","organizations_url":"https://api.github.com/users/jrdi/orgs","repos_url":"https://api.github.com/users/jrdi/repos","events_url":"https://api.github.com/users/jrdi/events{/privacy}","received_events_url":"https://api.github.com/users/jrdi/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-12-30T12:00:50Z","updated_at":"2021-12-30T12:00:50Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"**Use case**\r\n\r\nI'm trying to create a materialized view storing the intermediate state of `argMax` applied to a `LowCardinality(String)` field. Ideally, the state field type should be `AggregateFunction(argMax, LowCardinality(String), DateTime)` but looks like `argMaxState` doesn't support `LowCardinality` type:\r\n\r\n```sql\r\n:) describe (select argMaxState(lc, d) from (select number, now() AS d, toLowCardinality('lc_test') AS lc from numbers(1000)))\r\n\r\nDESCRIBE TABLE\r\n(\r\n    SELECT argMaxState(lc, d)\r\n    FROM\r\n    (\r\n        SELECT\r\n            number,\r\n            now() AS d,\r\n            toLowCardinality('lc_test') AS lc\r\n        FROM numbers(1000)\r\n    )\r\n)\r\n\r\nQuery id: 2f4bd370-8428-4a4a-aebd-87cc1eccc86a\r\n\r\n┌─name───────────────┬─type────────────────────────────────────────┬─default_type─┬─default_expression─┬─comment─┬─codec_expression─┬─ttl_expression─┐\r\n│ argMaxState(lc, d) │ AggregateFunction(argMax, String, DateTime) │              │                    │         │                  │                │\r\n└────────────────────┴─────────────────────────────────────────────┴──────────────┴────────────────────┴─────────┴──────────────────┴────────────────┘\r\n\r\n1 rows in set. Elapsed: 0.003 sec.\r\n```\r\n\r\nChecking `argMax` itself also doesn't support LowCardinality type:\r\n\r\n```sql\r\n:) describe (select argMax(lc, d) from (select number, now() AS d, toLowCardinality('lc_test') AS lc from numbers(1000)))\r\n\r\nDESCRIBE TABLE\r\n(\r\n    SELECT argMax(lc, d)\r\n    FROM\r\n    (\r\n        SELECT\r\n            number,\r\n            now() AS d,\r\n            toLowCardinality('lc_test') AS lc\r\n        FROM numbers(1000)\r\n    )\r\n)\r\n\r\nQuery id: dbf931e7-4e22-4f06-9afb-eed2dd53e4fb\r\n\r\n┌─name──────────┬─type───┬─default_type─┬─default_expression─┬─comment─┬─codec_expression─┬─ttl_expression─┐\r\n│ argMax(lc, d) │ String │              │                    │         │                  │                │\r\n└───────────────┴────────┴──────────────┴────────────────────┴─────────┴──────────────────┴────────────────┘\r\n\r\n1 rows in set. Elapsed: 0.003 sec.\r\n```\r\n\r\nAdditionally, `argMax` works correctly:\r\n\r\n```sql\r\n:) select argMax(lc, d) from (select number, now() AS d, toLowCardinality('lc_test') AS lc from numbers(1000))\r\n\r\nSELECT argMax(lc, d)\r\nFROM\r\n(\r\n    SELECT\r\n        number,\r\n        now() AS d,\r\n        toLowCardinality('lc_test') AS lc\r\n    FROM numbers(1000)\r\n)\r\n\r\nQuery id: 3f58fb46-4652-48dc-a6c0-5ea7f251e327\r\n\r\n┌─argMax(lc, d)─┐\r\n│ lc_test       │\r\n└───────────────┘\r\n\r\n1 rows in set. Elapsed: 0.007 sec. Processed 1.00 thousand rows, 8.00 KB (150.49 thousand rows/s., 1.20 MB/s.)\r\n```\r\n\r\n**Additional context**\r\n\r\nClickHouse version:\r\n\r\n```sql\r\n:) SELECT version(), now()\r\n\r\nSELECT\r\n    version(),\r\n    now()\r\n\r\nQuery id: 7dc9b2e0-7ab7-4a57-af68-07f443d0c45d\r\n\r\n┌─version()─┬───────────────now()─┐\r\n│ 21.9.5.1  │ 2021-12-30 11:46:41 │\r\n└───────────┴─────────────────────┘\r\n\r\n1 rows in set. Elapsed: 0.002 sec.\r\n```\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33322/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33322/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33320","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33320/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33320/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33320/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33320","id":1090909050,"node_id":"I_kwDOA5dJV85BBfN6","number":33320,"title":"Possible memory leak","user":{"login":"loyd","id":952180,"node_id":"MDQ6VXNlcjk1MjE4MA==","avatar_url":"https://avatars.githubusercontent.com/u/952180?v=4","gravatar_id":"","url":"https://api.github.com/users/loyd","html_url":"https://github.com/loyd","followers_url":"https://api.github.com/users/loyd/followers","following_url":"https://api.github.com/users/loyd/following{/other_user}","gists_url":"https://api.github.com/users/loyd/gists{/gist_id}","starred_url":"https://api.github.com/users/loyd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/loyd/subscriptions","organizations_url":"https://api.github.com/users/loyd/orgs","repos_url":"https://api.github.com/users/loyd/repos","events_url":"https://api.github.com/users/loyd/events{/privacy}","received_events_url":"https://api.github.com/users/loyd/received_events","type":"User","site_admin":false},"labels":[{"id":845267693,"node_id":"MDU6TGFiZWw4NDUyNjc2OTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/st-need-info","name":"st-need-info","color":"e5b890","default":false,"description":"We need extra data to continue"},{"id":1532016596,"node_id":"MDU6TGFiZWwxNTMyMDE2NTk2","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/memory","name":"memory","color":"e99695","default":false,"description":"When memory usage is higher than expected"},{"id":3260776666,"node_id":"MDU6TGFiZWwzMjYwNzc2NjY2","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/potential%20bug","name":"potential bug","color":"ffc080","default":false,"description":"To be reviewed by developers and confirmed/rejected."}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":8,"created_at":"2021-12-30T06:42:36Z","updated_at":"2022-01-26T14:33:37Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"**ClickHouse version**: 21.6.6.51 (cannot update until https://github.com/ClickHouse/ClickHouse/issues/32744 is released).\r\n\r\nMemory usage is increasing constantly and, when the RSS limit is reached, CH fails random queries (inserts into/selects from different tables). We cannot find where the memory is.\r\n\r\nAdditional information:\r\n* All queries are done by users with `max_memory_usage=750MiB`.\r\n* We insert rows in batches every 100ms into 32 `Buffer` tables, totally ~50k rows/s. \r\n* We use live views and don't use dictionaries.\r\n\r\n## Metrics\r\nMetrics (sharp drops are restarts). Here we set `max_server_memory_usage_to_ram_ratio` to `0.3` (37GiB) to show peaks. The same behavior remains with `0.9` (114GiB).\r\n![2021-12-30_08-38-15](https://user-images.githubusercontent.com/952180/147724745-b65a304d-e9e2-4308-b9ce-1ed454464f13.png)\r\n\r\nSuspiciously high values of purged metrics.\r\n\r\nDon't see any correlation with different events:\r\n![2021-12-30_09-26-08](https://user-images.githubusercontent.com/952180/147727209-51595b26-8924-4554-9daa-bd189a62118b.png)\r\n\r\n## Attempts to find the reason\r\n```sql\r\nSELECT formatReadableSize(sum(total_bytes)) FROM system.tables WHERE engine IN ('Memory','Set','Join');\r\n```\r\n```\r\n172.57 KiB\r\n```\r\n---\r\n```sql\r\nSELECT formatReadableSize(sum(memory_usage)) FROM system.merges;\r\n```\r\n```\r\n249.99 MiB\r\n```\r\n---\r\n```sql\r\nSELECT formatReadableSize(sum(memory_usage)) FROM system.processes;\r\n```\r\n```\r\n36.97 MiB\r\n```\r\n---\r\n```sql\r\nSELECT formatReadableSize(sum(memory_usage)), formatReadableSize(sum(peak_memory_usage)) FROM system.processes;\r\n```\r\n```\r\n0.00 B                                │ 0.00 B\r\n```\r\n---\r\n```sql\r\nSELECT\r\n    metric,\r\n    formatReadableSize(value)\r\nFROM system.asynchronous_metrics\r\nWHERE metric IN ('UncompressedCacheBytes', 'MarkCacheBytes')\r\n```\r\n```\r\n┌─metric─────────────────┬─formatReadableSize(value)─┐\r\n│ UncompressedCacheBytes │ 0.00 B                    │\r\n│ MarkCacheBytes         │ 55.91 MiB                 │\r\n└────────────────────────┴───────────────────────────┘\r\n```\r\n---\r\n```sql\r\nSELECT\r\n    formatReadableSize(sum(primary_key_bytes_in_memory)) AS primary_key_bytes_in_memory,\r\n    formatReadableSize(sum(primary_key_bytes_in_memory_allocated)) AS primary_key_bytes_in_memory_allocated\r\nFROM system.parts\r\n```\r\n```\r\n┌─primary_key_bytes_in_memory─┬─primary_key_bytes_in_memory_allocated─┐\r\n│ 337.63 MiB                  │ 624.06 MiB                            │\r\n└─────────────────────────────┴───────────────────────────────────────┘\r\n```\r\n\r\n## Logs\r\nRegularly (1-2 times per hour) wee see the following pattern in logs:\r\n```\r\n2021.12.28 10:22:33.397711 [ 1854971 ] {1822bef8-7c15-42d4-9113-a1bce442a4c0} <Error> executeQuery: Code: 24, e.displayText() = DB::Exception: Cannot write to ostream at offset 59798 (version 21.6.6.51 (official build)) (from 10.221.8.220:46046) (in query: WATCH lv_25bed493f7b3a63aade737679c0974f3f320bd99 FORMAT JSONEachRowWithProgress ), Stack trace (when copying this message, always include the lines below):\r\n2021.12.28 10:22:33.400234 [ 1854971 ] {1822bef8-7c15-42d4-9113-a1bce442a4c0} <Error> DynamicQueryHandler: Code: 24, e.displayText() = DB::Exception: Cannot write to ostream at offset 59798, Stack trace (when copying this message, always include the lines below):\r\n2021.12.28 10:22:33.400944 [ 1854971 ] {1822bef8-7c15-42d4-9113-a1bce442a4c0} <Error> DynamicQueryHandler: Cannot send exception to client: Code: 24, e.displayText() = DB::Exception: Cannot write to ostream at offset 59871, Stack trace (when copying this message, always include the lines below):\r\n2021.12.28 10:22:33.402017 [ 1854971 ] {} <Error> ServerErrorHandler: Poco::Exception. Code: 1000, e.code() = 32, e.displayText() = I/O error: Broken pipe, Stack trace (when copying this message, always include the lines below):\r\n```\r\nThis may be related to the client library (maybe doesn't read the whole response).\r\n\r\nLiveView is simple enough:\r\n```\r\nCREATE LIVE VIEW algo.lv_17cc0dbf4232839381bb35d6b65ee11f8b51b1bb WITH TIMEOUT 5\r\n(`now64(9)` DateTime64(9)) AS\r\nSELECT now64(9) FROM ... WHERE some_id IN\r\n(\r\n    SELECT some_id\r\n    FROM subscribers\r\n)\r\nLIMIT 1\r\n```\r\n\r\n---\r\n\r\nWhat can I check else?\r\n\r\nI haven't found related issues, except for https://github.com/ClickHouse/ClickHouse/issues/32750, but we don't use `cancel_http_readonly_queries_on_client_close`.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33320/reactions","total_count":4,"+1":3,"-1":0,"laugh":0,"hooray":0,"confused":1,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33320/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33317","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33317/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33317/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33317/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33317","id":1090852445,"node_id":"I_kwDOA5dJV85BBRZd","number":33317,"title":"Keeper support client reconnect within session timeout","user":{"login":"JackyWoo","id":3991709,"node_id":"MDQ6VXNlcjM5OTE3MDk=","avatar_url":"https://avatars.githubusercontent.com/u/3991709?v=4","gravatar_id":"","url":"https://api.github.com/users/JackyWoo","html_url":"https://github.com/JackyWoo","followers_url":"https://api.github.com/users/JackyWoo/followers","following_url":"https://api.github.com/users/JackyWoo/following{/other_user}","gists_url":"https://api.github.com/users/JackyWoo/gists{/gist_id}","starred_url":"https://api.github.com/users/JackyWoo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JackyWoo/subscriptions","organizations_url":"https://api.github.com/users/JackyWoo/orgs","repos_url":"https://api.github.com/users/JackyWoo/repos","events_url":"https://api.github.com/users/JackyWoo/events{/privacy}","received_events_url":"https://api.github.com/users/JackyWoo/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2021-12-30T03:27:21Z","updated_at":"2022-01-19T06:47:30Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"**Use case**\r\n\r\nKeeper is used with long alived connection in most cases.  The network may be unstable in some situations and may lead session disconnected. Reestablish session is a heavy operation. Supporting reconnecting may make sense.\r\n\r\n**Describe the solution you'd like**\r\n\r\nKeeper support client reconnect within session timeout. \r\n\r\n1. When client disconnected, just destroy connection but keep session\r\n- Response callback will be clean.\r\n- Ephemeral nodes will also be keept.\r\n- Watches will be cleaned.\r\n\r\n2. When a client reconnect to keeper  restore ression.\r\n - Client should take previous session id, xid and last seen zxid\r\n - Client should re-register watches\r\n - Keeper should update session timeout\r\n\r\n3. If client not reconnect wo keeper in session timeout\r\n -  Background session clean task will clean it.\r\n - Connection will terminate automatically.\r\n  \r\n\r\n@alesapin if the idea is ok, I will work on it.\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33317/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33317/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33308","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33308/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33308/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33308/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33308","id":1090743214,"node_id":"I_kwDOA5dJV85BA2uu","number":33308,"title":"HTTP Interface - unexpected Content-Type when send_progress_in_http_headers is enabled","user":{"login":"anselmodadams","id":96303263,"node_id":"U_kgDOBb14nw","avatar_url":"https://avatars.githubusercontent.com/u/96303263?v=4","gravatar_id":"","url":"https://api.github.com/users/anselmodadams","html_url":"https://github.com/anselmodadams","followers_url":"https://api.github.com/users/anselmodadams/followers","following_url":"https://api.github.com/users/anselmodadams/following{/other_user}","gists_url":"https://api.github.com/users/anselmodadams/gists{/gist_id}","starred_url":"https://api.github.com/users/anselmodadams/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/anselmodadams/subscriptions","organizations_url":"https://api.github.com/users/anselmodadams/orgs","repos_url":"https://api.github.com/users/anselmodadams/repos","events_url":"https://api.github.com/users/anselmodadams/events{/privacy}","received_events_url":"https://api.github.com/users/anselmodadams/received_events","type":"User","site_admin":false},"labels":[{"id":1481327553,"node_id":"MDU6TGFiZWwxNDgxMzI3NTUz","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-http","name":"comp-http","color":"b5bcff","default":false,"description":"http protocol related"},{"id":1575085465,"node_id":"MDU6TGFiZWwxNTc1MDg1NDY1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/unexpected%20behaviour","name":"unexpected behaviour","color":"e088ca","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2021-12-29T20:50:45Z","updated_at":"2021-12-30T19:26:20Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"**Describe the unexpected behavior**\r\nUsing HTTP Interface for queries using option send_progress_in_http_headers=(true|1) sometimes gives wrong Content-Type header - for example, expected a content-type header of text/tab-separated-values for TSV, application/json for JSON or text/csv for CSV but get a text/plain in the response when the query runs longer than http_headers_progress_interval_ms (200ms) to get the first block for result. \r\n\r\n**How to reproduce**\r\nVersions used in the tests: 21.8.6.15, 21.11.6.7, 21.12.2.17, 21.12.3.32\r\n\r\nFor CSV (expecting `text/csv`):\r\n\r\n```\r\n    (seq 1 1000| xargs -n1 -P0 -Ixxx curl -v \"http://localhost:8123/?http_headers_progress_interval_ms=1&send_progress_in_http_headers=true&query=select+sleepEachRow(0.01)from+numbers(10)+FORMAT+CSV\" 2>&1|grep -Eo \" Content-Type:.*$\")|sort | uniq -c\r\n```\r\n\r\n    Results would be like:\r\n\r\n```\r\n    728  Content-Type: text/csv; charset=UTF-8; header=absent\r\n    190  Content-Type: text/plain; charset=UTF-8\r\n```\r\n\r\nFor TSV (expecting `text/tab-separated-values`):\r\n\r\n```\r\n    (seq 1 1000| xargs -n1 -P0 -Ixxx curl -v \"http://localhost:8123/?http_headers_progress_interval_ms=1&send_progress_in_http_headers=true&query=select+sleepEachRow(0.01)from+numbers(10)\" 2>&1|grep -Eo \" Content-Type:.*$\")|sort | uniq -c\r\n```\r\n\r\n    or \r\n\r\n```\r\n(seq 1 1000| xargs -n1 -P0 -Ixxx curl -v \"http://localhost:8123/?http_headers_progress_interval_ms=1&send_progress_in_http_headers=true&query=select+sleepEachRow(0.01)from+numbers(10)+FORMAT+TSV\" 2>&1|grep -Eo \" Content-Type:.*$\")|sort | uniq -c\r\n```\r\n\r\n    Results would be like:\r\n\r\n```\r\n    218  Content-Type: text/plain; charset=UTF-8\r\n    706  Content-Type: text/tab-separated-values; charset=UTF-8\r\n```\r\n\r\n\r\nFor JSON Format (expecting `application/json`): \r\n ```\r\n    (seq 1 1000| xargs -n1 -P0 -Ixxx curl -v \"http://localhost:8123/?http_headers_progress_interval_ms=1&send_progress_in_http_headers=true&query=select+sleepEachRow(0.01)from+numbers(10)+FORMAT+JSON\" 2>&1|grep -Eo \" Content-Type:.*$\")|sort | uniq -c\r\n```\r\n\r\n    Results would be like: \r\n\r\n```\r\n    659  Content-Type: application/json; charset=UTF-8\r\n    243  Content-Type: text/plain; charset=UTF-8\r\n```\r\n\r\n**Expected behavior**\r\nExpected to receive a Content-Type header consistent with the format chosen for the query - `text/csv` for CSV, `text/tab-separated-values` for TSV, `application/json` for JSON. \r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33308/reactions","total_count":6,"+1":6,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33308/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33301","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33301/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33301/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33301/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33301","id":1090682856,"node_id":"I_kwDOA5dJV85BAn_o","number":33301,"title":"`Decimal128` to/from `Float` conversion looks erroneous","user":{"login":"loyd","id":952180,"node_id":"MDQ6VXNlcjk1MjE4MA==","avatar_url":"https://avatars.githubusercontent.com/u/952180?v=4","gravatar_id":"","url":"https://api.github.com/users/loyd","html_url":"https://github.com/loyd","followers_url":"https://api.github.com/users/loyd/followers","following_url":"https://api.github.com/users/loyd/following{/other_user}","gists_url":"https://api.github.com/users/loyd/gists{/gist_id}","starred_url":"https://api.github.com/users/loyd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/loyd/subscriptions","organizations_url":"https://api.github.com/users/loyd/orgs","repos_url":"https://api.github.com/users/loyd/repos","events_url":"https://api.github.com/users/loyd/events{/privacy}","received_events_url":"https://api.github.com/users/loyd/received_events","type":"User","site_admin":false},"labels":[{"id":386401505,"node_id":"MDU6TGFiZWwzODY0MDE1MDU=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/bug","name":"bug","color":"ee0701","default":true,"description":"Confirmed user-visible misbehaviour in official release"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2021-12-29T18:24:34Z","updated_at":"2022-01-15T23:15:22Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"**CH version**: 21.12.3\r\n\r\n**How to reproduce**\r\n```sql\r\nCREATE TABLE target (\r\n    no   UInt32,\r\n    num1 Float64,\r\n    num2 Float64,\r\n    num3 Float64\r\n)\r\n    ENGINE = MergeTree\r\n    ORDER BY no;\r\n\r\nCREATE TABLE source (\r\n    no  UInt32,\r\n    num Decimal128(18)\r\n)\r\n    ENGINE = MergeTree\r\n    ORDER BY no;\r\n\r\nCREATE MATERIALIZED VIEW target_handler TO target\r\nAS SELECT\r\n    no,\r\n    num * 1.0 AS num1,\r\n    num * toDecimal128(1.0, 18) AS num2,\r\n    toFloat64(num) * 1.0 AS num3\r\nFROM source;\r\n\r\nSELECT toDecimal128(30000, 18);                         -- 30000, ok\r\nSELECT toDecimal128(1.0, 18);                           -- 1, ok\r\nSELECT toDecimal128(30000, 18) * 1.0;                   -- 30000, ok\r\nSELECT 30000 * toDecimal128(1.0, 18);                   -- 30000, ok\r\nSELECT toFloat64(toDecimal128(30000, 18)) * 1.0;        -- 30000, ok\r\nSELECT toDecimal128(30000, 18) * toDecimal128(1.0, 18); -- 55.1517... what?\r\nSELECT toDecimal128(30000, 18) * toDecimal128(1.1, 18); -- -7.3895... what?\r\n\r\nINSERT INTO source VALUES (0, 30000);\r\nSELECT * FROM target; -- 0\t30000.000000000004\t55.15171095741522\t30000\r\n                      --             ^ what?\r\n\r\n```","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33301/reactions","total_count":1,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":1,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33301/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33299","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33299/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33299/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33299/events","html_url":"https://github.com/ClickHouse/ClickHouse/pull/33299","id":1090658110,"node_id":"PR_kwDOA5dJV84wYAZn","number":33299,"title":"url engine access fail when password is url-encoded","user":{"login":"michael1589","id":9250127,"node_id":"MDQ6VXNlcjkyNTAxMjc=","avatar_url":"https://avatars.githubusercontent.com/u/9250127?v=4","gravatar_id":"","url":"https://api.github.com/users/michael1589","html_url":"https://github.com/michael1589","followers_url":"https://api.github.com/users/michael1589/followers","following_url":"https://api.github.com/users/michael1589/following{/other_user}","gists_url":"https://api.github.com/users/michael1589/gists{/gist_id}","starred_url":"https://api.github.com/users/michael1589/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/michael1589/subscriptions","organizations_url":"https://api.github.com/users/michael1589/orgs","repos_url":"https://api.github.com/users/michael1589/repos","events_url":"https://api.github.com/users/michael1589/events{/privacy}","received_events_url":"https://api.github.com/users/michael1589/received_events","type":"User","site_admin":false},"labels":[{"id":1302792342,"node_id":"MDU6TGFiZWwxMzAyNzkyMzQy","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/pr-bugfix","name":"pr-bugfix","color":"ff4080","default":false,"description":"Pull request with bugfix, not backported by default"},{"id":1507864673,"node_id":"MDU6TGFiZWwxNTA3ODY0Njcz","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/st-waiting-for-fix","name":"st-waiting-for-fix","color":"e5b890","default":false,"description":"We are waiting for fixes in this issue or pull request"},{"id":3627025164,"node_id":"LA_kwDOA5dJV87YMAMM","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/can%20be%20tested","name":"can be tested","color":"1d76db","default":false,"description":""}],"state":"open","locked":false,"assignee":{"login":"kssenii","id":54203879,"node_id":"MDQ6VXNlcjU0MjAzODc5","avatar_url":"https://avatars.githubusercontent.com/u/54203879?v=4","gravatar_id":"","url":"https://api.github.com/users/kssenii","html_url":"https://github.com/kssenii","followers_url":"https://api.github.com/users/kssenii/followers","following_url":"https://api.github.com/users/kssenii/following{/other_user}","gists_url":"https://api.github.com/users/kssenii/gists{/gist_id}","starred_url":"https://api.github.com/users/kssenii/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kssenii/subscriptions","organizations_url":"https://api.github.com/users/kssenii/orgs","repos_url":"https://api.github.com/users/kssenii/repos","events_url":"https://api.github.com/users/kssenii/events{/privacy}","received_events_url":"https://api.github.com/users/kssenii/received_events","type":"User","site_admin":false},"assignees":[{"login":"kssenii","id":54203879,"node_id":"MDQ6VXNlcjU0MjAzODc5","avatar_url":"https://avatars.githubusercontent.com/u/54203879?v=4","gravatar_id":"","url":"https://api.github.com/users/kssenii","html_url":"https://github.com/kssenii","followers_url":"https://api.github.com/users/kssenii/followers","following_url":"https://api.github.com/users/kssenii/following{/other_user}","gists_url":"https://api.github.com/users/kssenii/gists{/gist_id}","starred_url":"https://api.github.com/users/kssenii/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kssenii/subscriptions","organizations_url":"https://api.github.com/users/kssenii/orgs","repos_url":"https://api.github.com/users/kssenii/repos","events_url":"https://api.github.com/users/kssenii/events{/privacy}","received_events_url":"https://api.github.com/users/kssenii/received_events","type":"User","site_admin":false}],"milestone":null,"comments":10,"created_at":"2021-12-29T17:30:43Z","updated_at":"2022-01-24T02:37:22Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/pulls/33299","html_url":"https://github.com/ClickHouse/ClickHouse/pull/33299","diff_url":"https://github.com/ClickHouse/ClickHouse/pull/33299.diff","patch_url":"https://github.com/ClickHouse/ClickHouse/pull/33299.patch","merged_at":null},"body":"…//github.com/ClickHouse/ClickHouse/issues/32887\r\n\r\nChangelog category:\r\n- Bug Fix (user-visible misbehaviour in official stable or prestable release)\r\n\r\n\r\nChangelog entry:\r\nDecode a url-encoded password firstly and then do a GET or POST.\r\n\r\n\r\nDetailed description / Documentation draft:\r\nA URL engine do work well with password that does not contain any special characters, but fail when the password contains special characters such as \"/\", \"*\", \"%\"...\r\n[bug details](https://github.com/ClickHouse/ClickHouse/issues/32887)\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33299/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33299/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33295","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33295/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33295/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33295/events","html_url":"https://github.com/ClickHouse/ClickHouse/pull/33295","id":1090563774,"node_id":"PR_kwDOA5dJV84wXslH","number":33295,"title":"DOCSUP-20065: Edit and translate to Russian (Window View Functions)","user":{"login":"karnevil13","id":90553247,"node_id":"MDQ6VXNlcjkwNTUzMjQ3","avatar_url":"https://avatars.githubusercontent.com/u/90553247?v=4","gravatar_id":"","url":"https://api.github.com/users/karnevil13","html_url":"https://github.com/karnevil13","followers_url":"https://api.github.com/users/karnevil13/followers","following_url":"https://api.github.com/users/karnevil13/following{/other_user}","gists_url":"https://api.github.com/users/karnevil13/gists{/gist_id}","starred_url":"https://api.github.com/users/karnevil13/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/karnevil13/subscriptions","organizations_url":"https://api.github.com/users/karnevil13/orgs","repos_url":"https://api.github.com/users/karnevil13/repos","events_url":"https://api.github.com/users/karnevil13/events{/privacy}","received_events_url":"https://api.github.com/users/karnevil13/received_events","type":"User","site_admin":false},"labels":[{"id":1310920248,"node_id":"MDU6TGFiZWwxMzEwOTIwMjQ4","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/pr-documentation","name":"pr-documentation","color":"007700","default":false,"description":"Documentation PRs for the specific code PR"}],"state":"open","locked":false,"assignee":{"login":"kssenii","id":54203879,"node_id":"MDQ6VXNlcjU0MjAzODc5","avatar_url":"https://avatars.githubusercontent.com/u/54203879?v=4","gravatar_id":"","url":"https://api.github.com/users/kssenii","html_url":"https://github.com/kssenii","followers_url":"https://api.github.com/users/kssenii/followers","following_url":"https://api.github.com/users/kssenii/following{/other_user}","gists_url":"https://api.github.com/users/kssenii/gists{/gist_id}","starred_url":"https://api.github.com/users/kssenii/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kssenii/subscriptions","organizations_url":"https://api.github.com/users/kssenii/orgs","repos_url":"https://api.github.com/users/kssenii/repos","events_url":"https://api.github.com/users/kssenii/events{/privacy}","received_events_url":"https://api.github.com/users/kssenii/received_events","type":"User","site_admin":false},"assignees":[{"login":"kssenii","id":54203879,"node_id":"MDQ6VXNlcjU0MjAzODc5","avatar_url":"https://avatars.githubusercontent.com/u/54203879?v=4","gravatar_id":"","url":"https://api.github.com/users/kssenii","html_url":"https://github.com/kssenii","followers_url":"https://api.github.com/users/kssenii/followers","following_url":"https://api.github.com/users/kssenii/following{/other_user}","gists_url":"https://api.github.com/users/kssenii/gists{/gist_id}","starred_url":"https://api.github.com/users/kssenii/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kssenii/subscriptions","organizations_url":"https://api.github.com/users/kssenii/orgs","repos_url":"https://api.github.com/users/kssenii/repos","events_url":"https://api.github.com/users/kssenii/events{/privacy}","received_events_url":"https://api.github.com/users/kssenii/received_events","type":"User","site_admin":false}],"milestone":null,"comments":1,"created_at":"2021-12-29T14:39:46Z","updated_at":"2022-01-11T19:37:35Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/pulls/33295","html_url":"https://github.com/ClickHouse/ClickHouse/pull/33295","diff_url":"https://github.com/ClickHouse/ClickHouse/pull/33295.diff","patch_url":"https://github.com/ClickHouse/ClickHouse/pull/33295.patch","merged_at":null},"body":"Changelog category:\r\n\r\n- Documentation for #32335 #32402 #32498\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33295/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33295/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33291","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33291/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33291/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33291/events","html_url":"https://github.com/ClickHouse/ClickHouse/pull/33291","id":1090545516,"node_id":"PR_kwDOA5dJV84wXovr","number":33291,"title":"Add pool to WriteBufferFromS3","user":{"login":"KochetovNicolai","id":4092911,"node_id":"MDQ6VXNlcjQwOTI5MTE=","avatar_url":"https://avatars.githubusercontent.com/u/4092911?v=4","gravatar_id":"","url":"https://api.github.com/users/KochetovNicolai","html_url":"https://github.com/KochetovNicolai","followers_url":"https://api.github.com/users/KochetovNicolai/followers","following_url":"https://api.github.com/users/KochetovNicolai/following{/other_user}","gists_url":"https://api.github.com/users/KochetovNicolai/gists{/gist_id}","starred_url":"https://api.github.com/users/KochetovNicolai/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/KochetovNicolai/subscriptions","organizations_url":"https://api.github.com/users/KochetovNicolai/orgs","repos_url":"https://api.github.com/users/KochetovNicolai/repos","events_url":"https://api.github.com/users/KochetovNicolai/events{/privacy}","received_events_url":"https://api.github.com/users/KochetovNicolai/received_events","type":"User","site_admin":false},"labels":[{"id":1309683578,"node_id":"MDU6TGFiZWwxMzA5NjgzNTc4","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/pr-performance","name":"pr-performance","color":"007700","default":false,"description":"Pull request with some performance improvements"}],"state":"open","locked":false,"assignee":{"login":"alesapin","id":3684697,"node_id":"MDQ6VXNlcjM2ODQ2OTc=","avatar_url":"https://avatars.githubusercontent.com/u/3684697?v=4","gravatar_id":"","url":"https://api.github.com/users/alesapin","html_url":"https://github.com/alesapin","followers_url":"https://api.github.com/users/alesapin/followers","following_url":"https://api.github.com/users/alesapin/following{/other_user}","gists_url":"https://api.github.com/users/alesapin/gists{/gist_id}","starred_url":"https://api.github.com/users/alesapin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alesapin/subscriptions","organizations_url":"https://api.github.com/users/alesapin/orgs","repos_url":"https://api.github.com/users/alesapin/repos","events_url":"https://api.github.com/users/alesapin/events{/privacy}","received_events_url":"https://api.github.com/users/alesapin/received_events","type":"User","site_admin":false},"assignees":[{"login":"alesapin","id":3684697,"node_id":"MDQ6VXNlcjM2ODQ2OTc=","avatar_url":"https://avatars.githubusercontent.com/u/3684697?v=4","gravatar_id":"","url":"https://api.github.com/users/alesapin","html_url":"https://github.com/alesapin","followers_url":"https://api.github.com/users/alesapin/followers","following_url":"https://api.github.com/users/alesapin/following{/other_user}","gists_url":"https://api.github.com/users/alesapin/gists{/gist_id}","starred_url":"https://api.github.com/users/alesapin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alesapin/subscriptions","organizations_url":"https://api.github.com/users/alesapin/orgs","repos_url":"https://api.github.com/users/alesapin/repos","events_url":"https://api.github.com/users/alesapin/events{/privacy}","received_events_url":"https://api.github.com/users/alesapin/received_events","type":"User","site_admin":false}],"milestone":null,"comments":2,"created_at":"2021-12-29T14:09:51Z","updated_at":"2022-01-28T13:01:56Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/pulls/33291","html_url":"https://github.com/ClickHouse/ClickHouse/pull/33291","diff_url":"https://github.com/ClickHouse/ClickHouse/pull/33291.diff","patch_url":"https://github.com/ClickHouse/ClickHouse/pull/33291.patch","merged_at":null},"body":"Changelog category (leave one):\r\n- Performance Improvement\r\n\r\n\r\nChangelog entry (a user-readable short description of the changes that goes to CHANGELOG.md):\r\nFor inserts and merges into S3, write files in parallel whenever possible.\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33291/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33291/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33267","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33267/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33267/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33267/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33267","id":1090091812,"node_id":"I_kwDOA5dJV85A-Xsk","number":33267,"title":"wrong cast int value to float in round()/roundBankers()","user":{"login":"bbkas","id":48946270,"node_id":"MDQ6VXNlcjQ4OTQ2Mjcw","avatar_url":"https://avatars.githubusercontent.com/u/48946270?v=4","gravatar_id":"","url":"https://api.github.com/users/bbkas","html_url":"https://github.com/bbkas","followers_url":"https://api.github.com/users/bbkas/followers","following_url":"https://api.github.com/users/bbkas/following{/other_user}","gists_url":"https://api.github.com/users/bbkas/gists{/gist_id}","starred_url":"https://api.github.com/users/bbkas/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bbkas/subscriptions","organizations_url":"https://api.github.com/users/bbkas/orgs","repos_url":"https://api.github.com/users/bbkas/repos","events_url":"https://api.github.com/users/bbkas/events{/privacy}","received_events_url":"https://api.github.com/users/bbkas/received_events","type":"User","site_admin":false},"labels":[{"id":1575085465,"node_id":"MDU6TGFiZWwxNTc1MDg1NDY1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/unexpected%20behaviour","name":"unexpected behaviour","color":"e088ca","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-12-28T19:38:46Z","updated_at":"2021-12-28T19:41:15Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"When `expression` parameter of `round()` function is uncasted int, result of function will zero instead of correct value, in some cases  \r\nSame result with `roundBankers()`  \r\n\r\n**How to reproduce**\r\n```sql\r\nselect round(2, 4) round2, round(20, 4) round20, round(200, 4) round200,\r\n       round(5, 4) round5, round(50, 4) round50, round(500, 4) round500,\r\n       round(toInt32(5), 4) roundInt5, round(toInt32(50), 4) roundInt50, round(toInt32(500), 4) roundInt500;\r\n```\r\n\r\n```\r\n┌─round2─┬─round20─┬─round200─┬─round5─┬─round50─┬─round500─┬─roundInt5─┬─roundInt50─┬─roundInt500─┐\r\n│      0 │       0 │        0 │      0 │       0 │      500 │         5 │         50 │         500 │\r\n└────────┴─────────┴──────────┴────────┴─────────┴──────────┴───────────┴────────────┴─────────────┘\r\n\r\n```\r\n```sql\r\nSELECT roundBankers(2, 4) AS round2, roundBankers(20, 4) AS round20, roundBankers(200, 4) AS round200,\r\n    roundBankers(5, 4) AS round5, roundBankers(50, 4) AS round50, roundBankers(500, 4) AS round500\r\n```\r\n```\r\n┌─round2─┬─round20─┬─round200─┬─round5─┬─round50─┬─round500─┐\r\n│      0 │       0 │        0 │      0 │       0 │      500 │\r\n└────────┴─────────┴──────────┴────────┴─────────┴──────────┘\r\n```\r\n\r\n* Which ClickHouse server version to use\r\n``` version 20.11.3```\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33267/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33267/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33260","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33260/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33260/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33260/events","html_url":"https://github.com/ClickHouse/ClickHouse/pull/33260","id":1089949664,"node_id":"PR_kwDOA5dJV84wVtzO","number":33260,"title":"Add confidence intervals to ttests","user":{"login":"achimbab","id":36371084,"node_id":"MDQ6VXNlcjM2MzcxMDg0","avatar_url":"https://avatars.githubusercontent.com/u/36371084?v=4","gravatar_id":"","url":"https://api.github.com/users/achimbab","html_url":"https://github.com/achimbab","followers_url":"https://api.github.com/users/achimbab/followers","following_url":"https://api.github.com/users/achimbab/following{/other_user}","gists_url":"https://api.github.com/users/achimbab/gists{/gist_id}","starred_url":"https://api.github.com/users/achimbab/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/achimbab/subscriptions","organizations_url":"https://api.github.com/users/achimbab/orgs","repos_url":"https://api.github.com/users/achimbab/repos","events_url":"https://api.github.com/users/achimbab/events{/privacy}","received_events_url":"https://api.github.com/users/achimbab/received_events","type":"User","site_admin":false},"labels":[{"id":1309674771,"node_id":"MDU6TGFiZWwxMzA5Njc0Nzcx","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/pr-feature","name":"pr-feature","color":"007700","default":false,"description":"Pull request with new product feature"},{"id":1807683251,"node_id":"MDU6TGFiZWwxODA3NjgzMjUx","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/doc-alert","name":"doc-alert","color":"e51068","default":false,"description":"PR where any documentation work is needed or proceeded"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2021-12-28T14:55:29Z","updated_at":"2022-01-30T13:57:55Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/pulls/33260","html_url":"https://github.com/ClickHouse/ClickHouse/pull/33260","diff_url":"https://github.com/ClickHouse/ClickHouse/pull/33260.diff","patch_url":"https://github.com/ClickHouse/ClickHouse/pull/33260.patch","merged_at":null},"body":"Changelog category (leave one):\r\n- New Feature\r\n\r\n\r\nChangelog entry (a user-readable short description of the changes that goes to CHANGELOG.md):\r\nAdd confidence intervals to ttests\r\n\r\nDetailed description / Documentation draft:\r\nI added a confidence level parameter to welchTTest and studentTTest in order to get confidence intervals.\r\n\r\nFor example, in order to get confidence intervals with 95% confidence level, you can use ```welchTTest(0.95)(left, right)``` or ```studentTTest(0.95)(left, right)```.\r\n\r\nHappy New Year.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33260/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33260/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33254","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33254/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33254/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33254/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33254","id":1089816772,"node_id":"I_kwDOA5dJV85A9UjE","number":33254,"title":"UBSan failure in `DB::MergeTreeSink::consume()`","user":{"login":"Avogar","id":48961922,"node_id":"MDQ6VXNlcjQ4OTYxOTIy","avatar_url":"https://avatars.githubusercontent.com/u/48961922?v=4","gravatar_id":"","url":"https://api.github.com/users/Avogar","html_url":"https://github.com/Avogar","followers_url":"https://api.github.com/users/Avogar/followers","following_url":"https://api.github.com/users/Avogar/following{/other_user}","gists_url":"https://api.github.com/users/Avogar/gists{/gist_id}","starred_url":"https://api.github.com/users/Avogar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Avogar/subscriptions","organizations_url":"https://api.github.com/users/Avogar/orgs","repos_url":"https://api.github.com/users/Avogar/repos","events_url":"https://api.github.com/users/Avogar/events{/privacy}","received_events_url":"https://api.github.com/users/Avogar/received_events","type":"User","site_admin":false},"labels":[{"id":2104602822,"node_id":"MDU6TGFiZWwyMTA0NjAyODIy","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/fuzz","name":"fuzz","color":"abc4ea","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-12-28T11:26:40Z","updated_at":"2021-12-28T11:26:40Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"Link: https://s3.amazonaws.com/clickhouse-test-reports/32455/d754b58a304977e250e0b2df703d7157bfae3697/stress_test__undefined__actions_.html\r\nStacktrace:\r\n```\r\n2021.12.28 11:20:34.509101 [ 226958 ] {} <Fatal> BaseDaemon: ########################################\r\n2021.12.28 11:20:34.510040 [ 226958 ] {} <Fatal> BaseDaemon: (version 21.13.1.1464, build id: E952BD9814F96805) (from thread 1399) (query_id: ec6d06f6-d13c-45a5-8825-75fc2b044935) Received signal Unknown signal (-3)\r\n2021.12.28 11:20:34.510604 [ 226958 ] {} <Fatal> BaseDaemon: Sanitizer trap.\r\n2021.12.28 11:20:34.511100 [ 226958 ] {} <Fatal> BaseDaemon: Stack trace: 0xe1eceaa 0x1e154ad1 0xe1ad816 0xe1bf559 0x1ffd1160 0x206253b2 0x20578b50 0x2057873c 0x20577825 0x20235b19 0x202359a8 0x20227c81 0x20228f08 0x20228de3 0xe21de5a 0xe220862 0x7fb360920609 0x7fb360847293\r\n2021.12.28 11:20:34.624972 [ 226958 ] {} <Fatal> BaseDaemon: 0.1. inlined from ./obj-x86_64-linux-gnu/../src/Common/StackTrace.cpp:305: StackTrace::tryCapture()\r\n2021.12.28 11:20:34.626859 [ 226958 ] {} <Fatal> BaseDaemon: 0. ../src/Common/StackTrace.cpp:266: StackTrace::StackTrace() @ 0xe1eceaa in /usr/bin/clickhouse\r\n2021.12.28 11:20:34.753841 [ 226958 ] {} <Fatal> BaseDaemon: 1. ./obj-x86_64-linux-gnu/../base/daemon/BaseDaemon.cpp:391: sanitizerDeathCallback() @ 0x1e154ad1 in /usr/bin/clickhouse\r\n2021.12.28 11:20:36.610203 [ 226958 ] {} <Fatal> BaseDaemon: 2. __sanitizer::Die() @ 0xe1ad816 in /usr/bin/clickhouse\r\n2021.12.28 11:20:39.568075 [ 226958 ] {} <Fatal> BaseDaemon: 3. ? @ 0xe1bf559 in /usr/bin/clickhouse\r\n2021.12.28 11:20:39.578382 [ 226958 ] {} <Fatal> BaseDaemon: 4. ./obj-x86_64-linux-gnu/../src/Storages/MergeTree/MergeTreeSink.cpp:0: DB::MergeTreeSink::consume(DB::Chunk) @ 0x1ffd1160 in /usr/bin/clickhouse\r\n2021.12.28 11:20:39.687120 [ 226958 ] {} <Fatal> BaseDaemon: 5.1. inlined from ./obj-x86_64-linux-gnu/../src/Processors/Chunk.h:32: ~Chunk\r\n2021.12.28 11:20:39.700289 [ 226958 ] {} <Fatal> BaseDaemon: 5. ../src/Processors/Sinks/SinkToStorage.cpp:18: DB::SinkToStorage::onConsume(DB::Chunk) @ 0x206253b2 in /usr/bin/clickhouse\r\n2021.12.28 11:20:39.715975 [ 226958 ] {} <Fatal> BaseDaemon: 6.1. inlined from ./obj-x86_64-linux-gnu/../src/Processors/Chunk.h:32: ~Chunk\r\n2021.12.28 11:20:39.717349 [ 226958 ] {} <Fatal> BaseDaemon: 6.2. inlined from ../src/Processors/Transforms/ExceptionKeepingTransform.cpp:151: operator()\r\n2021.12.28 11:20:39.718538 [ 226958 ] {} <Fatal> BaseDaemon: 6. ../contrib/libcxx/include/type_traits:3676: decltype(std::__1::forward<DB::ExceptionKeepingTransform::work()::$_1&>(fp)()) std::__1::__invoke<DB::ExceptionKeepingTransform::work()::$_1&>(DB::ExceptionKeepingTransform::work()::$_1&) @ 0x20578b50 in /usr/bin/clickhouse\r\n2021.12.28 11:20:39.738575 [ 226958 ] {} <Fatal> BaseDaemon: 7. ./obj-x86_64-linux-gnu/../src/Processors/Transforms/ExceptionKeepingTransform.cpp:103: DB::runStep(std::__1::function<void ()>, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x2057873c in /usr/bin/clickhouse\r\n2021.12.28 11:20:39.750930 [ 226958 ] {} <Fatal> BaseDaemon: 8. ./obj-x86_64-linux-gnu/../src/Processors/Transforms/ExceptionKeepingTransform.cpp:0: DB::ExceptionKeepingTransform::work() @ 0x20577825 in /usr/bin/clickhouse\r\n2021.12.28 11:20:39.760677 [ 226958 ] {} <Fatal> BaseDaemon: 9. ./obj-x86_64-linux-gnu/../src/Processors/Executors/ExecutionThreadContext.cpp:53: DB::executeJob(DB::IProcessor*) @ 0x20235b19 in /usr/bin/clickhouse\r\n2021.12.28 11:20:39.767664 [ 226958 ] {} <Fatal> BaseDaemon: 10. ./obj-x86_64-linux-gnu/../src/Processors/Executors/ExecutionThreadContext.cpp:65: DB::ExecutionThreadContext::executeTask() @ 0x202359a8 in /usr/bin/clickhouse\r\n2021.12.28 11:20:39.794021 [ 226958 ] {} <Fatal> BaseDaemon: 11. ./obj-x86_64-linux-gnu/../src/Processors/Executors/PipelineExecutor.cpp:213: DB::PipelineExecutor::executeStepImpl(unsigned long, std::__1::atomic<bool>*) @ 0x20227c81 in /usr/bin/clickhouse\r\n2021.12.28 11:20:39.821887 [ 226958 ] {} <Fatal> BaseDaemon: 12.1. inlined from ./obj-x86_64-linux-gnu/../contrib/libcxx/include/memory:2851: std::__1::shared_ptr<DB::ThreadGroupStatus>::operator bool() const\r\n2021.12.28 11:20:39.822444 [ 226958 ] {} <Fatal> BaseDaemon: 12.2. inlined from ../src/Processors/Executors/PipelineExecutor.cpp:304: operator()\r\n2021.12.28 11:20:39.822881 [ 226958 ] {} <Fatal> BaseDaemon: 12.3. inlined from ../base/base/../base/scope_guard.h:94: basic_scope_guard<DB::PipelineExecutor::executeImpl(unsigned long)::$_1::operator()() const::'lambda'()>::invoke()\r\n2021.12.28 11:20:39.824319 [ 226958 ] {} <Fatal> BaseDaemon: 12.4. inlined from ../base/base/../base/scope_guard.h:44: ~basic_scope_guard\r\n2021.12.28 11:20:39.824745 [ 226958 ] {} <Fatal> BaseDaemon: 12.5. inlined from ../src/Processors/Executors/PipelineExecutor.cpp:319: operator()\r\n2021.12.28 11:20:39.826838 [ 226958 ] {} <Fatal> BaseDaemon: 12. ../contrib/libcxx/include/type_traits:3682: decltype(std::__1::forward<DB::PipelineExecutor::executeImpl(unsigned long)::$_1&>(fp)()) std::__1::__invoke_constexpr<DB::PipelineExecutor::executeImpl(unsigned long)::$_1&>(DB::PipelineExecutor::executeImpl(unsigned long)::$_1&) @ 0x20228f08 in /usr/bin/clickhouse\r\n2021.12.28 11:20:39.854119 [ 226958 ] {} <Fatal> BaseDaemon: 13.1. inlined from ./obj-x86_64-linux-gnu/../contrib/libcxx/include/tuple:0: operator()\r\n2021.12.28 11:20:39.862599 [ 226958 ] {} <Fatal> BaseDaemon: 13. ../contrib/libcxx/include/type_traits:3676: decltype(std::__1::forward<DB::PipelineExecutor::executeImpl(unsigned long)::$_1>(fp)()) std::__1::__invoke<ThreadFromGlobalPool::ThreadFromGlobalPool<DB::PipelineExecutor::executeImpl(unsigned long)::$_1>(DB::PipelineExecutor::executeImpl(unsigned long)::$_1&&)::'lambda'()&>(DB::PipelineExecutor::executeImpl(unsigned long)::$_1&&) @ 0x20228de3 in /usr/bin/clickhouse\r\n2021.12.28 11:20:39.881559 [ 226958 ] {} <Fatal> BaseDaemon: 14.1. inlined from ./obj-x86_64-linux-gnu/../contrib/libcxx/include/functional:2533: std::__1::function<void ()>::operator=(std::nullptr_t)\r\n2021.12.28 11:20:39.883253 [ 226958 ] {} <Fatal> BaseDaemon: 14. ../src/Common/ThreadPool.cpp:277: ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0xe21de5a in /usr/bin/clickhouse\r\n2021.12.28 11:20:39.906606 [ 226958 ] {} <Fatal> BaseDaemon: 15. ./obj-x86_64-linux-gnu/../src/Common/ThreadPool.cpp:0: void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()> >(void*) @ 0xe220862 in /usr/bin/clickhouse\r\n2021.12.28 11:20:39.907045 [ 226958 ] {} <Fatal> BaseDaemon: 16. ? @ 0x7fb360920609 in ?\r\n2021.12.28 11:20:39.907768 [ 226958 ] {} <Fatal> BaseDaemon: 17. __clone @ 0x7fb360847293 in ?\r\n2021.12.28 11:20:40.407873 [ 226958 ] {} <Fatal> BaseDaemon: Calculated checksum of the binary: DA1C2963F18386906E3743CAEEA4B546. There is no information about the reference checksum.\r\n```\r\n\r\nQuery:\r\n```\r\n2021.12.28 11:20:29.605877 [ 1218 ] {ec6d06f6-d13c-45a5-8825-75fc2b044935} <Debug> executeQuery: (from [::1]:38412) (comment: '00168_parallel_processing_on_replicas_part_1.sh') CREATE MATERIALIZED VIEW test.basic_00040 ENGINE = AggregatingMergeTree(StartDate, (CounterID, StartDate), 8192) POPULATE AS SELECT CounterID, StartDate, sumState(Sign) AS Visits, uniqState(UserID) AS Users FROM test.dist_visits GROUP BY CounterID, StartDate;\r\n2021.12.28 11:20:29.730106 [ 1218 ] {ec6d06f6-d13c-45a5-8825-75fc2b044935} <Trace> ContextAccess (default): Access granted: CREATE VIEW ON test.basic_00040\r\n2021.12.28 11:20:29.815689 [ 1218 ] {ec6d06f6-d13c-45a5-8825-75fc2b044935} <Trace> ContextAccess (default): Access granted: SELECT(CounterID, StartDate, Sign, UserID) ON test.dist_visits\r\n2021.12.28 11:20:29.962365 [ 1218 ] {ec6d06f6-d13c-45a5-8825-75fc2b044935} <Debug> test.`.inner_id.ddda8da2-eb7f-46bc-9dda-8da2eb7fd6bc` (b10c2ef5-0483-43c7-b10c-2ef5048373c7): Loading data parts\r\n2021.12.28 11:20:29.968479 [ 1218 ] {ec6d06f6-d13c-45a5-8825-75fc2b044935} <Debug> test.`.inner_id.ddda8da2-eb7f-46bc-9dda-8da2eb7fd6bc` (b10c2ef5-0483-43c7-b10c-2ef5048373c7): There are no data parts\r\n2021.12.28 11:20:29.986942 [ 1218 ] {ec6d06f6-d13c-45a5-8825-75fc2b044935} <Trace> ContextAccess (default): Access granted: INSERT(CounterID, StartDate, Visits, Users) ON test.basic_00040\r\n2021.12.28 11:20:30.024710 [ 1218 ] {ec6d06f6-d13c-45a5-8825-75fc2b044935} <Trace> ContextAccess (default): Access granted: SELECT(CounterID, StartDate, Sign, UserID) ON test.dist_visits\r\n2021.12.28 11:20:30.101948 [ 1218 ] {ec6d06f6-d13c-45a5-8825-75fc2b044935} <Trace> ContextAccess (default): Access granted: SELECT(CounterID, StartDate, Sign, UserID) ON test.dist_visits\r\n2021.12.28 11:20:30.111974 [ 1218 ] {ec6d06f6-d13c-45a5-8825-75fc2b044935} <Trace> InterpreterSelectQuery: WithMergeableState -> Complete\r\n2021.12.28 11:20:30.151356 [ 1149 ] {ec6d06f6-d13c-45a5-8825-75fc2b044935} <Debug> Connection (127.0.0.2:9000): Sent data for 2 scalars, total 2 rows in 6.2092e-05 sec., 31705 rows/sec., 68.00 B (1.03 MiB/sec.), compressed 0.4594594594594595 times to 148.00 B (2.23 MiB/sec.)\r\n2021.12.28 11:20:30.151464 [ 35675 ] {ec6d06f6-d13c-45a5-8825-75fc2b044935} <Debug> Connection (127.0.0.1:9000): Sent data for 2 scalars, total 2 rows in 4.7941e-05 sec., 40748 rows/sec., 23.52 KiB (467.57 MiB/sec.), no compression.\r\n2021.12.28 11:20:30.151626 [ 1399 ] {ec6d06f6-d13c-45a5-8825-75fc2b044935} <Debug> Connection (127.0.0.3:9000): Sent data for 2 scalars, total 2 rows in 5.8456e-05 sec., 33723 rows/sec., 68.00 B (1.09 MiB/sec.), compressed 0.4594594594594595 times to 148.00 B (2.38 MiB/sec.)\r\n2021.12.28 11:20:30.167839 [ 32613 ] {2c5f2408-06f7-495c-89cd-4694625b3433} <Debug> executeQuery: (from [::ffff:127.0.0.1]:33454, initial_query_id: ec6d06f6-d13c-45a5-8825-75fc2b044935) (comment: '00168_parallel_processing_on_replicas_part_1.sh') SELECT `CounterID`, `StartDate`, sumState(`Sign`) AS `Visits`, uniqState(`UserID`) AS `Users` FROM `test`.`visits` GROUP BY `CounterID`, `StartDate`\r\n2021.12.28 11:20:30.168169 [ 11396 ] {0c5e8d09-e124-4091-bb98-5ea4d5d52350} <Debug> executeQuery: (from [::ffff:127.0.0.1]:55934, initial_query_id: ec6d06f6-d13c-45a5-8825-75fc2b044935) (comment: '00168_parallel_processing_on_replicas_part_1.sh') SELECT `CounterID`, `StartDate`, sumState(`Sign`) AS `Visits`, uniqState(`UserID`) AS `Users` FROM `test`.`visits` GROUP BY `CounterID`, `StartDate`\r\n2021.12.28 11:20:30.185033 [ 1330 ] {30d3f724-2dd3-4639-b21b-d389eb64b3d5} <Debug> executeQuery: (from [::ffff:127.0.0.1]:50870, initial_query_id: ec6d06f6-d13c-45a5-8825-75fc2b044935) (comment: '00168_parallel_processing_on_replicas_part_1.sh') SELECT `CounterID`, `StartDate`, sumState(`Sign`) AS `Visits`, uniqState(`UserID`) AS `Users` FROM `test`.`visits` GROUP BY `CounterID`, `StartDate`\r\n2021.12.28 11:20:30.317004 [ 1149 ] {ec6d06f6-d13c-45a5-8825-75fc2b044935} <Trace> ParallelReplicasReadingCoordinator: Time for handling request: 136893ns\r\n2021.12.28 11:20:30.317457 [ 1399 ] {ec6d06f6-d13c-45a5-8825-75fc2b044935} <Trace> ParallelReplicasReadingCoordinator: Time for handling request: 532991ns\r\n2021.12.28 11:20:30.317748 [ 1149 ] {ec6d06f6-d13c-45a5-8825-75fc2b044935} <Trace> ParallelReplicasReadingCoordinator: Time for handling request: 221913ns\r\n2021.12.28 11:20:30.318014 [ 1399 ] {ec6d06f6-d13c-45a5-8825-75fc2b044935} <Trace> ParallelReplicasReadingCoordinator: Time for handling request: 213985ns\r\n2021.12.28 11:20:30.318315 [ 1149 ] {ec6d06f6-d13c-45a5-8825-75fc2b044935} <Trace> ParallelReplicasReadingCoordinator: Time for handling request: 226569ns\r\n2021.12.28 11:20:30.318608 [ 1399 ] {ec6d06f6-d13c-45a5-8825-75fc2b044935} <Trace> ParallelReplicasReadingCoordinator: Time for handling request: 247833ns\r\n2021.12.28 11:20:30.318902 [ 1149 ] {ec6d06f6-d13c-45a5-8825-75fc2b044935} <Trace> ParallelReplicasReadingCoordinator: Time for handling request: 213848ns\r\n2021.12.28 11:20:30.319164 [ 1399 ] {ec6d06f6-d13c-45a5-8825-75fc2b044935} <Trace> ParallelReplicasReadingCoordinator: Time for handling request: 207067ns\r\n2021.12.28 11:20:30.319462 [ 1149 ] {ec6d06f6-d13c-45a5-8825-75fc2b044935} <Trace> ParallelReplicasReadingCoordinator: Time for handling request: 187118ns\r\n2021.12.28 11:20:30.319779 [ 1399 ] {ec6d06f6-d13c-45a5-8825-75fc2b044935} <Trace> ParallelReplicasReadingCoordinator: Time for handling request: 248709ns\r\n2021.12.28 11:20:30.320056 [ 1149 ] {ec6d06f6-d13c-45a5-8825-75fc2b044935} <Trace> ParallelReplicasReadingCoordinator: Time for handling request: 211493ns\r\n2021.12.28 11:20:30.320611 [ 1399 ] {ec6d06f6-d13c-45a5-8825-75fc2b044935} <Trace> ParallelReplicasReadingCoordinator: Time for handling request: 465099ns\r\n2021.12.28 11:20:30.320915 [ 1149 ] {ec6d06f6-d13c-45a5-8825-75fc2b044935} <Trace> ParallelReplicasReadingCoordinator: Time for handling request: 224212ns\r\n2021.12.28 11:20:30.321174 [ 1399 ] {ec6d06f6-d13c-45a5-8825-75fc2b044935} <Trace> ParallelReplicasReadingCoordinator: Time for handling request: 206049ns\r\n2021.12.28 11:20:30.321460 [ 1149 ] {ec6d06f6-d13c-45a5-8825-75fc2b044935} <Trace> ParallelReplicasReadingCoordinator: Time for handling request: 188034ns\r\n2021.12.28 11:20:30.321752 [ 1399 ] {ec6d06f6-d13c-45a5-8825-75fc2b044935} <Trace> ParallelReplicasReadingCoordinator: Time for handling request: 193970ns\r\n2021.12.28 11:20:30.322022 [ 1149 ] {ec6d06f6-d13c-45a5-8825-75fc2b044935} <Trace> ParallelReplicasReadingCoordinator: Time for handling request: 172547ns\r\n2021.12.28 11:20:30.322309 [ 1399 ] {ec6d06f6-d13c-45a5-8825-75fc2b044935} <Trace> ParallelReplicasReadingCoordinator: Time for handling request: 193264ns\r\n2021.12.28 11:20:30.322595 [ 1149 ] {ec6d06f6-d13c-45a5-8825-75fc2b044935} <Trace> ParallelReplicasReadingCoordinator: Time for handling request: 234967ns\r\n2021.12.28 11:20:30.459718 [ 35675 ] {ec6d06f6-d13c-45a5-8825-75fc2b044935} <Trace> ParallelReplicasReadingCoordinator: Time for handling request: 99499ns\r\n2021.12.28 11:20:30.470595 [ 35675 ] {ec6d06f6-d13c-45a5-8825-75fc2b044935} <Trace> ParallelReplicasReadingCoordinator: Time for handling request: 124021ns\r\n2021.12.28 11:20:30.471114 [ 35675 ] {ec6d06f6-d13c-45a5-8825-75fc2b044935} <Trace> ParallelReplicasReadingCoordinator: Time for handling request: 62825ns\r\n2021.12.28 11:20:30.471601 [ 35675 ] {ec6d06f6-d13c-45a5-8825-75fc2b044935} <Trace> ParallelReplicasReadingCoordinator: Time for handling request: 70786ns\r\n2021.12.28 11:20:30.482260 [ 1399 ] {ec6d06f6-d13c-45a5-8825-75fc2b044935} <Trace> ParallelReplicasReadingCoordinator: Time for handling request: 416859ns\r\n2021.12.28 11:20:30.482894 [ 35675 ] {ec6d06f6-d13c-45a5-8825-75fc2b044935} <Trace> ParallelReplicasReadingCoordinator: Time for handling request: 10537417ns\r\n2021.12.28 11:20:30.483697 [ 35675 ] {ec6d06f6-d13c-45a5-8825-75fc2b044935} <Trace> ParallelReplicasReadingCoordinator: Time for handling request: 84455ns\r\n2021.12.28 11:20:30.484335 [ 35675 ] {ec6d06f6-d13c-45a5-8825-75fc2b044935} <Trace> ParallelReplicasReadingCoordinator: Time for handling request: 97772ns\r\n2021.12.28 11:20:30.485549 [ 35675 ] {ec6d06f6-d13c-45a5-8825-75fc2b044935} <Trace> ParallelReplicasReadingCoordinator: Time for handling request: 71881ns\r\n2021.12.28 11:20:30.487509 [ 35675 ] {ec6d06f6-d13c-45a5-8825-75fc2b044935} <Trace> ParallelReplicasReadingCoordinator: Time for handling request: 70508ns\r\n2021.12.28 11:20:30.488096 [ 35675 ] {ec6d06f6-d13c-45a5-8825-75fc2b044935} <Trace> ParallelReplicasReadingCoordinator: Time for handling request: 67435ns\r\n2021.12.28 11:20:31.161114 [ 1399 ] {ec6d06f6-d13c-45a5-8825-75fc2b044935} <Trace> Aggregator: Merging partially aggregated blocks (bucket = -1).\r\n2021.12.28 11:20:31.638560 [ 1399 ] {ec6d06f6-d13c-45a5-8825-75fc2b044935} <Debug> Aggregator: Merged partially aggregated blocks. 239132 rows, 5.02 MiB. in 0.477001306 sec. (501323.575 rows/sec., 10.52 MiB/sec.)\r\n2021.12.28 11:20:31.641556 [ 1399 ] {ec6d06f6-d13c-45a5-8825-75fc2b044935} <Trace> Aggregator: Destroying aggregate states\r\n```","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33254/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33254/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33248","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33248/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33248/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33248/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33248","id":1089707361,"node_id":"I_kwDOA5dJV85A851h","number":33248,"title":"The Docker image usage documentation is not same as DockerHub","user":{"login":"peter279k","id":9021747,"node_id":"MDQ6VXNlcjkwMjE3NDc=","avatar_url":"https://avatars.githubusercontent.com/u/9021747?v=4","gravatar_id":"","url":"https://api.github.com/users/peter279k","html_url":"https://github.com/peter279k","followers_url":"https://api.github.com/users/peter279k/followers","following_url":"https://api.github.com/users/peter279k/following{/other_user}","gists_url":"https://api.github.com/users/peter279k/gists{/gist_id}","starred_url":"https://api.github.com/users/peter279k/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/peter279k/subscriptions","organizations_url":"https://api.github.com/users/peter279k/orgs","repos_url":"https://api.github.com/users/peter279k/repos","events_url":"https://api.github.com/users/peter279k/events{/privacy}","received_events_url":"https://api.github.com/users/peter279k/received_events","type":"User","site_admin":false},"labels":[{"id":785082162,"node_id":"MDU6TGFiZWw3ODUwODIxNjI=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-documentation","name":"comp-documentation","color":"b5bcff","default":false,"description":"Used to run automatic builds of the documentation"}],"state":"open","locked":false,"assignee":{"login":"Felixoid","id":3025537,"node_id":"MDQ6VXNlcjMwMjU1Mzc=","avatar_url":"https://avatars.githubusercontent.com/u/3025537?v=4","gravatar_id":"","url":"https://api.github.com/users/Felixoid","html_url":"https://github.com/Felixoid","followers_url":"https://api.github.com/users/Felixoid/followers","following_url":"https://api.github.com/users/Felixoid/following{/other_user}","gists_url":"https://api.github.com/users/Felixoid/gists{/gist_id}","starred_url":"https://api.github.com/users/Felixoid/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Felixoid/subscriptions","organizations_url":"https://api.github.com/users/Felixoid/orgs","repos_url":"https://api.github.com/users/Felixoid/repos","events_url":"https://api.github.com/users/Felixoid/events{/privacy}","received_events_url":"https://api.github.com/users/Felixoid/received_events","type":"User","site_admin":false},"assignees":[{"login":"Felixoid","id":3025537,"node_id":"MDQ6VXNlcjMwMjU1Mzc=","avatar_url":"https://avatars.githubusercontent.com/u/3025537?v=4","gravatar_id":"","url":"https://api.github.com/users/Felixoid","html_url":"https://github.com/Felixoid","followers_url":"https://api.github.com/users/Felixoid/followers","following_url":"https://api.github.com/users/Felixoid/following{/other_user}","gists_url":"https://api.github.com/users/Felixoid/gists{/gist_id}","starred_url":"https://api.github.com/users/Felixoid/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Felixoid/subscriptions","organizations_url":"https://api.github.com/users/Felixoid/orgs","repos_url":"https://api.github.com/users/Felixoid/repos","events_url":"https://api.github.com/users/Felixoid/events{/privacy}","received_events_url":"https://api.github.com/users/Felixoid/received_events","type":"User","site_admin":false}],"milestone":null,"comments":1,"created_at":"2021-12-28T08:37:11Z","updated_at":"2022-01-17T09:56:27Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"**Describe the issue**\r\n\r\nIt seems that the [DockerHub documentation](https://hub.docker.com/r/clickhouse/clickhouse-server/) and [Docker image usage documentation on this repository](https://github.com/ClickHouse/ClickHouse/tree/master/docker/server) are different.\r\n\r\nI think the current problem is: the documentation on this repository cannot be synchronized to the doc on DockerHub automatically. \r\n\r\n**Additional context**\r\nN/A\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33248/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33248/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33247","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33247/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33247/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33247/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33247","id":1089698998,"node_id":"I_kwDOA5dJV85A83y2","number":33247,"title":"Arbitrator Node for Cluster","user":{"login":"darthShadow","id":6824881,"node_id":"MDQ6VXNlcjY4MjQ4ODE=","avatar_url":"https://avatars.githubusercontent.com/u/6824881?v=4","gravatar_id":"","url":"https://api.github.com/users/darthShadow","html_url":"https://github.com/darthShadow","followers_url":"https://api.github.com/users/darthShadow/followers","following_url":"https://api.github.com/users/darthShadow/following{/other_user}","gists_url":"https://api.github.com/users/darthShadow/gists{/gist_id}","starred_url":"https://api.github.com/users/darthShadow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/darthShadow/subscriptions","organizations_url":"https://api.github.com/users/darthShadow/orgs","repos_url":"https://api.github.com/users/darthShadow/repos","events_url":"https://api.github.com/users/darthShadow/events{/privacy}","received_events_url":"https://api.github.com/users/darthShadow/received_events","type":"User","site_admin":false},"labels":[{"id":386401510,"node_id":"MDU6TGFiZWwzODY0MDE1MTA=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/question","name":"question","color":"bfdadc","default":true,"description":""},{"id":1401894928,"node_id":"MDU6TGFiZWwxNDAxODk0OTI4","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-zookeeper","name":"comp-zookeeper","color":"b5bcff","default":false,"description":"Zookeeper"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2021-12-28T08:21:46Z","updated_at":"2022-01-04T15:39:57Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Hi,\r\n\r\nIs there any option to specify a third arbitrator node (which doesn't store any data) for clustering?\r\n\r\nSomething like this that's available for Galera Replication in MariaDB: https://galeracluster.com/library/documentation/arbitrator.html\r\n\r\n> Galera Arbitrator is a member of a cluster that participates in voting, but not in the actual replication.\r\n\r\n> Galera Arbitrator serves two purposes: When you have an even number of nodes, it functions as an odd node, to avoid split-brain situations. It can also request a consistent application state snapshot, which is useful in making backups.\r\n\r\n> If one datacenter fails or loses its WAN connection, the node that sees the arbitrator—and by extension sees clients—continues operation.\r\n\r\nIf not an option right now, are there any plans to add it in the future or can it be considered for addition?\r\n\r\nThanks.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33247/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33247/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33245","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33245/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33245/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33245/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33245","id":1089679123,"node_id":"I_kwDOA5dJV85A8y8T","number":33245,"title":"How to use batch insert select ,I can't find a similar example","user":{"login":"chen-shu-hao","id":61973373,"node_id":"MDQ6VXNlcjYxOTczMzcz","avatar_url":"https://avatars.githubusercontent.com/u/61973373?v=4","gravatar_id":"","url":"https://api.github.com/users/chen-shu-hao","html_url":"https://github.com/chen-shu-hao","followers_url":"https://api.github.com/users/chen-shu-hao/followers","following_url":"https://api.github.com/users/chen-shu-hao/following{/other_user}","gists_url":"https://api.github.com/users/chen-shu-hao/gists{/gist_id}","starred_url":"https://api.github.com/users/chen-shu-hao/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/chen-shu-hao/subscriptions","organizations_url":"https://api.github.com/users/chen-shu-hao/orgs","repos_url":"https://api.github.com/users/chen-shu-hao/repos","events_url":"https://api.github.com/users/chen-shu-hao/events{/privacy}","received_events_url":"https://api.github.com/users/chen-shu-hao/received_events","type":"User","site_admin":false},"labels":[{"id":386401510,"node_id":"MDU6TGFiZWwzODY0MDE1MTA=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/question","name":"question","color":"bfdadc","default":true,"description":""}],"state":"open","locked":false,"assignee":{"login":"den-crane","id":19737682,"node_id":"MDQ6VXNlcjE5NzM3Njgy","avatar_url":"https://avatars.githubusercontent.com/u/19737682?v=4","gravatar_id":"","url":"https://api.github.com/users/den-crane","html_url":"https://github.com/den-crane","followers_url":"https://api.github.com/users/den-crane/followers","following_url":"https://api.github.com/users/den-crane/following{/other_user}","gists_url":"https://api.github.com/users/den-crane/gists{/gist_id}","starred_url":"https://api.github.com/users/den-crane/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/den-crane/subscriptions","organizations_url":"https://api.github.com/users/den-crane/orgs","repos_url":"https://api.github.com/users/den-crane/repos","events_url":"https://api.github.com/users/den-crane/events{/privacy}","received_events_url":"https://api.github.com/users/den-crane/received_events","type":"User","site_admin":false},"assignees":[{"login":"den-crane","id":19737682,"node_id":"MDQ6VXNlcjE5NzM3Njgy","avatar_url":"https://avatars.githubusercontent.com/u/19737682?v=4","gravatar_id":"","url":"https://api.github.com/users/den-crane","html_url":"https://github.com/den-crane","followers_url":"https://api.github.com/users/den-crane/followers","following_url":"https://api.github.com/users/den-crane/following{/other_user}","gists_url":"https://api.github.com/users/den-crane/gists{/gist_id}","starred_url":"https://api.github.com/users/den-crane/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/den-crane/subscriptions","organizations_url":"https://api.github.com/users/den-crane/orgs","repos_url":"https://api.github.com/users/den-crane/repos","events_url":"https://api.github.com/users/den-crane/events{/privacy}","received_events_url":"https://api.github.com/users/den-crane/received_events","type":"User","site_admin":false}],"milestone":null,"comments":13,"created_at":"2021-12-28T07:43:04Z","updated_at":"2022-01-04T13:05:57Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"> Make sure to check documentation https://clickhouse.yandex/docs/en/ first. If the question is concise and probably has a short answer, asking it in Telegram chat https://telegram.me/clickhouse_en is probably the fastest way to find the answer. For more complicated questions, consider asking them on StackOverflow with \"clickhouse\" tag https://stackoverflow.com/questions/tagged/clickhouse \r\n\r\n> If you still prefer GitHub issues, remove all this text and ask your question here.\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33245/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33245/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33240","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33240/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33240/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33240/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33240","id":1089462358,"node_id":"I_kwDOA5dJV85A7-BW","number":33240,"title":"External Dictionaries JDBC source","user":{"login":"UnamedRus","id":9449405,"node_id":"MDQ6VXNlcjk0NDk0MDU=","avatar_url":"https://avatars.githubusercontent.com/u/9449405?v=4","gravatar_id":"","url":"https://api.github.com/users/UnamedRus","html_url":"https://github.com/UnamedRus","followers_url":"https://api.github.com/users/UnamedRus/followers","following_url":"https://api.github.com/users/UnamedRus/following{/other_user}","gists_url":"https://api.github.com/users/UnamedRus/gists{/gist_id}","starred_url":"https://api.github.com/users/UnamedRus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/UnamedRus/subscriptions","organizations_url":"https://api.github.com/users/UnamedRus/orgs","repos_url":"https://api.github.com/users/UnamedRus/repos","events_url":"https://api.github.com/users/UnamedRus/events{/privacy}","received_events_url":"https://api.github.com/users/UnamedRus/received_events","type":"User","site_admin":false},"labels":[{"id":1351463315,"node_id":"MDU6TGFiZWwxMzUxNDYzMzE1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-dictionary","name":"comp-dictionary","color":"b5bcff","default":false,"description":"Dictionaries"},{"id":1397894054,"node_id":"MDU6TGFiZWwxMzk3ODk0MDU0","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/unfinished%20code","name":"unfinished code","color":"ff8800","default":false,"description":""}],"state":"open","locked":false,"assignee":{"login":"kitaisreal","id":22458333,"node_id":"MDQ6VXNlcjIyNDU4MzMz","avatar_url":"https://avatars.githubusercontent.com/u/22458333?v=4","gravatar_id":"","url":"https://api.github.com/users/kitaisreal","html_url":"https://github.com/kitaisreal","followers_url":"https://api.github.com/users/kitaisreal/followers","following_url":"https://api.github.com/users/kitaisreal/following{/other_user}","gists_url":"https://api.github.com/users/kitaisreal/gists{/gist_id}","starred_url":"https://api.github.com/users/kitaisreal/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kitaisreal/subscriptions","organizations_url":"https://api.github.com/users/kitaisreal/orgs","repos_url":"https://api.github.com/users/kitaisreal/repos","events_url":"https://api.github.com/users/kitaisreal/events{/privacy}","received_events_url":"https://api.github.com/users/kitaisreal/received_events","type":"User","site_admin":false},"assignees":[{"login":"kitaisreal","id":22458333,"node_id":"MDQ6VXNlcjIyNDU4MzMz","avatar_url":"https://avatars.githubusercontent.com/u/22458333?v=4","gravatar_id":"","url":"https://api.github.com/users/kitaisreal","html_url":"https://github.com/kitaisreal","followers_url":"https://api.github.com/users/kitaisreal/followers","following_url":"https://api.github.com/users/kitaisreal/following{/other_user}","gists_url":"https://api.github.com/users/kitaisreal/gists{/gist_id}","starred_url":"https://api.github.com/users/kitaisreal/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kitaisreal/subscriptions","organizations_url":"https://api.github.com/users/kitaisreal/orgs","repos_url":"https://api.github.com/users/kitaisreal/repos","events_url":"https://api.github.com/users/kitaisreal/events{/privacy}","received_events_url":"https://api.github.com/users/kitaisreal/received_events","type":"User","site_admin":false}],"milestone":null,"comments":1,"created_at":"2021-12-27T20:39:44Z","updated_at":"2022-01-15T22:01:00Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"**Describe the unexpected behaviour**\r\nAllow to use jdbc as source for external dictionaries.\r\n\r\nLooks like it was prohibited for some reason many years ago.\r\n\r\nhttps://github.com/ClickHouse/ClickHouse/blob/888a5532a682d8b3950a039f611968f80bad1ab5/src/Dictionaries/XDBCDictionarySource.cpp#L267","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33240/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33240/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33230","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33230/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33230/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33230/events","html_url":"https://github.com/ClickHouse/ClickHouse/pull/33230","id":1089254055,"node_id":"PR_kwDOA5dJV84wTe-v","number":33230,"title":"Proper handle of 'max_rows_to_read' in case of reading in order of sorting key","user":{"login":"CurtizJ","id":20361854,"node_id":"MDQ6VXNlcjIwMzYxODU0","avatar_url":"https://avatars.githubusercontent.com/u/20361854?v=4","gravatar_id":"","url":"https://api.github.com/users/CurtizJ","html_url":"https://github.com/CurtizJ","followers_url":"https://api.github.com/users/CurtizJ/followers","following_url":"https://api.github.com/users/CurtizJ/following{/other_user}","gists_url":"https://api.github.com/users/CurtizJ/gists{/gist_id}","starred_url":"https://api.github.com/users/CurtizJ/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/CurtizJ/subscriptions","organizations_url":"https://api.github.com/users/CurtizJ/orgs","repos_url":"https://api.github.com/users/CurtizJ/repos","events_url":"https://api.github.com/users/CurtizJ/events{/privacy}","received_events_url":"https://api.github.com/users/CurtizJ/received_events","type":"User","site_admin":false},"labels":[{"id":1304141686,"node_id":"MDU6TGFiZWwxMzA0MTQxNjg2","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/pr-improvement","name":"pr-improvement","color":"007700","default":false,"description":"Pull request with some product improvements"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2021-12-27T13:45:31Z","updated_at":"2022-01-30T00:04:04Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/pulls/33230","html_url":"https://github.com/ClickHouse/ClickHouse/pull/33230","diff_url":"https://github.com/ClickHouse/ClickHouse/pull/33230.diff","patch_url":"https://github.com/ClickHouse/ClickHouse/pull/33230.patch","merged_at":null},"body":"Changelog category (leave one):\r\n- Improvement\r\n\r\nChangelog entry (a user-readable short description of the changes that goes to CHANGELOG.md):\r\nProper support of setting `max_rows_to_read` in case of reading in order of sorting key and specified limit. Previously the exception `Limit for rows or bytes to read exceeded` could be thrown even if query actually requires to read less amount of rows.\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33230/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33230/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33203","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33203/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33203/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33203/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33203","id":1088845390,"node_id":"I_kwDOA5dJV85A5nZO","number":33203,"title":"WITH FILL improvement (PARTITION BY, POPULATE)","user":{"login":"UnamedRus","id":9449405,"node_id":"MDQ6VXNlcjk0NDk0MDU=","avatar_url":"https://avatars.githubusercontent.com/u/9449405?v=4","gravatar_id":"","url":"https://api.github.com/users/UnamedRus","html_url":"https://github.com/UnamedRus","followers_url":"https://api.github.com/users/UnamedRus/followers","following_url":"https://api.github.com/users/UnamedRus/following{/other_user}","gists_url":"https://api.github.com/users/UnamedRus/gists{/gist_id}","starred_url":"https://api.github.com/users/UnamedRus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/UnamedRus/subscriptions","organizations_url":"https://api.github.com/users/UnamedRus/orgs","repos_url":"https://api.github.com/users/UnamedRus/repos","events_url":"https://api.github.com/users/UnamedRus/events{/privacy}","received_events_url":"https://api.github.com/users/UnamedRus/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-12-26T21:11:23Z","updated_at":"2021-12-26T21:12:10Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"**Use case**\r\nImprove usability of WITH FILL.\r\nAllow to utilize it with multiple time series.\r\nBackfill some columns with previous value instead of default.\r\n\r\n**Describe the solution you'd like**\r\n\r\nCurrent behavior:\r\n\r\n\r\n\r\n```\r\nSELECT *\r\nFROM values('dt Date, product String, sales UInt32', ('2021-12-01', 'A', 10), ('2021-12-05', 'A', 30), ('2021-12-02', 'B', 1), ('2021-12-07', 'B', 8))\r\n\r\n┌─────────dt─┬─product─┬─sales─┐\r\n│ 2021-12-01 │ A       │    10 │\r\n│ 2021-12-05 │ A       │    30 │\r\n│ 2021-12-02 │ B       │     1 │\r\n│ 2021-12-07 │ B       │     8 │\r\n└────────────┴─────────┴───────┘\r\n\r\nSELECT *\r\nFROM values('dt Date, product String, sales UInt32', ('2021-12-01', 'A', 10), ('2021-12-05', 'A', 30), ('2021-12-02', 'B', 1), ('2021-12-07', 'B', 8))\r\nORDER BY dt ASC WITH FILL\r\n\r\n┌─────────dt─┬─product─┬─sales─┐\r\n│ 2021-12-01 │ A       │    10 │\r\n│ 2021-12-02 │ B       │     1 │\r\n│ 2021-12-03 │         │     0 │\r\n│ 2021-12-04 │         │     0 │\r\n│ 2021-12-05 │ A       │    30 │\r\n│ 2021-12-06 │         │     0 │\r\n│ 2021-12-07 │ B       │     8 │\r\n└────────────┴─────────┴───────┘\r\n\r\nRows 7\r\n\r\nSELECT *\r\nFROM values('dt Date, product String, sales UInt32', ('2021-12-01', 'A', 10), ('2021-12-05', 'A', 30), ('2021-12-02', 'B', 1), ('2021-12-07', 'B', 8))\r\nORDER BY\r\n    product ASC,\r\n    dt ASC WITH FILL\r\n\r\n┌─────────dt─┬─product─┬─sales─┐\r\n│ 2021-12-01 │ A       │    10 │\r\n│ 2021-12-02 │         │     0 │\r\n│ 2021-12-03 │         │     0 │\r\n│ 2021-12-04 │         │     0 │\r\n│ 2021-12-05 │ A       │    30 │\r\n│ 2021-12-02 │ B       │     1 │\r\n│ 2021-12-05 │         │     0 │\r\n│ 2021-12-06 │         │     0 │\r\n│ 2021-12-07 │ B       │     8 │\r\n└────────────┴─────────┴───────┘\r\n\r\nRows 9\r\n\r\nSELECT *\r\nFROM values('dt Date, product String, sales UInt32', ('2021-12-01', 'A', 10), ('2021-12-05', 'A', 30), ('2021-12-02', 'B', 1), ('2021-12-07', 'B', 8))\r\nORDER BY\r\n    product DESC,\r\n    dt ASC WITH FILL\r\n\r\n┌─────────dt─┬─product─┬─sales─┐\r\n│ 2021-12-02 │ B       │     1 │\r\n│ 2021-12-03 │         │     0 │\r\n│ 2021-12-04 │         │     0 │\r\n│ 2021-12-05 │         │     0 │\r\n│ 2021-12-06 │         │     0 │\r\n│ 2021-12-07 │ B       │     8 │\r\n│ 2021-12-01 │ A       │    10 │\r\n│ 2021-12-05 │ A       │    30 │\r\n└────────────┴─────────┴───────┘\r\n\r\nRows 8\r\n```\r\n\r\nIt's a bit unexpected, that WITH FILL produce different result set depends on sorting condition.\r\n\r\n\r\nPARTITION BY expr\r\n\r\n```\r\nSELECT *\r\nFROM values('dt Date, product String, sales UInt32', ('2021-12-01', 'A', 10), ('2021-12-05', 'A', 30), ('2021-12-02', 'B', 1), ('2021-12-07', 'B', 8))\r\nORDER BY\r\n    product ASC,\r\n    dt ASC WITH FILL PARTITION BY product\r\n\t\r\n┌─────────dt─┬─product─┬─sales─┐\r\n│ 2021-12-01 │ A       │    10 │\r\n│ 2021-12-02 │         │     0 │\r\n│ 2021-12-03 │         │     0 │\r\n│ 2021-12-04 │         │     0 │\r\n│ 2021-12-05 │ A       │    30 │\r\n│ 2021-12-02 │ B       │     1 │\r\n│ 2021-12-03 │         │     0 │\r\n│ 2021-12-04 │         │     0 │\r\n│ 2021-12-05 │         │     0 │\r\n│ 2021-12-06 │         │     0 │\r\n│ 2021-12-07 │ B       │     8 │\r\n└────────────┴─────────┴───────┘\r\n```\r\n\r\nPOPULATE column_name\r\n\r\n```\r\nSELECT *\r\nFROM values('dt Date, product String, sales UInt32', ('2021-12-01', 'A', 10), ('2021-12-05', 'A', 30), ('2021-12-02', 'B', 1), ('2021-12-07', 'B', 8))\r\nORDER BY\r\n    product ASC,\r\n    dt ASC WITH FILL PARTITION BY product POPULATE product\r\n\t\r\n┌─────────dt─┬─product─┬─sales─┐\r\n│ 2021-12-01 │ A       │    10 │\r\n│ 2021-12-02 │ A       │     0 │\r\n│ 2021-12-03 │ A       │     0 │\r\n│ 2021-12-04 │ A       │     0 │\r\n│ 2021-12-05 │ A       │    30 │\r\n│ 2021-12-02 │ B       │     1 │\r\n│ 2021-12-03 │ B       │     0 │\r\n│ 2021-12-04 │ B       │     0 │\r\n│ 2021-12-05 │ B       │     0 │\r\n│ 2021-12-06 │ B       │     0 │\r\n│ 2021-12-07 │ B       │     8 │\r\n└────────────┴─────────┴───────┘\r\n```","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33203/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33203/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33165","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33165/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33165/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33165/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33165","id":1088587779,"node_id":"I_kwDOA5dJV85A4ogD","number":33165,"title":"Fuzzer of data formats.","user":{"login":"alexey-milovidov","id":18581488,"node_id":"MDQ6VXNlcjE4NTgxNDg4","avatar_url":"https://avatars.githubusercontent.com/u/18581488?v=4","gravatar_id":"","url":"https://api.github.com/users/alexey-milovidov","html_url":"https://github.com/alexey-milovidov","followers_url":"https://api.github.com/users/alexey-milovidov/followers","following_url":"https://api.github.com/users/alexey-milovidov/following{/other_user}","gists_url":"https://api.github.com/users/alexey-milovidov/gists{/gist_id}","starred_url":"https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexey-milovidov/subscriptions","organizations_url":"https://api.github.com/users/alexey-milovidov/orgs","repos_url":"https://api.github.com/users/alexey-milovidov/repos","events_url":"https://api.github.com/users/alexey-milovidov/events{/privacy}","received_events_url":"https://api.github.com/users/alexey-milovidov/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":1955634273,"node_id":"MDU6TGFiZWwxOTU1NjM0Mjcz","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/testing","name":"testing","color":"c9a224","default":false,"description":"Special issue with list of bugs found by CI"},{"id":3086255531,"node_id":"MDU6TGFiZWwzMDg2MjU1NTMx","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/warmup%20task","name":"warmup task","color":"FBCA04","default":false,"description":"The task for new ClickHouse team members. Low risk, moderate complexity, no urgency."}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-12-25T11:23:57Z","updated_at":"2021-12-25T11:24:22Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"**Use case**\r\n\r\nTest that arbitrary input data for various supported formats cannot cause memory safety errors in ClickHouse.\r\nThis can be also useful to test deserialization of `AggregateFunction` data type (aggregate function states).\r\n\r\n**Describe the solution you'd like**\r\n\r\nCreate a binary in `fuzzers` directory that will use `libFuzzer` (similar to other fuzzers).\r\n\r\nIt should take input data and parse as following:\r\n- format name;\r\n- table structure;\r\n- data.\r\n\r\nIt will create `InputFormat` with `FormatFactory`, then read and ignore data.\r\n\r\nThe corpus can be generated programmatically with a script - where we will iterate all available input format and pick random table structures from our functional tests.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33165/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33165/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33156","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33156/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33156/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33156/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33156","id":1088516460,"node_id":"I_kwDOA5dJV85A4XFs","number":33156,"title":"groupArray(column_1,column_2) -> Array(Tuple(column_1, column_2))","user":{"login":"UnamedRus","id":9449405,"node_id":"MDQ6VXNlcjk0NDk0MDU=","avatar_url":"https://avatars.githubusercontent.com/u/9449405?v=4","gravatar_id":"","url":"https://api.github.com/users/UnamedRus","html_url":"https://github.com/UnamedRus","followers_url":"https://api.github.com/users/UnamedRus/followers","following_url":"https://api.github.com/users/UnamedRus/following{/other_user}","gists_url":"https://api.github.com/users/UnamedRus/gists{/gist_id}","starred_url":"https://api.github.com/users/UnamedRus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/UnamedRus/subscriptions","organizations_url":"https://api.github.com/users/UnamedRus/orgs","repos_url":"https://api.github.com/users/UnamedRus/repos","events_url":"https://api.github.com/users/UnamedRus/events{/privacy}","received_events_url":"https://api.github.com/users/UnamedRus/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2021-12-24T23:48:34Z","updated_at":"2021-12-25T17:17:04Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"**Use case**\r\n\r\n```\r\nSELECT groupArray((number, number - 1))\r\nFROM numbers(10000000)\r\nGROUP BY number % 10000\r\nFORMAT `Null`\r\n\r\nMemoryTracker: Peak memory usage (for query): 653.52 MiB.\r\n\r\n0 rows in set. Elapsed: 1.726 sec. Processed 10.02 million rows, 80.18 MB (5.81 million rows/s., 46.46 MB/s.)\r\n\r\nWITH\r\n    groupArray(number) AS a,\r\n    groupArray(number - 1) AS b\r\nSELECT arrayZip(a, b)\r\nFROM numbers(10000000)\r\nGROUP BY number % 10000\r\nFORMAT `Null`\r\n\r\n<Debug> MemoryTracker: Peak memory usage (for query): 462.41 MiB.\r\n\r\n\r\n0 rows in set. Elapsed: 1.030 sec. Processed 10.02 million rows, 80.18 MB (9.73 million rows/s., 77.82 MB/s.)\r\n```\r\n\r\n\r\n**Describe the solution you'd like**\r\n\r\nAbility to pass multiple columns to groupArray function, and they would Array of tuples.\r\n\r\n**Describe alternatives you've considered**\r\n\r\narrayZip(groupArray(), groupArray()) but it's more \"noisy\"\r\nAnd groupArray((...,....)) works slower.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33156/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33156/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33155","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33155/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33155/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33155/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33155","id":1088515156,"node_id":"I_kwDOA5dJV85A4WxU","number":33155,"title":"Better map and array (array* lambda functions) support","user":{"login":"UnamedRus","id":9449405,"node_id":"MDQ6VXNlcjk0NDk0MDU=","avatar_url":"https://avatars.githubusercontent.com/u/9449405?v=4","gravatar_id":"","url":"https://api.github.com/users/UnamedRus","html_url":"https://github.com/UnamedRus","followers_url":"https://api.github.com/users/UnamedRus/followers","following_url":"https://api.github.com/users/UnamedRus/following{/other_user}","gists_url":"https://api.github.com/users/UnamedRus/gists{/gist_id}","starred_url":"https://api.github.com/users/UnamedRus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/UnamedRus/subscriptions","organizations_url":"https://api.github.com/users/UnamedRus/orgs","repos_url":"https://api.github.com/users/UnamedRus/repos","events_url":"https://api.github.com/users/UnamedRus/events{/privacy}","received_events_url":"https://api.github.com/users/UnamedRus/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-12-24T23:35:45Z","updated_at":"2021-12-24T23:35:45Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"**Use case**\r\n\r\n> A clear and concise description of what is the intended usage scenario is.\r\n\r\n**Describe the solution you'd like**\r\n\r\nAbility to use map in array* functions.\r\n\r\n```\r\nWITH map(1, 'val1', 2, 'val2') AS map\r\nSELECT arrayFilter(x -> (x.key = 1), map)\r\n\r\nQuery id: ee3dc4fe-b86e-4803-b5d2-c01e5d1bc471\r\n\r\n\r\n0 rows in set. Elapsed: 0.003 sec.\r\n\r\nReceived exception from server (version 21.13.1):\r\nCode: 47. DB::Exception: Received from localhost:9000. DB::Exception: Missing columns: 'x.key' while processing query: 'WITH map(1, 'val1', 2, 'val2') AS map SELECT arrayFilter(x -> (x.key = 1), map)', required columns: 'x.key'. (UNKNOWN_IDENTIFIER)\r\n\r\n\r\nWITH map(1, 'val1', 2, 'val2') AS map\r\nSELECT arrayFilter((x, y) -> (y = 1), arrayZip(mapKeys(map), mapValues(map)), mapKeys(map)) AS res\r\n\r\nQuery id: 275051be-8206-4973-9974-f667f701d8c8\r\n\r\n┌─res──────────┐\r\n│ [(1,'val1')] │\r\n└──────────────┘\r\n```\r\n\r\nAbility to cast map to Array(Tuple(key, value)) or Tuple(Array(key), Array(value))\r\n\r\n```\r\nWITH map(1, 'val1', 2, 'val2') AS map\r\nSELECT CAST(map, 'Array(Tuple(key UInt32, value String))')\r\n\r\nQuery id: 7100017e-f99f-4667-9665-cba69f24edff\r\n\r\n\r\n0 rows in set. Elapsed: 0.003 sec.\r\n\r\nReceived exception from server (version 21.13.1):\r\nCode: 53. DB::Exception: Received from localhost:9000. DB::Exception: CAST AS Array can only be performed between same-dimensional Array or String types: While processing CAST(map(1, 'val1', 2, 'val2') AS map, 'Array(Tuple(key UInt32, value String))'). (TYPE_MISMATCH)\r\n\r\nWITH map(1, 'val1', 2, 'val2') AS map\r\nSELECT CAST(map, 'Tuple(key Array(UInt32), value Array(String))')\r\n\r\nQuery id: 39700924-2168-4faa-af9b-002ceffb18c4\r\n\r\n\r\n0 rows in set. Elapsed: 0.003 sec.\r\n\r\nReceived exception from server (version 21.13.1):\r\nCode: 53. DB::Exception: Received from localhost:9000. DB::Exception: CAST AS Tuple can only be performed between tuple types or from String.\r\nLeft type: Map(UInt8, String), right type: Tuple(key Array(UInt32), value Array(String)): While processing CAST(map(1, 'val1', 2, 'val2') AS map, 'Tuple(key Array(UInt32), value Array(String))'). (TYPE_MISMATCH)\r\n```\r\n\r\nMap subcolumns .keys/.values doesn't work in case if map was created in query.\r\n\r\nhttps://clickhouse.com/docs/en/sql-reference/data-types/map/#map-subcolumns\r\n\r\n```\r\nWITH map(1, 'val1', 2, 'val2') AS map\r\nSELECT\r\n    map.keys,\r\n    map.values\r\n\r\nQuery id: c0d9d077-6edc-42ba-adae-37a1f9b9ac1c\r\n\r\n\r\n0 rows in set. Elapsed: 0.002 sec.\r\n\r\nReceived exception from server (version 21.13.1):\r\nCode: 47. DB::Exception: Received from localhost:9000. DB::Exception: Missing columns: 'map.values' 'map.keys' while processing query: 'WITH map(1, 'val1', 2, 'val2') AS map SELECT map.keys, map.values', required columns: 'map.keys' 'map.values'. (UNKNOWN_IDENTIFIER)\r\n```\r\n\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33155/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33155/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33147","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33147/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33147/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33147/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33147","id":1088451346,"node_id":"I_kwDOA5dJV85A4HMS","number":33147,"title":"Support MILLISECOND, MICROSECOND, NANOSECOND for INTERVAL.","user":{"login":"alexey-milovidov","id":18581488,"node_id":"MDQ6VXNlcjE4NTgxNDg4","avatar_url":"https://avatars.githubusercontent.com/u/18581488?v=4","gravatar_id":"","url":"https://api.github.com/users/alexey-milovidov","html_url":"https://github.com/alexey-milovidov","followers_url":"https://api.github.com/users/alexey-milovidov/followers","following_url":"https://api.github.com/users/alexey-milovidov/following{/other_user}","gists_url":"https://api.github.com/users/alexey-milovidov/gists{/gist_id}","starred_url":"https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexey-milovidov/subscriptions","organizations_url":"https://api.github.com/users/alexey-milovidov/orgs","repos_url":"https://api.github.com/users/alexey-milovidov/repos","events_url":"https://api.github.com/users/alexey-milovidov/events{/privacy}","received_events_url":"https://api.github.com/users/alexey-milovidov/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":644208617,"node_id":"MDU6TGFiZWw2NDQyMDg2MTc=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/easy%20task","name":"easy task","color":"0e8a16","default":false,"description":"Good for first contributors"}],"state":"open","locked":false,"assignee":{"login":"lingtaolf","id":87509571,"node_id":"MDQ6VXNlcjg3NTA5NTcx","avatar_url":"https://avatars.githubusercontent.com/u/87509571?v=4","gravatar_id":"","url":"https://api.github.com/users/lingtaolf","html_url":"https://github.com/lingtaolf","followers_url":"https://api.github.com/users/lingtaolf/followers","following_url":"https://api.github.com/users/lingtaolf/following{/other_user}","gists_url":"https://api.github.com/users/lingtaolf/gists{/gist_id}","starred_url":"https://api.github.com/users/lingtaolf/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/lingtaolf/subscriptions","organizations_url":"https://api.github.com/users/lingtaolf/orgs","repos_url":"https://api.github.com/users/lingtaolf/repos","events_url":"https://api.github.com/users/lingtaolf/events{/privacy}","received_events_url":"https://api.github.com/users/lingtaolf/received_events","type":"User","site_admin":false},"assignees":[{"login":"lingtaolf","id":87509571,"node_id":"MDQ6VXNlcjg3NTA5NTcx","avatar_url":"https://avatars.githubusercontent.com/u/87509571?v=4","gravatar_id":"","url":"https://api.github.com/users/lingtaolf","html_url":"https://github.com/lingtaolf","followers_url":"https://api.github.com/users/lingtaolf/followers","following_url":"https://api.github.com/users/lingtaolf/following{/other_user}","gists_url":"https://api.github.com/users/lingtaolf/gists{/gist_id}","starred_url":"https://api.github.com/users/lingtaolf/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/lingtaolf/subscriptions","organizations_url":"https://api.github.com/users/lingtaolf/orgs","repos_url":"https://api.github.com/users/lingtaolf/repos","events_url":"https://api.github.com/users/lingtaolf/events{/privacy}","received_events_url":"https://api.github.com/users/lingtaolf/received_events","type":"User","site_admin":false}],"milestone":null,"comments":3,"created_at":"2021-12-24T16:48:48Z","updated_at":"2021-12-27T07:21:32Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"**Use case**\r\n\r\n`roundToInterval(t, INTERVAL 10 MILLISECOND)` and similar.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33147/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33147/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33139","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33139/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33139/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33139/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33139","id":1088344311,"node_id":"I_kwDOA5dJV85A3tD3","number":33139,"title":"UBSan failure in `DB::MergeTreeSink::onStart()`","user":{"login":"alesapin","id":3684697,"node_id":"MDQ6VXNlcjM2ODQ2OTc=","avatar_url":"https://avatars.githubusercontent.com/u/3684697?v=4","gravatar_id":"","url":"https://api.github.com/users/alesapin","html_url":"https://github.com/alesapin","followers_url":"https://api.github.com/users/alesapin/followers","following_url":"https://api.github.com/users/alesapin/following{/other_user}","gists_url":"https://api.github.com/users/alesapin/gists{/gist_id}","starred_url":"https://api.github.com/users/alesapin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alesapin/subscriptions","organizations_url":"https://api.github.com/users/alesapin/orgs","repos_url":"https://api.github.com/users/alesapin/repos","events_url":"https://api.github.com/users/alesapin/events{/privacy}","received_events_url":"https://api.github.com/users/alesapin/received_events","type":"User","site_admin":false},"labels":[{"id":2104602822,"node_id":"MDU6TGFiZWwyMTA0NjAyODIy","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/fuzz","name":"fuzz","color":"abc4ea","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-12-24T12:00:25Z","updated_at":"2021-12-24T12:00:25Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"Link: https://s3.amazonaws.com/clickhouse-test-reports/33136/1a3cdc3388a24ea161fd3ac1c739a4bf7e0d462a/stress_test__undefined__actions_.html\r\nStack:\r\n```\r\n/var/log/clickhouse-server/clickhouse-server.log.2:2021.12.24 14:09:02.733298 [ 113064 ] {} <Fatal> BaseDaemon: (version 21.13.1.1231, build id: 4BC798128252FB76) (from thread 83460) (query_id: c70c4eba-2da0-42d6-81f6-dfbeddff540b) Received signal Unknown signal (-3)\r\n/var/log/clickhouse-server/clickhouse-server.log.2:2021.12.24 14:09:02.734812 [ 113064 ] {} <Fatal> BaseDaemon: Sanitizer trap.\r\n/var/log/clickhouse-server/clickhouse-server.log.2:2021.12.24 14:09:02.739854 [ 113064 ] {} <Fatal> BaseDaemon: Stack trace: 0xe19a5aa 0x1dfeccd1 0xe15af56 0xe16cc99 0x1fe5e137 0x203da97c 0x203d9c5d 0x200bf459 0x200bf2e8 0x200b15c1 0x200b2848 0x200b2723 0xe1c9e3a 0xe1cc842 0x7f38ed972609 0x7f38ed899293\r\n/var/log/clickhouse-server/clickhouse-server.log.2:2021.12.24 14:09:02.755905 [ 113064 ] {} <Fatal> BaseDaemon: 0.1. inlined from ./obj-x86_64-linux-gnu/../src/Common/StackTrace.cpp:305: StackTrace::tryCapture()\r\n/var/log/clickhouse-server/clickhouse-server.log.2:2021.12.24 14:09:02.757336 [ 113064 ] {} <Fatal> BaseDaemon: 0. ../src/Common/StackTrace.cpp:266: StackTrace::StackTrace() @ 0xe19a5aa in /usr/bin/clickhouse\r\n/var/log/clickhouse-server/clickhouse-server.log.2:2021.12.24 14:09:02.797940 [ 113064 ] {} <Fatal> BaseDaemon: 1. ./obj-x86_64-linux-gnu/../base/daemon/BaseDaemon.cpp:391: sanitizerDeathCallback() @ 0x1dfeccd1 in /usr/bin/clickhouse\r\n/var/log/clickhouse-server/clickhouse-server.log.2:2021.12.24 14:09:05.545516 [ 113064 ] {} <Fatal> BaseDaemon: 2. __sanitizer::Die() @ 0xe15af56 in /usr/bin/clickhouse\r\n/var/log/clickhouse-server/clickhouse-server.log.2:2021.12.24 14:09:07.276980 [ 113064 ] {} <Fatal> BaseDaemon: 3. ? @ 0xe16cc99 in /usr/bin/clickhouse\r\n/var/log/clickhouse-server/clickhouse-server.log.2:2021.12.24 14:09:07.307314 [ 113064 ] {} <Fatal> BaseDaemon: 4. ./obj-x86_64-linux-gnu/../src/Storages/MergeTree/MergeTreeSink.cpp:0: DB::MergeTreeSink::onStart() @ 0x1fe5e137 in /usr/bin/clickhouse\r\n/var/log/clickhouse-server/clickhouse-server.log.2:2021.12.24 14:09:07.405649 [ 113064 ] {} <Fatal> BaseDaemon: 5. ./obj-x86_64-linux-gnu/../src/Processors/Transforms/ExceptionKeepingTransform.cpp:103: DB::runStep(std::__1::function<void ()>, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x203da97c in /usr/bin/clickhouse\r\n/var/log/clickhouse-server/clickhouse-server.log.2:2021.12.24 14:09:07.468274 [ 113064 ] {} <Fatal> BaseDaemon: 6. ./obj-x86_64-linux-gnu/../src/Processors/Transforms/ExceptionKeepingTransform.cpp:0: DB::ExceptionKeepingTransform::work() @ 0x203d9c5d in /usr/bin/clickhouse\r\n/var/log/clickhouse-server/clickhouse-server.log.2:2021.12.24 14:09:07.493805 [ 113064 ] {} <Fatal> BaseDaemon: 7. ./obj-x86_64-linux-gnu/../src/Processors/Executors/ExecutionThreadContext.cpp:53: DB::executeJob(DB::IProcessor*) @ 0x200bf459 in /usr/bin/clickhouse\r\n/var/log/clickhouse-server/clickhouse-server.log.2:2021.12.24 14:09:07.516718 [ 113064 ] {} <Fatal> BaseDaemon: 8. ./obj-x86_64-linux-gnu/../src/Processors/Executors/ExecutionThreadContext.cpp:65: DB::ExecutionThreadContext::executeTask() @ 0x200bf2e8 in /usr/bin/clickhouse\r\n/var/log/clickhouse-server/clickhouse-server.log.2:2021.12.24 14:09:07.579305 [ 113064 ] {} <Fatal> BaseDaemon: 9. ./obj-x86_64-linux-gnu/../src/Processors/Executors/PipelineExecutor.cpp:213: DB::PipelineExecutor::executeStepImpl(unsigned long, std::__1::atomic<bool>*) @ 0x200b15c1 in /usr/bin/clickhouse\r\n/var/log/clickhouse-server/clickhouse-server.log.2:2021.12.24 14:09:07.628146 [ 113064 ] {} <Fatal> BaseDaemon: 10.1. inlined from ./obj-x86_64-linux-gnu/../contrib/libcxx/include/memory:2851: std::__1::shared_ptr<DB::ThreadGroupStatus>::operator bool() const\r\n/var/log/clickhouse-server/clickhouse-server.log.2:2021.12.24 14:09:07.637988 [ 113064 ] {} <Fatal> BaseDaemon: 10.2. inlined from ../src/Processors/Executors/PipelineExecutor.cpp:304: operator()\r\n/var/log/clickhouse-server/clickhouse-server.log.2:2021.12.24 14:09:07.644892 [ 113064 ] {} <Fatal> BaseDaemon: 10.3. inlined from ../base/base/../base/scope_guard.h:94: basic_scope_guard<DB::PipelineExecutor::executeImpl(unsigned long)::$_1::operator()() const::'lambda'()>::invoke()\r\n/var/log/clickhouse-server/clickhouse-server.log.2:2021.12.24 14:09:07.649412 [ 113064 ] {} <Fatal> BaseDaemon: 10.4. inlined from ../base/base/../base/scope_guard.h:44: ~basic_scope_guard\r\n/var/log/clickhouse-server/clickhouse-server.log.2:2021.12.24 14:09:07.657019 [ 113064 ] {} <Fatal> BaseDaemon: 10.5. inlined from ../src/Processors/Executors/PipelineExecutor.cpp:319: operator()\r\n/var/log/clickhouse-server/clickhouse-server.log.2:2021.12.24 14:09:07.669183 [ 113064 ] {} <Fatal> BaseDaemon: 10. ../contrib/libcxx/include/type_traits:3682: decltype(std::__1::forward<DB::PipelineExecutor::executeImpl(unsigned long)::$_1&>(fp)()) std::__1::__invoke_constexpr<DB::PipelineExecutor::executeImpl(unsigned long)::$_1&>(DB::PipelineExecutor::executeImpl(unsigned long)::$_1&) @ 0x200b2848 in /usr/bin/clickhouse\r\n/var/log/clickhouse-server/clickhouse-server.log.2:2021.12.24 14:09:07.699934 [ 113064 ] {} <Fatal> BaseDaemon: 11.1. inlined from ./obj-x86_64-linux-gnu/../contrib/libcxx/include/tuple:0: operator()\r\n/var/log/clickhouse-server/clickhouse-server.log.2:2021.12.24 14:09:07.713595 [ 113064 ] {} <Fatal> BaseDaemon: 11. ../contrib/libcxx/include/type_traits:3676: decltype(std::__1::forward<DB::PipelineExecutor::executeImpl(unsigned long)::$_1>(fp)()) std::__1::__invoke<ThreadFromGlobalPool::ThreadFromGlobalPool<DB::PipelineExecutor::executeImpl(unsigned long)::$_1>(DB::PipelineExecutor::executeImpl(unsigned long)::$_1&&)::'lambda'()&>(DB::PipelineExecutor::executeImpl(unsigned long)::$_1&&) @ 0x200b2723 in /usr/bin/clickhouse\r\n/var/log/clickhouse-server/clickhouse-server.log.2:2021.12.24 14:09:07.749622 [ 113064 ] {} <Fatal> BaseDaemon: 12.1. inlined from ./obj-x86_64-linux-gnu/../contrib/libcxx/include/functional:2533: std::__1::function<void ()>::operator=(std::nullptr_t)\r\n/var/log/clickhouse-server/clickhouse-server.log.2:2021.12.24 14:09:07.753595 [ 113064 ] {} <Fatal> BaseDaemon: 12. ../src/Common/ThreadPool.cpp:277: ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0xe1c9e3a in /usr/bin/clickhouse\r\n/var/log/clickhouse-server/clickhouse-server.log.2:2021.12.24 14:09:07.798655 [ 113064 ] {} <Fatal> BaseDaemon: 13. ./obj-x86_64-linux-gnu/../src/Common/ThreadPool.cpp:0: void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()> >(void*) @ 0xe1cc842 in /usr/bin/clickhouse\r\n/var/log/clickhouse-server/clickhouse-server.log.2:2021.12.24 14:09:07.801300 [ 113064 ] {} <Fatal> BaseDaemon: 14. ? @ 0x7f38ed972609 in ?\r\n/var/log/clickhouse-server/clickhouse-server.log.2:2021.12.24 14:09:07.813059 [ 113064 ] {} <Fatal> BaseDaemon: 15. __clone @ 0x7f38ed899293 in ?\r\n/var/log/clickhouse-server/clickhouse-server.log.2:2021.12.24 14:09:08.750408 [ 113064 ] {} <Fatal> BaseDaemon: Calculated checksum of the binary: C910DF9FF6BC661E4EF0697BEF8EE4EF. There is no information about the reference checksum.\r\n```\r\n\r\nQuery: \r\n\r\n```\r\n2021.12.24 14:08:59.144315 [ 1534 ] {c70c4eba-2da0-42d6-81f6-dfbeddff540b} <Debug> executeQuery: (from [::1]:44342) (comment: '00168_parallel_processing_on_replicas_part_1.sh') CREATE MATERIALIZED VIEW test.basic_00040 ENGINE = AggregatingMergeTree(StartDate, (CounterID, StartDate), 8192) POPULATE AS SELECT CounterID, StartDate, sumState(Sign) AS Visits, uniqState(UserID) AS Users FROM test.visits GROUP BY CounterID, StartDate;\r\n2021.12.24 14:08:59.181342 [ 1534 ] {c70c4eba-2da0-42d6-81f6-dfbeddff540b} <Trace> ContextAccess (default): Access granted: CREATE VIEW ON test.basic_00040\r\n2021.12.24 14:08:59.217164 [ 1534 ] {c70c4eba-2da0-42d6-81f6-dfbeddff540b} <Trace> ContextAccess (default): Access granted: SELECT(CounterID, StartDate, Sign, UserID) ON test.visits\r\n2021.12.24 14:08:59.474873 [ 1534 ] {c70c4eba-2da0-42d6-81f6-dfbeddff540b} <Debug> test.`.inner_id.ff415205-121d-4042-bf41-5205121d1042` (9d509e95-ad3c-41cd-9d50-9e95ad3cb1cd): Loading data parts\r\n2021.12.24 14:08:59.476430 [ 1534 ] {c70c4eba-2da0-42d6-81f6-dfbeddff540b} <Debug> test.`.inner_id.ff415205-121d-4042-bf41-5205121d1042` (9d509e95-ad3c-41cd-9d50-9e95ad3cb1cd): There are no data parts\r\n2021.12.24 14:08:59.492069 [ 1534 ] {c70c4eba-2da0-42d6-81f6-dfbeddff540b} <Trace> ContextAccess (default): Access granted: INSERT(CounterID, StartDate, Visits, Users) ON test.basic_00040\r\n2021.12.24 14:08:59.576419 [ 1534 ] {c70c4eba-2da0-42d6-81f6-dfbeddff540b} <Trace> ContextAccess (default): Access granted: SELECT(CounterID, StartDate, Sign, UserID) ON test.visits\r\n2021.12.24 14:08:59.616846 [ 1534 ] {c70c4eba-2da0-42d6-81f6-dfbeddff540b} <Trace> InterpreterSelectQuery: FetchColumns -> Complete\r\n2021.12.24 14:08:59.625628 [ 1534 ] {c70c4eba-2da0-42d6-81f6-dfbeddff540b} <Debug> datasets.visits_v1 (SelectExecutor): Key condition: unknown\r\n2021.12.24 14:08:59.703197 [ 1534 ] {c70c4eba-2da0-42d6-81f6-dfbeddff540b} <Debug> datasets.visits_v1 (SelectExecutor): MinMax index condition: unknown\r\n2021.12.24 14:08:59.747987 [ 1534 ] {c70c4eba-2da0-42d6-81f6-dfbeddff540b} <Debug> datasets.visits_v1 (SelectExecutor): Selected 1/1 parts by partition key, 1 parts by primary key, 205/205 marks by primary key, 205 marks to read from 1 ranges\r\n2021.12.24 14:08:59.749715 [ 1534 ] {c70c4eba-2da0-42d6-81f6-dfbeddff540b} <Debug> datasets.visits_v1 (SelectExecutor): Reading approx. 1679360 rows with 11 streams\r\n2021.12.24 14:09:02.733298 [ 113064 ] {} <Fatal> BaseDaemon: (version 21.13.1.1231, build id: 4BC798128252FB76) (from thread 83460) (query_id: c70c4eba-2da0-42d6-81f6-dfbeddff540b) Received signal Unknown signal (-3)\r\n```","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33139/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33139/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33132","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33132/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33132/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33132/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33132","id":1088224062,"node_id":"I_kwDOA5dJV85A3Ps-","number":33132,"title":"distinct values of partition column","user":{"login":"readme2gh","id":20677230,"node_id":"MDQ6VXNlcjIwNjc3MjMw","avatar_url":"https://avatars.githubusercontent.com/u/20677230?v=4","gravatar_id":"","url":"https://api.github.com/users/readme2gh","html_url":"https://github.com/readme2gh","followers_url":"https://api.github.com/users/readme2gh/followers","following_url":"https://api.github.com/users/readme2gh/following{/other_user}","gists_url":"https://api.github.com/users/readme2gh/gists{/gist_id}","starred_url":"https://api.github.com/users/readme2gh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/readme2gh/subscriptions","organizations_url":"https://api.github.com/users/readme2gh/orgs","repos_url":"https://api.github.com/users/readme2gh/repos","events_url":"https://api.github.com/users/readme2gh/events{/privacy}","received_events_url":"https://api.github.com/users/readme2gh/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2021-12-24T08:01:56Z","updated_at":"2022-01-13T21:54:45Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"```\r\nCREATE TABLE tableA\r\n(\r\n    `a` String ,\r\n    `b` String ,\r\n    `c` Int32 ,\r\n    `datekey` Int32 COMMENT 'yyyyMMdd'\r\n)\r\nENGINE = MergeTree()\r\nPARTITION BY (datekey)\r\nSAMPLE BY intHash64(timestamp)\r\nSETTINGS index_granularity = 8192 \r\n\r\n```\r\n\r\nI want to get the unique values of partition column,like this.\r\n\r\n```\r\n\r\nselect count(distinct `datekey`) from tableA\r\n\r\n┌─uniqExact(datekey)─┐\r\n│                121 │\r\n└────────────────────┘\r\n\r\n```\r\n\r\nit scaned all the files of all partition  \r\n```\r\n1 rows in set. Elapsed: 2.302 sec. Processed 943.69 million rows, 16.04 GB (409.90 million rows/s., 6.97 GB/s.)\r\n\r\n```\r\n\r\nmaybe it  just need to get all directories,or just like this\r\n```\r\nselect count(distintct partition) from system.parts where  table =  'tableA'\r\n```\r\n\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33132/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33132/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33057","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33057/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33057/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33057/events","html_url":"https://github.com/ClickHouse/ClickHouse/pull/33057","id":1087089795,"node_id":"PR_kwDOA5dJV84wMq6G","number":33057,"title":"Try new jemalloc from dev branch (for now only linux x86_64)","user":{"login":"azat","id":430798,"node_id":"MDQ6VXNlcjQzMDc5OA==","avatar_url":"https://avatars.githubusercontent.com/u/430798?v=4","gravatar_id":"","url":"https://api.github.com/users/azat","html_url":"https://github.com/azat","followers_url":"https://api.github.com/users/azat/followers","following_url":"https://api.github.com/users/azat/following{/other_user}","gists_url":"https://api.github.com/users/azat/gists{/gist_id}","starred_url":"https://api.github.com/users/azat/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/azat/subscriptions","organizations_url":"https://api.github.com/users/azat/orgs","repos_url":"https://api.github.com/users/azat/repos","events_url":"https://api.github.com/users/azat/events{/privacy}","received_events_url":"https://api.github.com/users/azat/received_events","type":"User","site_admin":false},"labels":[{"id":1876999755,"node_id":"MDU6TGFiZWwxODc2OTk5NzU1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/pr-not-for-changelog","name":"pr-not-for-changelog","color":"007700","default":false,"description":"This PR should not be mentioned in the changelog"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-12-22T18:49:26Z","updated_at":"2021-12-22T18:49:39Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"draft":true,"pull_request":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/pulls/33057","html_url":"https://github.com/ClickHouse/ClickHouse/pull/33057","diff_url":"https://github.com/ClickHouse/ClickHouse/pull/33057.diff","patch_url":"https://github.com/ClickHouse/ClickHouse/pull/33057.patch","merged_at":null},"body":"This is just to look at performance tests.\r\n\r\nChangelog category (leave one):\r\n- Not for changelog (changelog entry is not required)\r\n\r\n\r\nChangelog entry (a user-readable short description of the changes that goes to CHANGELOG.md):\r\nTBD\r\n\r\nDetailed description / Documentation draft:\r\nTBD\r\n\r\nRefs: https://github.com/jemalloc/jemalloc/issues/2030","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33057/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33057/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33056","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33056/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33056/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33056/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33056","id":1087069259,"node_id":"I_kwDOA5dJV85Ay1xL","number":33056,"title":"Performance with functions in primary index","user":{"login":"den-crane","id":19737682,"node_id":"MDQ6VXNlcjE5NzM3Njgy","avatar_url":"https://avatars.githubusercontent.com/u/19737682?v=4","gravatar_id":"","url":"https://api.github.com/users/den-crane","html_url":"https://github.com/den-crane","followers_url":"https://api.github.com/users/den-crane/followers","following_url":"https://api.github.com/users/den-crane/following{/other_user}","gists_url":"https://api.github.com/users/den-crane/gists{/gist_id}","starred_url":"https://api.github.com/users/den-crane/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/den-crane/subscriptions","organizations_url":"https://api.github.com/users/den-crane/orgs","repos_url":"https://api.github.com/users/den-crane/repos","events_url":"https://api.github.com/users/den-crane/events{/privacy}","received_events_url":"https://api.github.com/users/den-crane/received_events","type":"User","site_admin":false},"labels":[{"id":386401510,"node_id":"MDU6TGFiZWwzODY0MDE1MTA=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/question","name":"question","color":"bfdadc","default":true,"description":""},{"id":756395244,"node_id":"MDU6TGFiZWw3NTYzOTUyNDQ=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/performance","name":"performance","color":"c2e0c6","default":false,"description":null},{"id":1401777979,"node_id":"MDU6TGFiZWwxNDAxNzc3OTc5","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-optimizers","name":"comp-optimizers","color":"b5bcff","default":false,"description":"Query optimizations"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":8,"created_at":"2021-12-22T18:16:08Z","updated_at":"2022-01-15T22:00:14Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"body":"I don't really understand why in case `ORDER BY (toStartOfHour(dt), metric_id, dt)` CH reads more rows.\r\n\r\n`ORDER BY (toStartOfHour(dt), metric_id, dt)`   / Processed 262.14 thousand rows\r\n`ORDER BY (toStartOfHour(dt), metric_id     ) `   / Processed 24.58 thousand rows\r\n\r\n```sql\r\n18.14.18 / 21.8.10.19 / 21.13.1.9141\r\n\r\nCREATE TABLE perf1 (     `dt` DateTime,     `metric_id` Int64,     `F` Float64 ) ENGINE = MergeTree \r\nPARTITION BY toYYYYMMDD(dt) ORDER BY (toStartOfHour(dt), metric_id, dt);\r\n\r\nCREATE TABLE perf2 (     `dt` DateTime,     `metric_id` Int64,     `F` Float64 )  ENGINE = MergeTree \r\nPARTITION BY toYYYYMMDD(dt) ORDER BY (toStartOfHour(dt), metric_id);\r\n\r\ninsert into perf1 select toDateTime('2021-12-21 00:00:00')+ number/20, number%1111, 1 from numbers(100000000) ;\r\ninsert into perf2 select toDateTime('2021-12-21 00:00:00')+ number/20, number%1111, 1 from numbers(100000000) ;\r\n\r\noptimize table perf1 final ;\r\noptimize table perf2 final ;\r\n\r\nSELECT count() FROM perf1\r\nPREWHERE ((dt >= toDateTime('2021-12-21 00:00:00')) AND (dt < toDateTime('2021-12-21 01:00:00'))) AND (metric_id = 42);\r\n┌─count()─┐\r\n│      65 │\r\n└─────────┘\r\n1 rows in set. Elapsed: 0.004 sec. Processed 262.14 thousand rows, 3.15 MB (72.95 million rows/s., 875.45 MB/s.)\r\n\r\n\r\nSELECT count() FROM perf2\r\nPREWHERE ((dt >= toDateTime('2021-12-21 00:00:00')) AND (dt < toDateTime('2021-12-21 01:00:00'))) AND (metric_id = 42);\r\n┌─count()─┐\r\n│      65 │\r\n└─────────┘\r\n1 rows in set. Elapsed: 0.002 sec. Processed 24.58 thousand rows, 294.91 KB (13.64 million rows/s., 163.70 MB/s.)\r\n\r\n\r\nSELECT count() FROM perf1\r\nPREWHERE ((dt >= toDateTime('2021-12-21 00:00:00')) AND (dt < toDateTime('2021-12-21 01:00:00')));\r\n┌─count()─┐\r\n│   72000 │\r\n└─────────┘\r\n1 rows in set. Elapsed: 0.003 sec. Processed 1.73 million rows, 6.91 MB (584.11 million rows/s., 2.34 GB/s.)\r\n\r\nSELECT count() FROM perf2\r\nPREWHERE ((dt >= toDateTime('2021-12-21 00:00:00')) AND (dt < toDateTime('2021-12-21 01:00:00')));\r\n┌─count()─┐\r\n│   72000 │\r\n└─────────┘\r\n1 rows in set. Elapsed: 0.002 sec. Processed 147.46 thousand rows, 589.82 KB (80.60 million rows/s., 322.41 MB/s.)\r\n\r\n\r\nSELECT count() FROM perf1\r\nPREWHERE metric_id = 42;\r\n┌─count()─┐\r\n│   90009 │\r\n└─────────┘\r\n1 rows in set. Elapsed: 0.009 sec. Processed 15.18 million rows, 121.44 MB (1.74 billion rows/s., 13.94 GB/s.)\r\n\r\nSELECT count() FROM perf2\r\nPREWHERE metric_id = 42;\r\n┌─count()─┐\r\n│   90009 │\r\n└─────────┘\r\n1 rows in set. Elapsed: 0.008 sec. Processed 15.18 million rows, 121.44 MB (1.91 billion rows/s., 15.29 GB/s.)\r\n```","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33056/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33056/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33055","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33055/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33055/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33055/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33055","id":1087037856,"node_id":"I_kwDOA5dJV85AyuGg","number":33055,"title":"Multi-table get interface in IDatabase and caching storages in Context. ","user":{"login":"DimasKovas","id":34828390,"node_id":"MDQ6VXNlcjM0ODI4Mzkw","avatar_url":"https://avatars.githubusercontent.com/u/34828390?v=4","gravatar_id":"","url":"https://api.github.com/users/DimasKovas","html_url":"https://github.com/DimasKovas","followers_url":"https://api.github.com/users/DimasKovas/followers","following_url":"https://api.github.com/users/DimasKovas/following{/other_user}","gists_url":"https://api.github.com/users/DimasKovas/gists{/gist_id}","starred_url":"https://api.github.com/users/DimasKovas/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DimasKovas/subscriptions","organizations_url":"https://api.github.com/users/DimasKovas/orgs","repos_url":"https://api.github.com/users/DimasKovas/repos","events_url":"https://api.github.com/users/DimasKovas/events{/privacy}","received_events_url":"https://api.github.com/users/DimasKovas/received_events","type":"User","site_admin":false},"labels":[{"id":1546440057,"node_id":"MDU6TGFiZWwxNTQ2NDQwMDU3","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/development","name":"development","color":"fc80df","default":false,"description":"Developement process & source code & implementation details"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2021-12-22T17:28:26Z","updated_at":"2021-12-22T20:09:24Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"**Use case**\r\n\r\nGetting StoragePtr can be expensive (in our case it's a remote request to fetch table structure).\r\nWhen there are multiple tables in one query, all of them are fetched sequentially. It leads to a long query preparation (up to several seconds).\r\n\r\nThe fact that ClickHouse can call 'getTable' several times for one table during query processing make the situation even worse.\r\n\r\nThe goal is to fetch all used tables only once in parallel.\r\n\r\n**Describe the solution you'd like**\r\n\r\nThe IDatabase has following interface:\r\n`std::vector<DB::StoragePtr> tryGetTables(const DB::Names& names, DB::ContextPtr context)`\r\n\r\nBefore query processing, ClickHouse collects all table names used in query and fetches them via tryGetTables. Then it stores storages in Context, so it can access them any time without creating new storage.\r\n\r\n**Describe alternatives you've considered**\r\n\r\nAnother possible solution is to make an asynchronous interface for getting tables. (+caching in Context as described above)\r\n\r\n**Additional context**\r\n\r\nThe task is requested by Yandex.\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33055/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33055/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33051","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33051/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33051/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33051/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33051","id":1086961004,"node_id":"I_kwDOA5dJV85AybVs","number":33051,"title":"Using WITH clause in table functions.","user":{"login":"DimasKovas","id":34828390,"node_id":"MDQ6VXNlcjM0ODI4Mzkw","avatar_url":"https://avatars.githubusercontent.com/u/34828390?v=4","gravatar_id":"","url":"https://api.github.com/users/DimasKovas","html_url":"https://github.com/DimasKovas","followers_url":"https://api.github.com/users/DimasKovas/followers","following_url":"https://api.github.com/users/DimasKovas/following{/other_user}","gists_url":"https://api.github.com/users/DimasKovas/gists{/gist_id}","starred_url":"https://api.github.com/users/DimasKovas/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DimasKovas/subscriptions","organizations_url":"https://api.github.com/users/DimasKovas/orgs","repos_url":"https://api.github.com/users/DimasKovas/repos","events_url":"https://api.github.com/users/DimasKovas/events{/privacy}","received_events_url":"https://api.github.com/users/DimasKovas/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":1507867504,"node_id":"MDU6TGFiZWwxNTA3ODY3NTA0","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/st-hold","name":"st-hold","color":"e5b890","default":false,"description":"We've paused the work on issue for some reason"}],"state":"open","locked":false,"assignee":{"login":"kitaisreal","id":22458333,"node_id":"MDQ6VXNlcjIyNDU4MzMz","avatar_url":"https://avatars.githubusercontent.com/u/22458333?v=4","gravatar_id":"","url":"https://api.github.com/users/kitaisreal","html_url":"https://github.com/kitaisreal","followers_url":"https://api.github.com/users/kitaisreal/followers","following_url":"https://api.github.com/users/kitaisreal/following{/other_user}","gists_url":"https://api.github.com/users/kitaisreal/gists{/gist_id}","starred_url":"https://api.github.com/users/kitaisreal/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kitaisreal/subscriptions","organizations_url":"https://api.github.com/users/kitaisreal/orgs","repos_url":"https://api.github.com/users/kitaisreal/repos","events_url":"https://api.github.com/users/kitaisreal/events{/privacy}","received_events_url":"https://api.github.com/users/kitaisreal/received_events","type":"User","site_admin":false},"assignees":[{"login":"kitaisreal","id":22458333,"node_id":"MDQ6VXNlcjIyNDU4MzMz","avatar_url":"https://avatars.githubusercontent.com/u/22458333?v=4","gravatar_id":"","url":"https://api.github.com/users/kitaisreal","html_url":"https://github.com/kitaisreal","followers_url":"https://api.github.com/users/kitaisreal/followers","following_url":"https://api.github.com/users/kitaisreal/following{/other_user}","gists_url":"https://api.github.com/users/kitaisreal/gists{/gist_id}","starred_url":"https://api.github.com/users/kitaisreal/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kitaisreal/subscriptions","organizations_url":"https://api.github.com/users/kitaisreal/orgs","repos_url":"https://api.github.com/users/kitaisreal/repos","events_url":"https://api.github.com/users/kitaisreal/events{/privacy}","received_events_url":"https://api.github.com/users/kitaisreal/received_events","type":"User","site_admin":false}],"milestone":null,"comments":1,"created_at":"2021-12-22T15:53:08Z","updated_at":"2021-12-22T16:06:21Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"**Use case**\r\nTo allow reusing the same expression twice in table functions.\r\n\r\n**Describe the solution you'd like**\r\n\r\n1. Simple variables/constants\r\n```sql\r\nwith '...' as address\r\nselect * from url(address, ...)\r\n```\r\n2. Subqueries\r\nSomething like this:\r\n```sql\r\nwith sq as (select ...)\r\nselect * from cluster(..., view(sq))\r\n```\r\n\r\nThe second case is also needed for our custom table functions, which takes a subquery as an argument.\r\n\r\n**Additional context**\r\n\r\nThis task is requested by Yandex.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33051/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33051/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33045","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33045/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33045/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33045/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33045","id":1086756666,"node_id":"I_kwDOA5dJV85Axpc6","number":33045,"title":"Partial data loss occurs when using clickhouse-copier to migrate from a single node to a cluster","user":{"login":"MrSsunlight","id":32731294,"node_id":"MDQ6VXNlcjMyNzMxMjk0","avatar_url":"https://avatars.githubusercontent.com/u/32731294?v=4","gravatar_id":"","url":"https://api.github.com/users/MrSsunlight","html_url":"https://github.com/MrSsunlight","followers_url":"https://api.github.com/users/MrSsunlight/followers","following_url":"https://api.github.com/users/MrSsunlight/following{/other_user}","gists_url":"https://api.github.com/users/MrSsunlight/gists{/gist_id}","starred_url":"https://api.github.com/users/MrSsunlight/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/MrSsunlight/subscriptions","organizations_url":"https://api.github.com/users/MrSsunlight/orgs","repos_url":"https://api.github.com/users/MrSsunlight/repos","events_url":"https://api.github.com/users/MrSsunlight/events{/privacy}","received_events_url":"https://api.github.com/users/MrSsunlight/received_events","type":"User","site_admin":false},"labels":[{"id":1575085465,"node_id":"MDU6TGFiZWwxNTc1MDg1NDY1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/unexpected%20behaviour","name":"unexpected behaviour","color":"e088ca","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-12-22T12:04:24Z","updated_at":"2021-12-23T01:55:35Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"a single node clickhouse version: 21.6.4.26\r\nclickhouse Cluster version: 21.10.2.15\r\n\r\n\r\n```\r\n                       /  node2 (21.10.2.15)\r\n(21.6.4.26) node1  --\r\n                       \\  node3 (21.10.2.15)\r\n```\r\n\r\n\r\n\r\nThe cluster adopts a two shard method, and the configuration is as follows：\r\n**clickhouse_remote_servers.xml**\r\n```\r\n<?xml version=\"1.0\"?>\r\n<yandex>\r\n  <remote_servers>\r\n    <cluster_1st>\r\n      <shard>\r\n        <internal_replication>true</internal_replication>\r\n        <replica>\r\n          <host>node2</host>\r\n          <port>9000</port>\r\n          <user>admin</user>\r\n          <password>123456</password>\r\n        </replica>\r\n      </shard>\r\n      <shard>\r\n        <internal_replication>true</internal_replication>\r\n        <replica>\r\n          <host>node3</host>\r\n          <port>9000</port>\r\n          <user>admin</user>\r\n          <password>123456</password>\r\n        </replica>\r\n      </shard>\r\n    </cluster_1st>\r\n  </remote_servers>\r\n</yandex>\r\n\r\n```\r\n\r\n\r\nclickhouse-copier **task.xml**\r\n\r\n```\r\n<yandex>\r\n    <remote_servers>\r\n        <src_shard>\r\n            <shard>\r\n                <internal_replication>false</internal_replication>\r\n                <replica>\r\n                    <host>node1</host>\r\n                    <port>9000</port>\r\n                    <user>admin</user>\r\n                    <password>123456</password>\r\n                </replica>\r\n            </shard>\r\n        </src_shard>\r\n        <dst_shard>\r\n            <shard>\r\n                <internal_replication>true</internal_replication>\r\n                <replica>\r\n                    <host>node2</host>\r\n                    <port>9000</port>\r\n                    <user>admin</user>\r\n                    <password>123456</password>\r\n                </replica>\r\n            </shard>\r\n        </dst_shard>\r\n        <cluster_shard>\r\n            <shard>\r\n                <internal_replication>true</internal_replication>\r\n                <replica>\r\n                    <host>node2</host>\r\n                    <port>9000</port>\r\n                    <user>admin</user>\r\n                    <password>123456</password>\r\n                </replica>\r\n            </shard>\r\n            <shard>\r\n                <internal_replication>true</internal_replication>\r\n                <replica>\r\n                    <host>node3</host>\r\n                    <port>9000</port>\r\n                    <user>admin</user>\r\n                    <password>123456</password>\r\n               </replica>\r\n            </shard>\r\n        </cluster_shard>\r\n    </remote_servers>\r\n    <max_workers>4</max_workers>\r\n    <settings_pull>\r\n        <readonly>1</readonly>\r\n    </settings_pull>\r\n    <settings_push>\r\n        <readonly>0</readonly>\r\n    </settings_push>\r\n    <settings>\r\n        <connect_timeout>3</connect_timeout>\r\n        <insert_distributed_sync>1</insert_distributed_sync>\r\n        <allow_suspicious_low_cardinality_types>1</allow_suspicious_low_cardinality_types>\r\n    </settings>\r\n\r\n    <tables>\r\n        <cluster_test_copy>\r\n            <cluster_pull>src_shard</cluster_pull>\r\n            <database_pull>test</database_pull>\r\n            <table_pull>test_log</table_pull>\r\n\r\n            <cluster_push>cluster_shard</cluster_push>\r\n            <database_push>test</database_push>\r\n            <table_push>test_log</table_push>\r\n\r\n            <engine>\r\n                ENGINE = ReplicatedMergeTree('/clickhouse/tables/{layer}-{shard}/test/test_log', '{replica}')\r\n                PARTITION BY toDate(tnow)\r\n                ORDER BY (tnow, name, id)\r\n                TTL toDate(tnow) + toIntervalMonth(3)\r\n                SETTINGS index_granularity = 8192, merge_with_ttl_timeout = 7200, storage_policy = 'hdd_in_order'\r\n            </engine>\r\n            <sharding_key>rand()</sharding_key>\r\n        </cluster_test_copy>\r\n    </tables>\r\n</yandex>\r\n```\r\n\r\n\r\nRun command：\r\n```\r\n/usr/local/zookeeper/bin/zkCli.sh -server 127.0.0.1:12181 create /clickhouse/copytasks \"\"\r\n/usr/local/zookeeper/bin/zkCli.sh -server 127.0.0.1:12181 create /clickhouse/copytasks/task \"\"\r\n/usr/local/zookeeper/bin/zkCli.sh -server 127.0.0.1:12181 create /clickhouse/copytasks/task/description \"`cat task.xml`\"\r\n\r\nclickhouse-copier --config=zookeeper.xml --task-path=/clickhouse/copytasks/task --task-file=task.xml\r\n```\r\n\r\nView on node2：\r\n```\r\n:) show  tables\r\nSHOW TABLES\r\n\r\nQuery id: d744a6fd-e86d-4339-a4ef-7b8e30982fdb\r\n\r\n┌─name─────────────┐\r\n│ test_log         │\r\n│ test_log_dis     │\r\n│ test_log_piece_0 │\r\n│ test_log_piece_1 │\r\n│ test_log_piece_2 │\r\n│ test_log_piece_3 │\r\n│ test_log_piece_4 │\r\n│ test_log_piece_5 │\r\n└──────────────────┘\r\n\r\n:) show  tables\r\nSHOW TABLES\r\n\r\nQuery id: 67e23cc1-505f-4973-9276-3259e201eff8\r\n\r\n┌─name─────────┐\r\n│ test_log     │\r\n│ test_log_dis │\r\n└──────────────┘\r\n\r\n:) select count() from test_log_dis\r\nSELECT count()\r\nFROM test_log_dis\r\n\r\nQuery id: 43161043-b7a1-4b94-935e-36c1dd89e130\r\n\r\n┌─count()─┐\r\n│   85799 │\r\n└─────────┘\r\n```\r\n\r\nView on node1：\r\n```\r\n:) select count() from test_log\r\nSELECT count()\r\nFROM test_log\r\n\r\n┌─count()─┐\r\n│   200000 │\r\n└─────────┘\r\n```\r\n\r\nThe end result: less data written to the cluster than a single node，But the log does not see the error log；\r\n\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33045/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33045/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33020","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33020/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33020/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33020/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33020","id":1086248280,"node_id":"I_kwDOA5dJV85AvtVY","number":33020,"title":"SQL control characters are able to rewrite log information","user":{"login":"bkuschel","id":6466034,"node_id":"MDQ6VXNlcjY0NjYwMzQ=","avatar_url":"https://avatars.githubusercontent.com/u/6466034?v=4","gravatar_id":"","url":"https://api.github.com/users/bkuschel","html_url":"https://github.com/bkuschel","followers_url":"https://api.github.com/users/bkuschel/followers","following_url":"https://api.github.com/users/bkuschel/following{/other_user}","gists_url":"https://api.github.com/users/bkuschel/gists{/gist_id}","starred_url":"https://api.github.com/users/bkuschel/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bkuschel/subscriptions","organizations_url":"https://api.github.com/users/bkuschel/orgs","repos_url":"https://api.github.com/users/bkuschel/repos","events_url":"https://api.github.com/users/bkuschel/events{/privacy}","received_events_url":"https://api.github.com/users/bkuschel/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":1365579236,"node_id":"MDU6TGFiZWwxMzY1NTc5MjM2","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/minor","name":"minor","color":"FFF8F8","default":false,"description":"Priority: minor"}],"state":"open","locked":false,"assignee":{"login":"alexey-milovidov","id":18581488,"node_id":"MDQ6VXNlcjE4NTgxNDg4","avatar_url":"https://avatars.githubusercontent.com/u/18581488?v=4","gravatar_id":"","url":"https://api.github.com/users/alexey-milovidov","html_url":"https://github.com/alexey-milovidov","followers_url":"https://api.github.com/users/alexey-milovidov/followers","following_url":"https://api.github.com/users/alexey-milovidov/following{/other_user}","gists_url":"https://api.github.com/users/alexey-milovidov/gists{/gist_id}","starred_url":"https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexey-milovidov/subscriptions","organizations_url":"https://api.github.com/users/alexey-milovidov/orgs","repos_url":"https://api.github.com/users/alexey-milovidov/repos","events_url":"https://api.github.com/users/alexey-milovidov/events{/privacy}","received_events_url":"https://api.github.com/users/alexey-milovidov/received_events","type":"User","site_admin":false},"assignees":[{"login":"alexey-milovidov","id":18581488,"node_id":"MDQ6VXNlcjE4NTgxNDg4","avatar_url":"https://avatars.githubusercontent.com/u/18581488?v=4","gravatar_id":"","url":"https://api.github.com/users/alexey-milovidov","html_url":"https://github.com/alexey-milovidov","followers_url":"https://api.github.com/users/alexey-milovidov/followers","following_url":"https://api.github.com/users/alexey-milovidov/following{/other_user}","gists_url":"https://api.github.com/users/alexey-milovidov/gists{/gist_id}","starred_url":"https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexey-milovidov/subscriptions","organizations_url":"https://api.github.com/users/alexey-milovidov/orgs","repos_url":"https://api.github.com/users/alexey-milovidov/repos","events_url":"https://api.github.com/users/alexey-milovidov/events{/privacy}","received_events_url":"https://api.github.com/users/alexey-milovidov/received_events","type":"User","site_admin":false}],"milestone":null,"comments":0,"created_at":"2021-12-21T21:35:06Z","updated_at":"2022-01-09T17:59:35Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"> You have to provide the following information whenever possible.\r\n\r\nCertain type of log output could contain control characters and rewrite the log output, potentially providing the ability to spoof false entries.\r\nExample (constructed together with @alexey-milovidov):\r\n```shell\r\necho -e \"SELECT '\\x08\\x08\\x08\\x08\\x08\\x08\\x08\\x08\\x08\\x08\\x08\\x08\\x08\\x08\\\\x08\\x08\\x08\\x08\\x08\\x08\\x08\\x08\\x08\\x08\\x08\\x08\\x08\\x08\\x08\\x08\\x08\\x08\\x08\\x08\\x08\\x08\\x08\\x08\\x08\\x08\\x08\\x08\\x08\\x08\\x08\\x08\\x08\\x08\\x08\\x08\\x08\\x08\\x08\\x08\\x08\\x08\\x08\\x08\\x08\\x08\\x08\\x08\\x08\\x08\\x08\\x08\\x08\\x08\\x08\\x08\\x08\\x08\\x08\\x08\\x08\\x08\\x08\\x08\\x08\\x1b[2;37;41m <Error> Alert! Reset your password here at https://clickhouse.owned/resetpassword\\x1b[2;37;0m'\" | clickhouse-client\r\n```\r\nThis will write the following to the logs:\r\n\r\n```shell\r\n2021.12.21 16:31:21.113844 [ 17527 ] {29ed3a0f-ff56-4747-8bc4-dec99a488fb7} <Error> Alert! Reset your password here at https://clickhouse.owned/resetpassword'\r\n2021.12.21 16:31:21.114009 [ 17527 ] {29ed3a0f-ff56-4747-8bc4-dec99a488fb7} <Trace> ContextAccess (default): Access granted: SELECT(dummy) ON system.one\r\n```\r\n\r\n> A clear and concise description of what works not as it is supposed to.\r\n\r\nThe logger's OwnPatternFormatter may need to support the containment of control character output from SQL and other logging output so that it is not able to spoof log output.\r\n\r\nReporting for release 21.3+\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33020/reactions","total_count":1,"+1":0,"-1":0,"laugh":1,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33020/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33009","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33009/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33009/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33009/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33009","id":1085890441,"node_id":"I_kwDOA5dJV85AuV-J","number":33009,"title":"gcs (s3 from google): `The request signature we calculated does not match the signature you provided.` in case of `:` in object path","user":{"login":"UnamedRus","id":9449405,"node_id":"MDQ6VXNlcjk0NDk0MDU=","avatar_url":"https://avatars.githubusercontent.com/u/9449405?v=4","gravatar_id":"","url":"https://api.github.com/users/UnamedRus","html_url":"https://github.com/UnamedRus","followers_url":"https://api.github.com/users/UnamedRus/followers","following_url":"https://api.github.com/users/UnamedRus/following{/other_user}","gists_url":"https://api.github.com/users/UnamedRus/gists{/gist_id}","starred_url":"https://api.github.com/users/UnamedRus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/UnamedRus/subscriptions","organizations_url":"https://api.github.com/users/UnamedRus/orgs","repos_url":"https://api.github.com/users/UnamedRus/repos","events_url":"https://api.github.com/users/UnamedRus/events{/privacy}","received_events_url":"https://api.github.com/users/UnamedRus/received_events","type":"User","site_admin":false},"labels":[{"id":845267693,"node_id":"MDU6TGFiZWw4NDUyNjc2OTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/st-need-info","name":"st-need-info","color":"e5b890","default":false,"description":"We need extra data to continue"},{"id":2020016497,"node_id":"MDU6TGFiZWwyMDIwMDE2NDk3","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-s3","name":"comp-s3","color":"b5bcff","default":false,"description":""},{"id":3260776666,"node_id":"MDU6TGFiZWwzMjYwNzc2NjY2","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/potential%20bug","name":"potential bug","color":"ffc080","default":false,"description":"To be reviewed by developers and confirmed/rejected."}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2021-12-21T14:27:00Z","updated_at":"2022-01-19T06:35:56Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"> You have to provide the following information whenever possible.\r\n\r\nIn case s3 object has `:` in it's path, ClickHouse fails to request it from gcs because of mismatched signature.\r\n\r\n**Describe what's wrong**\r\n\r\nClickhouse 21.8\r\n\r\n```\r\n executeQuery: Code: 499, e.displayText() = DB::Exception: The request signature we calculated does not match the signature you provided. Check your Google secret key and signing method.: While executing S3 (version 21.8.11.4) (from 127.0.0.1:47668) (in query: SELECT * FROM s3('https://storage.googleapis.com/BUCKET/PATH/*/*', 'XXXXXXXXX', 'XXXXXXXX' ,TSV, 'raw String');), Stack trace (when copying this message, always include the lines below):\r\n\r\n0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x8fd379a in /usr/bin/clickhouse\r\n1. DB::ReadBufferFromS3::initialize() @ 0xff8190b in /usr/bin/clickhouse\r\n2. DB::ReadBufferFromS3::nextImpl() @ 0xff80b1b in /usr/bin/clickhouse\r\n3. DB::TabSeparatedRowInputFormat::readRow(std::__1::vector<COW<DB::IColumn>::mutable_ptr<DB::IColumn>, std::__1::allocator<COW<DB::IColumn>::mutable_ptr<DB::IColumn> > >&, DB::RowReadExtension&) @ 0x111bcfb9 in /usr/bin/clickhouse\r\n4. DB::IRowInputFormat::generate() @ 0x110e51c8 in /usr/bin/clickhouse\r\n5. DB::ISource::tryGenerate() @ 0x1106f235 in /usr/bin/clickhouse\r\n6. DB::ISource::work() @ 0x1106ee1a in /usr/bin/clickhouse\r\n7. DB::InputStreamFromInputFormat::readImpl() @ 0xe45e8ff in /usr/bin/clickhouse\r\n8. DB::IBlockInputStream::read() @ 0xfdd05e7 in /usr/bin/clickhouse\r\n9. DB::StorageS3Source::generate() @ 0x10b367b6 in /usr/bin/clickhouse\r\n10. DB::ISource::tryGenerate() @ 0x1106f235 in /usr/bin/clickhouse\r\n11. DB::ISource::work() @ 0x1106ee1a in /usr/bin/clickhouse\r\n12. DB::SourceWithProgress::work() @ 0x112402db in /usr/bin/clickhouse\r\n13. ? @ 0x110a98dd in /usr/bin/clickhouse\r\n14. DB::PipelineExecutor::executeStepImpl(unsigned long, unsigned long, std::__1::atomic<bool>*) @ 0x110a6471 in /usr/bin/clickhouse\r\n15. ? @ 0x110aaf16 in /usr/bin/clickhouse\r\n16. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x901441f in /usr/bin/clickhouse\r\n17. ? @ 0x9017d03 in /usr/bin/clickhouse\r\n18. start_thread @ 0x9609 in /usr/lib/x86_64-linux-gnu/libpthread-2.31.so\r\n19. __clone @ 0x122293 in /usr/lib/x86_64-linux-gnu/libc-2.31.so\r\n\r\n\r\n0 rows in set. Elapsed: 0.223 sec.\r\n\r\nReceived exception from server (version 21.8.11):\r\nCode: 499. DB::Exception: Received from localhost:9000. DB::Exception: The request signature we calculated does not match the signature you provided. Check your Google secret key and signing method.: While executing S3.\r\n\r\n[chi--0-0-0] 2021.11.23 18:45:48.195319 [ 163 ] {26e03d2b-2a70-4562-a252-8d739d3b3b59} <Debug> AWSClient: Make request to: https://storage.googleapis.com/BUCKET/PATH/2021-11-23/2021-11-23_16:52:00_000000000000.csv\r\n[chi--0-0-0] 2021.11.23 18:45:48.195336 [ 181 ] {26e03d2b-2a70-4562-a252-8d739d3b3b59} <Trace> AWSClient: Request Successfully signed\r\n[chi--0-0-0] 2021.11.23 18:45:48.195365 [ 181 ] {26e03d2b-2a70-4562-a252-8d739d3b3b59} <Debug> AWSClient: Make request to: https://storage.googleapis.com/BUCKET/PATH/2021-11-23/2021-11-23_14:23:51_000000000000.csv\r\n[chi--0-0-0] 2021.11.23 18:45:48.203754 [ 163 ] {26e03d2b-2a70-4562-a252-8d739d3b3b59} <Trace> AWSClient: Receiving response...\r\n[chi--0-0-0] 2021.11.23 18:45:48.203752 [ 181 ] {26e03d2b-2a70-4562-a252-8d739d3b3b59} <Trace> AWSClient: Receiving response...\r\n[chi--0-0-0] 2021.11.23 18:45:48.274493 [ 163 ] {26e03d2b-2a70-4562-a252-8d739d3b3b59} <Debug> AWSClient: Response status: 403, Forbidden\r\n[chi--0-0-0] 2021.11.23 18:45:48.274591 [ 163 ] {26e03d2b-2a70-4562-a252-8d739d3b3b59} <Debug> AWSClient: Received headers: X-GUploader-UploadID: XXXXXXXXXXXXXXXXXXXXX-XXXXXXXXXXXXXXXXXXXXX-2rA; Content-Type: application/xml; charset=UTF-8; Content-Length: 901; Date: Tue, 23 Nov 2021 18:45:48 GMT; Expires: Tue, 23 Nov 2021 18:45:48 GMT; Cache-Control: private, max-age=0; Server: UploadServer; Alt-Svc: h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"; Connection: close;\r\n[chi--0-0-0] 2021.11.23 18:45:48.274655 [ 163 ] {26e03d2b-2a70-4562-a252-8d739d3b3b59} <Trace> AWSClient: Request returned error. Attempting to generate appropriate error codes from response\r\n[chi--0-0-0] 2021.11.23 18:45:48.274738 [ 163 ] {26e03d2b-2a70-4562-a252-8d739d3b3b59} <Trace> AWSClient: AWSErrorMarshaller: Error response is <?xml version=\"1.0\"?>\r\n```\r\n\r\nIt clearly visible that provided creds are correct (`s3(...,'XXXXXXXXX', 'XXXXXXXX')`), because ClickHouse was able to execute listObjects api call and tried to get specific object.\r\n\r\n```\r\n[chi--0-0-0] 2021.11.23 18:45:48.195319 [ 163 ] {26e03d2b-2a70-4562-a252-8d739d3b3b59} <Debug> AWSClient: Make request to: https://storage.googleapis.com/BUCKET/PATH/2021-11-23/2021-11-23_16:52:00_000000000000.csv\r\n```","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33009/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33009/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33007","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33007/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33007/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33007/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33007","id":1085869847,"node_id":"I_kwDOA5dJV85AuQ8X","number":33007,"title":"SELECT '' as cube GROUP BY cube","user":{"login":"UnamedRus","id":9449405,"node_id":"MDQ6VXNlcjk0NDk0MDU=","avatar_url":"https://avatars.githubusercontent.com/u/9449405?v=4","gravatar_id":"","url":"https://api.github.com/users/UnamedRus","html_url":"https://github.com/UnamedRus","followers_url":"https://api.github.com/users/UnamedRus/followers","following_url":"https://api.github.com/users/UnamedRus/following{/other_user}","gists_url":"https://api.github.com/users/UnamedRus/gists{/gist_id}","starred_url":"https://api.github.com/users/UnamedRus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/UnamedRus/subscriptions","organizations_url":"https://api.github.com/users/UnamedRus/orgs","repos_url":"https://api.github.com/users/UnamedRus/repos","events_url":"https://api.github.com/users/UnamedRus/events{/privacy}","received_events_url":"https://api.github.com/users/UnamedRus/received_events","type":"User","site_admin":false},"labels":[{"id":845247686,"node_id":"MDU6TGFiZWw4NDUyNDc2ODY=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/usability","name":"usability","color":"ebf28c","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-12-21T14:06:24Z","updated_at":"2021-12-21T14:06:24Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"**Describe the issue**\r\n\r\n```\r\nSELECT '' AS cube GROUP BY cube;\r\n\r\nExpected one of: token, OpeningRoundBracket\r\n```\r\n\r\n\r\n**Expected behavior**\r\nBetter error message, because not a lot of people aware about GROUP BY CUBE(x,y) syntax.\r\n\r\nMay be some warning, that you use alias name the same as SQL keyword?\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33007/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33007/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33006","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33006/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33006/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33006/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33006","id":1085849115,"node_id":"I_kwDOA5dJV85AuL4b","number":33006,"title":"Data race in cassandra driver","user":{"login":"tavplubix","id":14847450,"node_id":"MDQ6VXNlcjE0ODQ3NDUw","avatar_url":"https://avatars.githubusercontent.com/u/14847450?v=4","gravatar_id":"","url":"https://api.github.com/users/tavplubix","html_url":"https://github.com/tavplubix","followers_url":"https://api.github.com/users/tavplubix/followers","following_url":"https://api.github.com/users/tavplubix/following{/other_user}","gists_url":"https://api.github.com/users/tavplubix/gists{/gist_id}","starred_url":"https://api.github.com/users/tavplubix/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tavplubix/subscriptions","organizations_url":"https://api.github.com/users/tavplubix/orgs","repos_url":"https://api.github.com/users/tavplubix/repos","events_url":"https://api.github.com/users/tavplubix/events{/privacy}","received_events_url":"https://api.github.com/users/tavplubix/received_events","type":"User","site_admin":false},"labels":[{"id":1955634273,"node_id":"MDU6TGFiZWwxOTU1NjM0Mjcz","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/testing","name":"testing","color":"c9a224","default":false,"description":"Special issue with list of bugs found by CI"}],"state":"open","locked":false,"assignee":{"login":"tavplubix","id":14847450,"node_id":"MDQ6VXNlcjE0ODQ3NDUw","avatar_url":"https://avatars.githubusercontent.com/u/14847450?v=4","gravatar_id":"","url":"https://api.github.com/users/tavplubix","html_url":"https://github.com/tavplubix","followers_url":"https://api.github.com/users/tavplubix/followers","following_url":"https://api.github.com/users/tavplubix/following{/other_user}","gists_url":"https://api.github.com/users/tavplubix/gists{/gist_id}","starred_url":"https://api.github.com/users/tavplubix/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tavplubix/subscriptions","organizations_url":"https://api.github.com/users/tavplubix/orgs","repos_url":"https://api.github.com/users/tavplubix/repos","events_url":"https://api.github.com/users/tavplubix/events{/privacy}","received_events_url":"https://api.github.com/users/tavplubix/received_events","type":"User","site_admin":false},"assignees":[{"login":"tavplubix","id":14847450,"node_id":"MDQ6VXNlcjE0ODQ3NDUw","avatar_url":"https://avatars.githubusercontent.com/u/14847450?v=4","gravatar_id":"","url":"https://api.github.com/users/tavplubix","html_url":"https://github.com/tavplubix","followers_url":"https://api.github.com/users/tavplubix/followers","following_url":"https://api.github.com/users/tavplubix/following{/other_user}","gists_url":"https://api.github.com/users/tavplubix/gists{/gist_id}","starred_url":"https://api.github.com/users/tavplubix/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tavplubix/subscriptions","organizations_url":"https://api.github.com/users/tavplubix/orgs","repos_url":"https://api.github.com/users/tavplubix/repos","events_url":"https://api.github.com/users/tavplubix/events{/privacy}","received_events_url":"https://api.github.com/users/tavplubix/received_events","type":"User","site_admin":false}],"milestone":null,"comments":0,"created_at":"2021-12-21T13:43:51Z","updated_at":"2021-12-21T13:43:58Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"https://s3.amazonaws.com/clickhouse-test-reports/32900/ccbff4e4079268c8b48909b278bae186b568083a/integration_tests__thread__actions__[4/4].html\r\n\r\n```\r\n==================\r\nWARNING: ThreadSanitizer: data race (pid=1)\r\n  Write of size 4 at 0x7b6400081b18 by thread T200:\r\n    #0 uv__async_close obj-x86_64-linux-gnu/../contrib/libuv/src/unix/async.c:102:3 (clickhouse+0x1ceb0b3c)\r\n    #1 uv_close obj-x86_64-linux-gnu/../contrib/libuv/src/unix/core.c:155:5 (clickhouse+0x1cead3e2)\r\n    #2 datastax::internal::core::Async::Handle::~Handle() obj-x86_64-linux-gnu/../contrib/cassandra/src/async.hpp:82:17 (clickhouse+0x1d168608)\r\n    #3 std::__1::__shared_ptr_emplace<datastax::internal::core::Async::Handle, std::__1::allocator<datastax::internal::core::Async::Handle> >::__on_zero_shared() obj-x86_64-linux-gnu/../contrib/libcxx/include/memory:2613:24 (clickhouse+0x1d168608)\r\n    #4 std::__1::__shared_count::__release_shared() obj-x86_64-linux-gnu/../contrib/libcxx/include/memory:2475:9 (clickhouse+0x1d168330)\r\n    #5 std::__1::__shared_weak_count::__release_shared() obj-x86_64-linux-gnu/../contrib/libcxx/include/memory:2517:27 (clickhouse+0x1d168330)\r\n    #6 std::__1::shared_ptr<datastax::internal::core::Async::Handle>::~shared_ptr() obj-x86_64-linux-gnu/../contrib/libcxx/include/memory:3212:19 (clickhouse+0x1d168330)\r\n    #7 datastax::internal::core::Async::send() obj-x86_64-linux-gnu/../contrib/cassandra/src/async.cpp:46:1 (clickhouse+0x1d168330)\r\n    #8 datastax::internal::core::EventLoop::close_handles() obj-x86_64-linux-gnu/../contrib/cassandra/src/event_loop.cpp:100:10 (clickhouse+0x1d165a74)\r\n    #9 datastax::internal::core::RoundRobinEventLoopGroup::close_handles() obj-x86_64-linux-gnu/../contrib/cassandra/src/event_loop.cpp:225:17 (clickhouse+0x1d165a74)\r\n    #10 datastax::internal::core::Session::join() obj-x86_64-linux-gnu/../contrib/cassandra/src/session.cpp:354:24 (clickhouse+0x1d11f9fb)\r\n    #11 datastax::internal::core::Session::~Session() obj-x86_64-linux-gnu/../contrib/cassandra/src/session.cpp:284:3 (clickhouse+0x1d11f9fb)\r\n    #12 datastax::internal::core::Session::~Session() obj-x86_64-linux-gnu/../contrib/cassandra/src/session.cpp:283:21 (clickhouse+0x1d11fd99)\r\n    #13 cass_session_free obj-x86_64-linux-gnu/../contrib/cassandra/src/session.cpp:49:3 (clickhouse+0x1d11d438)\r\n    #14 DB::Cassandra::ObjectHolder<CassSession_, &(cass_session_free), &(cass_session_new)>::~ObjectHolder() obj-x86_64-linux-gnu/../src/Dictionaries/CassandraHelpers.h:45:13 (clickhouse+0x13627828)\r\n    #15 std::__1::allocator<DB::Cassandra::ObjectHolder<CassSession_, &(cass_session_free), &(cass_session_new)> >::destroy(DB::Cassandra::ObjectHolder<CassSession_, &(cass_session_free), &(cass_session_new)>*) obj-x86_64-linux-gnu/../contrib/libcxx/include/memory:891:15 (clickhouse+0x13627828)\r\n    #16 void std::__1::allocator_traits<std::__1::allocator<DB::Cassandra::ObjectHolder<CassSession_, &(cass_session_free), &(cass_session_new)> > >::__destroy<DB::Cassandra::ObjectHolder<CassSession_, &(cass_session_free), &(cass_session_new)> >(std::__1::integral_constant<bool, true>, std::__1::allocator<DB::Cassandra::ObjectHolder<CassSession_, &(cass_session_free), &(cass_session_new)> >&, DB::Cassandra::ObjectHolder<CassSession_, &(cass_session_free), &(cass_session_new)>*) obj-x86_64-linux-gnu/../contrib/libcxx/include/__memory/allocator_traits.h:539:21 (clickhouse+0x13627828)\r\n    #17 void std::__1::allocator_traits<std::__1::allocator<DB::Cassandra::ObjectHolder<CassSession_, &(cass_session_free), &(cass_session_new)> > >::destroy<DB::Cassandra::ObjectHolder<CassSession_, &(cass_session_free), &(cass_session_new)> >(std::__1::allocator<DB::Cassandra::ObjectHolder<CassSession_, &(cass_session_free), &(cass_session_new)> >&, DB::Cassandra::ObjectHolder<CassSession_, &(cass_session_free), &(cass_session_new)>*) obj-x86_64-linux-gnu/../contrib/libcxx/include/__memory/allocator_traits.h:487:14 (clickhouse+0x13627828)\r\n    #18 std::__1::__shared_ptr_emplace<DB::Cassandra::ObjectHolder<CassSession_, &(cass_session_free), &(cass_session_new)>, std::__1::allocator<DB::Cassandra::ObjectHolder<CassSession_, &(cass_session_free), &(cass_session_new)> > >::__on_zero_shared() obj-x86_64-linux-gnu/../contrib/libcxx/include/memory:2611:9 (clickhouse+0x13627828)\r\n    #19 std::__1::__shared_count::__release_shared() obj-x86_64-linux-gnu/../contrib/libcxx/include/memory:2475:9 (clickhouse+0x13626561)\r\n    #20 std::__1::__shared_weak_count::__release_shared() obj-x86_64-linux-gnu/../contrib/libcxx/include/memory:2517:27 (clickhouse+0x13626561)\r\n    #21 std::__1::shared_ptr<DB::Cassandra::ObjectHolder<CassSession_, &(cass_session_free), &(cass_session_new)> >::~shared_ptr() obj-x86_64-linux-gnu/../contrib/libcxx/include/memory:3212:19 (clickhouse+0x13626561)\r\n    #22 DB::CassandraSource::~CassandraSource() obj-x86_64-linux-gnu/../src/Dictionaries/CassandraSource.h:14:7 (clickhouse+0x13626561)\r\n    #23 std::__1::allocator<DB::CassandraSource>::destroy(DB::CassandraSource*) obj-x86_64-linux-gnu/../contrib/libcxx/include/memory:891:15 (clickhouse+0x1362643d)\r\n    #24 void std::__1::allocator_traits<std::__1::allocator<DB::CassandraSource> >::__destroy<DB::CassandraSource>(std::__1::integral_constant<bool, true>, std::__1::allocator<DB::CassandraSource>&, DB::CassandraSource*) obj-x86_64-linux-gnu/../contrib/libcxx/include/__memory/allocator_traits.h:539:21 (clickhouse+0x1362643d)\r\n    #25 void std::__1::allocator_traits<std::__1::allocator<DB::CassandraSource> >::destroy<DB::CassandraSource>(std::__1::allocator<DB::CassandraSource>&, DB::CassandraSource*) obj-x86_64-linux-gnu/../contrib/libcxx/include/__memory/allocator_traits.h:487:14 (clickhouse+0x1362643d)\r\n    #26 std::__1::__shared_ptr_emplace<DB::CassandraSource, std::__1::allocator<DB::CassandraSource> >::__on_zero_shared() obj-x86_64-linux-gnu/../contrib/libcxx/include/memory:2611:9 (clickhouse+0x1362643d)\r\n    #27 std::__1::__shared_count::__release_shared() obj-x86_64-linux-gnu/../contrib/libcxx/include/memory:2475:9 (clickhouse+0x1613bdab)\r\n    #28 std::__1::__shared_weak_count::__release_shared() obj-x86_64-linux-gnu/../contrib/libcxx/include/memory:2517:27 (clickhouse+0x1613bdab)\r\n    #29 std::__1::shared_ptr<DB::IProcessor>::~shared_ptr() obj-x86_64-linux-gnu/../contrib/libcxx/include/memory:3212:19 (clickhouse+0x1613bdab)\r\n    #30 std::__1::allocator<std::__1::shared_ptr<DB::IProcessor> >::destroy(std::__1::shared_ptr<DB::IProcessor>*) obj-x86_64-linux-gnu/../contrib/libcxx/include/memory:891:15 (clickhouse+0x1613bdab)\r\n    #31 void std::__1::allocator_traits<std::__1::allocator<std::__1::shared_ptr<DB::IProcessor> > >::__destroy<std::__1::shared_ptr<DB::IProcessor> >(std::__1::integral_constant<bool, true>, std::__1::allocator<std::__1::shared_ptr<DB::IProcessor> >&, std::__1::shared_ptr<DB::IProcessor>*) obj-x86_64-linux-gnu/../contrib/libcxx/include/__memory/allocator_traits.h:539:21 (clickhouse+0x1613bdab)\r\n    #32 void std::__1::allocator_traits<std::__1::allocator<std::__1::shared_ptr<DB::IProcessor> > >::destroy<std::__1::shared_ptr<DB::IProcessor> >(std::__1::allocator<std::__1::shared_ptr<DB::IProcessor> >&, std::__1::shared_ptr<DB::IProcessor>*) obj-x86_64-linux-gnu/../contrib/libcxx/include/__memory/allocator_traits.h:487:14 (clickhouse+0x1613bdab)\r\n    #33 std::__1::__vector_base<std::__1::shared_ptr<DB::IProcessor>, std::__1::allocator<std::__1::shared_ptr<DB::IProcessor> > >::__destruct_at_end(std::__1::shared_ptr<DB::IProcessor>*) obj-x86_64-linux-gnu/../contrib/libcxx/include/vector:428:9 (clickhouse+0x1613bdab)\r\n    #34 std::__1::__vector_base<std::__1::shared_ptr<DB::IProcessor>, std::__1::allocator<std::__1::shared_ptr<DB::IProcessor> > >::clear() obj-x86_64-linux-gnu/../contrib/libcxx/include/vector:371:29 (clickhouse+0x1613bdab)\r\n    #35 std::__1::__vector_base<std::__1::shared_ptr<DB::IProcessor>, std::__1::allocator<std::__1::shared_ptr<DB::IProcessor> > >::~__vector_base() obj-x86_64-linux-gnu/../contrib/libcxx/include/vector:465:9 (clickhouse+0x1613bdab)\r\n    #36 std::__1::vector<std::__1::shared_ptr<DB::IProcessor>, std::__1::allocator<std::__1::shared_ptr<DB::IProcessor> > >::~vector() obj-x86_64-linux-gnu/../contrib/libcxx/include/vector:557:5 (clickhouse+0x1613bdab)\r\n    #37 DB::QueryPipeline::~QueryPipeline() obj-x86_64-linux-gnu/../src/QueryPipeline/QueryPipeline.cpp:29:31 (clickhouse+0x1613bdab)\r\n    #38 DB::CacheDictionary<(DB::DictionaryKeyType)1>::update(std::__1::shared_ptr<DB::CacheDictionaryUpdateUnit<(DB::DictionaryKeyType)1> >) <null> (clickhouse+0x13c52028)\r\n    #39 void std::__1::__function::__policy_invoker<void (std::__1::shared_ptr<DB::CacheDictionaryUpdateUnit<(DB::DictionaryKeyType)1> >)>::__call_impl<std::__1::__function::__default_alloc_func<DB::CacheDictionary<(DB::DictionaryKeyType)1>::CacheDictionary(DB::StorageID const&, DB::DictionaryStructure const&, std::__1::shared_ptr<DB::IDictionarySource>, std::__1::shared_ptr<DB::ICacheDictionaryStorage>, DB::CacheDictionaryUpdateQueueConfiguration, DB::ExternalLoadableLifetime, bool)::'lambda'(std::__1::shared_ptr<DB::CacheDictionaryUpdateUnit<(DB::DictionaryKeyType)1> >), void (std::__1::shared_ptr<DB::CacheDictionaryUpdateUnit<(DB::DictionaryKeyType)1> >)> >(std::__1::__function::__policy_storage const*, std::__1::shared_ptr<DB::CacheDictionaryUpdateUnit<(DB::DictionaryKeyType)1> >&&) <null> (clickhouse+0x13c54a8f)\r\n    #40 std::__1::__function::__policy_func<void (std::__1::shared_ptr<DB::CacheDictionaryUpdateUnit<(DB::DictionaryKeyType)1> >)>::operator()(std::__1::shared_ptr<DB::CacheDictionaryUpdateUnit<(DB::DictionaryKeyType)1> >&&) const obj-x86_64-linux-gnu/../contrib/libcxx/include/functional:2221:16 (clickhouse+0x13c59268)\r\n    #41 std::__1::function<void (std::__1::shared_ptr<DB::CacheDictionaryUpdateUnit<(DB::DictionaryKeyType)1> >)>::operator()(std::__1::shared_ptr<DB::CacheDictionaryUpdateUnit<(DB::DictionaryKeyType)1> >) const obj-x86_64-linux-gnu/../contrib/libcxx/include/functional:2560:12 (clickhouse+0x13c59268)\r\n    #42 DB::CacheDictionaryUpdateQueue<(DB::DictionaryKeyType)1>::updateThreadFunction() obj-x86_64-linux-gnu/../src/Dictionaries/CacheDictionaryUpdateQueue.cpp:134:13 (clickhouse+0x13c59268)\r\n    #43 DB::CacheDictionaryUpdateQueue<(DB::DictionaryKeyType)1>::CacheDictionaryUpdateQueue(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, DB::CacheDictionaryUpdateQueueConfiguration, std::__1::function<void (std::__1::shared_ptr<DB::CacheDictionaryUpdateUnit<(DB::DictionaryKeyType)1> >)>&&)::'lambda'()::operator()() const obj-x86_64-linux-gnu/../src/Dictionaries/CacheDictionaryUpdateQueue.cpp:32:53 (clickhouse+0x13c5bc21)\r\n    #44 decltype(std::__1::forward<DB::CacheDictionaryUpdateQueue<(DB::DictionaryKeyType)1>::CacheDictionaryUpdateQueue(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, DB::CacheDictionaryUpdateQueueConfiguration, std::__1::function<void (std::__1::shared_ptr<DB::CacheDictionaryUpdateUnit<(DB::DictionaryKeyType)1> >)>&&)::'lambda'()&>(fp)()) std::__1::__invoke<DB::CacheDictionaryUpdateQueue<(DB::DictionaryKeyType)1>::CacheDictionaryUpdateQueue(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, DB::CacheDictionaryUpdateQueueConfiguration, std::__1::function<void (std::__1::shared_ptr<DB::CacheDictionaryUpdateUnit<(DB::DictionaryKeyType)1> >)>&&)::'lambda'()&>(DB::CacheDictionaryUpdateQueue<(DB::DictionaryKeyType)1>::CacheDictionaryUpdateQueue(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, DB::CacheDictionaryUpdateQueueConfiguration, std::__1::function<void (std::__1::shared_ptr<DB::CacheDictionaryUpdateUnit<(DB::DictionaryKeyType)1> >)>&&)::'lambda'()&) obj-x86_64-linux-gnu/../contrib/libcxx/include/type_traits:3676:1 (clickhouse+0x13c5bc21)\r\n    #45 void std::__1::__invoke_void_return_wrapper<void>::__call<DB::CacheDictionaryUpdateQueue<(DB::DictionaryKeyType)1>::CacheDictionaryUpdateQueue(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, DB::CacheDictionaryUpdateQueueConfiguration, std::__1::function<void (std::__1::shared_ptr<DB::CacheDictionaryUpdateUnit<(DB::DictionaryKeyType)1> >)>&&)::'lambda'()&>(DB::CacheDictionaryUpdateQueue<(DB::DictionaryKeyType)1>::CacheDictionaryUpdateQueue(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, DB::CacheDictionaryUpdateQueueConfiguration, std::__1::function<void (std::__1::shared_ptr<DB::CacheDictionaryUpdateUnit<(DB::DictionaryKeyType)1> >)>&&)::'lambda'()&) obj-x86_64-linux-gnu/../contrib/libcxx/include/__functional_base:348:9 (clickhouse+0x13c5bc21)\r\n    #46 std::__1::__function::__default_alloc_func<DB::CacheDictionaryUpdateQueue<(DB::DictionaryKeyType)1>::CacheDictionaryUpdateQueue(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, DB::CacheDictionaryUpdateQueueConfiguration, std::__1::function<void (std::__1::shared_ptr<DB::CacheDictionaryUpdateUnit<(DB::DictionaryKeyType)1> >)>&&)::'lambda'(), void ()>::operator()() obj-x86_64-linux-gnu/../contrib/libcxx/include/functional:1608:12 (clickhouse+0x13c5bc21)\r\n    #47 void std::__1::__function::__policy_invoker<void ()>::__call_impl<std::__1::__function::__default_alloc_func<DB::CacheDictionaryUpdateQueue<(DB::DictionaryKeyType)1>::CacheDictionaryUpdateQueue(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, DB::CacheDictionaryUpdateQueueConfiguration, std::__1::function<void (std::__1::shared_ptr<DB::CacheDictionaryUpdateUnit<(DB::DictionaryKeyType)1> >)>&&)::'lambda'(), void ()> >(std::__1::__function::__policy_storage const*) obj-x86_64-linux-gnu/../contrib/libcxx/include/functional:2089:16 (clickhouse+0x13c5bc21)\r\n    #48 std::__1::__function::__policy_func<void ()>::operator()() const obj-x86_64-linux-gnu/../contrib/libcxx/include/functional:2221:16 (clickhouse+0xa0ed877)\r\n    #49 std::__1::function<void ()>::operator()() const obj-x86_64-linux-gnu/../contrib/libcxx/include/functional:2560:12 (clickhouse+0xa0ed877)\r\n    #50 ThreadPoolImpl<ThreadFromGlobalPool>::worker(std::__1::__list_iterator<ThreadFromGlobalPool, void*>) obj-x86_64-linux-gnu/../src/Common/ThreadPool.cpp:274:17 (clickhouse+0xa0ed877)\r\n    #51 void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()::operator()() const obj-x86_64-linux-gnu/../src/Common/ThreadPool.cpp:139:73 (clickhouse+0xa0efe38)\r\n    #52 decltype(std::__1::forward<void>(fp)()) std::__1::__invoke_constexpr<void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()&>(void&&) obj-x86_64-linux-gnu/../contrib/libcxx/include/type_traits:3682:1 (clickhouse+0xa0efe38)\r\n    #53 decltype(auto) std::__1::__apply_tuple_impl<void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()&, std::__1::tuple<>&>(void&&, std::__1::tuple<>&, std::__1::__tuple_indices<>) obj-x86_64-linux-gnu/../contrib/libcxx/include/tuple:1415:1 (clickhouse+0xa0efe38)\r\n    #54 decltype(auto) std::__1::apply<void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()&, std::__1::tuple<>&>(void&&, std::__1::tuple<>&) obj-x86_64-linux-gnu/../contrib/libcxx/include/tuple:1424:1 (clickhouse+0xa0efe38)\r\n    #55 ThreadFromGlobalPool::ThreadFromGlobalPool<void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>(void&&)::'lambda'()::operator()() obj-x86_64-linux-gnu/../src/Common/ThreadPool.h:188:13 (clickhouse+0xa0efe38)\r\n    #56 decltype(std::__1::forward<void>(fp)()) std::__1::__invoke<ThreadFromGlobalPool::ThreadFromGlobalPool<void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>(void&&)::'lambda'()&>(void&&) obj-x86_64-linux-gnu/../contrib/libcxx/include/type_traits:3676:1 (clickhouse+0xa0efce1)\r\n    #57 void std::__1::__invoke_void_return_wrapper<void>::__call<ThreadFromGlobalPool::ThreadFromGlobalPool<void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>(void&&)::'lambda'()&>(ThreadFromGlobalPool::ThreadFromGlobalPool<void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>(void&&)::'lambda'()&) obj-x86_64-linux-gnu/../contrib/libcxx/include/__functional_base:348:9 (clickhouse+0xa0efce1)\r\n    #58 std::__1::__function::__default_alloc_func<ThreadFromGlobalPool::ThreadFromGlobalPool<void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>(void&&)::'lambda'(), void ()>::operator()() obj-x86_64-linux-gnu/../contrib/libcxx/include/functional:1608:12 (clickhouse+0xa0efce1)\r\n    #59 void std::__1::__function::__policy_invoker<void ()>::__call_impl<std::__1::__function::__default_alloc_func<ThreadFromGlobalPool::ThreadFromGlobalPool<void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>(void&&)::'lambda'(), void ()> >(std::__1::__function::__policy_storage const*) obj-x86_64-linux-gnu/../contrib/libcxx/include/functional:2089:16 (clickhouse+0xa0efce1)\r\n    #60 std::__1::__function::__policy_func<void ()>::operator()() const obj-x86_64-linux-gnu/../contrib/libcxx/include/functional:2221:16 (clickhouse+0xa0eaeed)\r\n    #61 std::__1::function<void ()>::operator()() const obj-x86_64-linux-gnu/../contrib/libcxx/include/functional:2560:12 (clickhouse+0xa0eaeed)\r\n    #62 ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) obj-x86_64-linux-gnu/../src/Common/ThreadPool.cpp:274:17 (clickhouse+0xa0eaeed)\r\n    #63 void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()::operator()() const obj-x86_64-linux-gnu/../src/Common/ThreadPool.cpp:139:73 (clickhouse+0xa0ee6b0)\r\n    #64 decltype(std::__1::forward<void>(fp)()) std::__1::__invoke<void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>(void&&) obj-x86_64-linux-gnu/../contrib/libcxx/include/type_traits:3676:1 (clickhouse+0xa0ee6b0)\r\n    #65 void std::__1::__thread_execute<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>(std::__1::tuple<void, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>&, std::__1::__tuple_indices<>) obj-x86_64-linux-gnu/../contrib/libcxx/include/thread:280:5 (clickhouse+0xa0ee6b0)\r\n    #66 void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()> >(void*) obj-x86_64-linux-gnu/../contrib/libcxx/include/thread:291:5 (clickhouse+0xa0ee6b0)\r\n\r\n  Previous write of size 4 at 0x7b6400081b18 by thread T222:\r\n    #0 uv_check_stop obj-x86_64-linux-gnu/../contrib/libuv/src/unix/loop-watcher.c:67:1 (clickhouse+0x1ceba5e7)\r\n    #1 uv__check_close obj-x86_64-linux-gnu/../contrib/libuv/src/unix/loop-watcher.c:67:1 (clickhouse+0x1ceba5e7)\r\n    #2 uv_close obj-x86_64-linux-gnu/../contrib/libuv/src/unix/core.c:147:5 (clickhouse+0x1cead3ec)\r\n    #3 datastax::internal::core::LoopWatcher<datastax::internal::core::Check, uv_check_s>::close_handle() obj-x86_64-linux-gnu/../contrib/cassandra/src/loop_watcher.hpp:85:9 (clickhouse+0x1d164e58)\r\n    #4 datastax::internal::core::EventLoop::on_task(datastax::internal::core::Async*) obj-x86_64-linux-gnu/../contrib/cassandra/src/event_loop.cpp:194:12 (clickhouse+0x1d164e58)\r\n    #5 datastax::internal::Callback<void, datastax::internal::core::Async*>::MemberInvoker<void (datastax::internal::core::EventLoop::*)(datastax::internal::core::Async*), datastax::internal::core::EventLoop>::invoke(datastax::internal::core::Async* const&) const obj-x86_64-linux-gnu/../contrib/cassandra/src/callback.hpp:91:45 (clickhouse+0x1d1661b4)\r\n    #6 datastax::internal::Callback<void, datastax::internal::core::Async*>::operator()(datastax::internal::core::Async* const&) const obj-x86_64-linux-gnu/../contrib/cassandra/src/callback.hpp:70:57 (clickhouse+0x1d168251)\r\n    #7 datastax::internal::core::Async::on_async(uv_async_s*) obj-x86_64-linux-gnu/../contrib/cassandra/src/async.cpp:60:3 (clickhouse+0x1d168251)\r\n    #8 uv__async_io obj-x86_64-linux-gnu/../contrib/libuv/src/unix/async.c:147:5 (clickhouse+0x1ceb0ed8)\r\n    #9 uv__io_poll obj-x86_64-linux-gnu/../contrib/libuv/src/unix/linux-core.c:442:11 (clickhouse+0x1cec7f6f)\r\n    #10 uv_run obj-x86_64-linux-gnu/../contrib/libuv/src/unix/core.c:375:5 (clickhouse+0x1ceadae6)\r\n    #11 datastax::internal::core::EventLoop::handle_run() obj-x86_64-linux-gnu/../contrib/cassandra/src/event_loop.cpp:168:3 (clickhouse+0x1d1650cf)\r\n    #12 datastax::internal::core::EventLoop::internal_on_run(void*) obj-x86_64-linux-gnu/../contrib/cassandra/src/event_loop.cpp:163:11 (clickhouse+0x1d1650cf)\r\n\r\n  Location is heap block of size 1256 at 0x7b6400081b00 allocated by thread T223:\r\n    #0 malloc <null> (clickhouse+0xa003a0d)\r\n    #1 datastax::internal::Memory::malloc(unsigned long) obj-x86_64-linux-gnu/../contrib/cassandra/src/memory.hpp:36:14 (clickhouse+0x1d06de56)\r\n    #2 datastax::internal::Allocated::operator new[](unsigned long) obj-x86_64-linux-gnu/../contrib/cassandra/src/allocated.cpp:25:55 (clickhouse+0x1d06de56)\r\n    #3 datastax::internal::core::RoundRobinEventLoopGroup::RoundRobinEventLoopGroup(unsigned long) obj-x86_64-linux-gnu/../contrib/cassandra/src/event_loop.hpp:213:18 (clickhouse+0x1d1201ae)\r\n    #4 datastax::internal::core::Session::on_connect(datastax::internal::SharedRefPtr<datastax::internal::core::Host> const&, datastax::internal::core::ProtocolVersion, datastax::internal::Map<datastax::internal::core::Address, datastax::internal::SharedRefPtr<datastax::internal::core::Host>, std::__1::less<datastax::internal::core::Address> > const&, datastax::internal::SharedRefPtr<datastax::internal::core::TokenMap> const&, std::__1::basic_string<char, std::__1::char_traits<char>, datastax::internal::Allocator<char> > const&) obj-x86_64-linux-gnu/../contrib/cassandra/src/session.cpp:372:31 (clickhouse+0x1d1201ae)\r\n    #5 datastax::internal::core::SessionBase::on_initialize(datastax::internal::core::ClusterConnector*) obj-x86_64-linux-gnu/../contrib/cassandra/src/session_base.cpp:202:5 (clickhouse+0x1d1b33d8)\r\n    #6 datastax::internal::Callback<void, datastax::internal::core::ClusterConnector*>::MemberInvoker<void (datastax::internal::core::SessionBase::*)(datastax::internal::core::ClusterConnector*), datastax::internal::core::SessionBase>::invoke(datastax::internal::core::ClusterConnector* const&) const obj-x86_64-linux-gnu/../contrib/cassandra/src/callback.hpp:91:45 (clickhouse+0x1d1b79b4)\r\n    #7 datastax::internal::Callback<void, datastax::internal::core::ClusterConnector*>::operator()(datastax::internal::core::ClusterConnector* const&) const obj-x86_64-linux-gnu/../contrib/cassandra/src/callback.hpp:70:57 (clickhouse+0x1d1ba951)\r\n    #8 datastax::internal::core::ClusterConnector::finish() obj-x86_64-linux-gnu/../contrib/cassandra/src/cluster_connector.cpp:137:3 (clickhouse+0x1d1ba951)\r\n    #9 datastax::internal::core::ClusterConnector::maybe_finish() obj-x86_64-linux-gnu/../contrib/cassandra/src/cluster_connector.cpp:153:5 (clickhouse+0x1d1b9192)\r\n    #10 datastax::internal::core::ClusterConnector::on_connect(datastax::internal::core::ControlConnector*) obj-x86_64-linux-gnu/../contrib/cassandra/src/cluster_connector.cpp:198:5 (clickhouse+0x1d1b9192)\r\n    #11 datastax::internal::Callback<void, datastax::internal::core::ControlConnector*>::MemberInvoker<void (datastax::internal::core::ClusterConnector::*)(datastax::internal::core::ControlConnector*), datastax::internal::core::ClusterConnector>::invoke(datastax::internal::core::ControlConnector* const&) const obj-x86_64-linux-gnu/../contrib/cassandra/src/callback.hpp:91:45 (clickhouse+0x1d1bcfd4)\r\n    #12 datastax::internal::Callback<void, datastax::internal::core::ControlConnector*>::operator()(datastax::internal::core::ControlConnector* const&) const obj-x86_64-linux-gnu/../contrib/cassandra/src/callback.hpp:70:57 (clickhouse+0x1d15f12e)\r\n    #13 datastax::internal::core::ControlConnector::finish() obj-x86_64-linux-gnu/../contrib/cassandra/src/control_connector.cpp:127:3 (clickhouse+0x1d15f12e)\r\n    #14 datastax::internal::core::ControlConnector::on_success() obj-x86_64-linux-gnu/../contrib/cassandra/src/control_connector.cpp:158:3 (clickhouse+0x1d15f3af)\r\n    #15 datastax::internal::core::ControlConnector::handle_query_schema(datastax::internal::core::SchemaConnectorRequestCallback*) obj-x86_64-linux-gnu/../contrib/cassandra/src/control_connector.cpp:298:3 (clickhouse+0x1d163ada)\r\n    #16 datastax::internal::core::SchemaConnectorRequestCallback::on_chain_set() obj-x86_64-linux-gnu/../contrib/cassandra/src/control_connector.cpp:65:45 (clickhouse+0x1d1644cc)\r\n    #17 datastax::internal::core::ChainedRequestCallback::maybe_finish() obj-x86_64-linux-gnu/../contrib/cassandra/src/request_callback.cpp:310:7 (clickhouse+0x1d14e68a)\r\n    #18 datastax::internal::core::ChainedRequestCallback::set_chain_responses(datastax::internal::core::ChainedRequestCallback::Map&) obj-x86_64-linux-gnu/../contrib/cassandra/src/request_callback.cpp:286:3 (clickhouse+0x1d14e59c)\r\n    #19 datastax::internal::core::ChainedRequestCallback::maybe_finish() obj-x86_64-linux-gnu/../contrib/cassandra/src/request_callback.cpp:308:15 (clickhouse+0x1d14e59c)\r\n    #20 datastax::internal::core::ChainedRequestCallback::set_chain_responses(datastax::internal::core::ChainedRequestCallback::Map&) obj-x86_64-linux-gnu/../contrib/cassandra/src/request_callback.cpp:286:3 (clickhouse+0x1d14e59c)\r\n    #21 datastax::internal::core::ChainedRequestCallback::maybe_finish() obj-x86_64-linux-gnu/../contrib/cassandra/src/request_callback.cpp:308:15 (clickhouse+0x1d14e59c)\r\n    #22 datastax::internal::core::ChainedRequestCallback::set_chain_responses(datastax::internal::core::ChainedRequestCallback::Map&) obj-x86_64-linux-gnu/../contrib/cassandra/src/request_callback.cpp:286:3 (clickhouse+0x1d14e59c)\r\n    #23 datastax::internal::core::ChainedRequestCallback::maybe_finish() obj-x86_64-linux-gnu/../contrib/cassandra/src/request_callback.cpp:308:15 (clickhouse+0x1d14e59c)\r\n    #24 datastax::internal::core::ChainedRequestCallback::on_internal_set(datastax::internal::core::ResponseMessage*) obj-x86_64-linux-gnu/../contrib/cassandra/src/request_callback.cpp:259:3 (clickhouse+0x1d14e3de)\r\n    #25 datastax::internal::core::SimpleRequestCallback::on_set(datastax::internal::core::ResponseMessage*) obj-x86_64-linux-gnu/../contrib/cassandra/src/request_callback.cpp:190:3 (clickhouse+0x1d14d652)\r\n    #26 datastax::internal::core::Connection::on_read(char const*, unsigned long) obj-x86_64-linux-gnu/../contrib/cassandra/src/connection.cpp:274:25 (clickhouse+0x1d157efa)\r\n    #27 datastax::internal::core::ConnectionHandler::on_read(datastax::internal::core::Socket*, long, uv_buf_t const*) obj-x86_64-linux-gnu/../contrib/cassandra/src/connection.cpp:75:16 (clickhouse+0x1d15731f)\r\n    #28 datastax::internal::core::Socket::handle_read(long, uv_buf_t const*) obj-x86_64-linux-gnu/../contrib/cassandra/src/socket.cpp:368:13 (clickhouse+0x1d1c0e95)\r\n    #29 datastax::internal::core::Socket::on_read(uv_stream_s*, long, uv_buf_t const*) obj-x86_64-linux-gnu/../contrib/cassandra/src/socket.cpp:358:11 (clickhouse+0x1d1c0e95)\r\n    #30 uv__read obj-x86_64-linux-gnu/../contrib/libuv/src/unix/stream.c:1243:7 (clickhouse+0x1cec0a45)\r\n    #31 uv__stream_io obj-x86_64-linux-gnu/../contrib/libuv/src/unix/stream.c:1310:5 (clickhouse+0x1cec0a45)\r\n    #32 uv__io_poll obj-x86_64-linux-gnu/../contrib/libuv/src/unix/linux-core.c:442:11 (clickhouse+0x1cec7f6f)\r\n    #33 uv_run obj-x86_64-linux-gnu/../contrib/libuv/src/unix/core.c:375:5 (clickhouse+0x1ceadae6)\r\n    #34 datastax::internal::core::EventLoop::handle_run() obj-x86_64-linux-gnu/../contrib/cassandra/src/event_loop.cpp:168:3 (clickhouse+0x1d1650cf)\r\n    #35 datastax::internal::core::EventLoop::internal_on_run(void*) obj-x86_64-linux-gnu/../contrib/cassandra/src/event_loop.cpp:163:11 (clickhouse+0x1d1650cf)\r\n\r\n  Thread T200 'UpdQueue' (tid=207, running) created by thread T199 at:\r\n    #0 pthread_create <null> (clickhouse+0xa00509d)\r\n    #1 std::__1::__libcpp_thread_create(unsigned long*, void* (*)(void*), void*) obj-x86_64-linux-gnu/../contrib/libcxx/include/__threading_support:509:10 (clickhouse+0xa0ee126)\r\n    #2 std::__1::thread::thread<void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'(), void>(void&&) obj-x86_64-linux-gnu/../contrib/libcxx/include/thread:307:16 (clickhouse+0xa0ee126)\r\n    #3 void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>) obj-x86_64-linux-gnu/../src/Common/ThreadPool.cpp:139:35 (clickhouse+0xa0e9554)\r\n    #4 ThreadPoolImpl<std::__1::thread>::scheduleOrThrow(std::__1::function<void ()>, int, unsigned long) obj-x86_64-linux-gnu/../src/Common/ThreadPool.cpp:171:5 (clickhouse+0xa0ef8af)\r\n    #5 ThreadFromGlobalPool::ThreadFromGlobalPool<void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>(void&&) obj-x86_64-linux-gnu/../src/Common/ThreadPool.h:169:38 (clickhouse+0xa0ef8af)\r\n    #6 void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>) obj-x86_64-linux-gnu/../src/Common/ThreadPool.cpp:139:35 (clickhouse+0xa0ebae6)\r\n    #7 ThreadPoolImpl<ThreadFromGlobalPool>::scheduleOrThrowOnError(std::__1::function<void ()>, int) obj-x86_64-linux-gnu/../src/Common/ThreadPool.cpp:159:5 (clickhouse+0xa0eb6bf)\r\n    #8 DB::CacheDictionaryUpdateQueue<(DB::DictionaryKeyType)1>::CacheDictionaryUpdateQueue(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, DB::CacheDictionaryUpdateQueueConfiguration, std::__1::function<void (std::__1::shared_ptr<DB::CacheDictionaryUpdateUnit<(DB::DictionaryKeyType)1> >)>&&) obj-x86_64-linux-gnu/../src/Dictionaries/CacheDictionaryUpdateQueue.cpp:32:21 (clickhouse+0x13c58239)\r\n    #9 DB::CacheDictionary<(DB::DictionaryKeyType)1>::CacheDictionary(DB::StorageID const&, DB::DictionaryStructure const&, std::__1::shared_ptr<DB::IDictionarySource>, std::__1::shared_ptr<DB::ICacheDictionaryStorage>, DB::CacheDictionaryUpdateQueueConfiguration, DB::ExternalLoadableLifetime, bool) <null> (clickhouse+0x13c483c8)\r\n    #10 std::__1::__unique_if<DB::CacheDictionary<(DB::DictionaryKeyType)1> >::__unique_single std::__1::make_unique<DB::CacheDictionary<(DB::DictionaryKeyType)1>, DB::StorageID const&, DB::DictionaryStructure const&, std::__1::shared_ptr<DB::IDictionarySource>, std::__1::shared_ptr<DB::ICacheDictionaryStorage>, DB::CacheDictionaryUpdateQueueConfiguration&, DB::ExternalLoadableLifetime const&, bool const&>(DB::StorageID const&, DB::DictionaryStructure const&, std::__1::shared_ptr<DB::IDictionarySource>&&, std::__1::shared_ptr<DB::ICacheDictionaryStorage>&&, DB::CacheDictionaryUpdateQueueConfiguration&, DB::ExternalLoadableLifetime const&, bool const&) obj-x86_64-linux-gnu/../contrib/libcxx/include/memory:2068:32 (clickhouse+0x13c0ee8c)\r\n    #11 std::__1::unique_ptr<DB::IDictionary, std::__1::default_delete<DB::IDictionary> > DB::createCacheDictionaryLayout<(DB::DictionaryKeyType)1, false>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::DictionaryStructure const&, Poco::Util::AbstractConfiguration const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::shared_ptr<DB::IDictionarySource>, std::__1::shared_ptr<DB::Context const>, bool) obj-x86_64-linux-gnu/../src/Dictionaries/registerCacheDictionaries.cpp:224:23 (clickhouse+0x13c0ee8c)\r\n    #12 DB::registerDictionaryCache(DB::DictionaryFactory&)::$_1::operator()(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::DictionaryStructure const&, Poco::Util::AbstractConfiguration const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::shared_ptr<DB::IDictionarySource>, std::__1::shared_ptr<DB::Context const>, bool) const obj-x86_64-linux-gnu/../src/Dictionaries/registerCacheDictionaries.cpp:259:16 (clickhouse+0x13bf9369)\r\n    #13 decltype(std::__1::forward<DB::registerDictionaryCache(DB::DictionaryFactory&)::$_1&>(fp)(std::__1::forward<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&>(fp0), std::__1::forward<DB::DictionaryStructure const&>(fp0), std::__1::forward<Poco::Util::AbstractConfiguration const&>(fp0), std::__1::forward<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&>(fp0), std::__1::forward<std::__1::shared_ptr<DB::IDictionarySource> >(fp0), std::__1::forward<std::__1::shared_ptr<DB::Context const> >(fp0), std::__1::forward<bool>(fp0))) std::__1::__invoke<DB::registerDictionaryCache(DB::DictionaryFactory&)::$_1&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::DictionaryStructure const&, Poco::Util::AbstractConfiguration const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::shared_ptr<DB::IDictionarySource>, std::__1::shared_ptr<DB::Context const>, bool>(DB::registerDictionaryCache(DB::DictionaryFactory&)::$_1&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::DictionaryStructure const&, Poco::Util::AbstractConfiguration const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::shared_ptr<DB::IDictionarySource>&&, std::__1::shared_ptr<DB::Context const>&&, bool&&) obj-x86_64-linux-gnu/../contrib/libcxx/include/type_traits:3676:1 (clickhouse+0x13bf9369)\r\n    #14 std::__1::unique_ptr<DB::IDictionary, std::__1::default_delete<DB::IDictionary> > std::__1::__invoke_void_return_wrapper<std::__1::unique_ptr<DB::IDictionary, std::__1::default_delete<DB::IDictionary> > >::__call<DB::registerDictionaryCache(DB::DictionaryFactory&)::$_1&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::DictionaryStructure const&, Poco::Util::AbstractConfiguration const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::shared_ptr<DB::IDictionarySource>, std::__1::shared_ptr<DB::Context const>, bool>(DB::registerDictionaryCache(DB::DictionaryFactory&)::$_1&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::DictionaryStructure const&, Poco::Util::AbstractConfiguration const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::shared_ptr<DB::IDictionarySource>&&, std::__1::shared_ptr<DB::Context const>&&, bool&&) obj-x86_64-linux-gnu/../contrib/libcxx/include/__functional_base:317:16 (clickhouse+0x13bf9369)\r\n    #15 std::__1::__function::__default_alloc_func<DB::registerDictionaryCache(DB::DictionaryFactory&)::$_1, std::__1::unique_ptr<DB::IDictionary, std::__1::default_delete<DB::IDictionary> > (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::DictionaryStructure const&, Poco::Util::AbstractConfiguration const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::shared_ptr<DB::IDictionarySource>, std::__1::shared_ptr<DB::Context const>, bool)>::operator()(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::DictionaryStructure const&, Poco::Util::AbstractConfiguration const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::shared_ptr<DB::IDictionarySource>&&, std::__1::shared_ptr<DB::Context const>&&, bool&&) obj-x86_64-linux-gnu/../contrib/libcxx/include/functional:1608:12 (clickhouse+0x13bf9369)\r\n    #16 std::__1::unique_ptr<DB::IDictionary, std::__1::default_delete<DB::IDictionary> > std::__1::__function::__policy_invoker<std::__1::unique_ptr<DB::IDictionary, std::__1::default_delete<DB::IDictionary> > (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::DictionaryStructure const&, Poco::Util::AbstractConfiguration const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::shared_ptr<DB::IDictionarySource>, std::__1::shared_ptr<DB::Context const>, bool)>::__call_impl<std::__1::__function::__default_alloc_func<DB::registerDictionaryCache(DB::DictionaryFactory&)::$_1, std::__1::unique_ptr<DB::IDictionary, std::__1::default_delete<DB::IDictionary> > (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::DictionaryStructure const&, Poco::Util::AbstractConfiguration const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::shared_ptr<DB::IDictionarySource>, std::__1::shared_ptr<DB::Context const>, bool)> >(std::__1::__function::__policy_storage const*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::DictionaryStructure const&, Poco::Util::AbstractConfiguration const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::shared_ptr<DB::IDictionarySource>&&, std::__1::shared_ptr<DB::Context const>&&, bool) obj-x86_64-linux-gnu/../contrib/libcxx/include/functional:2089:16 (clickhouse+0x13bf9369)\r\n    #17 std::__1::__function::__policy_func<std::__1::unique_ptr<DB::IDictionary, std::__1::default_delete<DB::IDictionary> > (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::DictionaryStructure const&, Poco::Util::AbstractConfiguration const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::shared_ptr<DB::IDictionarySource>, std::__1::shared_ptr<DB::Context const>, bool)>::operator()(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::DictionaryStructure const&, Poco::Util::AbstractConfiguration const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::shared_ptr<DB::IDictionarySource>&&, std::__1::shared_ptr<DB::Context const>&&, bool&&) const obj-x86_64-linux-gnu/../contrib/libcxx/include/functional:2221:16 (clickhouse+0x15d88bb6)\r\n    #18 std::__1::function<std::__1::unique_ptr<DB::IDictionary, std::__1::default_delete<DB::IDictionary> > (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::DictionaryStructure const&, Poco::Util::AbstractConfiguration const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::shared_ptr<DB::IDictionarySource>, std::__1::shared_ptr<DB::Context const>, bool)>::operator()(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::DictionaryStructure const&, Poco::Util::AbstractConfiguration const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::shared_ptr<DB::IDictionarySource>, std::__1::shared_ptr<DB::Context const>, bool) const obj-x86_64-linux-gnu/../contrib/libcxx/include/functional:2560:12 (clickhouse+0x15d88bb6)\r\n    #19 DB::DictionaryFactory::create(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, Poco::Util::AbstractConfiguration const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::shared_ptr<DB::Context const>, bool) const obj-x86_64-linux-gnu/../src/Dictionaries/DictionaryFactory.cpp:58:27 (clickhouse+0x15d87e31)\r\n    #20 DB::ExternalDictionariesLoader::create(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, Poco::Util::AbstractConfiguration const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const obj-x86_64-linux-gnu/../src/Interpreters/ExternalDictionariesLoader.cpp:40:42 (clickhouse+0x16578202)\r\n    #21 DB::ExternalLoader::createObject(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::ExternalLoader::ObjectConfig const&, std::__1::shared_ptr<DB::IExternalLoadable const> const&) const obj-x86_64-linux-gnu/../src/Interpreters/ExternalLoader.cpp:1515:12 (clickhouse+0x1657c3c7)\r\n    #22 auto DB::ExternalLoader::ExternalLoader(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, Poco::Logger*)::$_1::operator()<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::ExternalLoader::ObjectConfig const&, std::__1::shared_ptr<DB::IExternalLoadable const> const&>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::ExternalLoader::ObjectConfig const&, std::__1::shared_ptr<DB::IExternalLoadable const> const&) const obj-x86_64-linux-gnu/../src/Interpreters/ExternalLoader.cpp:1280:60 (clickhouse+0x1657c3c7)\r\n    #23 decltype(std::__1::forward<DB::ExternalLoader::ExternalLoader(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, Poco::Logger*)::$_1&>(fp)(std::__1::forward<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&>(fp0), std::__1::forward<DB::ExternalLoader::ObjectConfig const&>(fp0), std::__1::forward<std::__1::shared_ptr<DB::IExternalLoadable const> const&>(fp0))) std::__1::__invoke<DB::ExternalLoader::ExternalLoader(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, Poco::Logger*)::$_1&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::ExternalLoader::ObjectConfig const&, std::__1::shared_ptr<DB::IExternalLoadable const> const&>(DB::ExternalLoader::ExternalLoader(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, Poco::Logger*)::$_1&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::ExternalLoader::ObjectConfig const&, std::__1::shared_ptr<DB::IExternalLoadable const> const&) obj-x86_64-linux-gnu/../contrib/libcxx/include/type_traits:3676:1 (clickhouse+0x1657c3c7)\r\n    #24 std::__1::shared_ptr<DB::IExternalLoadable const> std::__1::__invoke_void_return_wrapper<std::__1::shared_ptr<DB::IExternalLoadable const> >::__call<DB::ExternalLoader::ExternalLoader(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, Poco::Logger*)::$_1&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::ExternalLoader::ObjectConfig const&, std::__1::shared_ptr<DB::IExternalLoadable const> const&>(DB::ExternalLoader::ExternalLoader(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, Poco::Logger*)::$_1&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::ExternalLoader::ObjectConfig const&, std::__1::shared_ptr<DB::IExternalLoadable const> const&) obj-x86_64-linux-gnu/../contrib/libcxx/include/__functional_base:317:16 (clickhouse+0x1657c3c7)\r\n    #25 std::__1::__function::__default_alloc_func<DB::ExternalLoader::ExternalLoader(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, Poco::Logger*)::$_1, std::__1::shared_ptr<DB::IExternalLoadable const> (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::ExternalLoader::ObjectConfig const&, std::__1::shared_ptr<DB::IExternalLoadable const> const&)>::operator()(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::ExternalLoader::ObjectConfig const&, std::__1::shared_ptr<DB::IExternalLoadable const> const&) obj-x86_64-linux-gnu/../contrib/libcxx/include/functional:1608:12 (clickhouse+0x1657c3c7)\r\n    #26 std::__1::shared_ptr<DB::IExternalLoadable const> std::__1::__function::__policy_invoker<std::__1::shared_ptr<DB::IExternalLoadable const> (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::ExternalLoader::ObjectConfig const&, std::__1::shared_ptr<DB::IExternalLoadable const> const&)>::__call_impl<std::__1::__function::__default_alloc_func<DB::ExternalLoader::ExternalLoader(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, Poco::Logger*)::$_1, std::__1::shared_ptr<DB::IExternalLoadable const> (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::ExternalLoader::ObjectConfig const&, std::__1::shared_ptr<DB::IExternalLoadable const> const&)> >(std::__1::__function::__policy_storage const*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::ExternalLoader::ObjectConfig const&, std::__1::shared_ptr<DB::IExternalLoadable const> const&) obj-x86_64-linux-gnu/../contrib/libcxx/include/functional:2089:16 (clickhouse+0x1657c3c7)\r\n    #27 std::__1::__function::__policy_func<std::__1::shared_ptr<DB::IExternalLoadable const> (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::ExternalLoader::ObjectConfig const&, std::__1::shared_ptr<DB::IExternalLoadable const> const&)>::operator()(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::ExternalLoader::ObjectConfig const&, std::__1::shared_ptr<DB::IExternalLoadable const> const&) const obj-x86_64-linux-gnu/../contrib/libcxx/include/functional:2221:16 (clickhouse+0x16585256)\r\n    #28 std::__1::function<std::__1::shared_ptr<DB::IExternalLoadable const> (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::ExternalLoader::ObjectConfig const&, std::__1::shared_ptr<DB::IExternalLoadable const> const&)>::operator()(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::ExternalLoader::ObjectConfig const&, std::__1::shared_ptr<DB::IExternalLoadable const> const&) const obj-x86_64-linux-gnu/../contrib/libcxx/include/functional:2560:12 (clickhouse+0x16585256)\r\n    #29 DB::ExternalLoader::LoadingDispatcher::loadSingleObject(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::ExternalLoader::ObjectConfig const&, std::__1::shared_ptr<DB::IExternalLoadable const>) obj-x86_64-linux-gnu/../src/Interpreters/ExternalLoader.cpp:1043:26 (clickhouse+0x16585256)\r\n    #30 DB::ExternalLoader::LoadingDispatcher::doLoading(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned long, bool, unsigned long, bool, std::__1::shared_ptr<DB::ThreadGroupStatus>) obj-x86_64-linux-gnu/../src/Interpreters/ExternalLoader.cpp:998:48 (clickhouse+0x165825ba)\r\n    #31 decltype(*(std::__1::forward<DB::ExternalLoader::LoadingDispatcher*&>(fp0)).*fp(std::__1::forward<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&>(fp1), std::__1::forward<unsigned long&>(fp1), std::__1::forward<bool&>(fp1), std::__1::forward<unsigned long&>(fp1), std::__1::forward<bool&>(fp1), std::__1::forward<std::__1::shared_ptr<DB::ThreadGroupStatus>&>(fp1))) std::__1::__invoke_constexpr<void (DB::ExternalLoader::LoadingDispatcher::*&)(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned long, bool, unsigned long, bool, std::__1::shared_ptr<DB::ThreadGroupStatus>), DB::ExternalLoader::LoadingDispatcher*&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&, unsigned long&, bool&, unsigned long&, bool&, std::__1::shared_ptr<DB::ThreadGroupStatus>&, void>(void (DB::ExternalLoader::LoadingDispatcher::*&)(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned long, bool, unsigned long, bool, std::__1::shared_ptr<DB::ThreadGroupStatus>), DB::ExternalLoader::LoadingDispatcher*&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&, unsigned long&, bool&, unsigned long&, bool&, std::__1::shared_ptr<DB::ThreadGroupStatus>&) obj-x86_64-linux-gnu/../contrib/libcxx/include/type_traits:3624:1 (clickhouse+0x16588bff)\r\n    #32 decltype(auto) std::__1::__apply_tuple_impl<void (DB::ExternalLoader::LoadingDispatcher::*&)(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned long, bool, unsigned long, bool, std::__1::shared_ptr<DB::ThreadGroupStatus>), std::__1::tuple<DB::ExternalLoader::LoadingDispatcher*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, unsigned long, bool, unsigned long, bool, std::__1::shared_ptr<DB::ThreadGroupStatus> >&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul>(void (DB::ExternalLoader::LoadingDispatcher::*&)(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned long, bool, unsigned long, bool, std::__1::shared_ptr<DB::ThreadGroupStatus>), std::__1::tuple<DB::ExternalLoader::LoadingDispatcher*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, unsigned long, bool, unsigned long, bool, std::__1::shared_ptr<DB::ThreadGroupStatus> >&, std::__1::__tuple_indices<0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul>) obj-x86_64-linux-gnu/../contrib/libcxx/include/tuple:1415:1 (clickhouse+0x16588bff)\r\n    #33 decltype(auto) std::__1::apply<void (DB::ExternalLoader::LoadingDispatcher::*&)(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned long, bool, unsigned long, bool, std::__1::shared_ptr<DB::ThreadGroupStatus>), std::__1::tuple<DB::ExternalLoader::LoadingDispatcher*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, unsigned long, bool, unsigned long, bool, std::__1::shared_ptr<DB::ThreadGroupStatus> >&>(void (DB::ExternalLoader::LoadingDispatcher::*&)(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned long, bool, unsigned long, bool, std::__1::shared_ptr<DB::ThreadGroupStatus>), std::__1::tuple<DB::ExternalLoader::LoadingDispatcher*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, unsigned long, bool, unsigned long, bool, std::__1::shared_ptr<DB::ThreadGroupStatus> >&) obj-x86_64-linux-gnu/../contrib/libcxx/include/tuple:1424:1 (clickhouse+0x16588bff)\r\n    #34 ThreadFromGlobalPool::ThreadFromGlobalPool<void (DB::ExternalLoader::LoadingDispatcher::*)(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned long, bool, unsigned long, bool, std::__1::shared_ptr<DB::ThreadGroupStatus>), DB::ExternalLoader::LoadingDispatcher*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&, unsigned long&, bool&, unsigned long&, bool, std::__1::shared_ptr<DB::ThreadGroupStatus> >(void (DB::ExternalLoader::LoadingDispatcher::*&&)(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned long, bool, unsigned long, bool, std::__1::shared_ptr<DB::ThreadGroupStatus>), DB::ExternalLoader::LoadingDispatcher*&&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&, unsigned long&, bool&, unsigned long&, bool&&, std::__1::shared_ptr<DB::ThreadGroupStatus>&&)::'lambda'()::operator()() obj-x86_64-linux-gnu/../src/Common/ThreadPool.h:188:13 (clickhouse+0x16588bff)\r\n    #35 decltype(std::__1::forward<void (DB::ExternalLoader::LoadingDispatcher::*)(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned long, bool, unsigned long, bool, std::__1::shared_ptr<DB::ThreadGroupStatus>)>(fp)(std::__1::forward<DB::ExternalLoader::LoadingDispatcher*>(fp0), std::__1::forward<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&>(fp0), std::__1::forward<unsigned long&>(fp0), std::__1::forward<bool&>(fp0), std::__1::forward<unsigned long&>(fp0), std::__1::forward<bool>(fp0), std::__1::forward<std::__1::shared_ptr<DB::ThreadGroupStatus> >(fp0))) std::__1::__invoke<ThreadFromGlobalPool::ThreadFromGlobalPool<void (DB::ExternalLoader::LoadingDispatcher::*)(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned long, bool, unsigned long, bool, std::__1::shared_ptr<DB::ThreadGroupStatus>), DB::ExternalLoader::LoadingDispatcher*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&, unsigned long&, bool&, unsigned long&, bool, std::__1::shared_ptr<DB::ThreadGroupStatus> >(void (DB::ExternalLoader::LoadingDispatcher::*&&)(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned long, bool, unsigned long, bool, std::__1::shared_ptr<DB::ThreadGroupStatus>), DB::ExternalLoader::LoadingDispatcher*&&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&, unsigned long&, bool&, unsigned long&, bool&&, std::__1::shared_ptr<DB::ThreadGroupStatus>&&)::'lambda'()&>(void (DB::ExternalLoader::LoadingDispatcher::*&&)(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned long, bool, unsigned long, bool, std::__1::shared_ptr<DB::ThreadGroupStatus>), DB::ExternalLoader::LoadingDispatcher*&&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&, unsigned long&, bool&, unsigned long&, bool&&, std::__1::shared_ptr<DB::ThreadGroupStatus>&&) obj-x86_64-linux-gnu/../contrib/libcxx/include/type_traits:3676:1 (clickhouse+0x16588961)\r\n    #36 void std::__1::__invoke_void_return_wrapper<void>::__call<ThreadFromGlobalPool::ThreadFromGlobalPool<void (DB::ExternalLoader::LoadingDispatcher::*)(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned long, bool, unsigned long, bool, std::__1::shared_ptr<DB::ThreadGroupStatus>), DB::ExternalLoader::LoadingDispatcher*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&, unsigned long&, bool&, unsigned long&, bool, std::__1::shared_ptr<DB::ThreadGroupStatus> >(void (DB::ExternalLoader::LoadingDispatcher::*&&)(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned long, bool, unsigned long, bool, std::__1::shared_ptr<DB::ThreadGroupStatus>), DB::ExternalLoader::LoadingDispatcher*&&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&, unsigned long&, bool&, unsigned long&, bool&&, std::__1::shared_ptr<DB::ThreadGroupStatus>&&)::'lambda'()&>(ThreadFromGlobalPool::ThreadFromGlobalPool<void (DB::ExternalLoader::LoadingDispatcher::*)(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned long, bool, unsigned long, bool, std::__1::shared_ptr<DB::ThreadGroupStatus>), DB::ExternalLoader::LoadingDispatcher*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&, unsigned long&, bool&, unsigned long&, bool, std::__1::shared_ptr<DB::ThreadGroupStatus> >(void (DB::ExternalLoader::LoadingDispatcher::*&&)(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned long, bool, unsigned long, bool, std::__1::shared_ptr<DB::ThreadGroupStatus>), DB::ExternalLoader::LoadingDispatcher*&&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&, unsigned long&, bool&, unsigned long&, bool&&, std::__1::shared_ptr<DB::ThreadGroupStatus>&&)::'lambda'()&) obj-x86_64-linux-gnu/../contrib/libcxx/include/__functional_base:348:9 (clickhouse+0x16588961)\r\n    #37 std::__1::__function::__default_alloc_func<ThreadFromGlobalPool::ThreadFromGlobalPool<void (DB::ExternalLoader::LoadingDispatcher::*)(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned long, bool, unsigned long, bool, std::__1::shared_ptr<DB::ThreadGroupStatus>), DB::ExternalLoader::LoadingDispatcher*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&, unsigned long&, bool&, unsigned long&, bool, std::__1::shared_ptr<DB::ThreadGroupStatus> >(void (DB::ExternalLoader::LoadingDispatcher::*&&)(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned long, bool, unsigned long, bool, std::__1::shared_ptr<DB::ThreadGroupStatus>), DB::ExternalLoader::LoadingDispatcher*&&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&, unsigned long&, bool&, unsigned long&, bool&&, std::__1::shared_ptr<DB::ThreadGroupStatus>&&)::'lambda'(), void ()>::operator()() obj-x86_64-linux-gnu/../contrib/libcxx/include/functional:1608:12 (clickhouse+0x16588961)\r\n    #38 void std::__1::__function::__policy_invoker<void ()>::__call_impl<std::__1::__function::__default_alloc_func<ThreadFromGlobalPool::ThreadFromGlobalPool<void (DB::ExternalLoader::LoadingDispatcher::*)(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned long, bool, unsigned long, bool, std::__1::shared_ptr<DB::ThreadGroupStatus>), DB::ExternalLoader::LoadingDispatcher*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&, unsigned long&, bool&, unsigned long&, bool, std::__1::shared_ptr<DB::ThreadGroupStatus> >(void (DB::ExternalLoader::LoadingDispatcher::*&&)(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned long, bool, unsigned long, bool, std::__1::shared_ptr<DB::ThreadGroupStatus>), DB::ExternalLoader::LoadingDispatcher*&&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&, unsigned long&, bool&, unsigned long&, bool&&, std::__1::shared_ptr<DB::ThreadGroupStatus>&&)::'lambda'(), void ()> >(std::__1::__function::__policy_storage const*) obj-x86_64-linux-gnu/../contrib/libcxx/include/functional:2089:16 (clickhouse+0x16588961)\r\n    #39 std::__1::__function::__policy_func<void ()>::operator()() const obj-x86_64-linux-gnu/../contrib/libcxx/include/functional:2221:16 (clickhouse+0xa0eaeed)\r\n    #40 std::__1::function<void ()>::operator()() const obj-x86_64-linux-gnu/../contrib/libcxx/include/functional:2560:12 (clickhouse+0xa0eaeed)\r\n    #41 ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) obj-x86_64-linux-gnu/../src/Common/ThreadPool.cpp:274:17 (clickhouse+0xa0eaeed)\r\n    #42 void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()::operator()() const obj-x86_64-linux-gnu/../src/Common/ThreadPool.cpp:139:73 (clickhouse+0xa0ee6b0)\r\n    #43 decltype(std::__1::forward<void>(fp)()) std::__1::__invoke<void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>(void&&) obj-x86_64-linux-gnu/../contrib/libcxx/include/type_traits:3676:1 (clickhouse+0xa0ee6b0)\r\n    #44 void std::__1::__thread_execute<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>(std::__1::tuple<void, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>&, std::__1::__tuple_indices<>) obj-x86_64-linux-gnu/../contrib/libcxx/include/thread:280:5 (clickhouse+0xa0ee6b0)\r\n    #45 void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()> >(void*) obj-x86_64-linux-gnu/../contrib/libcxx/include/thread:291:5 (clickhouse+0xa0ee6b0)\r\n\r\n  Thread T222 (tid=248, running) created by thread T223 at:\r\n    #0 pthread_create <null> (clickhouse+0xa00509d)\r\n    #1 uv_thread_create_ex obj-x86_64-linux-gnu/../contrib/libuv/src/unix/thread.c:258:9 (clickhouse+0x1cec406b)\r\n    #2 uv_thread_create obj-x86_64-linux-gnu/../contrib/libuv/src/unix/thread.c:212:10 (clickhouse+0x1cec3f57)\r\n    #3 datastax::internal::core::EventLoop::run() obj-x86_64-linux-gnu/../contrib/cassandra/src/event_loop.cpp:93:12 (clickhouse+0x1d165985)\r\n    #4 datastax::internal::core::RoundRobinEventLoopGroup::run() obj-x86_64-linux-gnu/../contrib/cassandra/src/event_loop.cpp:217:26 (clickhouse+0x1d165985)\r\n    #5 datastax::internal::core::Session::on_connect(datastax::internal::SharedRefPtr<datastax::internal::core::Host> const&, datastax::internal::core::ProtocolVersion, datastax::internal::Map<datastax::internal::core::Address, datastax::internal::SharedRefPtr<datastax::internal::core::Host>, std::__1::less<datastax::internal::core::Address> > const&, datastax::internal::SharedRefPtr<datastax::internal::core::TokenMap> const&, std::__1::basic_string<char, std::__1::char_traits<char>, datastax::internal::Allocator<char> > const&) obj-x86_64-linux-gnu/../contrib/cassandra/src/session.cpp:379:27 (clickhouse+0x1d120412)\r\n    #6 datastax::internal::core::SessionBase::on_initialize(datastax::internal::core::ClusterConnector*) obj-x86_64-linux-gnu/../contrib/cassandra/src/session_base.cpp:202:5 (clickhouse+0x1d1b33d8)\r\n    #7 datastax::internal::Callback<void, datastax::internal::core::ClusterConnector*>::MemberInvoker<void (datastax::internal::core::SessionBase::*)(datastax::internal::core::ClusterConnector*), datastax::internal::core::SessionBase>::invoke(datastax::internal::core::ClusterConnector* const&) const obj-x86_64-linux-gnu/../contrib/cassandra/src/callback.hpp:91:45 (clickhouse+0x1d1b79b4)\r\n    #8 datastax::internal::Callback<void, datastax::internal::core::ClusterConnector*>::operator()(datastax::internal::core::ClusterConnector* const&) const obj-x86_64-linux-gnu/../contrib/cassandra/src/callback.hpp:70:57 (clickhouse+0x1d1ba951)\r\n    #9 datastax::internal::core::ClusterConnector::finish() obj-x86_64-linux-gnu/../contrib/cassandra/src/cluster_connector.cpp:137:3 (clickhouse+0x1d1ba951)\r\n    #10 datastax::internal::core::ClusterConnector::maybe_finish() obj-x86_64-linux-gnu/../contrib/cassandra/src/cluster_connector.cpp:153:5 (clickhouse+0x1d1b9192)\r\n    #11 datastax::internal::core::ClusterConnector::on_connect(datastax::internal::core::ControlConnector*) obj-x86_64-linux-gnu/../contrib/cassandra/src/cluster_connector.cpp:198:5 (clickhouse+0x1d1b9192)\r\n    #12 datastax::internal::Callback<void, datastax::internal::core::ControlConnector*>::MemberInvoker<void (datastax::internal::core::ClusterConnector::*)(datastax::internal::core::ControlConnector*), datastax::internal::core::ClusterConnector>::invoke(datastax::internal::core::ControlConnector* const&) const obj-x86_64-linux-gnu/../contrib/cassandra/src/callback.hpp:91:45 (clickhouse+0x1d1bcfd4)\r\n    #13 datastax::internal::Callback<void, datastax::internal::core::ControlConnector*>::operator()(datastax::internal::core::ControlConnector* const&) const obj-x86_64-linux-gnu/../contrib/cassandra/src/callback.hpp:70:57 (clickhouse+0x1d15f12e)\r\n    #14 datastax::internal::core::ControlConnector::finish() obj-x86_64-linux-gnu/../contrib/cassandra/src/control_connector.cpp:127:3 (clickhouse+0x1d15f12e)\r\n    #15 datastax::internal::core::ControlConnector::on_success() obj-x86_64-linux-gnu/../contrib/cassandra/src/control_connector.cpp:158:3 (clickhouse+0x1d15f3af)\r\n    #16 datastax::internal::core::ControlConnector::handle_query_schema(datastax::internal::core::SchemaConnectorRequestCallback*) obj-x86_64-linux-gnu/../contrib/cassandra/src/control_connector.cpp:298:3 (clickhouse+0x1d163ada)\r\n    #17 datastax::internal::core::SchemaConnectorRequestCallback::on_chain_set() obj-x86_64-linux-gnu/../contrib/cassandra/src/control_connector.cpp:65:45 (clickhouse+0x1d1644cc)\r\n    #18 datastax::internal::core::ChainedRequestCallback::maybe_finish() obj-x86_64-linux-gnu/../contrib/cassandra/src/request_callback.cpp:310:7 (clickhouse+0x1d14e68a)\r\n    #19 datastax::internal::core::ChainedRequestCallback::set_chain_responses(datastax::internal::core::ChainedRequestCallback::Map&) obj-x86_64-linux-gnu/../contrib/cassandra/src/request_callback.cpp:286:3 (clickhouse+0x1d14e59c)\r\n    #20 datastax::internal::core::ChainedRequestCallback::maybe_finish() obj-x86_64-linux-gnu/../contrib/cassandra/src/request_callback.cpp:308:15 (clickhouse+0x1d14e59c)\r\n    #21 datastax::internal::core::ChainedRequestCallback::set_chain_responses(datastax::internal::core::ChainedRequestCallback::Map&) obj-x86_64-linux-gnu/../contrib/cassandra/src/request_callback.cpp:286:3 (clickhouse+0x1d14e59c)\r\n    #22 datastax::internal::core::ChainedRequestCallback::maybe_finish() obj-x86_64-linux-gnu/../contrib/cassandra/src/request_callback.cpp:308:15 (clickhouse+0x1d14e59c)\r\n    #23 datastax::internal::core::ChainedRequestCallback::set_chain_responses(datastax::internal::core::ChainedRequestCallback::Map&) obj-x86_64-linux-gnu/../contrib/cassandra/src/request_callback.cpp:286:3 (clickhouse+0x1d14e59c)\r\n    #24 datastax::internal::core::ChainedRequestCallback::maybe_finish() obj-x86_64-linux-gnu/../contrib/cassandra/src/request_callback.cpp:308:15 (clickhouse+0x1d14e59c)\r\n    #25 datastax::internal::core::ChainedRequestCallback::on_internal_set(datastax::internal::core::ResponseMessage*) obj-x86_64-linux-gnu/../contrib/cassandra/src/request_callback.cpp:259:3 (clickhouse+0x1d14e3de)\r\n    #26 datastax::internal::core::SimpleRequestCallback::on_set(datastax::internal::core::ResponseMessage*) obj-x86_64-linux-gnu/../contrib/cassandra/src/request_callback.cpp:190:3 (clickhouse+0x1d14d652)\r\n    #27 datastax::internal::core::Connection::on_read(char const*, unsigned long) obj-x86_64-linux-gnu/../contrib/cassandra/src/connection.cpp:274:25 (clickhouse+0x1d157efa)\r\n    #28 datastax::internal::core::ConnectionHandler::on_read(datastax::internal::core::Socket*, long, uv_buf_t const*) obj-x86_64-linux-gnu/../contrib/cassandra/src/connection.cpp:75:16 (clickhouse+0x1d15731f)\r\n    #29 datastax::internal::core::Socket::handle_read(long, uv_buf_t const*) obj-x86_64-linux-gnu/../contrib/cassandra/src/socket.cpp:368:13 (clickhouse+0x1d1c0e95)\r\n    #30 datastax::internal::core::Socket::on_read(uv_stream_s*, long, uv_buf_t const*) obj-x86_64-linux-gnu/../contrib/cassandra/src/socket.cpp:358:11 (clickhouse+0x1d1c0e95)\r\n    #31 uv__read obj-x86_64-linux-gnu/../contrib/libuv/src/unix/stream.c:1243:7 (clickhouse+0x1cec0a45)\r\n    #32 uv__stream_io obj-x86_64-linux-gnu/../contrib/libuv/src/unix/stream.c:1310:5 (clickhouse+0x1cec0a45)\r\n    #33 uv__io_poll obj-x86_64-linux-gnu/../contrib/libuv/src/unix/linux-core.c:442:11 (clickhouse+0x1cec7f6f)\r\n    #34 uv_run obj-x86_64-linux-gnu/../contrib/libuv/src/unix/core.c:375:5 (clickhouse+0x1ceadae6)\r\n    #35 datastax::internal::core::EventLoop::handle_run() obj-x86_64-linux-gnu/../contrib/cassandra/src/event_loop.cpp:168:3 (clickhouse+0x1d1650cf)\r\n    #36 datastax::internal::core::EventLoop::internal_on_run(void*) obj-x86_64-linux-gnu/../contrib/cassandra/src/event_loop.cpp:163:11 (clickhouse+0x1d1650cf)\r\n\r\n  Thread T223 (tid=247, running) created by thread T200 at:\r\n    #0 pthread_create <null> (clickhouse+0xa00509d)\r\n    #1 uv_thread_create_ex obj-x86_64-linux-gnu/../contrib/libuv/src/unix/thread.c:258:9 (clickhouse+0x1cec406b)\r\n    #2 uv_thread_create obj-x86_64-linux-gnu/../contrib/libuv/src/unix/thread.c:212:10 (clickhouse+0x1cec3f57)\r\n    #3 datastax::internal::core::EventLoop::run() obj-x86_64-linux-gnu/../contrib/cassandra/src/event_loop.cpp:93:12 (clickhouse+0x1d165066)\r\n    #4 datastax::internal::core::SessionBase::connect(datastax::internal::core::Config const&, std::__1::basic_string<char, std::__1::char_traits<char>, datastax::internal::Allocator<char> > const&) obj-x86_64-linux-gnu/../contrib/cassandra/src/session_base.cpp:76:23 (clickhouse+0x1d1b2875)\r\n    #5 cass_session_connect_keyspace_n obj-x86_64-linux-gnu/../contrib/cassandra/src/session.cpp:63:31 (clickhouse+0x1d11d624)\r\n    #6 cass_session_connect_keyspace obj-x86_64-linux-gnu/../contrib/cassandra/src/session.cpp:58:10 (clickhouse+0x1d11d4a7)\r\n    #7 cass_session_connect obj-x86_64-linux-gnu/../contrib/cassandra/src/session.cpp:53:10 (clickhouse+0x1d11d4a7)\r\n    #8 DB::CassandraDictionarySource::getSession() obj-x86_64-linux-gnu/../src/Dictionaries/CassandraDictionarySource.cpp:200:28 (clickhouse+0x13623c00)\r\n    #9 DB::CassandraDictionarySource::loadKeys(std::__1::vector<COW<DB::IColumn>::immutable_ptr<DB::IColumn>, std::__1::allocator<COW<DB::IColumn>::immutable_ptr<DB::IColumn> > > const&, std::__1::vector<unsigned long, std::__1::allocator<unsigned long> > const&) obj-x86_64-linux-gnu/../src/Dictionaries/CassandraDictionarySource.cpp:176:64 (clickhouse+0x13624a8b)\r\n    #10 DB::CacheDictionary<(DB::DictionaryKeyType)1>::update(std::__1::shared_ptr<DB::CacheDictionaryUpdateUnit<(DB::DictionaryKeyType)1> >) <null> (clickhouse+0x13c4f20d)\r\n    #11 void std::__1::__function::__policy_invoker<void (std::__1::shared_ptr<DB::CacheDictionaryUpdateUnit<(DB::DictionaryKeyType)1> >)>::__call_impl<std::__1::__function::__default_alloc_func<DB::CacheDictionary<(DB::DictionaryKeyType)1>::CacheDictionary(DB::StorageID const&, DB::DictionaryStructure const&, std::__1::shared_ptr<DB::IDictionarySource>, std::__1::shared_ptr<DB::ICacheDictionaryStorage>, DB::CacheDictionaryUpdateQueueConfiguration, DB::ExternalLoadableLifetime, bool)::'lambda'(std::__1::shared_ptr<DB::CacheDictionaryUpdateUnit<(DB::DictionaryKeyType)1> >), void (std::__1::shared_ptr<DB::CacheDictionaryUpdateUnit<(DB::DictionaryKeyType)1> >)> >(std::__1::__function::__policy_storage const*, std::__1::shared_ptr<DB::CacheDictionaryUpdateUnit<(DB::DictionaryKeyType)1> >&&) <null> (clickhouse+0x13c54a8f)\r\n    #12 std::__1::__function::__policy_func<void (std::__1::shared_ptr<DB::CacheDictionaryUpdateUnit<(DB::DictionaryKeyType)1> >)>::operator()(std::__1::shared_ptr<DB::CacheDictionaryUpdateUnit<(DB::DictionaryKeyType)1> >&&) const obj-x86_64-linux-gnu/../contrib/libcxx/include/functional:2221:16 (clickhouse+0x13c59268)\r\n    #13 std::__1::function<void (std::__1::shared_ptr<DB::CacheDictionaryUpdateUnit<(DB::DictionaryKeyType)1> >)>::operator()(std::__1::shared_ptr<DB::CacheDictionaryUpdateUnit<(DB::DictionaryKeyType)1> >) const obj-x86_64-linux-gnu/../contrib/libcxx/include/functional:2560:12 (clickhouse+0x13c59268)\r\n    #14 DB::CacheDictionaryUpdateQueue<(DB::DictionaryKeyType)1>::updateThreadFunction() obj-x86_64-linux-gnu/../src/Dictionaries/CacheDictionaryUpdateQueue.cpp:134:13 (clickhouse+0x13c59268)\r\n    #15 DB::CacheDictionaryUpdateQueue<(DB::DictionaryKeyType)1>::CacheDictionaryUpdateQueue(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, DB::CacheDictionaryUpdateQueueConfiguration, std::__1::function<void (std::__1::shared_ptr<DB::CacheDictionaryUpdateUnit<(DB::DictionaryKeyType)1> >)>&&)::'lambda'()::operator()() const obj-x86_64-linux-gnu/../src/Dictionaries/CacheDictionaryUpdateQueue.cpp:32:53 (clickhouse+0x13c5bc21)\r\n    #16 decltype(std::__1::forward<DB::CacheDictionaryUpdateQueue<(DB::DictionaryKeyType)1>::CacheDictionaryUpdateQueue(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, DB::CacheDictionaryUpdateQueueConfiguration, std::__1::function<void (std::__1::shared_ptr<DB::CacheDictionaryUpdateUnit<(DB::DictionaryKeyType)1> >)>&&)::'lambda'()&>(fp)()) std::__1::__invoke<DB::CacheDictionaryUpdateQueue<(DB::DictionaryKeyType)1>::CacheDictionaryUpdateQueue(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, DB::CacheDictionaryUpdateQueueConfiguration, std::__1::function<void (std::__1::shared_ptr<DB::CacheDictionaryUpdateUnit<(DB::DictionaryKeyType)1> >)>&&)::'lambda'()&>(DB::CacheDictionaryUpdateQueue<(DB::DictionaryKeyType)1>::CacheDictionaryUpdateQueue(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, DB::CacheDictionaryUpdateQueueConfiguration, std::__1::function<void (std::__1::shared_ptr<DB::CacheDictionaryUpdateUnit<(DB::DictionaryKeyType)1> >)>&&)::'lambda'()&) obj-x86_64-linux-gnu/../contrib/libcxx/include/type_traits:3676:1 (clickhouse+0x13c5bc21)\r\n    #17 void std::__1::__invoke_void_return_wrapper<void>::__call<DB::CacheDictionaryUpdateQueue<(DB::DictionaryKeyType)1>::CacheDictionaryUpdateQueue(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, DB::CacheDictionaryUpdateQueueConfiguration, std::__1::function<void (std::__1::shared_ptr<DB::CacheDictionaryUpdateUnit<(DB::DictionaryKeyType)1> >)>&&)::'lambda'()&>(DB::CacheDictionaryUpdateQueue<(DB::DictionaryKeyType)1>::CacheDictionaryUpdateQueue(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, DB::CacheDictionaryUpdateQueueConfiguration, std::__1::function<void (std::__1::shared_ptr<DB::CacheDictionaryUpdateUnit<(DB::DictionaryKeyType)1> >)>&&)::'lambda'()&) obj-x86_64-linux-gnu/../contrib/libcxx/include/__functional_base:348:9 (clickhouse+0x13c5bc21)\r\n    #18 std::__1::__function::__default_alloc_func<DB::CacheDictionaryUpdateQueue<(DB::DictionaryKeyType)1>::CacheDictionaryUpdateQueue(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, DB::CacheDictionaryUpdateQueueConfiguration, std::__1::function<void (std::__1::shared_ptr<DB::CacheDictionaryUpdateUnit<(DB::DictionaryKeyType)1> >)>&&)::'lambda'(), void ()>::operator()() obj-x86_64-linux-gnu/../contrib/libcxx/include/functional:1608:12 (clickhouse+0x13c5bc21)\r\n    #19 void std::__1::__function::__policy_invoker<void ()>::__call_impl<std::__1::__function::__default_alloc_func<DB::CacheDictionaryUpdateQueue<(DB::DictionaryKeyType)1>::CacheDictionaryUpdateQueue(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, DB::CacheDictionaryUpdateQueueConfiguration, std::__1::function<void (std::__1::shared_ptr<DB::CacheDictionaryUpdateUnit<(DB::DictionaryKeyType)1> >)>&&)::'lambda'(), void ()> >(std::__1::__function::__policy_storage const*) obj-x86_64-linux-gnu/../contrib/libcxx/include/functional:2089:16 (clickhouse+0x13c5bc21)\r\n    #20 std::__1::__function::__policy_func<void ()>::operator()() const obj-x86_64-linux-gnu/../contrib/libcxx/include/functional:2221:16 (clickhouse+0xa0ed877)\r\n    #21 std::__1::function<void ()>::operator()() const obj-x86_64-linux-gnu/../contrib/libcxx/include/functional:2560:12 (clickhouse+0xa0ed877)\r\n    #22 ThreadPoolImpl<ThreadFromGlobalPool>::worker(std::__1::__list_iterator<ThreadFromGlobalPool, void*>) obj-x86_64-linux-gnu/../src/Common/ThreadPool.cpp:274:17 (clickhouse+0xa0ed877)\r\n    #23 void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()::operator()() const obj-x86_64-linux-gnu/../src/Common/ThreadPool.cpp:139:73 (clickhouse+0xa0efe38)\r\n    #24 decltype(std::__1::forward<void>(fp)()) std::__1::__invoke_constexpr<void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()&>(void&&) obj-x86_64-linux-gnu/../contrib/libcxx/include/type_traits:3682:1 (clickhouse+0xa0efe38)\r\n    #25 decltype(auto) std::__1::__apply_tuple_impl<void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()&, std::__1::tuple<>&>(void&&, std::__1::tuple<>&, std::__1::__tuple_indices<>) obj-x86_64-linux-gnu/../contrib/libcxx/include/tuple:1415:1 (clickhouse+0xa0efe38)\r\n    #26 decltype(auto) std::__1::apply<void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()&, std::__1::tuple<>&>(void&&, std::__1::tuple<>&) obj-x86_64-linux-gnu/../contrib/libcxx/include/tuple:1424:1 (clickhouse+0xa0efe38)\r\n    #27 ThreadFromGlobalPool::ThreadFromGlobalPool<void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>(void&&)::'lambda'()::operator()() obj-x86_64-linux-gnu/../src/Common/ThreadPool.h:188:13 (clickhouse+0xa0efe38)\r\n    #28 decltype(std::__1::forward<void>(fp)()) std::__1::__invoke<ThreadFromGlobalPool::ThreadFromGlobalPool<void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>(void&&)::'lambda'()&>(void&&) obj-x86_64-linux-gnu/../contrib/libcxx/include/type_traits:3676:1 (clickhouse+0xa0efce1)\r\n    #29 void std::__1::__invoke_void_return_wrapper<void>::__call<ThreadFromGlobalPool::ThreadFromGlobalPool<void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>(void&&)::'lambda'()&>(ThreadFromGlobalPool::ThreadFromGlobalPool<void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>(void&&)::'lambda'()&) obj-x86_64-linux-gnu/../contrib/libcxx/include/__functional_base:348:9 (clickhouse+0xa0efce1)\r\n    #30 std::__1::__function::__default_alloc_func<ThreadFromGlobalPool::ThreadFromGlobalPool<void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>(void&&)::'lambda'(), void ()>::operator()() obj-x86_64-linux-gnu/../contrib/libcxx/include/functional:1608:12 (clickhouse+0xa0efce1)\r\n    #31 void std::__1::__function::__policy_invoker<void ()>::__call_impl<std::__1::__function::__default_alloc_func<ThreadFromGlobalPool::ThreadFromGlobalPool<void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>(void&&)::'lambda'(), void ()> >(std::__1::__function::__policy_storage const*) obj-x86_64-linux-gnu/../contrib/libcxx/include/functional:2089:16 (clickhouse+0xa0efce1)\r\n    #32 std::__1::__function::__policy_func<void ()>::operator()() const obj-x86_64-linux-gnu/../contrib/libcxx/include/functional:2221:16 (clickhouse+0xa0eaeed)\r\n    #33 std::__1::function<void ()>::operator()() const obj-x86_64-linux-gnu/../contrib/libcxx/include/functional:2560:12 (clickhouse+0xa0eaeed)\r\n    #34 ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) obj-x86_64-linux-gnu/../src/Common/ThreadPool.cpp:274:17 (clickhouse+0xa0eaeed)\r\n    #35 void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()::operator()() const obj-x86_64-linux-gnu/../src/Common/ThreadPool.cpp:139:73 (clickhouse+0xa0ee6b0)\r\n    #36 decltype(std::__1::forward<void>(fp)()) std::__1::__invoke<void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>(void&&) obj-x86_64-linux-gnu/../contrib/libcxx/include/type_traits:3676:1 (clickhouse+0xa0ee6b0)\r\n    #37 void std::__1::__thread_execute<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>(std::__1::tuple<void, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>&, std::__1::__tuple_indices<>) obj-x86_64-linux-gnu/../contrib/libcxx/include/thread:280:5 (clickhouse+0xa0ee6b0)\r\n    #38 void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()> >(void*) obj-x86_64-linux-gnu/../contrib/libcxx/include/thread:291:5 (clickhouse+0xa0ee6b0)\r\n\r\nSUMMARY: ThreadSanitizer: data race obj-x86_64-linux-gnu/../contrib/libuv/src/unix/async.c:102:3 in uv__async_close\r\n==================\r\n==================\r\nWARNING: ThreadSanitizer: data race (pid=1)\r\n  Write of size 8 at 0x7b6400081c78 by thread T200:\r\n    #0 uv__make_close_pending obj-x86_64-linux-gnu/../contrib/libuv/src/unix/core.c:225:33 (clickhouse+0x1cead48d)\r\n    #1 uv_close obj-x86_64-linux-gnu/../contrib/libuv/src/unix/core.c:190:3 (clickhouse+0x1cead48d)\r\n    #2 datastax::internal::core::Async::Handle::~Handle() obj-x86_64-linux-gnu/../contrib/cassandra/src/async.hpp:82:17 (clickhouse+0x1d168608)\r\n    #3 std::__1::__shared_ptr_emplace<datastax::internal::core::Async::Handle, std::__1::allocator<datastax::internal::core::Async::Handle> >::__on_zero_shared() obj-x86_64-linux-gnu/../contrib/libcxx/include/memory:2613:24 (clickhouse+0x1d168608)\r\n    #4 std::__1::__shared_count::__release_shared() obj-x86_64-linux-gnu/../contrib/libcxx/include/memory:2475:9 (clickhouse+0x1d168330)\r\n    #5 std::__1::__shared_weak_count::__release_shared() obj-x86_64-linux-gnu/../contrib/libcxx/include/memory:2517:27 (clickhouse+0x1d168330)\r\n    #6 std::__1::shared_ptr<datastax::internal::core::Async::Handle>::~shared_ptr() obj-x86_64-linux-gnu/../contrib/libcxx/include/memory:3212:19 (clickhouse+0x1d168330)\r\n    #7 datastax::internal::core::Async::send() obj-x86_64-linux-gnu/../contrib/cassandra/src/async.cpp:46:1 (clickhouse+0x1d168330)\r\n    #8 datastax::internal::core::EventLoop::close_handles() obj-x86_64-linux-gnu/../contrib/cassandra/src/event_loop.cpp:100:10 (clickhouse+0x1d165a74)\r\n    #9 datastax::internal::core::RoundRobinEventLoopGroup::close_handles() obj-x86_64-linux-gnu/../contrib/cassandra/src/event_loop.cpp:225:17 (clickhouse+0x1d165a74)\r\n    #10 datastax::internal::core::Session::join() obj-x86_64-linux-gnu/../contrib/cassandra/src/session.cpp:354:24 (clickhouse+0x1d11f9fb)\r\n    #11 datastax::internal::core::Session::~Session() obj-x86_64-linux-gnu/../contrib/cassandra/src/session.cpp:284:3 (clickhouse+0x1d11f9fb)\r\n    #12 datastax::internal::core::Session::~Session() obj-x86_64-linux-gnu/../contrib/cassandra/src/session.cpp:283:21 (clickhouse+0x1d11fd99)\r\n    #13 cass_session_free obj-x86_64-linux-gnu/../contrib/cassandra/src/session.cpp:49:3 (clickhouse+0x1d11d438)\r\n    #14 DB::Cassandra::ObjectHolder<CassSession_, &(cass_session_free), &(cass_session_new)>::~ObjectHolder() obj-x86_64-linux-gnu/../src/Dictionaries/CassandraHelpers.h:45:13 (clickhouse+0x13627828)\r\n    #15 std::__1::allocator<DB::Cassandra::ObjectHolder<CassSession_, &(cass_session_free), &(cass_session_new)> >::destroy(DB::Cassandra::ObjectHolder<CassSession_, &(cass_session_free), &(cass_session_new)>*) obj-x86_64-linux-gnu/../contrib/libcxx/include/memory:891:15 (clickhouse+0x13627828)\r\n    #16 void std::__1::allocator_traits<std::__1::allocator<DB::Cassandra::ObjectHolder<CassSession_, &(cass_session_free), &(cass_session_new)> > >::__destroy<DB::Cassandra::ObjectHolder<CassSession_, &(cass_session_free), &(cass_session_new)> >(std::__1::integral_constant<bool, true>, std::__1::allocator<DB::Cassandra::ObjectHolder<CassSession_, &(cass_session_free), &(cass_session_new)> >&, DB::Cassandra::ObjectHolder<CassSession_, &(cass_session_free), &(cass_session_new)>*) obj-x86_64-linux-gnu/../contrib/libcxx/include/__memory/allocator_traits.h:539:21 (clickhouse+0x13627828)\r\n    #17 void std::__1::allocator_traits<std::__1::allocator<DB::Cassandra::ObjectHolder<CassSession_, &(cass_session_free), &(cass_session_new)> > >::destroy<DB::Cassandra::ObjectHolder<CassSession_, &(cass_session_free), &(cass_session_new)> >(std::__1::allocator<DB::Cassandra::ObjectHolder<CassSession_, &(cass_session_free), &(cass_session_new)> >&, DB::Cassandra::ObjectHolder<CassSession_, &(cass_session_free), &(cass_session_new)>*) obj-x86_64-linux-gnu/../contrib/libcxx/include/__memory/allocator_traits.h:487:14 (clickhouse+0x13627828)\r\n    #18 std::__1::__shared_ptr_emplace<DB::Cassandra::ObjectHolder<CassSession_, &(cass_session_free), &(cass_session_new)>, std::__1::allocator<DB::Cassandra::ObjectHolder<CassSession_, &(cass_session_free), &(cass_session_new)> > >::__on_zero_shared() obj-x86_64-linux-gnu/../contrib/libcxx/include/memory:2611:9 (clickhouse+0x13627828)\r\n    #19 std::__1::__shared_count::__release_shared() obj-x86_64-linux-gnu/../contrib/libcxx/include/memory:2475:9 (clickhouse+0x13626561)\r\n    #20 std::__1::__shared_weak_count::__release_shared() obj-x86_64-linux-gnu/../contrib/libcxx/include/memory:2517:27 (clickhouse+0x13626561)\r\n    #21 std::__1::shared_ptr<DB::Cassandra::ObjectHolder<CassSession_, &(cass_session_free), &(cass_session_new)> >::~shared_ptr() obj-x86_64-linux-gnu/../contrib/libcxx/include/memory:3212:19 (clickhouse+0x13626561)\r\n    #22 DB::CassandraSource::~CassandraSource() obj-x86_64-linux-gnu/../src/Dictionaries/CassandraSource.h:14:7 (clickhouse+0x13626561)\r\n    #23 std::__1::allocator<DB::CassandraSource>::destroy(DB::CassandraSource*) obj-x86_64-linux-gnu/../contrib/libcxx/include/memory:891:15 (clickhouse+0x1362643d)\r\n    #24 void std::__1::allocator_traits<std::__1::allocator<DB::CassandraSource> >::__destroy<DB::CassandraSource>(std::__1::integral_constant<bool, true>, std::__1::allocator<DB::CassandraSource>&, DB::CassandraSource*) obj-x86_64-linux-gnu/../contrib/libcxx/include/__memory/allocator_traits.h:539:21 (clickhouse+0x1362643d)\r\n    #25 void std::__1::allocator_traits<std::__1::allocator<DB::CassandraSource> >::destroy<DB::CassandraSource>(std::__1::allocator<DB::CassandraSource>&, DB::CassandraSource*) obj-x86_64-linux-gnu/../contrib/libcxx/include/__memory/allocator_traits.h:487:14 (clickhouse+0x1362643d)\r\n    #26 std::__1::__shared_ptr_emplace<DB::CassandraSource, std::__1::allocator<DB::CassandraSource> >::__on_zero_shared() obj-x86_64-linux-gnu/../contrib/libcxx/include/memory:2611:9 (clickhouse+0x1362643d)\r\n    #27 std::__1::__shared_count::__release_shared() obj-x86_64-linux-gnu/../contrib/libcxx/include/memory:2475:9 (clickhouse+0x1613bdab)\r\n    #28 std::__1::__shared_weak_count::__release_shared() obj-x86_64-linux-gnu/../contrib/libcxx/include/memory:2517:27 (clickhouse+0x1613bdab)\r\n    #29 std::__1::shared_ptr<DB::IProcessor>::~shared_ptr() obj-x86_64-linux-gnu/../contrib/libcxx/include/memory:3212:19 (clickhouse+0x1613bdab)\r\n    #30 std::__1::allocator<std::__1::shared_ptr<DB::IProcessor> >::destroy(std::__1::shared_ptr<DB::IProcessor>*) obj-x86_64-linux-gnu/../contrib/libcxx/include/memory:891:15 (clickhouse+0x1613bdab)\r\n    #31 void std::__1::allocator_traits<std::__1::allocator<std::__1::shared_ptr<DB::IProcessor> > >::__destroy<std::__1::shared_ptr<DB::IProcessor> >(std::__1::integral_constant<bool, true>, std::__1::allocator<std::__1::shared_ptr<DB::IProcessor> >&, std::__1::shared_ptr<DB::IProcessor>*) obj-x86_64-linux-gnu/../contrib/libcxx/include/__memory/allocator_traits.h:539:21 (clickhouse+0x1613bdab)\r\n    #32 void std::__1::allocator_traits<std::__1::allocator<std::__1::shared_ptr<DB::IProcessor> > >::destroy<std::__1::shared_ptr<DB::IProcessor> >(std::__1::allocator<std::__1::shared_ptr<DB::IProcessor> >&, std::__1::shared_ptr<DB::IProcessor>*) obj-x86_64-linux-gnu/../contrib/libcxx/include/__memory/allocator_traits.h:487:14 (clickhouse+0x1613bdab)\r\n    #33 std::__1::__vector_base<std::__1::shared_ptr<DB::IProcessor>, std::__1::allocator<std::__1::shared_ptr<DB::IProcessor> > >::__destruct_at_end(std::__1::shared_ptr<DB::IProcessor>*) obj-x86_64-linux-gnu/../contrib/libcxx/include/vector:428:9 (clickhouse+0x1613bdab)\r\n    #34 std::__1::__vector_base<std::__1::shared_ptr<DB::IProcessor>, std::__1::allocator<std::__1::shared_ptr<DB::IProcessor> > >::clear() obj-x86_64-linux-gnu/../contrib/libcxx/include/vector:371:29 (clickhouse+0x1613bdab)\r\n    #35 std::__1::__vector_base<std::__1::shared_ptr<DB::IProcessor>, std::__1::allocator<std::__1::shared_ptr<DB::IProcessor> > >::~__vector_base() obj-x86_64-linux-gnu/../contrib/libcxx/include/vector:465:9 (clickhouse+0x1613bdab)\r\n    #36 std::__1::vector<std::__1::shared_ptr<DB::IProcessor>, std::__1::allocator<std::__1::shared_ptr<DB::IProcessor> > >::~vector() obj-x86_64-linux-gnu/../contrib/libcxx/include/vector:557:5 (clickhouse+0x1613bdab)\r\n    #37 DB::QueryPipeline::~QueryPipeline() obj-x86_64-linux-gnu/../src/QueryPipeline/QueryPipeline.cpp:29:31 (clickhouse+0x1613bdab)\r\n    #38 DB::CacheDictionary<(DB::DictionaryKeyType)1>::update(std::__1::shared_ptr<DB::CacheDictionaryUpdateUnit<(DB::DictionaryKeyType)1> >) <null> (clickhouse+0x13c52028)\r\n    #39 void std::__1::__function::__policy_invoker<void (std::__1::shared_ptr<DB::CacheDictionaryUpdateUnit<(DB::DictionaryKeyType)1> >)>::__call_impl<std::__1::__function::__default_alloc_func<DB::CacheDictionary<(DB::DictionaryKeyType)1>::CacheDictionary(DB::StorageID const&, DB::DictionaryStructure const&, std::__1::shared_ptr<DB::IDictionarySource>, std::__1::shared_ptr<DB::ICacheDictionaryStorage>, DB::CacheDictionaryUpdateQueueConfiguration, DB::ExternalLoadableLifetime, bool)::'lambda'(std::__1::shared_ptr<DB::CacheDictionaryUpdateUnit<(DB::DictionaryKeyType)1> >), void (std::__1::shared_ptr<DB::CacheDictionaryUpdateUnit<(DB::DictionaryKeyType)1> >)> >(std::__1::__function::__policy_storage const*, std::__1::shared_ptr<DB::CacheDictionaryUpdateUnit<(DB::DictionaryKeyType)1> >&&) <null> (clickhouse+0x13c54a8f)\r\n    #40 std::__1::__function::__policy_func<void (std::__1::shared_ptr<DB::CacheDictionaryUpdateUnit<(DB::DictionaryKeyType)1> >)>::operator()(std::__1::shared_ptr<DB::CacheDictionaryUpdateUnit<(DB::DictionaryKeyType)1> >&&) const obj-x86_64-linux-gnu/../contrib/libcxx/include/functional:2221:16 (clickhouse+0x13c59268)\r\n    #41 std::__1::function<void (std::__1::shared_ptr<DB::CacheDictionaryUpdateUnit<(DB::DictionaryKeyType)1> >)>::operator()(std::__1::shared_ptr<DB::CacheDictionaryUpdateUnit<(DB::DictionaryKeyType)1> >) const obj-x86_64-linux-gnu/../contrib/libcxx/include/functional:2560:12 (clickhouse+0x13c59268)\r\n    #42 DB::CacheDictionaryUpdateQueue<(DB::DictionaryKeyType)1>::updateThreadFunction() obj-x86_64-linux-gnu/../src/Dictionaries/CacheDictionaryUpdateQueue.cpp:134:13 (clickhouse+0x13c59268)\r\n    #43 DB::CacheDictionaryUpdateQueue<(DB::DictionaryKeyType)1>::CacheDictionaryUpdateQueue(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, DB::CacheDictionaryUpdateQueueConfiguration, std::__1::function<void (std::__1::shared_ptr<DB::CacheDictionaryUpdateUnit<(DB::DictionaryKeyType)1> >)>&&)::'lambda'()::operator()() const obj-x86_64-linux-gnu/../src/Dictionaries/CacheDictionaryUpdateQueue.cpp:32:53 (clickhouse+0x13c5bc21)\r\n    #44 decltype(std::__1::forward<DB::CacheDictionaryUpdateQueue<(DB::DictionaryKeyType)1>::CacheDictionaryUpdateQueue(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, DB::CacheDictionaryUpdateQueueConfiguration, std::__1::function<void (std::__1::shared_ptr<DB::CacheDictionaryUpdateUnit<(DB::DictionaryKeyType)1> >)>&&)::'lambda'()&>(fp)()) std::__1::__invoke<DB::CacheDictionaryUpdateQueue<(DB::DictionaryKeyType)1>::CacheDictionaryUpdateQueue(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, DB::CacheDictionaryUpdateQueueConfiguration, std::__1::function<void (std::__1::shared_ptr<DB::CacheDictionaryUpdateUnit<(DB::DictionaryKeyType)1> >)>&&)::'lambda'()&>(DB::CacheDictionaryUpdateQueue<(DB::DictionaryKeyType)1>::CacheDictionaryUpdateQueue(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, DB::CacheDictionaryUpdateQueueConfiguration, std::__1::function<void (std::__1::shared_ptr<DB::CacheDictionaryUpdateUnit<(DB::DictionaryKeyType)1> >)>&&)::'lambda'()&) obj-x86_64-linux-gnu/../contrib/libcxx/include/type_traits:3676:1 (clickhouse+0x13c5bc21)\r\n    #45 void std::__1::__invoke_void_return_wrapper<void>::__call<DB::CacheDictionaryUpdateQueue<(DB::DictionaryKeyType)1>::CacheDictionaryUpdateQueue(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, DB::CacheDictionaryUpdateQueueConfiguration, std::__1::function<void (std::__1::shared_ptr<DB::CacheDictionaryUpdateUnit<(DB::DictionaryKeyType)1> >)>&&)::'lambda'()&>(DB::CacheDictionaryUpdateQueue<(DB::DictionaryKeyType)1>::CacheDictionaryUpdateQueue(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, DB::CacheDictionaryUpdateQueueConfiguration, std::__1::function<void (std::__1::shared_ptr<DB::CacheDictionaryUpdateUnit<(DB::DictionaryKeyType)1> >)>&&)::'lambda'()&) obj-x86_64-linux-gnu/../contrib/libcxx/include/__functional_base:348:9 (clickhouse+0x13c5bc21)\r\n    #46 std::__1::__function::__default_alloc_func<DB::CacheDictionaryUpdateQueue<(DB::DictionaryKeyType)1>::CacheDictionaryUpdateQueue(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, DB::CacheDictionaryUpdateQueueConfiguration, std::__1::function<void (std::__1::shared_ptr<DB::CacheDictionaryUpdateUnit<(DB::DictionaryKeyType)1> >)>&&)::'lambda'(), void ()>::operator()() obj-x86_64-linux-gnu/../contrib/libcxx/include/functional:1608:12 (clickhouse+0x13c5bc21)\r\n    #47 void std::__1::__function::__policy_invoker<void ()>::__call_impl<std::__1::__function::__default_alloc_func<DB::CacheDictionaryUpdateQueue<(DB::DictionaryKeyType)1>::CacheDictionaryUpdateQueue(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, DB::CacheDictionaryUpdateQueueConfiguration, std::__1::function<void (std::__1::shared_ptr<DB::CacheDictionaryUpdateUnit<(DB::DictionaryKeyType)1> >)>&&)::'lambda'(), void ()> >(std::__1::__function::__policy_storage const*) obj-x86_64-linux-gnu/../contrib/libcxx/include/functional:2089:16 (clickhouse+0x13c5bc21)\r\n    #48 std::__1::__function::__policy_func<void ()>::operator()() const obj-x86_64-linux-gnu/../contrib/libcxx/include/functional:2221:16 (clickhouse+0xa0ed877)\r\n    #49 std::__1::function<void ()>::operator()() const obj-x86_64-linux-gnu/../contrib/libcxx/include/functional:2560:12 (clickhouse+0xa0ed877)\r\n    #50 ThreadPoolImpl<ThreadFromGlobalPool>::worker(std::__1::__list_iterator<ThreadFromGlobalPool, void*>) obj-x86_64-linux-gnu/../src/Common/ThreadPool.cpp:274:17 (clickhouse+0xa0ed877)\r\n    #51 void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()::operator()() const obj-x86_64-linux-gnu/../src/Common/ThreadPool.cpp:139:73 (clickhouse+0xa0efe38)\r\n    #52 decltype(std::__1::forward<void>(fp)()) std::__1::__invoke_constexpr<void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()&>(void&&) obj-x86_64-linux-gnu/../contrib/libcxx/include/type_traits:3682:1 (clickhouse+0xa0efe38)\r\n    #53 decltype(auto) std::__1::__apply_tuple_impl<void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()&, std::__1::tuple<>&>(void&&, std::__1::tuple<>&, std::__1::__tuple_indices<>) obj-x86_64-linux-gnu/../contrib/libcxx/include/tuple:1415:1 (clickhouse+0xa0efe38)\r\n    #54 decltype(auto) std::__1::apply<void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()&, std::__1::tuple<>&>(void&&, std::__1::tuple<>&) obj-x86_64-linux-gnu/../contrib/libcxx/include/tuple:1424:1 (clickhouse+0xa0efe38)\r\n    #55 ThreadFromGlobalPool::ThreadFromGlobalPool<void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>(void&&)::'lambda'()::operator()() obj-x86_64-linux-gnu/../src/Common/ThreadPool.h:188:13 (clickhouse+0xa0efe38)\r\n    #56 decltype(std::__1::forward<void>(fp)()) std::__1::__invoke<ThreadFromGlobalPool::ThreadFromGlobalPool<void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>(void&&)::'lambda'()&>(void&&) obj-x86_64-linux-gnu/../contrib/libcxx/include/type_traits:3676:1 (clickhouse+0xa0efce1)\r\n    #57 void std::__1::__invoke_void_return_wrapper<void>::__call<ThreadFromGlobalPool::ThreadFromGlobalPool<void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>(void&&)::'lambda'()&>(ThreadFromGlobalPool::ThreadFromGlobalPool<void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>(void&&)::'lambda'()&) obj-x86_64-linux-gnu/../contrib/libcxx/include/__functional_base:348:9 (clickhouse+0xa0efce1)\r\n    #58 std::__1::__function::__default_alloc_func<ThreadFromGlobalPool::ThreadFromGlobalPool<void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>(void&&)::'lambda'(), void ()>::operator()() obj-x86_64-linux-gnu/../contrib/libcxx/include/functional:1608:12 (clickhouse+0xa0efce1)\r\n    #59 void std::__1::__function::__policy_invoker<void ()>::__call_impl<std::__1::__function::__default_alloc_func<ThreadFromGlobalPool::ThreadFromGlobalPool<void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>(void&&)::'lambda'(), void ()> >(std::__1::__function::__policy_storage const*) obj-x86_64-linux-gnu/../contrib/libcxx/include/functional:2089:16 (clickhouse+0xa0efce1)\r\n    #60 std::__1::__function::__policy_func<void ()>::operator()() const obj-x86_64-linux-gnu/../contrib/libcxx/include/functional:2221:16 (clickhouse+0xa0eaeed)\r\n    #61 std::__1::function<void ()>::operator()() const obj-x86_64-linux-gnu/../contrib/libcxx/include/functional:2560:12 (clickhouse+0xa0eaeed)\r\n    #62 ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) obj-x86_64-linux-gnu/../src/Common/ThreadPool.cpp:274:17 (clickhouse+0xa0eaeed)\r\n    #63 void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()::operator()() const obj-x86_64-linux-gnu/../src/Common/ThreadPool.cpp:139:73 (clickhouse+0xa0ee6b0)\r\n    #64 decltype(std::__1::forward<void>(fp)()) std::__1::__invoke<void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>(void&&) obj-x86_64-linux-gnu/../contrib/libcxx/include/type_traits:3676:1 (clickhouse+0xa0ee6b0)\r\n    #65 void std::__1::__thread_execute<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>(std::__1::tuple<void, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>&, std::__1::__tuple_indices<>) obj-x86_64-linux-gnu/../contrib/libcxx/include/thread:280:5 (clickhouse+0xa0ee6b0)\r\n    #66 void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()> >(void*) obj-x86_64-linux-gnu/../contrib/libcxx/include/thread:291:5 (clickhouse+0xa0ee6b0)\r\n\r\n  Previous write of size 8 at 0x7b6400081c78 by thread T222:\r\n    #0 uv__run_closing_handles obj-x86_64-linux-gnu/../contrib/libuv/src/unix/core.c:303:25 (clickhouse+0x1ceadb0a)\r\n    #1 uv_run obj-x86_64-linux-gnu/../contrib/libuv/src/unix/core.c:377:5 (clickhouse+0x1ceadb0a)\r\n    #2 datastax::internal::core::EventLoop::handle_run() obj-x86_64-linux-gnu/../contrib/cassandra/src/event_loop.cpp:168:3 (clickhouse+0x1d1650cf)\r\n    #3 datastax::internal::core::EventLoop::internal_on_run(void*) obj-x86_64-linux-gnu/../contrib/cassandra/src/event_loop.cpp:163:11 (clickhouse+0x1d1650cf)\r\n\r\n  Location is heap block of size 1256 at 0x7b6400081b00 allocated by thread T223:\r\n    #0 malloc <null> (clickhouse+0xa003a0d)\r\n    #1 datastax::internal::Memory::malloc(unsigned long) obj-x86_64-linux-gnu/../contrib/cassandra/src/memory.hpp:36:14 (clickhouse+0x1d06de56)\r\n    #2 datastax::internal::Allocated::operator new[](unsigned long) obj-x86_64-linux-gnu/../contrib/cassandra/src/allocated.cpp:25:55 (clickhouse+0x1d06de56)\r\n    #3 datastax::internal::core::RoundRobinEventLoopGroup::RoundRobinEventLoopGroup(unsigned long) obj-x86_64-linux-gnu/../contrib/cassandra/src/event_loop.hpp:213:18 (clickhouse+0x1d1201ae)\r\n    #4 datastax::internal::core::Session::on_connect(datastax::internal::SharedRefPtr<datastax::internal::core::Host> const&, datastax::internal::core::ProtocolVersion, datastax::internal::Map<datastax::internal::core::Address, datastax::internal::SharedRefPtr<datastax::internal::core::Host>, std::__1::less<datastax::internal::core::Address> > const&, datastax::internal::SharedRefPtr<datastax::internal::core::TokenMap> const&, std::__1::basic_string<char, std::__1::char_traits<char>, datastax::internal::Allocator<char> > const&) obj-x86_64-linux-gnu/../contrib/cassandra/src/session.cpp:372:31 (clickhouse+0x1d1201ae)\r\n    #5 datastax::internal::core::SessionBase::on_initialize(datastax::internal::core::ClusterConnector*) obj-x86_64-linux-gnu/../contrib/cassandra/src/session_base.cpp:202:5 (clickhouse+0x1d1b33d8)\r\n    #6 datastax::internal::Callback<void, datastax::internal::core::ClusterConnector*>::MemberInvoker<void (datastax::internal::core::SessionBase::*)(datastax::internal::core::ClusterConnector*), datastax::internal::core::SessionBase>::invoke(datastax::internal::core::ClusterConnector* const&) const obj-x86_64-linux-gnu/../contrib/cassandra/src/callback.hpp:91:45 (clickhouse+0x1d1b79b4)\r\n    #7 datastax::internal::Callback<void, datastax::internal::core::ClusterConnector*>::operator()(datastax::internal::core::ClusterConnector* const&) const obj-x86_64-linux-gnu/../contrib/cassandra/src/callback.hpp:70:57 (clickhouse+0x1d1ba951)\r\n    #8 datastax::internal::core::ClusterConnector::finish() obj-x86_64-linux-gnu/../contrib/cassandra/src/cluster_connector.cpp:137:3 (clickhouse+0x1d1ba951)\r\n    #9 datastax::internal::core::ClusterConnector::maybe_finish() obj-x86_64-linux-gnu/../contrib/cassandra/src/cluster_connector.cpp:153:5 (clickhouse+0x1d1b9192)\r\n    #10 datastax::internal::core::ClusterConnector::on_connect(datastax::internal::core::ControlConnector*) obj-x86_64-linux-gnu/../contrib/cassandra/src/cluster_connector.cpp:198:5 (clickhouse+0x1d1b9192)\r\n    #11 datastax::internal::Callback<void, datastax::internal::core::ControlConnector*>::MemberInvoker<void (datastax::internal::core::ClusterConnector::*)(datastax::internal::core::ControlConnector*), datastax::internal::core::ClusterConnector>::invoke(datastax::internal::core::ControlConnector* const&) const obj-x86_64-linux-gnu/../contrib/cassandra/src/callback.hpp:91:45 (clickhouse+0x1d1bcfd4)\r\n    #12 datastax::internal::Callback<void, datastax::internal::core::ControlConnector*>::operator()(datastax::internal::core::ControlConnector* const&) const obj-x86_64-linux-gnu/../contrib/cassandra/src/callback.hpp:70:57 (clickhouse+0x1d15f12e)\r\n    #13 datastax::internal::core::ControlConnector::finish() obj-x86_64-linux-gnu/../contrib/cassandra/src/control_connector.cpp:127:3 (clickhouse+0x1d15f12e)\r\n    #14 datastax::internal::core::ControlConnector::on_success() obj-x86_64-linux-gnu/../contrib/cassandra/src/control_connector.cpp:158:3 (clickhouse+0x1d15f3af)\r\n    #15 datastax::internal::core::ControlConnector::handle_query_schema(datastax::internal::core::SchemaConnectorRequestCallback*) obj-x86_64-linux-gnu/../contrib/cassandra/src/control_connector.cpp:298:3 (clickhouse+0x1d163ada)\r\n    #16 datastax::internal::core::SchemaConnectorRequestCallback::on_chain_set() obj-x86_64-linux-gnu/../contrib/cassandra/src/control_connector.cpp:65:45 (clickhouse+0x1d1644cc)\r\n    #17 datastax::internal::core::ChainedRequestCallback::maybe_finish() obj-x86_64-linux-gnu/../contrib/cassandra/src/request_callback.cpp:310:7 (clickhouse+0x1d14e68a)\r\n    #18 datastax::internal::core::ChainedRequestCallback::set_chain_responses(datastax::internal::core::ChainedRequestCallback::Map&) obj-x86_64-linux-gnu/../contrib/cassandra/src/request_callback.cpp:286:3 (clickhouse+0x1d14e59c)\r\n    #19 datastax::internal::core::ChainedRequestCallback::maybe_finish() obj-x86_64-linux-gnu/../contrib/cassandra/src/request_callback.cpp:308:15 (clickhouse+0x1d14e59c)\r\n    #20 datastax::internal::core::ChainedRequestCallback::set_chain_responses(datastax::internal::core::ChainedRequestCallback::Map&) obj-x86_64-linux-gnu/../contrib/cassandra/src/request_callback.cpp:286:3 (clickhouse+0x1d14e59c)\r\n    #21 datastax::internal::core::ChainedRequestCallback::maybe_finish() obj-x86_64-linux-gnu/../contrib/cassandra/src/request_callback.cpp:308:15 (clickhouse+0x1d14e59c)\r\n    #22 datastax::internal::core::ChainedRequestCallback::set_chain_responses(datastax::internal::core::ChainedRequestCallback::Map&) obj-x86_64-linux-gnu/../contrib/cassandra/src/request_callback.cpp:286:3 (clickhouse+0x1d14e59c)\r\n    #23 datastax::internal::core::ChainedRequestCallback::maybe_finish() obj-x86_64-linux-gnu/../contrib/cassandra/src/request_callback.cpp:308:15 (clickhouse+0x1d14e59c)\r\n    #24 datastax::internal::core::ChainedRequestCallback::on_internal_set(datastax::internal::core::ResponseMessage*) obj-x86_64-linux-gnu/../contrib/cassandra/src/request_callback.cpp:259:3 (clickhouse+0x1d14e3de)\r\n    #25 datastax::internal::core::SimpleRequestCallback::on_set(datastax::internal::core::ResponseMessage*) obj-x86_64-linux-gnu/../contrib/cassandra/src/request_callback.cpp:190:3 (clickhouse+0x1d14d652)\r\n    #26 datastax::internal::core::Connection::on_read(char const*, unsigned long) obj-x86_64-linux-gnu/../contrib/cassandra/src/connection.cpp:274:25 (clickhouse+0x1d157efa)\r\n    #27 datastax::internal::core::ConnectionHandler::on_read(datastax::internal::core::Socket*, long, uv_buf_t const*) obj-x86_64-linux-gnu/../contrib/cassandra/src/connection.cpp:75:16 (clickhouse+0x1d15731f)\r\n    #28 datastax::internal::core::Socket::handle_read(long, uv_buf_t const*) obj-x86_64-linux-gnu/../contrib/cassandra/src/socket.cpp:368:13 (clickhouse+0x1d1c0e95)\r\n    #29 datastax::internal::core::Socket::on_read(uv_stream_s*, long, uv_buf_t const*) obj-x86_64-linux-gnu/../contrib/cassandra/src/socket.cpp:358:11 (clickhouse+0x1d1c0e95)\r\n    #30 uv__read obj-x86_64-linux-gnu/../contrib/libuv/src/unix/stream.c:1243:7 (clickhouse+0x1cec0a45)\r\n    #31 uv__stream_io obj-x86_64-linux-gnu/../contrib/libuv/src/unix/stream.c:1310:5 (clickhouse+0x1cec0a45)\r\n    #32 uv__io_poll obj-x86_64-linux-gnu/../contrib/libuv/src/unix/linux-core.c:442:11 (clickhouse+0x1cec7f6f)\r\n    #33 uv_run obj-x86_64-linux-gnu/../contrib/libuv/src/unix/core.c:375:5 (clickhouse+0x1ceadae6)\r\n    #34 datastax::internal::core::EventLoop::handle_run() obj-x86_64-linux-gnu/../contrib/cassandra/src/event_loop.cpp:168:3 (clickhouse+0x1d1650cf)\r\n    #35 datastax::internal::core::EventLoop::internal_on_run(void*) obj-x86_64-linux-gnu/../contrib/cassandra/src/event_loop.cpp:163:11 (clickhouse+0x1d1650cf)\r\n\r\n  Thread T200 'UpdQueue' (tid=207, running) created by thread T199 at:\r\n    #0 pthread_create <null> (clickhouse+0xa00509d)\r\n    #1 std::__1::__libcpp_thread_create(unsigned long*, void* (*)(void*), void*) obj-x86_64-linux-gnu/../contrib/libcxx/include/__threading_support:509:10 (clickhouse+0xa0ee126)\r\n    #2 std::__1::thread::thread<void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'(), void>(void&&) obj-x86_64-linux-gnu/../contrib/libcxx/include/thread:307:16 (clickhouse+0xa0ee126)\r\n    #3 void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>) obj-x86_64-linux-gnu/../src/Common/ThreadPool.cpp:139:35 (clickhouse+0xa0e9554)\r\n    #4 ThreadPoolImpl<std::__1::thread>::scheduleOrThrow(std::__1::function<void ()>, int, unsigned long) obj-x86_64-linux-gnu/../src/Common/ThreadPool.cpp:171:5 (clickhouse+0xa0ef8af)\r\n    #5 ThreadFromGlobalPool::ThreadFromGlobalPool<void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>(void&&) obj-x86_64-linux-gnu/../src/Common/ThreadPool.h:169:38 (clickhouse+0xa0ef8af)\r\n    #6 void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>) obj-x86_64-linux-gnu/../src/Common/ThreadPool.cpp:139:35 (clickhouse+0xa0ebae6)\r\n    #7 ThreadPoolImpl<ThreadFromGlobalPool>::scheduleOrThrowOnError(std::__1::function<void ()>, int) obj-x86_64-linux-gnu/../src/Common/ThreadPool.cpp:159:5 (clickhouse+0xa0eb6bf)\r\n    #8 DB::CacheDictionaryUpdateQueue<(DB::DictionaryKeyType)1>::CacheDictionaryUpdateQueue(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, DB::CacheDictionaryUpdateQueueConfiguration, std::__1::function<void (std::__1::shared_ptr<DB::CacheDictionaryUpdateUnit<(DB::DictionaryKeyType)1> >)>&&) obj-x86_64-linux-gnu/../src/Dictionaries/CacheDictionaryUpdateQueue.cpp:32:21 (clickhouse+0x13c58239)\r\n    #9 DB::CacheDictionary<(DB::DictionaryKeyType)1>::CacheDictionary(DB::StorageID const&, DB::DictionaryStructure const&, std::__1::shared_ptr<DB::IDictionarySource>, std::__1::shared_ptr<DB::ICacheDictionaryStorage>, DB::CacheDictionaryUpdateQueueConfiguration, DB::ExternalLoadableLifetime, bool) <null> (clickhouse+0x13c483c8)\r\n    #10 std::__1::__unique_if<DB::CacheDictionary<(DB::DictionaryKeyType)1> >::__unique_single std::__1::make_unique<DB::CacheDictionary<(DB::DictionaryKeyType)1>, DB::StorageID const&, DB::DictionaryStructure const&, std::__1::shared_ptr<DB::IDictionarySource>, std::__1::shared_ptr<DB::ICacheDictionaryStorage>, DB::CacheDictionaryUpdateQueueConfiguration&, DB::ExternalLoadableLifetime const&, bool const&>(DB::StorageID const&, DB::DictionaryStructure const&, std::__1::shared_ptr<DB::IDictionarySource>&&, std::__1::shared_ptr<DB::ICacheDictionaryStorage>&&, DB::CacheDictionaryUpdateQueueConfiguration&, DB::ExternalLoadableLifetime const&, bool const&) obj-x86_64-linux-gnu/../contrib/libcxx/include/memory:2068:32 (clickhouse+0x13c0ee8c)\r\n    #11 std::__1::unique_ptr<DB::IDictionary, std::__1::default_delete<DB::IDictionary> > DB::createCacheDictionaryLayout<(DB::DictionaryKeyType)1, false>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::DictionaryStructure const&, Poco::Util::AbstractConfiguration const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::shared_ptr<DB::IDictionarySource>, std::__1::shared_ptr<DB::Context const>, bool) obj-x86_64-linux-gnu/../src/Dictionaries/registerCacheDictionaries.cpp:224:23 (clickhouse+0x13c0ee8c)\r\n    #12 DB::registerDictionaryCache(DB::DictionaryFactory&)::$_1::operator()(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::DictionaryStructure const&, Poco::Util::AbstractConfiguration const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::shared_ptr<DB::IDictionarySource>, std::__1::shared_ptr<DB::Context const>, bool) const obj-x86_64-linux-gnu/../src/Dictionaries/registerCacheDictionaries.cpp:259:16 (clickhouse+0x13bf9369)\r\n    #13 decltype(std::__1::forward<DB::registerDictionaryCache(DB::DictionaryFactory&)::$_1&>(fp)(std::__1::forward<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&>(fp0), std::__1::forward<DB::DictionaryStructure const&>(fp0), std::__1::forward<Poco::Util::AbstractConfiguration const&>(fp0), std::__1::forward<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&>(fp0), std::__1::forward<std::__1::shared_ptr<DB::IDictionarySource> >(fp0), std::__1::forward<std::__1::shared_ptr<DB::Context const> >(fp0), std::__1::forward<bool>(fp0))) std::__1::__invoke<DB::registerDictionaryCache(DB::DictionaryFactory&)::$_1&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::DictionaryStructure const&, Poco::Util::AbstractConfiguration const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::shared_ptr<DB::IDictionarySource>, std::__1::shared_ptr<DB::Context const>, bool>(DB::registerDictionaryCache(DB::DictionaryFactory&)::$_1&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::DictionaryStructure const&, Poco::Util::AbstractConfiguration const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::shared_ptr<DB::IDictionarySource>&&, std::__1::shared_ptr<DB::Context const>&&, bool&&) obj-x86_64-linux-gnu/../contrib/libcxx/include/type_traits:3676:1 (clickhouse+0x13bf9369)\r\n    #14 std::__1::unique_ptr<DB::IDictionary, std::__1::default_delete<DB::IDictionary> > std::__1::__invoke_void_return_wrapper<std::__1::unique_ptr<DB::IDictionary, std::__1::default_delete<DB::IDictionary> > >::__call<DB::registerDictionaryCache(DB::DictionaryFactory&)::$_1&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::DictionaryStructure const&, Poco::Util::AbstractConfiguration const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::shared_ptr<DB::IDictionarySource>, std::__1::shared_ptr<DB::Context const>, bool>(DB::registerDictionaryCache(DB::DictionaryFactory&)::$_1&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::DictionaryStructure const&, Poco::Util::AbstractConfiguration const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::shared_ptr<DB::IDictionarySource>&&, std::__1::shared_ptr<DB::Context const>&&, bool&&) obj-x86_64-linux-gnu/../contrib/libcxx/include/__functional_base:317:16 (clickhouse+0x13bf9369)\r\n    #15 std::__1::__function::__default_alloc_func<DB::registerDictionaryCache(DB::DictionaryFactory&)::$_1, std::__1::unique_ptr<DB::IDictionary, std::__1::default_delete<DB::IDictionary> > (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::DictionaryStructure const&, Poco::Util::AbstractConfiguration const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::shared_ptr<DB::IDictionarySource>, std::__1::shared_ptr<DB::Context const>, bool)>::operator()(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::DictionaryStructure const&, Poco::Util::AbstractConfiguration const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::shared_ptr<DB::IDictionarySource>&&, std::__1::shared_ptr<DB::Context const>&&, bool&&) obj-x86_64-linux-gnu/../contrib/libcxx/include/functional:1608:12 (clickhouse+0x13bf9369)\r\n    #16 std::__1::unique_ptr<DB::IDictionary, std::__1::default_delete<DB::IDictionary> > std::__1::__function::__policy_invoker<std::__1::unique_ptr<DB::IDictionary, std::__1::default_delete<DB::IDictionary> > (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::DictionaryStructure const&, Poco::Util::AbstractConfiguration const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::shared_ptr<DB::IDictionarySource>, std::__1::shared_ptr<DB::Context const>, bool)>::__call_impl<std::__1::__function::__default_alloc_func<DB::registerDictionaryCache(DB::DictionaryFactory&)::$_1, std::__1::unique_ptr<DB::IDictionary, std::__1::default_delete<DB::IDictionary> > (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::DictionaryStructure const&, Poco::Util::AbstractConfiguration const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::shared_ptr<DB::IDictionarySource>, std::__1::shared_ptr<DB::Context const>, bool)> >(std::__1::__function::__policy_storage const*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::DictionaryStructure const&, Poco::Util::AbstractConfiguration const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::shared_ptr<DB::IDictionarySource>&&, std::__1::shared_ptr<DB::Context const>&&, bool) obj-x86_64-linux-gnu/../contrib/libcxx/include/functional:2089:16 (clickhouse+0x13bf9369)\r\n    #17 std::__1::__function::__policy_func<std::__1::unique_ptr<DB::IDictionary, std::__1::default_delete<DB::IDictionary> > (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::DictionaryStructure const&, Poco::Util::AbstractConfiguration const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::shared_ptr<DB::IDictionarySource>, std::__1::shared_ptr<DB::Context const>, bool)>::operator()(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::DictionaryStructure const&, Poco::Util::AbstractConfiguration const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::shared_ptr<DB::IDictionarySource>&&, std::__1::shared_ptr<DB::Context const>&&, bool&&) const obj-x86_64-linux-gnu/../contrib/libcxx/include/functional:2221:16 (clickhouse+0x15d88bb6)\r\n    #18 std::__1::function<std::__1::unique_ptr<DB::IDictionary, std::__1::default_delete<DB::IDictionary> > (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::DictionaryStructure const&, Poco::Util::AbstractConfiguration const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::shared_ptr<DB::IDictionarySource>, std::__1::shared_ptr<DB::Context const>, bool)>::operator()(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::DictionaryStructure const&, Poco::Util::AbstractConfiguration const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::shared_ptr<DB::IDictionarySource>, std::__1::shared_ptr<DB::Context const>, bool) const obj-x86_64-linux-gnu/../contrib/libcxx/include/functional:2560:12 (clickhouse+0x15d88bb6)\r\n    #19 DB::DictionaryFactory::create(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, Poco::Util::AbstractConfiguration const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::shared_ptr<DB::Context const>, bool) const obj-x86_64-linux-gnu/../src/Dictionaries/DictionaryFactory.cpp:58:27 (clickhouse+0x15d87e31)\r\n    #20 DB::ExternalDictionariesLoader::create(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, Poco::Util::AbstractConfiguration const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const obj-x86_64-linux-gnu/../src/Interpreters/ExternalDictionariesLoader.cpp:40:42 (clickhouse+0x16578202)\r\n    #21 DB::ExternalLoader::createObject(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::ExternalLoader::ObjectConfig const&, std::__1::shared_ptr<DB::IExternalLoadable const> const&) const obj-x86_64-linux-gnu/../src/Interpreters/ExternalLoader.cpp:1515:12 (clickhouse+0x1657c3c7)\r\n    #22 auto DB::ExternalLoader::ExternalLoader(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, Poco::Logger*)::$_1::operator()<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::ExternalLoader::ObjectConfig const&, std::__1::shared_ptr<DB::IExternalLoadable const> const&>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::ExternalLoader::ObjectConfig const&, std::__1::shared_ptr<DB::IExternalLoadable const> const&) const obj-x86_64-linux-gnu/../src/Interpreters/ExternalLoader.cpp:1280:60 (clickhouse+0x1657c3c7)\r\n    #23 decltype(std::__1::forward<DB::ExternalLoader::ExternalLoader(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, Poco::Logger*)::$_1&>(fp)(std::__1::forward<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&>(fp0), std::__1::forward<DB::ExternalLoader::ObjectConfig const&>(fp0), std::__1::forward<std::__1::shared_ptr<DB::IExternalLoadable const> const&>(fp0))) std::__1::__invoke<DB::ExternalLoader::ExternalLoader(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, Poco::Logger*)::$_1&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::ExternalLoader::ObjectConfig const&, std::__1::shared_ptr<DB::IExternalLoadable const> const&>(DB::ExternalLoader::ExternalLoader(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, Poco::Logger*)::$_1&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::ExternalLoader::ObjectConfig const&, std::__1::shared_ptr<DB::IExternalLoadable const> const&) obj-x86_64-linux-gnu/../contrib/libcxx/include/type_traits:3676:1 (clickhouse+0x1657c3c7)\r\n    #24 std::__1::shared_ptr<DB::IExternalLoadable const> std::__1::__invoke_void_return_wrapper<std::__1::shared_ptr<DB::IExternalLoadable const> >::__call<DB::ExternalLoader::ExternalLoader(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, Poco::Logger*)::$_1&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::ExternalLoader::ObjectConfig const&, std::__1::shared_ptr<DB::IExternalLoadable const> const&>(DB::ExternalLoader::ExternalLoader(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, Poco::Logger*)::$_1&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::ExternalLoader::ObjectConfig const&, std::__1::shared_ptr<DB::IExternalLoadable const> const&) obj-x86_64-linux-gnu/../contrib/libcxx/include/__functional_base:317:16 (clickhouse+0x1657c3c7)\r\n    #25 std::__1::__function::__default_alloc_func<DB::ExternalLoader::ExternalLoader(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, Poco::Logger*)::$_1, std::__1::shared_ptr<DB::IExternalLoadable const> (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::ExternalLoader::ObjectConfig const&, std::__1::shared_ptr<DB::IExternalLoadable const> const&)>::operator()(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::ExternalLoader::ObjectConfig const&, std::__1::shared_ptr<DB::IExternalLoadable const> const&) obj-x86_64-linux-gnu/../contrib/libcxx/include/functional:1608:12 (clickhouse+0x1657c3c7)\r\n    #26 std::__1::shared_ptr<DB::IExternalLoadable const> std::__1::__function::__policy_invoker<std::__1::shared_ptr<DB::IExternalLoadable const> (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::ExternalLoader::ObjectConfig const&, std::__1::shared_ptr<DB::IExternalLoadable const> const&)>::__call_impl<std::__1::__function::__default_alloc_func<DB::ExternalLoader::ExternalLoader(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, Poco::Logger*)::$_1, std::__1::shared_ptr<DB::IExternalLoadable const> (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::ExternalLoader::ObjectConfig const&, std::__1::shared_ptr<DB::IExternalLoadable const> const&)> >(std::__1::__function::__policy_storage const*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::ExternalLoader::ObjectConfig const&, std::__1::shared_ptr<DB::IExternalLoadable const> const&) obj-x86_64-linux-gnu/../contrib/libcxx/include/functional:2089:16 (clickhouse+0x1657c3c7)\r\n    #27 std::__1::__function::__policy_func<std::__1::shared_ptr<DB::IExternalLoadable const> (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::ExternalLoader::ObjectConfig const&, std::__1::shared_ptr<DB::IExternalLoadable const> const&)>::operator()(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::ExternalLoader::ObjectConfig const&, std::__1::shared_ptr<DB::IExternalLoadable const> const&) const obj-x86_64-linux-gnu/../contrib/libcxx/include/functional:2221:16 (clickhouse+0x16585256)\r\n    #28 std::__1::function<std::__1::shared_ptr<DB::IExternalLoadable const> (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::ExternalLoader::ObjectConfig const&, std::__1::shared_ptr<DB::IExternalLoadable const> const&)>::operator()(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::ExternalLoader::ObjectConfig const&, std::__1::shared_ptr<DB::IExternalLoadable const> const&) const obj-x86_64-linux-gnu/../contrib/libcxx/include/functional:2560:12 (clickhouse+0x16585256)\r\n    #29 DB::ExternalLoader::LoadingDispatcher::loadSingleObject(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::ExternalLoader::ObjectConfig const&, std::__1::shared_ptr<DB::IExternalLoadable const>) obj-x86_64-linux-gnu/../src/Interpreters/ExternalLoader.cpp:1043:26 (clickhouse+0x16585256)\r\n    #30 DB::ExternalLoader::LoadingDispatcher::doLoading(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned long, bool, unsigned long, bool, std::__1::shared_ptr<DB::ThreadGroupStatus>) obj-x86_64-linux-gnu/../src/Interpreters/ExternalLoader.cpp:998:48 (clickhouse+0x165825ba)\r\n    #31 decltype(*(std::__1::forward<DB::ExternalLoader::LoadingDispatcher*&>(fp0)).*fp(std::__1::forward<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&>(fp1), std::__1::forward<unsigned long&>(fp1), std::__1::forward<bool&>(fp1), std::__1::forward<unsigned long&>(fp1), std::__1::forward<bool&>(fp1), std::__1::forward<std::__1::shared_ptr<DB::ThreadGroupStatus>&>(fp1))) std::__1::__invoke_constexpr<void (DB::ExternalLoader::LoadingDispatcher::*&)(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned long, bool, unsigned long, bool, std::__1::shared_ptr<DB::ThreadGroupStatus>), DB::ExternalLoader::LoadingDispatcher*&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&, unsigned long&, bool&, unsigned long&, bool&, std::__1::shared_ptr<DB::ThreadGroupStatus>&, void>(void (DB::ExternalLoader::LoadingDispatcher::*&)(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned long, bool, unsigned long, bool, std::__1::shared_ptr<DB::ThreadGroupStatus>), DB::ExternalLoader::LoadingDispatcher*&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&, unsigned long&, bool&, unsigned long&, bool&, std::__1::shared_ptr<DB::ThreadGroupStatus>&) obj-x86_64-linux-gnu/../contrib/libcxx/include/type_traits:3624:1 (clickhouse+0x16588bff)\r\n    #32 decltype(auto) std::__1::__apply_tuple_impl<void (DB::ExternalLoader::LoadingDispatcher::*&)(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned long, bool, unsigned long, bool, std::__1::shared_ptr<DB::ThreadGroupStatus>), std::__1::tuple<DB::ExternalLoader::LoadingDispatcher*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, unsigned long, bool, unsigned long, bool, std::__1::shared_ptr<DB::ThreadGroupStatus> >&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul>(void (DB::ExternalLoader::LoadingDispatcher::*&)(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned long, bool, unsigned long, bool, std::__1::shared_ptr<DB::ThreadGroupStatus>), std::__1::tuple<DB::ExternalLoader::LoadingDispatcher*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, unsigned long, bool, unsigned long, bool, std::__1::shared_ptr<DB::ThreadGroupStatus> >&, std::__1::__tuple_indices<0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul>) obj-x86_64-linux-gnu/../contrib/libcxx/include/tuple:1415:1 (clickhouse+0x16588bff)\r\n    #33 decltype(auto) std::__1::apply<void (DB::ExternalLoader::LoadingDispatcher::*&)(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned long, bool, unsigned long, bool, std::__1::shared_ptr<DB::ThreadGroupStatus>), std::__1::tuple<DB::ExternalLoader::LoadingDispatcher*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, unsigned long, bool, unsigned long, bool, std::__1::shared_ptr<DB::ThreadGroupStatus> >&>(void (DB::ExternalLoader::LoadingDispatcher::*&)(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned long, bool, unsigned long, bool, std::__1::shared_ptr<DB::ThreadGroupStatus>), std::__1::tuple<DB::ExternalLoader::LoadingDispatcher*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, unsigned long, bool, unsigned long, bool, std::__1::shared_ptr<DB::ThreadGroupStatus> >&) obj-x86_64-linux-gnu/../contrib/libcxx/include/tuple:1424:1 (clickhouse+0x16588bff)\r\n    #34 ThreadFromGlobalPool::ThreadFromGlobalPool<void (DB::ExternalLoader::LoadingDispatcher::*)(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned long, bool, unsigned long, bool, std::__1::shared_ptr<DB::ThreadGroupStatus>), DB::ExternalLoader::LoadingDispatcher*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&, unsigned long&, bool&, unsigned long&, bool, std::__1::shared_ptr<DB::ThreadGroupStatus> >(void (DB::ExternalLoader::LoadingDispatcher::*&&)(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned long, bool, unsigned long, bool, std::__1::shared_ptr<DB::ThreadGroupStatus>), DB::ExternalLoader::LoadingDispatcher*&&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&, unsigned long&, bool&, unsigned long&, bool&&, std::__1::shared_ptr<DB::ThreadGroupStatus>&&)::'lambda'()::operator()() obj-x86_64-linux-gnu/../src/Common/ThreadPool.h:188:13 (clickhouse+0x16588bff)\r\n    #35 decltype(std::__1::forward<void (DB::ExternalLoader::LoadingDispatcher::*)(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned long, bool, unsigned long, bool, std::__1::shared_ptr<DB::ThreadGroupStatus>)>(fp)(std::__1::forward<DB::ExternalLoader::LoadingDispatcher*>(fp0), std::__1::forward<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&>(fp0), std::__1::forward<unsigned long&>(fp0), std::__1::forward<bool&>(fp0), std::__1::forward<unsigned long&>(fp0), std::__1::forward<bool>(fp0), std::__1::forward<std::__1::shared_ptr<DB::ThreadGroupStatus> >(fp0))) std::__1::__invoke<ThreadFromGlobalPool::ThreadFromGlobalPool<void (DB::ExternalLoader::LoadingDispatcher::*)(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned long, bool, unsigned long, bool, std::__1::shared_ptr<DB::ThreadGroupStatus>), DB::ExternalLoader::LoadingDispatcher*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&, unsigned long&, bool&, unsigned long&, bool, std::__1::shared_ptr<DB::ThreadGroupStatus> >(void (DB::ExternalLoader::LoadingDispatcher::*&&)(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned long, bool, unsigned long, bool, std::__1::shared_ptr<DB::ThreadGroupStatus>), DB::ExternalLoader::LoadingDispatcher*&&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&, unsigned long&, bool&, unsigned long&, bool&&, std::__1::shared_ptr<DB::ThreadGroupStatus>&&)::'lambda'()&>(void (DB::ExternalLoader::LoadingDispatcher::*&&)(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned long, bool, unsigned long, bool, std::__1::shared_ptr<DB::ThreadGroupStatus>), DB::ExternalLoader::LoadingDispatcher*&&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&, unsigned long&, bool&, unsigned long&, bool&&, std::__1::shared_ptr<DB::ThreadGroupStatus>&&) obj-x86_64-linux-gnu/../contrib/libcxx/include/type_traits:3676:1 (clickhouse+0x16588961)\r\n    #36 void std::__1::__invoke_void_return_wrapper<void>::__call<ThreadFromGlobalPool::ThreadFromGlobalPool<void (DB::ExternalLoader::LoadingDispatcher::*)(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned long, bool, unsigned long, bool, std::__1::shared_ptr<DB::ThreadGroupStatus>), DB::ExternalLoader::LoadingDispatcher*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&, unsigned long&, bool&, unsigned long&, bool, std::__1::shared_ptr<DB::ThreadGroupStatus> >(void (DB::ExternalLoader::LoadingDispatcher::*&&)(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned long, bool, unsigned long, bool, std::__1::shared_ptr<DB::ThreadGroupStatus>), DB::ExternalLoader::LoadingDispatcher*&&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&, unsigned long&, bool&, unsigned long&, bool&&, std::__1::shared_ptr<DB::ThreadGroupStatus>&&)::'lambda'()&>(ThreadFromGlobalPool::ThreadFromGlobalPool<void (DB::ExternalLoader::LoadingDispatcher::*)(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned long, bool, unsigned long, bool, std::__1::shared_ptr<DB::ThreadGroupStatus>), DB::ExternalLoader::LoadingDispatcher*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&, unsigned long&, bool&, unsigned long&, bool, std::__1::shared_ptr<DB::ThreadGroupStatus> >(void (DB::ExternalLoader::LoadingDispatcher::*&&)(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned long, bool, unsigned long, bool, std::__1::shared_ptr<DB::ThreadGroupStatus>), DB::ExternalLoader::LoadingDispatcher*&&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&, unsigned long&, bool&, unsigned long&, bool&&, std::__1::shared_ptr<DB::ThreadGroupStatus>&&)::'lambda'()&) obj-x86_64-linux-gnu/../contrib/libcxx/include/__functional_base:348:9 (clickhouse+0x16588961)\r\n    #37 std::__1::__function::__default_alloc_func<ThreadFromGlobalPool::ThreadFromGlobalPool<void (DB::ExternalLoader::LoadingDispatcher::*)(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned long, bool, unsigned long, bool, std::__1::shared_ptr<DB::ThreadGroupStatus>), DB::ExternalLoader::LoadingDispatcher*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&, unsigned long&, bool&, unsigned long&, bool, std::__1::shared_ptr<DB::ThreadGroupStatus> >(void (DB::ExternalLoader::LoadingDispatcher::*&&)(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned long, bool, unsigned long, bool, std::__1::shared_ptr<DB::ThreadGroupStatus>), DB::ExternalLoader::LoadingDispatcher*&&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&, unsigned long&, bool&, unsigned long&, bool&&, std::__1::shared_ptr<DB::ThreadGroupStatus>&&)::'lambda'(), void ()>::operator()() obj-x86_64-linux-gnu/../contrib/libcxx/include/functional:1608:12 (clickhouse+0x16588961)\r\n    #38 void std::__1::__function::__policy_invoker<void ()>::__call_impl<std::__1::__function::__default_alloc_func<ThreadFromGlobalPool::ThreadFromGlobalPool<void (DB::ExternalLoader::LoadingDispatcher::*)(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned long, bool, unsigned long, bool, std::__1::shared_ptr<DB::ThreadGroupStatus>), DB::ExternalLoader::LoadingDispatcher*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&, unsigned long&, bool&, unsigned long&, bool, std::__1::shared_ptr<DB::ThreadGroupStatus> >(void (DB::ExternalLoader::LoadingDispatcher::*&&)(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned long, bool, unsigned long, bool, std::__1::shared_ptr<DB::ThreadGroupStatus>), DB::ExternalLoader::LoadingDispatcher*&&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&, unsigned long&, bool&, unsigned long&, bool&&, std::__1::shared_ptr<DB::ThreadGroupStatus>&&)::'lambda'(), void ()> >(std::__1::__function::__policy_storage const*) obj-x86_64-linux-gnu/../contrib/libcxx/include/functional:2089:16 (clickhouse+0x16588961)\r\n    #39 std::__1::__function::__policy_func<void ()>::operator()() const obj-x86_64-linux-gnu/../contrib/libcxx/include/functional:2221:16 (clickhouse+0xa0eaeed)\r\n    #40 std::__1::function<void ()>::operator()() const obj-x86_64-linux-gnu/../contrib/libcxx/include/functional:2560:12 (clickhouse+0xa0eaeed)\r\n    #41 ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) obj-x86_64-linux-gnu/../src/Common/ThreadPool.cpp:274:17 (clickhouse+0xa0eaeed)\r\n    #42 void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()::operator()() const obj-x86_64-linux-gnu/../src/Common/ThreadPool.cpp:139:73 (clickhouse+0xa0ee6b0)\r\n    #43 decltype(std::__1::forward<void>(fp)()) std::__1::__invoke<void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>(void&&) obj-x86_64-linux-gnu/../contrib/libcxx/include/type_traits:3676:1 (clickhouse+0xa0ee6b0)\r\n    #44 void std::__1::__thread_execute<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>(std::__1::tuple<void, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>&, std::__1::__tuple_indices<>) obj-x86_64-linux-gnu/../contrib/libcxx/include/thread:280:5 (clickhouse+0xa0ee6b0)\r\n    #45 void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()> >(void*) obj-x86_64-linux-gnu/../contrib/libcxx/include/thread:291:5 (clickhouse+0xa0ee6b0)\r\n\r\n  Thread T222 (tid=248, running) created by thread T223 at:\r\n    #0 pthread_create <null> (clickhouse+0xa00509d)\r\n    #1 uv_thread_create_ex obj-x86_64-linux-gnu/../contrib/libuv/src/unix/thread.c:258:9 (clickhouse+0x1cec406b)\r\n    #2 uv_thread_create obj-x86_64-linux-gnu/../contrib/libuv/src/unix/thread.c:212:10 (clickhouse+0x1cec3f57)\r\n    #3 datastax::internal::core::EventLoop::run() obj-x86_64-linux-gnu/../contrib/cassandra/src/event_loop.cpp:93:12 (clickhouse+0x1d165985)\r\n    #4 datastax::internal::core::RoundRobinEventLoopGroup::run() obj-x86_64-linux-gnu/../contrib/cassandra/src/event_loop.cpp:217:26 (clickhouse+0x1d165985)\r\n    #5 datastax::internal::core::Session::on_connect(datastax::internal::SharedRefPtr<datastax::internal::core::Host> const&, datastax::internal::core::ProtocolVersion, datastax::internal::Map<datastax::internal::core::Address, datastax::internal::SharedRefPtr<datastax::internal::core::Host>, std::__1::less<datastax::internal::core::Address> > const&, datastax::internal::SharedRefPtr<datastax::internal::core::TokenMap> const&, std::__1::basic_string<char, std::__1::char_traits<char>, datastax::internal::Allocator<char> > const&) obj-x86_64-linux-gnu/../contrib/cassandra/src/session.cpp:379:27 (clickhouse+0x1d120412)\r\n    #6 datastax::internal::core::SessionBase::on_initialize(datastax::internal::core::ClusterConnector*) obj-x86_64-linux-gnu/../contrib/cassandra/src/session_base.cpp:202:5 (clickhouse+0x1d1b33d8)\r\n    #7 datastax::internal::Callback<void, datastax::internal::core::ClusterConnector*>::MemberInvoker<void (datastax::internal::core::SessionBase::*)(datastax::internal::core::ClusterConnector*), datastax::internal::core::SessionBase>::invoke(datastax::internal::core::ClusterConnector* const&) const obj-x86_64-linux-gnu/../contrib/cassandra/src/callback.hpp:91:45 (clickhouse+0x1d1b79b4)\r\n    #8 datastax::internal::Callback<void, datastax::internal::core::ClusterConnector*>::operator()(datastax::internal::core::ClusterConnector* const&) const obj-x86_64-linux-gnu/../contrib/cassandra/src/callback.hpp:70:57 (clickhouse+0x1d1ba951)\r\n    #9 datastax::internal::core::ClusterConnector::finish() obj-x86_64-linux-gnu/../contrib/cassandra/src/cluster_connector.cpp:137:3 (clickhouse+0x1d1ba951)\r\n    #10 datastax::internal::core::ClusterConnector::maybe_finish() obj-x86_64-linux-gnu/../contrib/cassandra/src/cluster_connector.cpp:153:5 (clickhouse+0x1d1b9192)\r\n    #11 datastax::internal::core::ClusterConnector::on_connect(datastax::internal::core::ControlConnector*) obj-x86_64-linux-gnu/../contrib/cassandra/src/cluster_connector.cpp:198:5 (clickhouse+0x1d1b9192)\r\n    #12 datastax::internal::Callback<void, datastax::internal::core::ControlConnector*>::MemberInvoker<void (datastax::internal::core::ClusterConnector::*)(datastax::internal::core::ControlConnector*), datastax::internal::core::ClusterConnector>::invoke(datastax::internal::core::ControlConnector* const&) const obj-x86_64-linux-gnu/../contrib/cassandra/src/callback.hpp:91:45 (clickhouse+0x1d1bcfd4)\r\n    #13 datastax::internal::Callback<void, datastax::internal::core::ControlConnector*>::operator()(datastax::internal::core::ControlConnector* const&) const obj-x86_64-linux-gnu/../contrib/cassandra/src/callback.hpp:70:57 (clickhouse+0x1d15f12e)\r\n    #14 datastax::internal::core::ControlConnector::finish() obj-x86_64-linux-gnu/../contrib/cassandra/src/control_connector.cpp:127:3 (clickhouse+0x1d15f12e)\r\n    #15 datastax::internal::core::ControlConnector::on_success() obj-x86_64-linux-gnu/../contrib/cassandra/src/control_connector.cpp:158:3 (clickhouse+0x1d15f3af)\r\n    #16 datastax::internal::core::ControlConnector::handle_query_schema(datastax::internal::core::SchemaConnectorRequestCallback*) obj-x86_64-linux-gnu/../contrib/cassandra/src/control_connector.cpp:298:3 (clickhouse+0x1d163ada)\r\n    #17 datastax::internal::core::SchemaConnectorRequestCallback::on_chain_set() obj-x86_64-linux-gnu/../contrib/cassandra/src/control_connector.cpp:65:45 (clickhouse+0x1d1644cc)\r\n    #18 datastax::internal::core::ChainedRequestCallback::maybe_finish() obj-x86_64-linux-gnu/../contrib/cassandra/src/request_callback.cpp:310:7 (clickhouse+0x1d14e68a)\r\n    #19 datastax::internal::core::ChainedRequestCallback::set_chain_responses(datastax::internal::core::ChainedRequestCallback::Map&) obj-x86_64-linux-gnu/../contrib/cassandra/src/request_callback.cpp:286:3 (clickhouse+0x1d14e59c)\r\n    #20 datastax::internal::core::ChainedRequestCallback::maybe_finish() obj-x86_64-linux-gnu/../contrib/cassandra/src/request_callback.cpp:308:15 (clickhouse+0x1d14e59c)\r\n    #21 datastax::internal::core::ChainedRequestCallback::set_chain_responses(datastax::internal::core::ChainedRequestCallback::Map&) obj-x86_64-linux-gnu/../contrib/cassandra/src/request_callback.cpp:286:3 (clickhouse+0x1d14e59c)\r\n    #22 datastax::internal::core::ChainedRequestCallback::maybe_finish() obj-x86_64-linux-gnu/../contrib/cassandra/src/request_callback.cpp:308:15 (clickhouse+0x1d14e59c)\r\n    #23 datastax::internal::core::ChainedRequestCallback::set_chain_responses(datastax::internal::core::ChainedRequestCallback::Map&) obj-x86_64-linux-gnu/../contrib/cassandra/src/request_callback.cpp:286:3 (clickhouse+0x1d14e59c)\r\n    #24 datastax::internal::core::ChainedRequestCallback::maybe_finish() obj-x86_64-linux-gnu/../contrib/cassandra/src/request_callback.cpp:308:15 (clickhouse+0x1d14e59c)\r\n    #25 datastax::internal::core::ChainedRequestCallback::on_internal_set(datastax::internal::core::ResponseMessage*) obj-x86_64-linux-gnu/../contrib/cassandra/src/request_callback.cpp:259:3 (clickhouse+0x1d14e3de)\r\n    #26 datastax::internal::core::SimpleRequestCallback::on_set(datastax::internal::core::ResponseMessage*) obj-x86_64-linux-gnu/../contrib/cassandra/src/request_callback.cpp:190:3 (clickhouse+0x1d14d652)\r\n    #27 datastax::internal::core::Connection::on_read(char const*, unsigned long) obj-x86_64-linux-gnu/../contrib/cassandra/src/connection.cpp:274:25 (clickhouse+0x1d157efa)\r\n    #28 datastax::internal::core::ConnectionHandler::on_read(datastax::internal::core::Socket*, long, uv_buf_t const*) obj-x86_64-linux-gnu/../contrib/cassandra/src/connection.cpp:75:16 (clickhouse+0x1d15731f)\r\n    #29 datastax::internal::core::Socket::handle_read(long, uv_buf_t const*) obj-x86_64-linux-gnu/../contrib/cassandra/src/socket.cpp:368:13 (clickhouse+0x1d1c0e95)\r\n    #30 datastax::internal::core::Socket::on_read(uv_stream_s*, long, uv_buf_t const*) obj-x86_64-linux-gnu/../contrib/cassandra/src/socket.cpp:358:11 (clickhouse+0x1d1c0e95)\r\n    #31 uv__read obj-x86_64-linux-gnu/../contrib/libuv/src/unix/stream.c:1243:7 (clickhouse+0x1cec0a45)\r\n    #32 uv__stream_io obj-x86_64-linux-gnu/../contrib/libuv/src/unix/stream.c:1310:5 (clickhouse+0x1cec0a45)\r\n    #33 uv__io_poll obj-x86_64-linux-gnu/../contrib/libuv/src/unix/linux-core.c:442:11 (clickhouse+0x1cec7f6f)\r\n    #34 uv_run obj-x86_64-linux-gnu/../contrib/libuv/src/unix/core.c:375:5 (clickhouse+0x1ceadae6)\r\n    #35 datastax::internal::core::EventLoop::handle_run() obj-x86_64-linux-gnu/../contrib/cassandra/src/event_loop.cpp:168:3 (clickhouse+0x1d1650cf)\r\n    #36 datastax::internal::core::EventLoop::internal_on_run(void*) obj-x86_64-linux-gnu/../contrib/cassandra/src/event_loop.cpp:163:11 (clickhouse+0x1d1650cf)\r\n\r\n  Thread T223 (tid=247, running) created by thread T200 at:\r\n    #0 pthread_create <null> (clickhouse+0xa00509d)\r\n    #1 uv_thread_create_ex obj-x86_64-linux-gnu/../contrib/libuv/src/unix/thread.c:258:9 (clickhouse+0x1cec406b)\r\n    #2 uv_thread_create obj-x86_64-linux-gnu/../contrib/libuv/src/unix/thread.c:212:10 (clickhouse+0x1cec3f57)\r\n    #3 datastax::internal::core::EventLoop::run() obj-x86_64-linux-gnu/../contrib/cassandra/src/event_loop.cpp:93:12 (clickhouse+0x1d165066)\r\n    #4 datastax::internal::core::SessionBase::connect(datastax::internal::core::Config const&, std::__1::basic_string<char, std::__1::char_traits<char>, datastax::internal::Allocator<char> > const&) obj-x86_64-linux-gnu/../contrib/cassandra/src/session_base.cpp:76:23 (clickhouse+0x1d1b2875)\r\n    #5 cass_session_connect_keyspace_n obj-x86_64-linux-gnu/../contrib/cassandra/src/session.cpp:63:31 (clickhouse+0x1d11d624)\r\n    #6 cass_session_connect_keyspace obj-x86_64-linux-gnu/../contrib/cassandra/src/session.cpp:58:10 (clickhouse+0x1d11d4a7)\r\n    #7 cass_session_connect obj-x86_64-linux-gnu/../contrib/cassandra/src/session.cpp:53:10 (clickhouse+0x1d11d4a7)\r\n    #8 DB::CassandraDictionarySource::getSession() obj-x86_64-linux-gnu/../src/Dictionaries/CassandraDictionarySource.cpp:200:28 (clickhouse+0x13623c00)\r\n    #9 DB::CassandraDictionarySource::loadKeys(std::__1::vector<COW<DB::IColumn>::immutable_ptr<DB::IColumn>, std::__1::allocator<COW<DB::IColumn>::immutable_ptr<DB::IColumn> > > const&, std::__1::vector<unsigned long, std::__1::allocator<unsigned long> > const&) obj-x86_64-linux-gnu/../src/Dictionaries/CassandraDictionarySource.cpp:176:64 (clickhouse+0x13624a8b)\r\n    #10 DB::CacheDictionary<(DB::DictionaryKeyType)1>::update(std::__1::shared_ptr<DB::CacheDictionaryUpdateUnit<(DB::DictionaryKeyType)1> >) <null> (clickhouse+0x13c4f20d)\r\n    #11 void std::__1::__function::__policy_invoker<void (std::__1::shared_ptr<DB::CacheDictionaryUpdateUnit<(DB::DictionaryKeyType)1> >)>::__call_impl<std::__1::__function::__default_alloc_func<DB::CacheDictionary<(DB::DictionaryKeyType)1>::CacheDictionary(DB::StorageID const&, DB::DictionaryStructure const&, std::__1::shared_ptr<DB::IDictionarySource>, std::__1::shared_ptr<DB::ICacheDictionaryStorage>, DB::CacheDictionaryUpdateQueueConfiguration, DB::ExternalLoadableLifetime, bool)::'lambda'(std::__1::shared_ptr<DB::CacheDictionaryUpdateUnit<(DB::DictionaryKeyType)1> >), void (std::__1::shared_ptr<DB::CacheDictionaryUpdateUnit<(DB::DictionaryKeyType)1> >)> >(std::__1::__function::__policy_storage const*, std::__1::shared_ptr<DB::CacheDictionaryUpdateUnit<(DB::DictionaryKeyType)1> >&&) <null> (clickhouse+0x13c54a8f)\r\n    #12 std::__1::__function::__policy_func<void (std::__1::shared_ptr<DB::CacheDictionaryUpdateUnit<(DB::DictionaryKeyType)1> >)>::operator()(std::__1::shared_ptr<DB::CacheDictionaryUpdateUnit<(DB::DictionaryKeyType)1> >&&) const obj-x86_64-linux-gnu/../contrib/libcxx/include/functional:2221:16 (clickhouse+0x13c59268)\r\n    #13 std::__1::function<void (std::__1::shared_ptr<DB::CacheDictionaryUpdateUnit<(DB::DictionaryKeyType)1> >)>::operator()(std::__1::shared_ptr<DB::CacheDictionaryUpdateUnit<(DB::DictionaryKeyType)1> >) const obj-x86_64-linux-gnu/../contrib/libcxx/include/functional:2560:12 (clickhouse+0x13c59268)\r\n    #14 DB::CacheDictionaryUpdateQueue<(DB::DictionaryKeyType)1>::updateThreadFunction() obj-x86_64-linux-gnu/../src/Dictionaries/CacheDictionaryUpdateQueue.cpp:134:13 (clickhouse+0x13c59268)\r\n    #15 DB::CacheDictionaryUpdateQueue<(DB::DictionaryKeyType)1>::CacheDictionaryUpdateQueue(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, DB::CacheDictionaryUpdateQueueConfiguration, std::__1::function<void (std::__1::shared_ptr<DB::CacheDictionaryUpdateUnit<(DB::DictionaryKeyType)1> >)>&&)::'lambda'()::operator()() const obj-x86_64-linux-gnu/../src/Dictionaries/CacheDictionaryUpdateQueue.cpp:32:53 (clickhouse+0x13c5bc21)\r\n    #16 decltype(std::__1::forward<DB::CacheDictionaryUpdateQueue<(DB::DictionaryKeyType)1>::CacheDictionaryUpdateQueue(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, DB::CacheDictionaryUpdateQueueConfiguration, std::__1::function<void (std::__1::shared_ptr<DB::CacheDictionaryUpdateUnit<(DB::DictionaryKeyType)1> >)>&&)::'lambda'()&>(fp)()) std::__1::__invoke<DB::CacheDictionaryUpdateQueue<(DB::DictionaryKeyType)1>::CacheDictionaryUpdateQueue(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, DB::CacheDictionaryUpdateQueueConfiguration, std::__1::function<void (std::__1::shared_ptr<DB::CacheDictionaryUpdateUnit<(DB::DictionaryKeyType)1> >)>&&)::'lambda'()&>(DB::CacheDictionaryUpdateQueue<(DB::DictionaryKeyType)1>::CacheDictionaryUpdateQueue(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, DB::CacheDictionaryUpdateQueueConfiguration, std::__1::function<void (std::__1::shared_ptr<DB::CacheDictionaryUpdateUnit<(DB::DictionaryKeyType)1> >)>&&)::'lambda'()&) obj-x86_64-linux-gnu/../contrib/libcxx/include/type_traits:3676:1 (clickhouse+0x13c5bc21)\r\n    #17 void std::__1::__invoke_void_return_wrapper<void>::__call<DB::CacheDictionaryUpdateQueue<(DB::DictionaryKeyType)1>::CacheDictionaryUpdateQueue(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, DB::CacheDictionaryUpdateQueueConfiguration, std::__1::function<void (std::__1::shared_ptr<DB::CacheDictionaryUpdateUnit<(DB::DictionaryKeyType)1> >)>&&)::'lambda'()&>(DB::CacheDictionaryUpdateQueue<(DB::DictionaryKeyType)1>::CacheDictionaryUpdateQueue(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, DB::CacheDictionaryUpdateQueueConfiguration, std::__1::function<void (std::__1::shared_ptr<DB::CacheDictionaryUpdateUnit<(DB::DictionaryKeyType)1> >)>&&)::'lambda'()&) obj-x86_64-linux-gnu/../contrib/libcxx/include/__functional_base:348:9 (clickhouse+0x13c5bc21)\r\n    #18 std::__1::__function::__default_alloc_func<DB::CacheDictionaryUpdateQueue<(DB::DictionaryKeyType)1>::CacheDictionaryUpdateQueue(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, DB::CacheDictionaryUpdateQueueConfiguration, std::__1::function<void (std::__1::shared_ptr<DB::CacheDictionaryUpdateUnit<(DB::DictionaryKeyType)1> >)>&&)::'lambda'(), void ()>::operator()() obj-x86_64-linux-gnu/../contrib/libcxx/include/functional:1608:12 (clickhouse+0x13c5bc21)\r\n    #19 void std::__1::__function::__policy_invoker<void ()>::__call_impl<std::__1::__function::__default_alloc_func<DB::CacheDictionaryUpdateQueue<(DB::DictionaryKeyType)1>::CacheDictionaryUpdateQueue(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, DB::CacheDictionaryUpdateQueueConfiguration, std::__1::function<void (std::__1::shared_ptr<DB::CacheDictionaryUpdateUnit<(DB::DictionaryKeyType)1> >)>&&)::'lambda'(), void ()> >(std::__1::__function::__policy_storage const*) obj-x86_64-linux-gnu/../contrib/libcxx/include/functional:2089:16 (clickhouse+0x13c5bc21)\r\n    #20 std::__1::__function::__policy_func<void ()>::operator()() const obj-x86_64-linux-gnu/../contrib/libcxx/include/functional:2221:16 (clickhouse+0xa0ed877)\r\n    #21 std::__1::function<void ()>::operator()() const obj-x86_64-linux-gnu/../contrib/libcxx/include/functional:2560:12 (clickhouse+0xa0ed877)\r\n    #22 ThreadPoolImpl<ThreadFromGlobalPool>::worker(std::__1::__list_iterator<ThreadFromGlobalPool, void*>) obj-x86_64-linux-gnu/../src/Common/ThreadPool.cpp:274:17 (clickhouse+0xa0ed877)\r\n    #23 void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()::operator()() const obj-x86_64-linux-gnu/../src/Common/ThreadPool.cpp:139:73 (clickhouse+0xa0efe38)\r\n    #24 decltype(std::__1::forward<void>(fp)()) std::__1::__invoke_constexpr<void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()&>(void&&) obj-x86_64-linux-gnu/../contrib/libcxx/include/type_traits:3682:1 (clickhouse+0xa0efe38)\r\n    #25 decltype(auto) std::__1::__apply_tuple_impl<void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()&, std::__1::tuple<>&>(void&&, std::__1::tuple<>&, std::__1::__tuple_indices<>) obj-x86_64-linux-gnu/../contrib/libcxx/include/tuple:1415:1 (clickhouse+0xa0efe38)\r\n    #26 decltype(auto) std::__1::apply<void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()&, std::__1::tuple<>&>(void&&, std::__1::tuple<>&) obj-x86_64-linux-gnu/../contrib/libcxx/include/tuple:1424:1 (clickhouse+0xa0efe38)\r\n    #27 ThreadFromGlobalPool::ThreadFromGlobalPool<void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>(void&&)::'lambda'()::operator()() obj-x86_64-linux-gnu/../src/Common/ThreadPool.h:188:13 (clickhouse+0xa0efe38)\r\n    #28 decltype(std::__1::forward<void>(fp)()) std::__1::__invoke<ThreadFromGlobalPool::ThreadFromGlobalPool<void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>(void&&)::'lambda'()&>(void&&) obj-x86_64-linux-gnu/../contrib/libcxx/include/type_traits:3676:1 (clickhouse+0xa0efce1)\r\n    #29 void std::__1::__invoke_void_return_wrapper<void>::__call<ThreadFromGlobalPool::ThreadFromGlobalPool<void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>(void&&)::'lambda'()&>(ThreadFromGlobalPool::ThreadFromGlobalPool<void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>(void&&)::'lambda'()&) obj-x86_64-linux-gnu/../contrib/libcxx/include/__functional_base:348:9 (clickhouse+0xa0efce1)\r\n    #30 std::__1::__function::__default_alloc_func<ThreadFromGlobalPool::ThreadFromGlobalPool<void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>(void&&)::'lambda'(), void ()>::operator()() obj-x86_64-linux-gnu/../contrib/libcxx/include/functional:1608:12 (clickhouse+0xa0efce1)\r\n    #31 void std::__1::__function::__policy_invoker<void ()>::__call_impl<std::__1::__function::__default_alloc_func<ThreadFromGlobalPool::ThreadFromGlobalPool<void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>(void&&)::'lambda'(), void ()> >(std::__1::__function::__policy_storage const*) obj-x86_64-linux-gnu/../contrib/libcxx/include/functional:2089:16 (clickhouse+0xa0efce1)\r\n    #32 std::__1::__function::__policy_func<void ()>::operator()() const obj-x86_64-linux-gnu/../contrib/libcxx/include/functional:2221:16 (clickhouse+0xa0eaeed)\r\n    #33 std::__1::function<void ()>::operator()() const obj-x86_64-linux-gnu/../contrib/libcxx/include/functional:2560:12 (clickhouse+0xa0eaeed)\r\n    #34 ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) obj-x86_64-linux-gnu/../src/Common/ThreadPool.cpp:274:17 (clickhouse+0xa0eaeed)\r\n    #35 void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()::operator()() const obj-x86_64-linux-gnu/../src/Common/ThreadPool.cpp:139:73 (clickhouse+0xa0ee6b0)\r\n    #36 decltype(std::__1::forward<void>(fp)()) std::__1::__invoke<void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>(void&&) obj-x86_64-linux-gnu/../contrib/libcxx/include/type_traits:3676:1 (clickhouse+0xa0ee6b0)\r\n    #37 void std::__1::__thread_execute<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>(std::__1::tuple<void, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>&, std::__1::__tuple_indices<>) obj-x86_64-linux-gnu/../contrib/libcxx/include/thread:280:5 (clickhouse+0xa0ee6b0)\r\n    #38 void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()> >(void*) obj-x86_64-linux-gnu/../contrib/libcxx/include/thread:291:5 (clickhouse+0xa0ee6b0)\r\n\r\nSUMMARY: ThreadSanitizer: data race obj-x86_64-linux-gnu/../contrib/libuv/src/unix/core.c:225:33 in uv__make_close_pending\r\n==================\r\n\r\n```","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33006/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33006/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33002","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33002/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33002/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33002/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33002","id":1085781320,"node_id":"I_kwDOA5dJV85At7VI","number":33002,"title":"REPLACE doesn't work with query parameters","user":{"login":"UnamedRus","id":9449405,"node_id":"MDQ6VXNlcjk0NDk0MDU=","avatar_url":"https://avatars.githubusercontent.com/u/9449405?v=4","gravatar_id":"","url":"https://api.github.com/users/UnamedRus","html_url":"https://github.com/UnamedRus","followers_url":"https://api.github.com/users/UnamedRus/followers","following_url":"https://api.github.com/users/UnamedRus/following{/other_user}","gists_url":"https://api.github.com/users/UnamedRus/gists{/gist_id}","starred_url":"https://api.github.com/users/UnamedRus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/UnamedRus/subscriptions","organizations_url":"https://api.github.com/users/UnamedRus/orgs","repos_url":"https://api.github.com/users/UnamedRus/repos","events_url":"https://api.github.com/users/UnamedRus/events{/privacy}","received_events_url":"https://api.github.com/users/UnamedRus/received_events","type":"User","site_admin":false},"labels":[{"id":1397894054,"node_id":"MDU6TGFiZWwxMzk3ODk0MDU0","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/unfinished%20code","name":"unfinished code","color":"ff8800","default":false,"description":""}],"state":"open","locked":false,"assignee":{"login":"amosbird","id":5085485,"node_id":"MDQ6VXNlcjUwODU0ODU=","avatar_url":"https://avatars.githubusercontent.com/u/5085485?v=4","gravatar_id":"","url":"https://api.github.com/users/amosbird","html_url":"https://github.com/amosbird","followers_url":"https://api.github.com/users/amosbird/followers","following_url":"https://api.github.com/users/amosbird/following{/other_user}","gists_url":"https://api.github.com/users/amosbird/gists{/gist_id}","starred_url":"https://api.github.com/users/amosbird/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/amosbird/subscriptions","organizations_url":"https://api.github.com/users/amosbird/orgs","repos_url":"https://api.github.com/users/amosbird/repos","events_url":"https://api.github.com/users/amosbird/events{/privacy}","received_events_url":"https://api.github.com/users/amosbird/received_events","type":"User","site_admin":false},"assignees":[{"login":"amosbird","id":5085485,"node_id":"MDQ6VXNlcjUwODU0ODU=","avatar_url":"https://avatars.githubusercontent.com/u/5085485?v=4","gravatar_id":"","url":"https://api.github.com/users/amosbird","html_url":"https://github.com/amosbird","followers_url":"https://api.github.com/users/amosbird/followers","following_url":"https://api.github.com/users/amosbird/following{/other_user}","gists_url":"https://api.github.com/users/amosbird/gists{/gist_id}","starred_url":"https://api.github.com/users/amosbird/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/amosbird/subscriptions","organizations_url":"https://api.github.com/users/amosbird/orgs","repos_url":"https://api.github.com/users/amosbird/repos","events_url":"https://api.github.com/users/amosbird/events{/privacy}","received_events_url":"https://api.github.com/users/amosbird/received_events","type":"User","site_admin":false}],"milestone":null,"comments":1,"created_at":"2021-12-21T12:27:23Z","updated_at":"2021-12-21T15:38:02Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"It's not possible to use query parameters in * REPLACE statement.\r\n\r\n\r\n**How to reproduce**\r\nClickHouse 21.13\r\n\r\n```\r\nclickhouse-client -mn --param_test_a=\"30\" --query \"WITH {test_a:UInt32} as column SELECT * REPLACE({test_a:UInt32} as number) FROM numbers(2) FORMAT TSVWithNames\"\r\nReceived exception from server (version 21.13.1):\r\nCode: 456. DB::Exception: Received from localhost:9000. DB::Exception: Query parameter `test_a` was not set. (UNKNOWN_QUERY_PARAMETER)\r\n(query: WITH {test_a:UInt32} as column SELECT * REPLACE({test_a:UInt32} as number) FROM numbers(2) FORMAT TSVWithNames)\r\n\r\nclickhouse-client -mn --param_test_a=\"30\" --query \"WITH {test_a:UInt32} as column SELECT * REPLACE(column as number) FROM numbers(2) FORMAT TSVWithNames\"\r\nnumber\r\n0\r\n1\r\n\r\nclickhouse-client -mn --param_test_a=\"30\" --query \"WITH 30 as column SELECT * REPLACE(column as number) FROM numbers(2) FORMAT TSVWithNames\"\r\nnumber\r\n30\r\n30\r\n```\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33002/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33002/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33000","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33000/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33000/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33000/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/33000","id":1085771549,"node_id":"I_kwDOA5dJV85At48d","number":33000,"title":"Query parameters + WITH + AS column doesn't expand.","user":{"login":"UnamedRus","id":9449405,"node_id":"MDQ6VXNlcjk0NDk0MDU=","avatar_url":"https://avatars.githubusercontent.com/u/9449405?v=4","gravatar_id":"","url":"https://api.github.com/users/UnamedRus","html_url":"https://github.com/UnamedRus","followers_url":"https://api.github.com/users/UnamedRus/followers","following_url":"https://api.github.com/users/UnamedRus/following{/other_user}","gists_url":"https://api.github.com/users/UnamedRus/gists{/gist_id}","starred_url":"https://api.github.com/users/UnamedRus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/UnamedRus/subscriptions","organizations_url":"https://api.github.com/users/UnamedRus/orgs","repos_url":"https://api.github.com/users/UnamedRus/repos","events_url":"https://api.github.com/users/UnamedRus/events{/privacy}","received_events_url":"https://api.github.com/users/UnamedRus/received_events","type":"User","site_admin":false},"labels":[{"id":1575085465,"node_id":"MDU6TGFiZWwxNTc1MDg1NDY1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/unexpected%20behaviour","name":"unexpected behaviour","color":"e088ca","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-12-21T12:16:07Z","updated_at":"2021-12-21T12:16:07Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"**Describe the unexpected behaviour**\r\nQuery parameters doesn't expand when they being used in WITH and aliased to already exist column name.\r\n\r\n**How to reproduce**\r\nClickHouse 21.13\r\n```\r\nclickhouse-client -mn --param_test_a=\"30\" --query \"WITH {test_a:UInt32} as column SELECT column as number FROM numbers(2) FORMAT TSVWithNames\"\r\nnumber\r\n0\r\n1\r\n\r\nclickhouse-client -mn --param_test_a=\"30\" --query \"WITH {test_a:UInt32} as column SELECT {test_a:UInt32} as number FROM numbers(2) FORMAT TSVWithNames\"\r\nnumber\r\n30\r\n30\r\n\r\nclickhouse-client -mn --param_test_a=\"30\" --query \"WITH {test_a:UInt32} as column SELECT column FROM numbers(2) FORMAT TSVWithNames\"\r\ncolumn\r\n30\r\n30\r\n````","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33000/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/33000/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32999","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32999/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32999/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32999/events","html_url":"https://github.com/ClickHouse/ClickHouse/pull/32999","id":1085766538,"node_id":"PR_kwDOA5dJV84wISRG","number":32999,"title":"Cleanup GROUPING SETS formating","user":{"login":"novikd","id":10158699,"node_id":"MDQ6VXNlcjEwMTU4Njk5","avatar_url":"https://avatars.githubusercontent.com/u/10158699?v=4","gravatar_id":"","url":"https://api.github.com/users/novikd","html_url":"https://github.com/novikd","followers_url":"https://api.github.com/users/novikd/followers","following_url":"https://api.github.com/users/novikd/following{/other_user}","gists_url":"https://api.github.com/users/novikd/gists{/gist_id}","starred_url":"https://api.github.com/users/novikd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/novikd/subscriptions","organizations_url":"https://api.github.com/users/novikd/orgs","repos_url":"https://api.github.com/users/novikd/repos","events_url":"https://api.github.com/users/novikd/events{/privacy}","received_events_url":"https://api.github.com/users/novikd/received_events","type":"User","site_admin":false},"labels":[{"id":1876999755,"node_id":"MDU6TGFiZWwxODc2OTk5NzU1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/pr-not-for-changelog","name":"pr-not-for-changelog","color":"007700","default":false,"description":"This PR should not be mentioned in the changelog"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2021-12-21T12:10:08Z","updated_at":"2022-01-30T00:07:19Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"draft":true,"pull_request":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/pulls/32999","html_url":"https://github.com/ClickHouse/ClickHouse/pull/32999","diff_url":"https://github.com/ClickHouse/ClickHouse/pull/32999.diff","patch_url":"https://github.com/ClickHouse/ClickHouse/pull/32999.patch","merged_at":null},"body":"Changelog category (leave one):\r\n\r\n- Not for changelog (changelog entry is not required)","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32999/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32999/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32997","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32997/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32997/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32997/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/32997","id":1085747285,"node_id":"I_kwDOA5dJV85AtzBV","number":32997,"title":"Transaction failed (Node exists) with no logs","user":{"login":"thyn","id":5173734,"node_id":"MDQ6VXNlcjUxNzM3MzQ=","avatar_url":"https://avatars.githubusercontent.com/u/5173734?v=4","gravatar_id":"","url":"https://api.github.com/users/thyn","html_url":"https://github.com/thyn","followers_url":"https://api.github.com/users/thyn/followers","following_url":"https://api.github.com/users/thyn/following{/other_user}","gists_url":"https://api.github.com/users/thyn/gists{/gist_id}","starred_url":"https://api.github.com/users/thyn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/thyn/subscriptions","organizations_url":"https://api.github.com/users/thyn/orgs","repos_url":"https://api.github.com/users/thyn/repos","events_url":"https://api.github.com/users/thyn/events{/privacy}","received_events_url":"https://api.github.com/users/thyn/received_events","type":"User","site_admin":false},"labels":[{"id":845247686,"node_id":"MDU6TGFiZWw4NDUyNDc2ODY=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/usability","name":"usability","color":"ebf28c","default":false,"description":""},{"id":3167230064,"node_id":"MDU6TGFiZWwzMTY3MjMwMDY0","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/v21.8-affected","name":"v21.8-affected","color":"c2bfff","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2021-12-21T11:46:11Z","updated_at":"2021-12-21T17:41:41Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"I have Transaction failed (Node exists) error every second. It exists in system.errors, but nothing in logs(console or files). Where to find full log message?\r\n\r\nversion 21.8.12.29","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32997/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32997/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32996","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32996/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32996/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32996/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/32996","id":1085745731,"node_id":"I_kwDOA5dJV85AtypD","number":32996,"title":"Missing part and paritions in zookeeper","user":{"login":"thyn","id":5173734,"node_id":"MDQ6VXNlcjUxNzM3MzQ=","avatar_url":"https://avatars.githubusercontent.com/u/5173734?v=4","gravatar_id":"","url":"https://api.github.com/users/thyn","html_url":"https://github.com/thyn","followers_url":"https://api.github.com/users/thyn/followers","following_url":"https://api.github.com/users/thyn/following{/other_user}","gists_url":"https://api.github.com/users/thyn/gists{/gist_id}","starred_url":"https://api.github.com/users/thyn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/thyn/subscriptions","organizations_url":"https://api.github.com/users/thyn/orgs","repos_url":"https://api.github.com/users/thyn/repos","events_url":"https://api.github.com/users/thyn/events{/privacy}","received_events_url":"https://api.github.com/users/thyn/received_events","type":"User","site_admin":false},"labels":[{"id":386401510,"node_id":"MDU6TGFiZWwzODY0MDE1MTA=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/question","name":"question","color":"bfdadc","default":true,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2021-12-21T11:44:14Z","updated_at":"2022-01-20T22:40:16Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"I have a table with partition key toMonday(date). Once (i don't remember when) It started erroring every 100 ms.\r\n\r\n2021.12.18 13:49:52.798407 [ 285 ] {} <Warning> table .table (ReplicatedMergeTreePartCheckThread): Found the missing part 21060207_0_0_0 at 21060207_0_0_0 on ch-s1-b1\r\n2021.12.18 13:49:52.817182 [ 125 ] {} <Warning> table .table (ReplicatedMergeTreePartCheckThread): Checking part 21060207_0_0_0\r\n2021.12.18 13:49:52.819583 [ 125 ] {} <Warning> table .table (ReplicatedMergeTreePartCheckThread): Checking if anyone has a part 21060207_0_0_0 or covering part.\r\n\r\nHow to fix it?\r\n\r\nis it safe to delete /block_numbers/21060207 in zookeeper? \r\n\r\nsystem.parts doesn't have that part . Filesystem too\r\n\r\nIs it connected with \r\n\r\nhttps://github.com/ClickHouse/ClickHouse/pull/32445 ?\r\n\r\nclickhouse version 21.8.12.29","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32996/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32996/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32980","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32980/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32980/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32980/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/32980","id":1084967032,"node_id":"I_kwDOA5dJV85Aq0h4","number":32980,"title":"Way to see the setting that is not just set but actually applied to the node","user":{"login":"simPod","id":327717,"node_id":"MDQ6VXNlcjMyNzcxNw==","avatar_url":"https://avatars.githubusercontent.com/u/327717?v=4","gravatar_id":"","url":"https://api.github.com/users/simPod","html_url":"https://github.com/simPod","followers_url":"https://api.github.com/users/simPod/followers","following_url":"https://api.github.com/users/simPod/following{/other_user}","gists_url":"https://api.github.com/users/simPod/gists{/gist_id}","starred_url":"https://api.github.com/users/simPod/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/simPod/subscriptions","organizations_url":"https://api.github.com/users/simPod/orgs","repos_url":"https://api.github.com/users/simPod/repos","events_url":"https://api.github.com/users/simPod/events{/privacy}","received_events_url":"https://api.github.com/users/simPod/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2021-12-20T16:14:23Z","updated_at":"2021-12-20T16:31:49Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"_I tried to enable Replicated db engine in https://github.com/ClickHouse/ClickHouse/issues/32861_\r\n\r\n- I tasked admin to set the `allow_experimental_database_replicated=1` on all nodes which was done\r\n- I have checked the setting is enabled using`SELECT getSetting('allow_experimental_database_replicated')` which returned `1`\r\n- But the setting was not actually applied as the node were not restarted.\r\n\r\nSo I was wondering that it would be a nice to have a feature that would allow me to check the actual setting applied.\r\n\r\nCurrently, there's no way to see that the setting is in place so it's hard to verify that the guy tasked with changing the settings did the job right. _I did not know whether something with Replicated engine is broken or not as it's experimental feature and had no way to check the setting propely_","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32980/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32980/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32978","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32978/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32978/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32978/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/32978","id":1084872798,"node_id":"I_kwDOA5dJV85Aqdhe","number":32978,"title":"Non-stable results quantileTDigest vs quantileTDigestWeighted","user":{"login":"filimonov","id":1549571,"node_id":"MDQ6VXNlcjE1NDk1NzE=","avatar_url":"https://avatars.githubusercontent.com/u/1549571?v=4","gravatar_id":"","url":"https://api.github.com/users/filimonov","html_url":"https://github.com/filimonov","followers_url":"https://api.github.com/users/filimonov/followers","following_url":"https://api.github.com/users/filimonov/following{/other_user}","gists_url":"https://api.github.com/users/filimonov/gists{/gist_id}","starred_url":"https://api.github.com/users/filimonov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/filimonov/subscriptions","organizations_url":"https://api.github.com/users/filimonov/orgs","repos_url":"https://api.github.com/users/filimonov/repos","events_url":"https://api.github.com/users/filimonov/events{/privacy}","received_events_url":"https://api.github.com/users/filimonov/received_events","type":"User","site_admin":false},"labels":[{"id":386401510,"node_id":"MDU6TGFiZWwzODY0MDE1MTA=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/question","name":"question","color":"bfdadc","default":true,"description":""},{"id":3761121284,"node_id":"LA_kwDOA5dJV87gLigE","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/support-services","name":"support-services","color":"1A70E6","default":false,"description":""}],"state":"open","locked":false,"assignee":{"login":"tom-clickhouse","id":97666923,"node_id":"U_kgDOBdJHaw","avatar_url":"https://avatars.githubusercontent.com/u/97666923?v=4","gravatar_id":"","url":"https://api.github.com/users/tom-clickhouse","html_url":"https://github.com/tom-clickhouse","followers_url":"https://api.github.com/users/tom-clickhouse/followers","following_url":"https://api.github.com/users/tom-clickhouse/following{/other_user}","gists_url":"https://api.github.com/users/tom-clickhouse/gists{/gist_id}","starred_url":"https://api.github.com/users/tom-clickhouse/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tom-clickhouse/subscriptions","organizations_url":"https://api.github.com/users/tom-clickhouse/orgs","repos_url":"https://api.github.com/users/tom-clickhouse/repos","events_url":"https://api.github.com/users/tom-clickhouse/events{/privacy}","received_events_url":"https://api.github.com/users/tom-clickhouse/received_events","type":"User","site_admin":false},"assignees":[{"login":"tom-clickhouse","id":97666923,"node_id":"U_kgDOBdJHaw","avatar_url":"https://avatars.githubusercontent.com/u/97666923?v=4","gravatar_id":"","url":"https://api.github.com/users/tom-clickhouse","html_url":"https://github.com/tom-clickhouse","followers_url":"https://api.github.com/users/tom-clickhouse/followers","following_url":"https://api.github.com/users/tom-clickhouse/following{/other_user}","gists_url":"https://api.github.com/users/tom-clickhouse/gists{/gist_id}","starred_url":"https://api.github.com/users/tom-clickhouse/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tom-clickhouse/subscriptions","organizations_url":"https://api.github.com/users/tom-clickhouse/orgs","repos_url":"https://api.github.com/users/tom-clickhouse/repos","events_url":"https://api.github.com/users/tom-clickhouse/events{/privacy}","received_events_url":"https://api.github.com/users/tom-clickhouse/received_events","type":"User","site_admin":false}],"milestone":null,"comments":0,"created_at":"2021-12-20T14:45:19Z","updated_at":"2022-01-24T16:28:56Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"body":"```\r\nSELECT quantileTDigest(0.5)(duration) from values('duration UInt64',(1000000), (3000000), (3000000), (3000000), (3000000), (5000000), (7000000), (9000000));\r\n\r\n3000000\r\n\r\nSELECT quantileTDigestWeighted(0.5)(duration, count) from values('duration UInt64, count UInt64',(1000000,1), (3000000,4), (5000000,1), (7000000,1), (9000000,1));\r\n\r\n4000000\r\n```\r\n\r\nvs Python\r\n\r\n```py\r\n# pip3 install tdigest \r\n# python3\r\nfrom tdigest import TDigest\r\nvalues = [1000000, 3000000, 3000000, 3000000, 3000000, 5000000, 7000000, 9000000]\r\ndigest = TDigest()\r\ndigest.batch_update(values)\r\nprint(digest.percentile(50))\r\n# 3800000.0\r\n```\r\n\r\n\r\nin 21.1.9\r\n\r\n```\r\nConnected to ClickHouse server version 21.1.9 revision 54443.\r\n\r\nSELECT quantileTDigestWeighted(0.5)(duration, count)\r\nFROM values('duration UInt64, count UInt64', (1000000, 1), (3000000, 4), (5000000, 1), (7000000, 1), (9000000, 1))\r\n\r\n┌─quantileTDigestWeighted(0.5)(duration, count)─┐\r\n│                                       3800000 │\r\n└───────────────────────────────────────────────┘\r\n\r\nSELECT quantileTDigest(0.5)(duration)\r\nFROM values('duration UInt64', 1000000, 3000000, 3000000, 3000000, 3000000, 5000000, 7000000, 9000000)\r\n\r\n┌─quantileTDigest(0.5)(duration)─┐\r\n│                        3800000 │\r\n└────────────────────────────────┘\r\n```","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32978/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32978/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32977","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32977/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32977/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32977/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/32977","id":1084796221,"node_id":"I_kwDOA5dJV85AqK09","number":32977,"title":"<Error> MaterializedMySQLSyncThread: Code: 50. DB::Exception: Unknown data type family: json:","user":{"login":"lizhiyou88","id":39184961,"node_id":"MDQ6VXNlcjM5MTg0OTYx","avatar_url":"https://avatars.githubusercontent.com/u/39184961?v=4","gravatar_id":"","url":"https://api.github.com/users/lizhiyou88","html_url":"https://github.com/lizhiyou88","followers_url":"https://api.github.com/users/lizhiyou88/followers","following_url":"https://api.github.com/users/lizhiyou88/following{/other_user}","gists_url":"https://api.github.com/users/lizhiyou88/gists{/gist_id}","starred_url":"https://api.github.com/users/lizhiyou88/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/lizhiyou88/subscriptions","organizations_url":"https://api.github.com/users/lizhiyou88/orgs","repos_url":"https://api.github.com/users/lizhiyou88/repos","events_url":"https://api.github.com/users/lizhiyou88/events{/privacy}","received_events_url":"https://api.github.com/users/lizhiyou88/received_events","type":"User","site_admin":false},"labels":[{"id":386401510,"node_id":"MDU6TGFiZWwzODY0MDE1MTA=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/question","name":"question","color":"bfdadc","default":true,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2021-12-20T13:30:41Z","updated_at":"2021-12-21T12:27:37Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"When using materialized Mysql to synchronize from Mysql to Clickhouse, the field type is JSON. Will Clickhouse support JSON type? And how to filter out this table without synchronization.\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32977/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32977/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32963","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32963/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32963/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32963/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/32963","id":1084469255,"node_id":"I_kwDOA5dJV85Ao7AH","number":32963,"title":"INSERT INTO FUNCTION cluster IN JOIN table","user":{"login":"sablastik","id":16276988,"node_id":"MDQ6VXNlcjE2Mjc2OTg4","avatar_url":"https://avatars.githubusercontent.com/u/16276988?v=4","gravatar_id":"","url":"https://api.github.com/users/sablastik","html_url":"https://github.com/sablastik","followers_url":"https://api.github.com/users/sablastik/followers","following_url":"https://api.github.com/users/sablastik/following{/other_user}","gists_url":"https://api.github.com/users/sablastik/gists{/gist_id}","starred_url":"https://api.github.com/users/sablastik/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sablastik/subscriptions","organizations_url":"https://api.github.com/users/sablastik/orgs","repos_url":"https://api.github.com/users/sablastik/repos","events_url":"https://api.github.com/users/sablastik/events{/privacy}","received_events_url":"https://api.github.com/users/sablastik/received_events","type":"User","site_admin":false},"labels":[{"id":386401510,"node_id":"MDU6TGFiZWwzODY0MDE1MTA=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/question","name":"question","color":"bfdadc","default":true,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2021-12-20T07:54:23Z","updated_at":"2022-01-30T02:48:36Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Clickhouse 21.8.12.29.\r\nCluster of 2 shards with 2 replicas\r\n\r\nI'm trying to INSERT data into table with ENGING=Join. My aim is to get similar data on all replicas.\r\nData INSERTS as SELECT from table with ENGINE=Distributed over ReplicatedMergeTree:\r\n```\r\nINSERT INTO FUNCTION cluster('my_clusters', 'tmp', 'test_table')\r\nSELECT column1, column2\r\nFROM db.table_with_distributed_engine; \r\n```\r\nAs far as I'm not setting sharding key (I don't need join table to be sharded) I'm getting error:\r\n`Code: 55, e.displayText() = DB::Exception: Method write is not supported by storage Distributed with more than one shard and no sharding key provided (version 21.8.12.29 (official build))`\r\n\r\nBut I'm expecting to get full copied of data on all shards.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32963/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32963/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32958","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32958/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32958/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32958/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/32958","id":1084243520,"node_id":"I_kwDOA5dJV85AoD5A","number":32958,"title":"HTTP interface overhead is high?","user":{"login":"zhicwu","id":4270380,"node_id":"MDQ6VXNlcjQyNzAzODA=","avatar_url":"https://avatars.githubusercontent.com/u/4270380?v=4","gravatar_id":"","url":"https://api.github.com/users/zhicwu","html_url":"https://github.com/zhicwu","followers_url":"https://api.github.com/users/zhicwu/followers","following_url":"https://api.github.com/users/zhicwu/following{/other_user}","gists_url":"https://api.github.com/users/zhicwu/gists{/gist_id}","starred_url":"https://api.github.com/users/zhicwu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zhicwu/subscriptions","organizations_url":"https://api.github.com/users/zhicwu/orgs","repos_url":"https://api.github.com/users/zhicwu/repos","events_url":"https://api.github.com/users/zhicwu/events{/privacy}","received_events_url":"https://api.github.com/users/zhicwu/received_events","type":"User","site_admin":false},"labels":[{"id":756395244,"node_id":"MDU6TGFiZWw3NTYzOTUyNDQ=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/performance","name":"performance","color":"c2e0c6","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2021-12-20T00:53:31Z","updated_at":"2021-12-20T12:56:39Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"When benchmarking [1] JDBC driver 0.3.2(uses http) and [2] Native JDBC 2.6.3(uses tcp) against ClickHouse 21.11, I noticed different CPU usage on server side. It looks like HTTP interface has way more overhead compare to TCP/Native in terms of CPU usage. Is it related to HTTP chunked transfer encoding?\r\n- 4 threads\r\n  ![image](https://user-images.githubusercontent.com/4270380/146696956-ec5a9dc1-915e-46c4-af7f-2dc9c70c90f9.png)\r\n- single thread\r\n  ![image](https://user-images.githubusercontent.com/4270380/146697496-33b8326e-ba0b-4668-a0a7-6e6f0196c67b.png)\r\n\r\nEnvironment:\r\n* two VMs dedicated for the testing, both with same spec(32GB RAM + 4 CPU cores)\r\n\r\nParameters:\r\n* 4 concurrent threads\r\n* queries are all based on `numbers` function so no disk I/O should be involved\r\n* RowBinary format is used for serialization/deserialization between server and client\r\n* sampleSize=100000, which will be used to substitute question mark in test query like `select range(100, number % 600) as v from numbers(?)`\r\n* fetchSize=1000\r\n* connection=reuse\r\n* statement=prepared\r\n* compression=true (lz4 for decompressing response from server)\r\n\r\nSteps:\r\n* drop and re-create ClickHouse container before [benchmarking](../../clickhouse-jdbc/blob/develop/clickhouse-benchmark/src/main/java/com/clickhouse/benchmark/jdbc/Query.java)\r\n\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32958/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32958/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32947","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32947/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32947/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32947/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/32947","id":1084095995,"node_id":"I_kwDOA5dJV85Anf37","number":32947,"title":"Try using the mold linker in CI","user":{"login":"amosbird","id":5085485,"node_id":"MDQ6VXNlcjUwODU0ODU=","avatar_url":"https://avatars.githubusercontent.com/u/5085485?v=4","gravatar_id":"","url":"https://api.github.com/users/amosbird","html_url":"https://github.com/amosbird","followers_url":"https://api.github.com/users/amosbird/followers","following_url":"https://api.github.com/users/amosbird/following{/other_user}","gists_url":"https://api.github.com/users/amosbird/gists{/gist_id}","starred_url":"https://api.github.com/users/amosbird/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/amosbird/subscriptions","organizations_url":"https://api.github.com/users/amosbird/orgs","repos_url":"https://api.github.com/users/amosbird/repos","events_url":"https://api.github.com/users/amosbird/events{/privacy}","received_events_url":"https://api.github.com/users/amosbird/received_events","type":"User","site_admin":false},"labels":[{"id":521113272,"node_id":"MDU6TGFiZWw1MjExMTMyNzI=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/build","name":"build","color":"800000","default":false,"description":""},{"id":2372525166,"node_id":"MDU6TGFiZWwyMzcyNTI1MTY2","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-ci","name":"comp-ci","color":"b5bcff","default":false,"description":"Continuous integration"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2021-12-19T13:17:51Z","updated_at":"2021-12-19T22:28:26Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"body":"Recently https://github.com/rui314/mold has released v1.0. It shows amazing speed up over the second fastest linker: lld. Perhaps we can use it to boost our CI.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32947/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32947/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32942","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32942/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32942/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32942/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/32942","id":1083991981,"node_id":"I_kwDOA5dJV85AnGet","number":32942,"title":"Constraint optimization for partition prunning > = <","user":{"login":"UnamedRus","id":9449405,"node_id":"MDQ6VXNlcjk0NDk0MDU=","avatar_url":"https://avatars.githubusercontent.com/u/9449405?v=4","gravatar_id":"","url":"https://api.github.com/users/UnamedRus","html_url":"https://github.com/UnamedRus","followers_url":"https://api.github.com/users/UnamedRus/followers","following_url":"https://api.github.com/users/UnamedRus/following{/other_user}","gists_url":"https://api.github.com/users/UnamedRus/gists{/gist_id}","starred_url":"https://api.github.com/users/UnamedRus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/UnamedRus/subscriptions","organizations_url":"https://api.github.com/users/UnamedRus/orgs","repos_url":"https://api.github.com/users/UnamedRus/repos","events_url":"https://api.github.com/users/UnamedRus/events{/privacy}","received_events_url":"https://api.github.com/users/UnamedRus/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-12-19T02:38:41Z","updated_at":"2021-12-19T02:38:41Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"**Use case**\r\n\r\nIf we have 2 timestamps, and we do partitioning by one of them and we have constraint on them, ClickHouse will be able to optimize it.\r\n\r\n**Describe the solution you'd like**\r\n\r\n```\r\nCREATE TABLE test_constraint\r\n(\r\n    `key` UInt32,\r\n    `created_at` DateTime,\r\n    `processed_at` DateTime,\r\n    CONSTRAINT xxxx ASSUME processed_at > created_at\r\n)\r\nENGINE = MergeTree\r\nPARTITION BY toYYYYMM(processed_at)\r\nORDER BY key\r\n\r\nINSERT INTO test_constraint SELECT\r\n    number,\r\n    now() + number,\r\n    (now() + number) + (rand() % 1000)\r\nFROM numbers(1000000)\r\n\r\nINSERT INTO test_constraint SELECT\r\n    number,\r\n    (now() - toIntervalMonth(1)) + number,\r\n    ((now() - toIntervalMonth(1)) + number) + (rand() % 1000)\r\nFROM numbers(1000000)\r\n\r\nSELECT count()\r\nFROM test_constraint\r\nWHERE created_at > now()\r\n\r\nQuery id: ef14c424-9e34-4d13-9eff-43e63b41bfb5\r\n\r\n┌─count()─┐\r\n│  999927 │\r\n└─────────┘\r\n\r\n1 rows in set. Elapsed: 0.016 sec. Processed 2.00 million rows, 8.00 MB (128.23 million rows/s., 512.92 MB/s.)\r\n\r\nset optimize_using_constraints =1, optimize_substitute_columns = 1, convert_query_to_cnf =1, optimize_append_index=1;\r\n\r\nSELECT count()\r\nFROM test_constraint\r\nWHERE created_at > now()\r\n\r\nQuery id: ffcc5480-43e9-46e0-8302-2031ec92e6be\r\n\r\n┌─count()─┐\r\n│  999889 │\r\n└─────────┘\r\n\r\n1 rows in set. Elapsed: 0.017 sec. Processed 2.00 million rows, 8.00 MB (116.65 million rows/s., 466.58 MB/s.)\r\n\r\nSELECT count()\r\nFROM test_constraint\r\nWHERE (created_at > now()) AND indexHint(processed_at > now())\r\n\r\nQuery id: 1f7516c6-1167-4197-8dd3-5b77cda5dc09\r\n\r\n┌─count()─┐\r\n│  999661 │\r\n└─────────┘\r\n\r\n1 rows in set. Elapsed: 0.014 sec. Processed 1.00 million rows, 4.00 MB (71.07 million rows/s., 284.28 MB/s.)\r\n```\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32942/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32942/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32938","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32938/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32938/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32938/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/32938","id":1083944897,"node_id":"I_kwDOA5dJV85Am6_B","number":32938,"title":"DB::Exception: Transaction failed (No node) when creating Replicated DB","user":{"login":"simPod","id":327717,"node_id":"MDQ6VXNlcjMyNzcxNw==","avatar_url":"https://avatars.githubusercontent.com/u/327717?v=4","gravatar_id":"","url":"https://api.github.com/users/simPod","html_url":"https://github.com/simPod","followers_url":"https://api.github.com/users/simPod/followers","following_url":"https://api.github.com/users/simPod/following{/other_user}","gists_url":"https://api.github.com/users/simPod/gists{/gist_id}","starred_url":"https://api.github.com/users/simPod/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/simPod/subscriptions","organizations_url":"https://api.github.com/users/simPod/orgs","repos_url":"https://api.github.com/users/simPod/repos","events_url":"https://api.github.com/users/simPod/events{/privacy}","received_events_url":"https://api.github.com/users/simPod/received_events","type":"User","site_admin":false},"labels":[{"id":386401510,"node_id":"MDU6TGFiZWwzODY0MDE1MTA=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/question","name":"question","color":"bfdadc","default":true,"description":""}],"state":"open","locked":false,"assignee":{"login":"tavplubix","id":14847450,"node_id":"MDQ6VXNlcjE0ODQ3NDUw","avatar_url":"https://avatars.githubusercontent.com/u/14847450?v=4","gravatar_id":"","url":"https://api.github.com/users/tavplubix","html_url":"https://github.com/tavplubix","followers_url":"https://api.github.com/users/tavplubix/followers","following_url":"https://api.github.com/users/tavplubix/following{/other_user}","gists_url":"https://api.github.com/users/tavplubix/gists{/gist_id}","starred_url":"https://api.github.com/users/tavplubix/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tavplubix/subscriptions","organizations_url":"https://api.github.com/users/tavplubix/orgs","repos_url":"https://api.github.com/users/tavplubix/repos","events_url":"https://api.github.com/users/tavplubix/events{/privacy}","received_events_url":"https://api.github.com/users/tavplubix/received_events","type":"User","site_admin":false},"assignees":[{"login":"tavplubix","id":14847450,"node_id":"MDQ6VXNlcjE0ODQ3NDUw","avatar_url":"https://avatars.githubusercontent.com/u/14847450?v=4","gravatar_id":"","url":"https://api.github.com/users/tavplubix","html_url":"https://github.com/tavplubix","followers_url":"https://api.github.com/users/tavplubix/followers","following_url":"https://api.github.com/users/tavplubix/following{/other_user}","gists_url":"https://api.github.com/users/tavplubix/gists{/gist_id}","starred_url":"https://api.github.com/users/tavplubix/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tavplubix/subscriptions","organizations_url":"https://api.github.com/users/tavplubix/orgs","repos_url":"https://api.github.com/users/tavplubix/repos","events_url":"https://api.github.com/users/tavplubix/events{/privacy}","received_events_url":"https://api.github.com/users/tavplubix/received_events","type":"User","site_admin":false}],"milestone":null,"comments":1,"created_at":"2021-12-18T21:00:58Z","updated_at":"2022-01-27T00:22:17Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"I'm trying to use db Replicated engine as advised in https://github.com/ClickHouse/ClickHouse/issues/31661#issuecomment-977149610 but getting `Transaction failed (No node)`\r\n\r\n```\r\nCREATE DATABASE tmp\r\nENGINE = Replicated('/clickhouse/tmp/tables', '{shard}', '{replica}')\r\n\r\nQuery id: f4e2d57f-ee0f-4706-b62f-5560e5d4f7f3\r\n\r\n\r\n0 rows in set. Elapsed: 0.005 sec.\r\n\r\nReceived exception from server (version 21.9.4):\r\nCode: 999. DB::Exception: Received from 127.0.0.1:9000. DB::Exception: Transaction failed (No node): Op #0, path: /clickhouse/tmp/tables/replicas/01|flop-chdb-4. (KEEPER_EXCEPTION)\r\n```\r\n\r\nany idea what am I doing wrong? Thanks\r\n\r\n_I have `allow_experimental_database_replicated` enabled_ https://github.com/ClickHouse/ClickHouse/issues/32861","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32938/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32938/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32935","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32935/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32935/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32935/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/32935","id":1083929957,"node_id":"I_kwDOA5dJV85Am3Vl","number":32935,"title":"Problem with ROLLUP and sumMap","user":{"login":"wiesenfeK","id":96352851,"node_id":"U_kgDOBb46Uw","avatar_url":"https://avatars.githubusercontent.com/u/96352851?v=4","gravatar_id":"","url":"https://api.github.com/users/wiesenfeK","html_url":"https://github.com/wiesenfeK","followers_url":"https://api.github.com/users/wiesenfeK/followers","following_url":"https://api.github.com/users/wiesenfeK/following{/other_user}","gists_url":"https://api.github.com/users/wiesenfeK/gists{/gist_id}","starred_url":"https://api.github.com/users/wiesenfeK/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wiesenfeK/subscriptions","organizations_url":"https://api.github.com/users/wiesenfeK/orgs","repos_url":"https://api.github.com/users/wiesenfeK/repos","events_url":"https://api.github.com/users/wiesenfeK/events{/privacy}","received_events_url":"https://api.github.com/users/wiesenfeK/received_events","type":"User","site_admin":false},"labels":[{"id":3260776666,"node_id":"MDU6TGFiZWwzMjYwNzc2NjY2","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/potential%20bug","name":"potential bug","color":"ffc080","default":false,"description":"To be reviewed by developers and confirmed/rejected."}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2021-12-18T19:32:40Z","updated_at":"2021-12-18T19:33:10Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"**Describe what's wrong**\r\n\r\nWhen using sumMap along with the `WITH ROLLUP` modifier, results seem wrong.\r\n\r\n**Does it reproduce on recent release?**\r\n\r\nI have the bug on v21.12.2.17\r\n\r\n**How to reproduce**\r\n\r\n* Clickhouse v21.12.2.17\r\n\r\n```\r\nCREATE TABLE bar \r\n(\r\n    id String,\r\n    n UInt32,\r\n    w Map(UInt32, UInt32),\r\n    y UInt32\r\n)   \r\nENGINE = MergeTree()\r\nPRIMARY KEY(id);\r\n```\r\n\r\n* Queries to run that lead to unexpected result\r\n\r\n\r\n```\r\nINSERT INTO bar \r\nVALUES('0',1, {1:1},1 ),('2',2, {1:2},2 ), ('3',1, {1:1},1 ), ('4',2, {1:2},2 );\r\n\r\nSELECT \tsum(y), sumMap( w ), n\r\nFROM bar\r\nGROUP BY n\r\nWITH ROLLUP \r\nORDER BY n ASC;\r\n```\r\n\r\n**Expected behavior**\r\n\r\nThe expected result would be:\r\n```\r\nsum(y)|sumMap(w)|n|\r\n------|---------|-|\r\n     6|{1=6}    |0|\r\n     2|{1=2}    |1|\r\n     4|{1=4}    |2|\r\n```\r\n\r\nAnd this is what I obtain: \r\n(The difference is in the sumMap of the last row).\r\n\r\n``` \r\nsum(y)|sumMap(w)|n|\r\n------|---------|-|\r\n     6|{1=6}    |0|\r\n     2|{1=2}    |1|\r\n     4|{1=6}    |2| <--- error on this row, in the sumMap(w) column. Expecting: {1=4}\r\n```\r\n\r\nNote that without ROLLUP, the aggregation is fine.\r\n\r\n```\r\nSELECT \tsum(y), sumMap( w ), n\r\nFROM bar\r\nGROUP BY n\r\nORDER BY n ASC;\r\n```\r\n\r\nLeads to:\r\n\r\n``` \r\nsum(y)|sumMap(w)|n|\r\n------|---------|-|\r\n     2|{1=2}    |1|\r\n     4|{1=4}    |2|\r\n```\r\n\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32935/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32935/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32928","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32928/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32928/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32928/events","html_url":"https://github.com/ClickHouse/ClickHouse/pull/32928","id":1083764106,"node_id":"PR_kwDOA5dJV84wB4Dj","number":32928,"title":"Speed up parts loading process of MergeTree by metadata cache","user":{"login":"taiyang-li","id":8181003,"node_id":"MDQ6VXNlcjgxODEwMDM=","avatar_url":"https://avatars.githubusercontent.com/u/8181003?v=4","gravatar_id":"","url":"https://api.github.com/users/taiyang-li","html_url":"https://github.com/taiyang-li","followers_url":"https://api.github.com/users/taiyang-li/followers","following_url":"https://api.github.com/users/taiyang-li/following{/other_user}","gists_url":"https://api.github.com/users/taiyang-li/gists{/gist_id}","starred_url":"https://api.github.com/users/taiyang-li/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/taiyang-li/subscriptions","organizations_url":"https://api.github.com/users/taiyang-li/orgs","repos_url":"https://api.github.com/users/taiyang-li/repos","events_url":"https://api.github.com/users/taiyang-li/events{/privacy}","received_events_url":"https://api.github.com/users/taiyang-li/received_events","type":"User","site_admin":false},"labels":[{"id":1309683578,"node_id":"MDU6TGFiZWwxMzA5NjgzNTc4","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/pr-performance","name":"pr-performance","color":"007700","default":false,"description":"Pull request with some performance improvements"},{"id":3627025164,"node_id":"LA_kwDOA5dJV87YMAMM","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/can%20be%20tested","name":"can be tested","color":"1d76db","default":false,"description":""}],"state":"open","locked":false,"assignee":{"login":"CurtizJ","id":20361854,"node_id":"MDQ6VXNlcjIwMzYxODU0","avatar_url":"https://avatars.githubusercontent.com/u/20361854?v=4","gravatar_id":"","url":"https://api.github.com/users/CurtizJ","html_url":"https://github.com/CurtizJ","followers_url":"https://api.github.com/users/CurtizJ/followers","following_url":"https://api.github.com/users/CurtizJ/following{/other_user}","gists_url":"https://api.github.com/users/CurtizJ/gists{/gist_id}","starred_url":"https://api.github.com/users/CurtizJ/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/CurtizJ/subscriptions","organizations_url":"https://api.github.com/users/CurtizJ/orgs","repos_url":"https://api.github.com/users/CurtizJ/repos","events_url":"https://api.github.com/users/CurtizJ/events{/privacy}","received_events_url":"https://api.github.com/users/CurtizJ/received_events","type":"User","site_admin":false},"assignees":[{"login":"CurtizJ","id":20361854,"node_id":"MDQ6VXNlcjIwMzYxODU0","avatar_url":"https://avatars.githubusercontent.com/u/20361854?v=4","gravatar_id":"","url":"https://api.github.com/users/CurtizJ","html_url":"https://github.com/CurtizJ","followers_url":"https://api.github.com/users/CurtizJ/followers","following_url":"https://api.github.com/users/CurtizJ/following{/other_user}","gists_url":"https://api.github.com/users/CurtizJ/gists{/gist_id}","starred_url":"https://api.github.com/users/CurtizJ/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/CurtizJ/subscriptions","organizations_url":"https://api.github.com/users/CurtizJ/orgs","repos_url":"https://api.github.com/users/CurtizJ/repos","events_url":"https://api.github.com/users/CurtizJ/events{/privacy}","received_events_url":"https://api.github.com/users/CurtizJ/received_events","type":"User","site_admin":false}],"milestone":null,"comments":28,"created_at":"2021-12-18T06:49:29Z","updated_at":"2022-01-30T10:17:07Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/pulls/32928","html_url":"https://github.com/ClickHouse/ClickHouse/pull/32928","diff_url":"https://github.com/ClickHouse/ClickHouse/pull/32928.diff","patch_url":"https://github.com/ClickHouse/ClickHouse/pull/32928.patch","merged_at":null},"body":"Changelog category (leave one):\r\n- Performance Improvement\r\n\r\n\r\nChangelog entry (a user-readable short description of the changes that goes to CHANGELOG.md):\r\nSpeed up parts loading process of MergeTree to accelerate starting up of clickhouse-server.\r\nWith this improvement, clickhouse-server was able to decrease starting up time from 75 minutes to 20 seconds, with 700k mergetree parts. \r\n\r\nDetailed description / Documentation draft:\r\nWe use rocksdb to cache metadata files of mergetree parts. When clickhouse-server starts up and loads parts parallelly, first get metadata from rocksdb with file path as key, if cache miss happends, then read metadata file from IDisk and update cache.\r\n\r\nSystem table `merge_tree_meta_cache` and function `checkPartMetaCache` were implemented to check cache consistency conveniently. \r\n\r\nThanks for the initial working of @sundy-li. ","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32928/reactions","total_count":7,"+1":7,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32928/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32915","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32915/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32915/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32915/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/32915","id":1083391037,"node_id":"I_kwDOA5dJV85Akzw9","number":32915,"title":"Unexpected allocation in MergeTreeBackgroundExecutor","user":{"login":"tavplubix","id":14847450,"node_id":"MDQ6VXNlcjE0ODQ3NDUw","avatar_url":"https://avatars.githubusercontent.com/u/14847450?v=4","gravatar_id":"","url":"https://api.github.com/users/tavplubix","html_url":"https://github.com/tavplubix","followers_url":"https://api.github.com/users/tavplubix/followers","following_url":"https://api.github.com/users/tavplubix/following{/other_user}","gists_url":"https://api.github.com/users/tavplubix/gists{/gist_id}","starred_url":"https://api.github.com/users/tavplubix/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tavplubix/subscriptions","organizations_url":"https://api.github.com/users/tavplubix/orgs","repos_url":"https://api.github.com/users/tavplubix/repos","events_url":"https://api.github.com/users/tavplubix/events{/privacy}","received_events_url":"https://api.github.com/users/tavplubix/received_events","type":"User","site_admin":false},"labels":[{"id":2104602822,"node_id":"MDU6TGFiZWwyMTA0NjAyODIy","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/fuzz","name":"fuzz","color":"abc4ea","default":false,"description":""}],"state":"open","locked":false,"assignee":{"login":"nikitamikhaylov","id":25705399,"node_id":"MDQ6VXNlcjI1NzA1Mzk5","avatar_url":"https://avatars.githubusercontent.com/u/25705399?v=4","gravatar_id":"","url":"https://api.github.com/users/nikitamikhaylov","html_url":"https://github.com/nikitamikhaylov","followers_url":"https://api.github.com/users/nikitamikhaylov/followers","following_url":"https://api.github.com/users/nikitamikhaylov/following{/other_user}","gists_url":"https://api.github.com/users/nikitamikhaylov/gists{/gist_id}","starred_url":"https://api.github.com/users/nikitamikhaylov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nikitamikhaylov/subscriptions","organizations_url":"https://api.github.com/users/nikitamikhaylov/orgs","repos_url":"https://api.github.com/users/nikitamikhaylov/repos","events_url":"https://api.github.com/users/nikitamikhaylov/events{/privacy}","received_events_url":"https://api.github.com/users/nikitamikhaylov/received_events","type":"User","site_admin":false},"assignees":[{"login":"nikitamikhaylov","id":25705399,"node_id":"MDQ6VXNlcjI1NzA1Mzk5","avatar_url":"https://avatars.githubusercontent.com/u/25705399?v=4","gravatar_id":"","url":"https://api.github.com/users/nikitamikhaylov","html_url":"https://github.com/nikitamikhaylov","followers_url":"https://api.github.com/users/nikitamikhaylov/followers","following_url":"https://api.github.com/users/nikitamikhaylov/following{/other_user}","gists_url":"https://api.github.com/users/nikitamikhaylov/gists{/gist_id}","starred_url":"https://api.github.com/users/nikitamikhaylov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nikitamikhaylov/subscriptions","organizations_url":"https://api.github.com/users/nikitamikhaylov/orgs","repos_url":"https://api.github.com/users/nikitamikhaylov/repos","events_url":"https://api.github.com/users/nikitamikhaylov/events{/privacy}","received_events_url":"https://api.github.com/users/nikitamikhaylov/received_events","type":"User","site_admin":false}],"milestone":null,"comments":0,"created_at":"2021-12-17T15:49:57Z","updated_at":"2021-12-17T15:51:57Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"https://s3.amazonaws.com/clickhouse-test-reports/0/da1d04767cb3af9b67453a4f00f2a2aa2522856a/fuzzer_astfuzzerdebug,actions//report.html\r\n\r\n```\r\n2021.12.17 16:31:36.205059 [ 240 ] {} <Fatal> : Logical error: 'Memory tracker: allocations not allowed.'.\r\n2021.12.17 16:31:43.450248 [ 470 ] {} <Fatal> BaseDaemon: ########################################\r\n2021.12.17 16:31:43.450369 [ 470 ] {} <Fatal> BaseDaemon: (version 21.13.1.772, build id: 43A503CA8D13BA6F) (from thread 240) (no query) Received signal Aborted (6)\r\n2021.12.17 16:31:43.450458 [ 470 ] {} <Fatal> BaseDaemon: \r\n2021.12.17 16:31:43.450614 [ 470 ] {} <Fatal> BaseDaemon: Stack trace: 0x7f697232c18b 0x7f697230b859 0x15948ed8 0x15948fe2 0x15969445 0x1596d226 0x1593c103 0x1593c161 0x1593b9f9 0x15938c95 0x15938c0d 0x15938bb2 0x1593879d 0x15967a1f 0x15969982 0x159698c9 0x1594e99f 0x15950112 0x15950534 0x159694d8 0x15968ee3 0x1596a5c5 0x1596a53a 0x1594e4b2 0x1594bbe3 0x1594a729 0x15949be6 0x159499b1 0x237e11c1 0x237e1c22 0x237e87f8 0x237e879d 0x237e875d 0x237e8735 0x237e86fd 0x15996646 0x15995755 0x159c33ef 0x159ccb44 0x159ccafd 0x159cca81\r\n2021.12.17 16:31:43.452928 [ 470 ] {} <Fatal> BaseDaemon: 4. gsignal @ 0x7f697232c18b in ?\r\n2021.12.17 16:31:43.453023 [ 470 ] {} <Fatal> BaseDaemon: 5. abort @ 0x7f697230b859 in ?\r\n2021.12.17 16:31:43.591142 [ 470 ] {} <Fatal> BaseDaemon: 6. ./obj-x86_64-linux-gnu/../src/Common/Exception.cpp:51: DB::handle_error_code(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool, std::__1::vector<void*, std::__1::allocator<void*> > const&) @ 0x15948ed8 in /workspace/clickhouse\r\n2021.12.17 16:31:43.692314 [ 470 ] {} <Fatal> BaseDaemon: 7. ./obj-x86_64-linux-gnu/../src/Common/Exception.cpp:58: DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x15948fe2 in /workspace/clickhouse\r\n2021.12.17 16:31:43.779326 [ 470 ] {} <Fatal> BaseDaemon: 8. ./obj-x86_64-linux-gnu/../src/Common/Exception.h:35: DB::Exception::Exception(int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) @ 0x15969445 in /workspace/clickhouse\r\n2021.12.17 16:31:43.827968 [ 470 ] {} <Fatal> BaseDaemon: 9. ./obj-x86_64-linux-gnu/../src/Common/MemoryTracker.cpp:179: MemoryTracker::allocImpl(long, bool) @ 0x1596d226 in /workspace/clickhouse\r\n2021.12.17 16:31:43.836183 [ 470 ] {} <Fatal> BaseDaemon: 10. ./obj-x86_64-linux-gnu/../src/Common/CurrentMemoryTracker.cpp:49: CurrentMemoryTracker::(anonymous namespace)::allocImpl(long, bool) @ 0x1593c103 in /workspace/clickhouse\r\n2021.12.17 16:31:43.845184 [ 470 ] {} <Fatal> BaseDaemon: 11. ./obj-x86_64-linux-gnu/../src/Common/CurrentMemoryTracker.cpp:75: CurrentMemoryTracker::allocNoThrow(long) @ 0x1593c161 in /workspace/clickhouse\r\n2021.12.17 16:31:43.851713 [ 470 ] {} <Fatal> BaseDaemon: 12. ./obj-x86_64-linux-gnu/../src/Common/new_delete.cpp:52: operator new(unsigned long) @ 0x1593b9f9 in /workspace/clickhouse\r\n2021.12.17 16:31:43.875670 [ 470 ] {} <Fatal> BaseDaemon: 13. ./obj-x86_64-linux-gnu/../contrib/libcxx/include/new:235: void* std::__1::__libcpp_operator_new<unsigned long>(unsigned long) @ 0x15938c95 in /workspace/clickhouse\r\n2021.12.17 16:31:43.899275 [ 470 ] {} <Fatal> BaseDaemon: 14. ./obj-x86_64-linux-gnu/../contrib/libcxx/include/new:261: std::__1::__libcpp_allocate(unsigned long, unsigned long) @ 0x15938c0d in /workspace/clickhouse\r\n2021.12.17 16:31:43.922035 [ 470 ] {} <Fatal> BaseDaemon: 15. ./obj-x86_64-linux-gnu/../contrib/libcxx/include/memory:840: std::__1::allocator<char>::allocate(unsigned long) @ 0x15938bb2 in /workspace/clickhouse\r\n2021.12.17 16:31:43.944593 [ 470 ] {} <Fatal> BaseDaemon: 16. ./obj-x86_64-linux-gnu/../contrib/libcxx/include/__memory/allocator_traits.h:468: std::__1::allocator_traits<std::__1::allocator<char> >::allocate(std::__1::allocator<char>&, unsigned long) @ 0x1593879d in /workspace/clickhouse\r\n2021.12.17 16:31:44.017996 [ 470 ] {} <Fatal> BaseDaemon: 17. ./obj-x86_64-linux-gnu/../contrib/libcxx/include/string:2267: std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__grow_by(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long) @ 0x15967a1f in /workspace/clickhouse\r\n2021.12.17 16:31:44.089263 [ 470 ] {} <Fatal> BaseDaemon: 18. ./obj-x86_64-linux-gnu/../contrib/libcxx/include/string:0: std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::append(unsigned long, char) @ 0x15969982 in /workspace/clickhouse\r\n2021.12.17 16:31:44.160411 [ 470 ] {} <Fatal> BaseDaemon: 19. ./obj-x86_64-linux-gnu/../contrib/libcxx/include/string:3255: std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::resize(unsigned long, char) @ 0x159698c9 in /workspace/clickhouse\r\n2021.12.17 16:31:44.219977 [ 470 ] {} <Fatal> BaseDaemon: 20. ./obj-x86_64-linux-gnu/../contrib/libcxx/include/string:974: std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::resize(unsigned long) @ 0x1594e99f in /workspace/clickhouse\r\n2021.12.17 16:31:44.281171 [ 470 ] {} <Fatal> BaseDaemon: 21. ./obj-x86_64-linux-gnu/../src/IO/WriteBufferFromVector.h:86: DB::WriteBufferFromVector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >::nextImpl() @ 0x15950112 in /workspace/clickhouse\r\n2021.12.17 16:31:44.354644 [ 470 ] {} <Fatal> BaseDaemon: 22. ./obj-x86_64-linux-gnu/../src/IO/WriteBuffer.h:49: DB::WriteBuffer::next() @ 0x15950534 in /workspace/clickhouse\r\n2021.12.17 16:31:44.425182 [ 470 ] {} <Fatal> BaseDaemon: 23. ./obj-x86_64-linux-gnu/../src/IO/WriteBuffer.h:72: DB::WriteBuffer::nextIfAtEnd() @ 0x159694d8 in /workspace/clickhouse\r\n2021.12.17 16:31:44.495592 [ 470 ] {} <Fatal> BaseDaemon: 24. ./obj-x86_64-linux-gnu/../src/IO/WriteBuffer.h:87: DB::WriteBuffer::write(char const*, unsigned long) @ 0x15968ee3 in /workspace/clickhouse\r\n2021.12.17 16:31:44.569088 [ 470 ] {} <Fatal> BaseDaemon: 25. ./obj-x86_64-linux-gnu/../src/IO/WriteHelpers.h:187: DB::writeString(char const*, unsigned long, DB::WriteBuffer&) @ 0x1596a5c5 in /workspace/clickhouse\r\n2021.12.17 16:31:44.642981 [ 470 ] {} <Fatal> BaseDaemon: 26. ./obj-x86_64-linux-gnu/../src/IO/WriteHelpers.h:902: DB::writeText(std::__1::basic_string_view<char, std::__1::char_traits<char> >, DB::WriteBuffer&) @ 0x1596a53a in /workspace/clickhouse\r\n2021.12.17 16:31:44.716426 [ 470 ] {} <Fatal> BaseDaemon: 27. ./obj-x86_64-linux-gnu/../src/IO/Operators.h:44: DB::WriteBuffer& DB::operator<<<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(DB::WriteBuffer&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) @ 0x1594e4b2 in /workspace/clickhouse\r\n2021.12.17 16:31:44.788435 [ 470 ] {} <Fatal> BaseDaemon: 28. ./obj-x86_64-linux-gnu/../src/Common/Exception.cpp:482: DB::getExceptionMessage(DB::Exception const&, bool, bool) @ 0x1594bbe3 in /workspace/clickhouse\r\n2021.12.17 16:31:44.860349 [ 470 ] {} <Fatal> BaseDaemon: 29. ./obj-x86_64-linux-gnu/../src/Common/Exception.cpp:321: DB::getCurrentExceptionMessage(bool, bool, bool) @ 0x1594a729 in /workspace/clickhouse\r\n2021.12.17 16:31:44.931877 [ 470 ] {} <Fatal> BaseDaemon: 30. ./obj-x86_64-linux-gnu/../src/Common/Exception.cpp:162: DB::tryLogCurrentExceptionImpl(Poco::Logger*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) @ 0x15949be6 in /workspace/clickhouse\r\n2021.12.17 16:31:45.007008 [ 470 ] {} <Fatal> BaseDaemon: 31. ./obj-x86_64-linux-gnu/../src/Common/Exception.cpp:181: DB::tryLogCurrentException(char const*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) @ 0x159499b1 in /workspace/clickhouse\r\n2021.12.17 16:31:45.088208 [ 470 ] {} <Fatal> BaseDaemon: 32. ./obj-x86_64-linux-gnu/../src/Storages/MergeTree/MergeTreeBackgroundExecutor.cpp:91: DB::MergeTreeBackgroundExecutor<DB::MergeMutateRuntimeQueue>::routine(std::__1::shared_ptr<DB::TaskRuntimeData>) @ 0x237e11c1 in /workspace/clickhouse\r\n2021.12.17 16:31:45.169535 [ 470 ] {} <Fatal> BaseDaemon: 33. ./obj-x86_64-linux-gnu/../src/Storages/MergeTree/MergeTreeBackgroundExecutor.cpp:176: DB::MergeTreeBackgroundExecutor<DB::MergeMutateRuntimeQueue>::threadFunction() @ 0x237e1c22 in /workspace/clickhouse\r\n2021.12.17 16:31:45.261587 [ 470 ] {} <Fatal> BaseDaemon: 34. ./obj-x86_64-linux-gnu/../src/Storages/MergeTree/MergeTreeBackgroundExecutor.h:184: DB::MergeTreeBackgroundExecutor<DB::MergeMutateRuntimeQueue>::MergeTreeBackgroundExecutor(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, unsigned long, unsigned long, unsigned long)::'lambda'()::operator()() const @ 0x237e87f8 in /workspace/clickhouse\r\n2021.12.17 16:31:45.354504 [ 470 ] {} <Fatal> BaseDaemon: 35. ./obj-x86_64-linux-gnu/../contrib/libcxx/include/type_traits:3676: decltype(std::__1::forward<DB::MergeMutateRuntimeQueue>(fp)(std::__1::forward<DB::MergeTreeBackgroundExecutor<DB::MergeMutateRuntimeQueue>::MergeTreeBackgroundExecutor(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, unsigned long, unsigned long, unsigned long)::'lambda'()&>(fp0)...)) std::__1::__invoke<DB::MergeTreeBackgroundExecutor<DB::MergeMutateRuntimeQueue>::MergeTreeBackgroundExecutor(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, unsigned long, unsigned long, unsigned long)::'lambda'()&>(DB::MergeMutateRuntimeQueue&&, DB::MergeTreeBackgroundExecutor<DB::MergeMutateRuntimeQueue>::MergeTreeBackgroundExecutor(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, unsigned long, unsigned long, unsigned long)::'lambda'()&...) @ 0x237e879d in /workspace/clickhouse\r\n2021.12.17 16:31:45.446384 [ 470 ] {} <Fatal> BaseDaemon: 36. ./obj-x86_64-linux-gnu/../contrib/libcxx/include/__functional_base:349: void std::__1::__invoke_void_return_wrapper<void>::__call<DB::MergeTreeBackgroundExecutor<DB::MergeMutateRuntimeQueue>::MergeTreeBackgroundExecutor(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, unsigned long, unsigned long, unsigned long)::'lambda'()&>(DB::MergeMutateRuntimeQueue&&...) @ 0x237e875d in /workspace/clickhouse\r\n2021.12.17 16:31:45.538027 [ 470 ] {} <Fatal> BaseDaemon: 37. ./obj-x86_64-linux-gnu/../contrib/libcxx/include/functional:1608: std::__1::__function::__default_alloc_func<DB::MergeTreeBackgroundExecutor<DB::MergeMutateRuntimeQueue>::MergeTreeBackgroundExecutor(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, unsigned long, unsigned long, unsigned long)::'lambda'(), void ()>::operator()() @ 0x237e8735 in /workspace/clickhouse\r\n2021.12.17 16:31:45.629859 [ 470 ] {} <Fatal> BaseDaemon: 38. ./obj-x86_64-linux-gnu/../contrib/libcxx/include/functional:2089: void std::__1::__function::__policy_invoker<void ()>::__call_impl<std::__1::__function::__default_alloc_func<DB::MergeTreeBackgroundExecutor<DB::MergeMutateRuntimeQueue>::MergeTreeBackgroundExecutor(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, unsigned long, unsigned long, unsigned long)::'lambda'(), void ()> >(std::__1::__function::__policy_storage const*) @ 0x237e86fd in /workspace/clickhouse\r\n2021.12.17 16:31:45.671855 [ 470 ] {} <Fatal> BaseDaemon: 39. ./obj-x86_64-linux-gnu/../contrib/libcxx/include/functional:2221: std::__1::__function::__policy_func<void ()>::operator()() const @ 0x15996646 in /workspace/clickhouse\r\n2021.12.17 16:31:45.711420 [ 470 ] {} <Fatal> BaseDaemon: 40. ./obj-x86_64-linux-gnu/../contrib/libcxx/include/functional:2560: std::__1::function<void ()>::operator()() const @ 0x15995755 in /workspace/clickhouse\r\n2021.12.17 16:31:45.768684 [ 470 ] {} <Fatal> BaseDaemon: 41. ./obj-x86_64-linux-gnu/../src/Common/ThreadPool.cpp:274: ThreadPoolImpl<ThreadFromGlobalPool>::worker(std::__1::__list_iterator<ThreadFromGlobalPool, void*>) @ 0x159c33ef in /workspace/clickhouse\r\n2021.12.17 16:31:45.843683 [ 470 ] {} <Fatal> BaseDaemon: 42. ./obj-x86_64-linux-gnu/../src/Common/ThreadPool.cpp:139: void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()::operator()() const @ 0x159ccb44 in /workspace/clickhouse\r\n2021.12.17 16:31:45.920224 [ 470 ] {} <Fatal> BaseDaemon: 43. ./obj-x86_64-linux-gnu/../contrib/libcxx/include/type_traits:3682: decltype(std::__1::forward<void>(fp)(std::__1::forward<void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()&>(fp0)...)) std::__1::__invoke_constexpr<void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()&>(void&&, void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()&...) @ 0x159ccafd in /workspace/clickhouse\r\n2021.12.17 16:31:45.996158 [ 470 ] {} <Fatal> BaseDaemon: 44. ./obj-x86_64-linux-gnu/../contrib/libcxx/include/tuple:1415: decltype(auto) std::__1::__apply_tuple_impl<void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()&, std::__1::tuple<>&>(void&&, void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()&, std::__1::__tuple_indices<std::__1::tuple<>&...>) @ 0x159cca81 in /workspace/clickhouse\r\n2021.12.17 16:31:47.257101 [ 470 ] {} <Fatal> BaseDaemon: Calculated checksum of the binary: DCA77B6E5AAC348EDA43A6599C17FEB6. There is no information about the reference checksum.\r\n\r\n```\r\n\r\ncc: @nikitamikhaylov ","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32915/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32915/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32906","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32906/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32906/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32906/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/32906","id":1083143723,"node_id":"I_kwDOA5dJV85Aj3Yr","number":32906,"title":"Ошибка Code: 235. DB::Exception: Part 202109-30_65271_65281_2 (state Committed) already exists. (DUPLICATE_DATA_PART),","user":{"login":"Papa-tut","id":96290070,"node_id":"U_kgDOBb1FFg","avatar_url":"https://avatars.githubusercontent.com/u/96290070?v=4","gravatar_id":"","url":"https://api.github.com/users/Papa-tut","html_url":"https://github.com/Papa-tut","followers_url":"https://api.github.com/users/Papa-tut/followers","following_url":"https://api.github.com/users/Papa-tut/following{/other_user}","gists_url":"https://api.github.com/users/Papa-tut/gists{/gist_id}","starred_url":"https://api.github.com/users/Papa-tut/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Papa-tut/subscriptions","organizations_url":"https://api.github.com/users/Papa-tut/orgs","repos_url":"https://api.github.com/users/Papa-tut/repos","events_url":"https://api.github.com/users/Papa-tut/events{/privacy}","received_events_url":"https://api.github.com/users/Papa-tut/received_events","type":"User","site_admin":false},"labels":[{"id":386401510,"node_id":"MDU6TGFiZWwzODY0MDE1MTA=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/question","name":"question","color":"bfdadc","default":true,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":9,"created_at":"2021-12-17T11:03:16Z","updated_at":"2022-01-05T07:09:38Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Добрый день, столкнулись с ошибкой: \r\nCode: 235. DB::Exception: Part 202109-30_65271_65281_2 (state Committed) already exists. (DUPLICATE_DATA_PART).\r\n\r\nВерсия clickhouse 21.11.4.14 (official build).\r\n2 Шарда по 2 реплики в каждом\r\nВерсия zookeeper-3.6.3, кластер из 3х нод, живет отдельно от clickhouse. \r\nПользуемся  Distributed.\r\nВ логах нет ничего предвещающего ошибку или понятного с её решением, в интернете мало информации на данную тему. \r\n\r\nЛогика ошибки не известна, возникает спонтанно. Частота в зависимости от нагрузки, сейчас во время теста, держится нагрузка: ~164K c/s (чуть выше планируемой нагрузки), сервера (ОЗУ, диски) совершенно не нагружены, судя по графикам. На какое то время ошибка пропала, после внедрения балансировки на уровне шарды (<internal_replication>true</internal_replication>), но через какое то время снова вернулась (при тех же конфигурациях, ничего не менялось).\r\n\r\nПрикладываю все конфиг файлы кластера. \r\n<optimize_on_insert>0</optimize_on_insert> - отключен так как это мешает части функционала нашего приложения, проводил тест с включенным <optimize_on_insert> тест дал туже самую ошибку. \r\n\r\nЧто было проделано для борьбы с ошибкой: \r\n1) Прибавили java Xmx Xms для Zookeeper’а.\r\n2) Вынесли Zookeeper на отдельные ноды\r\n3) Обновили clickhouse до версии v21.11.4.14-stable\r\n4 Оптимизировали сервер: \r\nkernel.pid_max=4194303\r\nnet.core.somaxconn=65535\r\nnet.core.wmem_max=26214400\r\nnet.core.rmem_max=26214400\r\nnet.ipv4.tcp_rmem=4096 87380 8388608\r\nnet.ipv4.tcp_wmem=4096 65536 8388608\r\nnet.ipv4.tcp_mem=8388608 8388608 8388608\r\nnet.core.rmem_default=26214400\r\n\r\n\r\nЕсли вы сталкивались с подобной ошибкой, прошу любой помощи в её решении!\r\n\r\n[clusters.txt](https://github.com/ClickHouse/ClickHouse/files/7734587/clusters.txt)\r\n[users.txt](https://github.com/ClickHouse/ClickHouse/files/7734591/users.txt)\r\n[zookeeper.txt](https://github.com/ClickHouse/ClickHouse/files/7734592/zookeeper.txt)\r\n[config.txt](https://github.com/ClickHouse/ClickHouse/files/7734593/config.txt)\r\n\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32906/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/32906/timeline","performed_via_github_app":null}]
