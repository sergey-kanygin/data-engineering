[{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25800","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25800/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25800/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25800/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/25800","id":931957370,"node_id":"MDU6SXNzdWU5MzE5NTczNzA=","number":25800,"title":"Restrict authentication of LDAP users","user":{"login":"Blackmorse","id":13163993,"node_id":"MDQ6VXNlcjEzMTYzOTkz","avatar_url":"https://avatars.githubusercontent.com/u/13163993?v=4","gravatar_id":"","url":"https://api.github.com/users/Blackmorse","html_url":"https://github.com/Blackmorse","followers_url":"https://api.github.com/users/Blackmorse/followers","following_url":"https://api.github.com/users/Blackmorse/following{/other_user}","gists_url":"https://api.github.com/users/Blackmorse/gists{/gist_id}","starred_url":"https://api.github.com/users/Blackmorse/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Blackmorse/subscriptions","organizations_url":"https://api.github.com/users/Blackmorse/orgs","repos_url":"https://api.github.com/users/Blackmorse/repos","events_url":"https://api.github.com/users/Blackmorse/events{/privacy}","received_events_url":"https://api.github.com/users/Blackmorse/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null}],"state":"open","locked":false,"assignee":{"login":"traceon","id":10261534,"node_id":"MDQ6VXNlcjEwMjYxNTM0","avatar_url":"https://avatars.githubusercontent.com/u/10261534?v=4","gravatar_id":"","url":"https://api.github.com/users/traceon","html_url":"https://github.com/traceon","followers_url":"https://api.github.com/users/traceon/followers","following_url":"https://api.github.com/users/traceon/following{/other_user}","gists_url":"https://api.github.com/users/traceon/gists{/gist_id}","starred_url":"https://api.github.com/users/traceon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/traceon/subscriptions","organizations_url":"https://api.github.com/users/traceon/orgs","repos_url":"https://api.github.com/users/traceon/repos","events_url":"https://api.github.com/users/traceon/events{/privacy}","received_events_url":"https://api.github.com/users/traceon/received_events","type":"User","site_admin":false},"assignees":[{"login":"traceon","id":10261534,"node_id":"MDQ6VXNlcjEwMjYxNTM0","avatar_url":"https://avatars.githubusercontent.com/u/10261534?v=4","gravatar_id":"","url":"https://api.github.com/users/traceon","html_url":"https://github.com/traceon","followers_url":"https://api.github.com/users/traceon/followers","following_url":"https://api.github.com/users/traceon/following{/other_user}","gists_url":"https://api.github.com/users/traceon/gists{/gist_id}","starred_url":"https://api.github.com/users/traceon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/traceon/subscriptions","organizations_url":"https://api.github.com/users/traceon/orgs","repos_url":"https://api.github.com/users/traceon/repos","events_url":"https://api.github.com/users/traceon/events{/privacy}","received_events_url":"https://api.github.com/users/traceon/received_events","type":"User","site_admin":false}],"milestone":null,"comments":3,"created_at":"2021-06-28T20:24:40Z","updated_at":"2021-08-22T18:40:27Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"According to the documentation: \r\n\r\n> roles — section with a list of locally defined roles that will be assigned to each user retrieved from the LDAP server. If no roles are specified, user will not be able to perform any actions after authentication\r\n\r\nDoes this mean that ANY LDAP user can log in ClickHouse? Sure, if he has no matching LDAP role, he can do nothing, but still..\r\n\r\nWhat can I do to restrict access for the users that have no matched roles?","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25800/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25800/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25785","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25785/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25785/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25785/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/25785","id":931560733,"node_id":"MDU6SXNzdWU5MzE1NjA3MzM=","number":25785,"title":"Interval data type is not passed correctly from subquery","user":{"login":"vpanfilov","id":11993879,"node_id":"MDQ6VXNlcjExOTkzODc5","avatar_url":"https://avatars.githubusercontent.com/u/11993879?v=4","gravatar_id":"","url":"https://api.github.com/users/vpanfilov","html_url":"https://github.com/vpanfilov","followers_url":"https://api.github.com/users/vpanfilov/followers","following_url":"https://api.github.com/users/vpanfilov/following{/other_user}","gists_url":"https://api.github.com/users/vpanfilov/gists{/gist_id}","starred_url":"https://api.github.com/users/vpanfilov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vpanfilov/subscriptions","organizations_url":"https://api.github.com/users/vpanfilov/orgs","repos_url":"https://api.github.com/users/vpanfilov/repos","events_url":"https://api.github.com/users/vpanfilov/events{/privacy}","received_events_url":"https://api.github.com/users/vpanfilov/received_events","type":"User","site_admin":false},"labels":[{"id":1575085465,"node_id":"MDU6TGFiZWwxNTc1MDg1NDY1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/unexpected%20behaviour","name":"unexpected behaviour","color":"e088ca","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-06-28T13:15:49Z","updated_at":"2021-06-28T16:38:07Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"You have to provide the following information whenever possible.\r\n\r\n**Describe the bug**\r\n\r\nInterval data type is not passed correctly from subquery\r\n\r\n**Does it reproduce on recent release?**\r\n\r\nYes, tested on 21.6.5.37.\r\n\r\n**How to reproduce**\r\n\r\n```sql\r\nSELECT\r\n    toIntervalDay(5) AS interval,\r\n    now() + interval AS res\r\n\r\n┌─interval─┬─────────────────res─┐\r\n│        5 │ 2021-07-03 13:11:45 │\r\n└──────────┴─────────────────────┘\r\n```\r\n\r\nBut if I wrap interval calculation in subquery:\r\n\r\n```sql\r\nSELECT\r\n    (SELECT toIntervalDay(5)) AS interval,\r\n    now() + interval AS res\r\n\r\nReceived exception from server (version 21.6.5):\r\nCode: 70. DB::Exception: Received from localhost:9000. DB::Exception: Conversion from Int8 to IntervalDay is not supported: While processing CAST(5, 'IntervalDay') AS interval, now() + interval AS res.\r\n```\r\n\r\n**Expected behavior**\r\n\r\nBoth queries should work the same way.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25785/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25785/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25768","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25768/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25768/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25768/events","html_url":"https://github.com/ClickHouse/ClickHouse/pull/25768","id":931177085,"node_id":"MDExOlB1bGxSZXF1ZXN0Njc4NzExMDQ4","number":25768,"title":"When the configuration file changes, reload the connection pool of the distributed table","user":{"login":"ljcui","id":15341849,"node_id":"MDQ6VXNlcjE1MzQxODQ5","avatar_url":"https://avatars.githubusercontent.com/u/15341849?v=4","gravatar_id":"","url":"https://api.github.com/users/ljcui","html_url":"https://github.com/ljcui","followers_url":"https://api.github.com/users/ljcui/followers","following_url":"https://api.github.com/users/ljcui/following{/other_user}","gists_url":"https://api.github.com/users/ljcui/gists{/gist_id}","starred_url":"https://api.github.com/users/ljcui/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ljcui/subscriptions","organizations_url":"https://api.github.com/users/ljcui/orgs","repos_url":"https://api.github.com/users/ljcui/repos","events_url":"https://api.github.com/users/ljcui/events{/privacy}","received_events_url":"https://api.github.com/users/ljcui/received_events","type":"User","site_admin":false},"labels":[{"id":1304141686,"node_id":"MDU6TGFiZWwxMzA0MTQxNjg2","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/pr-improvement","name":"pr-improvement","color":"007700","default":false,"description":"Pull request with some product improvements"}],"state":"open","locked":false,"assignee":{"login":"nikitamikhaylov","id":25705399,"node_id":"MDQ6VXNlcjI1NzA1Mzk5","avatar_url":"https://avatars.githubusercontent.com/u/25705399?v=4","gravatar_id":"","url":"https://api.github.com/users/nikitamikhaylov","html_url":"https://github.com/nikitamikhaylov","followers_url":"https://api.github.com/users/nikitamikhaylov/followers","following_url":"https://api.github.com/users/nikitamikhaylov/following{/other_user}","gists_url":"https://api.github.com/users/nikitamikhaylov/gists{/gist_id}","starred_url":"https://api.github.com/users/nikitamikhaylov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nikitamikhaylov/subscriptions","organizations_url":"https://api.github.com/users/nikitamikhaylov/orgs","repos_url":"https://api.github.com/users/nikitamikhaylov/repos","events_url":"https://api.github.com/users/nikitamikhaylov/events{/privacy}","received_events_url":"https://api.github.com/users/nikitamikhaylov/received_events","type":"User","site_admin":false},"assignees":[{"login":"nikitamikhaylov","id":25705399,"node_id":"MDQ6VXNlcjI1NzA1Mzk5","avatar_url":"https://avatars.githubusercontent.com/u/25705399?v=4","gravatar_id":"","url":"https://api.github.com/users/nikitamikhaylov","html_url":"https://github.com/nikitamikhaylov","followers_url":"https://api.github.com/users/nikitamikhaylov/followers","following_url":"https://api.github.com/users/nikitamikhaylov/following{/other_user}","gists_url":"https://api.github.com/users/nikitamikhaylov/gists{/gist_id}","starred_url":"https://api.github.com/users/nikitamikhaylov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nikitamikhaylov/subscriptions","organizations_url":"https://api.github.com/users/nikitamikhaylov/orgs","repos_url":"https://api.github.com/users/nikitamikhaylov/repos","events_url":"https://api.github.com/users/nikitamikhaylov/events{/privacy}","received_events_url":"https://api.github.com/users/nikitamikhaylov/received_events","type":"User","site_admin":false}],"milestone":null,"comments":2,"created_at":"2021-06-28T05:10:47Z","updated_at":"2021-12-09T14:59:32Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/pulls/25768","html_url":"https://github.com/ClickHouse/ClickHouse/pull/25768","diff_url":"https://github.com/ClickHouse/ClickHouse/pull/25768.diff","patch_url":"https://github.com/ClickHouse/ClickHouse/pull/25768.patch","merged_at":null},"body":"I hereby agree to the terms of the CLA available at: https://yandex.ru/legal/cla/?lang=en\r\n\r\nChangelog category (leave one):\r\n- Improvement\r\n\r\nChangelog entry (a user-readable short description of the changes that goes to CHANGELOG.md):\r\nWhen the address of remote_servers in the configuration file changes, reload the connection pool of the distributed table using the new compact format\r\n\r\nDetailed description / Documentation draft:\r\nUse  configuration item  `use_compact_format_in_distributed_parts_names` , set to 1.\r\nThe directory name of distributed table uses the new compact format，like this `shard1_replica1` or `shard1_all_replicas`.\r\nWhen the address of remote_servers in the configuration file changes, the address in the connection pool of distributed table is still old and must be restarted at this time to take effect.\r\nThis pr enables the connection pool to be automatically updated when the configuration file is reloaded.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25768/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25768/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25757","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25757/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25757/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25757/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/25757","id":931008180,"node_id":"MDU6SXNzdWU5MzEwMDgxODA=","number":25757,"title":"Improve PostgreSQL compatibility","user":{"login":"eugene-strizhnev","id":4620743,"node_id":"MDQ6VXNlcjQ2MjA3NDM=","avatar_url":"https://avatars.githubusercontent.com/u/4620743?v=4","gravatar_id":"","url":"https://api.github.com/users/eugene-strizhnev","html_url":"https://github.com/eugene-strizhnev","followers_url":"https://api.github.com/users/eugene-strizhnev/followers","following_url":"https://api.github.com/users/eugene-strizhnev/following{/other_user}","gists_url":"https://api.github.com/users/eugene-strizhnev/gists{/gist_id}","starred_url":"https://api.github.com/users/eugene-strizhnev/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eugene-strizhnev/subscriptions","organizations_url":"https://api.github.com/users/eugene-strizhnev/orgs","repos_url":"https://api.github.com/users/eugene-strizhnev/repos","events_url":"https://api.github.com/users/eugene-strizhnev/events{/privacy}","received_events_url":"https://api.github.com/users/eugene-strizhnev/received_events","type":"User","site_admin":false},"labels":[{"id":1397894054,"node_id":"MDU6TGFiZWwxMzk3ODk0MDU0","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/unfinished%20code","name":"unfinished code","color":"ff8800","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-06-27T20:08:06Z","updated_at":"2021-06-27T20:08:06Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"\r\nTo get better user experience, current implementation of PostgreSQL wire protocol lacks several features:\r\n\r\n1. Extended query mode - it used by default by many client drivers and tools. Also it is more efficient and support additional features, compared to the \"simple\" mode.\r\n2. Support authentication via PostgreSQL protocol for users with \"sha256_password\" auth type\r\n3. Support of popular PostgreSQL tools like PgAdmin/DBeaver/DataGrip/e.t.c  to interact with Clickhouse - currently all of them show smth like \"[2021-06-27 23:00:55] [08003] This connection has been closed.\" on any query execution attempt.\r\nIn the Clickhouse logs I found messages like:\r\n\r\n`\r\n2021.06.27 20:01:19.713214 [ 52 ] {} <Error> PostgreSQLHandler: DB::Exception: Missing columns: 'session_user' while processing query: 'SELECT current_schema(), session_user', required columns: 'session_user'\r\n`\r\nor \r\n`\r\n2021.06.27 20:00:44.004866 [ 52 ] {} <Error> PostgreSQLHandler: DB::Exception: Missing columns: 'false' while processing query: 'SELECT current_database() AS a, current_schemas(false) AS b', required columns: 'false'\r\n2021.06.27 20:00:55.106054 [ 52 ] {postgres:9:414784719} <Error> executeQuery: Code: 47, e.displayText() = DB::Exception: Missing columns: 'false' while processing query: 'SELECT current_database() AS a, current_schemas(false) AS b', required columns: 'false' (version 21.6.5.37 (official build)) (from 172.17.0.1:61204) (in query: select current_database() as a, current_schemas(false) as b), Stack trace (when copying this message, always include the lines below):\r\n`\r\n\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25757/reactions","total_count":4,"+1":3,"-1":0,"laugh":1,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25757/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25733","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25733/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25733/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25733/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/25733","id":930662999,"node_id":"MDU6SXNzdWU5MzA2NjI5OTk=","number":25733,"title":"Too bad merge performance for LowCardinality column ","user":{"login":"compasses","id":10161171,"node_id":"MDQ6VXNlcjEwMTYxMTcx","avatar_url":"https://avatars.githubusercontent.com/u/10161171?v=4","gravatar_id":"","url":"https://api.github.com/users/compasses","html_url":"https://github.com/compasses","followers_url":"https://api.github.com/users/compasses/followers","following_url":"https://api.github.com/users/compasses/following{/other_user}","gists_url":"https://api.github.com/users/compasses/gists{/gist_id}","starred_url":"https://api.github.com/users/compasses/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/compasses/subscriptions","organizations_url":"https://api.github.com/users/compasses/orgs","repos_url":"https://api.github.com/users/compasses/repos","events_url":"https://api.github.com/users/compasses/events{/privacy}","received_events_url":"https://api.github.com/users/compasses/received_events","type":"User","site_admin":false},"labels":[{"id":756395244,"node_id":"MDU6TGFiZWw3NTYzOTUyNDQ=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/performance","name":"performance","color":"c2e0c6","default":false,"description":null}],"state":"open","locked":false,"assignee":{"login":"KochetovNicolai","id":4092911,"node_id":"MDQ6VXNlcjQwOTI5MTE=","avatar_url":"https://avatars.githubusercontent.com/u/4092911?v=4","gravatar_id":"","url":"https://api.github.com/users/KochetovNicolai","html_url":"https://github.com/KochetovNicolai","followers_url":"https://api.github.com/users/KochetovNicolai/followers","following_url":"https://api.github.com/users/KochetovNicolai/following{/other_user}","gists_url":"https://api.github.com/users/KochetovNicolai/gists{/gist_id}","starred_url":"https://api.github.com/users/KochetovNicolai/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/KochetovNicolai/subscriptions","organizations_url":"https://api.github.com/users/KochetovNicolai/orgs","repos_url":"https://api.github.com/users/KochetovNicolai/repos","events_url":"https://api.github.com/users/KochetovNicolai/events{/privacy}","received_events_url":"https://api.github.com/users/KochetovNicolai/received_events","type":"User","site_admin":false},"assignees":[{"login":"KochetovNicolai","id":4092911,"node_id":"MDQ6VXNlcjQwOTI5MTE=","avatar_url":"https://avatars.githubusercontent.com/u/4092911?v=4","gravatar_id":"","url":"https://api.github.com/users/KochetovNicolai","html_url":"https://github.com/KochetovNicolai","followers_url":"https://api.github.com/users/KochetovNicolai/followers","following_url":"https://api.github.com/users/KochetovNicolai/following{/other_user}","gists_url":"https://api.github.com/users/KochetovNicolai/gists{/gist_id}","starred_url":"https://api.github.com/users/KochetovNicolai/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/KochetovNicolai/subscriptions","organizations_url":"https://api.github.com/users/KochetovNicolai/orgs","repos_url":"https://api.github.com/users/KochetovNicolai/repos","events_url":"https://api.github.com/users/KochetovNicolai/events{/privacy}","received_events_url":"https://api.github.com/users/KochetovNicolai/received_events","type":"User","site_admin":false}],"milestone":null,"comments":3,"created_at":"2021-06-26T10:02:35Z","updated_at":"2022-01-03T14:49:41Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"we have a table with hundreds of LowCardinality, and the nest column is String or Float64, which can help use save storage immensely. And also can speedup some query  performance.\r\n\r\nBut, the problem is the merge process would draining all the cpu in 16C server during insert process(from kafka).\r\nI had did some investigation, and found seems the  LowCardinality column  merge performance goes down dozens of times than normal column:\r\n\r\n```\r\nLowCardinality column:\r\nColumnGathererStream: Gathered column 'xxxxxxxx' (4.62 bytes/elem.) in 183.00 sec., 67145.96 rows/sec., 0.30 MiB/sec\r\nNormal column：\r\nColumnGathererStream: Gathered column 'zzzzzz' (8.00 bytes/elem.) in 3.39 sec., 3626912.65 rows/sec., 27.67 MiB/sec.\r\n```\r\n\r\nThe bottleneck mainly caused by ColumnLowCardinality::insertRangeFrom.\r\n\r\nAny idea how to improve that? thanks.\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25733/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25733/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25724","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25724/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25724/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25724/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/25724","id":930476919,"node_id":"MDU6SXNzdWU5MzA0NzY5MTk=","number":25724,"title":"optimize_on_insert should be disabled by default","user":{"login":"den-crane","id":19737682,"node_id":"MDQ6VXNlcjE5NzM3Njgy","avatar_url":"https://avatars.githubusercontent.com/u/19737682?v=4","gravatar_id":"","url":"https://api.github.com/users/den-crane","html_url":"https://github.com/den-crane","followers_url":"https://api.github.com/users/den-crane/followers","following_url":"https://api.github.com/users/den-crane/following{/other_user}","gists_url":"https://api.github.com/users/den-crane/gists{/gist_id}","starred_url":"https://api.github.com/users/den-crane/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/den-crane/subscriptions","organizations_url":"https://api.github.com/users/den-crane/orgs","repos_url":"https://api.github.com/users/den-crane/repos","events_url":"https://api.github.com/users/den-crane/events{/privacy}","received_events_url":"https://api.github.com/users/den-crane/received_events","type":"User","site_admin":false},"labels":[{"id":845247686,"node_id":"MDU6TGFiZWw4NDUyNDc2ODY=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/usability","name":"usability","color":"ebf28c","default":false,"description":""},{"id":1507886722,"node_id":"MDU6TGFiZWwxNTA3ODg2NzIy","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/st-discussion","name":"st-discussion","color":"e5b890","default":false,"description":"The story requires discussion /research / expert help / design & decomposition before will be taken"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2021-06-25T20:18:02Z","updated_at":"2021-06-29T21:17:04Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"body":"optimize_on_insert=1  \\     insert Elapsed: 14.278 sec.\r\noptimize_on_insert=0 \\     insert Elapsed: 5.833 sec.\r\n\r\n```sql\r\n\r\ncreate table SMT(A Int64, B Int64, C Int64, D Int64, E Int64, F Int64)\r\nEngine=SummingMergeTree order by (A, B, C, D, E);\r\n\r\nsystem stop merges SMT;\r\nset optimize_on_insert=1;\r\ninsert into SMT select number A, number%5555 B, number%3333 C, number D, number E, 1 F from numbers(100000000);\r\n\r\nElapsed: 14.278 sec.\r\n\r\nsystem start merges SMT;\r\ntruncate table SMT;\r\n\r\nsystem stop merges SMT;\r\nset optimize_on_insert=0;\r\ninsert into SMT select number A, number%5555 B, number%3333 C, number D, number E, 1 F from numbers(100000000);\r\n\r\nElapsed: 5.833 sec.\r\n\r\n```","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25724/reactions","total_count":2,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25724/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25723","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25723/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25723/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25723/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/25723","id":930392578,"node_id":"MDU6SXNzdWU5MzAzOTI1Nzg=","number":25723,"title":"In clickhouse21.4.5.46 version, under the RBAC authorization mechanism, there is no data after MATERIALIZED VIEW is created.","user":{"login":"mjh568412187","id":26197792,"node_id":"MDQ6VXNlcjI2MTk3Nzky","avatar_url":"https://avatars.githubusercontent.com/u/26197792?v=4","gravatar_id":"","url":"https://api.github.com/users/mjh568412187","html_url":"https://github.com/mjh568412187","followers_url":"https://api.github.com/users/mjh568412187/followers","following_url":"https://api.github.com/users/mjh568412187/following{/other_user}","gists_url":"https://api.github.com/users/mjh568412187/gists{/gist_id}","starred_url":"https://api.github.com/users/mjh568412187/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mjh568412187/subscriptions","organizations_url":"https://api.github.com/users/mjh568412187/orgs","repos_url":"https://api.github.com/users/mjh568412187/repos","events_url":"https://api.github.com/users/mjh568412187/events{/privacy}","received_events_url":"https://api.github.com/users/mjh568412187/received_events","type":"User","site_admin":false},"labels":[{"id":386401510,"node_id":"MDU6TGFiZWwzODY0MDE1MTA=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/question","name":"question","color":"bfdadc","default":true,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-06-25T18:04:54Z","updated_at":"2021-06-25T18:05:32Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Make sure to check documentation https://clickhouse.yandex/docs/en/ first. If the question is concise and probably has a short answer, asking it in Telegram chat https://telegram.me/clickhouse_en is probably the fastest way to find the answer. For more complicated questions, consider asking them on StackOverflow with \"clickhouse\" tag https://stackoverflow.com/questions/tagged/clickhouse \r\n\r\nIf you still prefer GitHub issues, remove all this text and ask your question here.\r\n\r\n---\r\nWhen I am under a personal user such as zhangsan, I have given zhangsan the query permissions for the local_ods.ods_order_db__t_trade_order_header table\r\nCreated MATERIALIZED VIEW\r\nThe specific table statement is as follows:\r\n\r\n`CREATE table local_temp.test_table_2\r\n(\r\n    id String,\r\n    root_order_id String,\r\n    pay_at String,\r\n    version_id UInt64\r\n)\r\nENGINE = MergeTree()\r\norder by (version_id);\r\n\r\nCREATE MATERIALIZED VIEW local_temp.consumer To local_temp.test_table_2\r\n(\r\n\t   id String,\r\n    root_order_id String,\r\n    pay_at String,\r\n    version_id UInt64\r\n)\r\nas\r\nselect id,root_order_id,pay_at,version_id\r\n\r\nfrom local_ods.ods_order_db__t_trade_order_header;\r\n`\r\nWhen I am under individual user, I created MATERIALIZED VIEW\r\nThe specific table statement is as follows:\r\n\r\nWhen I query the local_temp.test_table_2 table, no data can be found\r\n\r\nWhen I use the admin user of the cluster, I can query data completely.\r\nSuspected it is a permission problem\r\nI checked the documentation, but I didn’t find a command on how to empower MATERIALIZED VIEW.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25723/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25723/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25703","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25703/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25703/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25703/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/25703","id":930046228,"node_id":"MDU6SXNzdWU5MzAwNDYyMjg=","number":25703,"title":"Output type of intDiv function is somehow constrained by the type of first argument","user":{"login":"vpanfilov","id":11993879,"node_id":"MDQ6VXNlcjExOTkzODc5","avatar_url":"https://avatars.githubusercontent.com/u/11993879?v=4","gravatar_id":"","url":"https://api.github.com/users/vpanfilov","html_url":"https://github.com/vpanfilov","followers_url":"https://api.github.com/users/vpanfilov/followers","following_url":"https://api.github.com/users/vpanfilov/following{/other_user}","gists_url":"https://api.github.com/users/vpanfilov/gists{/gist_id}","starred_url":"https://api.github.com/users/vpanfilov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vpanfilov/subscriptions","organizations_url":"https://api.github.com/users/vpanfilov/orgs","repos_url":"https://api.github.com/users/vpanfilov/repos","events_url":"https://api.github.com/users/vpanfilov/events{/privacy}","received_events_url":"https://api.github.com/users/vpanfilov/received_events","type":"User","site_admin":false},"labels":[{"id":386401509,"node_id":"MDU6TGFiZWwzODY0MDE1MDk=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/invalid","name":"invalid","color":"e6e6e6","default":true,"description":null},{"id":785082162,"node_id":"MDU6TGFiZWw3ODUwODIxNjI=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-documentation","name":"comp-documentation","color":"b5bcff","default":false,"description":"Used to run automatic builds of the documentation"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2021-06-25T10:23:51Z","updated_at":"2021-06-25T11:41:58Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"**Bug description**\r\n\r\nIf **Int8** value is provided as first argument of **intDiv()** function, the output type is limited to **Int8** as well. So, this query:\r\n\r\n```sql\r\nSELECT intDiv(1, 0.001)\r\n\r\nReceived exception from server (version 21.6.5):\r\nCode: 153. DB::Exception: Received from localhost:9000. DB::Exception: Cannot perform integer division, because it will produce infinite or too large number: While processing intDiv(1, 0.001).\r\n```\r\ngives rather counter-intuitive error message.\r\n\r\nBut this query works, as the result value fits in Int8 type:\r\n```sql\r\nSELECT\r\n    intDiv(1, 0.01) AS res,\r\n    toTypeName(res)\r\n\r\n┌─res─┬─toTypeName(intDiv(1, 0.01))─┐\r\n│ 100 │ Int8                        │\r\n└─────┴─────────────────────────────┘\r\n```\r\n\r\n**Does it reproduce on recent release?**\r\n\r\nYes, tested on 21.6.5.37 and 21.3.6.55\r\n\r\n**Expected behavior**\r\n\r\n**intDiv** output type shouldn't be limited by **Int8** type.\r\n\r\n**Current workaround**\r\n\r\nCasting first argument to **Float64** or **Int64** or similar types:\r\n```sql\r\nSELECT\r\n    intDiv(toFloat64(1), 0.001) AS res,\r\n    toTypeName(res)\r\n\r\n┌──res─┬─toTypeName(intDiv(toFloat64(1), 0.001))─┐\r\n│ 1000 │ Int64                                   │\r\n└──────┴─────────────────────────────────────────┘\r\n```\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25703/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25703/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25702","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25702/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25702/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25702/events","html_url":"https://github.com/ClickHouse/ClickHouse/pull/25702","id":930023045,"node_id":"MDExOlB1bGxSZXF1ZXN0Njc3Nzg1NDQw","number":25702,"title":"explain should not make set in fact #25701","user":{"login":"yanhuqing666","id":16715575,"node_id":"MDQ6VXNlcjE2NzE1NTc1","avatar_url":"https://avatars.githubusercontent.com/u/16715575?v=4","gravatar_id":"","url":"https://api.github.com/users/yanhuqing666","html_url":"https://github.com/yanhuqing666","followers_url":"https://api.github.com/users/yanhuqing666/followers","following_url":"https://api.github.com/users/yanhuqing666/following{/other_user}","gists_url":"https://api.github.com/users/yanhuqing666/gists{/gist_id}","starred_url":"https://api.github.com/users/yanhuqing666/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yanhuqing666/subscriptions","organizations_url":"https://api.github.com/users/yanhuqing666/orgs","repos_url":"https://api.github.com/users/yanhuqing666/repos","events_url":"https://api.github.com/users/yanhuqing666/events{/privacy}","received_events_url":"https://api.github.com/users/yanhuqing666/received_events","type":"User","site_admin":false},"labels":[{"id":1304141686,"node_id":"MDU6TGFiZWwxMzA0MTQxNjg2","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/pr-improvement","name":"pr-improvement","color":"007700","default":false,"description":"Pull request with some product improvements"}],"state":"open","locked":false,"assignee":{"login":"KochetovNicolai","id":4092911,"node_id":"MDQ6VXNlcjQwOTI5MTE=","avatar_url":"https://avatars.githubusercontent.com/u/4092911?v=4","gravatar_id":"","url":"https://api.github.com/users/KochetovNicolai","html_url":"https://github.com/KochetovNicolai","followers_url":"https://api.github.com/users/KochetovNicolai/followers","following_url":"https://api.github.com/users/KochetovNicolai/following{/other_user}","gists_url":"https://api.github.com/users/KochetovNicolai/gists{/gist_id}","starred_url":"https://api.github.com/users/KochetovNicolai/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/KochetovNicolai/subscriptions","organizations_url":"https://api.github.com/users/KochetovNicolai/orgs","repos_url":"https://api.github.com/users/KochetovNicolai/repos","events_url":"https://api.github.com/users/KochetovNicolai/events{/privacy}","received_events_url":"https://api.github.com/users/KochetovNicolai/received_events","type":"User","site_admin":false},"assignees":[{"login":"KochetovNicolai","id":4092911,"node_id":"MDQ6VXNlcjQwOTI5MTE=","avatar_url":"https://avatars.githubusercontent.com/u/4092911?v=4","gravatar_id":"","url":"https://api.github.com/users/KochetovNicolai","html_url":"https://github.com/KochetovNicolai","followers_url":"https://api.github.com/users/KochetovNicolai/followers","following_url":"https://api.github.com/users/KochetovNicolai/following{/other_user}","gists_url":"https://api.github.com/users/KochetovNicolai/gists{/gist_id}","starred_url":"https://api.github.com/users/KochetovNicolai/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/KochetovNicolai/subscriptions","organizations_url":"https://api.github.com/users/KochetovNicolai/orgs","repos_url":"https://api.github.com/users/KochetovNicolai/repos","events_url":"https://api.github.com/users/KochetovNicolai/events{/privacy}","received_events_url":"https://api.github.com/users/KochetovNicolai/received_events","type":"User","site_admin":false}],"milestone":null,"comments":7,"created_at":"2021-06-25T09:53:53Z","updated_at":"2021-12-09T14:59:32Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/pulls/25702","html_url":"https://github.com/ClickHouse/ClickHouse/pull/25702","diff_url":"https://github.com/ClickHouse/ClickHouse/pull/25702.diff","patch_url":"https://github.com/ClickHouse/ClickHouse/pull/25702.patch","merged_at":null},"body":"I hereby agree to the terms of the CLA available at: https://yandex.ru/legal/cla/?lang=en\r\n\r\nChangelog category (leave one):\r\n- Improvement\r\n\r\nChangelog entry (a user-readable short description of the changes that goes to CHANGELOG.md):\r\n\r\n...\r\n\r\nfix `explain an in subquery` will show the wrong result and the subquery will be executed when `use_index_for_in_with_subqueries` is enabled\r\n\r\n...\r\n\r\nthe #25701 root cause:\r\nWhen enabling `use_index_for_in_with_subqueries`, the subquery will be executed even when `explain`.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25702/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25702/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25673","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25673/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25673/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25673/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/25673","id":929109830,"node_id":"MDU6SXNzdWU5MjkxMDk4MzA=","number":25673,"title":"Dictionary with same fields for keys and attributes fails","user":{"login":"electrical","id":271677,"node_id":"MDQ6VXNlcjI3MTY3Nw==","avatar_url":"https://avatars.githubusercontent.com/u/271677?v=4","gravatar_id":"","url":"https://api.github.com/users/electrical","html_url":"https://github.com/electrical","followers_url":"https://api.github.com/users/electrical/followers","following_url":"https://api.github.com/users/electrical/following{/other_user}","gists_url":"https://api.github.com/users/electrical/gists{/gist_id}","starred_url":"https://api.github.com/users/electrical/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/electrical/subscriptions","organizations_url":"https://api.github.com/users/electrical/orgs","repos_url":"https://api.github.com/users/electrical/repos","events_url":"https://api.github.com/users/electrical/events{/privacy}","received_events_url":"https://api.github.com/users/electrical/received_events","type":"User","site_admin":false},"labels":[{"id":1575085465,"node_id":"MDU6TGFiZWwxNTc1MDg1NDY1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/unexpected%20behaviour","name":"unexpected behaviour","color":"e088ca","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2021-06-24T11:03:11Z","updated_at":"2021-12-20T15:41:15Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"**Describe the unexpected behaviour**\r\nI'm creating a dictionary that has 3 fields that are also used in the PRIMARY KEY.\r\n\r\nExample:\r\n```\r\nCREATE DICTIONARY test (\r\n\tuser_name String,\r\n\tfrom_country String,\r\n\tto_country String\r\n\r\n)\r\nPRIMARY KEY user_name, from_country, to_country\r\n.....\r\n```\r\nWhich results in an error: `DB::Exception: Dictionary has no attributes defined `\r\n\r\n**How to reproduce**\r\n* Which ClickHouse server version to use: 21.3.9.83\r\n\r\n**Expected behavior**\r\nThe XML version of the dictionary allows for this so expected this to work with the DDL version.\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25673/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25673/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25655","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25655/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25655/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25655/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/25655","id":928684099,"node_id":"MDU6SXNzdWU5Mjg2ODQwOTk=","number":25655,"title":"Aliases imperfect for named subqueries.","user":{"login":"den-crane","id":19737682,"node_id":"MDQ6VXNlcjE5NzM3Njgy","avatar_url":"https://avatars.githubusercontent.com/u/19737682?v=4","gravatar_id":"","url":"https://api.github.com/users/den-crane","html_url":"https://github.com/den-crane","followers_url":"https://api.github.com/users/den-crane/followers","following_url":"https://api.github.com/users/den-crane/following{/other_user}","gists_url":"https://api.github.com/users/den-crane/gists{/gist_id}","starred_url":"https://api.github.com/users/den-crane/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/den-crane/subscriptions","organizations_url":"https://api.github.com/users/den-crane/orgs","repos_url":"https://api.github.com/users/den-crane/repos","events_url":"https://api.github.com/users/den-crane/events{/privacy}","received_events_url":"https://api.github.com/users/den-crane/received_events","type":"User","site_admin":false},"labels":[{"id":386401506,"node_id":"MDU6TGFiZWwzODY0MDE1MDY=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/duplicate","name":"duplicate","color":"cccccc","default":true,"description":null},{"id":845247686,"node_id":"MDU6TGFiZWw4NDUyNDc2ODY=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/usability","name":"usability","color":"ebf28c","default":false,"description":""},{"id":1507867504,"node_id":"MDU6TGFiZWwxNTA3ODY3NTA0","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/st-hold","name":"st-hold","color":"e5b890","default":false,"description":"We've paused the work on issue for some reason"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2021-06-23T22:08:52Z","updated_at":"2021-06-23T23:05:48Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"body":"```\r\nSELECT\r\n  sum(t.b) / 1 a,\r\n  sum(t.a)        \r\nFROM ( SELECT 1 a, 2 b ) t;\r\n\r\nDB::Exception: Unknown identifier 'a' in aggregate function 'sum(a)'\r\n```\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25655/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25655/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25650","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25650/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25650/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25650/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/25650","id":928519930,"node_id":"MDU6SXNzdWU5Mjg1MTk5MzA=","number":25650,"title":"ALTER TABLE ... FREEZE documentation: WITH NAME is not documented","user":{"login":"aferreira","id":43150,"node_id":"MDQ6VXNlcjQzMTUw","avatar_url":"https://avatars.githubusercontent.com/u/43150?v=4","gravatar_id":"","url":"https://api.github.com/users/aferreira","html_url":"https://github.com/aferreira","followers_url":"https://api.github.com/users/aferreira/followers","following_url":"https://api.github.com/users/aferreira/following{/other_user}","gists_url":"https://api.github.com/users/aferreira/gists{/gist_id}","starred_url":"https://api.github.com/users/aferreira/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/aferreira/subscriptions","organizations_url":"https://api.github.com/users/aferreira/orgs","repos_url":"https://api.github.com/users/aferreira/repos","events_url":"https://api.github.com/users/aferreira/events{/privacy}","received_events_url":"https://api.github.com/users/aferreira/received_events","type":"User","site_admin":false},"labels":[{"id":785082162,"node_id":"MDU6TGFiZWw3ODUwODIxNjI=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-documentation","name":"comp-documentation","color":"b5bcff","default":false,"description":"Used to run automatic builds of the documentation"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-06-23T18:11:57Z","updated_at":"2021-06-23T18:24:07Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"The documentation of `ALTER TABLE ... FREEZE` ([here](https://clickhouse.tech/docs/en/sql-reference/statements/alter/partition/#alter_freeze-partition)) does not mention `WITH NAME`.\r\n\r\nWith the recent addition of `UNFREEZE` – implemented by https://github.com/ClickHouse/ClickHouse/pull/21142 and documented at https://github.com/ClickHouse/ClickHouse/pull/24765 – the [documentation](https://clickhouse.tech/docs/en/sql-reference/statements/alter/partition/#alter_unfreeze-partition) gets inconsistent since `UNFREEZE` mentions a backup name without a correspondence at freeze time.\r\n\r\nAccording to the Git commits, the `WITH NAME` part of `FREEZE` has been there for a long time.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25650/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25650/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25645","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25645/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25645/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25645/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/25645","id":928427603,"node_id":"MDU6SXNzdWU5Mjg0Mjc2MDM=","number":25645,"title":"Unrestricted reads from `system.zookeeper`","user":{"login":"alexey-milovidov","id":18581488,"node_id":"MDQ6VXNlcjE4NTgxNDg4","avatar_url":"https://avatars.githubusercontent.com/u/18581488?v=4","gravatar_id":"","url":"https://api.github.com/users/alexey-milovidov","html_url":"https://github.com/alexey-milovidov","followers_url":"https://api.github.com/users/alexey-milovidov/followers","following_url":"https://api.github.com/users/alexey-milovidov/following{/other_user}","gists_url":"https://api.github.com/users/alexey-milovidov/gists{/gist_id}","starred_url":"https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexey-milovidov/subscriptions","organizations_url":"https://api.github.com/users/alexey-milovidov/orgs","repos_url":"https://api.github.com/users/alexey-milovidov/repos","events_url":"https://api.github.com/users/alexey-milovidov/events{/privacy}","received_events_url":"https://api.github.com/users/alexey-milovidov/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":3086255531,"node_id":"MDU6TGFiZWwzMDg2MjU1NTMx","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/warmup%20task","name":"warmup task","color":"FBCA04","default":false,"description":"The task for new ClickHouse team members. Low risk, moderate complexity, no urgency."}],"state":"open","locked":false,"assignee":{"login":"serxa","id":1014716,"node_id":"MDQ6VXNlcjEwMTQ3MTY=","avatar_url":"https://avatars.githubusercontent.com/u/1014716?v=4","gravatar_id":"","url":"https://api.github.com/users/serxa","html_url":"https://github.com/serxa","followers_url":"https://api.github.com/users/serxa/followers","following_url":"https://api.github.com/users/serxa/following{/other_user}","gists_url":"https://api.github.com/users/serxa/gists{/gist_id}","starred_url":"https://api.github.com/users/serxa/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/serxa/subscriptions","organizations_url":"https://api.github.com/users/serxa/orgs","repos_url":"https://api.github.com/users/serxa/repos","events_url":"https://api.github.com/users/serxa/events{/privacy}","received_events_url":"https://api.github.com/users/serxa/received_events","type":"User","site_admin":false},"assignees":[{"login":"serxa","id":1014716,"node_id":"MDQ6VXNlcjEwMTQ3MTY=","avatar_url":"https://avatars.githubusercontent.com/u/1014716?v=4","gravatar_id":"","url":"https://api.github.com/users/serxa","html_url":"https://github.com/serxa","followers_url":"https://api.github.com/users/serxa/followers","following_url":"https://api.github.com/users/serxa/following{/other_user}","gists_url":"https://api.github.com/users/serxa/gists{/gist_id}","starred_url":"https://api.github.com/users/serxa/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/serxa/subscriptions","organizations_url":"https://api.github.com/users/serxa/orgs","repos_url":"https://api.github.com/users/serxa/repos","events_url":"https://api.github.com/users/serxa/events{/privacy}","received_events_url":"https://api.github.com/users/serxa/received_events","type":"User","site_admin":false}],"milestone":null,"comments":0,"created_at":"2021-06-23T16:13:08Z","updated_at":"2022-01-17T13:32:41Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"**Use case**\r\n\r\nAllow arbitrary WHERE condition (or no filtering at all) for SELECTs from `system.zookeeper`.\r\n\r\nConditions on prefix of path or a set of paths can be used to limit reads. Otherwise it will perform a full scan with recursive iteration using asynchronous requests.\r\n\r\nUnrestricted reads can be disabled with a setting.\r\n\r\nIt can be used to collect statistics and analyze data distribution inside ZooKeeper. To perform complex queries on top of replicas and replication queue.\r\n\r\nZooKeeper is actually quite performant and can serve around 100 000 read requests per seconds on typical hardware. A dump of ~10 000 000 nodes can be created in minutes - this query speed is tolerable.\r\n\r\nSee also #22130.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25645/reactions","total_count":1,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":1},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25645/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25622","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25622/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25622/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25622/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/25622","id":928128306,"node_id":"MDU6SXNzdWU5MjgxMjgzMDY=","number":25622,"title":"External dictionaries from Postgres: alias with $ is wrapped with wrong quotes","user":{"login":"Maximus43","id":2333901,"node_id":"MDQ6VXNlcjIzMzM5MDE=","avatar_url":"https://avatars.githubusercontent.com/u/2333901?v=4","gravatar_id":"","url":"https://api.github.com/users/Maximus43","html_url":"https://github.com/Maximus43","followers_url":"https://api.github.com/users/Maximus43/followers","following_url":"https://api.github.com/users/Maximus43/following{/other_user}","gists_url":"https://api.github.com/users/Maximus43/gists{/gist_id}","starred_url":"https://api.github.com/users/Maximus43/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Maximus43/subscriptions","organizations_url":"https://api.github.com/users/Maximus43/orgs","repos_url":"https://api.github.com/users/Maximus43/repos","events_url":"https://api.github.com/users/Maximus43/events{/privacy}","received_events_url":"https://api.github.com/users/Maximus43/received_events","type":"User","site_admin":false},"labels":[{"id":386401505,"node_id":"MDU6TGFiZWwzODY0MDE1MDU=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/bug","name":"bug","color":"ee0701","default":true,"description":"Confirmed user-visible misbehaviour in official release"},{"id":2763098588,"node_id":"MDU6TGFiZWwyNzYzMDk4NTg4","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-postgresql","name":"comp-postgresql","color":"b5bcff","default":false,"description":""}],"state":"open","locked":false,"assignee":{"login":"kssenii","id":54203879,"node_id":"MDQ6VXNlcjU0MjAzODc5","avatar_url":"https://avatars.githubusercontent.com/u/54203879?v=4","gravatar_id":"","url":"https://api.github.com/users/kssenii","html_url":"https://github.com/kssenii","followers_url":"https://api.github.com/users/kssenii/followers","following_url":"https://api.github.com/users/kssenii/following{/other_user}","gists_url":"https://api.github.com/users/kssenii/gists{/gist_id}","starred_url":"https://api.github.com/users/kssenii/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kssenii/subscriptions","organizations_url":"https://api.github.com/users/kssenii/orgs","repos_url":"https://api.github.com/users/kssenii/repos","events_url":"https://api.github.com/users/kssenii/events{/privacy}","received_events_url":"https://api.github.com/users/kssenii/received_events","type":"User","site_admin":false},"assignees":[{"login":"kssenii","id":54203879,"node_id":"MDQ6VXNlcjU0MjAzODc5","avatar_url":"https://avatars.githubusercontent.com/u/54203879?v=4","gravatar_id":"","url":"https://api.github.com/users/kssenii","html_url":"https://github.com/kssenii","followers_url":"https://api.github.com/users/kssenii/followers","following_url":"https://api.github.com/users/kssenii/following{/other_user}","gists_url":"https://api.github.com/users/kssenii/gists{/gist_id}","starred_url":"https://api.github.com/users/kssenii/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kssenii/subscriptions","organizations_url":"https://api.github.com/users/kssenii/orgs","repos_url":"https://api.github.com/users/kssenii/repos","events_url":"https://api.github.com/users/kssenii/events{/privacy}","received_events_url":"https://api.github.com/users/kssenii/received_events","type":"User","site_admin":false}],"milestone":null,"comments":2,"created_at":"2021-06-23T10:55:20Z","updated_at":"2022-01-16T05:24:06Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"**Describe the bug**\r\n\r\nPostgres table is used as a source for CH external dictionary. The table contains field with $ in the name (r$code).\r\nDuring dictionary creation this field is intended to have an alias, for example 'up'\r\n\r\nDDL for dictionary creation looks like this:\r\n\r\n```sql\r\nCREATE DICTIONARY unit (\r\n    n UInt64,up UInt64 EXPRESSION r$code HIERARCHICAL,name String EXPRESSION unit_name DEFAULT 'N/A')\r\n    PRIMARY KEY code\r\n        SOURCE(POSTGRESQL(\r\n        port XXX\r\n        host 'XXX'\r\n        user 'XXX'\r\n        password 'XXX'\r\n        db 'XXX'\r\n        table 'XXX'\r\n    ))\r\n    LAYOUT(HASHED())\r\n    LIFETIME(MIN 300 MAX 360);\r\n```\r\n\r\nDictionary creates without any error messages.\r\nWhen ClickHouse is trying to load data into dictionary, an exception raises from Postgres side.\r\n\r\n```\r\n[2021-06-23 12:43:56] Code: 156, e.displayText() = DB::Exception: Failed to load dictionary 'xxx.unit': std::exception. Code: 1001, type: pqxx::undefined_function, e.what() = ERROR:  operator does not exist: ` integer\r\n[2021-06-23 12:43:56]   LINE 1: COPY (SELECT \"n\", (`r$code`) AS \"up\", (unit_name) AS ...\r\n[2021-06-23 12:43:56]                                 ^\r\n[2021-06-23 12:43:56]   HINT:  No operator matches the given name and argument type. You might need to add an explicit type cast.\r\n[2021-06-23 12:43:56]   , (version 21.6.3.14 (official build))\r\n```\r\n\r\nIf I create same dictionary via XML, it works.\r\nIf I remove `EXPRESSION` and use `r$code` as attribute name, it works.\r\n\r\nSeems like ClickHouse uses wrong masking algorithm for Postgres.\r\n\r\n**Does it reproduce on recent release?**\r\n\r\nYes\r\n\r\n**Enable crash reporting**\r\n\r\nNo crashes\r\n\r\n**How to reproduce**\r\n\r\nTry to export data from PG table with field names containing $ symbol. Use these fields as 'expressions' in dictionaries.\r\n\r\n* Which ClickHouse server version to use\r\n\r\n21.6.3.14\r\n\r\n**Expected behavior**\r\n\r\nSelect to Postgres should be like this\r\n\r\n```\r\nCOPY (SELECT \"n\", (\"r$code\") AS \"up\", (unit_name) AS ...\r\n```\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25622/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25622/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25603","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25603/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25603/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25603/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/25603","id":927631848,"node_id":"MDU6SXNzdWU5Mjc2MzE4NDg=","number":25603,"title":"Table function to recursively iterate directory in filesystem (for `clickhouse-local` or `user_files`).","user":{"login":"alexey-milovidov","id":18581488,"node_id":"MDQ6VXNlcjE4NTgxNDg4","avatar_url":"https://avatars.githubusercontent.com/u/18581488?v=4","gravatar_id":"","url":"https://api.github.com/users/alexey-milovidov","html_url":"https://github.com/alexey-milovidov","followers_url":"https://api.github.com/users/alexey-milovidov/followers","following_url":"https://api.github.com/users/alexey-milovidov/following{/other_user}","gists_url":"https://api.github.com/users/alexey-milovidov/gists{/gist_id}","starred_url":"https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexey-milovidov/subscriptions","organizations_url":"https://api.github.com/users/alexey-milovidov/orgs","repos_url":"https://api.github.com/users/alexey-milovidov/repos","events_url":"https://api.github.com/users/alexey-milovidov/events{/privacy}","received_events_url":"https://api.github.com/users/alexey-milovidov/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":1365579236,"node_id":"MDU6TGFiZWwxMzY1NTc5MjM2","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/minor","name":"minor","color":"FFF8F8","default":false,"description":"Priority: minor"},{"id":1507871495,"node_id":"MDU6TGFiZWwxNTA3ODcxNDk1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/st-community-taken","name":"st-community-taken","color":"e5b890","default":false,"description":"External developer is working on that"},{"id":3086255531,"node_id":"MDU6TGFiZWwzMDg2MjU1NTMx","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/warmup%20task","name":"warmup task","color":"FBCA04","default":false,"description":"The task for new ClickHouse team members. Low risk, moderate complexity, no urgency."}],"state":"open","locked":false,"assignee":{"login":"perst20","id":59165467,"node_id":"MDQ6VXNlcjU5MTY1NDY3","avatar_url":"https://avatars.githubusercontent.com/u/59165467?v=4","gravatar_id":"","url":"https://api.github.com/users/perst20","html_url":"https://github.com/perst20","followers_url":"https://api.github.com/users/perst20/followers","following_url":"https://api.github.com/users/perst20/following{/other_user}","gists_url":"https://api.github.com/users/perst20/gists{/gist_id}","starred_url":"https://api.github.com/users/perst20/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/perst20/subscriptions","organizations_url":"https://api.github.com/users/perst20/orgs","repos_url":"https://api.github.com/users/perst20/repos","events_url":"https://api.github.com/users/perst20/events{/privacy}","received_events_url":"https://api.github.com/users/perst20/received_events","type":"User","site_admin":false},"assignees":[{"login":"perst20","id":59165467,"node_id":"MDQ6VXNlcjU5MTY1NDY3","avatar_url":"https://avatars.githubusercontent.com/u/59165467?v=4","gravatar_id":"","url":"https://api.github.com/users/perst20","html_url":"https://github.com/perst20","followers_url":"https://api.github.com/users/perst20/followers","following_url":"https://api.github.com/users/perst20/following{/other_user}","gists_url":"https://api.github.com/users/perst20/gists{/gist_id}","starred_url":"https://api.github.com/users/perst20/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/perst20/subscriptions","organizations_url":"https://api.github.com/users/perst20/orgs","repos_url":"https://api.github.com/users/perst20/repos","events_url":"https://api.github.com/users/perst20/events{/privacy}","received_events_url":"https://api.github.com/users/perst20/received_events","type":"User","site_admin":false}],"milestone":null,"comments":1,"created_at":"2021-06-22T21:04:13Z","updated_at":"2022-01-28T17:09:46Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"**Use case**\r\nSee https://github.com/kashav/fsql\r\n\r\n**Describe the solution you'd like**\r\nAdd table function and the corresponding `IStorage` implementation that will recursively iterate directory, provide values of requested columns (file attributes and even full content in String if requested) and output the data in rather small blocks (to avoid quickly finish in presense of LIMIT).\r\n\r\nThis is a \"toy\" task.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25603/reactions","total_count":1,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":1},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25603/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25590","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25590/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25590/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25590/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/25590","id":927147429,"node_id":"MDU6SXNzdWU5MjcxNDc0Mjk=","number":25590,"title":"clickhouse bitmap UInt64 max support 4294967295","user":{"login":"sunbc996","id":65344989,"node_id":"MDQ6VXNlcjY1MzQ0OTg5","avatar_url":"https://avatars.githubusercontent.com/u/65344989?v=4","gravatar_id":"","url":"https://api.github.com/users/sunbc996","html_url":"https://github.com/sunbc996","followers_url":"https://api.github.com/users/sunbc996/followers","following_url":"https://api.github.com/users/sunbc996/following{/other_user}","gists_url":"https://api.github.com/users/sunbc996/gists{/gist_id}","starred_url":"https://api.github.com/users/sunbc996/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sunbc996/subscriptions","organizations_url":"https://api.github.com/users/sunbc996/orgs","repos_url":"https://api.github.com/users/sunbc996/repos","events_url":"https://api.github.com/users/sunbc996/events{/privacy}","received_events_url":"https://api.github.com/users/sunbc996/received_events","type":"User","site_admin":false},"labels":[{"id":386401510,"node_id":"MDU6TGFiZWwzODY0MDE1MTA=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/question","name":"question","color":"bfdadc","default":true,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2021-06-22T11:50:38Z","updated_at":"2021-06-22T11:51:55Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Does ClickHouse bitmap int64 support a maximum of 4294967295?table","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25590/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25590/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25581","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25581/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25581/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25581/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/25581","id":926921997,"node_id":"MDU6SXNzdWU5MjY5MjE5OTc=","number":25581,"title":"rows_before_limit_at_least and COUNT(*) OVER() window function do not return expected count with LIMIT BY","user":{"login":"esbenkolsbjerg","id":60872883,"node_id":"MDQ6VXNlcjYwODcyODgz","avatar_url":"https://avatars.githubusercontent.com/u/60872883?v=4","gravatar_id":"","url":"https://api.github.com/users/esbenkolsbjerg","html_url":"https://github.com/esbenkolsbjerg","followers_url":"https://api.github.com/users/esbenkolsbjerg/followers","following_url":"https://api.github.com/users/esbenkolsbjerg/following{/other_user}","gists_url":"https://api.github.com/users/esbenkolsbjerg/gists{/gist_id}","starred_url":"https://api.github.com/users/esbenkolsbjerg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/esbenkolsbjerg/subscriptions","organizations_url":"https://api.github.com/users/esbenkolsbjerg/orgs","repos_url":"https://api.github.com/users/esbenkolsbjerg/repos","events_url":"https://api.github.com/users/esbenkolsbjerg/events{/privacy}","received_events_url":"https://api.github.com/users/esbenkolsbjerg/received_events","type":"User","site_admin":false},"labels":[{"id":1575085465,"node_id":"MDU6TGFiZWwxNTc1MDg1NDY1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/unexpected%20behaviour","name":"unexpected behaviour","color":"e088ca","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-06-22T07:29:57Z","updated_at":"2021-06-22T07:29:57Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"We want to implement pagination using LIMIT (and OFFSET) and for that we need the total number of rows. We have so far used the rows_before_limit_at_least for this but have experienced that it for some queries do not give the expected result. It gives a number bigger than what is actually true. The issue can be boiled down to the following example:\r\n\r\n```\r\ncreate table if not exists test\r\n(\r\n    id      Int8,\r\n    text    String,\r\n    number  Int8\r\n)\r\n    engine = MergeTree()\r\n        PARTITION BY id % 2\r\n        ORDER BY (id, text);\r\n\r\ninsert into test (id, text, number)\r\nVALUES (1, 'a', 1),\r\n       (1, 'b', 2),\r\n       (2, 'c', 3);\r\n\r\nselect id, text, sum(number), COUNT(*) OVER() as window_function_count\r\nfrom test\r\ngroup by id, text\r\norder by text desc\r\nlimit 1 by id\r\nlimit 5\r\nsettings allow_experimental_window_functions = 1\r\nFORMAT\r\nJSON\r\n```\r\n\r\nwhich gives the following output:\r\n\r\n```\r\n{\r\n\t\"meta\":\r\n\t[\r\n\t\t{\r\n\t\t\t\"name\": \"id\",\r\n\t\t\t\"type\": \"Int8\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"text\",\r\n\t\t\t\"type\": \"String\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"sum(number)\",\r\n\t\t\t\"type\": \"Int64\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"window_function_count\",\r\n\t\t\t\"type\": \"UInt64\"\r\n\t\t}\r\n\t],\r\n\r\n\t\"data\":\r\n\t[\r\n\t\t{\r\n\t\t\t\"id\": 2,\r\n\t\t\t\"text\": \"c\",\r\n\t\t\t\"sum(number)\": \"3\",\r\n\t\t\t\"window_function_count\": \"3\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"id\": 1,\r\n\t\t\t\"text\": \"b\",\r\n\t\t\t\"sum(number)\": \"2\",\r\n\t\t\t\"window_function_count\": \"3\"\r\n\t\t}                                                                                                                                                             \r\n\t],\r\n\r\n\t\"rows\": 2,\r\n\r\n\t\"rows_before_limit_at_least\": 3,\r\n\r\n\t\"statistics\":\r\n\t{\r\n\t\t\"elapsed\": 0.009523299,\r\n\t\t\"rows_read\": 3,\r\n\t\t\"bytes_read\": 36\r\n\t}\r\n}\r\n\r\n```\r\n\r\nAs expected the result returns two rows as it is limited to one row for each `id`, but both the count over window function and the `rows_before_limit_at_least` says there are three rows which is clearly not the case for this query. They count in the row which should be excluded by the `LIMIT 1 BY id`.\r\n\r\n**So the question is:** Is this as expected or is it a bug? And in the case that this is expected behavior is there a different way to get the total rows without doing a query with count(*) as well as the \"normal\" query?","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25581/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25581/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25563","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25563/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25563/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25563/events","html_url":"https://github.com/ClickHouse/ClickHouse/pull/25563","id":926441174,"node_id":"MDExOlB1bGxSZXF1ZXN0Njc0NzQ1MjQ3","number":25563,"title":"Use ActionsDAG in KeyCondition","user":{"login":"KochetovNicolai","id":4092911,"node_id":"MDQ6VXNlcjQwOTI5MTE=","avatar_url":"https://avatars.githubusercontent.com/u/4092911?v=4","gravatar_id":"","url":"https://api.github.com/users/KochetovNicolai","html_url":"https://github.com/KochetovNicolai","followers_url":"https://api.github.com/users/KochetovNicolai/followers","following_url":"https://api.github.com/users/KochetovNicolai/following{/other_user}","gists_url":"https://api.github.com/users/KochetovNicolai/gists{/gist_id}","starred_url":"https://api.github.com/users/KochetovNicolai/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/KochetovNicolai/subscriptions","organizations_url":"https://api.github.com/users/KochetovNicolai/orgs","repos_url":"https://api.github.com/users/KochetovNicolai/repos","events_url":"https://api.github.com/users/KochetovNicolai/events{/privacy}","received_events_url":"https://api.github.com/users/KochetovNicolai/received_events","type":"User","site_admin":false},"labels":[{"id":1309674771,"node_id":"MDU6TGFiZWwxMzA5Njc0Nzcx","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/pr-feature","name":"pr-feature","color":"007700","default":false,"description":"Pull request with new product feature"},{"id":1807683251,"node_id":"MDU6TGFiZWwxODA3NjgzMjUx","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/doc-alert","name":"doc-alert","color":"e51068","default":false,"description":"PR where any documentation work is needed or proceeded"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-06-21T17:28:49Z","updated_at":"2021-07-14T09:08:41Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"draft":true,"pull_request":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/pulls/25563","html_url":"https://github.com/ClickHouse/ClickHouse/pull/25563","diff_url":"https://github.com/ClickHouse/ClickHouse/pull/25563.diff","patch_url":"https://github.com/ClickHouse/ClickHouse/pull/25563.patch","merged_at":null},"body":"I hereby agree to the terms of the CLA available at: https://yandex.ru/legal/cla/?lang=en\r\n\r\nChangelog category (leave one):\r\n- New Feature\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25563/reactions","total_count":2,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":2,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25563/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25527","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25527/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25527/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25527/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/25527","id":925951620,"node_id":"MDU6SXNzdWU5MjU5NTE2MjA=","number":25527,"title":"Mutations (updates) hanging for long time","user":{"login":"binary-joe","id":48189951,"node_id":"MDQ6VXNlcjQ4MTg5OTUx","avatar_url":"https://avatars.githubusercontent.com/u/48189951?v=4","gravatar_id":"","url":"https://api.github.com/users/binary-joe","html_url":"https://github.com/binary-joe","followers_url":"https://api.github.com/users/binary-joe/followers","following_url":"https://api.github.com/users/binary-joe/following{/other_user}","gists_url":"https://api.github.com/users/binary-joe/gists{/gist_id}","starred_url":"https://api.github.com/users/binary-joe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/binary-joe/subscriptions","organizations_url":"https://api.github.com/users/binary-joe/orgs","repos_url":"https://api.github.com/users/binary-joe/repos","events_url":"https://api.github.com/users/binary-joe/events{/privacy}","received_events_url":"https://api.github.com/users/binary-joe/received_events","type":"User","site_admin":false},"labels":[{"id":756395244,"node_id":"MDU6TGFiZWw3NTYzOTUyNDQ=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/performance","name":"performance","color":"c2e0c6","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2021-06-21T08:14:21Z","updated_at":"2021-06-28T07:55:12Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Hello,\r\n\r\n**Problem**\r\nWe notice -from time to time- one mutation hanging for (up to) 10 minutes when executing multiple mutations (partially in parallel). More over, is that we see following mutations being executed. In the remaining time the server was doing basically nothing.\r\n\r\n**Info**\r\n* Version `20.8.11.17`\r\n* Parameter `mutation_sync` is set to `2`\r\n* Cluster config is available however only one Clickhouse container is running (k8s statefulset with replicas =1)\r\n* The table is a `MergeTree` table \r\n```\r\n┌─statement──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┐\r\n│ CREATE TABLE xs_data.POSITION_D\r\n(\r\n    `PLOT_FK` Int32 DEFAULT 0,\r\n    `CHANGE_STATUS` Int8 DEFAULT 0,\r\n    `CREATED` DateTime DEFAULT toDate('1970-01-01'),\r\n    `GROUP_FK` Nullable(Int8),\r\n    `OWNER` Nullable(String),\r\n    `REASON` Nullable(String),\r\n    `REPDATE` DateTime DEFAULT toDate('1970-01-01'),\r\n    `SRC_PID` Nullable(Int32),\r\n    `USER_NAME` Nullable(String),\r\n    `SOURCE_TYPE` Nullable(Int8),\r\n    `DIMENSIONS` Nullable(UInt64),\r\n    `_SEARCHID_` UInt32,\r\n    `F001` Nullable(String),\r\n    `POSITION_ID` String,\r\n    `FIELDNAME` String,\r\n    `VALUE` DateTime\r\n)\r\nENGINE = MergeTree()\r\nPARTITION BY FIELDNAME\r\nORDER BY POSITION_ID\r\nSETTINGS index_granularity = 8192 │\r\n└────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┘\r\n```\r\n* See mutation_57.txt in attached server.log. In between there was only logs related to k8s probe tests. No other query was running on the server (even no other session connected).\r\n```\r\n2021.06.10 15:11:48.843134 [ 400 ] {​​​​​2fd3a1a9-30fc-4857-ba05-a1bbd5975aa0}​​​​​ <Information> xs_data.POSITION_D: Added mutation: mutation_57.txt\r\n2021.06.10 15:11:48.843278 [ 400 ] {​​​​​2fd3a1a9-30fc-4857-ba05-a1bbd5975aa0}​​​​​ <Information> xs_data.POSITION_D: Waiting mutation: mutation_57.txt\r\n2021.06.10 15:11:49.411477 [ 402 ] {​​​​​e289189c-eff8-482a-a2b3-379fd43d7d56}​​​​​ <Information> executeQuery: Read 2825509 rows, 13.59 MiB in 0.713868089 sec., 3958026 rows/sec., 19.04 MiB/sec.\r\n2021.06.10 15:11:49.415519 [ 402 ] {​​​​​e289189c-eff8-482a-a2b3-379fd43d7d56}​​​​​ <Information> DynamicQueryHandler: Done processing query\r\n2021.06.10 15:11:49.511158 [ 402 ] {​​​​​9a2c1a09-8e25-49e6-9181-c8f7ba085db4}​​​​​ <Information> executeQuery: Read 1 rows, 1.00 B in 0.000911853 sec., 1096 rows/sec., 1.07 KiB/sec.\r\n2021.06.10 15:11:49.511735 [ 402 ] {​​​​​9a2c1a09-8e25-49e6-9181-c8f7ba085db4}​​​​​ <Information> DynamicQueryHandler: Done processing query\r\n2021.06.10 15:11:49.573034 [ 402 ] {​​​​​69db5819-7f57-4cd5-92c4-e1b015d1018e}​​​​​ <Information> xs_data.POSITION_A: Added mutation: mutation_1377.txt\r\n2021.06.10 15:11:49.573078 [ 402 ] {​​​​​69db5819-7f57-4cd5-92c4-e1b015d1018e}​​​​​ <Information> xs_data.POSITION_A: Waiting mutation: mutation_1377.txt\r\n2021.06.10 15:11:49.747665 [ 405 ] {​​​​​e37018a1-7ddd-46a0-9c57-e33749d15620}​​​​​ <Information> executeQuery: Read 2960485 rows, 20.40 MiB in 1.049906561 sec., 2819760 rows/sec., 19.43 MiB/sec.\r\n2021.06.10 15:11:49.748979 [ 405 ] {​​​​​e37018a1-7ddd-46a0-9c57-e33749d15620}​​​​​ <Information> DynamicQueryHandler: Done processing query\r\n2021.06.10 15:11:49.783734 [ 405 ] {​​​​​94e81b85-2989-4460-ba45-bd8fb9b1cd89}​​​​​ <Information> executeQuery: Read 1 rows, 1.00 B in 0.000247923 sec., 4033 rows/sec., 3.94 KiB/sec.\r\n2021.06.10 15:11:49.783854 [ 405 ] {​​​​​94e81b85-2989-4460-ba45-bd8fb9b1cd89}​​​​​ <Information> DynamicQueryHandler: Done processing query\r\n2021.06.10 15:11:49.814415 [ 71 ] {​​​​​2d32bb16-081e-4c2f-9576-98a544b5145c}​​​​​ <Information> executeQuery: Read 7085251 rows, 37.55 MiB in 1.150650304 sec., 6157605 rows/sec., 32.63 MiB/sec.\r\n2021.06.10 15:11:49.818693 [ 71 ] {​​​​​2d32bb16-081e-4c2f-9576-98a544b5145c}​​​​​ <Information> DynamicQueryHandler: Done processing query\r\n2021.06.10 15:11:49.845293 [ 405 ] {​​​​​6d27ed52-0bde-404a-b55b-8f7fc4e0fdf6}​​​​​ <Information> xs_data.POSITION_S: Added mutation: mutation_1065.txt\r\n2021.06.10 15:11:49.845340 [ 405 ] {​​​​​6d27ed52-0bde-404a-b55b-8f7fc4e0fdf6}​​​​​ <Information> xs_data.POSITION_S: Waiting mutation: mutation_1065.txt\r\n2021.06.10 15:11:49.856023 [ 71 ] {​​​​​d4eea87c-d0e3-4cd8-a558-82f6784fda83}​​​​​ <Information> executeQuery: Read 1 rows, 1.00 B in 0.000768716 sec., 1300 rows/sec., 1.27 KiB/sec.\r\n2021.06.10 15:11:49.856312 [ 71 ] {​​​​​d4eea87c-d0e3-4cd8-a558-82f6784fda83}​​​​​ <Information> DynamicQueryHandler: Done processing query\r\n2021.06.10 15:11:49.916083 [ 71 ] {​​​​​70ee0db9-9b64-43de-a8cc-9ec288fe078a}​​​​​ <Information> xs_data.POSITION_I: Added mutation: mutation_6101.txt\r\n2021.06.10 15:11:49.916131 [ 71 ] {​​​​​70ee0db9-9b64-43de-a8cc-9ec288fe078a}​​​​​ <Information> xs_data.POSITION_I: Waiting mutation: mutation_6101.txt\r\n2021.06.10 15:11:50.323587 [ 402 ] {​​​​​69db5819-7f57-4cd5-92c4-e1b015d1018e}​​​​​ <Information> xs_data.POSITION_A: Mutation mutation_1377.txt done\r\n2021.06.10 15:11:50.323855 [ 402 ] {​​​​​69db5819-7f57-4cd5-92c4-e1b015d1018e}​​​​​ <Information> DynamicQueryHandler: Done processing query\r\n2021.06.10 15:11:50.788094 [ 71 ] {​​​​​70ee0db9-9b64-43de-a8cc-9ec288fe078a}​​​​​ <Information> xs_data.POSITION_I: Mutation mutation_6101.txt done\r\n2021.06.10 15:11:50.788340 [ 71 ] {​​​​​70ee0db9-9b64-43de-a8cc-9ec288fe078a}​​​​​ <Information> DynamicQueryHandler: Done processing query\r\n...\r\n...\r\n2021.06.10 15:21:44.557930 [ 400 ] {2fd3a1a9-30fc-4857-ba05-a1bbd5975aa0} <Information> xs_data.POSITION_D: Mutation mutation_57.txt done\r\n```\r\n* Hanging query:\r\n```\r\nALTER TABLE POSITION_D UPDATE CHANGE_STATUS = 4, OWNER = 'mm', SRC_PID = -2009509 WHERE (`F001` IN ('01-001-0-01-xx','01-xxx-x-xx-xx') AND `PLOT_FK` IN (1002,1022,1984,1986,2000,2002) AND (`CHANGE_STATUS` IN (0,6,8) OR (`CHANGE_STATUS` = 1 AND `OWNER` <> 'mm') OR (`CHANGE_STATUS` IN (2,9) AND `OWNER` = 'mm'))) AND `bitmapContains`((SELECT * FROM MAT_72993897064808648505393240667986578981_1), `_SEARCHID_`)\r\n```\r\n* table has 8000 records.\r\n\r\n**Expected performance**\r\nwe expect the query to be \"scheduled\" and executed much faster (a second max) since the table is tiny and the affected records by the update are few\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25527/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25527/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25515","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25515/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25515/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25515/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/25515","id":925597723,"node_id":"MDU6SXNzdWU5MjU1OTc3MjM=","number":25515,"title":"Experiment with self extracting executable","user":{"login":"alexey-milovidov","id":18581488,"node_id":"MDQ6VXNlcjE4NTgxNDg4","avatar_url":"https://avatars.githubusercontent.com/u/18581488?v=4","gravatar_id":"","url":"https://api.github.com/users/alexey-milovidov","html_url":"https://github.com/alexey-milovidov","followers_url":"https://api.github.com/users/alexey-milovidov/followers","following_url":"https://api.github.com/users/alexey-milovidov/following{/other_user}","gists_url":"https://api.github.com/users/alexey-milovidov/gists{/gist_id}","starred_url":"https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexey-milovidov/subscriptions","organizations_url":"https://api.github.com/users/alexey-milovidov/orgs","repos_url":"https://api.github.com/users/alexey-milovidov/repos","events_url":"https://api.github.com/users/alexey-milovidov/events{/privacy}","received_events_url":"https://api.github.com/users/alexey-milovidov/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":3086255531,"node_id":"MDU6TGFiZWwzMDg2MjU1NTMx","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/warmup%20task","name":"warmup task","color":"FBCA04","default":false,"description":"The task for new ClickHouse team members. Low risk, moderate complexity, no urgency."}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-06-20T13:16:19Z","updated_at":"2021-06-20T13:20:07Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"**Use case**\r\n\r\nClickHouse has a neat [single binary download](https://builds.clickhouse.tech/master/amd64/clickhouse).\r\nIt requires only two commands to install:\r\n```\r\nchmod a+x clickhouse\r\n./clickhouse install\r\n```\r\nIt is portable and can run on any Linux.\r\nIt also contains full debug info (that is useful for profiling and introspection).\r\n\r\nBut the size of single binary download is too large (around 3 GB).\r\n\r\nWe can simply put it into `gz` or `zstd`, but the disadvantages are:\r\n- additional step is required to unpack the executable;\r\n- gz is an obsolete inefficient format; zstd also cannot be used because not everyone has zstd tool installed in OS;\r\n- even gzip tool cannot be used in `chroot`, bare `docker` images and the cases with bare Linux kernel.\r\n\r\nWe can also make our CDN to compress it into gzip or zstd automatically but `curl` and `wget` don't use `Accept-Encoding` by default, so it is useless.\r\n\r\n**Describe the solution you'd like**\r\n\r\nMake a tool that will transform binary to a self extracting executable, packed with zstd. Postprocess `clickhouse` executable with this tool.\r\n\r\nThe tool should link with `zstd` and `glibc_compatibility` but not our other libraries. It should include the compressed executable as a resource. The tool can be invoked with any command line arguments. On run, it will print a message, check the amount of free space in the filesystem, unpack the embedded executable to a file in the same directory with similar name (like `clickhouse.unpacked`), add executable flag, fsync it, rename replacing the original file and run with the same parameters.\r\n\r\n**Additional context**\r\n\r\nWhen we create `deb` or `rpm` packages, we choose `gzip` for compression instead of `xz` (because our packages must be compatible with Linux distributions from 13 years ago like Ubuntu Hardy and CentOS 5). And we choose compression level 1, because otherwise it compresses too slowly even if `pigz` is used.\r\n\r\nBy creating self extracting executable with zstd and no dependencies, we can make smaller `deb` and `rpm` packages without breaking the compatibility with Ubuntu Hardy and CentOS 5.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25515/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25515/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25514","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25514/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25514/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25514/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/25514","id":925591989,"node_id":"MDU6SXNzdWU5MjU1OTE5ODk=","number":25514,"title":"Proposed changes for \"clickhouse install\"","user":{"login":"traceon","id":10261534,"node_id":"MDQ6VXNlcjEwMjYxNTM0","avatar_url":"https://avatars.githubusercontent.com/u/10261534?v=4","gravatar_id":"","url":"https://api.github.com/users/traceon","html_url":"https://github.com/traceon","followers_url":"https://api.github.com/users/traceon/followers","following_url":"https://api.github.com/users/traceon/following{/other_user}","gists_url":"https://api.github.com/users/traceon/gists{/gist_id}","starred_url":"https://api.github.com/users/traceon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/traceon/subscriptions","organizations_url":"https://api.github.com/users/traceon/orgs","repos_url":"https://api.github.com/users/traceon/repos","events_url":"https://api.github.com/users/traceon/events{/privacy}","received_events_url":"https://api.github.com/users/traceon/received_events","type":"User","site_admin":false},"labels":[{"id":845247686,"node_id":"MDU6TGFiZWw4NDUyNDc2ODY=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/usability","name":"usability","color":"ebf28c","default":false,"description":""},{"id":1643658066,"node_id":"MDU6TGFiZWwxNjQzNjU4MDY2","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-packaging","name":"comp-packaging","color":"b5bcff","default":false,"description":"deb, rpm, tar, service-file etc."}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2021-06-20T12:45:59Z","updated_at":"2022-01-15T19:41:17Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Currently, there are several issues/shortcomings with `clickhouse install`:\r\n\r\n- [x] 1. (fixed in #30295) If a custom prefix path is specified via `--prefix /some/path` (and only that path is customized), then at least some of other paths are still rooted in `/`, the following error message confirms that:\r\n```\r\n$ ./programs/clickhouse install --prefix /home/traceon/Development/prefix/\r\nCopying ClickHouse binary to /usr/bin/clickhouse.new\r\nInstall must be run as root: sudo ./clickhouse install\r\nCode: 76, e.displayText() = DB::ErrnoException: Cannot open file /usr/bin/clickhouse.new, errno: 13, strerror: Permission denied (version 21.7.1.1)\r\n```\r\n\r\n- [x] 2. (fixed in #30295) If some of the customized paths does not exist, it would make sense to create all required nested directories automatically, as if `mkdir -p /custom/path` was executed. Currently, it causes an error:\r\n```\r\n$ ./programs/clickhouse install --prefix /home/traceon/Development/prefix --binary-path /home/traceon/Development/prefix/usr/bin --config-path /home/traceon/Development/prefix/etc/clickhouse-server --log-path /home/traceon/Development/prefix/var/log/clickhouse-server --data-path /home/traceon/Development/prefix/var/lib/clickhouse --pid-path /home/traceon/Development/prefix/var/run/clickhouse-server --user traceon --group traceon\r\nstd::exception. Code: 1001, type: std::__1::__fs::filesystem::filesystem_error, e.what() = filesystem error: in space: No such file or directory [/home/traceon/Development/prefix/usr/bin]\r\nCannot print extra info for Poco::Exception (version 21.7.1.1)\r\n\r\nRun with sudo.\r\n```\r\n\r\n- [ ] 3. `Run with sudo.` from the above, and in general... This should be optional, a recommendation with a clear description of why it is recommended, and what won't be done automatically if `clickhouse install` is executed on behalf of unprivileged user, and how all those extra steps can be performed manually later. E.g., here it would be nice to have a sample command for adding capabilities in the output message:\r\n\r\n```\r\nSetting capabilities for clickhouse binary. This is optional.\r\nunable to set CAP_SETFCAP effective capability: Operation not permitted\r\nCannot set 'net_admin' or 'ipc_lock' or 'sys_nice' capability for clickhouse binary. This is optional. Taskstats accounting will be disabled. To enable taskstats accounting you may add the required capability later manually.\r\n```\r\n\r\n- [ ] 4. `clickhouse install` copies `clickhouse` binary to `.../usr/bin/`, but for developers who want to use a binary that they build from sources initially and then modify and rebuild it, it makes sense to support a hidden flag, like `--dev`, that will cause a symlink `clickhouse` to be created in `.../usr/bin/` that would point to the original binary instead of copying it, so that when it is rebuilt, the new version of the binary is picked up automatically, when accessed from the \"installed\" paths.\r\n\r\n- [ ] 5. `clickhouse install` creates symlinks in `.../usr/bin/` like `clickhouse-server`, `clickhouse-client`, etc., that point to the absolute path of `clickhouse`, i.e., to `.../usr/bin/clickhouse`. It is better to change the path to relative, i.e., to just `clickhouse`, so that when and if the path of the prefix is changed (due to moving, or remounting under some other path), at least the symlinks remain valid.\r\n\r\n- [x] 6. (fixed in #30295) `--prefix`, `--config-path`, etc., don't affect the default paths in the created/copied `config.xml`, which is very misleading.\r\n\r\n- [ ] 7. With a customized paths, esp. the custom config path, it would be useful to somehow \"hardcode\" or provide some bootstrapping method for the `clickhouse` executable installed in a custom path, to use that custom config path by default, so that there is no need to provide `--config /custom/config/path/config.xml` each time, to actually execute ClickHouse correctly with all the custom \"installed\" paths.\r\n\r\n- [x] 8. It is interactive. It asks at least for a password for the default user. It would be nice to have an option that will allow to run `clickhouse install` unattended, from within a script.\r\n\r\n- [ ] 9. (partially worked around in #30295 by defaulting and supporting the current user/group only) It calls some commands in attempt to create user/group. Those commands are Linux-specific. It doesn't work In macOS, for example.\r\n\r\n- [x] 10. (implemented in #30295, the empty user/group will avoid manipulating ownership) It would be nice to be able to have some fallback behavior for `--user` and `--group` to take effective uid, etc., instead of the default `clickhouse:clickhouse`. ","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25514/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25514/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25485","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25485/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25485/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25485/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/25485","id":924967104,"node_id":"MDU6SXNzdWU5MjQ5NjcxMDQ=","number":25485,"title":"Referring WITH Clause in other With clause using Remote/ Distributed give error. ","user":{"login":"shawel","id":625370,"node_id":"MDQ6VXNlcjYyNTM3MA==","avatar_url":"https://avatars.githubusercontent.com/u/625370?v=4","gravatar_id":"","url":"https://api.github.com/users/shawel","html_url":"https://github.com/shawel","followers_url":"https://api.github.com/users/shawel/followers","following_url":"https://api.github.com/users/shawel/following{/other_user}","gists_url":"https://api.github.com/users/shawel/gists{/gist_id}","starred_url":"https://api.github.com/users/shawel/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/shawel/subscriptions","organizations_url":"https://api.github.com/users/shawel/orgs","repos_url":"https://api.github.com/users/shawel/repos","events_url":"https://api.github.com/users/shawel/events{/privacy}","received_events_url":"https://api.github.com/users/shawel/received_events","type":"User","site_admin":false},"labels":[{"id":1575085465,"node_id":"MDU6TGFiZWwxNTc1MDg1NDY1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/unexpected%20behaviour","name":"unexpected behaviour","color":"e088ca","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2021-06-18T14:36:00Z","updated_at":"2021-06-19T16:39:42Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"I am using query similar to this WITH Clause as follows.\r\n\r\n```\r\nWITH\r\n    base AS \r\n    (\r\n        SELECT number\r\n        FROM numbers\r\n        LIMIT 10\r\n    ),\r\n    \r\n    (\r\n        SELECT 1\r\n        FROM remote('node2.clickhouse.svc', system, numbers)\r\n        WHERE number IN (base)\r\n        LIMIT 1\r\n    )\r\nSELECT 1\r\n\r\nQuery id: 673acdf6-23de-4a6a-9352-8f2744f94506\r\n\r\n\r\n0 rows in set. Elapsed: 0.021 sec. \r\n\r\nReceived exception from server (version 21.6.3):\r\nCode: 60. DB::Exception: Received from localhost:9000. DB::Exception: Received from node2.clickhouse.svc:9000. DB::Exception: Table default.base doesn't exist: While processing number IN (base AS _subquery1023)\r\n```","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25485/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25485/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25460","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25460/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25460/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25460/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/25460","id":924723652,"node_id":"MDU6SXNzdWU5MjQ3MjM2NTI=","number":25460,"title":"clickhouse-server start failed, Error: Cannot open file: not a directory","user":{"login":"Veryfirefly","id":20528475,"node_id":"MDQ6VXNlcjIwNTI4NDc1","avatar_url":"https://avatars.githubusercontent.com/u/20528475?v=4","gravatar_id":"","url":"https://api.github.com/users/Veryfirefly","html_url":"https://github.com/Veryfirefly","followers_url":"https://api.github.com/users/Veryfirefly/followers","following_url":"https://api.github.com/users/Veryfirefly/following{/other_user}","gists_url":"https://api.github.com/users/Veryfirefly/gists{/gist_id}","starred_url":"https://api.github.com/users/Veryfirefly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Veryfirefly/subscriptions","organizations_url":"https://api.github.com/users/Veryfirefly/orgs","repos_url":"https://api.github.com/users/Veryfirefly/repos","events_url":"https://api.github.com/users/Veryfirefly/events{/privacy}","received_events_url":"https://api.github.com/users/Veryfirefly/received_events","type":"User","site_admin":false},"labels":[{"id":386401510,"node_id":"MDU6TGFiZWwzODY0MDE1MTA=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/question","name":"question","color":"bfdadc","default":true,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-06-18T09:31:35Z","updated_at":"2021-06-18T09:31:35Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Hi, there!\r\nwhen i use the command `systemctl start clickhouse-server` to start clickhouse-server ，the server is start failed，so i checked clickhouse-server.err.log，i found an error message was output in the log:\r\n\r\n``` text\r\n0. DB::throwAtAssertionFailed(char const*, DB::ReadBuffer&) @ 0x86653e5 in /usr/bin/clickhouse\r\n1. DB::NamesAndTypesList::readText(DB::ReadBuffer&) @ 0xe723208 in /usr/bin/clickhouse\r\n2. DB::IMergeTreeDataPart::loadColumns(bool) @ 0xf596e50 in /usr/bin/clickhouse\r\n3. ? @ 0xf60bb09 in /usr/bin/clickhouse\r\n4. ThreadPoolImpl<ThreadFromGlobalPool>::worker(std::__1::__list_iterator<ThreadFromGlobalPool, void*>) @ 0x8651748 in /usr/bin/clickhouse\r\n5. ThreadFromGlobalPool::ThreadFromGlobalPool<void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda1'()>(void&&, void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda1'()&&...)::'lambda'()::operator()() @ 0x86536ff in /usr/bin/clickhouse\r\n6. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x864ed1f in /usr/bin/clickhouse\r\n7. ? @ 0x86527b3 in /usr/bin/clickhouse\r\n8. start_thread @ 0x7ea5 in /usr/lib64/libpthread-2.17.so\r\n9. __clone @ 0xfe96d in /usr/lib64/libc-2.17.so\r\n (version 21.3.3.14 (official build))\r\n2021.06.18 17:03:38.242379 [ 1846 ] {} <Error> system.metric_log (b31b2d8c-47a7-4591-9c4f-08ec06f6d66e): Part /home/clickhouse/store/b31/b31b2d8c-47a7-4591-9c4f-08ec06f6d66e/202105_727724_731210_682 is broken. Looking for parts to replace it.\r\n2021.06.18 17:03:38.242393 [ 1846 ] {} <Error> system.metric_log (b31b2d8c-47a7-4591-9c4f-08ec06f6d66e): Detaching broken part /home/clickhouse/store/b31/b31b2d8c-47a7-4591-9c4f-08ec06f6d66e/202105_727724_731210_682 because it covers less than 2 parts. You need to resolve this manually\r\n2021.06.18 17:03:38.251496 [ 1820 ] {} <Error> Application: Caught exception while loading metadata: Poco::Exception. Code: 1000, e.code() = 20, e.displayText() = Cannot open file: not a directory: /home/clickhouse/store/b31/b31b2d8c-47a7-4591-9c4f-08ec06f6d66e/202105_731211_731211_0/, Stack trace (when copying this message, always include the lines below):\r\n\r\n0. Poco::FileImpl::handleLastErrorImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) @ 0x120491e0 in /usr/bin/clickhouse\r\n1. Poco::DirectoryIteratorImpl::DirectoryIteratorImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) @ 0x12030f77 in /usr/bin/clickhouse\r\n2. Poco::DirectoryIterator::DirectoryIterator(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) @ 0x120311ff in /usr/bin/clickhouse\r\n3. DB::DiskLocalDirectoryIterator::DiskLocalDirectoryIterator(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) @ 0xea0448d in /usr/bin/clickhouse\r\n4. DB::DiskLocal::iterateDirectory(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) @ 0xea0117e in /usr/bin/clickhouse\r\n5. DB::MergeTreeIndexGranularityInfo::getMarksExtensionFromFilesystem(std::__1::shared_ptr<DB::IDisk> const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) @ 0xf6a7118 in /usr/bin/clickhouse\r\n6. DB::MergeTreeData::createPart(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::MergeTreePartInfo const&, std::__1::shared_ptr<DB::IVolume> const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const @ 0xf5dd97b in /usr/bin/clickhouse\r\n7. ? @ 0xf60a55a in /usr/bin/clickhouse\r\n8. ThreadPoolImpl<ThreadFromGlobalPool>::worker(std::__1::__list_iterator<ThreadFromGlobalPool, void*>) @ 0x8651748 in /usr/bin/clickhouse\r\n9. ThreadFromGlobalPool::ThreadFromGlobalPool<void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda1'()>(void&&, void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda1'()&&...)::'lambda'()::operator()() @ 0x86536ff in /usr/bin/clickhouse\r\n10. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x864ed1f in /usr/bin/clickhouse\r\n11. ? @ 0x86527b3 in /usr/bin/clickhouse\r\n12. start_thread @ 0x7ea5 in /usr/lib64/libpthread-2.17.so\r\n13. __clone @ 0xfe96d in /usr/lib64/libc-2.17.so\r\n (version 21.3.3.14 (official build))\r\n2021.06.18 17:03:38.251608 [ 1820 ] {} <Information> Application: Shutting down storages.\r\n2021.06.18 17:03:38.251614 [ 1820 ] {} <Information> Context: Shutdown disk default\r\n2021.06.18 17:03:38.251842 [ 1820 ] {} <Debug> Application: Shut down storages.\r\n2021.06.18 17:03:38.252266 [ 1820 ] {} <Debug> Application: Destroyed global context.\r\n2021.06.18 17:03:38.258292 [ 1820 ] {} <Error> Application: Cannot open file: not a directory: /home/clickhouse/store/b31/b31b2d8c-47a7-4591-9c4f-08ec06f6d66e/202105_731211_731211_0/\r\n2021.06.18 17:03:38.258310 [ 1820 ] {} <Information> Application: shutting down\r\n2021.06.18 17:03:38.258317 [ 1820 ] {} <Debug> Application: Uninitializing subsystem: Logging Subsystem\r\n2021.06.18 17:03:38.258550 [ 1821 ] {} <Trace> BaseDaemon: Received signal -2\r\n2021.06.18 17:03:38.258570 [ 1821 ] {} <Information> BaseDaemon: Stop SignalListener thread\r\n2021.06.18 17:03:38.324148 [ 1819 ] {} <Information> Application: Child process exited normally with code 70.\r\n```\r\nThe clickhouse storage file directory is stored in the /home path. Due to a sudden power failure, the disk data mounted in this path has a problem and it has been repaired.\r\n\r\nI found the error mentioned in the log message. This is a file, can I delete it, or is there any way to repair the data and start the server?\r\n\r\n![image](https://user-images.githubusercontent.com/20528475/122539824-9c216380-d05a-11eb-8ab8-cca655c00963.png)\r\n\r\nThe file is the complete error log: [https://veryfirefly.github.io/error/clickhouse-server.err.log](https://veryfirefly.github.io/error/clickhouse-server.err.log)\r\n\r\nThanks","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25460/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25460/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25451","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25451/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25451/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25451/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/25451","id":924546935,"node_id":"MDU6SXNzdWU5MjQ1NDY5MzU=","number":25451,"title":"php mysqli client Authentication for user udefault failed","user":{"login":"1995hzczjut","id":29776636,"node_id":"MDQ6VXNlcjI5Nzc2NjM2","avatar_url":"https://avatars.githubusercontent.com/u/29776636?v=4","gravatar_id":"","url":"https://api.github.com/users/1995hzczjut","html_url":"https://github.com/1995hzczjut","followers_url":"https://api.github.com/users/1995hzczjut/followers","following_url":"https://api.github.com/users/1995hzczjut/following{/other_user}","gists_url":"https://api.github.com/users/1995hzczjut/gists{/gist_id}","starred_url":"https://api.github.com/users/1995hzczjut/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/1995hzczjut/subscriptions","organizations_url":"https://api.github.com/users/1995hzczjut/orgs","repos_url":"https://api.github.com/users/1995hzczjut/repos","events_url":"https://api.github.com/users/1995hzczjut/events{/privacy}","received_events_url":"https://api.github.com/users/1995hzczjut/received_events","type":"User","site_admin":false},"labels":[{"id":1575085465,"node_id":"MDU6TGFiZWwxNTc1MDg1NDY1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/unexpected%20behaviour","name":"unexpected behaviour","color":"e088ca","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2021-06-18T05:09:08Z","updated_at":"2021-06-18T14:18:53Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"1. When I use the MySQL command line(mysql -h10.188.41.8 -udefault -psftcwl -P9004 default), it's OK.\r\n2021.06.18 01:19:15.618760 [ 5042 ] {} <Trace> MySQLHandlerFactory: MySQL connection. Id: 25. Address: [::ffff:10.188.41.8]:49866\r\n2021.06.18 01:19:15.619694 [ 5042 ] {} <Trace> MySQLHandler: Sent handshake\r\n2021.06.18 01:19:15.619854 [ 5042 ] {} <Trace> MySQLHandler: payload size: 91\r\n2021.06.18 01:19:15.619906 [ 5042 ] {} <Trace> MySQLHandler: Capabilities: 33531533, max_packet_size: 16777216, character_set: 33, user: default, auth_response length: 20, database: default, **auth_plugin_name: mysql_native_password**\r\n2021.06.18 01:19:15.620532 [ 5042 ] {} <Trace> ContextAccess (default): Settings: readonly=0, allow_ddl=true, allow_introspection_functions=false\r\n2021.06.18 01:19:15.620604 [ 5042 ] {} <Trace> ContextAccess (default): List of all grants: GRANT ALL ON *.* WITH GRANT OPTION\r\n2021.06.18 01:19:15.620615 [ 5042 ] {} <Trace> ContextAccess (default): List of all grants including implicit: GRANT ALL ON *.* WITH GRANT OPTION\r\n2021.06.18 01:19:15.620682 [ 5042 ] {} <Debug> MySQLHandler: Authentication for user default succeeded.\r\n\r\n2. Then use PHP MySQL extension, authorization failed(all parameters are the **same** as the above command line), the difference between logs is empty auth_ plugin_ name\r\n2021.06.18 01:38:07.660049 [ 5042 ] {} <Trace> MySQLHandlerFactory: MySQL connection. Id: 26. Address: [::ffff:10.188.41.8]:49888\r\n2021.06.18 01:38:07.660486 [ 5042 ] {} <Trace> MySQLHandler: Sent handshake\r\n2021.06.18 01:38:07.661697 [ 5042 ] {} <Trace> MySQLHandler: payload size: 68\r\n2021.06.18 01:38:07.661759 [ 5042 ] {} <Trace> MySQLHandler: Capabilities: 172557, max_packet_size: 1073741824, character_set: 33, user: hzchzc, auth_response length: 20, database: default, **auth_plugin_name:** \r\n2021.06.18 01:38:07.668111 [ 5042 ] {} <Error> MySQLHandler: Authentication for user hzchzc failed.\r\n2021.06.18 01:38:07.668323 [ 5042 ] {} <Error> MySQLHandler: DB::Exception: Received packet with wrong sequence-id: 0. Expected: 3.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25451/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25451/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25429","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25429/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25429/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25429/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/25429","id":924239981,"node_id":"MDU6SXNzdWU5MjQyMzk5ODE=","number":25429,"title":"Replication timeout","user":{"login":"DmitryPismanCdnnow","id":40359676,"node_id":"MDQ6VXNlcjQwMzU5Njc2","avatar_url":"https://avatars.githubusercontent.com/u/40359676?v=4","gravatar_id":"","url":"https://api.github.com/users/DmitryPismanCdnnow","html_url":"https://github.com/DmitryPismanCdnnow","followers_url":"https://api.github.com/users/DmitryPismanCdnnow/followers","following_url":"https://api.github.com/users/DmitryPismanCdnnow/following{/other_user}","gists_url":"https://api.github.com/users/DmitryPismanCdnnow/gists{/gist_id}","starred_url":"https://api.github.com/users/DmitryPismanCdnnow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DmitryPismanCdnnow/subscriptions","organizations_url":"https://api.github.com/users/DmitryPismanCdnnow/orgs","repos_url":"https://api.github.com/users/DmitryPismanCdnnow/repos","events_url":"https://api.github.com/users/DmitryPismanCdnnow/events{/privacy}","received_events_url":"https://api.github.com/users/DmitryPismanCdnnow/received_events","type":"User","site_admin":false},"labels":[{"id":386401510,"node_id":"MDU6TGFiZWwzODY0MDE1MTA=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/question","name":"question","color":"bfdadc","default":true,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2021-06-17T18:58:03Z","updated_at":"2021-07-03T19:08:19Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Two identical servers in one rack + zookeeper. One server is r/w (192.168.10.1). The other - only data replication (192.168.10.2). Load average < 2 on both servers. The network is also not overloaded.\r\n\r\nClickHouse server version 20.8.3.18.\r\n\r\nOn 192.168.10.2 there are errors in the log several times a day:\r\n```\r\n2021.06.12 17:30:16.248490 [ 30922 ] {} <Error> col.logs_geo_traffic: DB::StorageReplicatedMergeTree::queueTask()::<lambda(DB::StorageReplicatedMergeTree::LogEntryPtr&)>: Poco::Excep\r\ntion. Code: 1000, e.code() = 0, e.displayText() = Timeout: connect timed out: 192.168.10.1:9009, Stack trace (when copying this message, always include the lines below):\r\n\r\n0. Poco::TimeoutException::TimeoutException(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_tra\r\nits<char>, std::__1::allocator<char> > const&, int) @ 0x13cd67fb in /usr/bin/clickhouse\r\n1. ? @ 0xa1a9951 in /usr/bin/clickhouse\r\n2. Poco::Net::HTTPSession::connect(Poco::Net::SocketAddress const&) @ 0x13be6921 in /usr/bin/clickhouse\r\n3. Poco::Net::HTTPClientSession::reconnect() @ 0x13bdd3da in /usr/bin/clickhouse\r\n4. Poco::Net::HTTPClientSession::sendRequest(Poco::Net::HTTPRequest&) @ 0x13bde5a0 in /usr/bin/clickhouse\r\n5. DB::detail::ReadWriteBufferFromHTTPBase<std::__1::shared_ptr<DB::UpdatablePooledSession> >::call(Poco::URI, Poco::Net::HTTPResponse&) @ 0x1105feee in /usr/bin/clickhouse\r\n6. DB::detail::ReadWriteBufferFromHTTPBase<std::__1::shared_ptr<DB::UpdatablePooledSession> >::ReadWriteBufferFromHTTPBase(std::__1::shared_ptr<DB::UpdatablePooledSession>, Poco::URI, s\r\ntd::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::function<void (std::__1::basic_ostream<char, std::__1::char_traits<char> >&)>, Poc\r\no::Net::HTTPBasicCredentials const&, unsigned long, std::__1::vector<std::__1::tuple<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::bas\r\nic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::tuple<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::alloc\r\nator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >, DB::RemoteHostFilter const&) @ 0x11060382 in /usr/bin/clickhouse\r\n7. DB::DataPartsExchange::Fetcher::fetchPart(std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocato\r\nr<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::alloc\r\nator<char> > const&, int, DB::ConnectionTimeouts const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::\r\n__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool, std::__1::basic_string<ch\r\nar, std::__1::char_traits<char>, std::__1::allocator<char> > const&) @ 0x1105a30f in /usr/bin/clickhouse\r\n8. ? @ 0x10f9d1de in /usr/bin/clickhouse\r\n9. DB::StorageReplicatedMergeTree::fetchPart(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::shared_ptr<DB::StorageInMemoryMetada\r\nta const> const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool, unsigned long, std::__1::shared_ptr<zkutil::ZooKeeper>) @ 0x10fe52e\r\n1 in /usr/bin/clickhouse\r\n10. DB::StorageReplicatedMergeTree::executeFetch(DB::ReplicatedMergeTreeLogEntry&) @ 0x10fe75a4 in /usr/bin/clickhouse\r\n11. DB::StorageReplicatedMergeTree::executeLogEntry(DB::ReplicatedMergeTreeLogEntry&) @ 0x10fe9951 in /usr/bin/clickhouse\r\n12. ? @ 0x10fe9cca in /usr/bin/clickhouse\r\n13. DB::ReplicatedMergeTreeQueue::processEntry(std::__1::function<std::__1::shared_ptr<zkutil::ZooKeeper> ()>, std::__1::shared_ptr<DB::ReplicatedMergeTreeLogEntry>&, std::__1::function\r\n<bool (std::__1::shared_ptr<DB::ReplicatedMergeTreeLogEntry>&)>) @ 0x111ba57e in /usr/bin/clickhouse\r\n14. DB::StorageReplicatedMergeTree::queueTask() @ 0x10f9ea57 in /usr/bin/clickhouse\r\n15. DB::BackgroundProcessingPool::workLoopFunc() @ 0x11055b0f in /usr/bin/clickhouse\r\n16. ? @ 0x110563ef in /usr/bin/clickhouse\r\n17. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0xa43cc4d in /usr/bin/clickhouse\r\n18. ? @ 0xa43b3ff in /usr/bin/clickhouse\r\n19. start_thread @ 0x7ea5 in /usr/lib64/libpthread-2.17.so\r\n20. clone @ 0xfe8dd in /usr/lib64/libc-2.17.so\r\n (version 20.8.3.18)\r\n```\r\n\r\nI can not find what timeout value was exceeded.\r\n\r\nThe port in error message belongs to <interserver_http_port> 9009 </interserver_http_port> parameter, i.e. inter-server exchange.\r\nIn the code (https://github.com/ClickHouse/ClickHouse/blob/20.8/programs/server/Server.cpp#L951) timeouts are set in settings.http_receive_timeout and settings.http_send_timeout.\r\nIf I understand correctly, <system_profile> default </system_profile> is set in config.xml, and these parameters are set in users.xml in the default profile. Now they 3600 seconds.\r\n\r\nWhat could be wrong?\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25429/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25429/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25415","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25415/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25415/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25415/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/25415","id":923965677,"node_id":"MDU6SXNzdWU5MjM5NjU2Nzc=","number":25415,"title":"auto FINAL for select from ReplacingMergeTree/AggregatingMergeTree","user":{"login":"morozovsk","id":1822063,"node_id":"MDQ6VXNlcjE4MjIwNjM=","avatar_url":"https://avatars.githubusercontent.com/u/1822063?v=4","gravatar_id":"","url":"https://api.github.com/users/morozovsk","html_url":"https://github.com/morozovsk","followers_url":"https://api.github.com/users/morozovsk/followers","following_url":"https://api.github.com/users/morozovsk/following{/other_user}","gists_url":"https://api.github.com/users/morozovsk/gists{/gist_id}","starred_url":"https://api.github.com/users/morozovsk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/morozovsk/subscriptions","organizations_url":"https://api.github.com/users/morozovsk/orgs","repos_url":"https://api.github.com/users/morozovsk/repos","events_url":"https://api.github.com/users/morozovsk/events{/privacy}","received_events_url":"https://api.github.com/users/morozovsk/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-06-17T14:04:01Z","updated_at":"2021-06-17T14:04:01Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"**Use case**\r\nI use metabase and another software for visualizing data from clickhouse for end users. Now I need create VIEW like `select from t FINAL` for all ReplacingMergeTree/AggregatingMergeTree tables. It works but sometime it is slow and always it is uneffective. I cant add FINAL to select query because metabase/e.t.c. generate sql by own. \r\n\r\n**Describe the solution you'd like**\r\nPlease add option for server or for table like \"auto final\".\r\n\r\n**Describe alternatives you've considered**\r\nI can create proxy and change sql query on the fly by adding FINAL to all queries but it is not convenient.\r\n\r\n**Additional context**\r\nENGINE MaterializeMySQL works with FINAL by default and it is expected behavior but ReplacingMergeTree returns old duplicates and it is unexpected. Moreover, I can't even change the behavior to the expected.\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25415/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25415/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25413","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25413/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25413/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25413/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/25413","id":923897653,"node_id":"MDU6SXNzdWU5MjM4OTc2NTM=","number":25413,"title":"RBAC: KILL MUTATION command does not return an error when privilege is missing","user":{"login":"vzakaznikov","id":41681088,"node_id":"MDQ6VXNlcjQxNjgxMDg4","avatar_url":"https://avatars.githubusercontent.com/u/41681088?v=4","gravatar_id":"","url":"https://api.github.com/users/vzakaznikov","html_url":"https://github.com/vzakaznikov","followers_url":"https://api.github.com/users/vzakaznikov/followers","following_url":"https://api.github.com/users/vzakaznikov/following{/other_user}","gists_url":"https://api.github.com/users/vzakaznikov/gists{/gist_id}","starred_url":"https://api.github.com/users/vzakaznikov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vzakaznikov/subscriptions","organizations_url":"https://api.github.com/users/vzakaznikov/orgs","repos_url":"https://api.github.com/users/vzakaznikov/repos","events_url":"https://api.github.com/users/vzakaznikov/events{/privacy}","received_events_url":"https://api.github.com/users/vzakaznikov/received_events","type":"User","site_admin":false},"labels":[{"id":1955634273,"node_id":"MDU6TGFiZWwxOTU1NjM0Mjcz","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/testing","name":"testing","color":"c9a224","default":false,"description":"Special issue with list of bugs found by CI"}],"state":"open","locked":false,"assignee":{"login":"vitlibar","id":45142681,"node_id":"MDQ6VXNlcjQ1MTQyNjgx","avatar_url":"https://avatars.githubusercontent.com/u/45142681?v=4","gravatar_id":"","url":"https://api.github.com/users/vitlibar","html_url":"https://github.com/vitlibar","followers_url":"https://api.github.com/users/vitlibar/followers","following_url":"https://api.github.com/users/vitlibar/following{/other_user}","gists_url":"https://api.github.com/users/vitlibar/gists{/gist_id}","starred_url":"https://api.github.com/users/vitlibar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vitlibar/subscriptions","organizations_url":"https://api.github.com/users/vitlibar/orgs","repos_url":"https://api.github.com/users/vitlibar/repos","events_url":"https://api.github.com/users/vitlibar/events{/privacy}","received_events_url":"https://api.github.com/users/vitlibar/received_events","type":"User","site_admin":false},"assignees":[{"login":"vitlibar","id":45142681,"node_id":"MDQ6VXNlcjQ1MTQyNjgx","avatar_url":"https://avatars.githubusercontent.com/u/45142681?v=4","gravatar_id":"","url":"https://api.github.com/users/vitlibar","html_url":"https://github.com/vitlibar","followers_url":"https://api.github.com/users/vitlibar/followers","following_url":"https://api.github.com/users/vitlibar/following{/other_user}","gists_url":"https://api.github.com/users/vitlibar/gists{/gist_id}","starred_url":"https://api.github.com/users/vitlibar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vitlibar/subscriptions","organizations_url":"https://api.github.com/users/vitlibar/orgs","repos_url":"https://api.github.com/users/vitlibar/repos","events_url":"https://api.github.com/users/vitlibar/events{/privacy}","received_events_url":"https://api.github.com/users/vitlibar/received_events","type":"User","site_admin":false}],"milestone":null,"comments":0,"created_at":"2021-06-17T12:59:33Z","updated_at":"2021-06-20T13:22:58Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"**Describe the bug**\r\n`KILL MUTATION` command does not return an error when privilege is missing.\r\n\r\n**Does it reproduce on recent release?**\r\nReproduces on the latest master.\r\n\r\n**How to reproduce**\r\n\r\n```\r\nJun 16,2021 17:27:05             ⟥  Scenario KILL ALTER UPDATE without privilege\r\nJun 16,2021 17:27:05               ⟥  Given I have merge_tree_KILL_ALTER_UPDATE_without_privilege_98fc0345_cee9_11eb_9922_47521988d2fb with engine MergeTree, flags:MANDATORY\r\nJun 16,2021 17:27:05                 ⟥  Step executing command\r\n                                          echo -e \"DROP TABLE IF EXISTS merge_tree_KILL_ALTER_UPDATE_without_privilege_98fc0345_cee9_11eb_9922_47521988d2fb\" | clickhouse client -n\r\n                 3ms                      [clickhouse1] bash# echo -e \"DROP TABLE IF EXISTS merge_tree_KILL_ALTER_UPDATE_without_privilege_98fc0345_cee9_11eb_9922_47521988d2fb\" | clickhouse client -n\r\n                41ms                      [clickhouse1] bash# echo $?\r\n                41ms                      [clickhouse1] 0\r\n                42ms                      [clickhouse1] bash#\r\n                42ms                 ⟥⟤ OK executing command, /rbac/privileges/kill mutation/privileges granted directly/update/KILL ALTER UPDATE without privilege/I have merge_tree_KILL_ALTER_UPDATE_without_privilege_98fc0345_cee9_11eb_9922_47521988d2fb with engine MergeTree/executing command\r\nJun 16,2021 17:27:05                 ⟥  Then check if output has exception\r\n               244us                 ⟥⟤ OK check if output has exception, /rbac/privileges/kill mutation/privileges granted directly/update/KILL ALTER UPDATE without privilege/I have merge_tree_KILL_ALTER_UPDATE_without_privilege_98fc0345_cee9_11eb_9922_47521988d2fb with engine MergeTree/check if output has exception\r\nJun 16,2021 17:27:05                 ⟥  Step executing command\r\n                                          echo -e \"CREATE TABLE merge_tree_KILL_ALTER_UPDATE_without_privilege_98fc0345_cee9_11eb_9922_47521988d2fb (d DATE, a String, b UInt8, x String, y Int8) ENGINE = MergeTree() PARTITION BY y ORDER BY d\" | clickhouse client -n\r\n                 2ms                      [clickhouse1] bash# echo -e \"CREATE TABLE merge_tree_KILL_ALTER_UPDATE_without_privilege_98fc0345_cee9_11eb_9922_47521988d2fb (d DATE, a String, b UInt8, x String, y Int8) ENGINE = MergeTree() PARTITION BY y ORDER BY d\" | clickhouse client -n\r\n                58ms                      [clickhouse1] bash# echo $?\r\n                58ms                      [clickhouse1] 0\r\n                58ms                      [clickhouse1] bash#\r\n                58ms                 ⟥⟤ OK executing command, /rbac/privileges/kill mutation/privileges granted directly/update/KILL ALTER UPDATE without privilege/I have merge_tree_KILL_ALTER_UPDATE_without_privilege_98fc0345_cee9_11eb_9922_47521988d2fb with engine MergeTree/executing command\r\nJun 16,2021 17:27:05                 ⟥  Then check if output has exception\r\n               335us                 ⟥⟤ OK check if output has exception, /rbac/privileges/kill mutation/privileges granted directly/update/KILL ALTER UPDATE without privilege/I have merge_tree_KILL_ALTER_UPDATE_without_privilege_98fc0345_cee9_11eb_9922_47521988d2fb with engine MergeTree/check if output has exception\r\n               102ms               ⟥⟤ OK I have merge_tree_KILL_ALTER_UPDATE_without_privilege_98fc0345_cee9_11eb_9922_47521988d2fb with engine MergeTree, /rbac/privileges/kill mutation/privileges granted directly/update/KILL ALTER UPDATE without privilege/I have merge_tree_KILL_ALTER_UPDATE_without_privilege_98fc0345_cee9_11eb_9922_47521988d2fb with engine MergeTree\r\nJun 16,2021 17:27:05               ⟥  Given I have an ALTER UPDATE mutation, flags:MANDATORY\r\nJun 16,2021 17:27:05                 ⟥  Step executing command\r\n                                          echo -e \"ALTER TABLE merge_tree_KILL_ALTER_UPDATE_without_privilege_98fc0345_cee9_11eb_9922_47521988d2fb UPDATE a = x WHERE 1\" | clickhouse client -n\r\n                 2ms                      [clickhouse1] bash# echo -e \"ALTER TABLE merge_tree_KILL_ALTER_UPDATE_without_privilege_98fc0345_cee9_11eb_9922_47521988d2fb UPDATE a = x WHERE 1\" | clickhouse client -n\r\n                48ms                      [clickhouse1] bash# echo $?\r\n                49ms                      [clickhouse1] 0\r\n                49ms                      [clickhouse1] bash#\r\n                49ms                 ⟥⟤ OK executing command, /rbac/privileges/kill mutation/privileges granted directly/update/KILL ALTER UPDATE without privilege/I have an ALTER UPDATE mutation/executing command\r\nJun 16,2021 17:27:05                 ⟥  Then check if output has exception\r\n               671us                 ⟥⟤ OK check if output has exception, /rbac/privileges/kill mutation/privileges granted directly/update/KILL ALTER UPDATE without privilege/I have an ALTER UPDATE mutation/check if output has exception\r\n                51ms               ⟥⟤ OK I have an ALTER UPDATE mutation, /rbac/privileges/kill mutation/privileges granted directly/update/KILL ALTER UPDATE without privilege/I have an ALTER UPDATE mutation\r\nJun 16,2021 17:27:05               ⟥  When I grant the user NONE privilege\r\nJun 16,2021 17:27:05                 ⟥  Step executing command\r\n                                          echo -e \"GRANT NONE TO user_privileges_granted_directly_98fc0344_cee9_11eb_9922_47521988d2fb\" | clickhouse client -n\r\n                 3ms                      [clickhouse1] bash# echo -e \"GRANT NONE TO user_privileges_granted_directly_98fc0344_cee9_11eb_9922_47521988d2fb\" | clickhouse client -n\r\n                39ms                      [clickhouse1] bash# echo $?\r\n                39ms                      [clickhouse1] 0\r\n                39ms                      [clickhouse1] bash#\r\n                39ms                 ⟥⟤ OK executing command, /rbac/privileges/kill mutation/privileges granted directly/update/KILL ALTER UPDATE without privilege/I grant the user NONE privilege/executing command\r\nJun 16,2021 17:27:05                 ⟥  Then check if output has exception\r\n                 1ms                 ⟥⟤ OK check if output has exception, /rbac/privileges/kill mutation/privileges granted directly/update/KILL ALTER UPDATE without privilege/I grant the user NONE privilege/check if output has exception\r\n                42ms               ⟥⟤ OK I grant the user NONE privilege, /rbac/privileges/kill mutation/privileges granted directly/update/KILL ALTER UPDATE without privilege/I grant the user NONE privilege\r\nJun 16,2021 17:27:05               ⟥  When I grant the user USAGE privilege\r\nJun 16,2021 17:27:05                 ⟥  Step executing command\r\n                                          echo -e \"GRANT USAGE ON *.* TO user_privileges_granted_directly_98fc0344_cee9_11eb_9922_47521988d2fb\" | clickhouse client -n\r\n                 3ms                      [clickhouse1] bash# echo -e \"GRANT USAGE ON *.* TO user_privileges_granted_directly_98fc0344_cee9_11eb_9922_47521988d2fb\" | clickhouse client -n\r\n                41ms                      [clickhouse1] bash# echo $?\r\n                41ms                      [clickhouse1] 0\r\n                41ms                      [clickhouse1] bash#\r\n                41ms                 ⟥⟤ OK executing command, /rbac/privileges/kill mutation/privileges granted directly/update/KILL ALTER UPDATE without privilege/I grant the user USAGE privilege/executing command\r\nJun 16,2021 17:27:05                 ⟥  Then check if output has exception\r\n               684us                 ⟥⟤ OK check if output has exception, /rbac/privileges/kill mutation/privileges granted directly/update/KILL ALTER UPDATE without privilege/I grant the user USAGE privilege/check if output has exception\r\n                43ms               ⟥⟤ OK I grant the user USAGE privilege, /rbac/privileges/kill mutation/privileges granted directly/update/KILL ALTER UPDATE without privilege/I grant the user USAGE privilege\r\nJun 16,2021 17:27:05               ⟥  Then I try to KILL MUTATION\r\nJun 16,2021 17:27:05                 ⟥  Step executing command\r\n                                          echo -e \"KILL MUTATION WHERE database = 'default' AND table = 'merge_tree_KILL_ALTER_UPDATE_without_privilege_98fc0345_cee9_11eb_9922_47521988d2fb'\" | clickhouse client -n --user \"user_privileges_granted_directly_98fc0344_cee9_11eb_9922_47521988d2fb\"\r\n                 3ms                      [clickhouse1] bash# echo -e \"KILL MUTATION WHERE database = 'default' AND table = 'merge_tree_KILL_ALTER_UPDATE_without_privilege_98fc0345_cee9_11eb_9922_47521988d2fb'\" | clickhouse client -n --user \"user_privileges_granted_directly_98fc0344_cee9_11eb_9922_47521988d2fb\"\r\n                42ms                      [clickhouse1] bash# echo $?\r\n                42ms                      [clickhouse1] 0\r\n                42ms                      [clickhouse1] bash#\r\n                43ms                 ⟥⟤ OK executing command, /rbac/privileges/kill mutation/privileges granted directly/update/KILL ALTER UPDATE without privilege/I try to KILL MUTATION/executing command\r\nJun 16,2021 17:27:05                 ⟥  Then exitcode should be 241\r\n                40ms                 ⟥    Exception: Traceback (most recent call last):\r\n                                              File \"/usr/lib/python3.8/threading.py\", line 890, in _bootstrap\r\n                                                self._bootstrap_inner()\r\n                                              File \"/usr/lib/python3.8/threading.py\", line 932, in _bootstrap_inner\r\n                                                self.run()\r\n                                              File \"/usr/lib/python3.8/threading.py\", line 870, in run\r\n                                                self._target(*self._args, **self._kwargs)\r\n                                              File \"/usr/lib/python3.8/multiprocessing/pool.py\", line 125, in worker\r\n                                                result = (True, func(*args, **kwds))\r\n                                              File \"/home/user/Projects/github/ClickHouse-vzakaznikov/tests/testflows/rbac/../helpers/common.py\", line 103, in _scenario_wrapper\r\n                                                return scenario(**kwargs)\r\n                                              File \"/home/user/Projects/github/ClickHouse-vzakaznikov/tests/testflows/rbac/../rbac/tests/privileges/kill_mutation.py\", line 396, in feature\r\n                                                Suite(run=privileges_granted_directly, setup=instrument_clickhouse_server_log)\r\n                                              File \"/home/user/Projects/github/ClickHouse-vzakaznikov/tests/testflows/rbac/../rbac/tests/privileges/kill_mutation.py\", line 59, in privileges_granted_directly\r\n                                                Suite(test=update)(user_name=user_name, grant_target_name=user_name)\r\n                                              File \"/home/user/Projects/github/ClickHouse-vzakaznikov/tests/testflows/rbac/../rbac/tests/privileges/kill_mutation.py\", line 115, in update\r\n                                                node.query(f\"KILL MUTATION WHERE database = 'default' AND table = '{table_name}'\", settings = [(\"user\", user_name)],\r\n                                              File \"/home/user/Projects/github/ClickHouse-vzakaznikov/tests/testflows/rbac/../helpers/cluster.py\", line 240, in query\r\n                                                assert r.exitcode == exitcode, error(r.output)\r\n                                            AssertionError: Oops! Assertion failed\r\n\r\n                                            The following assertion was not satisfied\r\n                                              assert r.exitcode == exitcode, error(r.output)\r\n\r\n                                            Assertion values\r\n                                              assert r.exitcode == exitcode, error(r.output)\r\n                                                     ^ is <testflows.connect.shell.Command object at 0x7f9a78653730>\r\n                                              assert r.exitcode == exitcode, error(r.output)\r\n                                                     ^ is = 0\r\n                                              assert r.exitcode == exitcode, error(r.output)\r\n                                                                   ^ is 241\r\n                                              assert r.exitcode == exitcode, error(r.output)\r\n                                                                ^ is = False\r\n                                              assert r.exitcode == exitcode, error(r.output)\r\n                                              ^ is False\r\n\r\n                                            Where\r\n                                              File '/home/user/Projects/github/ClickHouse-vzakaznikov/tests/testflows/rbac/../helpers/cluster.py', line 240 in 'query'\r\n\r\n                                            232|                      self.cluster.close_bash(self.name)\r\n                                            233|                      raise\r\n                                            234|  \r\n                                            235|          if no_checks:\r\n                                            236|              return r\r\n                                            237|  \r\n                                            238|          if exitcode is not None:\r\n                                            239|              with Then(f\"exitcode should be {exitcode}\") if steps else NullStep():\r\n                                            240|>                 assert r.exitcode == exitcode, error(r.output)\r\n                                            241|  \r\n                                            242|          if message is not None:\r\n                                            243|              with Then(f\"output should contain message\", description=message) if steps else NullStep():\r\n                40ms                 ⟥⟤ Fail exitcode should be 241, /rbac/privileges/kill mutation/privileges granted directly/update/KILL ALTER UPDATE without privilege/I try to KILL MUTATION/exitcode should be 241, AssertionError\r\n```\r\n\r\nThe following RBAC tests in TestFlows check are now failing:\r\n\r\n```\r\n✘ [ XFail ] /rbac/privileges/kill mutation/privileges granted directly/update/KILL ALTER UPDATE without privilege ᐅ new bug\r\n✘ [ XFail ] /rbac/privileges/kill mutation/privileges granted directly/update/KILL ALTER UPDATE with revoked privilege ᐅ new bug\r\n✘ [ XFail ] /rbac/privileges/kill mutation/privileges granted directly/update/KILL ALTER UPDATE with revoked ALL privilege ᐅ new bug\r\n✘ [ XFail ] /rbac/privileges/kill mutation/privileges granted directly/delete/KILL ALTER DELETE without privilege ᐅ new bug\r\n✘ [ XFail ] /rbac/privileges/kill mutation/privileges granted directly/delete/KILL ALTER DELETE with revoked privilege ᐅ new bug\r\n✘ [ XFail ] /rbac/privileges/kill mutation/privileges granted directly/delete/KILL ALTER DELETE with revoked ALL privilege ᐅ new bug\r\n✘ [ XFail ] /rbac/privileges/kill mutation/privileges granted directly/drop column/KILL ALTER DROP COLUMN without privilege ᐅ new bug\r\n✘ [ XFail ] /rbac/privileges/kill mutation/privileges granted directly/drop column/KILL ALTER DROP COLUMN with revoked privilege ᐅ new bug\r\n✘ [ XFail ] /rbac/privileges/kill mutation/privileges granted directly/drop column/KILL ALTER DROP COLUMN with revoked privilege ᐅ new bug\r\n✘ [ XFail ] /rbac/privileges/kill mutation/privileges granted via role/update/KILL ALTER UPDATE without privilege ᐅ new bug\r\n✘ [ XFail ] /rbac/privileges/kill mutation/privileges granted via role/update/KILL ALTER UPDATE with revoked privilege ᐅ new bug\r\n✘ [ XFail ] /rbac/privileges/kill mutation/privileges granted via role/update/KILL ALTER UPDATE with revoked ALL privilege ᐅ new bug\r\n✘ [ XFail ] /rbac/privileges/kill mutation/privileges granted via role/delete/KILL ALTER DELETE without privilege ᐅ new bug\r\n✘ [ XFail ] /rbac/privileges/kill mutation/privileges granted via role/delete/KILL ALTER DELETE with revoked privilege ᐅ new bug\r\n✘ [ XFail ] /rbac/privileges/kill mutation/privileges granted via role/delete/KILL ALTER DELETE with revoked ALL privilege ᐅ new bug\r\n✘ [ XFail ] /rbac/privileges/kill mutation/privileges granted via role/drop column/KILL ALTER DROP COLUMN without privilege ᐅ new bug\r\n✘ [ XFail ] /rbac/privileges/kill mutation/privileges granted via role/drop column/KILL ALTER DROP COLUMN with revoked privilege ᐅ new bug\r\n✘ [ XFail ] /rbac/privileges/kill mutation/privileges granted via role/drop column/KILL ALTER DROP COLUMN with revoked privilege ᐅ new bug\r\n```\r\n\r\n**Expected behavior**\r\n\r\nCommand should return an error (code 241) when user has no privilege to execute it.\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25413/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25413/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25412","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25412/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25412/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25412/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/25412","id":923895237,"node_id":"MDU6SXNzdWU5MjM4OTUyMzc=","number":25412,"title":"When a small number of hosts down, on cluster ddl will not return timeout exception","user":{"login":"marising","id":8611398,"node_id":"MDQ6VXNlcjg2MTEzOTg=","avatar_url":"https://avatars.githubusercontent.com/u/8611398?v=4","gravatar_id":"","url":"https://api.github.com/users/marising","html_url":"https://github.com/marising","followers_url":"https://api.github.com/users/marising/followers","following_url":"https://api.github.com/users/marising/following{/other_user}","gists_url":"https://api.github.com/users/marising/gists{/gist_id}","starred_url":"https://api.github.com/users/marising/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/marising/subscriptions","organizations_url":"https://api.github.com/users/marising/orgs","repos_url":"https://api.github.com/users/marising/repos","events_url":"https://api.github.com/users/marising/events{/privacy}","received_events_url":"https://api.github.com/users/marising/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2021-06-17T12:57:05Z","updated_at":"2021-07-30T07:01:13Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"**Use case**\r\n#21574\r\n#23062 \r\n\r\nWhen a small number of hosts down, whether it is a permanent or temporary, `ON CLUSTER` DDL will not return timeout exception. \r\n\r\n**Describe the solution you'd like**\r\n1.  When the host starts, run a background thread to periodically check for 60s, and register the current host as the ephemeral node of zooKeeper, the path is is_active.\r\n#26269\r\n\r\n2. `Distributed_ddl_output_mode` is set to `QUORUM`, when `DDLQueryStatusInputStream` is output, all active hosts are executed successfully, there are only inactive nodes in `unfinished_hosts`, and inactive hosts are a minority\r\n2.1.  `unfinished_hosts` are all inactive hosts\r\n2.2. Check each shard : the count of inactive host replicas / the total count of shard replicas <= 1/2\r\n#27004\r\n\r\nSatisfy the above 2.1 and 2.2, will not wait for more than `distributed_ddl_task_timeout`, directly return the information of the number of successful hosts and the number of failed hosts, otherwise it will wait for timeout.\r\n\r\nI plan to implement this feature, can you give me some suggestions? @tavplubix ","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25412/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25412/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25333","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25333/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25333/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25333/events","html_url":"https://github.com/ClickHouse/ClickHouse/pull/25333","id":922583297,"node_id":"MDExOlB1bGxSZXF1ZXN0NjcxNDQwNjAw","number":25333,"title":"add setting exact_rows_before_limit","user":{"login":"MaxWk","id":16871244,"node_id":"MDQ6VXNlcjE2ODcxMjQ0","avatar_url":"https://avatars.githubusercontent.com/u/16871244?v=4","gravatar_id":"","url":"https://api.github.com/users/MaxWk","html_url":"https://github.com/MaxWk","followers_url":"https://api.github.com/users/MaxWk/followers","following_url":"https://api.github.com/users/MaxWk/following{/other_user}","gists_url":"https://api.github.com/users/MaxWk/gists{/gist_id}","starred_url":"https://api.github.com/users/MaxWk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/MaxWk/subscriptions","organizations_url":"https://api.github.com/users/MaxWk/orgs","repos_url":"https://api.github.com/users/MaxWk/repos","events_url":"https://api.github.com/users/MaxWk/events{/privacy}","received_events_url":"https://api.github.com/users/MaxWk/received_events","type":"User","site_admin":false},"labels":[{"id":1309674771,"node_id":"MDU6TGFiZWwxMzA5Njc0Nzcx","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/pr-feature","name":"pr-feature","color":"007700","default":false,"description":"Pull request with new product feature"},{"id":1807683251,"node_id":"MDU6TGFiZWwxODA3NjgzMjUx","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/doc-alert","name":"doc-alert","color":"e51068","default":false,"description":"PR where any documentation work is needed or proceeded"},{"id":3627025164,"node_id":"LA_kwDOA5dJV87YMAMM","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/can%20be%20tested","name":"can be tested","color":"1d76db","default":false,"description":""}],"state":"open","locked":false,"assignee":{"login":"alexey-milovidov","id":18581488,"node_id":"MDQ6VXNlcjE4NTgxNDg4","avatar_url":"https://avatars.githubusercontent.com/u/18581488?v=4","gravatar_id":"","url":"https://api.github.com/users/alexey-milovidov","html_url":"https://github.com/alexey-milovidov","followers_url":"https://api.github.com/users/alexey-milovidov/followers","following_url":"https://api.github.com/users/alexey-milovidov/following{/other_user}","gists_url":"https://api.github.com/users/alexey-milovidov/gists{/gist_id}","starred_url":"https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexey-milovidov/subscriptions","organizations_url":"https://api.github.com/users/alexey-milovidov/orgs","repos_url":"https://api.github.com/users/alexey-milovidov/repos","events_url":"https://api.github.com/users/alexey-milovidov/events{/privacy}","received_events_url":"https://api.github.com/users/alexey-milovidov/received_events","type":"User","site_admin":false},"assignees":[{"login":"alexey-milovidov","id":18581488,"node_id":"MDQ6VXNlcjE4NTgxNDg4","avatar_url":"https://avatars.githubusercontent.com/u/18581488?v=4","gravatar_id":"","url":"https://api.github.com/users/alexey-milovidov","html_url":"https://github.com/alexey-milovidov","followers_url":"https://api.github.com/users/alexey-milovidov/followers","following_url":"https://api.github.com/users/alexey-milovidov/following{/other_user}","gists_url":"https://api.github.com/users/alexey-milovidov/gists{/gist_id}","starred_url":"https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexey-milovidov/subscriptions","organizations_url":"https://api.github.com/users/alexey-milovidov/orgs","repos_url":"https://api.github.com/users/alexey-milovidov/repos","events_url":"https://api.github.com/users/alexey-milovidov/events{/privacy}","received_events_url":"https://api.github.com/users/alexey-milovidov/received_events","type":"User","site_admin":false}],"milestone":null,"comments":9,"created_at":"2021-06-16T13:01:21Z","updated_at":"2022-01-20T23:11:20Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/pulls/25333","html_url":"https://github.com/ClickHouse/ClickHouse/pull/25333","diff_url":"https://github.com/ClickHouse/ClickHouse/pull/25333.diff","patch_url":"https://github.com/ClickHouse/ClickHouse/pull/25333.patch","merged_at":null},"body":"I hereby agree to the terms of the CLA available at: https://yandex.ru/legal/cla/?lang=en\r\n\r\nChangelog category (leave one):\r\n- New Feature\r\n\r\n\r\nChangelog entry (a user-readable short description of the changes that goes to CHANGELOG.md):\r\nAdded a setting `exact_rows_before_limit` (0/1). When enabled, ClickHouse will provide exact value for `rows_before_limit_at_least` statistic, but with the cost that the data before limit will have to be read completely.\r\nThis closes #6613.\r\n\r\nDetailed description / Documentation draft:\r\n\r\nA setting exact_rows_before_limit = 0|1. When enabled, LimitBlockInputStream will always_read_till_end (we already have this feature in code) and the field rows_before_limit_at_least will have precise value.\r\nhttps://github.com/ClickHouse/ClickHouse/issues/6613\r\n\r\nBy adding documentation, you'll allow users to try your new feature immediately, not when someone else will have time to document it later. Documentation is necessary for all features that affect user experience in any way. You can add brief documentation draft above, or add documentation right into your patch as Markdown files in [docs](https://github.com/ClickHouse/ClickHouse/tree/master/docs) folder.\r\n\r\nIf you are doing this for the first time, it's recommended to read the lightweight [Contributing to ClickHouse Documentation](https://github.com/ClickHouse/ClickHouse/tree/master/docs/README.md) guide first.\r\n\r\n\r\nInformation about CI checks: https://clickhouse.tech/docs/en/development/continuous-integration/\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25333/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25333/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25291","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25291/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25291/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25291/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/25291","id":921258430,"node_id":"MDU6SXNzdWU5MjEyNTg0MzA=","number":25291,"title":"[RFC] Materialization improvements","user":{"login":"Algunenano","id":664253,"node_id":"MDQ6VXNlcjY2NDI1Mw==","avatar_url":"https://avatars.githubusercontent.com/u/664253?v=4","gravatar_id":"","url":"https://api.github.com/users/Algunenano","html_url":"https://github.com/Algunenano","followers_url":"https://api.github.com/users/Algunenano/followers","following_url":"https://api.github.com/users/Algunenano/following{/other_user}","gists_url":"https://api.github.com/users/Algunenano/gists{/gist_id}","starred_url":"https://api.github.com/users/Algunenano/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Algunenano/subscriptions","organizations_url":"https://api.github.com/users/Algunenano/orgs","repos_url":"https://api.github.com/users/Algunenano/repos","events_url":"https://api.github.com/users/Algunenano/events{/privacy}","received_events_url":"https://api.github.com/users/Algunenano/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":8,"created_at":"2021-06-15T10:40:51Z","updated_at":"2021-06-28T21:14:22Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"We want to improve status visibility and error handling of materialize views in ClickHouse. For that we have several feature requests / proposals and we wanted to share them with the community before we start any development. \r\n\r\nThis is an early plan subject to change. I would rather have a good solution that fits ClickHouse spirit rathen than the perfect solution for our use cases, so feel free to share any ideas or share any concerns. Thanks a lot in advance. \r\n\r\nThese are the 4 features proposed (detailed bellow):\r\n* A new log for materializations\r\n* Be able to modify (with some contraints) the SQL of a materialized view.\r\n* Optional quarantine partitions for failures during materialization.\r\n* Syntax to replay a quarantined partition.\r\n\r\nMy plan is to start working on those features in order as they are independent (1, 2, then 3 and 4 together).\r\n\r\n## Logging\r\n\r\nWe want to improve the visibility of materializations as there isn't a straightforward way to know how much time is spent in each materialization when inserting data, nor which materializations have been executed and which haven't when a failure happens in one of them (especially if using parallel view processing).\r\n\r\nTo address this we want to add a new system log (system.query_materialization_log) with the result of each materialization. A single query could potentially insert [0..N] rows in this table.\r\n\r\n### Settings\r\n\r\nSetting: `log_materialization`. When enabled adds the result of materialized views into the `system.query_materialization_log` log. You can change the name of the table in the table parameter (see below).\r\n\r\nUse the following parameters to configure logging (same as query_thread_log):\r\n\r\n`database` – Name of the database.\r\n`table` – Name of the system table the queries will be logged in.\r\n`partition_by` — Custom partitioning key for a system table. Can't be used if engine defined.\r\n`engine` - MergeTree Engine Definition for a system table. Can't be used if partition_by defined.\r\n`flush_interval_milliseconds` – Interval for flushing data from the buffer in memory to the table.\r\n`log_level` - The minimum status to log\r\n\r\nIf the table does not exist, ClickHouse will create it. If the structure of the query materialization log changed when the ClickHouse server was updated, the table with the old structure is renamed and a new table is created automatically.\r\n\r\nExample\r\n```\r\n<query_materialization_log>\r\n    <database>system</database>\r\n    <table>query_materialization_log</table>\r\n    <partition_by>toMonday(event_date)</partition_by>\r\n    <flush_interval_milliseconds>7500</flush_interval_milliseconds>\r\n</query_materialization_log>\r\n```\r\n\r\n### Fields\r\n\r\nThe materialization log table would contain the following fields:\r\n\r\nDuration fields:\r\n\r\n* event_date:           2021-04-08\r\n* event_time:           2021-04-08 13:14:12\r\n* materialization_start_time:     2021-04-08 13:14:12\r\n* materialization_duration_ms: 981\r\n\r\nQuery identification:\r\n\r\n* user:                 default\r\n* query_id:             9458bbe0-a4dd-45fd-93fe-5968916f8ef4\r\n* materialization_name: matview_a\r\n* materialization_uuid: 00000000-0000-0000-0000-000000000000\r\n* materialization_query: ATTACH MATERIALIZED VIEW matview_a TO default.table_b (`key` Float64,`count` Int64) AS SELECT toFloat64(a) AS key, b AS count FROM default.table_a\r\n\r\nRuntime data (information that affects only by this materialization, not the whole query):\r\n\r\n* read_rows:            0\r\n* read_bytes:           0\r\n* written_rows:         4\r\n* written_bytes:        72\r\n* memory_usage:         4201086\r\n* ProfileEvents.Names:  ['Query','IOBufferAllocs','IOBufferAllocBytes','ContextLock','RWLockAcquiredReadLocks','RealTimeMicroseconds','UserTimeMicroseconds','SystemTimeMicroseconds','SoftPageFaults','HardPageFaults','OSIOWaitMicroseconds','OSCPUVirtualTimeMicroseconds','OSReadBytes','OSWriteBytes','OSWriteChars']\r\n* ProfileEvents.Values: [1,3,2101293,18,1,981473,17385,11996,530,16,952011,29381,15065088,4096,2048]\r\n\r\nStatus:\r\n\r\n* status: MaterializationFinished, MaterializationError, MaterializationCancelled\r\n  * MaterializationFinished: The materialization finished correctly. Data was written into the target table.\r\n  * MaterializationError: There was an error when running this materialization. Data wasn't written into the target table.\r\n  * MaterializationCancelled: The materialization was cancelled and wasn't executed (for example if a previous materialization with the same source table failed). Data wasn't written into the target table.\r\n* exception_code: Error core\r\n* exception: Error message\r\n* stack_trace: Error stack trace\r\n* quarantine_part: If quarantined (See other proposals), the name of the part\r\n\r\n\r\n## ALTER MATERIALIZE VIEW\r\n\r\nA large number of errors that happen in materialized views are due to corner cases in the input, things such as not handling NULL values, invalid JSON inputs (that could be avoid with isValidJSON) or failed casts (toInt32 vs COALESCE(toInt32OrNull(value), -1)).\r\n\r\nThe problem we have is that currently to fix the materialize view you need to drop it and create it. This has 2 possibilities:\r\n* If the view dumps into a different table (`[TO[db.]name]`) then you can do it without losing data, but there is an interval of time during which the view doesn't exist and an insert won't be materialized.\r\n* If the view stores the data into an inner table, then you have the same issue as above (interval without materialization) but you will also lose any data that was already generated.\r\n\r\n### SYNTAX\r\n\r\nThe proposal is to be able to modify the SQL of MATERIALIZE VIEWS:\r\n\r\n```\r\nALTER TABLE [db].name [ON CLUSTER cluster] QUERY AS SELECT ...\r\n```\r\n\r\nThis would allow transforming only the view query as long as it keeps the same structure, for example replacing\r\n\r\n```\r\nSELECT toInt32(JSONExtractRaw(record,'size')) as size FROM default.landing\r\n```\r\n\r\nwith\r\n```\r\nSELECT coalesce(toInt32OrNull(JSONExtractRaw(record,'size')), -1) as size FROM default.landing\r\n```\r\n\r\nIt would throw an error if the table isn't a materialized view or if you try changing either source or target tables or columns.\r\n\r\n\r\n## QUARANTINE ON ERROR\r\n\r\nWhen an insertion on a materialized view fails there might not be an easy way to recover the lost data, as the block that failed might not be identifiable in the source table, or it might have a small TTL or ENGINE = NULL.\r\n\r\nRelated to this, if the data has already been inserted in other materialized views dependendent on the same source table, retrying the insertion in the landing table will duplicate data there. You can only improve this with good design (batch id, deduplication... and praying).\r\n\r\nTo improve the situation we want to propose a new keyword set at materialization view creation (`QUARANTINE`) which changes its behaviour on error. Instead of throwing an exception the error will be logged (in the query_materialization_log), the blocks will be saved a quarantined part and the process will continue normally (other views on the same source table would be executed).\r\n\r\nErrors also include timeouts during view execution and cancellations where the source table has already written it's data.\r\n\r\nNote that in order for this to be effective and be reused later `log_materialization` should be enabled and logging >= ERROR.\r\n\r\n\r\n### SYNTAX\r\n\r\nDuring creation:\r\n```sql\r\nCREATE MATERIALIZED VIEW [IF NOT EXISTS] [db.]matview_name [ON CLUSTER] [TO[db.]name] [ENGINE = engine] [POPULATE] [QUARANTINE] AS SELECT ...\r\n```\r\n\r\nAlternatively, we could add a way to enable or disable it after creation:\r\n```sql\r\nALTER TABLE [db].name [ON CLUSTER cluster] MODIFY QUARANTINE [TRUE|FALSE]\r\n```\r\n\r\n### QUARANTINE PARTS\r\n\r\nWhen an error happens in a materialization view with `QUARANTINE`, the log_materialization will include the error and the name of a quarantine part that includes the input of the original query.\r\n\r\nQuarantined parts are stored under the **target_table** path:\r\n\r\n```\r\n$(CH_PATH)/data/$(DATABASE)/$(TARGET_TABLE)/quarantine_$(MATVIEW)_${id}\r\n```\r\n\r\nThese parts:\r\n\r\n* Aren't replicated\r\n* Are removed automatically if applied successfully (see REPLAY)\r\n* Are removed automatically if the matview is deleted (both for inner and external tables)\r\n* Are removed automatically if the quarantine is disabled for the view\r\n* Can't be attached/detached since they have a different structure.\r\n* Should contain any necessary information to re-read them and reprocess them again (see REPLAY).\r\n\r\n## QUARANTINE REPLAY\r\n\r\nTo make it easier to reproduce an issue or relaunch the process once the view has been altered to accept the input, we propose to have a new `ALTER` query that allows you to replay a quarantined part. This query would read the quarantine part (partition_expr), the **current definition** of the materialization view and process it again doing an insert over the target table.\r\n\r\nIf applied correctly, this will automatically delete the quarantine part.\r\n\r\n### SYNTAX\r\n\r\n```sql\r\nALTER TABLE [db.]matview_name REPLAY PARTITION partition_expr;\r\n```\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25291/reactions","total_count":8,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":8,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25291/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25289","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25289/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25289/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25289/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/25289","id":921172749,"node_id":"MDU6SXNzdWU5MjExNzI3NDk=","number":25289,"title":"It should be  possible to list and describe views","user":{"login":"mprowaznik","id":2332475,"node_id":"MDQ6VXNlcjIzMzI0NzU=","avatar_url":"https://avatars.githubusercontent.com/u/2332475?v=4","gravatar_id":"","url":"https://api.github.com/users/mprowaznik","html_url":"https://github.com/mprowaznik","followers_url":"https://api.github.com/users/mprowaznik/followers","following_url":"https://api.github.com/users/mprowaznik/following{/other_user}","gists_url":"https://api.github.com/users/mprowaznik/gists{/gist_id}","starred_url":"https://api.github.com/users/mprowaznik/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mprowaznik/subscriptions","organizations_url":"https://api.github.com/users/mprowaznik/orgs","repos_url":"https://api.github.com/users/mprowaznik/repos","events_url":"https://api.github.com/users/mprowaznik/events{/privacy}","received_events_url":"https://api.github.com/users/mprowaznik/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":1365579236,"node_id":"MDU6TGFiZWwxMzY1NTc5MjM2","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/minor","name":"minor","color":"FFF8F8","default":false,"description":"Priority: minor"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2021-06-15T09:02:10Z","updated_at":"2021-06-15T13:29:58Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Clickhouse does not handle  queries like:\r\n```\r\nSHOW VIEWS in some_database\r\n```\r\nnor\r\n```\r\nDESCRIBE VIEW some_database.some_view\r\n```\r\n\r\nI can list tables in a database, but I cannot list views.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25289/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25289/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25284","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25284/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25284/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25284/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/25284","id":920960942,"node_id":"MDU6SXNzdWU5MjA5NjA5NDI=","number":25284,"title":"toStartOf...  functions do not work with datetime64 extended range","user":{"login":"Misaka10091","id":27477663,"node_id":"MDQ6VXNlcjI3NDc3NjYz","avatar_url":"https://avatars.githubusercontent.com/u/27477663?v=4","gravatar_id":"","url":"https://api.github.com/users/Misaka10091","html_url":"https://github.com/Misaka10091","followers_url":"https://api.github.com/users/Misaka10091/followers","following_url":"https://api.github.com/users/Misaka10091/following{/other_user}","gists_url":"https://api.github.com/users/Misaka10091/gists{/gist_id}","starred_url":"https://api.github.com/users/Misaka10091/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Misaka10091/subscriptions","organizations_url":"https://api.github.com/users/Misaka10091/orgs","repos_url":"https://api.github.com/users/Misaka10091/repos","events_url":"https://api.github.com/users/Misaka10091/events{/privacy}","received_events_url":"https://api.github.com/users/Misaka10091/received_events","type":"User","site_admin":false},"labels":[{"id":1481221764,"node_id":"MDU6TGFiZWwxNDgxMjIxNzY0","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-datetime","name":"comp-datetime","color":"b5bcff","default":false,"description":"date & time & timezone related"},{"id":1575085465,"node_id":"MDU6TGFiZWwxNTc1MDg1NDY1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/unexpected%20behaviour","name":"unexpected behaviour","color":"e088ca","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2021-06-15T04:01:07Z","updated_at":"2022-01-07T03:47:21Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"**How to reproduce**\r\n* ClickHouse server: 21.4.7.3\r\n* Queries\r\n    ```clickhouse\r\n    WITH toDateTime64('1940-01-01 01:00:00', 0) AS dt64\r\n    SELECT dt64,toStartOfDay(dt64)\r\n    ```\r\n* Results\r\n  ```text\r\n  ┌────────────────dt64─┬──toStartOfDay(dt64)─┐\r\n  │ 1940-01-01 01:00:00 │ 2076-02-06 06:28:16 │\r\n  └─────────────────────┴─────────────────────┘\r\n  ```\r\n**Expected behavior**\r\nreturn date `1940-01-01 00:00:00` instead of `2076-02-06 06:28:16`\r\n\r\n**Additional context**\r\nmost date functions return unexpected value\r\nthis seems to overflowed by date before 1970\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25284/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25284/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25282","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25282/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25282/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25282/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/25282","id":920931780,"node_id":"MDU6SXNzdWU5MjA5MzE3ODA=","number":25282,"title":"S3 table function path matching: single value in curly brackets does not work","user":{"login":"ray-at-github","id":84699139,"node_id":"MDQ6VXNlcjg0Njk5MTM5","avatar_url":"https://avatars.githubusercontent.com/u/84699139?v=4","gravatar_id":"","url":"https://api.github.com/users/ray-at-github","html_url":"https://github.com/ray-at-github","followers_url":"https://api.github.com/users/ray-at-github/followers","following_url":"https://api.github.com/users/ray-at-github/following{/other_user}","gists_url":"https://api.github.com/users/ray-at-github/gists{/gist_id}","starred_url":"https://api.github.com/users/ray-at-github/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ray-at-github/subscriptions","organizations_url":"https://api.github.com/users/ray-at-github/orgs","repos_url":"https://api.github.com/users/ray-at-github/repos","events_url":"https://api.github.com/users/ray-at-github/events{/privacy}","received_events_url":"https://api.github.com/users/ray-at-github/received_events","type":"User","site_admin":false},"labels":[{"id":845247686,"node_id":"MDU6TGFiZWw4NDUyNDc2ODY=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/usability","name":"usability","color":"ebf28c","default":false,"description":""}],"state":"open","locked":false,"assignee":{"login":"nikitamikhaylov","id":25705399,"node_id":"MDQ6VXNlcjI1NzA1Mzk5","avatar_url":"https://avatars.githubusercontent.com/u/25705399?v=4","gravatar_id":"","url":"https://api.github.com/users/nikitamikhaylov","html_url":"https://github.com/nikitamikhaylov","followers_url":"https://api.github.com/users/nikitamikhaylov/followers","following_url":"https://api.github.com/users/nikitamikhaylov/following{/other_user}","gists_url":"https://api.github.com/users/nikitamikhaylov/gists{/gist_id}","starred_url":"https://api.github.com/users/nikitamikhaylov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nikitamikhaylov/subscriptions","organizations_url":"https://api.github.com/users/nikitamikhaylov/orgs","repos_url":"https://api.github.com/users/nikitamikhaylov/repos","events_url":"https://api.github.com/users/nikitamikhaylov/events{/privacy}","received_events_url":"https://api.github.com/users/nikitamikhaylov/received_events","type":"User","site_admin":false},"assignees":[{"login":"nikitamikhaylov","id":25705399,"node_id":"MDQ6VXNlcjI1NzA1Mzk5","avatar_url":"https://avatars.githubusercontent.com/u/25705399?v=4","gravatar_id":"","url":"https://api.github.com/users/nikitamikhaylov","html_url":"https://github.com/nikitamikhaylov","followers_url":"https://api.github.com/users/nikitamikhaylov/followers","following_url":"https://api.github.com/users/nikitamikhaylov/following{/other_user}","gists_url":"https://api.github.com/users/nikitamikhaylov/gists{/gist_id}","starred_url":"https://api.github.com/users/nikitamikhaylov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nikitamikhaylov/subscriptions","organizations_url":"https://api.github.com/users/nikitamikhaylov/orgs","repos_url":"https://api.github.com/users/nikitamikhaylov/repos","events_url":"https://api.github.com/users/nikitamikhaylov/events{/privacy}","received_events_url":"https://api.github.com/users/nikitamikhaylov/received_events","type":"User","site_admin":false}],"milestone":null,"comments":0,"created_at":"2021-06-15T02:43:43Z","updated_at":"2021-06-16T20:31:46Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"**Describe the issue**\r\nS3 table function path matching with curly brackets {}, when there are multiple values it works like a charm. However it returns no rows when there is only 1 value within the curly brackets. It would be ideal if it also supports a single value (or even an empty list), because sometimes the list of values is constructed from an array programmatically.\r\n\r\n**How to reproduce**\r\n21.6.4.26\r\n\r\nMultiple values works:\r\n```\r\nSELECT count(*)\r\nFROM s3('https://storage.yandexcloud.net/my-test-bucket-768/{some,another}_prefix/some_file_1.csv', 'CSV', 'name String, value UInt32')\r\n\r\nQuery id: 8363ef9d-c6af-4036-9f63-2da969df5732\r\n\r\n┌─count()─┐\r\n│       6 │\r\n└─────────┘\r\n\r\n1 rows in set. Elapsed: 2.632 sec.\r\n```\r\n\r\nSingle value doesn't:\r\n```\r\nSELECT count(*)\r\nFROM s3('https://storage.yandexcloud.net/my-test-bucket-768/{some}_prefix/some_file_1.csv', 'CSV', 'name String, value UInt32')\r\n\r\nQuery id: 79ec92e1-a13e-4164-a999-08334c40a3fe\r\n\r\n┌─count()─┐\r\n│       0 │\r\n└─────────┘\r\n\r\n1 rows in set. Elapsed: 1.353 sec.\r\n```\r\n\r\n**Expected behavior**\r\nIdeally it also supports single value","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25282/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25282/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25273","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25273/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25273/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25273/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/25273","id":920756182,"node_id":"MDU6SXNzdWU5MjA3NTYxODI=","number":25273,"title":"DDL locks are possible and should be resolved or documented as normal behavior","user":{"login":"den-crane","id":19737682,"node_id":"MDQ6VXNlcjE5NzM3Njgy","avatar_url":"https://avatars.githubusercontent.com/u/19737682?v=4","gravatar_id":"","url":"https://api.github.com/users/den-crane","html_url":"https://github.com/den-crane","followers_url":"https://api.github.com/users/den-crane/followers","following_url":"https://api.github.com/users/den-crane/following{/other_user}","gists_url":"https://api.github.com/users/den-crane/gists{/gist_id}","starred_url":"https://api.github.com/users/den-crane/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/den-crane/subscriptions","organizations_url":"https://api.github.com/users/den-crane/orgs","repos_url":"https://api.github.com/users/den-crane/repos","events_url":"https://api.github.com/users/den-crane/events{/privacy}","received_events_url":"https://api.github.com/users/den-crane/received_events","type":"User","site_admin":false},"labels":[{"id":1575085465,"node_id":"MDU6TGFiZWwxNTc1MDg1NDY1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/unexpected%20behaviour","name":"unexpected behaviour","color":"e088ca","default":false,"description":""}],"state":"open","locked":false,"assignee":{"login":"den-crane","id":19737682,"node_id":"MDQ6VXNlcjE5NzM3Njgy","avatar_url":"https://avatars.githubusercontent.com/u/19737682?v=4","gravatar_id":"","url":"https://api.github.com/users/den-crane","html_url":"https://github.com/den-crane","followers_url":"https://api.github.com/users/den-crane/followers","following_url":"https://api.github.com/users/den-crane/following{/other_user}","gists_url":"https://api.github.com/users/den-crane/gists{/gist_id}","starred_url":"https://api.github.com/users/den-crane/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/den-crane/subscriptions","organizations_url":"https://api.github.com/users/den-crane/orgs","repos_url":"https://api.github.com/users/den-crane/repos","events_url":"https://api.github.com/users/den-crane/events{/privacy}","received_events_url":"https://api.github.com/users/den-crane/received_events","type":"User","site_admin":false},"assignees":[{"login":"den-crane","id":19737682,"node_id":"MDQ6VXNlcjE5NzM3Njgy","avatar_url":"https://avatars.githubusercontent.com/u/19737682?v=4","gravatar_id":"","url":"https://api.github.com/users/den-crane","html_url":"https://github.com/den-crane","followers_url":"https://api.github.com/users/den-crane/followers","following_url":"https://api.github.com/users/den-crane/following{/other_user}","gists_url":"https://api.github.com/users/den-crane/gists{/gist_id}","starred_url":"https://api.github.com/users/den-crane/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/den-crane/subscriptions","organizations_url":"https://api.github.com/users/den-crane/orgs","repos_url":"https://api.github.com/users/den-crane/repos","events_url":"https://api.github.com/users/den-crane/events{/privacy}","received_events_url":"https://api.github.com/users/den-crane/received_events","type":"User","site_admin":false}],"milestone":null,"comments":1,"created_at":"2021-06-14T20:40:07Z","updated_at":"2021-06-17T12:15:34Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"body":"```\r\ncreate table xx ( A DateTime, B Float64, C UInt8, D UInt8) Engine=MergeTree order by A;\r\ninsert into xx select now(), 1/(number+1), 1, 1 from numbers(1000000000)　;\r\nalter table xx modify column B Float64 CODEC(DoubleDelta, ZSTD(22));\r\n```\r\nsession 1 | session 2 | session 3\r\n----------|----------|----------\r\noptimize table xx final; | alter table xx drop column C; | alter table xx drop column D;\r\n0 rows in set. Elapsed: 280.654 sec. | 0 rows in set. Elapsed: 277.577 sec. | 0 rows in set. Elapsed: 120.001 sec. Received exception from server (version 21.7.1): Code: 473. DB::Exception: Received from localhost:9000. DB::Exception: WRITE locking attempt on \"dw.xx\" has timed out! (120000ms) Possible deadlock avoided. Client should retry..\r\n\r\n_Originally posted by @den-crane in https://github.com/ClickHouse/ClickHouse/issues/10892#issuecomment-860868447_","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25273/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25273/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25272","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25272/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25272/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25272/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/25272","id":920640810,"node_id":"MDU6SXNzdWU5MjA2NDA4MTA=","number":25272,"title":"Make `if` with constant branches to return LowCardinality.","user":{"login":"alexey-milovidov","id":18581488,"node_id":"MDQ6VXNlcjE4NTgxNDg4","avatar_url":"https://avatars.githubusercontent.com/u/18581488?v=4","gravatar_id":"","url":"https://api.github.com/users/alexey-milovidov","html_url":"https://github.com/alexey-milovidov","followers_url":"https://api.github.com/users/alexey-milovidov/followers","following_url":"https://api.github.com/users/alexey-milovidov/following{/other_user}","gists_url":"https://api.github.com/users/alexey-milovidov/gists{/gist_id}","starred_url":"https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexey-milovidov/subscriptions","organizations_url":"https://api.github.com/users/alexey-milovidov/orgs","repos_url":"https://api.github.com/users/alexey-milovidov/repos","events_url":"https://api.github.com/users/alexey-milovidov/events{/privacy}","received_events_url":"https://api.github.com/users/alexey-milovidov/received_events","type":"User","site_admin":false},"labels":[{"id":756395244,"node_id":"MDU6TGFiZWw3NTYzOTUyNDQ=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/performance","name":"performance","color":"c2e0c6","default":false,"description":null},{"id":3086255531,"node_id":"MDU6TGFiZWwzMDg2MjU1NTMx","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/warmup%20task","name":"warmup task","color":"FBCA04","default":false,"description":"The task for new ClickHouse team members. Low risk, moderate complexity, no urgency."}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2021-06-14T17:49:21Z","updated_at":"2021-06-14T19:12:39Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"**Describe the situation**\r\n\r\n`if(cond, 'hello', 'world')`\r\nShould return `LowCardinality(String)` instead of `String`.\r\nIt will be better for performance.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25272/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25272/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25271","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25271/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25271/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25271/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/25271","id":920634017,"node_id":"MDU6SXNzdWU5MjA2MzQwMTc=","number":25271,"title":"Support for non-constant regular expressions and LIKE conditions.","user":{"login":"alexey-milovidov","id":18581488,"node_id":"MDQ6VXNlcjE4NTgxNDg4","avatar_url":"https://avatars.githubusercontent.com/u/18581488?v=4","gravatar_id":"","url":"https://api.github.com/users/alexey-milovidov","html_url":"https://github.com/alexey-milovidov","followers_url":"https://api.github.com/users/alexey-milovidov/followers","following_url":"https://api.github.com/users/alexey-milovidov/following{/other_user}","gists_url":"https://api.github.com/users/alexey-milovidov/gists{/gist_id}","starred_url":"https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexey-milovidov/subscriptions","organizations_url":"https://api.github.com/users/alexey-milovidov/orgs","repos_url":"https://api.github.com/users/alexey-milovidov/repos","events_url":"https://api.github.com/users/alexey-milovidov/events{/privacy}","received_events_url":"https://api.github.com/users/alexey-milovidov/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":1365579236,"node_id":"MDU6TGFiZWwxMzY1NTc5MjM2","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/minor","name":"minor","color":"FFF8F8","default":false,"description":"Priority: minor"},{"id":3086255531,"node_id":"MDU6TGFiZWwzMDg2MjU1NTMx","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/warmup%20task","name":"warmup task","color":"FBCA04","default":false,"description":"The task for new ClickHouse team members. Low risk, moderate complexity, no urgency."}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-06-14T17:39:39Z","updated_at":"2021-06-28T21:16:56Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"**Use case**\r\n```\r\nSELECT count()\r\nFROM test.hits\r\nWHERE URL LIKE concat('%', Referer, '%')\r\n\r\n0 rows in set. Elapsed: 0.042 sec. \r\n\r\nReceived exception from server (version 21.7.1):\r\nCode: 44. DB::Exception: Received from localhost:9000. DB::Exception: Argument at index 1 for function like must be constant: while executing 'FUNCTION like(URL : 0, concat('%', Referer, '%') : 3) -> like(URL, concat('%', Referer, '%')) UInt8 : 4'.\r\n```\r\n\r\n**Describe the solution you'd like**\r\nConstruct them dynamically.\r\n\r\n**Additional context**\r\nThe cache for regular expressions is unlimited in memory.\r\nNow we have to make it limited somehow.\r\n\r\nThe most simple solution is to simply drop the cache when its size is at some threshold (e.g. 10 000 items).\r\n(or just reuse LRUCache)","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25271/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25271/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25225","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25225/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25225/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25225/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/25225","id":919210773,"node_id":"MDU6SXNzdWU5MTkyMTA3NzM=","number":25225,"title":"Infinite recursion in `StorageMerge::getVirtuals`","user":{"login":"tavplubix","id":14847450,"node_id":"MDQ6VXNlcjE0ODQ3NDUw","avatar_url":"https://avatars.githubusercontent.com/u/14847450?v=4","gravatar_id":"","url":"https://api.github.com/users/tavplubix","html_url":"https://github.com/tavplubix","followers_url":"https://api.github.com/users/tavplubix/followers","following_url":"https://api.github.com/users/tavplubix/following{/other_user}","gists_url":"https://api.github.com/users/tavplubix/gists{/gist_id}","starred_url":"https://api.github.com/users/tavplubix/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tavplubix/subscriptions","organizations_url":"https://api.github.com/users/tavplubix/orgs","repos_url":"https://api.github.com/users/tavplubix/repos","events_url":"https://api.github.com/users/tavplubix/events{/privacy}","received_events_url":"https://api.github.com/users/tavplubix/received_events","type":"User","site_admin":false},"labels":[{"id":1955634273,"node_id":"MDU6TGFiZWwxOTU1NjM0Mjcz","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/testing","name":"testing","color":"c9a224","default":false,"description":"Special issue with list of bugs found by CI"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2021-06-11T21:02:30Z","updated_at":"2021-09-22T14:27:24Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"\r\nhttps://clickhouse-test-reports.s3.yandex.net/25200/c3aec8ae5735fd3cb8044e3758ba41018d4d2582/stress_test_(thread).html#fail1","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25225/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25225/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25223","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25223/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25223/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25223/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/25223","id":918992537,"node_id":"MDU6SXNzdWU5MTg5OTI1Mzc=","number":25223,"title":"ALTER TABLE ATTACH ALL PARTITIONS FROM ","user":{"login":"filimonov","id":1549571,"node_id":"MDQ6VXNlcjE1NDk1NzE=","avatar_url":"https://avatars.githubusercontent.com/u/1549571?v=4","gravatar_id":"","url":"https://api.github.com/users/filimonov","html_url":"https://github.com/filimonov","followers_url":"https://api.github.com/users/filimonov/followers","following_url":"https://api.github.com/users/filimonov/following{/other_user}","gists_url":"https://api.github.com/users/filimonov/gists{/gist_id}","starred_url":"https://api.github.com/users/filimonov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/filimonov/subscriptions","organizations_url":"https://api.github.com/users/filimonov/orgs","repos_url":"https://api.github.com/users/filimonov/repos","events_url":"https://api.github.com/users/filimonov/events{/privacy}","received_events_url":"https://api.github.com/users/filimonov/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":1365579236,"node_id":"MDU6TGFiZWwxMzY1NTc5MjM2","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/minor","name":"minor","color":"FFF8F8","default":false,"description":"Priority: minor"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-06-11T17:05:09Z","updated_at":"2021-06-11T20:00:51Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"body":"There are use cases when you need to copy the whole table by attaching all partitions from the other table. \r\n\r\nNow it requires running a sequence of commands like this:\r\n```\r\ncreate table foo Engine=ReplicatedMergeTree('/clickhouse/{cluster}/tables/{shard}/default/ontime_ref2', '{replica}')  PARTITION BY Year ORDER BY (Carrier, FlightDate) AS default.ontime_ref;\r\n\r\n...\r\nALTER TABLE foo ATTACH PARTITION ID '2015' FROM default.ontime_ref;\r\nALTER TABLE foo ATTACH PARTITION ID '2016' FROM default.ontime_ref;\r\nALTER TABLE foo ATTACH PARTITION ID '2017' FROM default.ontime_ref;\r\nALTER TABLE foo ATTACH PARTITION ID '2018' FROM default.ontime_ref;\r\nALTER TABLE foo ATTACH PARTITION ID '2019' FROM default.ontime_ref;\r\nALTER TABLE foo ATTACH PARTITION ID '2020' FROM default.ontime_ref;\r\n```\r\nIt would be much simple if we would need to do that iteration over partitions manually.\r\n\r\nProposed syntax is\r\n```\r\nALTER TABLE foo ATTACH ALL PARTITIONS FROM bar;\r\n```\r\n\r\nAlternatively we can consider some other syntax like `COPY TABLE`\r\n\r\n\r\nP.S. W/o - those commands can be generated, but it's still silly. \r\n```\r\nSELECT DISTINCT concat('ALTER TABLE foo ATTACH PARTITION ID \\'', partition_id, '\\' FROM default.ontime_ref;')\r\nFROM system.parts\r\nWHERE table = 'ontime_ref'\r\nFORMAT TSVRaw\r\n```\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25223/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25223/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25220","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25220/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25220/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25220/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/25220","id":918886669,"node_id":"MDU6SXNzdWU5MTg4ODY2Njk=","number":25220,"title":"Ability to change own password","user":{"login":"den-crane","id":19737682,"node_id":"MDQ6VXNlcjE5NzM3Njgy","avatar_url":"https://avatars.githubusercontent.com/u/19737682?v=4","gravatar_id":"","url":"https://api.github.com/users/den-crane","html_url":"https://github.com/den-crane","followers_url":"https://api.github.com/users/den-crane/followers","following_url":"https://api.github.com/users/den-crane/following{/other_user}","gists_url":"https://api.github.com/users/den-crane/gists{/gist_id}","starred_url":"https://api.github.com/users/den-crane/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/den-crane/subscriptions","organizations_url":"https://api.github.com/users/den-crane/orgs","repos_url":"https://api.github.com/users/den-crane/repos","events_url":"https://api.github.com/users/den-crane/events{/privacy}","received_events_url":"https://api.github.com/users/den-crane/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":1365579236,"node_id":"MDU6TGFiZWwxMzY1NTc5MjM2","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/minor","name":"minor","color":"FFF8F8","default":false,"description":"Priority: minor"},{"id":2011606513,"node_id":"MDU6TGFiZWwyMDExNjA2NTEz","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-rbac","name":"comp-rbac","color":"b5bcff","default":false,"description":"Access control related"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2021-06-11T15:23:43Z","updated_at":"2021-06-11T19:59:04Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"body":"Any syntax is OK.\r\n\r\n```sql\r\nSET PASSWORD = PASSWORD('123');\r\n\r\nALTER USER ... IDENTIFIED BY '123';\r\n\r\n```","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25220/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25220/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25215","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25215/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25215/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25215/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/25215","id":918808795,"node_id":"MDU6SXNzdWU5MTg4MDg3OTU=","number":25215,"title":"ReplacingMergeTree and Distributed ","user":{"login":"andrelec1","id":3273204,"node_id":"MDQ6VXNlcjMyNzMyMDQ=","avatar_url":"https://avatars.githubusercontent.com/u/3273204?v=4","gravatar_id":"","url":"https://api.github.com/users/andrelec1","html_url":"https://github.com/andrelec1","followers_url":"https://api.github.com/users/andrelec1/followers","following_url":"https://api.github.com/users/andrelec1/following{/other_user}","gists_url":"https://api.github.com/users/andrelec1/gists{/gist_id}","starred_url":"https://api.github.com/users/andrelec1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andrelec1/subscriptions","organizations_url":"https://api.github.com/users/andrelec1/orgs","repos_url":"https://api.github.com/users/andrelec1/repos","events_url":"https://api.github.com/users/andrelec1/events{/privacy}","received_events_url":"https://api.github.com/users/andrelec1/received_events","type":"User","site_admin":false},"labels":[{"id":386401510,"node_id":"MDU6TGFiZWwzODY0MDE1MTA=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/question","name":"question","color":"bfdadc","default":true,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2021-06-11T14:16:14Z","updated_at":"2021-06-15T14:48:14Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"I have to store a lage amount a of data that i  can simply define by 3 property :\r\n  DateTime, Probe_ID ( integer for a foreignkey), Value ( float )\r\n\r\nThis dataset is feed by some micro services ...\r\nAnd i have a api that performe some SELECT to it ... \r\n\r\nSo i try to setup a little cluster for that ...\r\nAt this point i have ( little poc with docker ): \r\n\r\n3 zookeeper\r\n1 clickhouse master\r\n4 clickhouse slave\r\nhttps://github.com/andrelec1/PocClickhouse/blob/main/Untitled%20Diagram.png\r\n\r\nall clikhouse share same config :\r\nhttps://github.com/andrelec1/PocClickhouse/blob/main/clickhouse-config/config.d/cluster.xml\r\n\r\n( docker compose : https://github.com/andrelec1/PocClickhouse/blob/main/docker-compose.yaml  ) \r\n\r\nSo for the data i create on all slave a table like this: \r\n\r\n```sql\r\nCREATE TABLE default.rawData\r\n(\r\n    EventDateTime  DateTime default now(),\r\n    insert         String,\r\n    uuid           String default generateUUIDv4(),\r\n    datetime_value DateTime,\r\n    probe_id       Int32,\r\n    value          Float64\r\n)\r\nENGINE = ReplacingMergeTree()\r\n        PARTITION BY (probe_id)\r\n        ORDER BY (datetime_value, probe_id)\r\n        PRIMARY KEY (datetime_value, probe_id);\r\n```\r\nand on my master clickhouse i create this :\r\n```sql\r\nCREATE TABLE IF NOT EXISTS default.rawData_cluster\r\n(\r\n    EventDateTime  DateTime default now(),\r\n    insert         String,\r\n    uuid           String default generateUUIDv4(),\r\n    datetime_value DateTime,\r\n    probe_id       Int32,\r\n    value          Float64\r\n)\r\nENGINE = Distributed(time_cluster, default, rawData, rand());\r\n\r\n````\r\n\r\nBut i have some issue with this architecture / engine choices,\r\nIn rare case data can be inserted more than one time , my requirement is more something like a UPSERT than a mergetree :/\r\n\r\nHow can i alter the data in the cluster ?\r\nHow can i perfome a delete in the cluster ?\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25215/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25215/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25195","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25195/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25195/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25195/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/25195","id":918376313,"node_id":"MDU6SXNzdWU5MTgzNzYzMTM=","number":25195,"title":"[RFC] Detached parts cleanup","user":{"login":"tavplubix","id":14847450,"node_id":"MDQ6VXNlcjE0ODQ3NDUw","avatar_url":"https://avatars.githubusercontent.com/u/14847450?v=4","gravatar_id":"","url":"https://api.github.com/users/tavplubix","html_url":"https://github.com/tavplubix","followers_url":"https://api.github.com/users/tavplubix/followers","following_url":"https://api.github.com/users/tavplubix/following{/other_user}","gists_url":"https://api.github.com/users/tavplubix/gists{/gist_id}","starred_url":"https://api.github.com/users/tavplubix/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tavplubix/subscriptions","organizations_url":"https://api.github.com/users/tavplubix/orgs","repos_url":"https://api.github.com/users/tavplubix/repos","events_url":"https://api.github.com/users/tavplubix/events{/privacy}","received_events_url":"https://api.github.com/users/tavplubix/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":1365579236,"node_id":"MDU6TGFiZWwxMzY1NTc5MjM2","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/minor","name":"minor","color":"FFF8F8","default":false,"description":"Priority: minor"},{"id":1507886722,"node_id":"MDU6TGFiZWwxNTA3ODg2NzIy","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/st-discussion","name":"st-discussion","color":"e5b890","default":false,"description":"The story requires discussion /research / expert help / design & decomposition before will be taken"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2021-06-11T07:57:48Z","updated_at":"2021-06-11T20:00:05Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"Automatically remove parts that where detached long time ago (one month by default) and have some prefix in name (such as `broken`, `broken_on_start`, `inactive`, `clone`, etc). It should not affect parts that were detached manually by `ALTER DETACH` query. ","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25195/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25195/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25173","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25173/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25173/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25173/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/25173","id":917563001,"node_id":"MDU6SXNzdWU5MTc1NjMwMDE=","number":25173,"title":"BigQuery Storage API Table Engine","user":{"login":"chrisgoddard","id":4922472,"node_id":"MDQ6VXNlcjQ5MjI0NzI=","avatar_url":"https://avatars.githubusercontent.com/u/4922472?v=4","gravatar_id":"","url":"https://api.github.com/users/chrisgoddard","html_url":"https://github.com/chrisgoddard","followers_url":"https://api.github.com/users/chrisgoddard/followers","following_url":"https://api.github.com/users/chrisgoddard/following{/other_user}","gists_url":"https://api.github.com/users/chrisgoddard/gists{/gist_id}","starred_url":"https://api.github.com/users/chrisgoddard/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/chrisgoddard/subscriptions","organizations_url":"https://api.github.com/users/chrisgoddard/orgs","repos_url":"https://api.github.com/users/chrisgoddard/repos","events_url":"https://api.github.com/users/chrisgoddard/events{/privacy}","received_events_url":"https://api.github.com/users/chrisgoddard/received_events","type":"User","site_admin":false},"labels":[{"id":386401508,"node_id":"MDU6TGFiZWwzODY0MDE1MDg=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/help%20wanted","name":"help wanted","color":"128A0C","default":true,"description":null},{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-06-10T16:47:03Z","updated_at":"2021-06-14T04:33:14Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"The [BigQuery Storage API](https://cloud.google.com/bigquery/docs/reference/storage) provides fast access to BigQuery-managed storage directly.\r\n\r\nRight now, reading data from BigQuery would involve either querying tables via the JDBC/ODBC connector or export data to cloud storage (GCS/S3) and read from there.\r\n\r\nThe storage API allows for multiple read streams, so it could work well with Clickhouse's parallel execution.\r\n\r\nRows are transmitted in either Avro or Arrow format which Clickhouse already supports.\r\n\r\nThis API is still in beta, and right now it appears to focus on reading from storage - but the API has write methods too.\r\n\r\n**Use case**\r\nBigQuery is a widely used data warehouse with deep integrations in the Google Cloud ecosystem. Being able to read and write data in high volume from BigQuery tables would allow Clickhouse users to leverage the wider BigQuery ecosystem.\r\n\r\nIt would also lower the friction of migrating from a BigQuery-based data warehouse infrastructure to Clickhouse.\r\n\r\n**Describe the solution you'd like**\r\nCreate a `BigQuery` table engine allow both read and write, e.g.\r\n\r\n```\r\nCREATE TABLE [IF NOT EXISTS] [db.]table_name\r\n(\r\n    name1 [type1],\r\n    name2 [type2],\r\n    ...\r\n) ENGINE = BigQuery(table_path, auth);\r\n```\r\nEngine Parameters\r\n\r\n* `table_path` in format projects/{project_id}/datasets/{dataset_id}/tables/{table_id}\r\n* authentication: a few ways we could pass through authentication:\r\n* * set a GOOGLE_APPLICATION_CREDENTIALS environment variable to the path of the JSON key file\r\n* * pass the path to the JSON key file - e.g. `keyfile`\r\n* * pass the JSON blob directly into the function - e.g. `auth`\r\n* * pass the parameters of the JSON keyfile, e.g. `[private_key_id, private_key, client_email, client_id, auth_uri, token_uri, auth_provider_x509_cert_url, client_x509_cert_url]`\r\n\r\n\r\nFor reading, it's possible to select specific columns as well as push down a row filter in SQL [TableReadOptions](https://cloud.google.com/bigquery/docs/reference/storage/rpc/google.cloud.bigquery.storage.v1beta2#google.cloud.bigquery.storage.v1beta2.ReadSession.TableReadOptions) which would allow for even faster queries.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25173/reactions","total_count":1,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":1},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25173/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25131","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25131/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25131/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25131/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/25131","id":916296035,"node_id":"MDU6SXNzdWU5MTYyOTYwMzU=","number":25131,"title":"Too many optimizations applied to query plan. Current limit 10000","user":{"login":"volfco","id":433045,"node_id":"MDQ6VXNlcjQzMzA0NQ==","avatar_url":"https://avatars.githubusercontent.com/u/433045?v=4","gravatar_id":"","url":"https://api.github.com/users/volfco","html_url":"https://github.com/volfco","followers_url":"https://api.github.com/users/volfco/followers","following_url":"https://api.github.com/users/volfco/following{/other_user}","gists_url":"https://api.github.com/users/volfco/gists{/gist_id}","starred_url":"https://api.github.com/users/volfco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/volfco/subscriptions","organizations_url":"https://api.github.com/users/volfco/orgs","repos_url":"https://api.github.com/users/volfco/repos","events_url":"https://api.github.com/users/volfco/events{/privacy}","received_events_url":"https://api.github.com/users/volfco/received_events","type":"User","site_admin":false},"labels":[{"id":845247686,"node_id":"MDU6TGFiZWw4NDUyNDc2ODY=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/usability","name":"usability","color":"ebf28c","default":false,"description":""}],"state":"open","locked":false,"assignee":{"login":"KochetovNicolai","id":4092911,"node_id":"MDQ6VXNlcjQwOTI5MTE=","avatar_url":"https://avatars.githubusercontent.com/u/4092911?v=4","gravatar_id":"","url":"https://api.github.com/users/KochetovNicolai","html_url":"https://github.com/KochetovNicolai","followers_url":"https://api.github.com/users/KochetovNicolai/followers","following_url":"https://api.github.com/users/KochetovNicolai/following{/other_user}","gists_url":"https://api.github.com/users/KochetovNicolai/gists{/gist_id}","starred_url":"https://api.github.com/users/KochetovNicolai/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/KochetovNicolai/subscriptions","organizations_url":"https://api.github.com/users/KochetovNicolai/orgs","repos_url":"https://api.github.com/users/KochetovNicolai/repos","events_url":"https://api.github.com/users/KochetovNicolai/events{/privacy}","received_events_url":"https://api.github.com/users/KochetovNicolai/received_events","type":"User","site_admin":false},"assignees":[{"login":"KochetovNicolai","id":4092911,"node_id":"MDQ6VXNlcjQwOTI5MTE=","avatar_url":"https://avatars.githubusercontent.com/u/4092911?v=4","gravatar_id":"","url":"https://api.github.com/users/KochetovNicolai","html_url":"https://github.com/KochetovNicolai","followers_url":"https://api.github.com/users/KochetovNicolai/followers","following_url":"https://api.github.com/users/KochetovNicolai/following{/other_user}","gists_url":"https://api.github.com/users/KochetovNicolai/gists{/gist_id}","starred_url":"https://api.github.com/users/KochetovNicolai/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/KochetovNicolai/subscriptions","organizations_url":"https://api.github.com/users/KochetovNicolai/orgs","repos_url":"https://api.github.com/users/KochetovNicolai/repos","events_url":"https://api.github.com/users/KochetovNicolai/events{/privacy}","received_events_url":"https://api.github.com/users/KochetovNicolai/received_events","type":"User","site_admin":false}],"milestone":null,"comments":9,"created_at":"2021-06-09T14:48:56Z","updated_at":"2021-06-10T17:55:52Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"**Describe the bug**\r\nDue to a script error, I applied thousands of mutations on a per-row basis and not a large block. \r\n\r\n```\r\ngpn1 :) select count(*) from system.mutations where is_done = 0;\r\n\r\nSELECT count(*)\r\nFROM system.mutations\r\nWHERE is_done = 0\r\n\r\nQuery id: 6ed39653-bd76-482d-bbb0-d5a95fd45460\r\n\r\n┌─count()─┐\r\n│   55668 │\r\n└─────────┘\r\n```\r\n\r\nI've noticed that the below error has been showing up in the server log. `<Error> auto DB::IBackgroundJobExecutor::jobExecutingTask()::(anonymous class)::operator()() const: Code: 572, e.displayText() = DB::Exception: Too many optimizations applied to query plan. Current limit 1000`\r\n\r\n```\r\ngpn1 :) select table, elapsed, progress, rows_read, source_part_names, result_part_name, rows_written, total_size_marks, formatReadableSize(memory_usage) from system.merges;\r\n\r\nSELECT\r\n    table,\r\n    elapsed,\r\n    progress,\r\n    rows_read,\r\n    source_part_names,\r\n    result_part_name,\r\n    rows_written,\r\n    total_size_marks,\r\n    formatReadableSize(memory_usage)\r\nFROM system.merges\r\n\r\nQuery id: fb87be4a-8d94-4ae4-aa47-54caba22db5a\r\n\r\n┌─table─────────┬───────elapsed─┬─progress─┬─rows_read─┬─source_part_names──────────────────────────────────────────────┬─result_part_name────────────────────────────────────────────┬─rows_written─┬─total_size_marks─┬─formatReadableSize(memory_usage)─┐\r\n│ works         │ 166.634974364 │        0 │         0 │ ['2dd14f7d92a27e95a1e921c57f47feb1_9_697488_4050_997864']      │ 2dd14f7d92a27e95a1e921c57f47feb1_9_697488_4050_1008837      │            0 │                4 │ 507.26 MiB                       │\r\n│ works         │ 165.007201312 │        0 │         0 │ ['2dd14f7d92a27e95a1e921c57f47feb1_697527_997263_3116_997864'] │ 2dd14f7d92a27e95a1e921c57f47feb1_697527_997263_3116_1008837 │            0 │                2 │ 524.42 MiB                       │\r\n│ media │ 164.798080484 │        0 │         0 │ ['0b8b7d0f4c971a62a5cc8daaa7f20082_11_81092_496_496791']       │ 0b8b7d0f4c971a62a5cc8daaa7f20082_11_81092_496_522150        │            0 │                4 │ 1.39 GiB                         │\r\n│ works         │ 163.361355789 │        0 │         0 │ ['2dd14f7d92a27e95a1e921c57f47feb1_997285_997849_2_997864']    │ 2dd14f7d92a27e95a1e921c57f47feb1_997285_997849_2_1008837    │            0 │                2 │ 527.83 MiB                       │\r\n│ works         │ 161.719931357 │        0 │         0 │ ['2dd14f7d92a27e95a1e921c57f47feb1_997874_997874_0']           │ 2dd14f7d92a27e95a1e921c57f47feb1_997874_997874_0_1008837    │            0 │                2 │ 528.46 MiB                       │\r\n│ media │ 159.428571875 │        0 │         0 │ ['0b8b7d0f4c971a62a5cc8daaa7f20082_81104_192449_188_485231']   │ 0b8b7d0f4c971a62a5cc8daaa7f20082_81104_192449_188_522150    │            0 │                2 │ 2.03 GiB                         │\r\n│ works         │ 155.392785571 │        0 │         0 │ ['2dd14f7d92a27e95a1e921c57f47feb1_997957_997957_0']           │ 2dd14f7d92a27e95a1e921c57f47feb1_997957_997957_0_1008837    │            0 │                2 │ 523.90 MiB                       │\r\n│ media │ 151.359738336 │        0 │         0 │ ['0b8b7d0f4c971a62a5cc8daaa7f20082_495729_495729_0']           │ 0b8b7d0f4c971a62a5cc8daaa7f20082_495729_495729_0_522150     │            0 │                2 │ 1.45 GiB                         │\r\n└───────────────┴───────────────┴──────────┴───────────┴────────────────────────────────────────────────────────────────┴─────────────────────────────────────────────────────────────┴──────────────┴──────────────────┴──────────────────────────────────┘\r\n\r\n8 rows in set. Elapsed: 0.003 sec. \r\n```\r\n\r\n**How to reproduce**\r\n\r\nThe two tables, works and media, are basically tables that have a bunch of metadata about files. The mutation I'm applying is to add a \"share ID\" which is where the data is stored. The tables have 375k and 675k records respectively. \r\n\r\nDue to a script mistake, I am applying each mutation row by row (WHERE uuid = '<id>') and not as a large block (using multiple where statements to select the right rows in a single query). \r\n\r\n\r\n**Error message and/or stacktrace**\r\n\r\n```\r\n2021.06.09 14:41:12.137800 [ 1666869 ] {} <Error> auto DB::IBackgroundJobExecutor::jobExecutingTask()::(anonymous class)::operator()() const: Code: 572, e.displayText() = DB::Exception: Too many optimizations applied to query plan. Current limit 10000, Stack trace (when copying this message, always include the lines below):\r\n\r\n0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x8b5b17a in /usr/bin/clickhouse\r\n1. DB::Exception::Exception<unsigned long&>(int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned long&) @ 0x8ba6f72 in /usr/bin/clickhouse\r\n2. DB::QueryPlanOptimizations::optimizeTree(DB::QueryPlanOptimizationSettings const&, DB::QueryPlan::Node&, std::__1::list<DB::QueryPlan::Node, std::__1::allocator<DB::QueryPlan::Node> >&) @ 0x1067a0af in /usr/bin/clickhouse\r\n3. DB::QueryPlan::buildQueryPipeline(DB::QueryPlanOptimizationSettings const&, DB::BuildQueryPipelineSettings const&) @ 0x10647ab3 in /usr/bin/clickhouse\r\n4. DB::MutationsInterpreter::addStreamsForLaterStages(std::__1::vector<DB::MutationsInterpreter::Stage, std::__1::allocator<DB::MutationsInterpreter::Stage> > const&, DB::QueryPlan&) const @ 0xfa6b991 in /usr/bin/clickhouse\r\n5. DB::MutationsInterpreter::execute() @ 0xfa6c5d4 in /usr/bin/clickhouse\r\n6. DB::MergeTreeDataMergerMutator::mutatePartToTemporaryPart(DB::FutureMergedMutatedPart const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::MutationCommands const&, DB::BackgroundProcessListEntry<DB::MergeListElement, DB::MergeInfo>&, long, std::__1::shared_ptr<DB::Context>, std::__1::unique_ptr<DB::IReservation, std::__1::default_delete<DB::IReservation> > const&, std::__1::shared_ptr<DB::RWLockImpl::LockHolderImpl>&) @ 0x10143743 in /usr/bin/clickhouse\r\n7. DB::StorageMergeTree::mutateSelectedPart(std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::StorageMergeTree::MergeMutateSelectedEntry&, std::__1::shared_ptr<DB::RWLockImpl::LockHolderImpl>&) @ 0xfe6661b in /usr/bin/clickhouse\r\n8. ? @ 0xfe76338 in /usr/bin/clickhouse\r\n9. ? @ 0x1006b8d7 in /usr/bin/clickhouse\r\n10. ThreadPoolImpl<ThreadFromGlobalPool>::worker(std::__1::__list_iterator<ThreadFromGlobalPool, void*>) @ 0x8b9df58 in /usr/bin/clickhouse\r\n11. ThreadFromGlobalPool::ThreadFromGlobalPool<void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda1'()>(void&&, void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda1'()&&...)::'lambda'()::operator()() @ 0x8b9f91f in /usr/bin/clickhouse\r\n12. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x8b9b49f in /usr/bin/clickhouse\r\n13. ? @ 0x8b9e9c3 in /usr/bin/clickhouse\r\n14. start_thread @ 0x9609 in /usr/lib/x86_64-linux-gnu/libpthread-2.31.so\r\n15. clone @ 0x122293 in /usr/lib/x86_64-linux-gnu/libc-2.31.so\r\n (version 21.6.3.14 (official build))\r\n\r\n```\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25131/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25131/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25088","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25088/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25088/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25088/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/25088","id":915398060,"node_id":"MDU6SXNzdWU5MTUzOTgwNjA=","number":25088,"title":"Backward compatibility checks in `stress` test","user":{"login":"alexey-milovidov","id":18581488,"node_id":"MDQ6VXNlcjE4NTgxNDg4","avatar_url":"https://avatars.githubusercontent.com/u/18581488?v=4","gravatar_id":"","url":"https://api.github.com/users/alexey-milovidov","html_url":"https://github.com/alexey-milovidov","followers_url":"https://api.github.com/users/alexey-milovidov/followers","following_url":"https://api.github.com/users/alexey-milovidov/following{/other_user}","gists_url":"https://api.github.com/users/alexey-milovidov/gists{/gist_id}","starred_url":"https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexey-milovidov/subscriptions","organizations_url":"https://api.github.com/users/alexey-milovidov/orgs","repos_url":"https://api.github.com/users/alexey-milovidov/repos","events_url":"https://api.github.com/users/alexey-milovidov/events{/privacy}","received_events_url":"https://api.github.com/users/alexey-milovidov/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":1955634273,"node_id":"MDU6TGFiZWwxOTU1NjM0Mjcz","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/testing","name":"testing","color":"c9a224","default":false,"description":"Special issue with list of bugs found by CI"}],"state":"open","locked":false,"assignee":{"login":"Avogar","id":48961922,"node_id":"MDQ6VXNlcjQ4OTYxOTIy","avatar_url":"https://avatars.githubusercontent.com/u/48961922?v=4","gravatar_id":"","url":"https://api.github.com/users/Avogar","html_url":"https://github.com/Avogar","followers_url":"https://api.github.com/users/Avogar/followers","following_url":"https://api.github.com/users/Avogar/following{/other_user}","gists_url":"https://api.github.com/users/Avogar/gists{/gist_id}","starred_url":"https://api.github.com/users/Avogar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Avogar/subscriptions","organizations_url":"https://api.github.com/users/Avogar/orgs","repos_url":"https://api.github.com/users/Avogar/repos","events_url":"https://api.github.com/users/Avogar/events{/privacy}","received_events_url":"https://api.github.com/users/Avogar/received_events","type":"User","site_admin":false},"assignees":[{"login":"Avogar","id":48961922,"node_id":"MDQ6VXNlcjQ4OTYxOTIy","avatar_url":"https://avatars.githubusercontent.com/u/48961922?v=4","gravatar_id":"","url":"https://api.github.com/users/Avogar","html_url":"https://github.com/Avogar","followers_url":"https://api.github.com/users/Avogar/followers","following_url":"https://api.github.com/users/Avogar/following{/other_user}","gists_url":"https://api.github.com/users/Avogar/gists{/gist_id}","starred_url":"https://api.github.com/users/Avogar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Avogar/subscriptions","organizations_url":"https://api.github.com/users/Avogar/orgs","repos_url":"https://api.github.com/users/Avogar/repos","events_url":"https://api.github.com/users/Avogar/events{/privacy}","received_events_url":"https://api.github.com/users/Avogar/received_events","type":"User","site_admin":false}],"milestone":null,"comments":0,"created_at":"2021-06-08T19:34:11Z","updated_at":"2021-06-08T19:34:16Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"Add `--fake-drop-tables` option in `clickhouse-client`.\r\nWith this option, `clickhouse-client` will ignore all `DROP` queries and replace `CREATE` queries to `CREATE OR REPLACE` queries.\r\nAs the result, we will have tons of databases and tables remaining with some test data after running the stress test.\r\n\r\nWe will make stress test to run with the previous release of clickhouse-server and `--fake-drop-tables` option.\r\nThen upgrade ClickHouse version and check that:\r\n- it started successfully;\r\n- no error messages in server log (?);\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25088/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25088/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25069","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25069/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25069/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25069/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/25069","id":914515188,"node_id":"MDU6SXNzdWU5MTQ1MTUxODg=","number":25069,"title":"DiskS3::restoreFiles may misorder objects of a file","user":{"login":"yuzhichang","id":153784,"node_id":"MDQ6VXNlcjE1Mzc4NA==","avatar_url":"https://avatars.githubusercontent.com/u/153784?v=4","gravatar_id":"","url":"https://api.github.com/users/yuzhichang","html_url":"https://github.com/yuzhichang","followers_url":"https://api.github.com/users/yuzhichang/followers","following_url":"https://api.github.com/users/yuzhichang/following{/other_user}","gists_url":"https://api.github.com/users/yuzhichang/gists{/gist_id}","starred_url":"https://api.github.com/users/yuzhichang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yuzhichang/subscriptions","organizations_url":"https://api.github.com/users/yuzhichang/orgs","repos_url":"https://api.github.com/users/yuzhichang/repos","events_url":"https://api.github.com/users/yuzhichang/events{/privacy}","received_events_url":"https://api.github.com/users/yuzhichang/received_events","type":"User","site_admin":false},"labels":[{"id":2673090580,"node_id":"MDU6TGFiZWwyNjczMDkwNTgw","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/bug%20experimental","name":"bug experimental","color":"E99695","default":false,"description":"Bug in the feature that should not be used in production"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2021-06-08T07:52:35Z","updated_at":"2021-06-11T12:09:12Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"At DiskS3.cpp, line 232:\r\nDiskS3::writeFile(const String & path, size_t buf_size, WriteMode mode) \r\nif path exist, and mode=Append, then create a randomly named object and append to the meta. This object name(S3 key) may precede previous object names in dictionary order.\r\n\r\nDiskS3::restoreFiles iterates S3 keys in dictionary order to restore the meta.\r\n\r\nVersion: 21.7.1.7029\r\n@GrigoryPervakov , @Jokser \r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25069/reactions","total_count":1,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":1,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25069/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25056","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25056/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25056/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25056/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/25056","id":913648709,"node_id":"MDU6SXNzdWU5MTM2NDg3MDk=","number":25056,"title":"Please add \"Added/new in version ...\" references to the documentation","user":{"login":"altvod","id":10007896,"node_id":"MDQ6VXNlcjEwMDA3ODk2","avatar_url":"https://avatars.githubusercontent.com/u/10007896?v=4","gravatar_id":"","url":"https://api.github.com/users/altvod","html_url":"https://github.com/altvod","followers_url":"https://api.github.com/users/altvod/followers","following_url":"https://api.github.com/users/altvod/following{/other_user}","gists_url":"https://api.github.com/users/altvod/gists{/gist_id}","starred_url":"https://api.github.com/users/altvod/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/altvod/subscriptions","organizations_url":"https://api.github.com/users/altvod/orgs","repos_url":"https://api.github.com/users/altvod/repos","events_url":"https://api.github.com/users/altvod/events{/privacy}","received_events_url":"https://api.github.com/users/altvod/received_events","type":"User","site_admin":false},"labels":[{"id":785082162,"node_id":"MDU6TGFiZWw3ODUwODIxNjI=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-documentation","name":"comp-documentation","color":"b5bcff","default":false,"description":"Used to run automatic builds of the documentation"},{"id":1507867504,"node_id":"MDU6TGFiZWwxNTA3ODY3NTA0","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/st-hold","name":"st-hold","color":"e5b890","default":false,"description":"We've paused the work on issue for some reason"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2021-06-07T14:59:35Z","updated_at":"2022-01-27T10:17:17Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"It would be very useful to have info about the earliest version supporting various features, especially new data types and functions.\r\n\r\nRight now to figure these things out you need to sift through tons of changelogs and commit diffs. And even that might still not tell you, which build something really appears in.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25056/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25056/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25054","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25054/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25054/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25054/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/25054","id":913624956,"node_id":"MDU6SXNzdWU5MTM2MjQ5NTY=","number":25054,"title":"Ubuntu graphical installation / upgrade hungs on asking default password for clickhouse-server","user":{"login":"filimonov","id":1549571,"node_id":"MDQ6VXNlcjE1NDk1NzE=","avatar_url":"https://avatars.githubusercontent.com/u/1549571?v=4","gravatar_id":"","url":"https://api.github.com/users/filimonov","html_url":"https://github.com/filimonov","followers_url":"https://api.github.com/users/filimonov/followers","following_url":"https://api.github.com/users/filimonov/following{/other_user}","gists_url":"https://api.github.com/users/filimonov/gists{/gist_id}","starred_url":"https://api.github.com/users/filimonov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/filimonov/subscriptions","organizations_url":"https://api.github.com/users/filimonov/orgs","repos_url":"https://api.github.com/users/filimonov/repos","events_url":"https://api.github.com/users/filimonov/events{/privacy}","received_events_url":"https://api.github.com/users/filimonov/received_events","type":"User","site_admin":false},"labels":[{"id":386401508,"node_id":"MDU6TGFiZWwzODY0MDE1MDg=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/help%20wanted","name":"help wanted","color":"128A0C","default":true,"description":null},{"id":1365579236,"node_id":"MDU6TGFiZWwxMzY1NTc5MjM2","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/minor","name":"minor","color":"FFF8F8","default":false,"description":"Priority: minor"},{"id":1575085465,"node_id":"MDU6TGFiZWwxNTc1MDg1NDY1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/unexpected%20behaviour","name":"unexpected behaviour","color":"e088ca","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-06-07T14:40:41Z","updated_at":"2021-06-08T00:45:25Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"body":"configuring :(\r\n\r\n![Screenshot from 2021-06-07 16-36-01](https://user-images.githubusercontent.com/1549571/121035985-addb4f00-c7ae-11eb-8327-00d25d87119c.png)\r\n\r\nAnd if we will open 'details':\r\n\r\n![Screenshot from 2021-06-07 16-36-051](https://user-images.githubusercontent.com/1549571/121036223-e2e7a180-c7ae-11eb-800d-81b20c7eff49.png)\r\n\r\nSee https://github.com/ClickHouse/ClickHouse/pull/22976#issuecomment-820910439","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25054/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25054/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25052","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25052/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25052/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25052/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/25052","id":913552167,"node_id":"MDU6SXNzdWU5MTM1NTIxNjc=","number":25052,"title":"Reading from s3 (Cannot read from istream at offset 0)","user":{"login":"stasDomb","id":27229336,"node_id":"MDQ6VXNlcjI3MjI5MzM2","avatar_url":"https://avatars.githubusercontent.com/u/27229336?v=4","gravatar_id":"","url":"https://api.github.com/users/stasDomb","html_url":"https://github.com/stasDomb","followers_url":"https://api.github.com/users/stasDomb/followers","following_url":"https://api.github.com/users/stasDomb/following{/other_user}","gists_url":"https://api.github.com/users/stasDomb/gists{/gist_id}","starred_url":"https://api.github.com/users/stasDomb/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stasDomb/subscriptions","organizations_url":"https://api.github.com/users/stasDomb/orgs","repos_url":"https://api.github.com/users/stasDomb/repos","events_url":"https://api.github.com/users/stasDomb/events{/privacy}","received_events_url":"https://api.github.com/users/stasDomb/received_events","type":"User","site_admin":false},"labels":[{"id":386401510,"node_id":"MDU6TGFiZWwzODY0MDE1MTA=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/question","name":"question","color":"bfdadc","default":true,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2021-06-07T13:29:23Z","updated_at":"2021-06-10T05:45:25Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Hello, I try to read about 100 files from s3 bucket( 35-40 mln rows).\r\nI create s3_engine table and a general table(**test_table**). When I try to insert in the last one the data I get the error.\r\n\r\n\r\n> INSERT INTO test_table (field1,\r\n> ......\r\n> field10)\r\n>  SELECT\r\n>     field1,\r\n> ......\r\n> field10\r\n> FROM s3_test_table\r\n> \r\n> ↘ Progress: 30.01 million rows, 22.01 GB (95.87 thousand rows/s., 70.30 MB/s.)\r\n> 0 rows in set. Elapsed: 315.812 sec. Processed 30.01 million rows, 22.01 GB (95.03 thousand rows/s., 69.69 MB/s.)\r\n> \r\n> Received exception from server (version 21.3.3):\r\n> Code: 23. DB::Exception: Received from localhost:9000. DB::Exception: Cannot read from istream at offset 0: While executing S3.\r\n\r\n\r\nSo, it's about 90% of my data.\r\nWhen I separated the process: at first, I created 2 s3_tables, one for first 50% of data, and second for another part. Step by step I inserted the data into table, and everything is OK.\r\nIt is some buffer issue or timeout issue.\r\nWhen I increased **onnect_timeout_ms** - the same error.\r\nAny ideas or advices?\r\n\r\nFrom the **/var/log/clickhouse-server/clickhouse-server.err.log**\r\n\r\n> 2021.06.07 12:50:36.653185 [ 303362 ] {e5813926-c05c-4479-887c-b8bf5a7a48fe} <Error> TCPHandler: Code: 23, e.displayText() = DB::Exception: Cannot read from istream at offset 0: While executing S3, Stack trace:\r\n> \r\n> 0. DB::ReadBufferFromIStream::nextImpl() @ 0xd00ccd7 in /usr/bin/clickhouse\r\n> 1. DB::ReadBufferFromS3::nextImpl() @ 0xea41667 in /usr/bin/clickhouse\r\n> 2. DB::ZlibInflatingReadBuffer::nextImpl() @ 0xe5c53aa in /usr/bin/clickhouse\r\n> 3. DB::InputStreamReadBufferAdapter::next(unsigned char const**, unsigned long*) @ 0xf968334 in /usr/bin/clickhouse\r\n> 4. avro::BoundedInputStream::next(unsigned char const**, unsigned long*) @ 0x1297f13b in /usr/bin/clickhouse\r\n> 5. avro::DataFileReaderBase::readDataBlock() @ 0x1297d02c in /usr/bin/clickhouse\r\n> 6. avro::DataFileReaderBase::hasMore() @ 0x1297de69 in /usr/bin/clickhouse\r\n> 7. DB::AvroRowInputFormat::readRow(std::__1::vector<COW<DB::IColumn>::mutable_ptr<DB::IColumn>, std::__1::allocator<COW<DB::IColumn>::mutable_ptr<DB::IColumn> > >&, DB::RowReadExtension&) @ 0xf95364c in /usr/bin/clickhouse\r\n> 8. DB::IRowInputFormat::generate() @ 0xf969ef8 in /usr/bin/clickhouse\r\n> 9. DB::ISource::tryGenerate() @ 0xf8f8995 in /usr/bin/clickhouse\r\n> 10. DB::ISource::work() @ 0xf8f858a in /usr/bin/clickhouse\r\n> 11. DB::InputStreamFromInputFormat::readImpl() @ 0xd00026f in /usr/bin/clickhouse\r\n> 12. DB::IBlockInputStream::read() @ 0xe8ab0a5 in /usr/bin/clickhouse\r\n> 13. ? @ 0xf45c8a6 in /usr/bin/clickhouse\r\n> 14. DB::ISource::tryGenerate() @ 0xf8f8995 in /usr/bin/clickhouse\r\n> 15. DB::ISource::work() @ 0xf8f858a in /usr/bin/clickhouse\r\n> 16. DB::SourceWithProgress::work() @ 0xfaab02a in /usr/bin/clickhouse\r\n> 17. ? @ 0xf93297d in /usr/bin/clickhouse\r\n> 18. DB::PipelineExecutor::executeStepImpl(unsigned long, unsigned long, std::__1::atomic<bool>*) @ 0xf92f5a1 in /usr/bin/clickhouse\r\n> 19. DB::PipelineExecutor::executeImpl(unsigned long) @ 0xf92d4f6 in /usr/bin/clickhouse\r\n> 20. ? @ 0xf93acf2 in /usr/bin/clickhouse\r\n> 21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x864ed1f in /usr/bin/clickhouse\r\n> 22. ? @ 0x86527b3 in /usr/bin/clickhouse\r\n> 23. start_thread @ 0x9609 in /usr/lib/x86_64-linux-gnu/libpthread-2.31.so\r\n> 24. clone @ 0x122293 in /usr/lib/x86_64-linux-gnu/libc-2.31.so\r\n\r\n\r\n\r\nUPD: I used  **SET max_insert_threads = 4** . And the insert was successful. But I am not sure that it's a good way.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25052/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25052/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25016","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25016/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25016/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25016/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/25016","id":912886684,"node_id":"MDU6SXNzdWU5MTI4ODY2ODQ=","number":25016,"title":"Can't rename column synchronously","user":{"login":"Blackmorse","id":13163993,"node_id":"MDQ6VXNlcjEzMTYzOTkz","avatar_url":"https://avatars.githubusercontent.com/u/13163993?v=4","gravatar_id":"","url":"https://api.github.com/users/Blackmorse","html_url":"https://github.com/Blackmorse","followers_url":"https://api.github.com/users/Blackmorse/followers","following_url":"https://api.github.com/users/Blackmorse/following{/other_user}","gists_url":"https://api.github.com/users/Blackmorse/gists{/gist_id}","starred_url":"https://api.github.com/users/Blackmorse/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Blackmorse/subscriptions","organizations_url":"https://api.github.com/users/Blackmorse/orgs","repos_url":"https://api.github.com/users/Blackmorse/repos","events_url":"https://api.github.com/users/Blackmorse/events{/privacy}","received_events_url":"https://api.github.com/users/Blackmorse/received_events","type":"User","site_admin":false},"labels":[{"id":1575085465,"node_id":"MDU6TGFiZWwxNTc1MDg1NDY1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/unexpected%20behaviour","name":"unexpected behaviour","color":"e088ca","default":false,"description":""}],"state":"open","locked":false,"assignee":{"login":"alesapin","id":3684697,"node_id":"MDQ6VXNlcjM2ODQ2OTc=","avatar_url":"https://avatars.githubusercontent.com/u/3684697?v=4","gravatar_id":"","url":"https://api.github.com/users/alesapin","html_url":"https://github.com/alesapin","followers_url":"https://api.github.com/users/alesapin/followers","following_url":"https://api.github.com/users/alesapin/following{/other_user}","gists_url":"https://api.github.com/users/alesapin/gists{/gist_id}","starred_url":"https://api.github.com/users/alesapin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alesapin/subscriptions","organizations_url":"https://api.github.com/users/alesapin/orgs","repos_url":"https://api.github.com/users/alesapin/repos","events_url":"https://api.github.com/users/alesapin/events{/privacy}","received_events_url":"https://api.github.com/users/alesapin/received_events","type":"User","site_admin":false},"assignees":[{"login":"alesapin","id":3684697,"node_id":"MDQ6VXNlcjM2ODQ2OTc=","avatar_url":"https://avatars.githubusercontent.com/u/3684697?v=4","gravatar_id":"","url":"https://api.github.com/users/alesapin","html_url":"https://github.com/alesapin","followers_url":"https://api.github.com/users/alesapin/followers","following_url":"https://api.github.com/users/alesapin/following{/other_user}","gists_url":"https://api.github.com/users/alesapin/gists{/gist_id}","starred_url":"https://api.github.com/users/alesapin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alesapin/subscriptions","organizations_url":"https://api.github.com/users/alesapin/orgs","repos_url":"https://api.github.com/users/alesapin/repos","events_url":"https://api.github.com/users/alesapin/events{/privacy}","received_events_url":"https://api.github.com/users/alesapin/received_events","type":"User","site_admin":false}],"milestone":null,"comments":2,"created_at":"2021-06-06T16:49:05Z","updated_at":"2021-06-07T05:57:22Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"**Does it reproduce on recent release?**\r\n\r\nChecked on versions from 20.8 to 21.5.6.6\r\n\r\n\r\n\r\n**How to reproduce**\r\nSuppose there are 1 shard, 2 replicas, cluster name is _replicated_.\r\nChecked both on _Atomic_ and _Ordinary_ databases\r\n```\r\nCREATE DATABASE repl ON CLUSTER replicated; \r\n\r\nCREATE TABLE repl.t ON CLUSTER replicated\r\n(\r\n    `a` UInt64,\r\n    `b` Enum8('' = -128, '0' = 0, '1' = 1, '2' = 2)\r\n)\r\nENGINE = ReplicatedMergeTree('/clickhouse/tables/{shard}/repl/t', '{replica}')\r\nORDER BY a;\r\n\r\nINSERT INTO repl.t SELECT number, toInt8(abs(number % 3)) FROM system.numbers LIMIT 5000000000\r\n```\r\n\r\nTo execute next queries immediately one after another I use _clickhouse-client_ :\r\n\r\n```\r\nclickhouse-client -m -n --query \" \\\r\n    SET mutations_sync = 2; \\\r\n    SET replication_alter_partitions_sync = 2; \\\r\n    ALTER TABLE repl.t ON CLUSTER replicated RENAME COLUMN b TO b_old; \\\r\n\r\n    ALTER TABLE repl.t ON CLUSTER replicated ADD COLUMN b Enum8('' = -128, '0' = 0, '2' = 1, '1' = 2); \\\r\n\r\n    ALTER TABLE repl.t ON CLUSTER replicated UPDATE  b = CAST(CAST(b_old AS Int8) AS Enum8('' = -128, '0' = 0, '2' = 1, '1' = 2))  WHERE 1; \\\r\n    ALTER TABLE repl.t ON CLUSTER replicated DROP COLUMN b_old; \"\r\n```\r\n\r\nHere I get an error:\r\n```\r\n<remote_replica_address>    9000    341          Code: 341, e.displayText() = DB::Exception: Exception happened during execution of mutations \\'0000000001, 0000000002\\' with part \\'all_4529_4664_3_4769\\' reason: \\'Code: 47, e.displayText() = DB::Exception: Missing columns: \\'b_old\\' while processing query: \\'CAST(CAST(CAST(CAST(b_old, \\'Int8\\'), \\'Enum8(\\\\\\'\\\\\\' = -128, \\\\\\'0\\\\\\' = 0, \\\\\\'2\\\\\\' = 1, \\\\\\'1\\\\\\' = 2)\\'), \\'Enum8(\\\\\\'\\\\\\' = -128, \\\\\\'0\\\\\\' = 0, \\\\\\'2\\\\\\' = 1, \\\\\\'1\\\\\\' = 2)\\'), \\'Enum8(\\\\\\'\\\\\\' = -128, \\\\\\'0\\\\\\' = 0, \\\\\\'2\\\\\\' = 1, \\\\\\'1\\\\\\' = 2)\\'), b\\', required columns: \\'b_old\\' \\'b\\' (version 21.5.6.6 (official build))\\'. This error maybe retryable or not. In case of unretryable error, mutation can be killed with KILL MUTATION query (version 21.5.6.6 (official build))\r\n```\r\n\r\n**Expected behavior**\r\n\r\nI expected _ALTER_ queries to be synchronous\r\n\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25016/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/25016/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24909","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24909/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24909/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24909/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/24909","id":910361852,"node_id":"MDU6SXNzdWU5MTAzNjE4NTI=","number":24909,"title":"Decimals are slower than floats / ints","user":{"login":"filimonov","id":1549571,"node_id":"MDQ6VXNlcjE1NDk1NzE=","avatar_url":"https://avatars.githubusercontent.com/u/1549571?v=4","gravatar_id":"","url":"https://api.github.com/users/filimonov","html_url":"https://github.com/filimonov","followers_url":"https://api.github.com/users/filimonov/followers","following_url":"https://api.github.com/users/filimonov/following{/other_user}","gists_url":"https://api.github.com/users/filimonov/gists{/gist_id}","starred_url":"https://api.github.com/users/filimonov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/filimonov/subscriptions","organizations_url":"https://api.github.com/users/filimonov/orgs","repos_url":"https://api.github.com/users/filimonov/repos","events_url":"https://api.github.com/users/filimonov/events{/privacy}","received_events_url":"https://api.github.com/users/filimonov/received_events","type":"User","site_admin":false},"labels":[{"id":756395244,"node_id":"MDU6TGFiZWw3NTYzOTUyNDQ=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/performance","name":"performance","color":"c2e0c6","default":false,"description":null},{"id":1365579236,"node_id":"MDU6TGFiZWwxMzY1NTc5MjM2","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/minor","name":"minor","color":"FFF8F8","default":false,"description":"Priority: minor"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2021-06-03T10:39:36Z","updated_at":"2021-06-08T22:24:17Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"body":"```\r\nselect sum(materialize(toDecimal64(1,0))) from numbers(5000000000);\r\n\r\n-- 8.150 sec. Processed 5.00 billion rows, 40.00 GB (613.51 million rows/s., 4.91 GB/s.) \r\n\r\nselect sum(materialize(toFloat64(1))) from numbers(5000000000);\r\n\r\n-- 3.339 sec. Processed 5.00 billion rows, 40.00 GB (1.50 billion rows/s., 11.98 GB/s.)\r\n\r\nselect sum(materialize(toUInt64(1))) from numbers(5000000000);\r\n\r\n-- 3.453 sec. Processed 5.00 billion rows, 40.00 GB (1.45 billion rows/s., 11.58 GB/s.)\r\n```\r\n\r\nThe expectation is that it should work with a similar speed.\r\n\r\nP.S. `SET decimal_check_overflow = 0` don't change anything.\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24909/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24909/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24896","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24896/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24896/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24896/events","html_url":"https://github.com/ClickHouse/ClickHouse/pull/24896","id":910115673,"node_id":"MDExOlB1bGxSZXF1ZXN0NjYwNTg0OTE5","number":24896,"title":"Add type check when create materialized view with To clause","user":{"login":"hexiaoting","id":7898329,"node_id":"MDQ6VXNlcjc4OTgzMjk=","avatar_url":"https://avatars.githubusercontent.com/u/7898329?v=4","gravatar_id":"","url":"https://api.github.com/users/hexiaoting","html_url":"https://github.com/hexiaoting","followers_url":"https://api.github.com/users/hexiaoting/followers","following_url":"https://api.github.com/users/hexiaoting/following{/other_user}","gists_url":"https://api.github.com/users/hexiaoting/gists{/gist_id}","starred_url":"https://api.github.com/users/hexiaoting/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hexiaoting/subscriptions","organizations_url":"https://api.github.com/users/hexiaoting/orgs","repos_url":"https://api.github.com/users/hexiaoting/repos","events_url":"https://api.github.com/users/hexiaoting/events{/privacy}","received_events_url":"https://api.github.com/users/hexiaoting/received_events","type":"User","site_admin":false},"labels":[{"id":1302792342,"node_id":"MDU6TGFiZWwxMzAyNzkyMzQy","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/pr-bugfix","name":"pr-bugfix","color":"ff4080","default":false,"description":"Pull request with bugfix, not backported by default"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2021-06-03T05:36:01Z","updated_at":"2022-01-24T11:50:34Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/pulls/24896","html_url":"https://github.com/ClickHouse/ClickHouse/pull/24896","diff_url":"https://github.com/ClickHouse/ClickHouse/pull/24896.diff","patch_url":"https://github.com/ClickHouse/ClickHouse/pull/24896.patch","merged_at":null},"body":"I hereby agree to the terms of the CLA available at: https://yandex.ru/legal/cla/?lang=en\r\n\r\nChangelog category (leave one):\r\n- Bug Fix\r\n\r\nChangelog entry (a user-readable short description of the changes that goes to CHANGELOG.md):\r\nAdd type checking when create materialized view. \r\nTry to close: https://github.com/ClickHouse/ClickHouse/issues/23684\r\n\r\n\r\nDetailed description / Documentation draft:","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24896/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24896/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24893","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24893/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24893/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24893/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/24893","id":910018849,"node_id":"MDU6SXNzdWU5MTAwMTg4NDk=","number":24893,"title":"Does EmbeddedRocksDB have storage policy ?","user":{"login":"shawel","id":625370,"node_id":"MDQ6VXNlcjYyNTM3MA==","avatar_url":"https://avatars.githubusercontent.com/u/625370?v=4","gravatar_id":"","url":"https://api.github.com/users/shawel","html_url":"https://github.com/shawel","followers_url":"https://api.github.com/users/shawel/followers","following_url":"https://api.github.com/users/shawel/following{/other_user}","gists_url":"https://api.github.com/users/shawel/gists{/gist_id}","starred_url":"https://api.github.com/users/shawel/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/shawel/subscriptions","organizations_url":"https://api.github.com/users/shawel/orgs","repos_url":"https://api.github.com/users/shawel/repos","events_url":"https://api.github.com/users/shawel/events{/privacy}","received_events_url":"https://api.github.com/users/shawel/received_events","type":"User","site_admin":false},"labels":[{"id":386401510,"node_id":"MDU6TGFiZWwzODY0MDE1MTA=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/question","name":"question","color":"bfdadc","default":true,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-06-03T01:53:23Z","updated_at":"2021-06-03T01:53:23Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"If not possible is there a workaround?\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24893/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24893/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24892","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24892/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24892/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24892/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/24892","id":909924234,"node_id":"MDU6SXNzdWU5MDk5MjQyMzQ=","number":24892,"title":"Window functions: Not found column number in block error when specifying ORDER BY that uses a column not mentioned in the SELECT","user":{"login":"vzakaznikov","id":41681088,"node_id":"MDQ6VXNlcjQxNjgxMDg4","avatar_url":"https://avatars.githubusercontent.com/u/41681088?v=4","gravatar_id":"","url":"https://api.github.com/users/vzakaznikov","html_url":"https://github.com/vzakaznikov","followers_url":"https://api.github.com/users/vzakaznikov/followers","following_url":"https://api.github.com/users/vzakaznikov/following{/other_user}","gists_url":"https://api.github.com/users/vzakaznikov/gists{/gist_id}","starred_url":"https://api.github.com/users/vzakaznikov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vzakaznikov/subscriptions","organizations_url":"https://api.github.com/users/vzakaznikov/orgs","repos_url":"https://api.github.com/users/vzakaznikov/repos","events_url":"https://api.github.com/users/vzakaznikov/events{/privacy}","received_events_url":"https://api.github.com/users/vzakaznikov/received_events","type":"User","site_admin":false},"labels":[{"id":1575085465,"node_id":"MDU6TGFiZWwxNTc1MDg1NDY1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/unexpected%20behaviour","name":"unexpected behaviour","color":"e088ca","default":false,"description":""},{"id":2607635731,"node_id":"MDU6TGFiZWwyNjA3NjM1NzMx","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-window-functions","name":"comp-window-functions","color":"b5bcff","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2021-06-02T22:08:08Z","updated_at":"2021-09-22T11:42:54Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"**Describe the unexpected behaviour**\r\nNot found column number in block error when specifying ORDER BY that uses a column not mentioned in the SELECT.\r\n\r\n**How to reproduce**\r\n```\r\n:) select count() over (order by number + 1) from numbers(10) order by number\r\n\r\nCode: 10. DB::Exception: Received from localhost:9000. DB::Exception: Not found column number in block. There are only columns: count() OVER (ORDER BY number + 1 ASC), plus(number, 1)\r\n```\r\n\r\n**Expected behavior**\r\nIt should work.\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24892/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24892/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24891","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24891/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24891/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24891/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/24891","id":909909819,"node_id":"MDU6SXNzdWU5MDk5MDk4MTk=","number":24891,"title":"At restart logs are not correctly rotated","user":{"login":"SaltTan","id":20357526,"node_id":"MDQ6VXNlcjIwMzU3NTI2","avatar_url":"https://avatars.githubusercontent.com/u/20357526?v=4","gravatar_id":"","url":"https://api.github.com/users/SaltTan","html_url":"https://github.com/SaltTan","followers_url":"https://api.github.com/users/SaltTan/followers","following_url":"https://api.github.com/users/SaltTan/following{/other_user}","gists_url":"https://api.github.com/users/SaltTan/gists{/gist_id}","starred_url":"https://api.github.com/users/SaltTan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/SaltTan/subscriptions","organizations_url":"https://api.github.com/users/SaltTan/orgs","repos_url":"https://api.github.com/users/SaltTan/repos","events_url":"https://api.github.com/users/SaltTan/events{/privacy}","received_events_url":"https://api.github.com/users/SaltTan/received_events","type":"User","site_admin":false},"labels":[{"id":1365579236,"node_id":"MDU6TGFiZWwxMzY1NTc5MjM2","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/minor","name":"minor","color":"FFF8F8","default":false,"description":"Priority: minor"},{"id":1575085465,"node_id":"MDU6TGFiZWwxNTc1MDg1NDY1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/unexpected%20behaviour","name":"unexpected behaviour","color":"e088ca","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-06-02T21:45:35Z","updated_at":"2021-06-08T18:47:50Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"During restart (`/etc/init.d/clickhouse-server restart`) ClickHouse tries to rotate logs, but something goes wrong and the new process continues to write into the old (rotated) file (clickhouse-server.log.0).\r\n\r\nHere is the new `clickhouse-server.log` created at restart (note the timestamp):\r\n```\r\n$  cat clickhouse-server.log\r\n2021.06.01 15:58:54.382816 [ 21586 ] {} <Information> Application: Child process exited normally with code 0.\r\n```\r\nExcerpt from `clickhouse-server.log.0`\r\nNote the timestamps. The line from the new `clickhouse-server.log` is supposed to be the third line of this excerpt.\r\n```\r\n2021.06.01 15:58:54.000408 [ 21588 ] {} <Information> Application: Closed connections. But 3 remain. Tip: To increase wait time add to config: <shutdown_wait_unfinished>60</shutdown_wait_unfinished>\r\n2021.06.01 15:58:54.018689 [ 21588 ] {} <Information> Application: Will shutdown forcefully.\r\n2021.06.01 15:58:54.879889 [ 26498 ] {} <Information> Application: Will watch for the process with pid 26500\r\n2021.06.01 15:58:54.879964 [ 26500 ] {} <Information> Application: Forked a child process to watch\r\n2021.06.01 15:58:54.880074 [ 26500 ] {} <Information> StatusFile: Status file /var/run/clickhouse-server/clickhouse-server.pid already exists - unclean restart. Contents:\r\n21588\r\n2021.06.01 15:58:54.880148 [ 26500 ] {} <Information> SentryWriter: Sending crash reports is disabled\r\n2021.06.01 15:58:54.880185 [ 26500 ] {} <Trace> Pipe: Pipe capacity is 1.00 MiB\r\n2021.06.01 15:58:54.989307 [ 26500 ] {} <Information> : Starting ClickHouse 21.5.6.6 with revision 54450, build id: C8ABEA9931027BC2CD235D154A8F9FD3A33E0406, PID 26500\r\n2021.06.01 15:58:54.989390 [ 26500 ] {} <Information> Application: starting up\r\n2021.06.01 15:58:55.068513 [ 26500 ] {} <Information> Application: Calculated checksum of the binary: 1746C796A13F32B2316D67ED127ABD4D, integrity check passed.\r\n```\r\nHere are the processes:\r\n```\r\nclickho+ 26498     1  0 Jun01 ?        00:00:00   clickhouse-watchdog        --config-file /etc/clickhouse-server/config.xml --pi\r\nclickho+ 26500 26498 83 Jun01 ?        1-00:41:34     /usr/bin/clickhouse-server --config-file /etc/clickhouse-server/config.xml\r\n```","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24891/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24891/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24887","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24887/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24887/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24887/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/24887","id":909715283,"node_id":"MDU6SXNzdWU5MDk3MTUyODM=","number":24887,"title":"About access restricting to system database . It's kinda cumbersome.","user":{"login":"den-crane","id":19737682,"node_id":"MDQ6VXNlcjE5NzM3Njgy","avatar_url":"https://avatars.githubusercontent.com/u/19737682?v=4","gravatar_id":"","url":"https://api.github.com/users/den-crane","html_url":"https://github.com/den-crane","followers_url":"https://api.github.com/users/den-crane/followers","following_url":"https://api.github.com/users/den-crane/following{/other_user}","gists_url":"https://api.github.com/users/den-crane/gists{/gist_id}","starred_url":"https://api.github.com/users/den-crane/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/den-crane/subscriptions","organizations_url":"https://api.github.com/users/den-crane/orgs","repos_url":"https://api.github.com/users/den-crane/repos","events_url":"https://api.github.com/users/den-crane/events{/privacy}","received_events_url":"https://api.github.com/users/den-crane/received_events","type":"User","site_admin":false},"labels":[{"id":845247686,"node_id":"MDU6TGFiZWw4NDUyNDc2ODY=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/usability","name":"usability","color":"ebf28c","default":false,"description":""},{"id":2011606513,"node_id":"MDU6TGFiZWwyMDExNjA2NTEz","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-rbac","name":"comp-rbac","color":"b5bcff","default":false,"description":"Access control related"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2021-06-02T17:15:46Z","updated_at":"2021-06-22T11:44:50Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"body":"```sql\r\ncreate user foo identified by '123';\r\nrevoke all on *.* from foo;\r\n\r\ncreate role RO;\r\n\r\nCREATE ROW POLICY ro_query_log_filter  ON system.query_log USING 1 AS RESTRICTIVE TO RO;\r\nCREATE ROW POLICY ro_part_log_filter  ON system.part_log USING 1 AS RESTRICTIVE TO RO;\r\nCREATE ROW POLICY ro_trace_log_filter ON  system.trace_log USING 1 AS RESTRICTIVE TO RO;\r\nCREATE ROW POLICY ro_processes_filter ON  system.processes USING 1 AS RESTRICTIVE TO RO;\r\n\r\ngrant RO to foo;\r\nALTER USER foo DEFAULT ROLE RO SETTINGS NONE;\r\n\r\n\r\nclickhouse-client -u  foo --password=123\r\n\r\nselect count() from system.trace_log;\r\n0 rows in set.\r\n\r\nselect count() from system.query_log;\r\n0 rows in set.\r\n\r\nselect count() from system.tables;\r\n0 rows in set.\r\n\r\nselect query from system.processes;\r\n0 rows in set\r\n\r\n```\r\n\r\nAlso this is a bug:\r\n\r\n```\r\nuse system;\r\nDB::Exception: foo: Not enough privileges.\r\n```\r\n\r\nGranting access to own rows in query_log/trace_log is even more cumbersome:\r\n\r\n```\r\nCREATE POLICY ${user_name}_query_log_filter ON system.query_log \r\nFOR SELECT USING initial_user='${user_name}' TO ${user_name};\r\n```\r\n\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24887/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24887/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24880","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24880/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24880/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24880/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/24880","id":909515243,"node_id":"MDU6SXNzdWU5MDk1MTUyNDM=","number":24880,"title":"Replicated database: check metadata consistency on server startup","user":{"login":"Blackmorse","id":13163993,"node_id":"MDQ6VXNlcjEzMTYzOTkz","avatar_url":"https://avatars.githubusercontent.com/u/13163993?v=4","gravatar_id":"","url":"https://api.github.com/users/Blackmorse","html_url":"https://github.com/Blackmorse","followers_url":"https://api.github.com/users/Blackmorse/followers","following_url":"https://api.github.com/users/Blackmorse/following{/other_user}","gists_url":"https://api.github.com/users/Blackmorse/gists{/gist_id}","starred_url":"https://api.github.com/users/Blackmorse/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Blackmorse/subscriptions","organizations_url":"https://api.github.com/users/Blackmorse/orgs","repos_url":"https://api.github.com/users/Blackmorse/repos","events_url":"https://api.github.com/users/Blackmorse/events{/privacy}","received_events_url":"https://api.github.com/users/Blackmorse/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null}],"state":"open","locked":false,"assignee":{"login":"tavplubix","id":14847450,"node_id":"MDQ6VXNlcjE0ODQ3NDUw","avatar_url":"https://avatars.githubusercontent.com/u/14847450?v=4","gravatar_id":"","url":"https://api.github.com/users/tavplubix","html_url":"https://github.com/tavplubix","followers_url":"https://api.github.com/users/tavplubix/followers","following_url":"https://api.github.com/users/tavplubix/following{/other_user}","gists_url":"https://api.github.com/users/tavplubix/gists{/gist_id}","starred_url":"https://api.github.com/users/tavplubix/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tavplubix/subscriptions","organizations_url":"https://api.github.com/users/tavplubix/orgs","repos_url":"https://api.github.com/users/tavplubix/repos","events_url":"https://api.github.com/users/tavplubix/events{/privacy}","received_events_url":"https://api.github.com/users/tavplubix/received_events","type":"User","site_admin":false},"assignees":[{"login":"tavplubix","id":14847450,"node_id":"MDQ6VXNlcjE0ODQ3NDUw","avatar_url":"https://avatars.githubusercontent.com/u/14847450?v=4","gravatar_id":"","url":"https://api.github.com/users/tavplubix","html_url":"https://github.com/tavplubix","followers_url":"https://api.github.com/users/tavplubix/followers","following_url":"https://api.github.com/users/tavplubix/following{/other_user}","gists_url":"https://api.github.com/users/tavplubix/gists{/gist_id}","starred_url":"https://api.github.com/users/tavplubix/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tavplubix/subscriptions","organizations_url":"https://api.github.com/users/tavplubix/orgs","repos_url":"https://api.github.com/users/tavplubix/repos","events_url":"https://api.github.com/users/tavplubix/events{/privacy}","received_events_url":"https://api.github.com/users/tavplubix/received_events","type":"User","site_admin":false}],"milestone":null,"comments":2,"created_at":"2021-06-02T13:40:07Z","updated_at":"2021-06-03T06:43:25Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"**The problem**\r\nSuppose we have a database (e.g. _db_) with Engine = Replicated  on the cluster. Let's make manually delete on one of the hosts\r\n`rm -R /var/lib/clickhouse/store/<db_uuid_prefix>/<db_uuid>/*`\r\n(or even better)\r\n`rm -R /var/lib/clickhouse/store`\r\nAfter restarting this host there are no tables restored at _db_\r\n\r\n**Feature**\r\nComparing to existing replication mechanizm of ReplicatedMergeTrees:\r\n_ReplicatedMergeTree_ has data, and this data represented as a _parts_. When manually deleting parts \r\n`rm -r -R /var/lib/clickhouse/<table_uuid_prefix>/<table_uuid>/*`\r\nafter a while Clickhouse will detect missing parts and restore them from the replica.\r\n\r\nIn case of Replicated database, table's sql-files can be treated as database data, and similar replication mechanizm expected\r\n\r\nThis makes process of restoring the lost data/metadata on the replicas almost fully-automated\r\n\r\n**Use case**\r\nWe are mounting _metadata_ folder to separate disk (something very reliable, like RAIDs). E.g. when disk with _store/_ is corrupted, we have to manually copy metadata from replica and restore symlinks at _metadata/_ folder,  (for _Atomic_ databases). \r\nIn case of using _Replicated_ Database with improvements described above, when disk with  _store/_  is corrupted, data and metadata will be restored automatically without manual intervention\r\n\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24880/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24880/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24876","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24876/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24876/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24876/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/24876","id":909351614,"node_id":"MDU6SXNzdWU5MDkzNTE2MTQ=","number":24876,"title":"How to avoid duplicate data into diff shards when shards changed?","user":{"login":"maskshell","id":5113279,"node_id":"MDQ6VXNlcjUxMTMyNzk=","avatar_url":"https://avatars.githubusercontent.com/u/5113279?v=4","gravatar_id":"","url":"https://api.github.com/users/maskshell","html_url":"https://github.com/maskshell","followers_url":"https://api.github.com/users/maskshell/followers","following_url":"https://api.github.com/users/maskshell/following{/other_user}","gists_url":"https://api.github.com/users/maskshell/gists{/gist_id}","starred_url":"https://api.github.com/users/maskshell/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/maskshell/subscriptions","organizations_url":"https://api.github.com/users/maskshell/orgs","repos_url":"https://api.github.com/users/maskshell/repos","events_url":"https://api.github.com/users/maskshell/events{/privacy}","received_events_url":"https://api.github.com/users/maskshell/received_events","type":"User","site_admin":false},"labels":[{"id":386401510,"node_id":"MDU6TGFiZWwzODY0MDE1MTA=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/question","name":"question","color":"bfdadc","default":true,"description":""},{"id":1669010018,"node_id":"MDU6TGFiZWwxNjY5MDEwMDE4","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/question-answered","name":"question-answered","color":"bfdadc","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2021-06-02T10:30:11Z","updated_at":"2021-06-02T15:59:57Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"I am using `ReplicatedReplacingMergeTree` engine and would like to insert data through `Distributed` table.\r\nAt a later stage, shards may be added from time to time.\r\nI want to prevent inserting duplicate data in different shard - as this would not be automatically de-duplicated.\r\n\r\nWell, the [documentation](https://clickhouse.tech/docs/en/engines/table-engines/special/distributed/) mentions that:\r\n> To select the shard that a row of data is sent to, the sharding expression is analyzed, and its remainder is taken from dividing it by the total weight of the shards. The row is sent to the shard that corresponds to the half-interval of the remainders from prev_weight to prev_weights + weight, where prev_weights is the total weight of the shards with the smallest number, and weight is the weight of this shard.\r\n\r\nSo, that means that if I change the weight of the shards, or add shards, then when I need to insert duplicate data later, they are likely to be distributed among different shards.\r\n\r\nSo my question is:\r\nHow do I design the sharding key for distributed tables to avoid inserting duplicate data into different shards?\r\nOr, how to use clickhouse to prevent that?","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24876/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24876/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24873","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24873/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24873/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24873/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/24873","id":909330189,"node_id":"MDU6SXNzdWU5MDkzMzAxODk=","number":24873,"title":"Optimize bitmap SQL","user":{"login":"onine007","id":24770345,"node_id":"MDQ6VXNlcjI0NzcwMzQ1","avatar_url":"https://avatars.githubusercontent.com/u/24770345?v=4","gravatar_id":"","url":"https://api.github.com/users/onine007","html_url":"https://github.com/onine007","followers_url":"https://api.github.com/users/onine007/followers","following_url":"https://api.github.com/users/onine007/following{/other_user}","gists_url":"https://api.github.com/users/onine007/gists{/gist_id}","starred_url":"https://api.github.com/users/onine007/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/onine007/subscriptions","organizations_url":"https://api.github.com/users/onine007/orgs","repos_url":"https://api.github.com/users/onine007/repos","events_url":"https://api.github.com/users/onine007/events{/privacy}","received_events_url":"https://api.github.com/users/onine007/received_events","type":"User","site_admin":false},"labels":[{"id":386401510,"node_id":"MDU6TGFiZWwzODY0MDE1MTA=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/question","name":"question","color":"bfdadc","default":true,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2021-06-02T10:06:07Z","updated_at":"2021-06-07T08:30:36Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"How to optimize this SQL:\r\n```sql\r\nSELECT\r\n    toString(event_dt) AS dt,\r\n    '' AS by_field,\r\n    toFloat64OrZero(toString(groupBitmap(events_user_id))) AS measure\r\nFROM \r\n(\r\n    SELECT\r\n        event_dt,\r\n        events.user_id AS events_user_id\r\n    FROM \r\n    (\r\n        SELECT\r\n            event_dt,\r\n            user_id\r\n        FROM events\r\n        WHERE ((events.event_dt >= 20210416) AND (events.event_dt <= 20210515) AND (events.client_id = 1) AND (events.event_id = 45)) AND (toInt32OrNull(events.event_attr1) IN (53))\r\n    ) AS events\r\n    INNER JOIN \r\n    (\r\n        SELECT\r\n            dt AS event_dt,\r\n            arrayJoin(bitmapToArray(measure)) AS user_id\r\n        FROM crowd_bitmap_result\r\n        PREWHERE (crowd_id = 2564) AND (status = 1) AND (dt >= 20210416) AND (dt <= 20210515)\r\n    ) AS crowds USING (user_id, event_dt)\r\n)\r\nGROUP BY event_dt\r\nORDER BY\r\n    event_dt ASC,\r\n    measure DESC\r\nLIMIT 200 BY dt;\r\n```\r\nwhen bitmap:measure Cardinality is  large  , it takes more memory  then , oom \r\n\r\nif any way to optimize it ?\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24873/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24873/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24864","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24864/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24864/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24864/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/24864","id":909052374,"node_id":"MDU6SXNzdWU5MDkwNTIzNzQ=","number":24864,"title":"ReplicatedReplacingMergeTree ERROR，after ck restart","user":{"login":"mythmoon","id":26134665,"node_id":"MDQ6VXNlcjI2MTM0NjY1","avatar_url":"https://avatars.githubusercontent.com/u/26134665?v=4","gravatar_id":"","url":"https://api.github.com/users/mythmoon","html_url":"https://github.com/mythmoon","followers_url":"https://api.github.com/users/mythmoon/followers","following_url":"https://api.github.com/users/mythmoon/following{/other_user}","gists_url":"https://api.github.com/users/mythmoon/gists{/gist_id}","starred_url":"https://api.github.com/users/mythmoon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mythmoon/subscriptions","organizations_url":"https://api.github.com/users/mythmoon/orgs","repos_url":"https://api.github.com/users/mythmoon/repos","events_url":"https://api.github.com/users/mythmoon/events{/privacy}","received_events_url":"https://api.github.com/users/mythmoon/received_events","type":"User","site_admin":false},"labels":[{"id":386401510,"node_id":"MDU6TGFiZWwzODY0MDE1MTA=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/question","name":"question","color":"bfdadc","default":true,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2021-06-02T03:36:26Z","updated_at":"2021-07-03T19:23:02Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"ReplicatedReplacingMergeTree ERROR  after  ck restart;\r\n\r\nApplication: Shut down storages.\r\n2021.06.02 03:26:37.072609 [ 56 ] {} <Debug> Application: Destroyed global context.\r\n2021.06.02 03:26:37.105394 [ 56 ] {} <Error> Application: DB::Exception: The local set of parts of table RTDC.history_replace doesn't look like the set of parts in ZooKeeper: 18.10 million rows of 34.31 million total rows in filesystem are suspicious. There are 1603 unexpected parts with 18096541 rows (234 of them is not just-written with 14646822 rows), 0 missing parts (with 0 blocks).: Cannot attach table `RTDC`.`history_replace` from metadata file /var/lib/clickhouse/metadata/RTDC/history_replace.sql from queryATTACH TABLE RTDC.history_replace (`itemid` UInt64, `clock` UInt64, `ns` UInt64, `clockns` UInt64, `count` String, `value` String, `type` UInt8) ENGINE = ReplicatedReplacingMergeTree('/clickhouse/tables/{shard}/RTDC/history_replace', '{replica}', clockns) PARTITION BY toYYYYMMDD(FROM_UNIXTIME(clock)) PRIMARY KEY itemid ORDER BY itemid SETTINGS index_granularity = 8192, merge_with_ttl_timeout = 5: while loading database `RTDC` from path /var/lib/clickhouse/metadata/RTDC\r\n2021.06.02 03:26:37.105524 [ 56 ] {} <Information> Application: shutting down\r\n2021.06.02 03:26:37.105559 [ 56 ] {} <Debug> Application: Uninitializing subsystem: Logging Subsystem\r\n2021.06.02 03:26:37.105859 [ 57 ] {} <Information> BaseDaemon: Stop SignalListener thread\r\n2021.06.02 03:26:37.170576 [ 55 ] {} <Information> Application: Child process exited normally with cod\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24864/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24864/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24862","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24862/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24862/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24862/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/24862","id":908635754,"node_id":"MDU6SXNzdWU5MDg2MzU3NTQ=","number":24862,"title":"bloom_filter + has = Exception: First argument for function has must be an array","user":{"login":"den-crane","id":19737682,"node_id":"MDQ6VXNlcjE5NzM3Njgy","avatar_url":"https://avatars.githubusercontent.com/u/19737682?v=4","gravatar_id":"","url":"https://api.github.com/users/den-crane","html_url":"https://github.com/den-crane","followers_url":"https://api.github.com/users/den-crane/followers","following_url":"https://api.github.com/users/den-crane/following{/other_user}","gists_url":"https://api.github.com/users/den-crane/gists{/gist_id}","starred_url":"https://api.github.com/users/den-crane/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/den-crane/subscriptions","organizations_url":"https://api.github.com/users/den-crane/orgs","repos_url":"https://api.github.com/users/den-crane/repos","events_url":"https://api.github.com/users/den-crane/events{/privacy}","received_events_url":"https://api.github.com/users/den-crane/received_events","type":"User","site_admin":false},"labels":[{"id":845247686,"node_id":"MDU6TGFiZWw4NDUyNDc2ODY=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/usability","name":"usability","color":"ebf28c","default":false,"description":""},{"id":1357507723,"node_id":"MDU6TGFiZWwxMzU3NTA3NzIz","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-skipidx","name":"comp-skipidx","color":"b5bcff","default":false,"description":"Data skipping indices"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-06-01T19:49:06Z","updated_at":"2021-06-01T20:33:41Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"body":"```sql\r\ncreate table t ( c UInt8, INDEX x1 c TYPE bloom_filter GRANULARITY 3\r\n) Engine=MergeTree order by tuple();\r\n\r\ninsert into t select number%5+100 from numbers(5000);\r\n\r\nSELECT count(*) FROM t WHERE has([1, 2], c)\r\n\r\n(version 21.7.1): DB::Exception: First argument for function has must be an array..\r\n\r\n```\r\n\r\nwa:\r\n\r\n```sql\r\nSELECT count(*) FROM t WHERE has(materialize([1, 2]), c)\r\n```\r\n\r\nbut to use bloom_filter index \r\n\r\n```\r\nSELECT count(*) FROM t WHERE c = 1 or c = 2\r\n```","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24862/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24862/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24828","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24828/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24828/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24828/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/24828","id":907829452,"node_id":"MDU6SXNzdWU5MDc4Mjk0NTI=","number":24828,"title":"Load data failed with local file && s3 table engine.","user":{"login":"xiaolong-sn","id":63276446,"node_id":"MDQ6VXNlcjYzMjc2NDQ2","avatar_url":"https://avatars.githubusercontent.com/u/63276446?v=4","gravatar_id":"","url":"https://api.github.com/users/xiaolong-sn","html_url":"https://github.com/xiaolong-sn","followers_url":"https://api.github.com/users/xiaolong-sn/followers","following_url":"https://api.github.com/users/xiaolong-sn/following{/other_user}","gists_url":"https://api.github.com/users/xiaolong-sn/gists{/gist_id}","starred_url":"https://api.github.com/users/xiaolong-sn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xiaolong-sn/subscriptions","organizations_url":"https://api.github.com/users/xiaolong-sn/orgs","repos_url":"https://api.github.com/users/xiaolong-sn/repos","events_url":"https://api.github.com/users/xiaolong-sn/events{/privacy}","received_events_url":"https://api.github.com/users/xiaolong-sn/received_events","type":"User","site_admin":false},"labels":[{"id":1575085465,"node_id":"MDU6TGFiZWwxNTc1MDg1NDY1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/unexpected%20behaviour","name":"unexpected behaviour","color":"e088ca","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2021-06-01T03:13:28Z","updated_at":"2021-06-07T07:02:58Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"**Describe the unexpected behaviour**\r\nI try to load data from Hive to Clickhouse using the following steps:\r\n1. Transform data into `Values` formatted and store the record into S3 using Spark. \r\n2. Download data to local disk and use the following command:\r\n```clickhouse-client -q \"INSERT INTO test VALUES\" < local_file.txt```\r\nThe command got `Aborted` within seconds. And the `clickhouse-server.log` does not have any error messages.\r\n3. Then I try to use S3 table engine as an alternative, but after running for less than an hour, the machine got crashed with crash log like this:\r\n```\r\nevent_date:   2021-05-30\r\nevent_time:   2021-05-30 16:09:52\r\ntimestamp_ns: 1622390992908493324\r\nsignal:       11\r\nthread_id:    5852\r\nquery_id:     \r\ntrace:        [260387779,260014973,246032691,256023134,256088374,256155167,237499070,258232149,140086862,255242890,252709160,252784300,254534247,139472504,139480623,139461711,139476707,139641318646795,139641315741855]\r\ntrace_full:   ['2. tcache_bin_flush_small @ 0xf8533c3 in /usr/lib/debug/.build-id/b7/a1f7ac61cfed4dd48ecdaa5331d29c0208c594.debug','3. sdallocx_default @ 0xf7f837d in /usr/lib/debug/.build-id/b7/a1f7ac61cfed4dd48ecdaa5331d29c0208c594.debug','4. std::__1::__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<DB::IDataType const> >, std::__1::__unordered_map_hasher<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<DB::IDataType const> >, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<DB::IDataType const> >, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<DB::IDataType const> > > >::~__hash_table() @ 0xeaa2933 in /usr/lib/debug/.build-id/b7/a1f7ac61cfed4dd48ecdaa5331d29c0208c594.debug','5. DB::IMergeTreeReader::~IMergeTreeReader() @ 0xf429a5e in /usr/lib/debug/.build-id/b7/a1f7ac61cfed4dd48ecdaa5331d29c0208c594.debug','6. DB::MergeTreeReaderWide::~MergeTreeReaderWide() @ 0xf439936 in /usr/lib/debug/.build-id/b7/a1f7ac61cfed4dd48ecdaa5331d29c0208c594.debug','7. DB::MergeTreeSequentialSource::~MergeTreeSequentialSource() @ 0xf449e1f in /usr/lib/debug/.build-id/b7/a1f7ac61cfed4dd48ecdaa5331d29c0208c594.debug','8. DB::Pipe::~Pipe() @ 0xe27f2be in /usr/lib/debug/.build-id/b7/a1f7ac61cfed4dd48ecdaa5331d29c0208c594.debug','9. DB::PipelineExecutingBlockInputStream::~PipelineExecutingBlockInputStream() @ 0xf644f55 in /usr/lib/debug/.build-id/b7/a1f7ac61cfed4dd48ecdaa5331d29c0208c594.debug','10. std::__1::__vector_base<std::__1::shared_ptr<DB::IBlockInputStream>, std::__1::allocator<std::__1::shared_ptr<DB::IBlockInputStream> > >::~__vector_base() @ 0x8598e4e in /usr/lib/debug/.build-id/b7/a1f7ac61cfed4dd48ecdaa5331d29c0208c594.debug','11. DB::MergeTreeDataMergerMutator::mergePartsToTemporaryPart(DB::FutureMergedMutatedPart const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::BackgroundProcessListEntry<DB::MergeListElement, DB::MergeInfo>&, std::__1::shared_ptr<DB::RWLockImpl::LockHolderImpl>&, long, DB::Context const&, std::__1::unique_ptr<DB::IReservation, std::__1::default_delete<DB::IReservation> > const&, bool, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0xf36b28a in /usr/lib/debug/.build-id/b7/a1f7ac61cfed4dd48ecdaa5331d29c0208c594.debug','12. DB::StorageMergeTree::mergeSelectedParts(std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, DB::StorageMergeTree::MergeMutateSelectedEntry&, std::__1::shared_ptr<DB::RWLockImpl::LockHolderImpl>&) @ 0xf100928 in /usr/lib/debug/.build-id/b7/a1f7ac61cfed4dd48ecdaa5331d29c0208c594.debug','13. bool std::__1::__function::__policy_invoker<bool ()>::__call_impl<std::__1::__function::__default_alloc_func<DB::StorageMergeTree::getDataProcessingJob()::$_4, bool ()> >(std::__1::__function::__policy_storage const*) @ 0xf112eac in /usr/lib/debug/.build-id/b7/a1f7ac61cfed4dd48ecdaa5331d29c0208c594.debug','14. void std::__1::__function::__policy_invoker<void ()>::__call_impl<std::__1::__function::__default_alloc_func<DB::IBackgroundJobExecutor::jobExecutingTask()::$_0, void ()> >(std::__1::__function::__policy_storage const*) @ 0xf2be267 in /usr/lib/debug/.build-id/b7/a1f7ac61cfed4dd48ecdaa5331d29c0208c594.debug','15. ThreadPoolImpl<ThreadFromGlobalPool>::worker(std::__1::__list_iterator<ThreadFromGlobalPool, void*>) @ 0x8502e78 in /usr/lib/debug/.build-id/b7/a1f7ac61cfed4dd48ecdaa5331d29c0208c594.debug','16. ThreadFromGlobalPool::ThreadFromGlobalPool<void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::\\'lambda1\\'()>(void&&, void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::\\'lambda1\\'()&&...)::\\'lambda\\'()::operator()() @ 0x8504e2f in /usr/lib/debug/.build-id/b7/a1f7ac61cfed4dd48ecdaa5331d29c0208c594.debug','17. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x850044f in /usr/lib/debug/.build-id/b7/a1f7ac61cfed4dd48ecdaa5331d29c0208c594.debug','18. void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::\\'lambda1\\'()> >(void*) @ 0x8503ee3 in /usr/lib/debug/.build-id/b7/a1f7ac61cfed4dd48ecdaa5331d29c0208c594.debug','19. start_thread @ 0x740b in /usr/lib64/libpthread-2.26.so','20. clone @ 0xed09f in /usr/lib64/libc-2.26.so']\r\nversion:      ClickHouse 21.2.8.31\r\nrevision:     54447\r\nbuild_id:     B7A1F7AC61CFED4DD48ECDAA5331D29C0208C594\r\n```\r\n\r\n\r\nand the record size is in a total of 3TB/day and 300MB/file.\r\n\r\n**How to reproduce**\r\n* Which ClickHouse server version to use\r\n21.2.8.31\r\n* Which interface to use, if matters\r\nclickhouse-client && s3 table engine\r\n* Non-default settings, if any\r\nEnables Map\r\n* `CREATE TABLE` statements for all tables involved\r\n```\r\nCREATE TABLE test\r\nON CLUSTER ha_cluster(\r\n  `field_0` String,\r\n  `field_1` String,\r\n  `field_2` Nullable(Int32),\r\n  `field_3` Nullable(Int16),\r\n  `field_4` Nullable(Int32),\r\n  `field_5` Nullable(String),\r\n  `field_6` Nullable(String),\r\n  `field_7` Nullable(String),\r\n  `field_8` Nullable(String),\r\n  `field_9` Nullable(String),\r\n  `field_10` Nullable(String),\r\n  `field_11` Nullable(String),\r\n  `field_12` Nullable(String),\r\n  `field_13` Nullable(String),\r\n  `field_14` Nullable(String),\r\n  `field_15` Nullable(String),\r\n  `field_16` Nullable(String),\r\n  `field_17` Nullable(String),\r\n  `field_18` Nullable(String),\r\n  `field_19` Nullable(Int32),\r\n  `field_20` Nullable(Int32),\r\n  `field_21` Nullable(Int32),\r\n  `field_22` Nullable(Int32),\r\n  `field_23` Nullable(Int32),\r\n  `field_24` Nullable(Int32),\r\n  `field_25` Nullable(Int32),\r\n  `field_26` Nullable(Int32),\r\n  `field_27` Nullable(Int32),\r\n  `field_28` Nullable(Int32),\r\n  `field_29` Nullable(Float64),\r\n  `field_30` Nullable(Float64),\r\n  `field_31` Map(String,Nullable(Int16)),\r\n  `field_32` Nullable(Float64),\r\n  `field_33` Nullable(Float64),\r\n  `field_34` Nullable(Float64),\r\n  `field_35` Nullable(String),\r\n  `field_36` Nullable(Int16),\r\n  `field_37` Nullable(Int16),\r\n  `field_38` Nullable(Int16),\r\n  `field_39` Nullable(Int16),\r\n  `field_40` Nullable(Int16),\r\n  `field_41` Nullable(Int32),\r\n  `field_42` Nullable(Int16),\r\n  `field_43` Nullable(Int16),\r\n  `field_44` Nullable(Int16),\r\n  `field_45` Nullable(Float64),\r\n  `field_46` Nullable(Int16),\r\n  `field_47` boolean,\r\n  `field_48` Array(Nullable(Int16)),\r\n  `field_49` Array(Nullable(Float64)),\r\n  `field_50` Map(String,Nullable(Int16)),\r\n  `field_51` Array(Nullable(String)),\r\n  `field_52` Array(Nullable(Float64)),\r\n  `field_53` Nullable(Float64),\r\n  `field_54` Nullable(Int16),\r\n  `field_55` Nullable(String),\r\n  `field_56` Nullable(Float64),\r\n  `field_57` Map(String,Nullable(Float64)),\r\n  `field_58` Nullable(String),\r\n  `field_59` Nullable(Int16),\r\n  `field_60` Array(Nullable(Float64)),\r\n  `field_61` Array(Nullable(Float64)),\r\n  `field_62` Array(Nullable(Float64)),\r\n  `field_63` Map(String,Nullable(Float64)),\r\n  `field_64` Map(String,Nullable(String)),\r\n  `field_65` Nullable(Int16),\r\n  `field_66` Nullable(Int16),\r\n  `field_67` Nullable(String),\r\n  `field_68` Nullable(String),\r\n  `field_69` Nullable(String),\r\n  `field_70` Nullable(Int16),\r\n  `field_71` Nullable(Int16),\r\n  `field_72` Nullable(Int16),\r\n  `field_73` Map(Int32,Nullable(Int32)),\r\n  `field_74` Nullable(String),\r\n  `field_75` Array(Nullable(String)),\r\n  `field_76` Map(String,Nullable(Float64)),\r\n  `field_77` Nullable(Int16),\r\n  `field_78` Array(Nullable(String)),\r\n  `field_79` Nullable(String),\r\n  `field_80` Nullable(Int32),\r\n  `field_81` Array(Map(String,Nullable(String))),\r\n  `field_82` Nullable(String),\r\n  `field_83` Nullable(String),\r\n  `edition` String,\r\n  `dt` String,\r\n  `hh` String\r\n) ENGINE = MergeTree()\r\nPARTITION BY CONCAT(`edition`, ' ', `dt`,' ',`hh`)\r\nORDER BY `field_0`;\r\n```\r\n```\r\nCREATE TABLE test_s3\r\nON CLUSTER ha_cluster(\r\n  `field_0` String,\r\n  `field_1` String,\r\n  `field_2` Nullable(Int32),\r\n  `field_3` Nullable(Int16),\r\n  `field_4` Nullable(Int32),\r\n  `field_5` Nullable(String),\r\n  `field_6` Nullable(String),\r\n  `field_7` Nullable(String),\r\n  `field_8` Nullable(String),\r\n  `field_9` Nullable(String),\r\n  `field_10` Nullable(String),\r\n  `field_11` Nullable(String),\r\n  `field_12` Nullable(String),\r\n  `field_13` Nullable(String),\r\n  `field_14` Nullable(String),\r\n  `field_15` Nullable(String),\r\n  `field_16` Nullable(String),\r\n  `field_17` Nullable(String),\r\n  `field_18` Nullable(String),\r\n  `field_19` Nullable(Int32),\r\n  `field_20` Nullable(Int32),\r\n  `field_21` Nullable(Int32),\r\n  `field_22` Nullable(Int32),\r\n  `field_23` Nullable(Int32),\r\n  `field_24` Nullable(Int32),\r\n  `field_25` Nullable(Int32),\r\n  `field_26` Nullable(Int32),\r\n  `field_27` Nullable(Int32),\r\n  `field_28` Nullable(Int32),\r\n  `field_29` Nullable(Float64),\r\n  `field_30` Nullable(Float64),\r\n  `field_31` Map(String,Nullable(Int16)),\r\n  `field_32` Nullable(Float64),\r\n  `field_33` Nullable(Float64),\r\n  `field_34` Nullable(Float64),\r\n  `field_35` Nullable(String),\r\n  `field_36` Nullable(Int16),\r\n  `field_37` Nullable(Int16),\r\n  `field_38` Nullable(Int16),\r\n  `field_39` Nullable(Int16),\r\n  `field_40` Nullable(Int16),\r\n  `field_41` Nullable(Int32),\r\n  `field_42` Nullable(Int16),\r\n  `field_43` Nullable(Int16),\r\n  `field_44` Nullable(Int16),\r\n  `field_45` Nullable(Float64),\r\n  `field_46` Nullable(Int16),\r\n  `field_47` boolean,\r\n  `field_48` Array(Nullable(Int16)),\r\n  `field_49` Array(Nullable(Float64)),\r\n  `field_50` Map(String,Nullable(Int16)),\r\n  `field_51` Array(Nullable(String)),\r\n  `field_52` Array(Nullable(Float64)),\r\n  `field_53` Nullable(Float64),\r\n  `field_54` Nullable(Int16),\r\n  `field_55` Nullable(String),\r\n  `field_56` Nullable(Float64),\r\n  `field_57` Map(String,Nullable(Float64)),\r\n  `field_58` Nullable(String),\r\n  `field_59` Nullable(Int16),\r\n  `field_60` Array(Nullable(Float64)),\r\n  `field_61` Array(Nullable(Float64)),\r\n  `field_62` Array(Nullable(Float64)),\r\n  `field_63` Map(String,Nullable(Float64)),\r\n  `field_64` Map(String,Nullable(String)),\r\n  `field_65` Nullable(Int16),\r\n  `field_66` Nullable(Int16),\r\n  `field_67` Nullable(String),\r\n  `field_68` Nullable(String),\r\n  `field_69` Nullable(String),\r\n  `field_70` Nullable(Int16),\r\n  `field_71` Nullable(Int16),\r\n  `field_72` Nullable(Int16),\r\n  `field_73` Map(Int32,Nullable(Int32)),\r\n  `field_74` Nullable(String),\r\n  `field_75` Array(Nullable(String)),\r\n  `field_76` Map(String,Nullable(Float64)),\r\n  `field_77` Nullable(Int16),\r\n  `field_78` Array(Nullable(String)),\r\n  `field_79` Nullable(String),\r\n  `field_80` Nullable(Int32),\r\n  `field_81` Array(Map(String,Nullable(String))),\r\n  `field_82` Nullable(String),\r\n  `field_83` Nullable(String),\r\n  `edition` String,\r\n  `dt` String,\r\n  `hh` String\r\n) ENGINE = S3('','','')\r\n```\r\n\r\n* Sample data for all these tables, use [clickhouse-obfuscator](https://github.com/ClickHouse/ClickHouse/blob/master/programs/obfuscator/Obfuscator.cpp#L42-L80) if necessary\r\n```\r\nfield_0:                 01F5BQ0A26YT320T5HQ36M1SWH\r\nfield_1:                 +/Uwp32RSI6zbtVJRxexXw\r\nfield_2:                 -54520655\r\nfield_3:                 33\r\nfield_4:                 1620669638\r\nfield_5:                 REFRESH\r\nfield_6:                 bUr-SseYRzOB9UAhebnkxA\r\nfield_7:                 ᴺᵁᴸᴸ\r\nfield_8:                 ᴺᵁᴸᴸ\r\nfield_9:                 ios\r\nfield_10:                cr_ja_top\r\nfield_11:                default\r\nfield_12:                b_ja_home_top_second_block\r\nfield_13:                8.38.0\r\nfield_14:                wifi\r\nfield_15:                iPhone10,1\r\nfield_16:                ja_jp\r\nfield_17:                Asia/Tokyo\r\nfield_18:                14.5.1\r\nfield_19:                1\r\nfield_20:                0\r\nfield_21:                0\r\nfield_22:                0\r\nfield_23:                0\r\nfield_24:                1620670295\r\nfield_25:                1620670228\r\nfield_26:                0\r\nfield_27:                0\r\nfield_28:                0\r\nfield_29:                0\r\nfield_30:                0\r\nfield_31:                {}\r\nfield_32:                0\r\nfield_33:                0\r\nfield_34:                0\r\nfield_35:                female\r\nfield_36:                0\r\nfield_37:                1459\r\nfield_38:                1523\r\nfield_39:                600\r\nfield_40:                590\r\nfield_41:                1620642645\r\nfield_42:                0\r\nfield_43:                0\r\nfield_44:                0\r\nfield_45:                164872\r\nfield_46:                1\r\nfield_47:                1\r\nfield_48:                [60,60]\r\nfield_49:                [0.400385,0.400385]\r\nfield_50:                {'must_read':10,'two_tower':197,'popular':40,'keyword':300,'video':59,'publisher':108,'matrixcf':86,'entity':120}\r\nfield_51:                ['matrixcf']\r\nfield_52:                [0.220577]\r\nfield_53:                0.2276\r\nfield_54:                0\r\nfield_55:                JA_JP_LIFE_CAREER\r\nfield_56:                0\r\nfield_57:                {}\r\nfield_58:                ᴺᵁᴸᴸ\r\nfield_59:                0\r\nfield_60:                [0.500839,0.494189,66.90909]\r\nfield_61:                [0.495399,0.489395,65.981544]\r\nfield_62:                [0.15332,0.151855,15.0625]\r\nfield_63:                {'cg.cnt_pull.video':80,'a.t_u':19,'cg.cnt_pull.lastn':0,'d.v.min_i':8,'cg.cnt_pull.entity':576,'se:cr_ja_top:11':8,'cg.cnt.publisher':108,'cg.cnt.video':59,'a.pv':37343,'cg.cnt_pull.popular':197,'0.his.cnt':0,'d.v.v_ctr':0.060302,'sv_cnt':60,'r.dnn.cali':0.644776,'r.link.total':792,'cg.cnt_pull.keyword':3000,'0.xid.cnt':0,'dnn_score':0.400385,'a.imp':744935,'cg.cnt_pull.matrixcf':649,'cg.cnt.matrixcf':86,'cg.cnt.mustread':10,'cg.cnt_pull.search':0,'cg.cnt.twotower':197,'d.v.max_i':11,'cg.cnt_pull.twotower':720,'cg.cnt.entity':120,'cg.cnt_pull.mustread':10,'cg.cnt.keyword':300,'cg.cnt.popular':40,'cg.cnt.search':0,'d.cate.preload.size':0,'cg.cnt.lastn':0,'cg.cnt_pull.publisher':324}\r\nfield_64:                {'9.2':'0','1.2':'2','3.1':'60','3.4':'1','1.1':'01F5BQ0A26YT320T5HQ36M1SWH','3.5':'1','1.5':'1','9.1':'00155c39c60a00674b1f83db53','1.4':'33','1.3':'1'}\r\nfield_65:                144\r\nfield_66:                0\r\nfield_67:                10.0.103.75\r\nfield_68:                01155c392f0a00674b89f68782\r\nfield_69:                00155c39c60a00674b1f83db53\r\nfield_70:                0\r\nfield_71:                0\r\nfield_72:                200\r\nfield_73:                {1518345264:1620640725,-482339596:1620639462,348131337:1620639961,1409290355:1620641247,-2118112083:1620636105,318777772:1620634509,977283240:1620642462,-1354753577:1620640945,318775227:1620636278,1971327373:1620634958,-1300222102:1620634749,-1472191413:1620635470,1761616014:1620640686,1094724472:1620640106,-1161814007:1620641909,-54525663:1620637945,-1270866599:1620635634,1254098231:1620639522,-293593039:1620635683,1308629861:1620638118,1929386446:1620637487,1811944183:1620635894,113252683:1620636544,-1329582116:1620639327,-708832093:1620634773,-457177279:1620641643,591408361:1620640362,-822077132:1620636254,-1166012583:1620634966,1866472071:1620639628,1329601959:1620640448,612375408:1620635272,-1589633735:1620640386,-444586911:1620641974,-494922009:1620640081,1908409497:1620639989,-1149228167:1620638000,457183575:1620640325,-20960418:1620640280,1950353769:1620640029,-1593833265:1620635497,763374103:1620641488,-536862589:1620637608,1690306564:1620637753,-1543494413:1620642136,473965173:1620635766,1115693978:1620634444,805309603:1620640471,-868212316:1620637643,-1971313771:1620636705}\r\nfield_74:                ᴺᵁᴸᴸ\r\nfield_75:                ['dnn:jp-v1','feed','ranker:dnn-ensemble','pg:default-jp','vm:dnn_simple_v3','snab:foryou_video:test']\r\nfield_76:                {'r:c2_m_fv':0.010741}\r\nfield_77:                0\r\nfield_78:                ['Japan',NULL,NULL,NULL]\r\nfield_79:                02203\r\nfield_80:                0\r\nfield_81:                [{'ns':'\"TMP-GW\"','name':'\"2105-jpgw-evergreen\"','grp':'\"test\"','rev':'0'}]\r\nfield_82:                b_ja_home_top_second_block\r\nfield_83:                2021-05-11 03:00:38 +0900 2\r\nedition:                 ja_JP\r\ndt:                         2021-05-10\r\nhh:                        18\r\n```\r\n\r\n* Queries to run that lead to unexpected result\r\n```clickhouse-client -q \"INSERT INTO test VALUES\" < local_file```\r\n```clickhouse-client -q \"INSERT INTO test SELECT * FROM test_s3```\r\n**Expected behavior**\r\nData loading succeeds.\r\n\r\n**Error message and/or stacktrace**\r\nNo error message\r\n\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24828/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24828/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24810","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24810/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24810/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24810/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/24810","id":907564985,"node_id":"MDU6SXNzdWU5MDc1NjQ5ODU=","number":24810,"title":"Projections: combine resultset from main table and projection.","user":{"login":"UnamedRus","id":9449405,"node_id":"MDQ6VXNlcjk0NDk0MDU=","avatar_url":"https://avatars.githubusercontent.com/u/9449405?v=4","gravatar_id":"","url":"https://api.github.com/users/UnamedRus","html_url":"https://github.com/UnamedRus","followers_url":"https://api.github.com/users/UnamedRus/followers","following_url":"https://api.github.com/users/UnamedRus/following{/other_user}","gists_url":"https://api.github.com/users/UnamedRus/gists{/gist_id}","starred_url":"https://api.github.com/users/UnamedRus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/UnamedRus/subscriptions","organizations_url":"https://api.github.com/users/UnamedRus/orgs","repos_url":"https://api.github.com/users/UnamedRus/repos","events_url":"https://api.github.com/users/UnamedRus/events{/privacy}","received_events_url":"https://api.github.com/users/UnamedRus/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":3045757785,"node_id":"MDU6TGFiZWwzMDQ1NzU3Nzg1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-projections","name":"comp-projections","color":"b5bcff","default":false,"description":""}],"state":"open","locked":false,"assignee":{"login":"amosbird","id":5085485,"node_id":"MDQ6VXNlcjUwODU0ODU=","avatar_url":"https://avatars.githubusercontent.com/u/5085485?v=4","gravatar_id":"","url":"https://api.github.com/users/amosbird","html_url":"https://github.com/amosbird","followers_url":"https://api.github.com/users/amosbird/followers","following_url":"https://api.github.com/users/amosbird/following{/other_user}","gists_url":"https://api.github.com/users/amosbird/gists{/gist_id}","starred_url":"https://api.github.com/users/amosbird/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/amosbird/subscriptions","organizations_url":"https://api.github.com/users/amosbird/orgs","repos_url":"https://api.github.com/users/amosbird/repos","events_url":"https://api.github.com/users/amosbird/events{/privacy}","received_events_url":"https://api.github.com/users/amosbird/received_events","type":"User","site_admin":false},"assignees":[{"login":"amosbird","id":5085485,"node_id":"MDQ6VXNlcjUwODU0ODU=","avatar_url":"https://avatars.githubusercontent.com/u/5085485?v=4","gravatar_id":"","url":"https://api.github.com/users/amosbird","html_url":"https://github.com/amosbird","followers_url":"https://api.github.com/users/amosbird/followers","following_url":"https://api.github.com/users/amosbird/following{/other_user}","gists_url":"https://api.github.com/users/amosbird/gists{/gist_id}","starred_url":"https://api.github.com/users/amosbird/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/amosbird/subscriptions","organizations_url":"https://api.github.com/users/amosbird/orgs","repos_url":"https://api.github.com/users/amosbird/repos","events_url":"https://api.github.com/users/amosbird/events{/privacy}","received_events_url":"https://api.github.com/users/amosbird/received_events","type":"User","site_admin":false}],"milestone":null,"comments":2,"created_at":"2021-05-31T15:29:48Z","updated_at":"2022-01-09T18:05:05Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"**Use case**\r\nAllow to combine output from projection and non aggregated main table.\r\n\r\nAllow to use less precise functions in GROUP BY keys.\r\n\r\n**Describe the solution you'd like**\r\n```\r\n\r\nDROP TABLE IF EXISTS tp;\r\n\r\nCREATE TABLE tp\r\n(\r\n    `type` Int32,\r\n    `ts` DateTime,\r\n    `eventcnt` UInt64,\r\n    PROJECTION p\r\n    (\r\n        SELECT\r\n            type,\r\n            toStartOfHour(ts),\r\n            sum(eventcnt)\r\n        GROUP BY\r\n            type,\r\n            toStartOfHour(ts)\r\n    )\r\n)\r\nENGINE = MergeTree\r\nORDER BY (type, ts)\r\n\r\nINSERT INTO tp SELECT\r\n    number % 3,\r\n    toDateTime('2021-04-05 00:00:00') + toIntervalMinute(number * 35),\r\n    1\r\nFROM numbers(1000)\r\n\r\nset allow_experimental_projection_optimization = 1, force_optimize_projection = 1;\r\n\r\nSELECT\r\n    type,\r\n    sum(eventcnt)\r\nFROM tp\r\nWHERE ts > '2021-04-05 00:00:55'\r\nGROUP BY type\r\n\r\nQuery id: b79de24a-44e1-4956-b79f-17544b1456e7\r\n\r\n\r\n0 rows in set. Elapsed: 0.002 sec.\r\n\r\nReceived exception from server (version 21.6.1):\r\nCode: 584. DB::Exception: Received from localhost:9000. DB::Exception: No projection is used when allow_experimental_projection_optimization = 1.\r\n\r\n\r\nBut clickhouse should be able to optimize it it something like that:\r\n\r\nSELECT\r\n    type,\r\n    sum(x)\r\nFROM\r\n(\r\n    SELECT\r\n        type,\r\n        sum(eventcnt) AS x\r\n    FROM tp\r\n    WHERE (ts > '2021-04-05 00:00:55') AND (ts < toStartOfHour(toDateTime('2021-04-05 00:00:55')))\r\n    GROUP BY type\r\n    UNION ALL\r\n    SELECT\r\n        type,\r\n        sum(eventcnt) AS x\r\n    FROM tp\r\n    WHERE toStartOfHour(ts) > '2021-04-05 00:00:55'\r\n    GROUP BY type\r\n)\r\nGROUP BY type\r\n\r\nQuery id: d15dcef3-8b15-4046-8bc8-840dfeaba2df\r\n\r\n┌─type─┬─sum(x)─┐\r\n│    0 │    333 │\r\n│    2 │    333 │\r\n│    1 │    332 │\r\n└──────┴────────┘\r\n\r\n\r\nselect type, sum(eventcnt)　from tp GROUP BY type, toStartOfDay(ts);\r\n\r\nSELECT\r\n    type,\r\n    sum(eventcnt)\r\nFROM tp\r\nGROUP BY\r\n    type,\r\n    toStartOfDay(ts)\r\n\r\nQuery id: deec4c69-c841-4102-94c4-d52ab75b30a1\r\n\r\n\r\n0 rows in set. Elapsed: 0.004 sec.\r\n\r\nReceived exception from server (version 21.6.1):\r\nCode: 584. DB::Exception: Received from localhost:9000. DB::Exception: No projection is used when allow_experimental_projection_optimization = 1.\r\n\r\nSELECT\r\n    type,\r\n    sum(eventcnt)\r\nFROM tp\r\nGROUP BY\r\n    type,\r\n    toStartOfDay(toStartOfHour(ts))\r\nFORMAT Null\r\n\r\nQuery id: 1066c944-adad-4a7a-97be-eb342de1196c\r\n\r\nOk.\r\n\r\n0 rows in set. Elapsed: 0.004 sec. Processed 1.00 thousand rows, 28.29 KB (263.60 thousand rows/s., 7.46 MB/s.)\r\n\r\n```","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24810/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24810/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24796","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24796/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24796/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24796/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/24796","id":907365620,"node_id":"MDU6SXNzdWU5MDczNjU2MjA=","number":24796,"title":"PROXYv1 improvements","user":{"login":"filimonov","id":1549571,"node_id":"MDQ6VXNlcjE1NDk1NzE=","avatar_url":"https://avatars.githubusercontent.com/u/1549571?v=4","gravatar_id":"","url":"https://api.github.com/users/filimonov","html_url":"https://github.com/filimonov","followers_url":"https://api.github.com/users/filimonov/followers","following_url":"https://api.github.com/users/filimonov/following{/other_user}","gists_url":"https://api.github.com/users/filimonov/gists{/gist_id}","starred_url":"https://api.github.com/users/filimonov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/filimonov/subscriptions","organizations_url":"https://api.github.com/users/filimonov/orgs","repos_url":"https://api.github.com/users/filimonov/repos","events_url":"https://api.github.com/users/filimonov/events{/privacy}","received_events_url":"https://api.github.com/users/filimonov/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":1401253328,"node_id":"MDU6TGFiZWwxNDAxMjUzMzI4","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-net","name":"comp-net","color":"b5bcff","default":false,"description":"Network related"},{"id":1507886722,"node_id":"MDU6TGFiZWwxNTA3ODg2NzIy","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/st-discussion","name":"st-discussion","color":"e5b890","default":false,"description":"The story requires discussion /research / expert help / design & decomposition before will be taken"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2021-05-31T11:04:41Z","updated_at":"2021-07-18T15:54:53Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"body":"We have right now support for the PROXYv1 protocol for unencrypted TCP protocol - which can be enabled on a separate port. \r\nAnd for HTTP we have support for X-Forwarded-For header. See https://github.com/ClickHouse/ClickHouse/pull/17707 and https://github.com/ClickHouse/ClickHouse/issues/17268 \r\n\r\nIn both cases, the original IP is stored 'aside' as a 'forwarder_for' field. \r\n\r\nWhat we need:\r\n1) support for all possible ports/protocols including SSL/http/mysql/postgres (not only TCP). \r\n   - we don't want to have a separate port each time, \r\n   - we also don't want to enable PROXYv1 for the port globally (otherwise intercluster/local connections will also require PROXYv1)\r\n   - we want that PROXYv1 to be used ONLY when the client IP = known load balancer IP. \r\n2) 'trust' relations with the load balancer: when the connection comes from 'whitelisted' load balancer IP - use passed IP inside address (not in `forwarded_for`).\r\n3) for HTTP - we need to support both option HTTP wrapped in PROXYv1, or HTTP with X-Forwarded-For extra header. \r\n\r\nProposed config:\r\n\r\n```xml\r\n<!-- once the section exists the connection from load balancer will be processed differently - clickhouse will allow PROXYv1 for it by default -->\r\n<loadbalancer>\r\n    <!--\r\n        List of networks, same way as used inside users.xml for users.\r\n        Support <ip> (also with cidr), <host> or <host_regexp>\r\n    -->\r\n    <networks>\r\n        <ip>10.0.1.2</ip>\r\n    </networks>\r\n    <!--\r\n        if enabled, then passed IP is stored inside address, and loadbalancer address is not stored at all.  \r\n        if disabled then passed IP is stored inside forwarded_for and loadbalancer address is stored in address\r\n    -->\r\n    <respect_passed_ip_as_main_address>1</respect_passed_ip_as_main_address>\r\n\r\n    <!--\r\n        if enabled then HTTP ports (http / http_secure /interserver_http) also use PROXYv1, X-Forwarded-For otherwise\r\n    -->\r\n    <http_uses_proxy_v1>1</http_uses_proxy_v1>\r\n<loadbalancer>\r\n```\r\n\r\nSome other notes: https://drive.google.com/file/d/1P8J5At0g0qlj3s_sy1HSMmn-IPpUuebP/view?usp=sharing\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24796/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24796/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24779","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24779/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24779/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24779/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/24779","id":906951364,"node_id":"MDU6SXNzdWU5MDY5NTEzNjQ=","number":24779,"title":"Projections: sumIf over sum optimization","user":{"login":"den-crane","id":19737682,"node_id":"MDQ6VXNlcjE5NzM3Njgy","avatar_url":"https://avatars.githubusercontent.com/u/19737682?v=4","gravatar_id":"","url":"https://api.github.com/users/den-crane","html_url":"https://github.com/den-crane","followers_url":"https://api.github.com/users/den-crane/followers","following_url":"https://api.github.com/users/den-crane/following{/other_user}","gists_url":"https://api.github.com/users/den-crane/gists{/gist_id}","starred_url":"https://api.github.com/users/den-crane/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/den-crane/subscriptions","organizations_url":"https://api.github.com/users/den-crane/orgs","repos_url":"https://api.github.com/users/den-crane/repos","events_url":"https://api.github.com/users/den-crane/events{/privacy}","received_events_url":"https://api.github.com/users/den-crane/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":756395244,"node_id":"MDU6TGFiZWw3NTYzOTUyNDQ=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/performance","name":"performance","color":"c2e0c6","default":false,"description":null},{"id":3045757785,"node_id":"MDU6TGFiZWwzMDQ1NzU3Nzg1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-projections","name":"comp-projections","color":"b5bcff","default":false,"description":""}],"state":"open","locked":false,"assignee":{"login":"amosbird","id":5085485,"node_id":"MDQ6VXNlcjUwODU0ODU=","avatar_url":"https://avatars.githubusercontent.com/u/5085485?v=4","gravatar_id":"","url":"https://api.github.com/users/amosbird","html_url":"https://github.com/amosbird","followers_url":"https://api.github.com/users/amosbird/followers","following_url":"https://api.github.com/users/amosbird/following{/other_user}","gists_url":"https://api.github.com/users/amosbird/gists{/gist_id}","starred_url":"https://api.github.com/users/amosbird/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/amosbird/subscriptions","organizations_url":"https://api.github.com/users/amosbird/orgs","repos_url":"https://api.github.com/users/amosbird/repos","events_url":"https://api.github.com/users/amosbird/events{/privacy}","received_events_url":"https://api.github.com/users/amosbird/received_events","type":"User","site_admin":false},"assignees":[{"login":"amosbird","id":5085485,"node_id":"MDQ6VXNlcjUwODU0ODU=","avatar_url":"https://avatars.githubusercontent.com/u/5085485?v=4","gravatar_id":"","url":"https://api.github.com/users/amosbird","html_url":"https://github.com/amosbird","followers_url":"https://api.github.com/users/amosbird/followers","following_url":"https://api.github.com/users/amosbird/following{/other_user}","gists_url":"https://api.github.com/users/amosbird/gists{/gist_id}","starred_url":"https://api.github.com/users/amosbird/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/amosbird/subscriptions","organizations_url":"https://api.github.com/users/amosbird/orgs","repos_url":"https://api.github.com/users/amosbird/repos","events_url":"https://api.github.com/users/amosbird/events{/privacy}","received_events_url":"https://api.github.com/users/amosbird/received_events","type":"User","site_admin":false}],"milestone":null,"comments":1,"created_at":"2021-05-31T01:12:34Z","updated_at":"2022-01-09T18:05:04Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"body":"```sql\r\nDROP TABLE IF EXISTS tp;\r\n\r\ncreate table tp (type Int32, eventcnt UInt64,\r\nprojection p (select sum(eventcnt), type group by type)) \r\nengine = MergeTree order by type;\r\n\r\ninsert into tp select number%3, 1 from numbers(1000);\r\n\r\nset allow_experimental_projection_optimization = 1, force_optimize_projection = 1;\r\n\r\nselect sumIf(eventcnt, type=1), sumIf(eventcnt, type=2)\r\nfrom tp;\r\n\r\nDB::Exception: No projection is used when allow_experimental_projection_optimization = 1.\r\n\r\n-- But manual optimization is possible:\r\nselect sumIf(eventcnt, type=1), sumIf(eventcnt, type=2)\r\nfrom (\r\n   select sum(eventcnt) eventcnt, type\r\n   from tp\r\n   group by type\r\n   )\r\n\r\n┌─sumIf(eventcnt, equals(type, 1))─┬─sumIf(eventcnt, equals(type, 2))─┐\r\n│                              333 │                              333 │\r\n└──────────────────────────────────┴──────────────────────────────────┘\r\n```","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24779/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24779/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24778","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24778/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24778/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24778/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/24778","id":906949029,"node_id":"MDU6SXNzdWU5MDY5NDkwMjk=","number":24778,"title":"Projections inconsistent results for ReplacingMergeTree/CollapsingMergeTree","user":{"login":"den-crane","id":19737682,"node_id":"MDQ6VXNlcjE5NzM3Njgy","avatar_url":"https://avatars.githubusercontent.com/u/19737682?v=4","gravatar_id":"","url":"https://api.github.com/users/den-crane","html_url":"https://github.com/den-crane","followers_url":"https://api.github.com/users/den-crane/followers","following_url":"https://api.github.com/users/den-crane/following{/other_user}","gists_url":"https://api.github.com/users/den-crane/gists{/gist_id}","starred_url":"https://api.github.com/users/den-crane/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/den-crane/subscriptions","organizations_url":"https://api.github.com/users/den-crane/orgs","repos_url":"https://api.github.com/users/den-crane/repos","events_url":"https://api.github.com/users/den-crane/events{/privacy}","received_events_url":"https://api.github.com/users/den-crane/received_events","type":"User","site_admin":false},"labels":[{"id":1575085465,"node_id":"MDU6TGFiZWwxNTc1MDg1NDY1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/unexpected%20behaviour","name":"unexpected behaviour","color":"e088ca","default":false,"description":""},{"id":3045757785,"node_id":"MDU6TGFiZWwzMDQ1NzU3Nzg1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-projections","name":"comp-projections","color":"b5bcff","default":false,"description":""}],"state":"open","locked":false,"assignee":{"login":"amosbird","id":5085485,"node_id":"MDQ6VXNlcjUwODU0ODU=","avatar_url":"https://avatars.githubusercontent.com/u/5085485?v=4","gravatar_id":"","url":"https://api.github.com/users/amosbird","html_url":"https://github.com/amosbird","followers_url":"https://api.github.com/users/amosbird/followers","following_url":"https://api.github.com/users/amosbird/following{/other_user}","gists_url":"https://api.github.com/users/amosbird/gists{/gist_id}","starred_url":"https://api.github.com/users/amosbird/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/amosbird/subscriptions","organizations_url":"https://api.github.com/users/amosbird/orgs","repos_url":"https://api.github.com/users/amosbird/repos","events_url":"https://api.github.com/users/amosbird/events{/privacy}","received_events_url":"https://api.github.com/users/amosbird/received_events","type":"User","site_admin":false},"assignees":[{"login":"amosbird","id":5085485,"node_id":"MDQ6VXNlcjUwODU0ODU=","avatar_url":"https://avatars.githubusercontent.com/u/5085485?v=4","gravatar_id":"","url":"https://api.github.com/users/amosbird","html_url":"https://github.com/amosbird","followers_url":"https://api.github.com/users/amosbird/followers","following_url":"https://api.github.com/users/amosbird/following{/other_user}","gists_url":"https://api.github.com/users/amosbird/gists{/gist_id}","starred_url":"https://api.github.com/users/amosbird/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/amosbird/subscriptions","organizations_url":"https://api.github.com/users/amosbird/orgs","repos_url":"https://api.github.com/users/amosbird/repos","events_url":"https://api.github.com/users/amosbird/events{/privacy}","received_events_url":"https://api.github.com/users/amosbird/received_events","type":"User","site_admin":false}],"milestone":null,"comments":5,"created_at":"2021-05-31T01:06:40Z","updated_at":"2021-07-04T16:50:51Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"body":"```sql\r\ndrop table if exists tp;\r\n\r\ncreate table tp (type Int32, eventcnt UInt64,\r\nprojection p (select sum(eventcnt), type group by type)) \r\nengine = ReplacingMergeTree order by type;\r\n\r\ninsert into tp select number%3, 1 from numbers(3);\r\ninsert into tp select number%3, 2 from numbers(3);\r\n\r\noptimize table tp final;\r\n\r\nset allow_experimental_projection_optimization = 0, force_optimize_projection = 0;\r\n\r\nselect sum(eventcnt) eventcnt, type\r\nfrom tp\r\ngroup by type\r\n┌─eventcnt─┬─type─┐\r\n│        2 │    0 │\r\n│        2 │    2 │\r\n│        2 │    1 │\r\n└──────────┴──────┘\r\n\r\nset allow_experimental_projection_optimization = 1, force_optimize_projection = 1;\r\n\r\nselect sum(eventcnt) eventcnt, type\r\nfrom tp\r\ngroup by type\r\n┌─eventcnt─┬─type─┐\r\n│        3 │    0 │\r\n│        3 │    2 │\r\n│        3 │    1 │\r\n└──────────┴──────┘\r\n```","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24778/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24778/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24607","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24607/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24607/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24607/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/24607","id":905123138,"node_id":"MDU6SXNzdWU5MDUxMjMxMzg=","number":24607,"title":"Can not access named tuple element by its name using dot #2","user":{"login":"filimonov","id":1549571,"node_id":"MDQ6VXNlcjE1NDk1NzE=","avatar_url":"https://avatars.githubusercontent.com/u/1549571?v=4","gravatar_id":"","url":"https://api.github.com/users/filimonov","html_url":"https://github.com/filimonov","followers_url":"https://api.github.com/users/filimonov/followers","following_url":"https://api.github.com/users/filimonov/following{/other_user}","gists_url":"https://api.github.com/users/filimonov/gists{/gist_id}","starred_url":"https://api.github.com/users/filimonov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/filimonov/subscriptions","organizations_url":"https://api.github.com/users/filimonov/orgs","repos_url":"https://api.github.com/users/filimonov/repos","events_url":"https://api.github.com/users/filimonov/events{/privacy}","received_events_url":"https://api.github.com/users/filimonov/received_events","type":"User","site_admin":false},"labels":[{"id":1575085465,"node_id":"MDU6TGFiZWwxNTc1MDg1NDY1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/unexpected%20behaviour","name":"unexpected behaviour","color":"e088ca","default":false,"description":""}],"state":"open","locked":false,"assignee":{"login":"CurtizJ","id":20361854,"node_id":"MDQ6VXNlcjIwMzYxODU0","avatar_url":"https://avatars.githubusercontent.com/u/20361854?v=4","gravatar_id":"","url":"https://api.github.com/users/CurtizJ","html_url":"https://github.com/CurtizJ","followers_url":"https://api.github.com/users/CurtizJ/followers","following_url":"https://api.github.com/users/CurtizJ/following{/other_user}","gists_url":"https://api.github.com/users/CurtizJ/gists{/gist_id}","starred_url":"https://api.github.com/users/CurtizJ/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/CurtizJ/subscriptions","organizations_url":"https://api.github.com/users/CurtizJ/orgs","repos_url":"https://api.github.com/users/CurtizJ/repos","events_url":"https://api.github.com/users/CurtizJ/events{/privacy}","received_events_url":"https://api.github.com/users/CurtizJ/received_events","type":"User","site_admin":false},"assignees":[{"login":"CurtizJ","id":20361854,"node_id":"MDQ6VXNlcjIwMzYxODU0","avatar_url":"https://avatars.githubusercontent.com/u/20361854?v=4","gravatar_id":"","url":"https://api.github.com/users/CurtizJ","html_url":"https://github.com/CurtizJ","followers_url":"https://api.github.com/users/CurtizJ/followers","following_url":"https://api.github.com/users/CurtizJ/following{/other_user}","gists_url":"https://api.github.com/users/CurtizJ/gists{/gist_id}","starred_url":"https://api.github.com/users/CurtizJ/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/CurtizJ/subscriptions","organizations_url":"https://api.github.com/users/CurtizJ/orgs","repos_url":"https://api.github.com/users/CurtizJ/repos","events_url":"https://api.github.com/users/CurtizJ/events{/privacy}","received_events_url":"https://api.github.com/users/CurtizJ/received_events","type":"User","site_admin":false}],"milestone":null,"comments":4,"created_at":"2021-05-28T10:22:39Z","updated_at":"2021-09-07T12:45:52Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"body":"Works:\r\n```\r\nSELECT\r\n    JSONExtract('{\"a\":1, \"b\":\"test\"}', 'Tuple(a UInt8, b String)') AS x,\r\n    tupleElement(x, 'a');\r\n\r\nSELECT\r\n    JSONExtract('{\"a\":1, \"b\":\"test\"}', 'Tuple(a UInt8, b String)') AS x,\r\n    x.1\r\n```\r\n\r\nDon't work:\r\n```\r\nSELECT\r\n    JSONExtract('{\"a\":1, \"b\":\"test\"}', 'Tuple(a UInt8, b String)') AS x,\r\n    x.a;\r\n\r\nReceived exception from server (version 21.5.5):\r\nCode: 47. DB::Exception: Received from localhost:9000. DB::Exception: Missing columns: 'x.a' while processing query: 'SELECT JSONExtract('{\"a\":1, \"b\":\"test\"}', 'Tuple(a UInt8, b String)') AS x, x.a', required columns: 'x.a'. \r\n```\r\n\r\nRef: \r\n- https://github.com/ClickHouse/ClickHouse/pull/17310\r\n- https://github.com/ClickHouse/ClickHouse/issues/18826\r\n\r\n/cc @CurtizJ  ","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24607/reactions","total_count":3,"+1":3,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24607/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24564","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24564/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24564/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24564/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/24564","id":903578376,"node_id":"MDU6SXNzdWU5MDM1NzgzNzY=","number":24564,"title":"new system.events alter update","user":{"login":"theonedemon","id":9501785,"node_id":"MDQ6VXNlcjk1MDE3ODU=","avatar_url":"https://avatars.githubusercontent.com/u/9501785?v=4","gravatar_id":"","url":"https://api.github.com/users/theonedemon","html_url":"https://github.com/theonedemon","followers_url":"https://api.github.com/users/theonedemon/followers","following_url":"https://api.github.com/users/theonedemon/following{/other_user}","gists_url":"https://api.github.com/users/theonedemon/gists{/gist_id}","starred_url":"https://api.github.com/users/theonedemon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/theonedemon/subscriptions","organizations_url":"https://api.github.com/users/theonedemon/orgs","repos_url":"https://api.github.com/users/theonedemon/repos","events_url":"https://api.github.com/users/theonedemon/events{/privacy}","received_events_url":"https://api.github.com/users/theonedemon/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-05-27T11:21:03Z","updated_at":"2021-05-27T11:21:03Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"provide new events for \"alter update\" \r\nFailedUpdates\r\nDelayedUpdates\r\nRejectedUpdates\r\n\r\n**Use case**\r\nusage in prometheus metrics ( grafana ) \r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24564/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24564/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24544","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24544/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24544/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24544/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/24544","id":902588734,"node_id":"MDU6SXNzdWU5MDI1ODg3MzQ=","number":24544,"title":"How to enable libhdfs3 debug log","user":{"login":"baibaichen","id":3688732,"node_id":"MDQ6VXNlcjM2ODg3MzI=","avatar_url":"https://avatars.githubusercontent.com/u/3688732?v=4","gravatar_id":"","url":"https://api.github.com/users/baibaichen","html_url":"https://github.com/baibaichen","followers_url":"https://api.github.com/users/baibaichen/followers","following_url":"https://api.github.com/users/baibaichen/following{/other_user}","gists_url":"https://api.github.com/users/baibaichen/gists{/gist_id}","starred_url":"https://api.github.com/users/baibaichen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baibaichen/subscriptions","organizations_url":"https://api.github.com/users/baibaichen/orgs","repos_url":"https://api.github.com/users/baibaichen/repos","events_url":"https://api.github.com/users/baibaichen/events{/privacy}","received_events_url":"https://api.github.com/users/baibaichen/received_events","type":"User","site_admin":false},"labels":[{"id":386401510,"node_id":"MDU6TGFiZWwzODY0MDE1MTA=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/question","name":"question","color":"bfdadc","default":true,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2021-05-26T15:45:56Z","updated_at":"2021-08-27T03:10:07Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"hi \r\n\r\nI am trying to connect [FusionInsight HD](https://www.ibm.com/docs/en/spss-analytic-server/3.1.1?topic=configuration-fusioninsight-hd-overview)\r\n\r\n```sql\r\nCREATE TABLE default.test_hdfs_read101(`id` Int32,`name` String) ENGINE = HDFS('hdfs://10-1-30-\r\n101:25000/tmp/ck_test.csv', 'CSV');\r\n\r\nselect * from test_hdfs_read101\r\n\r\n```\r\n\r\nI got the following error log , but i don't know what happen\r\n\r\n``` c++\r\n2021.05.26 10:08:45.064775 [ 23595 ] {df0c466d-a652-483e-ab04-d95583801c81} <Error> executeQuery: Code: 210, e.displayText() = DB::Exception: Unable to connect to HDFS: Problem with callback handler (version 21.4.3.21 (official build)) (from [::1]:54600) (in query: select * from test_hdfs_read101), Stack trace (when copying this message, always include the lines below):\r\n\r\n0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x88b64ca in /usr/lib/debug/.build-id/4e/8f6fda87d4eea23848be55e4aff2b2e87c8553.debug\r\n1. DB::createHDFSFS(hdfsBuilder*) @ 0xed099c0 in /usr/lib/debug/.build-id/4e/8f6fda87d4eea23848be55e4aff2b2e87c8553.debug\r\n2. DB::StorageHDFS::read(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::SelectQueryInfo&, DB::Context const&, DB::QueryProcessingStage::Enum, unsigned long, unsigned int) @ 0xed00113 in /usr/lib/debug/.build-id/4e/8f6fda87d4eea23848be55e4aff2b2e87c8553.debug\r\n3. DB::IStorage::read(DB::QueryPlan&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::SelectQueryInfo&, DB::Context const&, DB::QueryProcessingStage::Enum, unsigned long, unsigned int) @ 0xfa637df in /usr/lib/debug/.build-id/4e/8f6fda87d4eea23848be55e4aff2b2e87c8553.debug\r\n4. DB::InterpreterSelectQuery::executeFetchColumns(DB::QueryProcessingStage::Enum, DB::QueryPlan&) @ 0xf3fb66e in /usr/lib/debug/.build-id/4e/8f6fda87d4eea23848be55e4aff2b2e87c8553.debug\r\n5. DB::InterpreterSelectQuery::executeImpl(DB::QueryPlan&, std::__1::shared_ptr<DB::IBlockInputStream> const&, std::__1::optional<DB::Pipe>) @ 0xf3f0dc1 in /usr/lib/debug/.build-id/4e/8f6fda87d4eea23848be55e4aff2b2e87c8553.debug\r\n6. DB::InterpreterSelectQuery::buildQueryPlan(DB::QueryPlan&) @ 0xf3efbdb in /usr/lib/debug/.build-id/4e/8f6fda87d4eea23848be55e4aff2b2e87c8553.debug\r\n7. DB::InterpreterSelectWithUnionQuery::buildQueryPlan(DB::QueryPlan&) @ 0xf716713 in /usr/lib/debug/.build-id/4e/8f6fda87d4eea23848be55e4aff2b2e87c8553.debug\r\n8. DB::InterpreterSelectWithUnionQuery::execute() @ 0xf71789e in /usr/lib/debug/.build-id/4e/8f6fda87d4eea23848be55e4aff2b2e87c8553.debug\r\n9. DB::executeQueryImpl(char const*, char const*, DB::Context&, bool, DB::QueryProcessingStage::Enum, bool, DB::ReadBuffer*) @ 0xf8b98c2 in /usr/lib/debug/.build-id/4e/8f6fda87d4eea23848be55e4aff2b2e87c8553.debug\r\n10. DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum, bool) @ 0xf8b8203 in /usr/lib/debug/.build-id/4e/8f6fda87d4eea23848be55e4aff2b2e87c8553.debug\r\n11. DB::TCPHandler::runImpl() @ 0x1006ce3d in /usr/lib/debug/.build-id/4e/8f6fda87d4eea23848be55e4aff2b2e87c8553.debug\r\n12. DB::TCPHandler::run() @ 0x1007f3b9 in /usr/lib/debug/.build-id/4e/8f6fda87d4eea23848be55e4aff2b2e87c8553.debug\r\n13. Poco::Net::TCPServerConnection::start() @ 0x12739e8f in /usr/lib/debug/.build-id/4e/8f6fda87d4eea23848be55e4aff2b2e87c8553.debug\r\n14. Poco::Net::TCPServerDispatcher::run() @ 0x1273b8a1 in /usr/lib/debug/.build-id/4e/8f6fda87d4eea23848be55e4aff2b2e87c8553.debug\r\n15. Poco::PooledThread::run() @ 0x12871fc9 in /usr/lib/debug/.build-id/4e/8f6fda87d4eea23848be55e4aff2b2e87c8553.debug\r\n16. Poco::ThreadImpl::runnableEntry(void*) @ 0x1286de2a in /usr/lib/debug/.build-id/4e/8f6fda87d4eea23848be55e4aff2b2e87c8553.debug\r\n17. start_thread @ 0x7ea5 in /usr/lib64/libpthread-2.17.so\r\n18. clone @ 0xfe9fd in /usr/lib64/libc-2.17.so\r\n```\r\n\r\n**Is there any way to configure the libhdfs3 DENUG log to see where the wrong is?**","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24544/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24544/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24502","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24502/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24502/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24502/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/24502","id":901375435,"node_id":"MDU6SXNzdWU5MDEzNzU0MzU=","number":24502,"title":"OPTIMIZE DEDUPLICATE not removing oldest row","user":{"login":"jretanax","id":84813971,"node_id":"MDQ6VXNlcjg0ODEzOTcx","avatar_url":"https://avatars.githubusercontent.com/u/84813971?v=4","gravatar_id":"","url":"https://api.github.com/users/jretanax","html_url":"https://github.com/jretanax","followers_url":"https://api.github.com/users/jretanax/followers","following_url":"https://api.github.com/users/jretanax/following{/other_user}","gists_url":"https://api.github.com/users/jretanax/gists{/gist_id}","starred_url":"https://api.github.com/users/jretanax/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jretanax/subscriptions","organizations_url":"https://api.github.com/users/jretanax/orgs","repos_url":"https://api.github.com/users/jretanax/repos","events_url":"https://api.github.com/users/jretanax/events{/privacy}","received_events_url":"https://api.github.com/users/jretanax/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2021-05-25T21:13:54Z","updated_at":"2021-05-26T15:14:05Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"**Describe the unexpected behaviour**\r\nI have 2 rows with same id and event_date, one row was inserted 2 weeks ago and one row was inserted today.\r\nWhen running \r\n`OPTIMIZE TABLE mytable_local ON CLUSTER '{cluster}' PARTITION 20210525 FINAL DEDUPLICATE BY event_date, id;`\r\nthe command is removing the row that was inserted today. \r\nThat new row has other values updated and that's why I'm trying to deduplicate by removing the oldest one.\r\n\r\n**How to reproduce**\r\n*ClickHouse 21.5.5.12\r\n*ReplicatedMergeTree table\r\n\r\n**Expected behavior**\r\nAs for the ReplacingMergeTree table engine, I would expect the following for the MergeTree table when using OPTIMIZE:\r\n\r\nWhen merging, ReplacingMergeTree from all the rows with the same sorting key leaves only one:\r\n- The last in the selection, if ver not set. A selection is a set of rows in a set of parts participating in the merge. The most recently created part (the last insert) will be the last one in the selection. Thus, after deduplication, the very last row from the most recent insert will remain for each unique sorting key.\r\n- With the maximum version, if ver specified.\r\n\r\nAs the MergeTree table has no version handling one useful addition would be:\r\n`OPTIMIZE ... FINAL DEDUPLICATE BY xxx, yyy VERSIONED BY zzz`","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24502/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24502/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24491","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24491/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24491/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24491/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/24491","id":900732140,"node_id":"MDU6SXNzdWU5MDA3MzIxNDA=","number":24491,"title":"Metadata storage path for Atomic database engine","user":{"login":"Blackmorse","id":13163993,"node_id":"MDQ6VXNlcjEzMTYzOTkz","avatar_url":"https://avatars.githubusercontent.com/u/13163993?v=4","gravatar_id":"","url":"https://api.github.com/users/Blackmorse","html_url":"https://github.com/Blackmorse","followers_url":"https://api.github.com/users/Blackmorse/followers","following_url":"https://api.github.com/users/Blackmorse/following{/other_user}","gists_url":"https://api.github.com/users/Blackmorse/gists{/gist_id}","starred_url":"https://api.github.com/users/Blackmorse/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Blackmorse/subscriptions","organizations_url":"https://api.github.com/users/Blackmorse/orgs","repos_url":"https://api.github.com/users/Blackmorse/repos","events_url":"https://api.github.com/users/Blackmorse/events{/privacy}","received_events_url":"https://api.github.com/users/Blackmorse/received_events","type":"User","site_admin":false},"labels":[{"id":386401510,"node_id":"MDU6TGFiZWwzODY0MDE1MTA=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/question","name":"question","color":"bfdadc","default":true,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2021-05-25T12:19:56Z","updated_at":"2021-05-25T19:58:27Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"After migrating from _Ordinary_ database engine to _Atomic_ Clickhouse no longer stores metadata at _**metadata/**_ folder. Instead of this there are symlinks from _**metadata/<database>**_ to corresponding locations at _**store/**_ folder.\r\n\r\nPreviously , our set up had separate disk (RAID) mounted at _**metadata/**_ to provide more robust metadata storage.\r\nAre there any setting or possibility to store Clickhouse's metadata physically at specified location?","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24491/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24491/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24403","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24403/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24403/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24403/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/24403","id":898148309,"node_id":"MDU6SXNzdWU4OTgxNDgzMDk=","number":24403,"title":"Unexpected multi-query parsing behaviour (clickhouse-local, clickhouse-client)","user":{"login":"nvartolomei","id":543193,"node_id":"MDQ6VXNlcjU0MzE5Mw==","avatar_url":"https://avatars.githubusercontent.com/u/543193?v=4","gravatar_id":"","url":"https://api.github.com/users/nvartolomei","html_url":"https://github.com/nvartolomei","followers_url":"https://api.github.com/users/nvartolomei/followers","following_url":"https://api.github.com/users/nvartolomei/following{/other_user}","gists_url":"https://api.github.com/users/nvartolomei/gists{/gist_id}","starred_url":"https://api.github.com/users/nvartolomei/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nvartolomei/subscriptions","organizations_url":"https://api.github.com/users/nvartolomei/orgs","repos_url":"https://api.github.com/users/nvartolomei/repos","events_url":"https://api.github.com/users/nvartolomei/events{/privacy}","received_events_url":"https://api.github.com/users/nvartolomei/received_events","type":"User","site_admin":false},"labels":[{"id":845247686,"node_id":"MDU6TGFiZWw4NDUyNDc2ODY=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/usability","name":"usability","color":"ebf28c","default":false,"description":""},{"id":1575085465,"node_id":"MDU6TGFiZWwxNTc1MDg1NDY1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/unexpected%20behaviour","name":"unexpected behaviour","color":"e088ca","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2021-05-21T15:19:33Z","updated_at":"2021-05-21T16:47:54Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Query parsing breaks after it encounters a INSERT statement.\r\n\r\n```shell\r\ndocker run -it --name click --rm yandex/clickhouse-server clickhouse-local \\\r\n  -q \"select version(); create table t(v UInt32) engine=Null; insert into t values (1); select 'after insert'; aaa ... this is ignored\"\r\n21.5.5.12\r\n\r\n# ---\r\n\r\necho $?\r\n0\r\n```","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24403/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24403/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24396","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24396/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24396/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24396/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/24396","id":897928771,"node_id":"MDU6SXNzdWU4OTc5Mjg3NzE=","number":24396,"title":"In distributed queries, `ORDER BY expr(x)` with `LIMIT BY x` throws exception about not found column","user":{"login":"UnamedRus","id":9449405,"node_id":"MDQ6VXNlcjk0NDk0MDU=","avatar_url":"https://avatars.githubusercontent.com/u/9449405?v=4","gravatar_id":"","url":"https://api.github.com/users/UnamedRus","html_url":"https://github.com/UnamedRus","followers_url":"https://api.github.com/users/UnamedRus/followers","following_url":"https://api.github.com/users/UnamedRus/following{/other_user}","gists_url":"https://api.github.com/users/UnamedRus/gists{/gist_id}","starred_url":"https://api.github.com/users/UnamedRus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/UnamedRus/subscriptions","organizations_url":"https://api.github.com/users/UnamedRus/orgs","repos_url":"https://api.github.com/users/UnamedRus/repos","events_url":"https://api.github.com/users/UnamedRus/events{/privacy}","received_events_url":"https://api.github.com/users/UnamedRus/received_events","type":"User","site_admin":false},"labels":[{"id":386401505,"node_id":"MDU6TGFiZWwzODY0MDE1MDU=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/bug","name":"bug","color":"ee0701","default":true,"description":"Confirmed user-visible misbehaviour in official release"},{"id":1365579236,"node_id":"MDU6TGFiZWwxMzY1NTc5MjM2","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/minor","name":"minor","color":"FFF8F8","default":false,"description":"Priority: minor"},{"id":1634829961,"node_id":"MDU6TGFiZWwxNjM0ODI5OTYx","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-distributed","name":"comp-distributed","color":"b5bcff","default":false,"description":"Distributed tables"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2021-05-21T10:50:58Z","updated_at":"2021-08-15T03:32:31Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"**Does it reproduce on recent release?**\r\nYes\r\n\r\n**How to reproduce**\r\nClickhouse version 21.6\r\n\r\n```\r\nSELECT *\r\nFROM clusterAllReplicas('test_cluster_two_shards', view(\r\n    SELECT *\r\n    FROM numbers(10)\r\n))\r\nORDER BY number IN (1, 2) ASC\r\nLIMIT 1 BY number\r\n\r\nQuery id: b4caff57-9ecc-45e1-9e72-39f68530cd13\r\n\r\n\r\n0 rows in set. Elapsed: 0.002 sec.\r\n\r\nReceived exception from server (version 21.6.1):\r\nCode: 8. DB::Exception: Received from localhost:9000. DB::Exception: Cannot find column `in(number, tuple(1, 2))` in source stream.\r\n\r\n\r\nSELECT *\r\nFROM clusterAllReplicas('test_cluster_two_shards', view(\r\n    SELECT *\r\n    FROM numbers(10)\r\n))\r\nORDER BY number IN (1, 2) ASC\r\n\r\nQuery id: 7fedc826-0bf2-407d-bf19-94dfe77e5a16\r\n\r\n┌─number─┐\r\n│      0 │\r\n│      3 │\r\n│      4 │\r\n│      5 │\r\n│      6 │\r\n│      7 │\r\n│      8 │\r\n│      9 │\r\n│      0 │\r\n│      3 │\r\n│      4 │\r\n│      5 │\r\n│      6 │\r\n│      7 │\r\n│      8 │\r\n│      9 │\r\n│      1 │\r\n│      2 │\r\n│      1 │\r\n│      2 │\r\n└────────┘\r\n\r\n20 rows in set. Elapsed: 0.006 sec.\r\n\r\nSELECT *\r\nFROM numbers(10)\r\nORDER BY number IN (1, 2) ASC\r\nLIMIT 1 BY number\r\n\r\nQuery id: 90c6a735-baa5-4de5-90b9-de6c9cee40a4\r\n\r\n┌─number─┐\r\n│      0 │\r\n│      3 │\r\n│      4 │\r\n│      5 │\r\n│      6 │\r\n│      7 │\r\n│      8 │\r\n│      9 │\r\n│      1 │\r\n│      2 │\r\n└────────┘\r\n\r\n```\r\n\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24396/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24396/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24395","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24395/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24395/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24395/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/24395","id":897923418,"node_id":"MDU6SXNzdWU4OTc5MjM0MTg=","number":24395,"title":"ALIAS column can't be used as right table key in JOIN","user":{"login":"UnamedRus","id":9449405,"node_id":"MDQ6VXNlcjk0NDk0MDU=","avatar_url":"https://avatars.githubusercontent.com/u/9449405?v=4","gravatar_id":"","url":"https://api.github.com/users/UnamedRus","html_url":"https://github.com/UnamedRus","followers_url":"https://api.github.com/users/UnamedRus/followers","following_url":"https://api.github.com/users/UnamedRus/following{/other_user}","gists_url":"https://api.github.com/users/UnamedRus/gists{/gist_id}","starred_url":"https://api.github.com/users/UnamedRus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/UnamedRus/subscriptions","organizations_url":"https://api.github.com/users/UnamedRus/orgs","repos_url":"https://api.github.com/users/UnamedRus/repos","events_url":"https://api.github.com/users/UnamedRus/events{/privacy}","received_events_url":"https://api.github.com/users/UnamedRus/received_events","type":"User","site_admin":false},"labels":[{"id":386401505,"node_id":"MDU6TGFiZWwzODY0MDE1MDU=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/bug","name":"bug","color":"ee0701","default":true,"description":"Confirmed user-visible misbehaviour in official release"},{"id":1357578153,"node_id":"MDU6TGFiZWwxMzU3NTc4MTUz","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-joins","name":"comp-joins","color":"b5bcff","default":false,"description":"JOINs"},{"id":1507867504,"node_id":"MDU6TGFiZWwxNTA3ODY3NTA0","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/st-hold","name":"st-hold","color":"e5b890","default":false,"description":"We've paused the work on issue for some reason"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-05-21T10:43:51Z","updated_at":"2021-07-03T01:02:38Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"You have to provide the following information whenever possible.\r\n\r\n**Does it reproduce on recent release?**\r\nYes\r\n\r\n**How to reproduce**\r\nClickhouse 21.6\r\n\r\n```\r\nCREATE TABLE xxxx_yyy (key UInt32, key_b ALIAS key) ENGINE=MergeTree() ORDER BY key;\r\nINSERT INTO xxxx_yyy SELECT number FROM numbers(10);\r\n\r\n\r\nSELECT *\r\nFROM xxxx_yyy AS a\r\nINNER JOIN xxxx_yyy AS b ON a.key_b = b.key\r\n\r\nQuery id: f56b09d9-2d8a-46a8-bfae-3da08f38d704\r\n\r\n┌─key─┬─b.key─┐\r\n│   0 │     0 │\r\n│   1 │     1 │\r\n│   2 │     2 │\r\n│   3 │     3 │\r\n│   4 │     4 │\r\n│   5 │     5 │\r\n│   6 │     6 │\r\n│   7 │     7 │\r\n│   8 │     8 │\r\n│   9 │     9 │\r\n└─────┴───────┘\r\n\r\n\r\nSELECT *\r\nFROM xxxx_yyy AS a\r\nINNER JOIN xxxx_yyy AS b ON a.key = b.key_b\r\n\r\nQuery id: 540ad3a6-e857-4b7e-baa5-08d55de57bd2\r\n\r\n\r\n0 rows in set. Elapsed: 0.003 sec.\r\n\r\nReceived exception from server (version 21.6.1):\r\nCode: 47. DB::Exception: Received from localhost:9000. DB::Exception: Missing columns: 'b.key_b' while processing query: 'SELECT key, b.key FROM xxxx_yyy AS a ALL INNER JOIN xxxx_yyy AS b ON key = b.key_b', required columns: 'key' 'b.key' 'b.key_b', maybe you meant: ['key'], joined columns: 'b.key'.\r\n\r\n\r\nSELECT *\r\nFROM xxxx_yyy AS a\r\nINNER JOIN\r\n(\r\n    SELECT\r\n        *,\r\n        key_b\r\n    FROM xxxx_yyy\r\n) AS b ON a.key = b.key_b\r\n\r\nQuery id: 5f2a065d-549d-4cde-8cc5-9a409861c699\r\n\r\n┌─key─┬─b.key─┬─b.key_b─┐\r\n│   0 │     0 │       0 │\r\n│   1 │     1 │       1 │\r\n│   2 │     2 │       2 │\r\n│   3 │     3 │       3 │\r\n│   4 │     4 │       4 │\r\n│   5 │     5 │       5 │\r\n│   6 │     6 │       6 │\r\n│   7 │     7 │       7 │\r\n│   8 │     8 │       8 │\r\n│   9 │     9 │       9 │\r\n└─────┴───────┴─────────┘\r\n\r\n10 rows in set. Elapsed: 0.003 sec.\r\n```\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24395/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24395/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24371","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24371/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24371/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24371/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/24371","id":897607529,"node_id":"MDU6SXNzdWU4OTc2MDc1Mjk=","number":24371,"title":"Tasks on cross-compilation and platforms support","user":{"login":"alexey-milovidov","id":18581488,"node_id":"MDQ6VXNlcjE4NTgxNDg4","avatar_url":"https://avatars.githubusercontent.com/u/18581488?v=4","gravatar_id":"","url":"https://api.github.com/users/alexey-milovidov","html_url":"https://github.com/alexey-milovidov","followers_url":"https://api.github.com/users/alexey-milovidov/followers","following_url":"https://api.github.com/users/alexey-milovidov/following{/other_user}","gists_url":"https://api.github.com/users/alexey-milovidov/gists{/gist_id}","starred_url":"https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexey-milovidov/subscriptions","organizations_url":"https://api.github.com/users/alexey-milovidov/orgs","repos_url":"https://api.github.com/users/alexey-milovidov/repos","events_url":"https://api.github.com/users/alexey-milovidov/events{/privacy}","received_events_url":"https://api.github.com/users/alexey-milovidov/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":521113272,"node_id":"MDU6TGFiZWw1MjExMTMyNzI=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/build","name":"build","color":"800000","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-05-21T01:56:59Z","updated_at":"2021-11-25T20:23:59Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"- [x] Add cross compilation for linux-ppc64le: #9589, see also [the list](https://github.com/ClickHouse/ClickHouse/pulls?q=is%3Apr+author%3Amastertheknife);\r\n- [x] Add cross compilation for darwin-aarch64: #20245;\r\n- [ ] Enable tests under QEMU for linux-aarch64 on our linux-amd64 servers: #15174 (most preparation is already done, definitely will work; the server will run under QEMU and the client will run natively);\r\n- [ ] Don't allow distributed queries across servers with different CPU architecture: #22581;\r\n- [ ] Add cross compilation for illumos-amd64, see #23746 and #24144 (it depends if `lld` can generate binaries for Illumos or if some other cross-linker exists);\r\n- [ ] Try Darling: #15609 (there is high chance that it will fail but we have to try);\r\n\r\nFurther steps:\r\n- [ ] Publish deb, rpm, tgz and Docker images for linux-aarch64 builds in releases;\r\n- [x] Put headers and blobs (libc-related `.so`, `crt*.o`) for every toolchain in git submodules. Leave only required blobs (it is around 10 MBs in size - ok for git); #29974\r\n- [x] Make default linux-amd64 build to use sysroot similar to cross-compiling for hermetic/reproducible builds; #30011\r\n- [ ] Allow to disable all the remaining usages of `dlopen` (loading of CatBoost) and make static build with `Musl`; (we will later introduce our own dynamic loader for simple use cases to avoid usage of `dlopen`) #30248","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24371/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24371/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24317","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24317/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24317/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24317/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/24317","id":896249343,"node_id":"MDU6SXNzdWU4OTYyNDkzNDM=","number":24317,"title":"Predict size of hash table for GROUP BY","user":{"login":"alexey-milovidov","id":18581488,"node_id":"MDQ6VXNlcjE4NTgxNDg4","avatar_url":"https://avatars.githubusercontent.com/u/18581488?v=4","gravatar_id":"","url":"https://api.github.com/users/alexey-milovidov","html_url":"https://github.com/alexey-milovidov","followers_url":"https://api.github.com/users/alexey-milovidov/followers","following_url":"https://api.github.com/users/alexey-milovidov/following{/other_user}","gists_url":"https://api.github.com/users/alexey-milovidov/gists{/gist_id}","starred_url":"https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexey-milovidov/subscriptions","organizations_url":"https://api.github.com/users/alexey-milovidov/orgs","repos_url":"https://api.github.com/users/alexey-milovidov/repos","events_url":"https://api.github.com/users/alexey-milovidov/events{/privacy}","received_events_url":"https://api.github.com/users/alexey-milovidov/received_events","type":"User","site_admin":false},"labels":[{"id":756395244,"node_id":"MDU6TGFiZWw3NTYzOTUyNDQ=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/performance","name":"performance","color":"c2e0c6","default":false,"description":null},{"id":3086255531,"node_id":"MDU6TGFiZWwzMDg2MjU1NTMx","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/warmup%20task","name":"warmup task","color":"FBCA04","default":false,"description":"The task for new ClickHouse team members. Low risk, moderate complexity, no urgency."}],"state":"open","locked":false,"assignee":{"login":"nickitat","id":5218483,"node_id":"MDQ6VXNlcjUyMTg0ODM=","avatar_url":"https://avatars.githubusercontent.com/u/5218483?v=4","gravatar_id":"","url":"https://api.github.com/users/nickitat","html_url":"https://github.com/nickitat","followers_url":"https://api.github.com/users/nickitat/followers","following_url":"https://api.github.com/users/nickitat/following{/other_user}","gists_url":"https://api.github.com/users/nickitat/gists{/gist_id}","starred_url":"https://api.github.com/users/nickitat/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nickitat/subscriptions","organizations_url":"https://api.github.com/users/nickitat/orgs","repos_url":"https://api.github.com/users/nickitat/repos","events_url":"https://api.github.com/users/nickitat/events{/privacy}","received_events_url":"https://api.github.com/users/nickitat/received_events","type":"User","site_admin":false},"assignees":[{"login":"nickitat","id":5218483,"node_id":"MDQ6VXNlcjUyMTg0ODM=","avatar_url":"https://avatars.githubusercontent.com/u/5218483?v=4","gravatar_id":"","url":"https://api.github.com/users/nickitat","html_url":"https://github.com/nickitat","followers_url":"https://api.github.com/users/nickitat/followers","following_url":"https://api.github.com/users/nickitat/following{/other_user}","gists_url":"https://api.github.com/users/nickitat/gists{/gist_id}","starred_url":"https://api.github.com/users/nickitat/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nickitat/subscriptions","organizations_url":"https://api.github.com/users/nickitat/orgs","repos_url":"https://api.github.com/users/nickitat/repos","events_url":"https://api.github.com/users/nickitat/events{/privacy}","received_events_url":"https://api.github.com/users/nickitat/received_events","type":"User","site_admin":false}],"milestone":null,"comments":5,"created_at":"2021-05-20T04:10:14Z","updated_at":"2022-01-06T21:31:25Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"**Describe the situation**\r\n\r\nFor simple queries sometimes around 10% of query execution time can be spent in hash table resizes. We have already optimized resizes but we can do better avoiding resizes whenever possible.\r\n\r\n**Proposed solution**\r\n\r\nAdd a statistics (cache) for observed hash table sizes during GROUP BY. It can be keyed by hash of database and table names, GROUP BY and WHERE expressions.\r\n\r\nWhen aggregation is finished, observed size is collected. If observed size is bigger than some threshold (e.g. 10 million items, controlled by query setting), it will not be used in statistics - it is needed to avoid memory overallocation. If observed size is greater than previously collected value, the previously collected value is replaced by the observed value (statistics is collecting the maximum observed size unless it is too large). If observed size is more than two times less than predicted value, the previously collected value is replaced by the observed value (the statistics is dropped on misprediction).\r\n\r\nTwo-level aggregation method can be selected from the start if predicted size is large enough.\r\n\r\nThe size of the cache should be controlled by server setting. Proposed size is 10 000 items. The cache can use LRU strategy. The usage of the cache (update of statistics and the usage of collected data) should be controlled by dedicated query-level setting (on/off).","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24317/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24317/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24312","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24312/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24312/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24312/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/24312","id":895982518,"node_id":"MDU6SXNzdWU4OTU5ODI1MTg=","number":24312,"title":"Configuration for secured/TLS zookeeper connection is not included in current documentation","user":{"login":"genzgd","id":625882,"node_id":"MDQ6VXNlcjYyNTg4Mg==","avatar_url":"https://avatars.githubusercontent.com/u/625882?v=4","gravatar_id":"","url":"https://api.github.com/users/genzgd","html_url":"https://github.com/genzgd","followers_url":"https://api.github.com/users/genzgd/followers","following_url":"https://api.github.com/users/genzgd/following{/other_user}","gists_url":"https://api.github.com/users/genzgd/gists{/gist_id}","starred_url":"https://api.github.com/users/genzgd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/genzgd/subscriptions","organizations_url":"https://api.github.com/users/genzgd/orgs","repos_url":"https://api.github.com/users/genzgd/repos","events_url":"https://api.github.com/users/genzgd/events{/privacy}","received_events_url":"https://api.github.com/users/genzgd/received_events","type":"User","site_admin":false},"labels":[{"id":785082162,"node_id":"MDU6TGFiZWw3ODUwODIxNjI=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-documentation","name":"comp-documentation","color":"b5bcff","default":false,"description":"Used to run automatic builds of the documentation"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2021-05-19T22:08:55Z","updated_at":"2021-09-13T16:57:25Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"The content from the PR https://github.com/ClickHouse/ClickHouse/pull/10184, including the <secure> option for the zookeeper configuration, and the explanation of the <client> option for mutual TLS, does not seem to be any place in the official ClickHouse documentation.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24312/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24312/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24301","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24301/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24301/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24301/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/24301","id":895672933,"node_id":"MDU6SXNzdWU4OTU2NzI5MzM=","number":24301,"title":"Parameters do not work on DESCRIBE","user":{"login":"grundrauschen","id":1609845,"node_id":"MDQ6VXNlcjE2MDk4NDU=","avatar_url":"https://avatars.githubusercontent.com/u/1609845?v=4","gravatar_id":"","url":"https://api.github.com/users/grundrauschen","html_url":"https://github.com/grundrauschen","followers_url":"https://api.github.com/users/grundrauschen/followers","following_url":"https://api.github.com/users/grundrauschen/following{/other_user}","gists_url":"https://api.github.com/users/grundrauschen/gists{/gist_id}","starred_url":"https://api.github.com/users/grundrauschen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/grundrauschen/subscriptions","organizations_url":"https://api.github.com/users/grundrauschen/orgs","repos_url":"https://api.github.com/users/grundrauschen/repos","events_url":"https://api.github.com/users/grundrauschen/events{/privacy}","received_events_url":"https://api.github.com/users/grundrauschen/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2021-05-19T16:54:55Z","updated_at":"2021-05-25T06:58:31Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"**Describe the bug**\r\nI am working with parameterized queries and they work fine for me so far for updates and selects.\r\nThe behaviour does though seem to break, when `DESCRIBE` is involved.\r\n\r\n**Does it reproduce on recent release?**\r\nVersion used: 21.4.6.55 (server) -- yes\r\n\r\n \r\n**How to reproduce**\r\n* Which ClickHouse server version to use\r\n  * Version used: 21.4.6.55 (server)\r\n* Which interface to use, if matters\r\n  * CLI and HTTP\r\n* Non-default settings, if any\r\n  * no\r\n\r\nWhen using the CLI on a simple `SELECT` example, the parameter work fine:\r\n\r\n```sh\r\n$ clickhouse client --param_p0=\"2\" -q \"SELECT {p0:String}\"\r\n2\r\n```\r\n\r\nWhen using it in a `DESCRIBE` part it does break though:\r\n\r\n```sh\r\n$ clickhouse client --param_p0=\"2\" -q \"DESCRIBE TABLE (SELECT {p0:String})\"\r\nReceived exception from server (version 21.4.6):\r\nCode: 456. DB::Exception: Received from localhost:9000. DB::Exception: Query parameter `p0` was not set.\r\n```\r\n\r\n**Expected behavior**\r\nIt would be expected to return to correct types like:\r\n\r\n```sh\r\n$ clickhouse client -q \"DESCRIBE TABLE (SELECT '2')\"\r\n\\'2\\'   String\r\n```\r\n\r\n**Error message and/or stacktrace**\r\n\r\nAs written above the following message appears:\r\n\r\n```\r\nReceived exception from server (version 21.4.6):\r\nCode: 456. DB::Exception: Received from localhost:9000. DB::Exception: Query parameter `p0` was not set.\r\n```\r\n\r\n**Additional context**\r\nPossibly related to #10976\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24301/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24301/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24280","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24280/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24280/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24280/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/24280","id":895329626,"node_id":"MDU6SXNzdWU4OTUzMjk2MjY=","number":24280,"title":"Few VERY long strings in lowcardinality column can lead to significant performance degradation","user":{"login":"filimonov","id":1549571,"node_id":"MDQ6VXNlcjE1NDk1NzE=","avatar_url":"https://avatars.githubusercontent.com/u/1549571?v=4","gravatar_id":"","url":"https://api.github.com/users/filimonov","html_url":"https://github.com/filimonov","followers_url":"https://api.github.com/users/filimonov/followers","following_url":"https://api.github.com/users/filimonov/following{/other_user}","gists_url":"https://api.github.com/users/filimonov/gists{/gist_id}","starred_url":"https://api.github.com/users/filimonov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/filimonov/subscriptions","organizations_url":"https://api.github.com/users/filimonov/orgs","repos_url":"https://api.github.com/users/filimonov/repos","events_url":"https://api.github.com/users/filimonov/events{/privacy}","received_events_url":"https://api.github.com/users/filimonov/received_events","type":"User","site_admin":false},"labels":[{"id":756395244,"node_id":"MDU6TGFiZWw3NTYzOTUyNDQ=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/performance","name":"performance","color":"c2e0c6","default":false,"description":null},{"id":1365579236,"node_id":"MDU6TGFiZWwxMzY1NTc5MjM2","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/minor","name":"minor","color":"FFF8F8","default":false,"description":"Priority: minor"},{"id":1446368065,"node_id":"MDU6TGFiZWwxNDQ2MzY4MDY1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-lowcardinality","name":"comp-lowcardinality","color":"b5bcff","default":false,"description":"LowCardinality data type"},{"id":1532016596,"node_id":"MDU6TGFiZWwxNTMyMDE2NTk2","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/memory","name":"memory","color":"e99695","default":false,"description":"When memory usage is higher than expected"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-05-19T11:32:43Z","updated_at":"2021-05-19T18:30:50Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"body":"Test: \r\n\r\n```sql\r\nDROP TABLE IF EXISTS lc_memory_issue SYNC;\r\n\r\ncreate table lc_memory_issue (\r\n    a LowCardinality(String), \r\n    number UInt64,\r\n    partitionid UInt8\r\n )\r\nengine=MergeTree\r\nORDER BY (a,number)\r\nPARTITION BY partitionid;\r\n\r\nINSERT INTO lc_memory_issue select 'token_' ||  hex(1000000 + rand() % 1000) as a, number, number%5 from numbers_mt(25000000);\r\noptimize table lc_memory_issue final;\r\n\r\nSELECT uniq(a) FROM lc_memory_issue\r\n\r\n/* 1 rows in set. Elapsed: 0.131 sec. Processed 25.00 million rows, 54.26 MB (190.85 million rows/s., 414.24 MB/s.) \r\n\r\nquery_duration_ms:             129\r\nread_rows:                     25000000\r\nread_bytes:                    54262320\r\nmemory_usage:                  0\r\n*/ \r\n```\r\n\r\nEverything is ok till now. \r\n\r\nNow let's 'pollute' lowcardinality column with few VERY long strings.\r\n\r\n```sql\r\ninsert into lc_memory_issue select 'token_' ||  hex(1000000 + rand() % 1000) || repeat(repeat('\\0',100000),40), 0, arrayJoin(range(5)) from numbers(20);\r\n\r\n\r\nSELECT uniq(a) FROM lc_memory_issue\r\n/* 1 rows in set. Elapsed: 0.260 sec. Processed 25.00 million rows, 8.05 GB (96.16 million rows/s., 30.98 GB/s.) \r\n\r\nquery_duration_ms:             258\r\nread_rows:                     25000100\r\nread_bytes:                    8054300726\r\nmemory_usage:                  615270194\r\n*/ \r\n\r\n\r\nOPTIMIZE TABLE lc_memory_issue FINAL;\r\n\r\nSELECT uniq(a) FROM lc_memory_issue\r\n/* 1 rows in set. Elapsed: 1.970 sec. Processed 25.00 million rows, 185.45 GB (12.69 million rows/s., 94.12 GB/s.) \r\n\r\nquery_duration_ms:             1968\r\nread_rows:                     25000100\r\nread_bytes:                    185453425273\r\nmemory_usage:                  1552862566\r\n*/ \r\n```\r\n\r\nAs you can see the query becomes more than 10 times slower, requires much more RAM, and thinks it read 200Gb of data (which doesn't sound correct). \r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24280/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24280/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24276","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24276/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24276/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24276/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/24276","id":895216731,"node_id":"MDU6SXNzdWU4OTUyMTY3MzE=","number":24276,"title":"I find the query duration is mainly consumed in the phase of \"_<Debug> MemoryTracker: Current memory usage:_\". ","user":{"login":"wallace-clickhouse","id":65805524,"node_id":"MDQ6VXNlcjY1ODA1NTI0","avatar_url":"https://avatars.githubusercontent.com/u/65805524?v=4","gravatar_id":"","url":"https://api.github.com/users/wallace-clickhouse","html_url":"https://github.com/wallace-clickhouse","followers_url":"https://api.github.com/users/wallace-clickhouse/followers","following_url":"https://api.github.com/users/wallace-clickhouse/following{/other_user}","gists_url":"https://api.github.com/users/wallace-clickhouse/gists{/gist_id}","starred_url":"https://api.github.com/users/wallace-clickhouse/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wallace-clickhouse/subscriptions","organizations_url":"https://api.github.com/users/wallace-clickhouse/orgs","repos_url":"https://api.github.com/users/wallace-clickhouse/repos","events_url":"https://api.github.com/users/wallace-clickhouse/events{/privacy}","received_events_url":"https://api.github.com/users/wallace-clickhouse/received_events","type":"User","site_admin":false},"labels":[{"id":386401510,"node_id":"MDU6TGFiZWwzODY0MDE1MTA=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/question","name":"question","color":"bfdadc","default":true,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-05-19T09:34:12Z","updated_at":"2021-05-19T09:34:12Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"The query duration is mainly consumed in the phase of \"_<Debug> MemoryTracker: Current memory usage:_\". \r\nWhat is ClickHouse doing in this phase? Why is it so slow?\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24276/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24276/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24260","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24260/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24260/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24260/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/24260","id":894654142,"node_id":"MDU6SXNzdWU4OTQ2NTQxNDI=","number":24260,"title":"Problem with policies when your server had shut down incorrectly","user":{"login":"ivanova-zz","id":33092166,"node_id":"MDQ6VXNlcjMzMDkyMTY2","avatar_url":"https://avatars.githubusercontent.com/u/33092166?v=4","gravatar_id":"","url":"https://api.github.com/users/ivanova-zz","html_url":"https://github.com/ivanova-zz","followers_url":"https://api.github.com/users/ivanova-zz/followers","following_url":"https://api.github.com/users/ivanova-zz/following{/other_user}","gists_url":"https://api.github.com/users/ivanova-zz/gists{/gist_id}","starred_url":"https://api.github.com/users/ivanova-zz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ivanova-zz/subscriptions","organizations_url":"https://api.github.com/users/ivanova-zz/orgs","repos_url":"https://api.github.com/users/ivanova-zz/repos","events_url":"https://api.github.com/users/ivanova-zz/events{/privacy}","received_events_url":"https://api.github.com/users/ivanova-zz/received_events","type":"User","site_admin":false},"labels":[{"id":386401505,"node_id":"MDU6TGFiZWwzODY0MDE1MDU=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/bug","name":"bug","color":"ee0701","default":true,"description":"Confirmed user-visible misbehaviour in official release"},{"id":1507867504,"node_id":"MDU6TGFiZWwxNTA3ODY3NTA0","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/st-hold","name":"st-hold","color":"e5b890","default":false,"description":"We've paused the work on issue for some reason"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2021-05-18T18:18:37Z","updated_at":"2021-12-28T11:46:01Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"The server had shut down incorrectly due to a power problem\r\n\r\nOur storage_configuration:\r\n```\r\n<storage_configuration>\r\n    <disks>\r\n        <disk_ssd>\r\n\t    <path>/data/fast/</path>\r\n\t</disk_ssd>\r\n        <disk_hdd> \r\n            <path>/data/slow/</path>\r\n\t    <keep_free_space_bytes>10485760</keep_free_space_bytes>\r\n        </disk_hdd> \r\n    </disks>\r\n\r\n    <policies>\r\n        <moving_from_ssd_to_hdd>\r\n            <volumes>\r\n                <hot>\r\n                    <disk>disk_ssd</disk>\r\n                    <max_data_part_size_bytes>1073741824</max_data_part_size_bytes>\r\n                </hot>\r\n                <cold>\r\n                    <disk>disk_hdd</disk>\r\n                </cold>\r\n            </volumes>\r\n            <move_factor>0.3</move_factor>\r\n        </moving_from_ssd_to_hdd>\r\n    </policies>\r\n</storage_configuration>\r\n```\r\n\r\n\r\nFor data recovery I used the flag /var/lib/clickhouse/flags/force_restore_data . I created it by the command: \r\n```$ sudo -u clickhouse touch /var/lib/clickhouse/flags/force_restore_data```\r\n \r\n\r\nWhen I launched clickhouse-server after the server came back to work I got the error:\r\n> 2021.05.17 11:18:02.532039 [ 12184 ] {} <Error> Application: DB::Exception: Part 20210513_3835188_3934695_149 already exists: Cannot attach table `stats635`.`events12001` from metadata file /var/lib/clickhouse/store/682/6821e6fa-4f0e-4a4b-80b2-d3b2efb0dcfe/events12001.sql from query ATTACH TABLE stats635.events12001 UUID 'fe3ca1ac-caa9-4b2f-93be-3b2b965047db' (`date` Date DEFAULT toDate(time), `time` DateTime, `msec` UInt64, `value` Float32 DEFAULT CAST(1, 'Float32'), `ip` String, `country` String, `city` String, `region` String, `isp` String, `trackHost` String, `optimalConnectID` String, `isOptimal` String, `eventid` String, `serverType` String, `appVersion` String, `serverLocation` String, `appType` String, `installDate` String, `isHiddenApp` String, `externalIP` String, `connectEventID` String, `timeConnecting` String, `numberLaunch` String, `uuid` String, `appName` String, `networkType` String, `idfa` String, `IPAddress` String, `type` String, `countryCode` String, `asn` String, `aso` String, `hoster` String, `requestType` String, `reTryRequest` String, `connectionType` String, `UUIDOrigin` String) ENGINE = MergeTree PARTITION BY toYYYYMMDD(time) ORDER BY date TTL date TO VOLUME 'hot', date + toIntervalDay(7) TO VOLUME 'cold' SETTINGS index_granularity = 8192, storage_policy = 'moving_from_ssd_to_hdd': while loading database `stats635` from path /var/lib/clickhouse/metadata/stats635\r\n> 2021.05.17 11:18:02.532087 [ 12184 ] {} <Information> Application: shutting down\r\n> 2021.05.17 11:18:02.532094 [ 12184 ] {} <Debug> Application: Uninitializing subsystem: Logging Subsystem\r\n> 2021.05.17 11:18:02.532196 [ 12185 ] {} <Trace> BaseDaemon: Received signal -2\r\n> 2021.05.17 11:18:02.532246 [ 12185 ] {} <Information> BaseDaemon: Stop SignalListener thread\r\n> 2021.05.17 11:18:02.577780 [ 12183 ] {} <Information> Application: Child process exited normally with code 70.\r\n\r\nThen I checked for the presence of a folder named \"20210513_3835188_3934695_149\" under the path /data/fast/XXX/ and under the path /data/slow/XXX/. \r\nThe folder was in both paths, which was the cause of this error. I checked for content differences between these folders - there were no differences. \r\nThen I moved the folder from /data/fast/XXX/ and started clickhouse-server. \r\nAnd It started working fine!!! :)\r\n\r\n\r\nIt seems to me that the cause of this problem was a power cut at the time of transferring data from ssd to hdd. Are there any other solutions to this problem?\r\n\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24260/reactions","total_count":2,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24260/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24258","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24258/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24258/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24258/events","html_url":"https://github.com/ClickHouse/ClickHouse/pull/24258","id":894647664,"node_id":"MDExOlB1bGxSZXF1ZXN0NjQ2OTgwMjM2","number":24258,"title":"[WIP] MVCC prototype for MergeTree","user":{"login":"tavplubix","id":14847450,"node_id":"MDQ6VXNlcjE0ODQ3NDUw","avatar_url":"https://avatars.githubusercontent.com/u/14847450?v=4","gravatar_id":"","url":"https://api.github.com/users/tavplubix","html_url":"https://github.com/tavplubix","followers_url":"https://api.github.com/users/tavplubix/followers","following_url":"https://api.github.com/users/tavplubix/following{/other_user}","gists_url":"https://api.github.com/users/tavplubix/gists{/gist_id}","starred_url":"https://api.github.com/users/tavplubix/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tavplubix/subscriptions","organizations_url":"https://api.github.com/users/tavplubix/orgs","repos_url":"https://api.github.com/users/tavplubix/repos","events_url":"https://api.github.com/users/tavplubix/events{/privacy}","received_events_url":"https://api.github.com/users/tavplubix/received_events","type":"User","site_admin":false},"labels":[{"id":1876999755,"node_id":"MDU6TGFiZWwxODc2OTk5NzU1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/pr-not-for-changelog","name":"pr-not-for-changelog","color":"007700","default":false,"description":"This PR should not be mentioned in the changelog"},{"id":2250495937,"node_id":"MDU6TGFiZWwyMjUwNDk1OTM3","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/force%20tests","name":"force tests","color":"59d16d","default":false,"description":"Force test ignoring fast test output. Also forces full perf test run."}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-05-18T18:09:55Z","updated_at":"2022-01-28T18:21:54Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"draft":true,"pull_request":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/pulls/24258","html_url":"https://github.com/ClickHouse/ClickHouse/pull/24258","diff_url":"https://github.com/ClickHouse/ClickHouse/pull/24258.diff","patch_url":"https://github.com/ClickHouse/ClickHouse/pull/24258.patch","merged_at":null},"body":"I hereby agree to the terms of the CLA available at: https://yandex.ru/legal/cla/?lang=en\r\n\r\nChangelog category (leave one):\r\n- Not for changelog (changelog entry is not required)\r\n\r\nDetailed description / Documentation draft:\r\nNot for changelog, because it's not even experimental\r\n#22086\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24258/reactions","total_count":6,"+1":4,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":2},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24258/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24257","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24257/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24257/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24257/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/24257","id":894558589,"node_id":"MDU6SXNzdWU4OTQ1NTg1ODk=","number":24257,"title":"Security vulnerability notifications","user":{"login":"lubo","id":2872098,"node_id":"MDQ6VXNlcjI4NzIwOTg=","avatar_url":"https://avatars.githubusercontent.com/u/2872098?v=4","gravatar_id":"","url":"https://api.github.com/users/lubo","html_url":"https://github.com/lubo","followers_url":"https://api.github.com/users/lubo/followers","following_url":"https://api.github.com/users/lubo/following{/other_user}","gists_url":"https://api.github.com/users/lubo/gists{/gist_id}","starred_url":"https://api.github.com/users/lubo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/lubo/subscriptions","organizations_url":"https://api.github.com/users/lubo/orgs","repos_url":"https://api.github.com/users/lubo/repos","events_url":"https://api.github.com/users/lubo/events{/privacy}","received_events_url":"https://api.github.com/users/lubo/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2021-05-18T16:18:48Z","updated_at":"2021-05-25T02:00:26Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"**Use case**\r\n\r\nUsers should be able to subscribe to a feed, which will notify them whenever a new security vulnerability is published.\r\n\r\n**Describe the solution you'd like**\r\n\r\nAtom/RSS feed equivalent to https://clickhouse.tech/docs/en/whats-new/security-changelog/.\r\n\r\n**Describe alternatives you've considered**\r\n\r\nA mailing list, perhaps hosted on Google Groups, where security announcements would be posted.\r\n\r\n**Additional context**\r\n\r\nCurrently, if a user wants to keep up with the security with the security vulnerabilities, there seems to be no other way but to manually check https://clickhouse.tech/docs/en/whats-new/security-changelog/ whenever a new version is released. Since your release cadence is pretty high, this very impractical and perhaps even discouraging.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24257/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24257/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24246","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24246/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24246/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24246/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/24246","id":894253566,"node_id":"MDU6SXNzdWU4OTQyNTM1NjY=","number":24246,"title":"Getting \"Cannot create buckets using a POST\" when query storage_polices with GCP storage disk","user":{"login":"boqu","id":926765,"node_id":"MDQ6VXNlcjkyNjc2NQ==","avatar_url":"https://avatars.githubusercontent.com/u/926765?v=4","gravatar_id":"","url":"https://api.github.com/users/boqu","html_url":"https://github.com/boqu","followers_url":"https://api.github.com/users/boqu/followers","following_url":"https://api.github.com/users/boqu/following{/other_user}","gists_url":"https://api.github.com/users/boqu/gists{/gist_id}","starred_url":"https://api.github.com/users/boqu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/boqu/subscriptions","organizations_url":"https://api.github.com/users/boqu/orgs","repos_url":"https://api.github.com/users/boqu/repos","events_url":"https://api.github.com/users/boqu/events{/privacy}","received_events_url":"https://api.github.com/users/boqu/received_events","type":"User","site_admin":false},"labels":[{"id":386401507,"node_id":"MDU6TGFiZWwzODY0MDE1MDc=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/enhancement","name":"enhancement","color":"84b6eb","default":true,"description":null},{"id":2020016497,"node_id":"MDU6TGFiZWwyMDIwMDE2NDk3","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-s3","name":"comp-s3","color":"b5bcff","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2021-05-18T10:59:38Z","updated_at":"2021-06-07T17:01:33Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"**Describe the bug**\r\nWe are trying to run Clickhouse in GCP with GCP storage as one of disk in storage policy. See below storage policy config. When query system.storage_polices, I'm getting \"Cannot create buckets using a POST\" error. Meanwhile there are a lot of objects, which contain \"test\" string created in the bucket.  I didn't find anything particularly in document regarding using GCP storage with Clickhouse. \r\n\r\n**How to reproduce**\r\n* v21.3.8\r\n* clickhouse-client console.\r\n* Storage policy\r\n```\r\n<storage_configuration>\r\n         <disks>\r\n         <data1>\r\n            <path>/mnt/data1/clickhouse/data/</path>\r\n         </data1>\r\n         <data2>\r\n            <path>/mnt/data2/clickhouse/data/</path>\r\n         </data2>\r\n         <bucket1>\r\n           <type>s3</type>\r\n             <endpoint>https://storage.googleapis.com/bucket_name/root_path/</endpoint>\r\n             <access_key_id>######</access_key_id>\r\n             <secret_access_key>######</secret_access_key>\r\n         </bucket1>\r\n       </disks>\r\n       <policies>\r\n         <logs_policy>\r\n           <volumes>\r\n             <data>\r\n               <disk>data1</disk>\r\n               <disk>data2</disk>\r\n             </data>\r\n             <s3>\r\n               <disk>bucket1</disk>\r\n             </s3>\r\n           </volumes>\r\n         </logs_policy>\r\n       </policies>\r\n   </storage_configuration>\r\n```\r\n\r\n* Run `select * from system.storage_policies;` statemewnt\r\n\r\n**Expected behavior**\r\nIt should print out all storage polices details.\r\n\r\n**Error message and/or stacktrace**\r\n```\r\nSELECT *\r\nFROM system.storage_policies\r\n\r\nQuery id: 3885079a-e70b-439c-91df-a7861840e241\r\n\r\nCannot load data for command line suggestions: Code: 499, e.displayText() = DB::Exception: Received from localhost:9000. DB::Exception: 99: <?xml version='1.0' encoding='UTF-8'?><Error><Code>InvalidArgument</Code><Message>Invalid argument.</Message><Details>Cannot create buckets using a POST.</Details></Error>. (version 21.3.8.1)\r\n\r\n0 rows in set. Elapsed: 63.829 sec.\r\n\r\nReceived exception from server (version 21.3.8):\r\nCode: 499. DB::Exception: Received from localhost:9000. DB::Exception: 99: <?xml version='1.0' encoding='UTF-8'?><Error><Code>InvalidArgument</Code><Message>Invalid argument.</Message><Details>Cannot create buckets using a POST.</Details></Error>.\r\n```\r\n\r\nErrors in the server log:\r\n```\r\n2021.05.18 10:38:09.748502 [ 1784 ] {} <Error> AWSClient: HTTP response code: 400\r\nResolved remote host IP address:\r\nRequest ID:\r\nException name:\r\nError message: <?xml version='1.0' encoding='UTF-8'?><Error><Code>InvalidArgument</Code><Message>Invalid argument.</Message><Details>Cannot create buckets using a POST.</Details></Error>\r\n7 response headers:\r\nconnection : close\r\ncontent-length : 171\r\ncontent-type : application/xml; charset=UTF-8\r\ndate : Tue, 18 May 2021 10:38:09 GMT\r\nserver : UploadServer\r\nvary : Origin\r\n```\r\n\r\n**Additional context**\r\nN/A\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24246/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24246/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24236","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24236/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24236/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24236/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/24236","id":894105551,"node_id":"MDU6SXNzdWU4OTQxMDU1NTE=","number":24236,"title":"Different Enums being converted to UInt after UNION ALL.","user":{"login":"UnamedRus","id":9449405,"node_id":"MDQ6VXNlcjk0NDk0MDU=","avatar_url":"https://avatars.githubusercontent.com/u/9449405?v=4","gravatar_id":"","url":"https://api.github.com/users/UnamedRus","html_url":"https://github.com/UnamedRus","followers_url":"https://api.github.com/users/UnamedRus/followers","following_url":"https://api.github.com/users/UnamedRus/following{/other_user}","gists_url":"https://api.github.com/users/UnamedRus/gists{/gist_id}","starred_url":"https://api.github.com/users/UnamedRus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/UnamedRus/subscriptions","organizations_url":"https://api.github.com/users/UnamedRus/orgs","repos_url":"https://api.github.com/users/UnamedRus/repos","events_url":"https://api.github.com/users/UnamedRus/events{/privacy}","received_events_url":"https://api.github.com/users/UnamedRus/received_events","type":"User","site_admin":false},"labels":[{"id":1507886722,"node_id":"MDU6TGFiZWwxNTA3ODg2NzIy","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/st-discussion","name":"st-discussion","color":"e5b890","default":false,"description":"The story requires discussion /research / expert help / design & decomposition before will be taken"},{"id":1575085465,"node_id":"MDU6TGFiZWwxNTc1MDg1NDY1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/unexpected%20behaviour","name":"unexpected behaviour","color":"e088ca","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2021-05-18T08:12:28Z","updated_at":"2021-05-19T00:15:06Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"**How to reproduce**\r\nClickhouse version 21.6\r\n```\r\nSELECT CAST(number, 'Enum8(\\'key_a\\' = 0, \\'key_b\\' = 1)') AS x\r\nFROM numbers(2)\r\nUNION ALL\r\nSELECT CAST(number, 'Enum8(\\'key_c\\' = 2, \\'key_d\\' = 3)')\r\nFROM numbers(2, 2)\r\n\r\nQuery id: dd5d1925-310a-4e82-a2ad-39166987306b\r\n\r\n┌─x─┐\r\n│ 0 │\r\n│ 1 │\r\n└───┘\r\n┌─x─┐\r\n│ 2 │\r\n│ 3 │\r\n└───┘\r\n\r\n```\r\nClickhouse version 20.8.18\r\n```\r\nSELECT CAST(number, 'Enum8(\\'key_a\\' = 0, \\'key_b\\' = 1)') AS x\r\nFROM numbers(2)\r\nUNION ALL\r\nSELECT CAST(number, 'Enum8(\\'key_c\\' = 2, \\'key_d\\' = 3)')\r\nFROM numbers(2, 2)\r\n\r\n\r\nReceived exception from server (version 20.8.18):\r\nCode: 386. DB::Exception: Received from localhost:9000. DB::Exception: There is no supertype for types Enum8('key_a' = 0, 'key_b' = 1), Enum8('key_c' = 2, 'key_d' = 3).\r\n```\r\n\r\n**Expected behavior**\r\nIf Enums non intersecting, clickhouse can merge them safely. And if they are intersecting, probably clickhouse could prefer mapping from first Enum in selection and expand it with mapping from second enum? Or threw an error like in previous version.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24236/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24236/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24199","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24199/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24199/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24199/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/24199","id":893391862,"node_id":"MDU6SXNzdWU4OTMzOTE4NjI=","number":24199,"title":"domain('http://abc/') = ''","user":{"login":"mzealey","id":6083471,"node_id":"MDQ6VXNlcjYwODM0NzE=","avatar_url":"https://avatars.githubusercontent.com/u/6083471?v=4","gravatar_id":"","url":"https://api.github.com/users/mzealey","html_url":"https://github.com/mzealey","followers_url":"https://api.github.com/users/mzealey/followers","following_url":"https://api.github.com/users/mzealey/following{/other_user}","gists_url":"https://api.github.com/users/mzealey/gists{/gist_id}","starred_url":"https://api.github.com/users/mzealey/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mzealey/subscriptions","organizations_url":"https://api.github.com/users/mzealey/orgs","repos_url":"https://api.github.com/users/mzealey/repos","events_url":"https://api.github.com/users/mzealey/events{/privacy}","received_events_url":"https://api.github.com/users/mzealey/received_events","type":"User","site_admin":false},"labels":[{"id":1575085465,"node_id":"MDU6TGFiZWwxNTc1MDg1NDY1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/unexpected%20behaviour","name":"unexpected behaviour","color":"e088ca","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2021-05-17T14:28:18Z","updated_at":"2021-05-17T16:26:47Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Clickhouse 21.4.3.21\r\n\r\n```\r\nSELECT domain('http://abc/')\r\n\r\nQuery id: e9f15840-4d27-4563-b4ca-6351fd37092e\r\n\r\n┌─domain('http://abc/')─┐\r\n│                       │\r\n└───────────────────────┘\r\n\r\n```\r\n\r\nI would have expected this to produce 'abc' as the result. `abc.com` etc work correctly.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24199/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24199/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24164","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24164/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24164/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24164/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/24164","id":892676381,"node_id":"MDU6SXNzdWU4OTI2NzYzODE=","number":24164,"title":"date_time_input_format and date_time_output_format in users.xml don't work ","user":{"login":"yuzhichang","id":153784,"node_id":"MDQ6VXNlcjE1Mzc4NA==","avatar_url":"https://avatars.githubusercontent.com/u/153784?v=4","gravatar_id":"","url":"https://api.github.com/users/yuzhichang","html_url":"https://github.com/yuzhichang","followers_url":"https://api.github.com/users/yuzhichang/followers","following_url":"https://api.github.com/users/yuzhichang/following{/other_user}","gists_url":"https://api.github.com/users/yuzhichang/gists{/gist_id}","starred_url":"https://api.github.com/users/yuzhichang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yuzhichang/subscriptions","organizations_url":"https://api.github.com/users/yuzhichang/orgs","repos_url":"https://api.github.com/users/yuzhichang/repos","events_url":"https://api.github.com/users/yuzhichang/events{/privacy}","received_events_url":"https://api.github.com/users/yuzhichang/received_events","type":"User","site_admin":false},"labels":[{"id":1575085465,"node_id":"MDU6TGFiZWwxNTc1MDg1NDY1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/unexpected%20behaviour","name":"unexpected behaviour","color":"e088ca","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2021-05-16T13:54:07Z","updated_at":"2021-07-27T21:34:58Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"* clickhouse version: 21.3.8.76\r\n\r\nAdd following piece to users.xml and restart clickhouse-server:\r\n\r\n```\r\n            <date_time_input_format>best_effort</date_time_input_format>\r\n            <date_time_output_format>iso</date_time_output_format>\r\n```\r\n\r\n\r\n```\r\n$ clickhouse-client -m\r\nClickHouse client version 21.3.8.76 (official build).\r\nConnecting to localhost:9000 as user default.\r\nConnected to ClickHouse server version 21.3.8 revision 54447.\r\n\r\nDROP TABLE IF EXISTS test_datetime;\r\n\r\nCREATE TABLE test_datetime(timestamp DateTime('Europe/Moscow')) ENGINE=Log;\r\n\r\nSELECT name, value, changed FROM system.settings WHERE name LIKE 'date_time%';\r\n┌─name────────────────────┬─value───────┬─changed─┐\r\n│ date_time_input_format  │ best_effort │       1 │\r\n│ date_time_output_format │ iso         │       1 │\r\n└─────────────────────────┴─────────────┴─────────┘\r\n\r\nINSERT INTO test_datetime VALUES ('2009-07-13T09:07:13+08:00');\r\nException on client:\r\nCode: 6. DB::Exception: Cannot parse string '2009-07-13T09:07:13+08:00' as DateTime('Europe/Moscow'): syntax error at position 19 (parsed just '2009-07-13T09:07:13'): while executing 'FUNCTION CAST(assumeNotNull(_dummy_0) :: 2, 'DateTime(\\'Europe/Moscow\\')' :: 1) -> CAST(assumeNotNull(_dummy_0), 'DateTime(\\'Europe/Moscow\\')') DateTime('Europe/Moscow') : 4': data for INSERT was parsed from query\r\n\r\n\r\nSET date_time_input_format = 'best_effort';\r\n\r\nINSERT INTO test_datetime VALUES ('2009-07-13T09:07:13+08:00');\r\n1 rows in set. Elapsed: 0.023 sec. \r\n\r\nSELECT timestamp FROM test_datetime;\r\n┌───────────timestamp─┐\r\n│ 2009-07-13 05:07:13 │\r\n└─────────────────────┘\r\n\r\nSET date_time_output_format = 'iso';\r\n\r\nSELECT timestamp FROM test_datetime;\r\n┌────────────timestamp─┐\r\n│ 2009-07-13T01:07:13Z │\r\n└──────────────────────┘\r\n\r\n```\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24164/reactions","total_count":2,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24164/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24099","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24099/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24099/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24099/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/24099","id":891209673,"node_id":"MDU6SXNzdWU4OTEyMDk2NzM=","number":24099,"title":"Load data table inmemory and increase response time","user":{"login":"mbtolou","id":6413705,"node_id":"MDQ6VXNlcjY0MTM3MDU=","avatar_url":"https://avatars.githubusercontent.com/u/6413705?v=4","gravatar_id":"","url":"https://api.github.com/users/mbtolou","html_url":"https://github.com/mbtolou","followers_url":"https://api.github.com/users/mbtolou/followers","following_url":"https://api.github.com/users/mbtolou/following{/other_user}","gists_url":"https://api.github.com/users/mbtolou/gists{/gist_id}","starred_url":"https://api.github.com/users/mbtolou/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mbtolou/subscriptions","organizations_url":"https://api.github.com/users/mbtolou/orgs","repos_url":"https://api.github.com/users/mbtolou/repos","events_url":"https://api.github.com/users/mbtolou/events{/privacy}","received_events_url":"https://api.github.com/users/mbtolou/received_events","type":"User","site_admin":false},"labels":[{"id":386401510,"node_id":"MDU6TGFiZWwzODY0MDE1MTA=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/question","name":"question","color":"bfdadc","default":true,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2021-05-13T17:03:47Z","updated_at":"2021-05-23T22:55:08Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"hi.\r\nI test scenario that load 1 billion record in mongodb and test query performance.\r\nlike this :\r\n\r\nquery 1 : \r\n```\r\nselect *\r\nfrom test_table\r\nlimit 10000\r\n```\r\n\r\nquery 2:\r\n```\r\nselect server_id,sum(use_a)\r\nfrom test_table\r\ngroup by server_id\r\n```\r\n\r\nresult of mongodb and clickhouse : \r\n\r\n|            | Q1    | Q2    |\r\n|------------|-------|-------|\r\n| Clickhouse | 600ms | 1.7s  |\r\n| MongoDB    | 10ms  | 400ms |\r\n\r\n\r\nI search and found mongodb load data in RAM and increase performance .\r\nquestion:\r\nhow can load data inmemory for increase performance ?\r\n\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24099/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24099/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24093","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24093/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24093/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24093/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/24093","id":891082069,"node_id":"MDU6SXNzdWU4OTEwODIwNjk=","number":24093,"title":"Issues querying foreign tables with functions in where statements","user":{"login":"George3d6","id":23587658,"node_id":"MDQ6VXNlcjIzNTg3NjU4","avatar_url":"https://avatars.githubusercontent.com/u/23587658?v=4","gravatar_id":"","url":"https://api.github.com/users/George3d6","html_url":"https://github.com/George3d6","followers_url":"https://api.github.com/users/George3d6/followers","following_url":"https://api.github.com/users/George3d6/following{/other_user}","gists_url":"https://api.github.com/users/George3d6/gists{/gist_id}","starred_url":"https://api.github.com/users/George3d6/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/George3d6/subscriptions","organizations_url":"https://api.github.com/users/George3d6/orgs","repos_url":"https://api.github.com/users/George3d6/repos","events_url":"https://api.github.com/users/George3d6/events{/privacy}","received_events_url":"https://api.github.com/users/George3d6/received_events","type":"User","site_admin":false},"labels":[{"id":386401510,"node_id":"MDU6TGFiZWwzODY0MDE1MTA=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/question","name":"question","color":"bfdadc","default":true,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-05-13T14:19:09Z","updated_at":"2021-05-13T14:19:09Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"When using a foreign table (e.g. a mysql table) clickhouse doesn't seem to properly send the result of functions if they are called inside `WHERE` statements.\r\n\r\nExecuting `SELECT foo FROM foreign_table WHERE a=10 AND b='2019-10-05'` will send a statement like:\r\n\r\n```\r\nSELECT `foo`, `a`, `b` FROM `db`.`foreign_table`  WHERE (`a` = 10) AND (`b` = '2019-10-05')\r\n```\r\n\r\nBut executing `SELECT foo FROM foreign_table WHERE a=10 AND b=toDate('2019-10-05')` will send:\r\n\r\n```\r\nSELECT `foo`, `a`, `b` FROM `db`.`foreign_table`  WHERE (`a` = 10)\r\n```\r\n\r\nI assume that the function is executed afterwards and `b` is parsed clickhouse-side.\r\n\r\nI'm not sure if there is an easy fix for this, but I assume this would help with the efficiency of mysql foreign tables and might be critical in some high-load scenarios where one wants to filter on indexed columns.\r\n\r\nMy specific issue here is different and relates to the clickhouse mindsdb integration, but I think this \"bug\" (if you'd call it such) is more generic.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24093/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24093/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24092","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24092/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24092/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24092/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/24092","id":891079730,"node_id":"MDU6SXNzdWU4OTEwNzk3MzA=","number":24092,"title":"Seemingly stuck TTL delete in replication queue","user":{"login":"larry-cdn77","id":72978202,"node_id":"MDQ6VXNlcjcyOTc4MjAy","avatar_url":"https://avatars.githubusercontent.com/u/72978202?v=4","gravatar_id":"","url":"https://api.github.com/users/larry-cdn77","html_url":"https://github.com/larry-cdn77","followers_url":"https://api.github.com/users/larry-cdn77/followers","following_url":"https://api.github.com/users/larry-cdn77/following{/other_user}","gists_url":"https://api.github.com/users/larry-cdn77/gists{/gist_id}","starred_url":"https://api.github.com/users/larry-cdn77/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/larry-cdn77/subscriptions","organizations_url":"https://api.github.com/users/larry-cdn77/orgs","repos_url":"https://api.github.com/users/larry-cdn77/repos","events_url":"https://api.github.com/users/larry-cdn77/events{/privacy}","received_events_url":"https://api.github.com/users/larry-cdn77/received_events","type":"User","site_admin":false},"labels":[{"id":1575085465,"node_id":"MDU6TGFiZWwxNTc1MDg1NDY1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/unexpected%20behaviour","name":"unexpected behaviour","color":"e088ca","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2021-05-13T14:16:25Z","updated_at":"2021-07-23T18:49:44Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"I have a 3-way replicated aggregating table in 5 shards across 15 servers (version 21.3.8) and one of those 15 replicas built up a little backlog of TTL_DELETE merge actions, a few hours old and continually postponed (`num_tries` 0, `num_postponed` in thousands). The postpone reason is the same, only with varying identifiers:\r\n\r\n```Not executing log entry queue-0001492683 for part 1620814200_0_184_36 because 2 merges with TTL already executing, maximum 2```\r\n\r\nIn the server log I see no indications of what could be wrong at current time as well as the time when those actions appeared a few hours ago. Other replicas have no such backlog and appear to be doing their TTL deletes fine.\r\n\r\nI thought I would ask for any ideas why those particular TTL deletes would not be getting their turn\r\n\r\nThe table was created with:\r\n\r\n```\r\nCREATE TABLE t ( ... ) ENGINE ReplicatedAggregatingMergeTree( ... )\r\nPARTITION BY toStartOfFiveMinute(time) ORDER BY (time)\r\nTTL time + INTERVAL 24 HOUR\r\n```","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24092/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24092/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24087","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24087/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24087/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24087/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/24087","id":890995815,"node_id":"MDU6SXNzdWU4OTA5OTU4MTU=","number":24087,"title":"No progress-bar displayed for queries with GLOBAL IN,v21.3","user":{"login":"PhantomPhreak","id":8307692,"node_id":"MDQ6VXNlcjgzMDc2OTI=","avatar_url":"https://avatars.githubusercontent.com/u/8307692?v=4","gravatar_id":"","url":"https://api.github.com/users/PhantomPhreak","html_url":"https://github.com/PhantomPhreak","followers_url":"https://api.github.com/users/PhantomPhreak/followers","following_url":"https://api.github.com/users/PhantomPhreak/following{/other_user}","gists_url":"https://api.github.com/users/PhantomPhreak/gists{/gist_id}","starred_url":"https://api.github.com/users/PhantomPhreak/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/PhantomPhreak/subscriptions","organizations_url":"https://api.github.com/users/PhantomPhreak/orgs","repos_url":"https://api.github.com/users/PhantomPhreak/repos","events_url":"https://api.github.com/users/PhantomPhreak/events{/privacy}","received_events_url":"https://api.github.com/users/PhantomPhreak/received_events","type":"User","site_admin":false},"labels":[{"id":1575085465,"node_id":"MDU6TGFiZWwxNTc1MDg1NDY1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/unexpected%20behaviour","name":"unexpected behaviour","color":"e088ca","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2021-05-13T12:24:21Z","updated_at":"2021-05-14T04:47:40Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Clickhouse v21.3.9.1\r\n\r\nWe have a cluster 4 shards, 2 replicas in each shard.\r\n\r\nThere is problem with executing queries via clickhouse-client with default `receive_timeout` and `send_timeout` settings (300s);\r\n\r\n```\r\nSELECT DISTINCT id\r\nFROM database.table1\r\nWHERE (date_column = (toDate('2021-05-10') - 1)) AND (id GLOBAL IN \r\n(\r\n    SELECT DISTINCT id\r\n    FROM database.table2\r\n    WHERE column IN ('value1', 'value2', 'value3')\r\n))\r\n\r\nQuery id: 4899fb60-e99c-4b9a-af75-d20a95890bab\r\n\r\nTimeout exceeded while receiving data from server. Waited for 300 seconds, timeout is 300 seconds.\r\nCancelling query.\r\nOk.\r\nQuery was cancelled.\r\n```\r\n\r\nThis query is sub-optimal, `GLOBAL IN` sub-query takes ~90 to finish and generate plenty of data to be transferred for temporary table, which takes time.\r\nFrom query_log exections steps looks like:\r\n```\r\n\r\n┌─query_duration_ms─┬─type────────┬─normalized_query_hash─┬─query_id─────────────────────────────┬─initial_query_id─────────────────────┬─is_initial_query─┐                                               \r\n│            383344 │ QueryFinish │  14495163505856945038 │ 4899fb60-e99c-4b9a-af75-d20a95890bab │ 4899fb60-e99c-4b9a-af75-d20a95890bab │                1 │                                               \r\n└───────────────────┴─────────────┴───────────────────────┴──────────────────────────────────────┴──────────────────────────────────────┴──────────────────┘                                               \r\n┌─query_duration_ms─┬─type────────┬─normalized_query_hash─┬─query_id─────────────────────────────┬─initial_query_id─────────────────────┬─is_initial_query─┐                                               \r\n│             96420 │ QueryFinish │  17499409745131380989 │ 4d0b3594-90de-4f5d-b46e-ee2b3e8c742d │ 4899fb60-e99c-4b9a-af75-d20a95890bab │                0 │                                               \r\n│               417 │ QueryFinish │   1201404393621644565 │ ced8593f-eafe-4fb1-990b-341114c23733 │ 4899fb60-e99c-4b9a-af75-d20a95890bab │                0 │                                               \r\n└───────────────────┴─────────────┴───────────────────────┴──────────────────────────────────────┴──────────────────────────────────────┴──────────────────┘                                               \r\n┌─query_duration_ms─┬─type────────┬─normalized_query_hash─┬─query_id─────────────────────────────┬─initial_query_id─────────────────────┬─is_initial_query─┐                                               \r\n│             88871 │ QueryFinish │  17499409745131380989 │ 03224880-9bab-4811-bf40-46424b510802 │ 4899fb60-e99c-4b9a-af75-d20a95890bab │                0 │                                               \r\n│               599 │ QueryFinish │   1201404393621644565 │ 2b69160f-638a-4135-9aa4-5edf9bf2cfd8 │ 4899fb60-e99c-4b9a-af75-d20a95890bab │                0 │                                               \r\n└───────────────────┴─────────────┴───────────────────────┴──────────────────────────────────────┴──────────────────────────────────────┴──────────────────┘                                               \r\n┌─query_duration_ms─┬─type────────┬─normalized_query_hash─┬─query_id─────────────────────────────┬─initial_query_id─────────────────────┬─is_initial_query─┐                                               \r\n│             89570 │ QueryFinish │  17499409745131380989 │ 51b61c65-4e14-404c-9813-6df43b5737ea │ 4899fb60-e99c-4b9a-af75-d20a95890bab │                0 │                                               \r\n│              1434 │ QueryFinish │   1201404393621644565 │ 11757c39-68fc-466a-95d1-a2a094261c26 │ 4899fb60-e99c-4b9a-af75-d20a95890bab │                0 │                                               \r\n└───────────────────┴─────────────┴───────────────────────┴──────────────────────────────────────┴──────────────────────────────────────┴──────────────────┘   \r\n```\r\nSo, query execution takes 383s, which is more than 300s.\r\nDuring query execution, clickhouse-client is not displaying a progress bar, only blinking cursor. Looks like absense of any data from server triggering a query cancellation by the `receive_timeout=300`\r\n\r\nInitial query's settings:\r\n```\r\nSettings.Names:                ['receive_timeout','send_timeout','use_uncompressed_cache','distributed_directory_monitor_batch_inserts','load_balancing','priority','log_queries','joined_subquery_requires_alias','allow_distributed_ddl','max_bytes_before_external_group_by','max_bytes_before_external_sort','max_execution_time','timeout_before_checking_execution_speed','readonly','max_memory_usage','max_memory_usage_for_user','log_query_threads','allow_ddl','cancel_http_readonly_queries_on_client_close','use_compact_format_in_distributed_parts_names']\r\nSettings.Values:               ['7200','7200','0','1','random','5','1','0','0','34359738368','34359738368','7200','60','1','103079215104','137438953472','0','0','1','1']\r\n```\r\n\r\nExpected behavior: clickhouse-client showing progress bar for queries with `GLOBAL IN`, and do not cancel the query by the timeout (at least that's how it was working in v20.11).\r\n\r\nThanks!\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24087/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24087/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24079","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24079/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24079/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24079/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/24079","id":890698424,"node_id":"MDU6SXNzdWU4OTA2OTg0MjQ=","number":24079,"title":"Settings Clause in MV SQL has no effect","user":{"login":"slimtom95","id":20624187,"node_id":"MDQ6VXNlcjIwNjI0MTg3","avatar_url":"https://avatars.githubusercontent.com/u/20624187?v=4","gravatar_id":"","url":"https://api.github.com/users/slimtom95","html_url":"https://github.com/slimtom95","followers_url":"https://api.github.com/users/slimtom95/followers","following_url":"https://api.github.com/users/slimtom95/following{/other_user}","gists_url":"https://api.github.com/users/slimtom95/gists{/gist_id}","starred_url":"https://api.github.com/users/slimtom95/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/slimtom95/subscriptions","organizations_url":"https://api.github.com/users/slimtom95/orgs","repos_url":"https://api.github.com/users/slimtom95/repos","events_url":"https://api.github.com/users/slimtom95/events{/privacy}","received_events_url":"https://api.github.com/users/slimtom95/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2021-05-13T04:46:22Z","updated_at":"2021-05-13T06:47:48Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"The Settings inside MV SQL seems to be overrided by session parameter.\r\n\r\ncreate materialized view xxx to xxx as\r\nselect xxx\r\n**SETTINGS xxx**\r\n\r\nI tested it with insert_quorum settings on version 20.8, it's kind of hard to provide a full example. Do we support using SETTINGS inside MV SQL?","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24079/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24079/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24078","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24078/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24078/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24078/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/24078","id":890665077,"node_id":"MDU6SXNzdWU4OTA2NjUwNzc=","number":24078,"title":"NaN compare error","user":{"login":"maliangzhu","id":23271384,"node_id":"MDQ6VXNlcjIzMjcxMzg0","avatar_url":"https://avatars.githubusercontent.com/u/23271384?v=4","gravatar_id":"","url":"https://api.github.com/users/maliangzhu","html_url":"https://github.com/maliangzhu","followers_url":"https://api.github.com/users/maliangzhu/followers","following_url":"https://api.github.com/users/maliangzhu/following{/other_user}","gists_url":"https://api.github.com/users/maliangzhu/gists{/gist_id}","starred_url":"https://api.github.com/users/maliangzhu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/maliangzhu/subscriptions","organizations_url":"https://api.github.com/users/maliangzhu/orgs","repos_url":"https://api.github.com/users/maliangzhu/repos","events_url":"https://api.github.com/users/maliangzhu/events{/privacy}","received_events_url":"https://api.github.com/users/maliangzhu/received_events","type":"User","site_admin":false},"labels":[{"id":1575085465,"node_id":"MDU6TGFiZWwxNTc1MDg1NDY1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/unexpected%20behaviour","name":"unexpected behaviour","color":"e088ca","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-05-13T03:26:24Z","updated_at":"2021-05-13T03:26:24Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"```sql\r\ncreate table t1 ( a float) engine=Log;\r\ninsert into t1 values('NaN');\r\nselect * from t1 where a = a+1;\r\n```\r\n```\r\nexpect : 1 row\r\nreal: 0 row\r\n```\r\n\r\ncommit 32c263aa9f2cbf0982426ea53625ad33fde6f479 seems fixed NaN compare in hashtab\r\n\r\nbut scan operator seems still error\r\n\r\nDoes modify `bool_if_safe_conversion`  can fix the problem?\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24078/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24078/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24076","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24076/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24076/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24076/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/24076","id":890643041,"node_id":"MDU6SXNzdWU4OTA2NDMwNDE=","number":24076,"title":"The last character is missing when using kafka engine with LineAsString format","user":{"login":"fancy27","id":3947481,"node_id":"MDQ6VXNlcjM5NDc0ODE=","avatar_url":"https://avatars.githubusercontent.com/u/3947481?v=4","gravatar_id":"","url":"https://api.github.com/users/fancy27","html_url":"https://github.com/fancy27","followers_url":"https://api.github.com/users/fancy27/followers","following_url":"https://api.github.com/users/fancy27/following{/other_user}","gists_url":"https://api.github.com/users/fancy27/gists{/gist_id}","starred_url":"https://api.github.com/users/fancy27/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fancy27/subscriptions","organizations_url":"https://api.github.com/users/fancy27/orgs","repos_url":"https://api.github.com/users/fancy27/repos","events_url":"https://api.github.com/users/fancy27/events{/privacy}","received_events_url":"https://api.github.com/users/fancy27/received_events","type":"User","site_admin":false},"labels":[{"id":1575085465,"node_id":"MDU6TGFiZWwxNTc1MDg1NDY1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/unexpected%20behaviour","name":"unexpected behaviour","color":"e088ca","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-05-13T02:30:59Z","updated_at":"2021-05-13T02:30:59Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"**Describe the unexpected behaviour**\r\nThe last character is missing when using kafka engine with LineAsString format\r\n\r\n**Additional context**\r\nMaybe kafka inputStream think the last of character of the string line is \\0 after LineAsStringRowInputFormat::readLineObject escape the last character(\\n).\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24076/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24076/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24071","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24071/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24071/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24071/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/24071","id":890454045,"node_id":"MDU6SXNzdWU4OTA0NTQwNDU=","number":24071,"title":"GRANT SELECT if column not in restricted tuple","user":{"login":"bralbral","id":54455457,"node_id":"MDQ6VXNlcjU0NDU1NDU3","avatar_url":"https://avatars.githubusercontent.com/u/54455457?v=4","gravatar_id":"","url":"https://api.github.com/users/bralbral","html_url":"https://github.com/bralbral","followers_url":"https://api.github.com/users/bralbral/followers","following_url":"https://api.github.com/users/bralbral/following{/other_user}","gists_url":"https://api.github.com/users/bralbral/gists{/gist_id}","starred_url":"https://api.github.com/users/bralbral/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bralbral/subscriptions","organizations_url":"https://api.github.com/users/bralbral/orgs","repos_url":"https://api.github.com/users/bralbral/repos","events_url":"https://api.github.com/users/bralbral/events{/privacy}","received_events_url":"https://api.github.com/users/bralbral/received_events","type":"User","site_admin":false},"labels":[{"id":386401510,"node_id":"MDU6TGFiZWwzODY0MDE1MTA=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/question","name":"question","color":"bfdadc","default":true,"description":""},{"id":2011606513,"node_id":"MDU6TGFiZWwyMDExNjA2NTEz","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-rbac","name":"comp-rbac","color":"b5bcff","default":false,"description":"Access control related"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-05-12T20:21:07Z","updated_at":"2021-05-13T01:13:28Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"According documentation : \r\n\r\n```\r\nGRANT SELECT(x,y) ON db.table TO john WITH GRANT OPTION\r\nIt means that john has the permission to execute:\r\n\r\nSELECT x,y FROM db.table.\r\nSELECT x FROM db.table.\r\nSELECT y FROM db.table.\r\njohn can’t execute SELECT z FROM db.table. The SELECT * FROM db.table also is not available. Processing this query, ClickHouse doesn’t return any data, even x and y. The only exception is if a table contains only x and y columns. In this case ClickHouse returns all the data.\r\n```\r\n\r\nIs there a way to return column z empty, filled with null, or not return during processing? \r\n`SELECT x,y,z FROM db.table` now returns exception. \r\nThis behavior is incomprehensible\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24071/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24071/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24053","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24053/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24053/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24053/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/24053","id":889962069,"node_id":"MDU6SXNzdWU4ODk5NjIwNjk=","number":24053,"title":"STOP DISTRIBUTED SENDS do not disable background data distribution completely v21.3","user":{"login":"PhantomPhreak","id":8307692,"node_id":"MDQ6VXNlcjgzMDc2OTI=","avatar_url":"https://avatars.githubusercontent.com/u/8307692?v=4","gravatar_id":"","url":"https://api.github.com/users/PhantomPhreak","html_url":"https://github.com/PhantomPhreak","followers_url":"https://api.github.com/users/PhantomPhreak/followers","following_url":"https://api.github.com/users/PhantomPhreak/following{/other_user}","gists_url":"https://api.github.com/users/PhantomPhreak/gists{/gist_id}","starred_url":"https://api.github.com/users/PhantomPhreak/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/PhantomPhreak/subscriptions","organizations_url":"https://api.github.com/users/PhantomPhreak/orgs","repos_url":"https://api.github.com/users/PhantomPhreak/repos","events_url":"https://api.github.com/users/PhantomPhreak/events{/privacy}","received_events_url":"https://api.github.com/users/PhantomPhreak/received_events","type":"User","site_admin":false},"labels":[{"id":1575085465,"node_id":"MDU6TGFiZWwxNTc1MDg1NDY1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/unexpected%20behaviour","name":"unexpected behaviour","color":"e088ca","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2021-05-12T10:57:57Z","updated_at":"2021-06-07T17:36:37Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"**Cluster configuration**\r\n2 shards, 2 replicas:\r\n```\r\n        <remote_servers>\r\n                <test_cluster>\r\n                        <shard>\r\n                                <weight>1</weight>\r\n                                <internal_replication>true</internal_replication>\r\n                                <replica>\r\n                                        <host>host1</host>\r\n                                </replica>\r\n                                <replica>\r\n                                        <host>host2</host>\r\n                                </replica>\r\n                        </shard>\r\n                        <shard>\r\n                                <weight>1</weight>\r\n                                <internal_replication>true</internal_replication>\r\n                                <replica>\r\n                                        <host>host3</host>\r\n                                </replica>\r\n                                <replica>\r\n                                        <host>host4</host>\r\n                                </replica>\r\n                        </shard>\r\n                </test_cluster>\r\n        </remote_servers>\r\n```\r\n```\r\n:) select cluster,shard_num,replica_num,host_name,is_local from system.clusters;                                                      \r\n\r\nSELECT\r\n    cluster,\r\n    shard_num,\r\n    replica_num,\r\n    host_name,\r\n    is_local\r\nFROM system.clusters\r\n\r\n┌─cluster──────┬─shard_num─┬─replica_num─┬─host_name─┬─is_local─┐\r\n│ test_cluster │         1 │           1 │ host1     │        1 │\r\n│ test_cluster │         1 │           2 │ host2     │        0 │\r\n│ test_cluster │         2 │           1 │ host3     │        0 │\r\n│ test_cluster │         2 │           2 │ host4     │        0 │\r\n└──────────────┴───────────┴─────────────┴───────────┴──────────┘\r\n```\r\n```\r\nSELECT\r\n    name,\r\n    value,\r\n    changed\r\nFROM system.settings\r\nWHERE changed = 1\r\nORDER BY name ASC\r\n\r\n┌─name──────────────────────────────────────────┬─value──┬─changed─┐\r\n│ distributed_aggregation_memory_efficient      │ 1      │       1 │\r\n│ distributed_directory_monitor_batch_inserts   │ 1      │       1 │\r\n│ input_format_skip_unknown_fields              │ 1      │       1 │\r\n│ load_balancing                                │ random │       1 │\r\n│ log_queries                                   │ 1      │       1 │\r\n│ max_memory_usage                              │ 0      │       1 │\r\n│ max_parallel_replicas                         │ 1      │       1 │\r\n│ readonly                                      │ 0      │       1 │\r\n│ use_compact_format_in_distributed_parts_names │ 1      │       1 │\r\n│ use_uncompressed_cache                        │ 0      │       1 │\r\n└───────────────────────────────────────────────┴────────┴─────────┘\r\n\r\n```\r\n\r\nTables:\r\n```\r\nCREATE TABLE IF NOT EXISTS test.table_local on cluster test_cluster\r\n(\r\n    `event_date` Date,\r\n    `id` String\r\n)\r\nENGINE = ReplicatedMergeTree('/clickhouse/tables/{shard}/table', '{replica}')\r\nPARTITION BY toYYYYMM(event_date)\r\nORDER BY (event_date, id)\r\nSETTINGS index_granularity = 8192;\r\n\r\n\r\nCREATE TABLE IF NOT EXISTS test.table on cluster test_cluster\r\n(\r\n    `event_date` Date,\r\n    `id` String\r\n)\r\nENGINE = Distributed('test_cluster', 'test', 'table_local', id);\r\n```\r\n\r\nDisabling DISTRIBUTED SENDS and inserting data into `test.table` on host1:\r\n```\r\nhost1 :) SYSTEM STOP DISTRIBUTED SENDS test.table;\r\nhost1 :) insert into test.table ...\r\n```\r\n\r\n**Expected behavior**\r\n`STOP DISTRIBUTED SENDS` [doc](https://clickhouse.tech/docs/en/sql-reference/statements/system/#query_language-system-stop-distributed-sends):\r\n> Disables background data distribution when inserting data into distributed tables.\r\n\r\n* Data is accumulated for both shards in `/var/lib/clickhouse/data/test/table/`, there are no data written into underlying tables for all of the shards.\r\n* Distribution queue stats shown for both shards in `system.distribution_queue` table with `is_blocked=1`\r\n\r\n**Current behaviour**\r\n* Data for shard1 still flushed to the underlying replicated table, which is local to the host, performing inserts (host1), and accumulated in `/var/lib/clickhouse/data/test/table/` only for shard2:\r\n```\r\nhost1 :) select count() from test.table_local;\r\n\r\nSELECT count()\r\nFROM test.table_local\r\n\r\n┌───count()─┐\r\n│ 142253365 │\r\n└───────────┘\r\n\r\n1 rows in set. Elapsed: 0.011 sec\r\n\r\nhost3 :) select count() from test.table_local;\r\n\r\nSELECT count()\r\nFROM test.table_local\r\n\r\n┌─count()─┐\r\n│       0 │\r\n└─────────┘\r\n\r\n\r\n1 rows in set. Elapsed: 0.011 sec\r\n```\r\n\r\n* `system.distribution_queue` do not show any statistics for shard1, which is local to the host, performing inserts\r\n```\r\nhost1 :) \r\n\r\nSELECT *\r\nFROM system.distribution_queue\r\nWHERE database = 'test'\r\n\r\n\r\n┌─database─┬─table─┬─data_path───────────────────────────────────────────────────────────┬─is_blocked─┬─error_count─┬─data_files─┬─data_compressed_bytes─┬─last_exception─┐\r\n│ test     │ table │ /var/lib/clickhouse/data/test/table/shard2_replica1,shard2_replica2/ │          1 │           0 │          2 │              48880587 │                │\r\n└──────────┴───────┴─────────────────────────────────────────────────────────────────────┴────────────┴─────────────┴────────────┴───────────────────────┴────────────────┘\r\n\r\n1 rows in set. Elapsed: 0.213 sec. \r\n\r\n```\r\n\r\nThus, `STOP DISTRIBUTED SENDS` do not disable data distribution by tables with `Distributed()` engine completely. I don't know is it actually a bug or feature, but based on engine's [documentation](https://clickhouse.tech/docs/en/engines/table-engines/special/distributed/) and `STOP DISTRIBUTED SENDS` command definition, it's a bug. Currently, we can't put underlying tables into readonly mode by using this feature with a described cluster config and table's schema.\r\n\r\nclickhouse v21.3.9.1","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24053/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24053/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24050","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24050/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24050/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24050/events","html_url":"https://github.com/ClickHouse/ClickHouse/pull/24050","id":889935431,"node_id":"MDExOlB1bGxSZXF1ZXN0NjQzMDM2Njk2","number":24050,"title":"FunctionsLogical JIT refactoring","user":{"login":"kitaisreal","id":22458333,"node_id":"MDQ6VXNlcjIyNDU4MzMz","avatar_url":"https://avatars.githubusercontent.com/u/22458333?v=4","gravatar_id":"","url":"https://api.github.com/users/kitaisreal","html_url":"https://github.com/kitaisreal","followers_url":"https://api.github.com/users/kitaisreal/followers","following_url":"https://api.github.com/users/kitaisreal/following{/other_user}","gists_url":"https://api.github.com/users/kitaisreal/gists{/gist_id}","starred_url":"https://api.github.com/users/kitaisreal/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kitaisreal/subscriptions","organizations_url":"https://api.github.com/users/kitaisreal/orgs","repos_url":"https://api.github.com/users/kitaisreal/repos","events_url":"https://api.github.com/users/kitaisreal/events{/privacy}","received_events_url":"https://api.github.com/users/kitaisreal/received_events","type":"User","site_admin":false},"labels":[{"id":1876999755,"node_id":"MDU6TGFiZWwxODc2OTk5NzU1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/pr-not-for-changelog","name":"pr-not-for-changelog","color":"007700","default":false,"description":"This PR should not be mentioned in the changelog"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-05-12T10:23:52Z","updated_at":"2021-07-02T20:54:02Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":true,"pull_request":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/pulls/24050","html_url":"https://github.com/ClickHouse/ClickHouse/pull/24050","diff_url":"https://github.com/ClickHouse/ClickHouse/pull/24050.diff","patch_url":"https://github.com/ClickHouse/ClickHouse/pull/24050.patch","merged_at":null},"body":"I hereby agree to the terms of the CLA available at: https://yandex.ru/legal/cla/?lang=en\r\n\r\nChangelog category (leave one):\r\n- Not for changelog (changelog entry is not required)\r\n\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24050/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24050/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24042","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24042/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24042/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24042/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/24042","id":889782850,"node_id":"MDU6SXNzdWU4ODk3ODI4NTA=","number":24042,"title":"DEFAULT value for Nested","user":{"login":"filimonov","id":1549571,"node_id":"MDQ6VXNlcjE1NDk1NzE=","avatar_url":"https://avatars.githubusercontent.com/u/1549571?v=4","gravatar_id":"","url":"https://api.github.com/users/filimonov","html_url":"https://github.com/filimonov","followers_url":"https://api.github.com/users/filimonov/followers","following_url":"https://api.github.com/users/filimonov/following{/other_user}","gists_url":"https://api.github.com/users/filimonov/gists{/gist_id}","starred_url":"https://api.github.com/users/filimonov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/filimonov/subscriptions","organizations_url":"https://api.github.com/users/filimonov/orgs","repos_url":"https://api.github.com/users/filimonov/repos","events_url":"https://api.github.com/users/filimonov/events{/privacy}","received_events_url":"https://api.github.com/users/filimonov/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":1365579236,"node_id":"MDU6TGFiZWwxMzY1NTc5MjM2","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/minor","name":"minor","color":"FFF8F8","default":false,"description":"Priority: minor"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2021-05-12T07:47:10Z","updated_at":"2021-05-12T11:53:48Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"body":"Usecase:\r\n```\r\nCREATE TABLE nested_default\r\n(\r\n    json String,\r\n    Orders Nested(id UInt64, name String) DEFAULT JSONExtract(json, 'Orders', 'Nested(id UInt64, name String)')\r\n) Engine = MergeTree\r\nORDER BY tuple();\r\n\r\nSHOW CREATE TABLE nested_default\r\n\r\nRow 1:\r\n──────\r\nstatement: CREATE TABLE default.nested_default\r\n(\r\n    `json` String,\r\n    `Orders.id` Array(UInt64) DEFAULT JSONExtract(json, 'Orders', 'Nested(id UInt64, name String)'),\r\n    `Orders.name` Array(String) DEFAULT JSONExtract(json, 'Orders', 'Nested(id UInt64, name String)')\r\n)\r\nENGINE = MergeTree\r\nORDER BY tuple()\r\nSETTINGS index_granularity = 8192\r\n\r\n\r\nINSERT INTO nested_default(json) VALUES ('{\"Orders\":[{\"id\":1,\"name\":\"a\"},{\"id\":2,\"name\":\"b\"}]}');\r\n\r\nReceived exception from server (version 21.6.1):\r\nCode: 43. DB::Exception: Received from localhost:9000. DB::Exception: Illegal type Tuple(id UInt64, name String) of argument of function toUInt64: while executing 'FUNCTION CAST(JSONExtract(json, 'Orders', 'Nested(id UInt64, name String)') : 6, 'Array(UInt64)' :: 3) -> CAST(JSONExtract(json, 'Orders', 'Nested(id UInt64, name String)'), 'Array(UInt64)') Array(UInt64) : 5'. \r\n```\r\n\r\nugly workaround (lot of repetitions, ALIAS don't work).\r\n\r\n```\r\nCREATE TABLE nested_default2\r\n(\r\n    json String,\r\n    `Orders.id` Array(UInt64) DEFAULT JSONExtract(json, 'Orders', 'Nested(id UInt64, name String)').1,\r\n    `Orders.name` Array(String) DEFAULT JSONExtract(json, 'Orders', 'Nested(id UInt64, name String)').2\r\n) Engine = MergeTree\r\nORDER BY tuple();\r\n```","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24042/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24042/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24012","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24012/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24012/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24012/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/24012","id":886490984,"node_id":"MDU6SXNzdWU4ODY0OTA5ODQ=","number":24012,"title":"No allowing row policy but the data is still scanned.","user":{"login":"filimonov","id":1549571,"node_id":"MDQ6VXNlcjE1NDk1NzE=","avatar_url":"https://avatars.githubusercontent.com/u/1549571?v=4","gravatar_id":"","url":"https://api.github.com/users/filimonov","html_url":"https://github.com/filimonov","followers_url":"https://api.github.com/users/filimonov/followers","following_url":"https://api.github.com/users/filimonov/following{/other_user}","gists_url":"https://api.github.com/users/filimonov/gists{/gist_id}","starred_url":"https://api.github.com/users/filimonov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/filimonov/subscriptions","organizations_url":"https://api.github.com/users/filimonov/orgs","repos_url":"https://api.github.com/users/filimonov/repos","events_url":"https://api.github.com/users/filimonov/events{/privacy}","received_events_url":"https://api.github.com/users/filimonov/received_events","type":"User","site_admin":false},"labels":[{"id":386401508,"node_id":"MDU6TGFiZWwzODY0MDE1MDg=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/help%20wanted","name":"help wanted","color":"128A0C","default":true,"description":null},{"id":756395244,"node_id":"MDU6TGFiZWw3NTYzOTUyNDQ=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/performance","name":"performance","color":"c2e0c6","default":false,"description":null},{"id":1365579236,"node_id":"MDU6TGFiZWwxMzY1NTc5MjM2","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/minor","name":"minor","color":"FFF8F8","default":false,"description":"Priority: minor"},{"id":1575085465,"node_id":"MDU6TGFiZWwxNTc1MDg1NDY1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/unexpected%20behaviour","name":"unexpected behaviour","color":"e088ca","default":false,"description":""},{"id":2011606513,"node_id":"MDU6TGFiZWwyMDExNjA2NTEz","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-rbac","name":"comp-rbac","color":"b5bcff","default":false,"description":"Access control related"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2021-05-11T08:33:20Z","updated_at":"2021-10-02T13:19:10Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"body":"```\r\ncreate table raw_policy_test engine=MergeTree order by tuple() as SELECT number%1000 as a, number from numbers(1000000000);\r\nCREATE ROW POLICY test_rls_2 ON default.raw_policy_test USING a < 10 TO readonly;\r\n\r\nSELECT user()\r\n┌─currentUser()─┐\r\n│ default       │\r\n└───────────────┘\r\n\r\nSELECT number FROM default.raw_policy_test\r\n\r\nOk.\r\n\r\n0 rows in set. Elapsed: 1.537 sec. Processed 1.00 billion rows, 8.00 GB (650.43 million rows/s., 5.20 GB/s.) \r\n```\r\n\r\nWhy did we process 1 bln rows, if `default` has no any row policy which would allow him to read the table?","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24012/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/24012/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/23989","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/23989/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/23989/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/23989/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/23989","id":883555364,"node_id":"MDU6SXNzdWU4ODM1NTUzNjQ=","number":23989,"title":"Are there any plans for the table engine EmbeddedRocksDB? will consider implementing distributed storage of key-value data?","user":{"login":"blueChild","id":33257388,"node_id":"MDQ6VXNlcjMzMjU3Mzg4","avatar_url":"https://avatars.githubusercontent.com/u/33257388?v=4","gravatar_id":"","url":"https://api.github.com/users/blueChild","html_url":"https://github.com/blueChild","followers_url":"https://api.github.com/users/blueChild/followers","following_url":"https://api.github.com/users/blueChild/following{/other_user}","gists_url":"https://api.github.com/users/blueChild/gists{/gist_id}","starred_url":"https://api.github.com/users/blueChild/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/blueChild/subscriptions","organizations_url":"https://api.github.com/users/blueChild/orgs","repos_url":"https://api.github.com/users/blueChild/repos","events_url":"https://api.github.com/users/blueChild/events{/privacy}","received_events_url":"https://api.github.com/users/blueChild/received_events","type":"User","site_admin":false},"labels":[{"id":386401510,"node_id":"MDU6TGFiZWwzODY0MDE1MTA=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/question","name":"question","color":"bfdadc","default":true,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-05-10T07:04:35Z","updated_at":"2021-05-10T07:06:05Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Currently, the table engine `EmbeddedRocksDB` supported by clickhouse supports key-value operations on data, which I think is a great implementation. Unfortunately, we find that this feature is only an experimental feature. During the use of this feature, we think that this feature lacks the following functions:\r\n\r\n- Multi-disk policy configuration\r\n- Support delete operation\r\n- Delete expired key-value data\r\n- Distributed data storage\r\n\r\nWe want to use clickhouse to replace Redis to implement a similar distributed key-value system to reduce the memory requirements of the system. The delete operation and key-value data deletion functions are supplemented in our local version. To implement the `distributed data storage` feature, we want to use [pinterest/rocksplicator](https://github.com/pinterest/rocksplicator)  to generate and manage data copies and route queries. Do you have any better suggestions from the community about the implementation of distributed storage? Also, for `EmbeddedRocksDB`, is there a plan behind the community? I look forward to hearing from you. Thank you.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/23989/reactions","total_count":4,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":4,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/23989/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/23932","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/23932/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/23932/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/23932/events","html_url":"https://github.com/ClickHouse/ClickHouse/pull/23932","id":878356369,"node_id":"MDExOlB1bGxSZXF1ZXN0NjMyMTk2MDYw","number":23932,"title":"Support of dynamic subcolumns (JSON data type)","user":{"login":"CurtizJ","id":20361854,"node_id":"MDQ6VXNlcjIwMzYxODU0","avatar_url":"https://avatars.githubusercontent.com/u/20361854?v=4","gravatar_id":"","url":"https://api.github.com/users/CurtizJ","html_url":"https://github.com/CurtizJ","followers_url":"https://api.github.com/users/CurtizJ/followers","following_url":"https://api.github.com/users/CurtizJ/following{/other_user}","gists_url":"https://api.github.com/users/CurtizJ/gists{/gist_id}","starred_url":"https://api.github.com/users/CurtizJ/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/CurtizJ/subscriptions","organizations_url":"https://api.github.com/users/CurtizJ/orgs","repos_url":"https://api.github.com/users/CurtizJ/repos","events_url":"https://api.github.com/users/CurtizJ/events{/privacy}","received_events_url":"https://api.github.com/users/CurtizJ/received_events","type":"User","site_admin":false},"labels":[{"id":1309674771,"node_id":"MDU6TGFiZWwxMzA5Njc0Nzcx","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/pr-feature","name":"pr-feature","color":"007700","default":false,"description":"Pull request with new product feature"},{"id":1807683251,"node_id":"MDU6TGFiZWwxODA3NjgzMjUx","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/doc-alert","name":"doc-alert","color":"e51068","default":false,"description":"PR where any documentation work is needed or proceeded"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2021-05-07T02:44:01Z","updated_at":"2022-01-30T00:24:51Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"draft":true,"pull_request":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/pulls/23932","html_url":"https://github.com/ClickHouse/ClickHouse/pull/23932","diff_url":"https://github.com/ClickHouse/ClickHouse/pull/23932.diff","patch_url":"https://github.com/ClickHouse/ClickHouse/pull/23932.patch","merged_at":null},"body":"I hereby agree to the terms of the CLA available at: https://yandex.ru/legal/cla/?lang=en\r\n\r\nChangelog category (leave one):\r\n- New Feature\r\n\r\nChangelog entry (a user-readable short description of the changes that goes to CHANGELOG.md):\r\nNew data type `Object(<schema_format>)`, which supports storing of semi-structured data (for now JSON only). Data is written to such types as string. Then all paths are extracted according to format of semi-structured data and written as separate columns in most optimal types, that can store all their values. Those columns can be queried by names that match paths in source data. E.g `data.key1.key2` or with cast operator `data.key1.key2::Int64`.\r\n\r\n\r\nDetailed description / Documentation draft:\r\nResolves #23516.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/23932/reactions","total_count":61,"+1":24,"-1":0,"laugh":0,"hooray":14,"confused":0,"heart":7,"rocket":9,"eyes":7},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/23932/timeline","performed_via_github_app":null}]
