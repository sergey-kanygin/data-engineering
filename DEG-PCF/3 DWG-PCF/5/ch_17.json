[{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10438","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10438/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10438/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10438/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/10438","id":604676433,"node_id":"MDU6SXNzdWU2MDQ2NzY0MzM=","number":10438,"title":"Configuration of server log is not applied until restart","user":{"login":"currybullen","id":8695615,"node_id":"MDQ6VXNlcjg2OTU2MTU=","avatar_url":"https://avatars.githubusercontent.com/u/8695615?v=4","gravatar_id":"","url":"https://api.github.com/users/currybullen","html_url":"https://github.com/currybullen","followers_url":"https://api.github.com/users/currybullen/followers","following_url":"https://api.github.com/users/currybullen/following{/other_user}","gists_url":"https://api.github.com/users/currybullen/gists{/gist_id}","starred_url":"https://api.github.com/users/currybullen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/currybullen/subscriptions","organizations_url":"https://api.github.com/users/currybullen/orgs","repos_url":"https://api.github.com/users/currybullen/repos","events_url":"https://api.github.com/users/currybullen/events{/privacy}","received_events_url":"https://api.github.com/users/currybullen/received_events","type":"User","site_admin":false},"labels":[{"id":386401507,"node_id":"MDU6TGFiZWwzODY0MDE1MDc=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/enhancement","name":"enhancement","color":"84b6eb","default":true,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2020-04-22T11:21:33Z","updated_at":"2020-11-04T16:37:28Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"**Describe the bug**\r\nIt seems configuration changes made to /etc/clickhouse-server/config.xml are not respected until clickhouse-server is restarted.\r\n\r\n**How to reproduce**\r\n* Which ClickHouse server version to use: Tried on 20.3.2.1 through 20.3.7.46\r\n* Steps to reproduce: I found the error by changing the log level from trace to error in /etc/clickhouse-server/config.xml and issuing a simple \"SELECT 1\" query. Debug entries pop up in the log despite me changing the log level.\r\n\r\n**Expected behavior**\r\nThe settings should update as soon as the file is changed on disk.\r\n\r\n**Additional context**\r\nI haven't tried if it works for releases between 19.16.17.80 and 20.3.7.46, but I can say it works as expected on 19.16.17.80. Looking at the output from `journalctl -u clickhouse-server`, it looks like the configuration is actually re-read. The post-processed file being produced under /var/lib/clickhouse/preprocessed_configs/config.xml looks right (it contains the changes made to /etc/clickhouse-server/config.xml). This is all on CentOS 7, installing ClickHouse from the official yandex RPM repo (https://repo.yandex.ru/clickhouse/rpm/stable/x86_64/)\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10438/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10438/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10423","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10423/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10423/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10423/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/10423","id":604343846,"node_id":"MDU6SXNzdWU2MDQzNDM4NDY=","number":10423,"title":"Add IColumn::shrinkToFit method.","user":{"login":"alexey-milovidov","id":18581488,"node_id":"MDQ6VXNlcjE4NTgxNDg4","avatar_url":"https://avatars.githubusercontent.com/u/18581488?v=4","gravatar_id":"","url":"https://api.github.com/users/alexey-milovidov","html_url":"https://github.com/alexey-milovidov","followers_url":"https://api.github.com/users/alexey-milovidov/followers","following_url":"https://api.github.com/users/alexey-milovidov/following{/other_user}","gists_url":"https://api.github.com/users/alexey-milovidov/gists{/gist_id}","starred_url":"https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexey-milovidov/subscriptions","organizations_url":"https://api.github.com/users/alexey-milovidov/orgs","repos_url":"https://api.github.com/users/alexey-milovidov/repos","events_url":"https://api.github.com/users/alexey-milovidov/events{/privacy}","received_events_url":"https://api.github.com/users/alexey-milovidov/received_events","type":"User","site_admin":false},"labels":[{"id":756395244,"node_id":"MDU6TGFiZWw3NTYzOTUyNDQ=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/performance","name":"performance","color":"c2e0c6","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2020-04-21T23:18:51Z","updated_at":"2020-10-16T18:10:26Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10423/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10423/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10406","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10406/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10406/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10406/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/10406","id":604019120,"node_id":"MDU6SXNzdWU2MDQwMTkxMjA=","number":10406,"title":"Introduce a setting that forbids to create tables in old/legacy format by default","user":{"login":"den-crane","id":19737682,"node_id":"MDQ6VXNlcjE5NzM3Njgy","avatar_url":"https://avatars.githubusercontent.com/u/19737682?v=4","gravatar_id":"","url":"https://api.github.com/users/den-crane","html_url":"https://github.com/den-crane","followers_url":"https://api.github.com/users/den-crane/followers","following_url":"https://api.github.com/users/den-crane/following{/other_user}","gists_url":"https://api.github.com/users/den-crane/gists{/gist_id}","starred_url":"https://api.github.com/users/den-crane/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/den-crane/subscriptions","organizations_url":"https://api.github.com/users/den-crane/orgs","repos_url":"https://api.github.com/users/den-crane/repos","events_url":"https://api.github.com/users/den-crane/events{/privacy}","received_events_url":"https://api.github.com/users/den-crane/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":644208617,"node_id":"MDU6TGFiZWw2NDQyMDg2MTc=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/easy%20task","name":"easy task","color":"0e8a16","default":false,"description":"Good for first contributors"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2020-04-21T13:56:15Z","updated_at":"2020-04-21T22:05:45Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"body":"Introduce a setting that forbids to create tables in old/legacy format by default\r\n\r\na) Without affecting existing tables - attach.\r\nb) Or with 3 states `old_merge_tree_format` = `deny`, `allow_attach`, `allow_create`\r\nBy default  `old_merge_tree_format` =  `allow_attach`","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10406/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10406/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10394","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10394/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10394/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10394/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/10394","id":603743287,"node_id":"MDU6SXNzdWU2MDM3NDMyODc=","number":10394,"title":"date format like oracle NLS_CALENDAR","user":{"login":"mbtolou","id":6413705,"node_id":"MDQ6VXNlcjY0MTM3MDU=","avatar_url":"https://avatars.githubusercontent.com/u/6413705?v=4","gravatar_id":"","url":"https://api.github.com/users/mbtolou","html_url":"https://github.com/mbtolou","followers_url":"https://api.github.com/users/mbtolou/followers","following_url":"https://api.github.com/users/mbtolou/following{/other_user}","gists_url":"https://api.github.com/users/mbtolou/gists{/gist_id}","starred_url":"https://api.github.com/users/mbtolou/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mbtolou/subscriptions","organizations_url":"https://api.github.com/users/mbtolou/orgs","repos_url":"https://api.github.com/users/mbtolou/repos","events_url":"https://api.github.com/users/mbtolou/events{/privacy}","received_events_url":"https://api.github.com/users/mbtolou/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":1365579236,"node_id":"MDU6TGFiZWwxMzY1NTc5MjM2","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/minor","name":"minor","color":"FFF8F8","default":false,"description":"Priority: minor"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2020-04-21T06:31:34Z","updated_at":"2020-05-09T20:56:12Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Hi\r\n\r\ncan you implement NLS_CALENDAR like oracle :\r\n\r\nselect TO_CHAR(SYSDATE, 'MM/DD:HH24', 'NLS_CALENDAR=PERSIAN') from dual","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10394/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10394/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10360","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10360/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10360/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10360/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/10360","id":602815993,"node_id":"MDU6SXNzdWU2MDI4MTU5OTM=","number":10360,"title":"Does topKWeighted take UInt8 or any integer types for the weight param?","user":{"login":"knoguchi","id":127546,"node_id":"MDQ6VXNlcjEyNzU0Ng==","avatar_url":"https://avatars.githubusercontent.com/u/127546?v=4","gravatar_id":"","url":"https://api.github.com/users/knoguchi","html_url":"https://github.com/knoguchi","followers_url":"https://api.github.com/users/knoguchi/followers","following_url":"https://api.github.com/users/knoguchi/following{/other_user}","gists_url":"https://api.github.com/users/knoguchi/gists{/gist_id}","starred_url":"https://api.github.com/users/knoguchi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/knoguchi/subscriptions","organizations_url":"https://api.github.com/users/knoguchi/orgs","repos_url":"https://api.github.com/users/knoguchi/repos","events_url":"https://api.github.com/users/knoguchi/events{/privacy}","received_events_url":"https://api.github.com/users/knoguchi/received_events","type":"User","site_admin":false},"labels":[{"id":386401510,"node_id":"MDU6TGFiZWwzODY0MDE1MTA=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/question","name":"question","color":"bfdadc","default":true,"description":""},{"id":785082162,"node_id":"MDU6TGFiZWw3ODUwODIxNjI=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-documentation","name":"comp-documentation","color":"b5bcff","default":false,"description":"Used to run automatic builds of the documentation"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2020-04-19T20:45:47Z","updated_at":"2021-08-12T13:49:34Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Does `topKWeighted(N)(x, weight)` take UInt8 or any integer types for the `weight` parameter?\r\n\r\nAccording to the [document](https://clickhouse.tech/docs/en/sql_reference/aggregate_functions/reference/#topkweighted\r\n) the weight parameter has to be UInt8 but the example uses larger numbers than 256.\r\n\r\nI tested with UInt64.  It was accepted without errors, and it seemed to work fine.   As far as I've read the code [it checks the type by `isInteger`](https://github.com/ClickHouse/ClickHouse/blob/master/src/AggregateFunctions/AggregateFunctionTopK.cpp#L69-L70), and the type is consistent through out the other part of the code.\r\n\r\nThe counter implementation is uint64, and the weights are just summed up in the counter.  Hence there is no reason to limit the type to UInt8, I believe.  (of course the counter can't exceed uint64.max though)\r\n\r\nPlease let me know if it's an error in the document, or the param has to be UInt8 but the code is not strictly checking the type.\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10360/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10360/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10316","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10316/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10316/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10316/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/10316","id":601358137,"node_id":"MDU6SXNzdWU2MDEzNTgxMzc=","number":10316,"title":"metrics in system.part_log","user":{"login":"alexey-milovidov","id":18581488,"node_id":"MDQ6VXNlcjE4NTgxNDg4","avatar_url":"https://avatars.githubusercontent.com/u/18581488?v=4","gravatar_id":"","url":"https://api.github.com/users/alexey-milovidov","html_url":"https://github.com/alexey-milovidov","followers_url":"https://api.github.com/users/alexey-milovidov/followers","following_url":"https://api.github.com/users/alexey-milovidov/following{/other_user}","gists_url":"https://api.github.com/users/alexey-milovidov/gists{/gist_id}","starred_url":"https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexey-milovidov/subscriptions","organizations_url":"https://api.github.com/users/alexey-milovidov/orgs","repos_url":"https://api.github.com/users/alexey-milovidov/repos","events_url":"https://api.github.com/users/alexey-milovidov/events{/privacy}","received_events_url":"https://api.github.com/users/alexey-milovidov/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2020-04-16T19:12:20Z","updated_at":"2021-08-03T12:54:21Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"Add columns ProfileEvents.Names, ProfileEvents.Values for system.part_log.\r\nThis will help to track resource usage for merges.\r\n\r\nThis task is needed for Yandex Morda.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10316/reactions","total_count":3,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":1,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10316/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10296","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10296/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10296/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10296/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/10296","id":600582721,"node_id":"MDU6SXNzdWU2MDA1ODI3MjE=","number":10296,"title":"Add ClickHouse test to PerfKitBenchmarker","user":{"login":"alexey-milovidov","id":18581488,"node_id":"MDQ6VXNlcjE4NTgxNDg4","avatar_url":"https://avatars.githubusercontent.com/u/18581488?v=4","gravatar_id":"","url":"https://api.github.com/users/alexey-milovidov","html_url":"https://github.com/alexey-milovidov","followers_url":"https://api.github.com/users/alexey-milovidov/followers","following_url":"https://api.github.com/users/alexey-milovidov/following{/other_user}","gists_url":"https://api.github.com/users/alexey-milovidov/gists{/gist_id}","starred_url":"https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexey-milovidov/subscriptions","organizations_url":"https://api.github.com/users/alexey-milovidov/orgs","repos_url":"https://api.github.com/users/alexey-milovidov/repos","events_url":"https://api.github.com/users/alexey-milovidov/events{/privacy}","received_events_url":"https://api.github.com/users/alexey-milovidov/received_events","type":"User","site_admin":false},"labels":[{"id":386401508,"node_id":"MDU6TGFiZWwzODY0MDE1MDg=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/help%20wanted","name":"help wanted","color":"128A0C","default":true,"description":null},{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2020-04-15T20:56:30Z","updated_at":"2020-09-23T00:51:15Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"https://github.com/GoogleCloudPlatform/PerfKitBenchmarker\r\n\r\nAdd the following test: https://clickhouse.tech/docs/en/operations/performance_test/","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10296/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10296/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10276","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10276/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10276/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10276/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/10276","id":600089637,"node_id":"MDU6SXNzdWU2MDAwODk2Mzc=","number":10276,"title":"Unexpected Error of alias which redefines column name in join","user":{"login":"sanyfan","id":12718086,"node_id":"MDQ6VXNlcjEyNzE4MDg2","avatar_url":"https://avatars.githubusercontent.com/u/12718086?v=4","gravatar_id":"","url":"https://api.github.com/users/sanyfan","html_url":"https://github.com/sanyfan","followers_url":"https://api.github.com/users/sanyfan/followers","following_url":"https://api.github.com/users/sanyfan/following{/other_user}","gists_url":"https://api.github.com/users/sanyfan/gists{/gist_id}","starred_url":"https://api.github.com/users/sanyfan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sanyfan/subscriptions","organizations_url":"https://api.github.com/users/sanyfan/orgs","repos_url":"https://api.github.com/users/sanyfan/repos","events_url":"https://api.github.com/users/sanyfan/events{/privacy}","received_events_url":"https://api.github.com/users/sanyfan/received_events","type":"User","site_admin":false},"labels":[{"id":1575085465,"node_id":"MDU6TGFiZWwxNTc1MDg1NDY1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/unexpected%20behaviour","name":"unexpected behaviour","color":"e088ca","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2020-04-15T07:42:02Z","updated_at":"2020-10-16T18:10:25Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Alias of the redefined column name in multi join\r\n\r\n**How to reproduce**\r\nversion 19.17.6.36 \r\nNormal Case\r\n```\r\nSELECT \r\n    sum(x.n) as n1,\r\n    sum(z.n) as n2\r\nFROM\r\n(\r\n    SELECT 1000 AS n,1 as id\r\n) AS x \r\njoin (select 10000 as n,1 as id) as y \r\non x.id = y.id \r\nleft join (select 100000 as n,1 as id) as z \r\non x.id = z.id \r\n```\r\nResult\r\n\r\nn1 | n2 \r\n-- | -- \r\n1000 | 100000\r\n\r\nUnexpected Case\r\n```\r\nSELECT \r\n    sum(x.n) as n,\r\n    sum(z.n) as n2\r\nFROM\r\n(\r\n    SELECT 1000 AS n,1 as id\r\n) AS x \r\njoin (select 10000 as n,1 as id) as y \r\non x.id = y.id \r\nleft join (select 100000 as n,1 as id) as z \r\non x.id = z.id \r\n```\r\nResult\r\n`Code: 10, e.displayText() = DB::Exception: Not found column n in block. There are only columns: --x.n, --x.id (version 19.17.6.36 (official build))`\r\n\r\nI also met another Error in the SQL with the same struct\r\n\r\n`Code: 47, e.displayText() = DB::Exception: Unknown identifier: booked_guaranteed_narrower_or_equal (version 19.17.6.36 (official build))\r\n`\r\n\r\nSo how to solve this problem?\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10276/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10276/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10220","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10220/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10220/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10220/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/10220","id":598607697,"node_id":"MDU6SXNzdWU1OTg2MDc2OTc=","number":10220,"title":"Partition minmax index should also store values about partition expression as a whole, not only its arguments.","user":{"login":"alexey-milovidov","id":18581488,"node_id":"MDQ6VXNlcjE4NTgxNDg4","avatar_url":"https://avatars.githubusercontent.com/u/18581488?v=4","gravatar_id":"","url":"https://api.github.com/users/alexey-milovidov","html_url":"https://github.com/alexey-milovidov","followers_url":"https://api.github.com/users/alexey-milovidov/followers","following_url":"https://api.github.com/users/alexey-milovidov/following{/other_user}","gists_url":"https://api.github.com/users/alexey-milovidov/gists{/gist_id}","starred_url":"https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexey-milovidov/subscriptions","organizations_url":"https://api.github.com/users/alexey-milovidov/orgs","repos_url":"https://api.github.com/users/alexey-milovidov/repos","events_url":"https://api.github.com/users/alexey-milovidov/events{/privacy}","received_events_url":"https://api.github.com/users/alexey-milovidov/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2020-04-13T00:47:19Z","updated_at":"2020-06-16T20:56:05Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"This feature was suggested on 42th ClickHouse meetup, that was held online, YouTube: https://www.youtube.com/watch?v=QQSCn6nbyN8","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10220/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10220/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10197","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10197/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10197/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10197/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/10197","id":598384343,"node_id":"MDU6SXNzdWU1OTgzODQzNDM=","number":10197,"title":"JOIN keys should be converted to the least common type","user":{"login":"alexey-milovidov","id":18581488,"node_id":"MDQ6VXNlcjE4NTgxNDg4","avatar_url":"https://avatars.githubusercontent.com/u/18581488?v=4","gravatar_id":"","url":"https://api.github.com/users/alexey-milovidov","html_url":"https://github.com/alexey-milovidov","followers_url":"https://api.github.com/users/alexey-milovidov/followers","following_url":"https://api.github.com/users/alexey-milovidov/following{/other_user}","gists_url":"https://api.github.com/users/alexey-milovidov/gists{/gist_id}","starred_url":"https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexey-milovidov/subscriptions","organizations_url":"https://api.github.com/users/alexey-milovidov/orgs","repos_url":"https://api.github.com/users/alexey-milovidov/repos","events_url":"https://api.github.com/users/alexey-milovidov/events{/privacy}","received_events_url":"https://api.github.com/users/alexey-milovidov/received_events","type":"User","site_admin":false},"labels":[{"id":1357578153,"node_id":"MDU6TGFiZWwxMzU3NTc4MTUz","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-joins","name":"comp-joins","color":"b5bcff","default":false,"description":"JOINs"},{"id":1575085465,"node_id":"MDU6TGFiZWwxNTc1MDg1NDY1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/unexpected%20behaviour","name":"unexpected behaviour","color":"e088ca","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2020-04-12T01:11:02Z","updated_at":"2020-10-16T18:10:25Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"`SELECT t1.*, t2.* FROM (SELECT 1 AS k) t1 JOIN (SELECT -1 AS k) t2 ON t1.k = t2.k`\r\n\r\n`Type mismatch of columns to JOIN by: k UInt8 at left, t2.k Int8 at right.`\r\n\r\nIsn't that easy to fix?","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10197/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10197/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10128","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10128/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10128/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10128/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/10128","id":596638485,"node_id":"MDU6SXNzdWU1OTY2Mzg0ODU=","number":10128,"title":"Roadmap to improve TTL delete and TTL move functionality","user":{"login":"vzakaznikov","id":41681088,"node_id":"MDQ6VXNlcjQxNjgxMDg4","avatar_url":"https://avatars.githubusercontent.com/u/41681088?v=4","gravatar_id":"","url":"https://api.github.com/users/vzakaznikov","html_url":"https://github.com/vzakaznikov","followers_url":"https://api.github.com/users/vzakaznikov/followers","following_url":"https://api.github.com/users/vzakaznikov/following{/other_user}","gists_url":"https://api.github.com/users/vzakaznikov/gists{/gist_id}","starred_url":"https://api.github.com/users/vzakaznikov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vzakaznikov/subscriptions","organizations_url":"https://api.github.com/users/vzakaznikov/orgs","repos_url":"https://api.github.com/users/vzakaznikov/repos","events_url":"https://api.github.com/users/vzakaznikov/events{/privacy}","received_events_url":"https://api.github.com/users/vzakaznikov/received_events","type":"User","site_admin":false},"labels":[{"id":845247686,"node_id":"MDU6TGFiZWw4NDUyNDc2ODY=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/usability","name":"usability","color":"ebf28c","default":false,"description":""},{"id":1401282669,"node_id":"MDU6TGFiZWwxNDAxMjgyNjY5","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-ttl","name":"comp-ttl","color":"b5bcff","default":false,"description":"TTL"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":18,"created_at":"2020-04-08T14:50:37Z","updated_at":"2021-07-10T03:07:39Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Current implementation of TTL delete and TTL move is not very intuitive or user friendly.\r\n\r\n## Usability ##\r\n\r\n1. [ ] OPTIMIZE FINAL should do everything and get table to the correct state in regards to TTL\r\n2. [x] TTL operation is triggered once per partition with 'merge_with_ttl_timeout' that is default to 24 hours, or during background part merge. This is too slow if user has a lot of partitions that have crossed the TTL trigger point. TTL should process all affected partitions.\r\n3. [x] There is no way to force TTL manually without part merge. Need to add a new SYSTEM or ALTER command to allow manual control: OPTIMIZE TABLE TTL.\r\n4. [x] When TTL expression is added to the table the old partitions are not being deleted/moved but user would expect this. Currently MATERIALIZE TTL is required. Since it is consistent with ALTER TABLE behaviour in general, it could be an an extension of ALTER TABLE syntax: ALTER TABLE MODIFY TTL [MATERIALIZE] https://github.com/ClickHouse/ClickHouse/pull/11042.\r\n5. [x] When mutation is performed on the columns that are used in the TTL expression, no changes are done to pre-computed TTLs. MATERIALIZE TTL is required. This should be fixed.\r\n6. [ ] A large number of background TTL operations using the same disk with many threads can actually hurt performance due to disk I/O bottleneck. Need a separate resource management. So we need a control over:\r\n   * Number of threads. \r\n   * Priority (default -- lower than queries and merges). \r\n   * TTLs at the beginning of the policy should be executed first (usually first volume is the smallest).\r\n7. [x] Need to a way to stop all moves immediately including currently executing and restart them at some later time: SYSTEM START|STOP TTL\r\n\r\n## Introspection ##\r\n\r\n1. [x] Extend system.parts with the information about TTLs as a set of arrays: min/max per part, last_ttl, next_ttl (https://github.com/ClickHouse/ClickHouse/pull/10591).\r\n   * As a side effect it allows to query parts have crossed the TTL trigger point and are scheduled for delete/move.\r\n   * The system command that triggers the TTL operation may just reset next_ttl\r\n2. [x] Add an introspection table similar to system.merges/mutations in order to monitor active deletes \r\nand moves.\r\n3. [x] TTL expression should be exposed in system.tables (for moves done in https://github.com/ClickHouse/ClickHouse/pull/10591)\r\n4. [ ] TTL expression should be exposed in system.tables","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10128/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10128/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10074","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10074/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10074/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10074/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/10074","id":595477258,"node_id":"MDU6SXNzdWU1OTU0NzcyNTg=","number":10074,"title":"Table columns structure in ZooKeeper is different from local table structure","user":{"login":"cw9","id":6710599,"node_id":"MDQ6VXNlcjY3MTA1OTk=","avatar_url":"https://avatars.githubusercontent.com/u/6710599?v=4","gravatar_id":"","url":"https://api.github.com/users/cw9","html_url":"https://github.com/cw9","followers_url":"https://api.github.com/users/cw9/followers","following_url":"https://api.github.com/users/cw9/following{/other_user}","gists_url":"https://api.github.com/users/cw9/gists{/gist_id}","starred_url":"https://api.github.com/users/cw9/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cw9/subscriptions","organizations_url":"https://api.github.com/users/cw9/orgs","repos_url":"https://api.github.com/users/cw9/repos","events_url":"https://api.github.com/users/cw9/events{/privacy}","received_events_url":"https://api.github.com/users/cw9/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":845247686,"node_id":"MDU6TGFiZWw4NDUyNDc2ODY=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/usability","name":"usability","color":"ebf28c","default":false,"description":""},{"id":1507888214,"node_id":"MDU6TGFiZWwxNTA3ODg4MjE0","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/st-accepted","name":"st-accepted","color":"e5b890","default":false,"description":"The issue is in our backlog, ready to take"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2020-04-06T22:54:33Z","updated_at":"2020-04-12T19:53:09Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"I'm getting this error \r\n`Code: 122, e.displayText() = DB::Exception: Table columns structure in ZooKeeper is different from local table structure (version 20.3.5.21 (official build))`\r\n\r\nThis can be reproduced by creating the first replica of table1 with column a,b,c and then creating the second replica with columns a,c,b. \r\n\r\nIt seems that the ZK already knows what the column structure of table1 should be, is there a way to create the second table from that structure on ZK? So that we can avoid providing the wrong column structure of a,c,b?\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10074/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10074/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10048","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10048/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10048/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10048/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/10048","id":593612840,"node_id":"MDU6SXNzdWU1OTM2MTI4NDA=","number":10048,"title":"FORMAT Parquet schema information extraction and map columns","user":{"login":"fhmcn","id":1872177,"node_id":"MDQ6VXNlcjE4NzIxNzc=","avatar_url":"https://avatars.githubusercontent.com/u/1872177?v=4","gravatar_id":"","url":"https://api.github.com/users/fhmcn","html_url":"https://github.com/fhmcn","followers_url":"https://api.github.com/users/fhmcn/followers","following_url":"https://api.github.com/users/fhmcn/following{/other_user}","gists_url":"https://api.github.com/users/fhmcn/gists{/gist_id}","starred_url":"https://api.github.com/users/fhmcn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fhmcn/subscriptions","organizations_url":"https://api.github.com/users/fhmcn/orgs","repos_url":"https://api.github.com/users/fhmcn/repos","events_url":"https://api.github.com/users/fhmcn/events{/privacy}","received_events_url":"https://api.github.com/users/fhmcn/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":1401255404,"node_id":"MDU6TGFiZWwxNDAxMjU1NDA0","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-formats","name":"comp-formats","color":"b5bcff","default":false,"description":"Input / output formats"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2020-04-03T20:08:30Z","updated_at":"2020-04-06T20:05:36Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"**Use case**\r\nInserting into a table with Parquet format without knowing table structure. There might be cases that table has new columns or dropped columns. Parquet format should be able to handle them using SETTING as similar is done for JSONEachRow using `input_format_skip_unknown_fields=1`\r\n\r\n**Describe the solution you'd like**\r\nUsing FORMAT Parquet, inserts must be able to match table structure and parquet schema. \r\n\r\n**Describe alternatives you've considered**\r\nCurrent solution is to extract schema information and table metadata then mapping put columns to query \r\n`INSERT INTO test.table (<columns_here>) FORMAT Parquet`\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10048/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10048/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10043","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10043/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10043/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10043/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/10043","id":593536744,"node_id":"MDU6SXNzdWU1OTM1MzY3NDQ=","number":10043,"title":"Export sql query results to prometheus","user":{"login":"Tri0L","id":1208486,"node_id":"MDQ6VXNlcjEyMDg0ODY=","avatar_url":"https://avatars.githubusercontent.com/u/1208486?v=4","gravatar_id":"","url":"https://api.github.com/users/Tri0L","html_url":"https://github.com/Tri0L","followers_url":"https://api.github.com/users/Tri0L/followers","following_url":"https://api.github.com/users/Tri0L/following{/other_user}","gists_url":"https://api.github.com/users/Tri0L/gists{/gist_id}","starred_url":"https://api.github.com/users/Tri0L/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Tri0L/subscriptions","organizations_url":"https://api.github.com/users/Tri0L/orgs","repos_url":"https://api.github.com/users/Tri0L/repos","events_url":"https://api.github.com/users/Tri0L/events{/privacy}","received_events_url":"https://api.github.com/users/Tri0L/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2020-04-03T17:36:03Z","updated_at":"2021-04-29T07:30:37Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Please add ability to export result of SQL queries through prometheus functionality.\r\n\r\n**Use case**\r\nMonitor some params of tables.\r\nFor example size, number of parts, etc.\r\n\r\n**Describe alternatives you've considered**\r\nFor now we use external exporter. And will be better to use only one(internal CH exporter).\r\n\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10043/reactions","total_count":3,"+1":3,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/10043/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9959","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9959/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9959/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9959/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/9959","id":590854504,"node_id":"MDU6SXNzdWU1OTA4NTQ1MDQ=","number":9959,"title":"Date&Time improvements","user":{"login":"qoega","id":2159081,"node_id":"MDQ6VXNlcjIxNTkwODE=","avatar_url":"https://avatars.githubusercontent.com/u/2159081?v=4","gravatar_id":"","url":"https://api.github.com/users/qoega","html_url":"https://github.com/qoega","followers_url":"https://api.github.com/users/qoega/followers","following_url":"https://api.github.com/users/qoega/following{/other_user}","gists_url":"https://api.github.com/users/qoega/gists{/gist_id}","starred_url":"https://api.github.com/users/qoega/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/qoega/subscriptions","organizations_url":"https://api.github.com/users/qoega/orgs","repos_url":"https://api.github.com/users/qoega/repos","events_url":"https://api.github.com/users/qoega/events{/privacy}","received_events_url":"https://api.github.com/users/qoega/received_events","type":"User","site_admin":false},"labels":[{"id":386401507,"node_id":"MDU6TGFiZWwzODY0MDE1MDc=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/enhancement","name":"enhancement","color":"84b6eb","default":true,"description":null},{"id":1481221764,"node_id":"MDU6TGFiZWwxNDgxMjIxNzY0","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-datetime","name":"comp-datetime","color":"b5bcff","default":false,"description":"date & time & timezone related"}],"state":"open","locked":false,"assignee":{"login":"qoega","id":2159081,"node_id":"MDQ6VXNlcjIxNTkwODE=","avatar_url":"https://avatars.githubusercontent.com/u/2159081?v=4","gravatar_id":"","url":"https://api.github.com/users/qoega","html_url":"https://github.com/qoega","followers_url":"https://api.github.com/users/qoega/followers","following_url":"https://api.github.com/users/qoega/following{/other_user}","gists_url":"https://api.github.com/users/qoega/gists{/gist_id}","starred_url":"https://api.github.com/users/qoega/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/qoega/subscriptions","organizations_url":"https://api.github.com/users/qoega/orgs","repos_url":"https://api.github.com/users/qoega/repos","events_url":"https://api.github.com/users/qoega/events{/privacy}","received_events_url":"https://api.github.com/users/qoega/received_events","type":"User","site_admin":false},"assignees":[{"login":"qoega","id":2159081,"node_id":"MDQ6VXNlcjIxNTkwODE=","avatar_url":"https://avatars.githubusercontent.com/u/2159081?v=4","gravatar_id":"","url":"https://api.github.com/users/qoega","html_url":"https://github.com/qoega","followers_url":"https://api.github.com/users/qoega/followers","following_url":"https://api.github.com/users/qoega/following{/other_user}","gists_url":"https://api.github.com/users/qoega/gists{/gist_id}","starred_url":"https://api.github.com/users/qoega/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/qoega/subscriptions","organizations_url":"https://api.github.com/users/qoega/orgs","repos_url":"https://api.github.com/users/qoega/repos","events_url":"https://api.github.com/users/qoega/events{/privacy}","received_events_url":"https://api.github.com/users/qoega/received_events","type":"User","site_admin":false}],"milestone":null,"comments":4,"created_at":"2020-03-31T07:10:32Z","updated_at":"2021-03-24T20:15:56Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"- [x] Add getTimeZone function. Trivial, but can help user to answer question about timezone in all cases - `toTypeName` for `DateTime` without timezone does not answer this question and you need to read the docs\r\n``` sql\r\ngetTimeZone(now()) = timezone()\r\n```\r\n- [ ] Add modifier in formatDateTime to print 'Time offsets from UTC' in following formats `\"+02:00\",\"+0200\", or \"+02\".` Note: `+00:00` should be printed with no offset.\r\n\r\n- [ ] Add parseDateTimeBestEffort description. At least describe arguments. Probably move out of type conversions. \r\n\r\n- [ ] dateDiff documentation is incomplete. Probably we should define function behavior more strictly.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9959/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9959/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9954","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9954/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9954/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9954/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/9954","id":590588292,"node_id":"MDU6SXNzdWU1OTA1ODgyOTI=","number":9954,"title":"Not found column in block","user":{"login":"akuzm","id":36882414,"node_id":"MDQ6VXNlcjM2ODgyNDE0","avatar_url":"https://avatars.githubusercontent.com/u/36882414?v=4","gravatar_id":"","url":"https://api.github.com/users/akuzm","html_url":"https://github.com/akuzm","followers_url":"https://api.github.com/users/akuzm/followers","following_url":"https://api.github.com/users/akuzm/following{/other_user}","gists_url":"https://api.github.com/users/akuzm/gists{/gist_id}","starred_url":"https://api.github.com/users/akuzm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/akuzm/subscriptions","organizations_url":"https://api.github.com/users/akuzm/orgs","repos_url":"https://api.github.com/users/akuzm/repos","events_url":"https://api.github.com/users/akuzm/events{/privacy}","received_events_url":"https://api.github.com/users/akuzm/received_events","type":"User","site_admin":false},"labels":[{"id":386401505,"node_id":"MDU6TGFiZWwzODY0MDE1MDU=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/bug","name":"bug","color":"ee0701","default":true,"description":"Confirmed user-visible misbehaviour in official release"},{"id":1357578153,"node_id":"MDU6TGFiZWwxMzU3NTc4MTUz","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-joins","name":"comp-joins","color":"b5bcff","default":false,"description":"JOINs"},{"id":1907525265,"node_id":"MDU6TGFiZWwxOTA3NTI1MjY1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/v20.3-affected","name":"v20.3-affected","color":"c2bfff","default":false,"description":"This issue affects some releases of v20.3"},{"id":2416922900,"node_id":"MDU6TGFiZWwyNDE2OTIyOTAw","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/v20.10-affected","name":"v20.10-affected","color":"c2bfff","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2020-03-30T20:52:53Z","updated_at":"2020-11-09T00:52:42Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"body":"```\r\n:) select 1 value, * from (select 1 key) l left join (select 2 key, 1 value) r using key;\r\n\r\nReceived exception from server (version 20.4.1):\r\nCode: 10. DB::Exception: Received from localhost:9000. DB::Exception: Not found column value in block. There are only columns: key, 1. Stack trace:\r\n```\r\n\r\nThe query looks valid though.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9954/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9954/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9913","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9913/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9913/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9913/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/9913","id":589595260,"node_id":"MDU6SXNzdWU1ODk1OTUyNjA=","number":9913,"title":"Log to journald","user":{"login":"FedericoCeratto","id":91576,"node_id":"MDQ6VXNlcjkxNTc2","avatar_url":"https://avatars.githubusercontent.com/u/91576?v=4","gravatar_id":"","url":"https://api.github.com/users/FedericoCeratto","html_url":"https://github.com/FedericoCeratto","followers_url":"https://api.github.com/users/FedericoCeratto/followers","following_url":"https://api.github.com/users/FedericoCeratto/following{/other_user}","gists_url":"https://api.github.com/users/FedericoCeratto/gists{/gist_id}","starred_url":"https://api.github.com/users/FedericoCeratto/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/FedericoCeratto/subscriptions","organizations_url":"https://api.github.com/users/FedericoCeratto/orgs","repos_url":"https://api.github.com/users/FedericoCeratto/repos","events_url":"https://api.github.com/users/FedericoCeratto/events{/privacy}","received_events_url":"https://api.github.com/users/FedericoCeratto/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":1365579236,"node_id":"MDU6TGFiZWwxMzY1NTc5MjM2","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/minor","name":"minor","color":"FFF8F8","default":false,"description":"Priority: minor"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2020-03-28T15:13:00Z","updated_at":"2020-05-04T18:53:24Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"ClickHouse should log to Journald where available.\r\n\r\nCurrently the systemd unit logs into journald already. E.g. it can be monitored with `journalctl -f -u clickhouse-server`\r\n\r\nJournald supports structured logging using key-value pair. It indexes them and allow filtering on them.\r\nWith native support people could be filter e.g. by component `component=HTTPHandler` or even function name e.g. `CODE_FUNC=readFloatText`","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9913/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9913/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9894","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9894/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9894/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9894/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/9894","id":588837885,"node_id":"MDU6SXNzdWU1ODg4Mzc4ODU=","number":9894,"title":"json function to extract many values in a single pass","user":{"login":"melin","id":1145830,"node_id":"MDQ6VXNlcjExNDU4MzA=","avatar_url":"https://avatars.githubusercontent.com/u/1145830?v=4","gravatar_id":"","url":"https://api.github.com/users/melin","html_url":"https://github.com/melin","followers_url":"https://api.github.com/users/melin/followers","following_url":"https://api.github.com/users/melin/following{/other_user}","gists_url":"https://api.github.com/users/melin/gists{/gist_id}","starred_url":"https://api.github.com/users/melin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/melin/subscriptions","organizations_url":"https://api.github.com/users/melin/orgs","repos_url":"https://api.github.com/users/melin/repos","events_url":"https://api.github.com/users/melin/events{/privacy}","received_events_url":"https://api.github.com/users/melin/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":1546506700,"node_id":"MDU6TGFiZWwxNTQ2NTA2NzAw","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-functions","name":"comp-functions","color":"b5bcff","default":false,"description":"Relates to some SQL function"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2020-03-27T02:12:01Z","updated_at":"2020-04-13T07:43:38Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"json is the most commonly used input data format, a single resolution to obtain multiple values, is the most efficient way。\r\n**Hope to provide similar functions**\r\n\r\n\r\n```\r\nbigdata.json_extract_value(jsondata, key1, ..., keyn) as (col1, ..., coln)\r\n```\r\n![image](https://user-images.githubusercontent.com/1145830/77713988-e57b3280-7012-11ea-9e24-eb1b02836665.png)\r\n\r\n```\r\nbigdata.json_extract_array_value(jsondata, key1, ..., keyn) as (col1, ..., coln)`\r\n```\r\n![image](https://user-images.githubusercontent.com/1145830/77714022-fc218980-7012-11ea-908f-f9a3947a90ca.png)\r\n\r\n```\r\nbigdata.explode_json_array(jsondata, key1, ..., keyn) as (col1, ..., coln)\r\n```\r\n![image](https://user-images.githubusercontent.com/1145830/77714189-62a6a780-7013-11ea-8d42-dfac5e1e7200.png)\r\n\r\n![image](https://user-images.githubusercontent.com/1145830/77725640-ecb13900-7030-11ea-8d8d-9506e6f24884.png)\r\n\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9894/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9894/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9887","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9887/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9887/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9887/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/9887","id":588541718,"node_id":"MDU6SXNzdWU1ODg1NDE3MTg=","number":9887,"title":"TPC-DS compatibility issues","user":{"login":"alex-zaitsev","id":25770686,"node_id":"MDQ6VXNlcjI1NzcwNjg2","avatar_url":"https://avatars.githubusercontent.com/u/25770686?v=4","gravatar_id":"","url":"https://api.github.com/users/alex-zaitsev","html_url":"https://github.com/alex-zaitsev","followers_url":"https://api.github.com/users/alex-zaitsev/followers","following_url":"https://api.github.com/users/alex-zaitsev/following{/other_user}","gists_url":"https://api.github.com/users/alex-zaitsev/gists{/gist_id}","starred_url":"https://api.github.com/users/alex-zaitsev/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alex-zaitsev/subscriptions","organizations_url":"https://api.github.com/users/alex-zaitsev/orgs","repos_url":"https://api.github.com/users/alex-zaitsev/repos","events_url":"https://api.github.com/users/alex-zaitsev/events{/privacy}","received_events_url":"https://api.github.com/users/alex-zaitsev/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":2121848770,"node_id":"MDU6TGFiZWwyMTIxODQ4Nzcw","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-sql","name":"comp-sql","color":"b5bcff","default":false,"description":"General SQL support"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":16,"created_at":"2020-03-26T16:13:01Z","updated_at":"2022-01-15T23:56:11Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"TPC-DS check list in 20.3+.\r\n\r\nMissing features:\r\n- [x] INTERSECT / EXCEPT operators not implemented **fixed via #24757 in 21.9**\r\n- [x] [NOT] EXISTS-operator not implemented #6852 **fixed via #29731 in 21.11**\r\n- [x] Interval syntax like '+ 30 days' is not supported **fixed via #15978 in 20.11**\r\n- [x] CTE syntax is different from ANSI SQL 99 **fixed via #14771 in 20.10?**\r\n- [x] CTE returning multiple rows is not supported #2416 **partially fixed via #14771 in 20.10?**\r\n- [x] Window  functions are not supported (OVER ... PARTITION BY ... ) #1469\r\n- [ ] Missing analytical functions RANK, FIRST, LAST, LAG **the exact syntax is not supported but can be emulated using existing toolset**\r\n- [x] [GROUPING SETS](https://docs.microsoft.com/en-us/sql/t-sql/functions/grouping-transact-sql?view=sql-server-ver15)  #26869\r\n- [ ] GROUPING specification for ROLLUP, CUBE and GROUPING SETS;\r\n- [ ] Correlated subqueries are not supported (Missing columns: \"x\" while processing query) #6697 #9861\r\n\r\nBugs:\r\n- [x] count(*) is not supported for multiple join queries #9853 **fixed via #10291 in 20.3.8**\r\n- [x] COMMA to CROSS JOIN rewriter is not enabled or cannot rewrite query #9863 **fixed via #9830 in 20.3.5**\r\n- [x] Mix of COMMA and other JOINS is not supported #9864 **fixed via #9830 in 20.3.5**\r\n- [x] illegal type FixedString(x) of argument of function like #9882 **fixed via #9890**\r\n- [x] Logical error: CROSS JOIN has expressions #9910 **fixed via #10311 in 20.3.7**\r\n- [x] Multiple JOIN do not support asterisks for complex queries yet #10481 **fixed via #9739 in 20.4**\r\n- [ ] Aggregate function \"x\" is found inside another aggregate function in query (clash of aliases) #9715\r\n- [x] Cannot refer column \"x\" to table #9855 \r\n- [x] Illegal types Float64 and Decimal(9, 2) of arguments of function multiply #9881 \r\n\r\nCommon join optimizations:\r\n- [ ] Use right table as a predicate for the left one #8062\r\n- [ ] AND (cond OR cond) prevents CROSS JOIN to INNER JOIN rewrite #19856 **partially fixed via #20392 in 21.4**\r\n\r\nMerge join performance optimizations:\r\n- [ ] Adaptive bucketing of the left table\r\n- [ ] Using PK sorting of the left table\r\n- [ ] Using PK sorting of the right table\r\n\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9887/reactions","total_count":12,"+1":8,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":4,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9887/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9859","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9859/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9859/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9859/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/9859","id":587614176,"node_id":"MDU6SXNzdWU1ODc2MTQxNzY=","number":9859,"title":"optimize_read_in_order doesn't work for tuples of primary key","user":{"login":"alesapin","id":3684697,"node_id":"MDQ6VXNlcjM2ODQ2OTc=","avatar_url":"https://avatars.githubusercontent.com/u/3684697?v=4","gravatar_id":"","url":"https://api.github.com/users/alesapin","html_url":"https://github.com/alesapin","followers_url":"https://api.github.com/users/alesapin/followers","following_url":"https://api.github.com/users/alesapin/following{/other_user}","gists_url":"https://api.github.com/users/alesapin/gists{/gist_id}","starred_url":"https://api.github.com/users/alesapin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alesapin/subscriptions","organizations_url":"https://api.github.com/users/alesapin/orgs","repos_url":"https://api.github.com/users/alesapin/repos","events_url":"https://api.github.com/users/alesapin/events{/privacy}","received_events_url":"https://api.github.com/users/alesapin/received_events","type":"User","site_admin":false},"labels":[{"id":1575085465,"node_id":"MDU6TGFiZWwxNTc1MDg1NDY1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/unexpected%20behaviour","name":"unexpected behaviour","color":"e088ca","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2020-03-25T11:02:23Z","updated_at":"2020-03-25T12:15:39Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"```\r\nCREATE TABLE table_with_multi_pk\r\n(\r\n  key1 UInt8,\r\n  key2 UInt32,\r\n  value String\r\n)\r\nENGINE = MergeTree\r\nORDER BY (key1, key2);\r\n\r\nINSERT INTO table_with_multi_pk SELECT number % 10, number, toString(number % 15) FROM numbers(10000000)\r\n\r\nSELECT value FROM table_with_multi_pk ORDER BY key1, key2; --query_id = 963ecb86-5c0a-4918-abf4-bf1340151eaf\r\n\r\nselect formatReadableSize(read_bytes), formatReadableSize(memory_usage) from system.query_log where query_id='963ecb86-5c0a-4918-abf4-bf1340151eaf' and type='QueryFinish'\r\n\r\nSELECT \r\n    formatReadableSize(read_bytes), \r\n    formatReadableSize(memory_usage)\r\nFROM system.query_log\r\nWHERE (query_id = '963ecb86-5c0a-4918-abf4-bf1340151eaf') AND (type = 'QueryFinish')\r\n\r\n┌─formatReadableSize(read_bytes)─┬─formatReadableSize(memory_usage)─┐\r\n│ 146.23 MiB                     │ 209.38 MiB                       │\r\n└────────────────────────────────┴──────────────────────────────────┘\r\n\r\n\r\nSELECT value FROM table_with_multi_pk ORDER BY (key1, key2); --query_id = d805d931-6c46-4774-9186-da155b7d6275\r\n\r\nSELECT \r\n    formatReadableSize(read_bytes), \r\n    formatReadableSize(memory_usage)\r\nFROM system.query_log\r\nWHERE (query_id = 'd805d931-6c46-4774-9186-da155b7d6275') AND (type = 'QueryFinish')\r\n\r\n┌─formatReadableSize(read_bytes)─┬─formatReadableSize(memory_usage)─┐\r\n│ 146.23 MiB                     │ 442.09 MiB                       │\r\n└────────────────────────────────┴──────────────────────────────────┘\r\n```\r\n\r\nIn the second case, optimization is not used due to direct comparison of sorting key columns with order by AST https://github.com/clickhouse/ClickHouse/blob/master/dbms/src/Storages/ReadInOrderOptimizer.cpp#L33. ","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9859/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9859/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9802","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9802/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9802/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9802/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/9802","id":585649120,"node_id":"MDU6SXNzdWU1ODU2NDkxMjA=","number":9802,"title":"force_drop_table doesn't work for (orphaned?) hidden materialized view tables","user":{"login":"michaelsmitasin","id":46496263,"node_id":"MDQ6VXNlcjQ2NDk2MjYz","avatar_url":"https://avatars.githubusercontent.com/u/46496263?v=4","gravatar_id":"","url":"https://api.github.com/users/michaelsmitasin","html_url":"https://github.com/michaelsmitasin","followers_url":"https://api.github.com/users/michaelsmitasin/followers","following_url":"https://api.github.com/users/michaelsmitasin/following{/other_user}","gists_url":"https://api.github.com/users/michaelsmitasin/gists{/gist_id}","starred_url":"https://api.github.com/users/michaelsmitasin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/michaelsmitasin/subscriptions","organizations_url":"https://api.github.com/users/michaelsmitasin/orgs","repos_url":"https://api.github.com/users/michaelsmitasin/repos","events_url":"https://api.github.com/users/michaelsmitasin/events{/privacy}","received_events_url":"https://api.github.com/users/michaelsmitasin/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2020-03-22T05:27:34Z","updated_at":"2020-03-22T05:27:34Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"If the main table is dropped first, and hidden MV tables are orphaned:\r\n\r\n`$ clickhouse-client --query \"DROP TABLE dev_zeek_conn\"`\r\n\r\nAttempting to drop said orphaned hidden MV tables, even with force_drop_table, will throw an exception:\r\n\r\n```\r\n$ sudo touch '/data1/clickhouse/flags/force_drop_table' && sudo chmod 666 '/data1/clickhouse/flags/force_drop_table'\r\n\r\n$ ls -alh /data1/clickhouse/flags/\r\n-rw-rw-rw-  1 root       root          0 Mar 21 22:16 force_drop_table\r\n\r\n$ clickhouse-client --query \"DROP TABLE dev_zeek_conn_indexed_by_resp_h\"\r\nReceived exception from server (version 20.3.4):\r\nCode: 359. DB::Exception: Received from localhost:9000. DB::Exception: Table or Partition in default.`.inner.dev_zeek_conn_indexed_by_resp_h` was not dropped.\r\nReason:\r\n1. Size (52.13 GB) is greater than max_[table/partition]_size_to_drop (50.00 GB)\r\n2. File '/data1/clickhouse/flags/force_drop_table' intended to force DROP doesn't exist\r\nHow to fix this:\r\n1. Either increase (or set to zero) max_[table/partition]_size_to_drop in server config and restart ClickHouse\r\n2. Either create forcing file /data1/clickhouse/flags/force_drop_table and make sure that ClickHouse has write permission for it.\r\nExample:\r\nsudo touch '/data1/clickhouse/flags/force_drop_table' && sudo chmod 666 '/data1/clickhouse/flags/force_drop_table'. \r\n```\r\n\r\nHowever, if you first do DROP PARTITION to get it below 50.00 GB:\r\n\r\n```\r\n$ clickhouse-client --query \"ALTER TABLE dev_zeek_conn_indexed_by_resp_h DROP PARTITION 20200201\"\r\n```\r\n\r\n```\r\n$ clickhouse-client --query \"select database,table,sum(bytes) from system.parts group by database,table\" | numfmt --to=si --field=3\r\n\r\ndefault .inner.dev_zeek_conn_indexed_by_resp_h         40G\r\n```\r\n\r\nThen DROP TABLE will succeed:\r\n\r\n```\r\n$ clickhouse-client --query \"DROP TABLE dev_zeek_conn_indexed_by_resp_h\"\r\n```","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9802/reactions","total_count":3,"+1":3,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9802/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9769","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9769/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9769/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9769/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/9769","id":584879508,"node_id":"MDU6SXNzdWU1ODQ4Nzk1MDg=","number":9769,"title":"mysql() table function can't connect to clickhouse via MySQL protocol ","user":{"login":"filimonov","id":1549571,"node_id":"MDQ6VXNlcjE1NDk1NzE=","avatar_url":"https://avatars.githubusercontent.com/u/1549571?v=4","gravatar_id":"","url":"https://api.github.com/users/filimonov","html_url":"https://github.com/filimonov","followers_url":"https://api.github.com/users/filimonov/followers","following_url":"https://api.github.com/users/filimonov/following{/other_user}","gists_url":"https://api.github.com/users/filimonov/gists{/gist_id}","starred_url":"https://api.github.com/users/filimonov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/filimonov/subscriptions","organizations_url":"https://api.github.com/users/filimonov/orgs","repos_url":"https://api.github.com/users/filimonov/repos","events_url":"https://api.github.com/users/filimonov/events{/privacy}","received_events_url":"https://api.github.com/users/filimonov/received_events","type":"User","site_admin":false},"labels":[{"id":1365579236,"node_id":"MDU6TGFiZWwxMzY1NTc5MjM2","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/minor","name":"minor","color":"FFF8F8","default":false,"description":"Priority: minor"},{"id":1397894054,"node_id":"MDU6TGFiZWwxMzk3ODk0MDU0","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/unfinished%20code","name":"unfinished code","color":"ff8800","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2020-03-20T07:00:39Z","updated_at":"2021-09-27T19:36:24Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"body":"clickhouse mysql() table function can't connect to clickhouse via MySQL protocol \r\n```\r\nCREATE TABLE default.t1_remote_mysql AS mysql('127.0.0.1:33306','default','t1_local','default','');\r\n```\r\n\r\nget\r\n```\r\nPoco::Exception. Code: 1000, e.code() = 81, e.displayText() = mysqlxx::BadQuery: Database INFORMATION_SCHEMA doesn't exist (127.0.0.1:33306) (version 20.3.1.2564 (official build))\r\n```\r\n\r\nfounded by @Slach ","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9769/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9769/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9733","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9733/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9733/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9733/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/9733","id":583864978,"node_id":"MDU6SXNzdWU1ODM4NjQ5Nzg=","number":9733,"title":"Constant propagation for JOINs.","user":{"login":"alexey-milovidov","id":18581488,"node_id":"MDQ6VXNlcjE4NTgxNDg4","avatar_url":"https://avatars.githubusercontent.com/u/18581488?v=4","gravatar_id":"","url":"https://api.github.com/users/alexey-milovidov","html_url":"https://github.com/alexey-milovidov","followers_url":"https://api.github.com/users/alexey-milovidov/followers","following_url":"https://api.github.com/users/alexey-milovidov/following{/other_user}","gists_url":"https://api.github.com/users/alexey-milovidov/gists{/gist_id}","starred_url":"https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexey-milovidov/subscriptions","organizations_url":"https://api.github.com/users/alexey-milovidov/orgs","repos_url":"https://api.github.com/users/alexey-milovidov/repos","events_url":"https://api.github.com/users/alexey-milovidov/events{/privacy}","received_events_url":"https://api.github.com/users/alexey-milovidov/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":756395244,"node_id":"MDU6TGFiZWw3NTYzOTUyNDQ=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/performance","name":"performance","color":"c2e0c6","default":false,"description":null},{"id":1357578153,"node_id":"MDU6TGFiZWwxMzU3NTc4MTUz","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-joins","name":"comp-joins","color":"b5bcff","default":false,"description":"JOINs"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2020-03-18T16:47:35Z","updated_at":"2021-06-22T22:43:12Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"**Describe the situation**\r\n```\r\nSELECT a.*, b.*\r\nFROM \r\n    (SELECT ...) a \r\n    INNER JOIN \r\n    (SELECT ...) b\r\n    ON a.k = b.k\r\nWHERE a.k = 123\r\n```\r\n\r\nWe should automatically derive that `b.k = 123` and pushdown the condition into `b` table.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9733/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9733/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9715","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9715/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9715/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9715/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/9715","id":583353154,"node_id":"MDU6SXNzdWU1ODMzNTMxNTQ=","number":9715,"title":"Excessive substitution of aliases","user":{"login":"alexey-milovidov","id":18581488,"node_id":"MDQ6VXNlcjE4NTgxNDg4","avatar_url":"https://avatars.githubusercontent.com/u/18581488?v=4","gravatar_id":"","url":"https://api.github.com/users/alexey-milovidov","html_url":"https://github.com/alexey-milovidov","followers_url":"https://api.github.com/users/alexey-milovidov/followers","following_url":"https://api.github.com/users/alexey-milovidov/following{/other_user}","gists_url":"https://api.github.com/users/alexey-milovidov/gists{/gist_id}","starred_url":"https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexey-milovidov/subscriptions","organizations_url":"https://api.github.com/users/alexey-milovidov/orgs","repos_url":"https://api.github.com/users/alexey-milovidov/repos","events_url":"https://api.github.com/users/alexey-milovidov/events{/privacy}","received_events_url":"https://api.github.com/users/alexey-milovidov/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":1507886722,"node_id":"MDU6TGFiZWwxNTA3ODg2NzIy","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/st-discussion","name":"st-discussion","color":"e5b890","default":false,"description":"The story requires discussion /research / expert help / design & decomposition before will be taken"}],"state":"open","locked":false,"assignee":{"login":"den-crane","id":19737682,"node_id":"MDQ6VXNlcjE5NzM3Njgy","avatar_url":"https://avatars.githubusercontent.com/u/19737682?v=4","gravatar_id":"","url":"https://api.github.com/users/den-crane","html_url":"https://github.com/den-crane","followers_url":"https://api.github.com/users/den-crane/followers","following_url":"https://api.github.com/users/den-crane/following{/other_user}","gists_url":"https://api.github.com/users/den-crane/gists{/gist_id}","starred_url":"https://api.github.com/users/den-crane/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/den-crane/subscriptions","organizations_url":"https://api.github.com/users/den-crane/orgs","repos_url":"https://api.github.com/users/den-crane/repos","events_url":"https://api.github.com/users/den-crane/events{/privacy}","received_events_url":"https://api.github.com/users/den-crane/received_events","type":"User","site_admin":false},"assignees":[{"login":"den-crane","id":19737682,"node_id":"MDQ6VXNlcjE5NzM3Njgy","avatar_url":"https://avatars.githubusercontent.com/u/19737682?v=4","gravatar_id":"","url":"https://api.github.com/users/den-crane","html_url":"https://github.com/den-crane","followers_url":"https://api.github.com/users/den-crane/followers","following_url":"https://api.github.com/users/den-crane/following{/other_user}","gists_url":"https://api.github.com/users/den-crane/gists{/gist_id}","starred_url":"https://api.github.com/users/den-crane/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/den-crane/subscriptions","organizations_url":"https://api.github.com/users/den-crane/orgs","repos_url":"https://api.github.com/users/den-crane/repos","events_url":"https://api.github.com/users/den-crane/events{/privacy}","received_events_url":"https://api.github.com/users/den-crane/received_events","type":"User","site_admin":false}],"milestone":null,"comments":23,"created_at":"2020-03-17T23:08:57Z","updated_at":"2022-01-19T07:27:58Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"**Use case**\r\n`SELECT avg(number) AS number, max(number) FROM numbers(10)`\r\n\r\n```\r\nAggregate function avg(number) is found inside another aggregate function in query.\r\n```\r\n\r\n**Possible solutions**\r\n1. If aliased expression contains aggregate function, alias should not be resolved inside another aggregate function.\r\n2. If alias name clashes with the column name, the substitution of this alias should be cancelled.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9715/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9715/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9712","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9712/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9712/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9712/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/9712","id":583276556,"node_id":"MDU6SXNzdWU1ODMyNzY1NTY=","number":9712,"title":"Part may remain after insertion failure.","user":{"login":"alexey-milovidov","id":18581488,"node_id":"MDQ6VXNlcjE4NTgxNDg4","avatar_url":"https://avatars.githubusercontent.com/u/18581488?v=4","gravatar_id":"","url":"https://api.github.com/users/alexey-milovidov","html_url":"https://github.com/alexey-milovidov","followers_url":"https://api.github.com/users/alexey-milovidov/followers","following_url":"https://api.github.com/users/alexey-milovidov/following{/other_user}","gists_url":"https://api.github.com/users/alexey-milovidov/gists{/gist_id}","starred_url":"https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexey-milovidov/subscriptions","organizations_url":"https://api.github.com/users/alexey-milovidov/orgs","repos_url":"https://api.github.com/users/alexey-milovidov/repos","events_url":"https://api.github.com/users/alexey-milovidov/events{/privacy}","received_events_url":"https://api.github.com/users/alexey-milovidov/received_events","type":"User","site_admin":false},"labels":[{"id":386401505,"node_id":"MDU6TGFiZWwzODY0MDE1MDU=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/bug","name":"bug","color":"ee0701","default":true,"description":"Confirmed user-visible misbehaviour in official release"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2020-03-17T20:24:19Z","updated_at":"2020-03-17T20:27:04Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"When inserting to Replicated table,\r\nif the part was written to local filesystem but on commit to ZooKeeper, the connection to ZK is loss,\r\nthe client will get an error `Unknown status, client must retry` and the part will be scheduled for check.\r\n\r\nThe part will remain in filesystem and in the working set in memory. It's available for SELECT queries.\r\n\r\nIt's expected that the part will be checked and one of two possibilities will be found:\r\n- the part was committed to ZooKeeper (along with replication log entry that's committed in the same transaction), we have to keep it;\r\n- the part was not committed to ZooKeeper, we have to delete it from the filesystem and from the working set in memory.\r\n\r\nBut there is a case when the part was not committed to ZooKeeper but is not checked and remain in the filesystem and in the working set in memory forever (until clickhouse-server restart of until DETACH/ATTACH table).\r\n\r\nIt looks like diverged replicas (a replica has slightly more records than other replicas) and is fixed automatically by clickhouse-server restart.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9712/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9712/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9684","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9684/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9684/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9684/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/9684","id":582350152,"node_id":"MDU6SXNzdWU1ODIzNTAxNTI=","number":9684,"title":"The Merge engine for tables with different columns lists","user":{"login":"aallagulov","id":2860919,"node_id":"MDQ6VXNlcjI4NjA5MTk=","avatar_url":"https://avatars.githubusercontent.com/u/2860919?v=4","gravatar_id":"","url":"https://api.github.com/users/aallagulov","html_url":"https://github.com/aallagulov","followers_url":"https://api.github.com/users/aallagulov/followers","following_url":"https://api.github.com/users/aallagulov/following{/other_user}","gists_url":"https://api.github.com/users/aallagulov/gists{/gist_id}","starred_url":"https://api.github.com/users/aallagulov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/aallagulov/subscriptions","organizations_url":"https://api.github.com/users/aallagulov/orgs","repos_url":"https://api.github.com/users/aallagulov/repos","events_url":"https://api.github.com/users/aallagulov/events{/privacy}","received_events_url":"https://api.github.com/users/aallagulov/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2020-03-16T14:39:18Z","updated_at":"2020-03-16T15:21:06Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Hey!\r\n\r\nWe use **SummingMergeTree** for storing aggregates of our stats.\r\nNow we need to add a new key column and looks like it's a big problem (https://github.com/ClickHouse/ClickHouse/issues/3054)\r\n\r\nWe checked the docs and found that there is the **Merge engine**, that could be used for simultaneous reads from some tables which could be useful for us (we wanted just to create a new table with a new key column and read from both old and new tables).\r\nBut it seems that it is possible to use **Merge engine** for identical tables only (or it produces exceptions like _'DB::Exception: Unknown identifier: %s'_ OR _'There is no column with name %s in table.'_)\r\n\r\nWhat do you think about adding an ability from the subject?\r\nFor non-existent columns, a default value could be returned.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9684/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9684/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9671","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9671/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9671/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9671/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/9671","id":581716842,"node_id":"MDU6SXNzdWU1ODE3MTY4NDI=","number":9671,"title":"Load csv files that have different nof columns of rows ","user":{"login":"catalina-ch","id":62210975,"node_id":"MDQ6VXNlcjYyMjEwOTc1","avatar_url":"https://avatars.githubusercontent.com/u/62210975?v=4","gravatar_id":"","url":"https://api.github.com/users/catalina-ch","html_url":"https://github.com/catalina-ch","followers_url":"https://api.github.com/users/catalina-ch/followers","following_url":"https://api.github.com/users/catalina-ch/following{/other_user}","gists_url":"https://api.github.com/users/catalina-ch/gists{/gist_id}","starred_url":"https://api.github.com/users/catalina-ch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/catalina-ch/subscriptions","organizations_url":"https://api.github.com/users/catalina-ch/orgs","repos_url":"https://api.github.com/users/catalina-ch/repos","events_url":"https://api.github.com/users/catalina-ch/events{/privacy}","received_events_url":"https://api.github.com/users/catalina-ch/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2020-03-15T15:26:50Z","updated_at":"2020-03-15T15:26:50Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"\r\n**Use case**\r\nI have files which will be loaded into clickhouse that some of these files have different nof columns of rows (rare situation but exists)\r\nexample:       file_1.txt have both 2,3,4 columns of rows together.\r\n1;hello;world\r\n2;hello\r\n3;hello;world;from space\r\n\r\n**Solution**\r\nIt would be fantastic adding a setting that handles loading successfully these kind of files.\r\nThe table that data will be loaded have 3 columns; file_1.txt have 2,3 and 4 columns of rows together. If the setting is enabled, it will be ok while loading the data. \r\nthe 1st row is ok 3 columns = nof columns table have\r\nthe 2nd row will be inserted into first 2 columns of table\r\nthe 3rd row will be truncated and only first 3 columns will be inserted\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9671/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9671/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9604","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9604/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9604/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9604/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/9604","id":579310292,"node_id":"MDU6SXNzdWU1NzkzMTAyOTI=","number":9604,"title":"'group_by_each_block_no_merge' setting","user":{"login":"alexey-milovidov","id":18581488,"node_id":"MDQ6VXNlcjE4NTgxNDg4","avatar_url":"https://avatars.githubusercontent.com/u/18581488?v=4","gravatar_id":"","url":"https://api.github.com/users/alexey-milovidov","html_url":"https://github.com/alexey-milovidov","followers_url":"https://api.github.com/users/alexey-milovidov/followers","following_url":"https://api.github.com/users/alexey-milovidov/following{/other_user}","gists_url":"https://api.github.com/users/alexey-milovidov/gists{/gist_id}","starred_url":"https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexey-milovidov/subscriptions","organizations_url":"https://api.github.com/users/alexey-milovidov/orgs","repos_url":"https://api.github.com/users/alexey-milovidov/repos","events_url":"https://api.github.com/users/alexey-milovidov/events{/privacy}","received_events_url":"https://api.github.com/users/alexey-milovidov/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2020-03-11T14:34:43Z","updated_at":"2021-04-02T05:42:35Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"When this setting is enabled, the query with GROUP BY will be processed in a streaming fashion: aggregation will be performed, finalized and flushed for every block of data. Results will be incorrect (not fully merged).\r\n\r\nThe setting will be enabled when creating materialized view with POPULATE option. Materialized view will merge data in background.\r\n\r\nFurther possibilities: add another pair of settings to specify the threshold on rows and bytes to flush partial result - to flush it once a several blocks instead of every block.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9604/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9604/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9596","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9596/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9596/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9596/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/9596","id":578801973,"node_id":"MDU6SXNzdWU1Nzg4MDE5NzM=","number":9596,"title":"caseWithExpression (case + toInt16OrNull) unexpected behaviour (All CH versions)","user":{"login":"den-crane","id":19737682,"node_id":"MDQ6VXNlcjE5NzM3Njgy","avatar_url":"https://avatars.githubusercontent.com/u/19737682?v=4","gravatar_id":"","url":"https://api.github.com/users/den-crane","html_url":"https://github.com/den-crane","followers_url":"https://api.github.com/users/den-crane/followers","following_url":"https://api.github.com/users/den-crane/following{/other_user}","gists_url":"https://api.github.com/users/den-crane/gists{/gist_id}","starred_url":"https://api.github.com/users/den-crane/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/den-crane/subscriptions","organizations_url":"https://api.github.com/users/den-crane/orgs","repos_url":"https://api.github.com/users/den-crane/repos","events_url":"https://api.github.com/users/den-crane/events{/privacy}","received_events_url":"https://api.github.com/users/den-crane/received_events","type":"User","site_admin":false},"labels":[{"id":386401505,"node_id":"MDU6TGFiZWwzODY0MDE1MDU=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/bug","name":"bug","color":"ee0701","default":true,"description":"Confirmed user-visible misbehaviour in official release"},{"id":1575085465,"node_id":"MDU6TGFiZWwxNTc1MDg1NDY1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/unexpected%20behaviour","name":"unexpected behaviour","color":"e088ca","default":false,"description":""},{"id":1634867650,"node_id":"MDU6TGFiZWwxNjM0ODY3NjUw","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-nullable","name":"comp-nullable","color":"b5bcff","default":false,"description":"Nulls related"},{"id":3086255531,"node_id":"MDU6TGFiZWwzMDg2MjU1NTMx","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/warmup%20task","name":"warmup task","color":"FBCA04","default":false,"description":"The task for new ClickHouse team members. Low risk, moderate complexity, no urgency."}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2020-03-10T19:12:04Z","updated_at":"2022-01-24T12:13:41Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"body":"```\r\nSELECT\r\n    d,\r\n    toInt16OrNull(d),\r\n    caseWithExpression(d, 'a', 3, toInt16OrZero(d)) AS case_zero,\r\n    caseWithExpression(d, 'a', 3, toInt16OrNull(d)) AS case_null,\r\n    if(d = 'a', 3, toInt16OrZero(d)) AS if_zero,\r\n    if(d = 'a', 3, toInt16OrNull(d)) AS if_null\r\nFROM\r\n(\r\n    SELECT arrayJoin(['', '1', 'a']) AS d\r\n)\r\nORDER BY\r\n    case_zero ASC,\r\n    d ASC\r\n\r\ncase_null is wrong for 'a'\r\n┌─d─┬─toInt16OrNull(d)─┬─case_zero─┬─case_null─┬─if_zero─┬─if_null─┐\r\n│   │             ᴺᵁᴸᴸ │         0 │      ᴺᵁᴸᴸ │       0 │    ᴺᵁᴸᴸ │\r\n│ 1 │                1 │         1 │         1 │       1 │       1 │\r\n│ a │             ᴺᵁᴸᴸ │         3 │      ᴺᵁᴸᴸ │       3 │       3 │\r\n└───┴──────────────────┴───────────┴───────────┴─────────┴─────────┘\r\n\r\nexpected\r\n┌─d─┬─toInt16OrNull(d)─┬─case_zero─┬─case_null─┬─if_zero─┬─if_null─┐\r\n│   │             ᴺᵁᴸᴸ │         0 │      ᴺᵁᴸᴸ │       0 │    ᴺᵁᴸᴸ │\r\n│ 1 │                1 │         1 │         1 │       1 │       1 │\r\n│ a │             ᴺᵁᴸᴸ │         3 │         3 │       3 │       3 │\r\n└───┴──────────────────┴───────────┴───────────┴─────────┴─────────┘\r\n\r\n```","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9596/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9596/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9584","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9584/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9584/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9584/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/9584","id":578632923,"node_id":"MDU6SXNzdWU1Nzg2MzI5MjM=","number":9584,"title":"toDateTimeOrNull does not accept second argument with timezone","user":{"login":"alexey-milovidov","id":18581488,"node_id":"MDQ6VXNlcjE4NTgxNDg4","avatar_url":"https://avatars.githubusercontent.com/u/18581488?v=4","gravatar_id":"","url":"https://api.github.com/users/alexey-milovidov","html_url":"https://github.com/alexey-milovidov","followers_url":"https://api.github.com/users/alexey-milovidov/followers","following_url":"https://api.github.com/users/alexey-milovidov/following{/other_user}","gists_url":"https://api.github.com/users/alexey-milovidov/gists{/gist_id}","starred_url":"https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexey-milovidov/subscriptions","organizations_url":"https://api.github.com/users/alexey-milovidov/orgs","repos_url":"https://api.github.com/users/alexey-milovidov/repos","events_url":"https://api.github.com/users/alexey-milovidov/events{/privacy}","received_events_url":"https://api.github.com/users/alexey-milovidov/received_events","type":"User","site_admin":false},"labels":[{"id":644208617,"node_id":"MDU6TGFiZWw2NDQyMDg2MTc=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/easy%20task","name":"easy task","color":"0e8a16","default":false,"description":"Good for first contributors"},{"id":1397894054,"node_id":"MDU6TGFiZWwxMzk3ODk0MDU0","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/unfinished%20code","name":"unfinished code","color":"ff8800","default":false,"description":""},{"id":1481221764,"node_id":"MDU6TGFiZWwxNDgxMjIxNzY0","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-datetime","name":"comp-datetime","color":"b5bcff","default":false,"description":"date & time & timezone related"}],"state":"open","locked":false,"assignee":{"login":"shanxinkuang","id":37073464,"node_id":"MDQ6VXNlcjM3MDczNDY0","avatar_url":"https://avatars.githubusercontent.com/u/37073464?v=4","gravatar_id":"","url":"https://api.github.com/users/shanxinkuang","html_url":"https://github.com/shanxinkuang","followers_url":"https://api.github.com/users/shanxinkuang/followers","following_url":"https://api.github.com/users/shanxinkuang/following{/other_user}","gists_url":"https://api.github.com/users/shanxinkuang/gists{/gist_id}","starred_url":"https://api.github.com/users/shanxinkuang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/shanxinkuang/subscriptions","organizations_url":"https://api.github.com/users/shanxinkuang/orgs","repos_url":"https://api.github.com/users/shanxinkuang/repos","events_url":"https://api.github.com/users/shanxinkuang/events{/privacy}","received_events_url":"https://api.github.com/users/shanxinkuang/received_events","type":"User","site_admin":false},"assignees":[{"login":"shanxinkuang","id":37073464,"node_id":"MDQ6VXNlcjM3MDczNDY0","avatar_url":"https://avatars.githubusercontent.com/u/37073464?v=4","gravatar_id":"","url":"https://api.github.com/users/shanxinkuang","html_url":"https://github.com/shanxinkuang","followers_url":"https://api.github.com/users/shanxinkuang/followers","following_url":"https://api.github.com/users/shanxinkuang/following{/other_user}","gists_url":"https://api.github.com/users/shanxinkuang/gists{/gist_id}","starred_url":"https://api.github.com/users/shanxinkuang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/shanxinkuang/subscriptions","organizations_url":"https://api.github.com/users/shanxinkuang/orgs","repos_url":"https://api.github.com/users/shanxinkuang/repos","events_url":"https://api.github.com/users/shanxinkuang/events{/privacy}","received_events_url":"https://api.github.com/users/shanxinkuang/received_events","type":"User","site_admin":false}],"milestone":null,"comments":6,"created_at":"2020-03-10T14:44:18Z","updated_at":"2021-12-09T22:47:18Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"**Describe the bug or unexpected behaviour**\r\n```\r\nmilovidov-Pro-P30 :) SELECT toDateTime(1583851242, 'Asia/Shanghai')\r\n\r\nSELECT toDateTime(1583851242, 'Asia/Shanghai')\r\n\r\n┌─toDateTime(1583851242, 'Asia/Shanghai')─┐\r\n│                     2020-03-10 22:40:42 │\r\n└─────────────────────────────────────────┘\r\n\r\n1 rows in set. Elapsed: 0.087 sec. \r\n\r\nmilovidov-Pro-P30 :) SELECT toDateTimeOrNull(1583851242, 'Asia/Shanghai')\r\n\r\nSELECT toDateTimeOrNull(1583851242, 'Asia/Shanghai')\r\n\r\nReceived exception from server (version 20.3.1):\r\nCode: 43. DB::Exception: Received from localhost:9000. DB::Exception: Illegal type UInt32 of first argument of function toDateTimeOrNull. Conversion functions with postfix 'OrZero' or 'OrNull'  should take String argument.\r\n```\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9584/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9584/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9579","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9579/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9579/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9579/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/9579","id":578492211,"node_id":"MDU6SXNzdWU1Nzg0OTIyMTE=","number":9579,"title":"Некорректное поведение в случае ошибки при получении данных через HTTP-интерфейс","user":{"login":"MakarovYaroslav","id":15161895,"node_id":"MDQ6VXNlcjE1MTYxODk1","avatar_url":"https://avatars.githubusercontent.com/u/15161895?v=4","gravatar_id":"","url":"https://api.github.com/users/MakarovYaroslav","html_url":"https://github.com/MakarovYaroslav","followers_url":"https://api.github.com/users/MakarovYaroslav/followers","following_url":"https://api.github.com/users/MakarovYaroslav/following{/other_user}","gists_url":"https://api.github.com/users/MakarovYaroslav/gists{/gist_id}","starred_url":"https://api.github.com/users/MakarovYaroslav/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/MakarovYaroslav/subscriptions","organizations_url":"https://api.github.com/users/MakarovYaroslav/orgs","repos_url":"https://api.github.com/users/MakarovYaroslav/repos","events_url":"https://api.github.com/users/MakarovYaroslav/events{/privacy}","received_events_url":"https://api.github.com/users/MakarovYaroslav/received_events","type":"User","site_admin":false},"labels":[{"id":386401505,"node_id":"MDU6TGFiZWwzODY0MDE1MDU=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/bug","name":"bug","color":"ee0701","default":true,"description":"Confirmed user-visible misbehaviour in official release"},{"id":1481327553,"node_id":"MDU6TGFiZWwxNDgxMzI3NTUz","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-http","name":"comp-http","color":"b5bcff","default":false,"description":"http protocol related"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2020-03-10T10:50:07Z","updated_at":"2020-03-14T22:50:21Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"## Описание проблемы\r\n\r\nЕсли при выгрузке данных по HTTP-интерфейсу произошла ошибка, то ClickHouse отдает ошибку и корректно закрывает соединение. \r\nПонять, что произошла ошибка невозможно.\r\nМожет быть сервер не должен возвращать в конце 0\\r\\n, чтобы показать, что ответ невалидный?\r\n\r\n## Пример 1\r\n\r\n```\r\n$ curl -v 'http://172.30.0.5:8123/?user=default&query=SELECT%20*%20FROM%20data_log' > /tmp/result.txt\r\n*   Trying 172.30.0.5...\r\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\r\n                                 Dload  Upload   Total   Spent    Left  Speed\r\n  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* Connected to 172.30.0.5 (172.30.0.5) port 8123 (#0)\r\n> GET /?user=default&query=SELECT%20*%20FROM%20data_log HTTP/1.1\r\n> Host: 172.30.0.5:8123\r\n> User-Agent: curl/7.47.0\r\n> Accept: */*\r\n> \r\n< HTTP/1.1 200 OK\r\n< Date: Tue, 10 Mar 2020 09:56:18 GMT\r\n< Connection: Keep-Alive\r\n< Content-Type: text/tab-separated-values; charset=UTF-8\r\n< X-ClickHouse-Server-Display-Name: 31564b39bb8e\r\n< Transfer-Encoding: chunked\r\n< X-ClickHouse-Query-Id: 1b48015c-aef5-44d5-87cc-be0ac485ccdb\r\n< Keep-Alive: timeout=10\r\n< X-ClickHouse-Summary: {\"read_rows\":\"0\",\"read_bytes\":\"0\",\"written_rows\":\"0\",\"written_bytes\":\"0\",\"total_rows_to_read\":\"0\"}\r\n< \r\n{ [15965 bytes data]\r\n100  210M    0  210M    0     0  88.2M      0 --:--:--  0:00:02 --:--:-- 88.2M\r\n* Connection #0 to host 172.30.0.5 left intact\r\n\r\n$ echo $?\r\n0\r\n\r\n$ tail -n 1 /tmp/result.txt\r\nCode: 394, e.displayText() = DB::Exception: Query was cancelled (version 19.9.4.34 (official build))\r\n```\r\n\r\n## Пример 2\r\n```\r\n$ telnet 172.30.0.5 8123\r\nTrying 172.30.0.5...\r\nConnected to 172.30.0.5.\r\nEscape character is '^]'.\r\n\r\nGET /?user=default&query=SELECT%20*%20FROM%20data_log HTTP/1.1\r\nHost: 172.30.0.5:8123\r\n\r\n....\r\n\r\nCode: 394, e.displayText() = DB::Exception: Query was cancelled (version 19.9.4.34 (official build))\r\n\r\n0\r\n\r\nConnection closed by foreign host.\r\n\r\n```\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9579/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9579/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9547","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9547/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9547/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9547/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/9547","id":577205983,"node_id":"MDU6SXNzdWU1NzcyMDU5ODM=","number":9547,"title":"Unexpected behavior of config substitutions from ZooKeeper","user":{"login":"SaltTan","id":20357526,"node_id":"MDQ6VXNlcjIwMzU3NTI2","avatar_url":"https://avatars.githubusercontent.com/u/20357526?v=4","gravatar_id":"","url":"https://api.github.com/users/SaltTan","html_url":"https://github.com/SaltTan","followers_url":"https://api.github.com/users/SaltTan/followers","following_url":"https://api.github.com/users/SaltTan/following{/other_user}","gists_url":"https://api.github.com/users/SaltTan/gists{/gist_id}","starred_url":"https://api.github.com/users/SaltTan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/SaltTan/subscriptions","organizations_url":"https://api.github.com/users/SaltTan/orgs","repos_url":"https://api.github.com/users/SaltTan/repos","events_url":"https://api.github.com/users/SaltTan/events{/privacy}","received_events_url":"https://api.github.com/users/SaltTan/received_events","type":"User","site_admin":false},"labels":[{"id":386401505,"node_id":"MDU6TGFiZWwzODY0MDE1MDU=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/bug","name":"bug","color":"ee0701","default":true,"description":"Confirmed user-visible misbehaviour in official release"},{"id":1507888214,"node_id":"MDU6TGFiZWwxNTA3ODg4MjE0","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/st-accepted","name":"st-accepted","color":"e5b890","default":false,"description":"The issue is in our backlog, ready to take"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2020-03-06T22:19:33Z","updated_at":"2020-11-29T12:26:36Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"I would like to use ZK as an optional storage for CH settings.\r\nThe idea is that I would put files with the 'default' settings on the server into /etc/clickhouse-server, and if I want to change something (probably temporarily) I would make the change in ZK.\r\nI couldn't make this work though (I tested on 20.1.4.14).\r\n\r\n1. without replace=\"true\" CH does not even read ZK\r\n```\r\n/etc/clickhouse-server/users.d$  cat test.xml\r\n<yandex>\r\n<profiles>\r\n    <default from_zk=\"/max_memory\">\r\n        <max_memory_usage>10000000001</max_memory_usage>\r\n    </default>\r\n</profiles>\r\n</yandex>\r\n\r\nZK: create max_memory \"<max_memory_usage>10000000002</max_memory_usage>\"\r\n\r\npreprocessed:\r\n<yandex>\r\n    <!-- Profiles of settings. -->\r\n    <profiles>\r\n        <!-- Default settings. -->\r\n        <default>\r\n            <!-- Maximum memory usage for processing single query, in bytes. -->\r\n            <max_memory_usage>10000000001</max_memory_usage>\r\n...\r\nThe znode is not even mentioned in the preprocessed file's header ('This file was generated automatically...').\r\n```\r\n2. With replace=\"true\" CH deletes the whole section even if there is no znode in ZK.\r\nIt's easy to delete the whole profile or users section and this can lead to CH being unusable.\r\nIf the znode exists, the replace works a little strange:\r\n```\r\n/etc/clickhouse-server/users.d$  cat test.xml\r\n<yandex>\r\n<profiles>\r\n    <default>\r\n\t    <max_memory_usage replace=\"true\" from_zk=\"/max_memory\">10000000001</max_memory_usage>\r\n    </default>\r\n</profiles>\r\n</yandex>\r\n\r\nZK: set max_memory \"10000000002\"\r\n\r\npreprocessed:\r\n        <default>\r\n            <!-- Maximum memory usage for processing single query, in bytes. -->\r\n            <max_memory_usage>1000000000110000000002</max_memory_usage>\r\n```","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9547/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9547/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9509","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9509/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9509/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9509/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/9509","id":575486992,"node_id":"MDU6SXNzdWU1NzU0ODY5OTI=","number":9509,"title":"max_execution_time should be checked when receiving \"keep alive\" packets.","user":{"login":"alexey-milovidov","id":18581488,"node_id":"MDQ6VXNlcjE4NTgxNDg4","avatar_url":"https://avatars.githubusercontent.com/u/18581488?v=4","gravatar_id":"","url":"https://api.github.com/users/alexey-milovidov","html_url":"https://github.com/alexey-milovidov","followers_url":"https://api.github.com/users/alexey-milovidov/followers","following_url":"https://api.github.com/users/alexey-milovidov/following{/other_user}","gists_url":"https://api.github.com/users/alexey-milovidov/gists{/gist_id}","starred_url":"https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexey-milovidov/subscriptions","organizations_url":"https://api.github.com/users/alexey-milovidov/orgs","repos_url":"https://api.github.com/users/alexey-milovidov/repos","events_url":"https://api.github.com/users/alexey-milovidov/events{/privacy}","received_events_url":"https://api.github.com/users/alexey-milovidov/received_events","type":"User","site_admin":false},"labels":[{"id":386401505,"node_id":"MDU6TGFiZWwzODY0MDE1MDU=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/bug","name":"bug","color":"ee0701","default":true,"description":"Confirmed user-visible misbehaviour in official release"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2020-03-04T15:13:05Z","updated_at":"2020-03-04T15:15:15Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"**Use case**\r\nThe server sends keep-alive progress with zero increments even if the query does not process any data (e.g. hung). This prevents socket timeouts to fire (this is as expected). But max_execution_time should work and cancel the query at least on initiating server.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9509/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9509/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9462","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9462/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9462/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9462/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/9462","id":573921554,"node_id":"MDU6SXNzdWU1NzM5MjE1NTQ=","number":9462,"title":"Data loss in SummingMergeTree  table with nested record after merging parts","user":{"login":"amarazm","id":1649327,"node_id":"MDQ6VXNlcjE2NDkzMjc=","avatar_url":"https://avatars.githubusercontent.com/u/1649327?v=4","gravatar_id":"","url":"https://api.github.com/users/amarazm","html_url":"https://github.com/amarazm","followers_url":"https://api.github.com/users/amarazm/followers","following_url":"https://api.github.com/users/amarazm/following{/other_user}","gists_url":"https://api.github.com/users/amarazm/gists{/gist_id}","starred_url":"https://api.github.com/users/amarazm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/amarazm/subscriptions","organizations_url":"https://api.github.com/users/amarazm/orgs","repos_url":"https://api.github.com/users/amarazm/repos","events_url":"https://api.github.com/users/amarazm/events{/privacy}","received_events_url":"https://api.github.com/users/amarazm/received_events","type":"User","site_admin":false},"labels":[{"id":1575085465,"node_id":"MDU6TGFiZWwxNTc1MDg1NDY1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/unexpected%20behaviour","name":"unexpected behaviour","color":"e088ca","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2020-03-02T11:49:58Z","updated_at":"2021-02-26T15:42:33Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Data loss in SummingMergeTree  table\r\n\r\n**How to reproduce**\r\n``` sql\r\nf66906c4ea0e :) select version();\r\n\r\nSELECT version()\r\n\r\n┌─version()───┐\r\n│ 20.2.1.2443 │\r\n└─────────────┘\r\n\r\n1 rows in set. Elapsed: 0.004 sec.\r\n\r\nf66906c4ea0e :) drop table if exists default.test_table;\r\n\r\nDROP TABLE IF EXISTS default.test_table\r\n\r\nOk.\r\n\r\n0 rows in set. Elapsed: 0.010 sec.\r\n\r\nf66906c4ea0e :) CREATE TABLE default.test_table (  `dt` Date  default toStartOfDay(ts),  `ts` DateTime,  `ip` String CODEC(ZSTD),  `uri` StringWithDictionary,  errors_Map Nested (  `error_no` UInt32,  `error_ts` Double,  `error_type` StringWithDictionary,  `error_details` String,  `error_count`   UInt32  ),  `ua_browser_version` StringWithDictionary,  `ua_is_mobile` UInt8 ) ENGINE = SummingMergeTree() PARTITION BY toYYYYMM(dt) order by ( ts, ip ) SETTINGS index_granularity = 8192;\r\n\r\nCREATE TABLE default.test_table\r\n(\r\n    `dt` Date DEFAULT toStartOfDay(ts),\r\n    `ts` DateTime,\r\n    `ip` String CODEC(ZSTD),\r\n    `uri` StringWithDictionary,\r\n    `errors_Map` Nested(\r\n    error_no UInt32,\r\n    error_ts Double,\r\n    error_type StringWithDictionary,\r\n    error_details String,\r\n    error_count UInt32),\r\n    `ua_browser_version` StringWithDictionary,\r\n    `ua_is_mobile` UInt8\r\n)\r\nENGINE = SummingMergeTree()\r\nPARTITION BY toYYYYMM(dt)\r\nORDER BY (ts, ip)\r\nSETTINGS index_granularity = 8192\r\n\r\nOk.\r\n\r\n0 rows in set. Elapsed: 0.012 sec.\r\n\r\nf66906c4ea0e :) INSERT  into default.test_table(dt,ts,errors_Map.error_no, errors_Map.error_ts, errors_Map.error_type, errors_Map.error_count ) values   ('2020-01-01', '2020-01-01 00:00:00',[(1)],[(0)],[('t1')],[(1)]) , ('2020-01-02', '2020-01-02 00:00:00',[(2)],[(0)],[('t2')],[(1)]);\r\n\r\nINSERT INTO default.test_table (dt, ts, errors_Map.error_no, errors_Map.error_ts, errors_Map.error_type, errors_Map.error_count) VALUES\r\n\r\nOk.\r\n\r\n2 rows in set. Elapsed: 0.013 sec.\r\n\r\nf66906c4ea0e :) INSERT  into default.test_table(dt,ts,errors_Map.error_no, errors_Map.error_ts, errors_Map.error_type, errors_Map.error_count ) values ('2020-01-03', '2020-01-03 00:00:00',[(1)],[(0)],[('t111')],[(1)]);\r\n\r\nINSERT INTO default.test_table (dt, ts, errors_Map.error_no, errors_Map.error_ts, errors_Map.error_type, errors_Map.error_count) VALUES\r\n\r\nOk.\r\n\r\n1 rows in set. Elapsed: 0.013 sec.\r\n\r\nf66906c4ea0e :) select dt, ts, errors_Map.error_no, errors_Map.error_type, errors_Map.error_count from default.test_table e;\r\n\r\nSELECT\r\n    dt,\r\n    ts,\r\n    errors_Map.error_no,\r\n    errors_Map.error_type,\r\n    errors_Map.error_count\r\nFROM default.test_table AS e\r\n\r\n┌─────────dt─┬──────────────────ts─┬─errors_Map.error_no─┬─errors_Map.error_type─┬─errors_Map.error_count─┐\r\n│ 2020-01-03 │ 2020-01-03 00:00:00 │ [1]                 │ ['t111']              │ [1]                    │\r\n└────────────┴─────────────────────┴─────────────────────┴───────────────────────┴────────────────────────┘\r\n┌─────────dt─┬──────────────────ts─┬─errors_Map.error_no─┬─errors_Map.error_type─┬─errors_Map.error_count─┐\r\n│ 2020-01-01 │ 2020-01-01 00:00:00 │ [1]                 │ ['t1']                │ [1]                    │\r\n│ 2020-01-02 │ 2020-01-02 00:00:00 │ [2]                 │ ['t2']                │ [1]                    │\r\n└────────────┴─────────────────────┴─────────────────────┴───────────────────────┴────────────────────────┘\r\n\r\n3 rows in set. Elapsed: 0.005 sec.\r\n\r\nf66906c4ea0e :) optimize table default.test_table;\r\n\r\nOPTIMIZE TABLE default.test_table\r\n\r\nOk.\r\n\r\n0 rows in set. Elapsed: 0.014 sec.\r\n\r\nf66906c4ea0e :) select dt, ts, errors_Map.error_no, errors_Map.error_type, errors_Map.error_count from default.test_table e;\r\n\r\nSELECT\r\n    dt,\r\n    ts,\r\n    errors_Map.error_no,\r\n    errors_Map.error_type,\r\n    errors_Map.error_count\r\nFROM default.test_table AS e\r\n\r\nOk.\r\n\r\n0 rows in set. Elapsed: 0.004 sec.\r\n```\r\n\r\n* Which ClickHouse server version to use\r\ntested on 20.2.1.2443\r\n\r\n\r\n**Expected behavior**\r\nData from table must be merged into rows. Merging must not resulting in deleting all rows!\r\n\r\n**Error message and/or stacktrace**\r\nNo errors in console neither in log\r\n\r\n```\r\n2020.03.02 11:41:01.947930 [ 70 ] {6fd20de3-9219-443f-9844-40b52df4284d} <Debug> executeQuery: (from 127.0.0.1:41024) OPTIMIZE TABLE default.test_table\r\n2020.03.02 11:41:01.948237 [ 70 ] {6fd20de3-9219-443f-9844-40b52df4284d} <Trace> AccessRightsContext (default): Access granted: OPTIMIZE ON default.test_table\r\n2020.03.02 11:41:01.948657 [ 70 ] {6fd20de3-9219-443f-9844-40b52df4284d} <Debug> default.test_table (MergerMutator): Selected 2 parts from 202001_1_1_0 to 202001_2_2_0\r\n2020.03.02 11:41:01.948783 [ 70 ] {6fd20de3-9219-443f-9844-40b52df4284d} <Debug> DiskLocal: Reserving 1.00 MiB on disk `default`, having unreserved 44.56 GiB.\r\n2020.03.02 11:41:01.949544 [ 70 ] {6fd20de3-9219-443f-9844-40b52df4284d} <Debug> default.test_table (MergerMutator): Merging 2 parts: from 202001_1_1_0 to 202001_2_2_0 into tmp_merge_202001_1_2_1\r\n2020.03.02 11:41:01.950683 [ 70 ] {6fd20de3-9219-443f-9844-40b52df4284d} <Debug> default.test_table (MergerMutator): Selected MergeAlgorithm: Horizontal\r\n2020.03.02 11:41:01.950783 [ 70 ] {6fd20de3-9219-443f-9844-40b52df4284d} <Trace> MergeTreeSequentialBlockInputStream: Reading 2 marks from part 202001_1_1_0, total 2 rows starting from the beginning of the part\r\n2020.03.02 11:41:01.951868 [ 70 ] {6fd20de3-9219-443f-9844-40b52df4284d} <Trace> MergeTreeSequentialBlockInputStream: Reading 2 marks from part 202001_2_2_0, total 1 rows starting from the beginning of the part\r\n2020.03.02 11:41:01.958512 [ 70 ] {6fd20de3-9219-443f-9844-40b52df4284d} <Debug> MergingSortedBlockInputStream: Merge sorted 1 blocks, 0 rows in 0.00 sec.\r\n2020.03.02 11:41:01.958747 [ 70 ] {6fd20de3-9219-443f-9844-40b52df4284d} <Debug> default.test_table (MergerMutator): Merge sorted 3 rows, containing 11 columns (11 merged, 0 gathered) in 0.01 sec., 326.14 rows/sec., 0.04 MB/sec.\r\n2020.03.02 11:41:01.959850 [ 70 ] {6fd20de3-9219-443f-9844-40b52df4284d} <Trace> default.test_table: Renaming temporary part tmp_merge_202001_1_2_1 to 202001_1_2_1.\r\n2020.03.02 11:41:01.960098 [ 70 ] {6fd20de3-9219-443f-9844-40b52df4284d} <Trace> default.test_table (MergerMutator): Merged 2 parts: from 202001_1_1_0 to 202001_2_2_0\r\n```\r\n\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9462/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9462/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9460","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9460/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9460/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9460/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/9460","id":573793122,"node_id":"MDU6SXNzdWU1NzM3OTMxMjI=","number":9460,"title":"Generic selector for materialized and virtual columns","user":{"login":"pachico","id":2184438,"node_id":"MDQ6VXNlcjIxODQ0Mzg=","avatar_url":"https://avatars.githubusercontent.com/u/2184438?v=4","gravatar_id":"","url":"https://api.github.com/users/pachico","html_url":"https://github.com/pachico","followers_url":"https://api.github.com/users/pachico/followers","following_url":"https://api.github.com/users/pachico/following{/other_user}","gists_url":"https://api.github.com/users/pachico/gists{/gist_id}","starred_url":"https://api.github.com/users/pachico/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pachico/subscriptions","organizations_url":"https://api.github.com/users/pachico/orgs","repos_url":"https://api.github.com/users/pachico/repos","events_url":"https://api.github.com/users/pachico/events{/privacy}","received_events_url":"https://api.github.com/users/pachico/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2020-03-02T08:17:07Z","updated_at":"2020-03-15T03:30:51Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"**Use case**\r\nMany times I have to quickly select all columns in a table, however `SELECT *` will not select materialized ones, which frequently are the ones I'm interested into. The same happens with virtual columns. This is by design not to break the `INSERT INTO table SELECT * FROM table`, which makes sense. \r\n\r\n**Describe the solution you'd like**\r\nI propose using `**` to include regular and materialized columns and `***` to also include virtual columns. This way the API won't break and it will make it easy to explore data.\r\nExample: \r\n```sql\r\nSELECT ** FROM table \r\n```\r\n\r\n```sql\r\nSELECT *** FROM table \r\n```\r\nWould it make sense?\r\n\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9460/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9460/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9452","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9452/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9452/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9452/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/9452","id":573285504,"node_id":"MDU6SXNzdWU1NzMyODU1MDQ=","number":9452,"title":"Error message not clear when inserting boolean","user":{"login":"simPod","id":327717,"node_id":"MDQ6VXNlcjMyNzcxNw==","avatar_url":"https://avatars.githubusercontent.com/u/327717?v=4","gravatar_id":"","url":"https://api.github.com/users/simPod","html_url":"https://github.com/simPod","followers_url":"https://api.github.com/users/simPod/followers","following_url":"https://api.github.com/users/simPod/following{/other_user}","gists_url":"https://api.github.com/users/simPod/gists{/gist_id}","starred_url":"https://api.github.com/users/simPod/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/simPod/subscriptions","organizations_url":"https://api.github.com/users/simPod/orgs","repos_url":"https://api.github.com/users/simPod/repos","events_url":"https://api.github.com/users/simPod/events{/privacy}","received_events_url":"https://api.github.com/users/simPod/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2020-02-29T12:26:30Z","updated_at":"2020-12-09T15:32:07Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"I know the boolean cannot be inserted. However, my code tried it.\r\n\r\n> Code: 47, e.displayText() = DB::Exception: Missing columns: 'TRUE' while processing query: 'TRUE', required columns: 'TRUE', source columns: '_dummy' (version 19.17.4.11 (official build))\r\n\r\nFirst I was wondering where does column `_dummy` come from. I'd expect a message about inserting invalid type or something like that.\r\n \r\n```sql\r\nCREATE TABLE test\r\n(\r\n    `evaluated_at` DateTime,\r\n    `is_up`        UInt8\r\n) ENGINE = MergeTree\r\n      PARTITION BY toDate(evaluated_at)\r\n      ORDER BY tuple();\r\n\r\nINSERT INTO test\r\nVALUES ('2020-02-29 00:21:17', TRUE);\r\n```","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9452/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9452/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9439","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9439/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9439/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9439/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/9439","id":572851218,"node_id":"MDU6SXNzdWU1NzI4NTEyMTg=","number":9439,"title":"insert into distributed table with materialized column","user":{"login":"alanrigele","id":48205008,"node_id":"MDQ6VXNlcjQ4MjA1MDA4","avatar_url":"https://avatars.githubusercontent.com/u/48205008?v=4","gravatar_id":"","url":"https://api.github.com/users/alanrigele","html_url":"https://github.com/alanrigele","followers_url":"https://api.github.com/users/alanrigele/followers","following_url":"https://api.github.com/users/alanrigele/following{/other_user}","gists_url":"https://api.github.com/users/alanrigele/gists{/gist_id}","starred_url":"https://api.github.com/users/alanrigele/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alanrigele/subscriptions","organizations_url":"https://api.github.com/users/alanrigele/orgs","repos_url":"https://api.github.com/users/alanrigele/repos","events_url":"https://api.github.com/users/alanrigele/events{/privacy}","received_events_url":"https://api.github.com/users/alanrigele/received_events","type":"User","site_admin":false},"labels":[{"id":386401505,"node_id":"MDU6TGFiZWwzODY0MDE1MDU=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/bug","name":"bug","color":"ee0701","default":true,"description":"Confirmed user-visible misbehaviour in official release"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2020-02-28T16:12:24Z","updated_at":"2020-09-20T22:06:27Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"When inserting into the Distributed table view, fails with \r\nSQL Error [44]: ClickHouse exception, code: 44, host: 172.28.102.44, port: 8123; Code: 44, e.displayText() = DB::Exception: Cannot insert column IDhash, because it is MATERIALIZED column. (version 20.1.4.14 (official build))\r\n\r\nUsing Macros with 3 node cluster, executed on each server.\r\n\r\ncreate database netpm_ran;\r\n--  Server1\r\nCREATE TABLE IF NOT EXISTS netpm_ran.RawCounters_shard\r\n(\r\n    `vendor` LowCardinality(String) DEFAULT 'UNKNOWN' CODEC(LZ4HC(5)),\r\n    `node` String CODEC(LZ4HC(9)),\r\n    `nodeType` Nullable(String) DEFAULT 'UNKNOWN' CODEC(LZ4HC(9)),\r\n    `dt` DateTime CODEC(DoubleDelta, LZ4),\r\n    `granPeriod` Nullable(Int32) ,\r\n    `ID` String CODEC(LZ4HC(9)),\r\n    `IDhash` UInt64 MATERIALIZED sipHash64(ID),\r\n    `counterGroup` String CODEC(LZ4HC(9)),\r\n    `counterID` String CODEC(LZ4HC(9)),\r\n    `counterValue` Nullable(Float64),\r\n    `assumed` Int8 DEFAULT 0,\r\n    `lastModified` Int64 DEFAULT now()\r\n)\r\nENGINE = ReplicatedReplacingMergeTree('/clickhouse/{cluster}/tables/netpm_ran.rawcounters/{shard}', '{replica}',lastModified)\r\nPARTITION BY toStartOfHour(dt)\r\nPRIMARY KEY (counterID,  node, ID, dt, counterGroup, vendor)\r\nORDER BY (counterID, node, ID, dt, counterGroup, vendor)\r\nSETTINGS index_granularity = 8192;\r\n\r\nCREATE TABLE IF NOT EXISTS netpm_ran.RawCounters \r\n(\r\n    `vendor` LowCardinality(String) DEFAULT 'UNKNOWN' CODEC(LZ4HC(5)),\r\n    `node` String CODEC(LZ4HC(9)),\r\n    `nodeType` Nullable(String) DEFAULT 'UNKNOWN' CODEC(LZ4HC(9)),\r\n    `dt` DateTime CODEC(DoubleDelta, LZ4),\r\n    `granPeriod` Nullable(Int32) ,\r\n    `ID` String CODEC(LZ4HC(9)),\r\n    `IDhash` UInt64,\r\n    `counterGroup` String CODEC(LZ4HC(9)),\r\n    `counterID` String CODEC(LZ4HC(9)),\r\n    `counterValue` Nullable(Float64),\r\n    `assumed` Int8 DEFAULT 0,\r\n    `lastModified` Int64 DEFAULT now()\r\n)\r\nENGINE = Distributed(\r\n   'netpm_cluster',\r\n   'netpm_ran',\r\n   RawCounters_shard,\r\n    intHash32(IDhash));\r\n   \r\n\r\n \r\n CREATE TABLE IF NOT EXISTS netpm_ran.Counters_shard\r\n(\r\n    `vendor` LowCardinality(String) DEFAULT 'UNKNOWN' CODEC(LZ4HC(5)),\r\n    `node` String CODEC(LZ4HC(9)),\r\n    `nodeType` Nullable(String) DEFAULT 'UNKNOWN' CODEC(LZ4HC(9)),\r\n    `dt` DateTime CODEC(DoubleDelta, LZ4),\r\n    `granPeriod` Nullable(Int32) ,\r\n    `ID` String CODEC(LZ4HC(9)),\r\n    `IDhash` UInt64 MATERIALIZED sipHash64(ID),\r\n    `counterGroup` String CODEC(LZ4HC(9)),\r\n    `counterID` String CODEC(LZ4HC(9)),\r\n    `counterValue` Nullable(Float64),\r\n    `assumed` Int8 DEFAULT 0,\r\n    `lastModified` Int64 DEFAULT now()\r\n)\r\nENGINE = ReplicatedReplacingMergeTree('/clickhouse/{cluster}/tables/netpm_ran.counters/{shard}', '{replica}',lastModified)\r\nPARTITION BY toStartOfHour(dt)\r\nPRIMARY KEY (counterID,  node, ID, dt, counterGroup, vendor)\r\nORDER BY (counterID, node, ID, dt, counterGroup, vendor)\r\nSETTINGS index_granularity = 8192;\r\n\r\n \r\n  CREATE TABLE IF NOT EXISTS netpm_ran.Counters\r\n(\r\n    `vendor` LowCardinality(String) DEFAULT 'UNKNOWN' CODEC(LZ4HC(5)),\r\n    `node` String CODEC(LZ4HC(9)),\r\n    `nodeType` Nullable(String) DEFAULT 'UNKNOWN' CODEC(LZ4HC(9)),\r\n    `dt` DateTime CODEC(DoubleDelta, LZ4),\r\n    `granPeriod` Nullable(Int32) ,\r\n    `ID` String CODEC(LZ4HC(9)),\r\n    `IDhash` UInt64,\r\n    `counterGroup` String CODEC(LZ4HC(9)),\r\n    `counterID` String CODEC(LZ4HC(9)),\r\n    `counterValue` Nullable(Float64),\r\n    `assumed` Int8 DEFAULT 0,\r\n    `lastModified` Int64 DEFAULT now()\r\n)\r\nENGINE = Distributed(\r\n   'netpm_cluster',\r\n   'netpm_ran',\r\n   Counters_shard,\r\n    intHash32(IDhash));\r\n  \r\n  drop table netpm_ran.mv_raw_to_counters;\r\n\r\n \r\n\r\n ATTACH MATERIALIZED VIEW netpm_ran.mv_raw_to_counters TO netpm_ran.Counters\r\n(\r\n\t`vendor` String ,\r\n    `node` String,\r\n    `nodeType` Nullable(String),\r\n    `dt` DateTime,\r\n    `granPeriod` Nullable(Int16),\r\n    `ID` String ,\r\n    `IDhash` UInt64,\r\n    `counterGroup` String,\r\n    `counterID` String,\r\n    `counterValue` Nullable(Float64),\r\n    `assumed` Int8 DEFAULT 0,\r\n    `lastModified` Int64  DEFAULT now()\r\n) AS\r\nSELECT vendor,node,nodeType,dt,granPeriod,ID,IDhash ,counterGroup,counterID,counterValue,assumed,lastModified  FROM netpm_ran.RawCounters_shard\r\nWHERE lower(dictGet('counterdef', 'keep', (vendor, counterID))) IN ('true', '1');\r\n\r\n\r\nInserts directly into the local shard table functions correctly. \r\nThe functional concept that the data inserted data into the RawCounters table is copied to the Counters table (both sharded) if the dictionary function returns a true value. \r\nThe sipHash64 Value is the Materialized view used in a dictionary lookup in a later process.\r\n\r\nIf the system is not clustered, the process works correctly\r\n\r\n\r\ninsert into netpm_ran.RawCounters (vendor,node,nodeType, dt,granPeriod ,ID,IDhash,counterGroup, counterID ,counterValue ,lastModified)\r\nvalues ('v1','node1','test',now(),900,'ID1','cg1','cID1',100,0,0)\r\n\r\n\r\nTrace Dump\r\n\r\norg.jkiss.dbeaver.model.sql.DBSQLException: SQL Error [44]: ClickHouse exception, code: 44, host: 172.28.102.44, port: 8123; Code: 44, e.displayText() = DB::Exception: Cannot insert column IDhash, because it is MATERIALIZED column. (version 20.1.4.14 (official build))\r\n\r\n\r\n\tat org.jkiss.dbeaver.model.impl.jdbc.exec.JDBCStatementImpl.executeStatement(JDBCStatementImpl.java:134)\r\n\r\n\tat org.jkiss.dbeaver.ui.editors.sql.execute.SQLQueryJob.executeStatement(SQLQueryJob.java:487)\r\n\r\n\tat org.jkiss.dbeaver.ui.editors.sql.execute.SQLQueryJob.lambda$0(SQLQueryJob.java:424)\r\n\r\n\tat org.jkiss.dbeaver.model.exec.DBExecUtils.tryExecuteRecover(DBExecUtils.java:164)\r\n\r\n\tat org.jkiss.dbeaver.ui.editors.sql.execute.SQLQueryJob.executeSingleQuery(SQLQueryJob.java:416)\r\n\r\n\tat org.jkiss.dbeaver.ui.editors.sql.execute.SQLQueryJob.extractData(SQLQueryJob.java:774)\r\n\r\n\tat org.jkiss.dbeaver.ui.editors.sql.SQLEditor$QueryResultsContainer.readData(SQLEditor.java:2914)\r\n\r\n\tat org.jkiss.dbeaver.ui.controls.resultset.ResultSetJobDataRead.lambda$0(ResultSetJobDataRead.java:110)\r\n\r\n\tat org.jkiss.dbeaver.model.exec.DBExecUtils.tryExecuteRecover(DBExecUtils.java:164)\r\n\r\n\tat org.jkiss.dbeaver.ui.controls.resultset.ResultSetJobDataRead.run(ResultSetJobDataRead.java:108)\r\n\r\n\tat org.jkiss.dbeaver.ui.controls.resultset.ResultSetViewer$17.run(ResultSetViewer.java:3421)\r\n\r\n\tat org.jkiss.dbeaver.model.runtime.AbstractJob.run(AbstractJob.java:103)\r\n\r\n\tat org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)\r\n\r\nCaused by: ru.yandex.clickhouse.except.ClickHouseException: ClickHouse exception, code: 44, host: 172.28.102.44, port: 8123; Code: 44, e.displayText() = DB::Exception: Cannot insert column IDhash, because it is MATERIALIZED column. (version 20.1.4.14 (official build))\r\n\r\n\r\n\tat ru.yandex.clickhouse.except.ClickHouseExceptionSpecifier.specify(ClickHouseExceptionSpecifier.java:58)\r\n\r\n\tat ru.yandex.clickhouse.except.ClickHouseExceptionSpecifier.specify(ClickHouseExceptionSpecifier.java:28)\r\n\r\n\tat ru.yandex.clickhouse.ClickHouseStatementImpl.checkForErrorAndThrow(ClickHouseStatementImpl.java:875)\r\n\r\n\tat ru.yandex.clickhouse.ClickHouseStatementImpl.getInputStream(ClickHouseStatementImpl.java:616)\r\n\r\n\tat ru.yandex.clickhouse.ClickHouseStatementImpl.executeQuery(ClickHouseStatementImpl.java:117)\r\n\r\n\tat ru.yandex.clickhouse.ClickHouseStatementImpl.executeQuery(ClickHouseStatementImpl.java:100)\r\n\r\n\tat ru.yandex.clickhouse.ClickHouseStatementImpl.executeQuery(ClickHouseStatementImpl.java:95)\r\n\r\n\tat ru.yandex.clickhouse.ClickHouseStatementImpl.executeQuery(ClickHouseStatementImpl.java:90)\r\n\r\n\tat ru.yandex.clickhouse.ClickHouseStatementImpl.execute(ClickHouseStatementImpl.java:226)\r\n\r\n\tat org.jkiss.dbeaver.model.impl.jdbc.exec.JDBCStatementImpl.execute(JDBCStatementImpl.java:338)\r\n\r\n\tat org.jkiss.dbeaver.model.impl.jdbc.exec.JDBCStatementImpl.executeStatement(JDBCStatementImpl.java:131)\r\n\r\n\t... 12 more\r\n\r\nCaused by: java.lang.Throwable: Code: 44, e.displayText() = DB::Exception: Cannot insert column IDhash, because it is MATERIALIZED column. (version 20.1.4.14 (official build))\r\n\r\n\r\n\tat ru.yandex.clickhouse.except.ClickHouseExceptionSpecifier.specify(ClickHouseExceptionSpecifier.java:53)\r\n\r\n\t... 22 more\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9439/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9439/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9437","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9437/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9437/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9437/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/9437","id":572762892,"node_id":"MDU6SXNzdWU1NzI3NjI4OTI=","number":9437,"title":"Punycode encode/decode.","user":{"login":"alexey-milovidov","id":18581488,"node_id":"MDQ6VXNlcjE4NTgxNDg4","avatar_url":"https://avatars.githubusercontent.com/u/18581488?v=4","gravatar_id":"","url":"https://api.github.com/users/alexey-milovidov","html_url":"https://github.com/alexey-milovidov","followers_url":"https://api.github.com/users/alexey-milovidov/followers","following_url":"https://api.github.com/users/alexey-milovidov/following{/other_user}","gists_url":"https://api.github.com/users/alexey-milovidov/gists{/gist_id}","starred_url":"https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexey-milovidov/subscriptions","organizations_url":"https://api.github.com/users/alexey-milovidov/orgs","repos_url":"https://api.github.com/users/alexey-milovidov/repos","events_url":"https://api.github.com/users/alexey-milovidov/events{/privacy}","received_events_url":"https://api.github.com/users/alexey-milovidov/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":644208617,"node_id":"MDU6TGFiZWw2NDQyMDg2MTc=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/easy%20task","name":"easy task","color":"0e8a16","default":false,"description":"Good for first contributors"},{"id":1507871495,"node_id":"MDU6TGFiZWwxNTA3ODcxNDk1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/st-community-taken","name":"st-community-taken","color":"e5b890","default":false,"description":"External developer is working on that"}],"state":"open","locked":false,"assignee":{"login":"alesapin","id":3684697,"node_id":"MDQ6VXNlcjM2ODQ2OTc=","avatar_url":"https://avatars.githubusercontent.com/u/3684697?v=4","gravatar_id":"","url":"https://api.github.com/users/alesapin","html_url":"https://github.com/alesapin","followers_url":"https://api.github.com/users/alesapin/followers","following_url":"https://api.github.com/users/alesapin/following{/other_user}","gists_url":"https://api.github.com/users/alesapin/gists{/gist_id}","starred_url":"https://api.github.com/users/alesapin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alesapin/subscriptions","organizations_url":"https://api.github.com/users/alesapin/orgs","repos_url":"https://api.github.com/users/alesapin/repos","events_url":"https://api.github.com/users/alesapin/events{/privacy}","received_events_url":"https://api.github.com/users/alesapin/received_events","type":"User","site_admin":false},"assignees":[{"login":"alesapin","id":3684697,"node_id":"MDQ6VXNlcjM2ODQ2OTc=","avatar_url":"https://avatars.githubusercontent.com/u/3684697?v=4","gravatar_id":"","url":"https://api.github.com/users/alesapin","html_url":"https://github.com/alesapin","followers_url":"https://api.github.com/users/alesapin/followers","following_url":"https://api.github.com/users/alesapin/following{/other_user}","gists_url":"https://api.github.com/users/alesapin/gists{/gist_id}","starred_url":"https://api.github.com/users/alesapin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alesapin/subscriptions","organizations_url":"https://api.github.com/users/alesapin/orgs","repos_url":"https://api.github.com/users/alesapin/repos","events_url":"https://api.github.com/users/alesapin/events{/privacy}","received_events_url":"https://api.github.com/users/alesapin/received_events","type":"User","site_admin":false}],"milestone":null,"comments":19,"created_at":"2020-02-28T13:41:59Z","updated_at":"2022-01-28T11:10:48Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"**Use case**\r\nAdd two functions to work with punycode.\r\n\r\n**Describe the solution you'd like**\r\nA tight loop with no extra allocations or copying, as usual.\r\n`libidn2` may suffice but it's unclear.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9437/reactions","total_count":2,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9437/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9436","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9436/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9436/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9436/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/9436","id":572744443,"node_id":"MDU6SXNzdWU1NzI3NDQ0NDM=","number":9436,"title":"\"ephemeral\" or \"dematerialized\" columns","user":{"login":"alexey-milovidov","id":18581488,"node_id":"MDQ6VXNlcjE4NTgxNDg4","avatar_url":"https://avatars.githubusercontent.com/u/18581488?v=4","gravatar_id":"","url":"https://api.github.com/users/alexey-milovidov","html_url":"https://github.com/alexey-milovidov","followers_url":"https://api.github.com/users/alexey-milovidov/followers","following_url":"https://api.github.com/users/alexey-milovidov/following{/other_user}","gists_url":"https://api.github.com/users/alexey-milovidov/gists{/gist_id}","starred_url":"https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexey-milovidov/subscriptions","organizations_url":"https://api.github.com/users/alexey-milovidov/orgs","repos_url":"https://api.github.com/users/alexey-milovidov/repos","events_url":"https://api.github.com/users/alexey-milovidov/events{/privacy}","received_events_url":"https://api.github.com/users/alexey-milovidov/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":644208617,"node_id":"MDU6TGFiZWw2NDQyMDg2MTc=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/easy%20task","name":"easy task","color":"0e8a16","default":false,"description":"Good for first contributors"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2020-02-28T13:06:59Z","updated_at":"2021-10-27T04:06:29Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"Special type of column. This column can be INSERTed and can be referred in default expressions of another columns, but it is not stored in a table and cannot be SELECTed.\r\n\r\n**Use case**\r\nCalculate other columns on top of input data but don't store the source column. Example: extract something from JSON.\r\n\r\n**Alternatives**\r\nYou can use table function `input` for the same result. It is just a little less convenient.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9436/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9436/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9377","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9377/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9377/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9377/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/9377","id":571192279,"node_id":"MDU6SXNzdWU1NzExOTIyNzk=","number":9377,"title":"Maybe impelement support for function `range` of Nullable argument.","user":{"login":"filimonov","id":1549571,"node_id":"MDQ6VXNlcjE1NDk1NzE=","avatar_url":"https://avatars.githubusercontent.com/u/1549571?v=4","gravatar_id":"","url":"https://api.github.com/users/filimonov","html_url":"https://github.com/filimonov","followers_url":"https://api.github.com/users/filimonov/followers","following_url":"https://api.github.com/users/filimonov/following{/other_user}","gists_url":"https://api.github.com/users/filimonov/gists{/gist_id}","starred_url":"https://api.github.com/users/filimonov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/filimonov/subscriptions","organizations_url":"https://api.github.com/users/filimonov/orgs","repos_url":"https://api.github.com/users/filimonov/repos","events_url":"https://api.github.com/users/filimonov/events{/privacy}","received_events_url":"https://api.github.com/users/filimonov/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":1634867650,"node_id":"MDU6TGFiZWwxNjM0ODY3NjUw","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-nullable","name":"comp-nullable","color":"b5bcff","default":false,"description":"Nulls related"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2020-02-26T09:32:15Z","updated_at":"2020-02-26T10:09:35Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"body":"```sql\r\nSELECT \r\n    cast('2020-02-26 10:26:00', 'Nullable(DateTime)') AS x, \r\n    toDate('2020-04-10') AS y, \r\n    dateDiff('month', x, y) AS diff, \r\n    range(toUInt32(diff));\r\n```\r\n\r\n```\r\nReceived exception from server (version 20.2.1):\r\nCode: 43. DB::Exception: Received from localhost:9000. DB::Exception: Nested type Array(UInt32) cannot be inside Nullable type. \r\n```\r\nIn looks like Nullable property get inherited by diff first, and later by range. And range tries to create  `Nullable(Array(..` instead of `Array(Nullable(...`\r\n\r\nAdditionally - very confusing error message.\r\n\r\nworkaround is \r\n```\r\nSELECT \r\n    cast('2020-02-26 10:26:00', 'Nullable(DateTime)') AS x, \r\n    toDate('2020-04-10') AS y, \r\n    dateDiff('month', assumeNotNull(x), y) AS diff, \r\n    range(toUInt32(diff));\r\n```","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9377/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9377/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9347","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9347/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9347/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9347/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/9347","id":570167362,"node_id":"MDU6SXNzdWU1NzAxNjczNjI=","number":9347,"title":"Changing configuration parameters in command line doesn't work for clickhouse-benchmark.","user":{"login":"alexey-milovidov","id":18581488,"node_id":"MDQ6VXNlcjE4NTgxNDg4","avatar_url":"https://avatars.githubusercontent.com/u/18581488?v=4","gravatar_id":"","url":"https://api.github.com/users/alexey-milovidov","html_url":"https://github.com/alexey-milovidov","followers_url":"https://api.github.com/users/alexey-milovidov/followers","following_url":"https://api.github.com/users/alexey-milovidov/following{/other_user}","gists_url":"https://api.github.com/users/alexey-milovidov/gists{/gist_id}","starred_url":"https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexey-milovidov/subscriptions","organizations_url":"https://api.github.com/users/alexey-milovidov/orgs","repos_url":"https://api.github.com/users/alexey-milovidov/repos","events_url":"https://api.github.com/users/alexey-milovidov/events{/privacy}","received_events_url":"https://api.github.com/users/alexey-milovidov/received_events","type":"User","site_admin":false},"labels":[{"id":993003747,"node_id":"MDU6TGFiZWw5OTMwMDM3NDc=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-cli","name":"comp-cli","color":"b5bcff","default":false,"description":"Console & command line"},{"id":1365579236,"node_id":"MDU6TGFiZWwxMzY1NTc5MjM2","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/minor","name":"minor","color":"FFF8F8","default":false,"description":"Priority: minor"},{"id":1397894054,"node_id":"MDU6TGFiZWwxMzk3ODk0MDU0","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/unfinished%20code","name":"unfinished code","color":"ff8800","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2020-02-24T21:47:00Z","updated_at":"2020-02-24T23:41:08Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"```\r\n~/ClickHouse/build_gcc9$ clickhouse-client --port 9440 --secure -- --openSSL.client.invalidCertificateHandler.name=AcceptCertificateHandler\r\nClickHouse client version 20.2.1.1.\r\nConnecting to localhost:9440 as user default.\r\nConnected to ClickHouse server version 20.3.1 revision 54433.\r\n\r\nClickHouse client version is older than ClickHouse server. It may lack support for new features.\r\n\r\nexample.yandex.ru :) Bye.\r\n```\r\n\r\nOk.\r\n\r\n```\r\n~/ClickHouse/build_gcc9$ clickhouse-benchmark --port 9440 --secure -- --openSSL.client.invalidCertificateHandler.name=AcceptCertificateHandler <<< \"SELECT 1\"\r\nLoaded 1 queries.\r\nDB::NetException: SSL Exception: error:14000086:SSL routines::certificate verify failed (localhost:9440)\r\n```\r\n\r\nParameter `-- --openSSL.client.invalidCertificateHandler.name=AcceptCertificateHandler` was not applied.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9347/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9347/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9338","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9338/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9338/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9338/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/9338","id":569836445,"node_id":"MDU6SXNzdWU1Njk4MzY0NDU=","number":9338,"title":"Users may write countState(*) in materialized views.","user":{"login":"alexey-milovidov","id":18581488,"node_id":"MDQ6VXNlcjE4NTgxNDg4","avatar_url":"https://avatars.githubusercontent.com/u/18581488?v=4","gravatar_id":"","url":"https://api.github.com/users/alexey-milovidov","html_url":"https://github.com/alexey-milovidov","followers_url":"https://api.github.com/users/alexey-milovidov/followers","following_url":"https://api.github.com/users/alexey-milovidov/following{/other_user}","gists_url":"https://api.github.com/users/alexey-milovidov/gists{/gist_id}","starred_url":"https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexey-milovidov/subscriptions","organizations_url":"https://api.github.com/users/alexey-milovidov/orgs","repos_url":"https://api.github.com/users/alexey-milovidov/repos","events_url":"https://api.github.com/users/alexey-milovidov/events{/privacy}","received_events_url":"https://api.github.com/users/alexey-milovidov/received_events","type":"User","site_admin":false},"labels":[{"id":845247686,"node_id":"MDU6TGFiZWw4NDUyNDc2ODY=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/usability","name":"usability","color":"ebf28c","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2020-02-24T12:52:24Z","updated_at":"2020-04-25T13:45:34Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"And it doesn't interpreted as expected.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9338/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9338/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9336","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9336/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9336/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9336/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/9336","id":569746766,"node_id":"MDU6SXNzdWU1Njk3NDY3NjY=","number":9336,"title":"Enhanced MySQL compatibility","user":{"login":"meob","id":5684349,"node_id":"MDQ6VXNlcjU2ODQzNDk=","avatar_url":"https://avatars.githubusercontent.com/u/5684349?v=4","gravatar_id":"","url":"https://api.github.com/users/meob","html_url":"https://github.com/meob","followers_url":"https://api.github.com/users/meob/followers","following_url":"https://api.github.com/users/meob/following{/other_user}","gists_url":"https://api.github.com/users/meob/gists{/gist_id}","starred_url":"https://api.github.com/users/meob/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/meob/subscriptions","organizations_url":"https://api.github.com/users/meob/orgs","repos_url":"https://api.github.com/users/meob/repos","events_url":"https://api.github.com/users/meob/events{/privacy}","received_events_url":"https://api.github.com/users/meob/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":1365689344,"node_id":"MDU6TGFiZWwxMzY1Njg5MzQ0","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-foreign-db","name":"comp-foreign-db","color":"b5bcff","default":false,"description":"Integrations with other databases"},{"id":2121263626,"node_id":"MDU6TGFiZWwyMTIxMjYzNjI2","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-mysql","name":"comp-mysql","color":"b5bcff","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":17,"created_at":"2020-02-24T09:58:30Z","updated_at":"2021-12-26T03:24:01Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"**Use case**\r\nThe basic idea is to increase the MySQL compatibility with wire protocol in order to have tools like phpMyAdmin, DBeaver, ... working easily on ClickHouse (reading data)\r\n\r\n**Describe the solution you'd like**\r\nClickHouse MySQL wire protocol works fine with application (eg. PHP, Perl, ...) but has problems with MySQL tools since they use \"custom\" SQL commands that MySQL understand while ClickHouse gives problems.\r\nWe propose to add a flag that enhance MySQL compatibility.\r\nThe solution requires two approach:\r\n1) Support more MySQL command\r\n   There are commands like \"SET NAMES utf8\", \"SET autocommit=1\", ... that have no meaning\r\n    and can simply do nothing in CH but reply OK if the flag is active\r\n2) Create the \"mysql\" data dictionary database\r\n  This can be easly created in ClickHouse using VIEWs from SYSTEM\r\n\r\nThe goal is to reach a \"read only\" compatibility with MySQL.\r\nCreating CH data structures or traslating DML language requires much more work\r\nand is not needed.\r\n\r\n**Describe alternatives you've considered**\r\nI used a simple self-made proxy to skip MySQL custom command... and it works!\r\n\r\n**Additional context**\r\nThis compatibility could enable CH+wire protocol to be used as a MySQL DB with Linked Server in SQLServer, FDW in PostgreSQL, Oracle gateway, ...\r\n\r\nI can provide the list of commands, variables, data dictionary views I have found till now...\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9336/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9336/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9273","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9273/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9273/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9273/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/9273","id":568915577,"node_id":"MDU6SXNzdWU1Njg5MTU1Nzc=","number":9273,"title":"OPTIMIZE FINAL for all staled partitions of *MergeTree","user":{"login":"Felixoid","id":3025537,"node_id":"MDQ6VXNlcjMwMjU1Mzc=","avatar_url":"https://avatars.githubusercontent.com/u/3025537?v=4","gravatar_id":"","url":"https://api.github.com/users/Felixoid","html_url":"https://github.com/Felixoid","followers_url":"https://api.github.com/users/Felixoid/followers","following_url":"https://api.github.com/users/Felixoid/following{/other_user}","gists_url":"https://api.github.com/users/Felixoid/gists{/gist_id}","starred_url":"https://api.github.com/users/Felixoid/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Felixoid/subscriptions","organizations_url":"https://api.github.com/users/Felixoid/orgs","repos_url":"https://api.github.com/users/Felixoid/repos","events_url":"https://api.github.com/users/Felixoid/events{/privacy}","received_events_url":"https://api.github.com/users/Felixoid/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2020-02-21T12:03:09Z","updated_at":"2020-02-21T12:03:39Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"**Use case**\r\nTo have finalized *MergeTree partitions after inserting there is over.\r\n\r\n**Describe the solution you'd like**\r\nHave a setting in MergeTreeSettings to define the `staled_partitions` in seconds and tweak SimpleMergeSelector to trigger merge on them.\r\n\r\n**Additional context**\r\nThe quote from https://t.me/c/1425947904/4667\r\n\r\n```\r\nFelixoid 🚜🇩🇪, [21.02.20 12:03]\r\nДоброго утра. У меня тут созрела идея для фич-реквеста. Кажется, эта штука должны бы быть очень полезной.\r\n\r\nДобавить настройку, которая запускала бы для партиций, старше значения в ней, merge. То есть, представим, что опция имеет значение 259200 (3 суток). Для всех таблиц, для всех партиций, в которые на было записи последние 3 дня, будет запущен OPTIMIZE.\r\n\r\nЛёша Миловидов, [21.02.20 12:42]\r\n[In reply to Felixoid 🚜🇩🇪]\r\nТотальный мерж при отсутствии обновления в течение длительного времени. Можно сделать, подправив SimpleMergeSelector, возможно, прокинув туда новую настройку из MergeTreeSettings.\r\n\r\nЛёша Миловидов, [21.02.20 12:43]\r\nSimpleMergeSelector - это как раз кусок кода, который определяет, какие куски выбрать для мержа, в зависимости от их размера и времени модификации.\r\n```","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9273/reactions","total_count":2,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9273/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9256","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9256/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9256/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9256/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/9256","id":568402691,"node_id":"MDU6SXNzdWU1Njg0MDI2OTE=","number":9256,"title":"Path data type  / functions","user":{"login":"emyr666","id":1455306,"node_id":"MDQ6VXNlcjE0NTUzMDY=","avatar_url":"https://avatars.githubusercontent.com/u/1455306?v=4","gravatar_id":"","url":"https://api.github.com/users/emyr666","html_url":"https://github.com/emyr666","followers_url":"https://api.github.com/users/emyr666/followers","following_url":"https://api.github.com/users/emyr666/following{/other_user}","gists_url":"https://api.github.com/users/emyr666/gists{/gist_id}","starred_url":"https://api.github.com/users/emyr666/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/emyr666/subscriptions","organizations_url":"https://api.github.com/users/emyr666/orgs","repos_url":"https://api.github.com/users/emyr666/repos","events_url":"https://api.github.com/users/emyr666/events{/privacy}","received_events_url":"https://api.github.com/users/emyr666/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2020-02-20T16:01:02Z","updated_at":"2020-02-27T22:16:34Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"We have an mpi program that scans a huge parallel filesystem and lstats every single inode - 1.6 billion of them. See https://github.com/hpc/libcircle.\r\n\r\nWe have put this data into a clickhouse db and it's very fast to sum the total size by user, by group for atime < x (i.e. files not accessed in over a year) and so on.\r\n\r\nWe want to do a treemap type interactive view such as that provided in kdirstat. We'd like to be able to filter based on file suffix (e.g. .jpg, .bam) or double suffix (e.g. .txt.gz, .tar.gz).\r\nAlso generating stats only for files below a certain part of the filesystem tree e.g. where path like('/my/path/to/some/files/%').\r\nIf we could easily separate the directory part from the filename part we can then do a sum grouped by directory to sum all the files in a particular directory. Ordering that result by path depth and then doing a rollup on the query externally to clickhouse would be enough to do the treemaps.\r\n\r\nPath manipulation functions which either act on string data types or a specific 'Path' data type would be very useful for this application. Essentially it's just a matter of exposing the boost/filesystem/path.hpp api.\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9256/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9256/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9233","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9233/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9233/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9233/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/9233","id":567785684,"node_id":"MDU6SXNzdWU1Njc3ODU2ODQ=","number":9233,"title":"ARRAY JOIN allows non-existing columns (UB)","user":{"login":"den-crane","id":19737682,"node_id":"MDQ6VXNlcjE5NzM3Njgy","avatar_url":"https://avatars.githubusercontent.com/u/19737682?v=4","gravatar_id":"","url":"https://api.github.com/users/den-crane","html_url":"https://github.com/den-crane","followers_url":"https://api.github.com/users/den-crane/followers","following_url":"https://api.github.com/users/den-crane/following{/other_user}","gists_url":"https://api.github.com/users/den-crane/gists{/gist_id}","starred_url":"https://api.github.com/users/den-crane/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/den-crane/subscriptions","organizations_url":"https://api.github.com/users/den-crane/orgs","repos_url":"https://api.github.com/users/den-crane/repos","events_url":"https://api.github.com/users/den-crane/events{/privacy}","received_events_url":"https://api.github.com/users/den-crane/received_events","type":"User","site_admin":false},"labels":[{"id":845247686,"node_id":"MDU6TGFiZWw4NDUyNDc2ODY=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/usability","name":"usability","color":"ebf28c","default":false,"description":""},{"id":1575085465,"node_id":"MDU6TGFiZWwxNTc1MDg1NDY1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/unexpected%20behaviour","name":"unexpected behaviour","color":"e088ca","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2020-02-19T19:17:19Z","updated_at":"2020-07-21T14:35:05Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"body":"Y -- does not exists, but ARRAY JOIN does not check it.\r\n\r\n```\r\nSELECT *\r\nFROM\r\n(\r\n    SELECT\r\n        [1, 2, 3] AS x,\r\n        [4, 5, 6] AS y\r\n)\r\nARRAY JOIN\r\n    x,\r\n    Y\r\n\r\n┌─x─┬─y───────┐\r\n│ 1 │ [4,5,6] │\r\n│ 2 │ [4,5,6] │\r\n│ 3 │ [4,5,6] │\r\n└───┴─────────┘\r\n```","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9233/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9233/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9215","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9215/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9215/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9215/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/9215","id":567513491,"node_id":"MDU6SXNzdWU1Njc1MTM0OTE=","number":9215,"title":"errorlog doesn't contain sql query for fatal errors but does for usual errors","user":{"login":"morozovsk","id":1822063,"node_id":"MDQ6VXNlcjE4MjIwNjM=","avatar_url":"https://avatars.githubusercontent.com/u/1822063?v=4","gravatar_id":"","url":"https://api.github.com/users/morozovsk","html_url":"https://github.com/morozovsk","followers_url":"https://api.github.com/users/morozovsk/followers","following_url":"https://api.github.com/users/morozovsk/following{/other_user}","gists_url":"https://api.github.com/users/morozovsk/gists{/gist_id}","starred_url":"https://api.github.com/users/morozovsk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/morozovsk/subscriptions","organizations_url":"https://api.github.com/users/morozovsk/orgs","repos_url":"https://api.github.com/users/morozovsk/repos","events_url":"https://api.github.com/users/morozovsk/events{/privacy}","received_events_url":"https://api.github.com/users/morozovsk/received_events","type":"User","site_admin":false},"labels":[{"id":386401507,"node_id":"MDU6TGFiZWwzODY0MDE1MDc=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/enhancement","name":"enhancement","color":"84b6eb","default":true,"description":null},{"id":845247686,"node_id":"MDU6TGFiZWw4NDUyNDc2ODY=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/usability","name":"usability","color":"ebf28c","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2020-02-19T11:46:28Z","updated_at":"2020-06-15T19:32:27Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"I have logger level **warning** and for errors with level **Error** I have additional info \r\nlike this:\r\n\r\n> Syntax error: failed at position 1978: $where GROUP BY carrier, t HAVING n > 0 AND uniq(device_id) > 10 ORDER BY t, n desc LIMIT 9 by t\r\n\r\nBut for errors with level **Fatal** I have only:\r\n>query_id: a97101ea-61be-488e-9811-c26197624b9a \r\n\r\nSo I need change logger level from **warning** to **trace** for logging every query (write gigabytes to disk) and wait for one error and after change logger level back.\r\n\r\nI think it is unexpected behaviour.\r\nPlease add sql query for fatal errors.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9215/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9215/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9214","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9214/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9214/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9214/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/9214","id":567506082,"node_id":"MDU6SXNzdWU1Njc1MDYwODI=","number":9214,"title":"ClickHouse over object storage","user":{"login":"alexey-milovidov","id":18581488,"node_id":"MDQ6VXNlcjE4NTgxNDg4","avatar_url":"https://avatars.githubusercontent.com/u/18581488?v=4","gravatar_id":"","url":"https://api.github.com/users/alexey-milovidov","html_url":"https://github.com/alexey-milovidov","followers_url":"https://api.github.com/users/alexey-milovidov/followers","following_url":"https://api.github.com/users/alexey-milovidov/following{/other_user}","gists_url":"https://api.github.com/users/alexey-milovidov/gists{/gist_id}","starred_url":"https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexey-milovidov/subscriptions","organizations_url":"https://api.github.com/users/alexey-milovidov/orgs","repos_url":"https://api.github.com/users/alexey-milovidov/repos","events_url":"https://api.github.com/users/alexey-milovidov/events{/privacy}","received_events_url":"https://api.github.com/users/alexey-milovidov/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2020-02-19T11:32:51Z","updated_at":"2021-01-17T16:10:14Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"https://docs.google.com/document/d/1Vqf_M2yKWgu749BmfBXTapbcisJQjgW5ohlBaR4UJ7M","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9214/reactions","total_count":6,"+1":6,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9214/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9202","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9202/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9202/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9202/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/9202","id":567207056,"node_id":"MDU6SXNzdWU1NjcyMDcwNTY=","number":9202,"title":"with max_parallel_replicas CH does not merge query results from shards.","user":{"login":"den-crane","id":19737682,"node_id":"MDQ6VXNlcjE5NzM3Njgy","avatar_url":"https://avatars.githubusercontent.com/u/19737682?v=4","gravatar_id":"","url":"https://api.github.com/users/den-crane","html_url":"https://github.com/den-crane","followers_url":"https://api.github.com/users/den-crane/followers","following_url":"https://api.github.com/users/den-crane/following{/other_user}","gists_url":"https://api.github.com/users/den-crane/gists{/gist_id}","starred_url":"https://api.github.com/users/den-crane/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/den-crane/subscriptions","organizations_url":"https://api.github.com/users/den-crane/orgs","repos_url":"https://api.github.com/users/den-crane/repos","events_url":"https://api.github.com/users/den-crane/events{/privacy}","received_events_url":"https://api.github.com/users/den-crane/received_events","type":"User","site_admin":false},"labels":[{"id":386401505,"node_id":"MDU6TGFiZWwzODY0MDE1MDU=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/bug","name":"bug","color":"ee0701","default":true,"description":"Confirmed user-visible misbehaviour in official release"},{"id":1365579236,"node_id":"MDU6TGFiZWwxMzY1NTc5MjM2","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/minor","name":"minor","color":"FFF8F8","default":false,"description":"Priority: minor"},{"id":1634829961,"node_id":"MDU6TGFiZWwxNjM0ODI5OTYx","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-distributed","name":"comp-distributed","color":"b5bcff","default":false,"description":"Distributed tables"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2020-02-18T22:50:07Z","updated_at":"2021-02-15T02:07:17Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"body":"18.14.19, 19.4.5.35, 19.13.6.51, 20.2\r\n```\r\n        <replicated>\r\n            <shard>\r\n                <internal_replication>false</internal_replication>\r\n                <replica><host>host1</host><port>9000</port></replica>\r\n                <replica><host>host2</host><port>9000</port></replica>\r\n            </shard>\r\n        </replicated>\r\n\r\nCREATE TABLE t_rep (k UInt32, s String) \r\nENGINE = MergeTree ORDER BY (s, cityHash64(k)) \r\nSAMPLE BY cityHash64(k);\r\n\r\nCREATE TABLE t_all as t_rep \r\nENGINE = Distributed(replicated, currentDatabase(), t_rep, rand());\r\n\r\ninsert into t_all select number, toString(number) from numbers(1000);\r\n\r\nhost1: select count() from t_rep\r\n┌─count()─┐\r\n│    1000 │\r\n└─────────┘\r\n\r\nhost2: select count() from t_rep\r\n┌─count()─┐\r\n│    1000 │\r\n└─────────┘\r\n\r\n\r\nset max_parallel_replicas=2, prefer_localhost_replica=0;\r\n\r\nSELECT count() FROM t_all;\r\n\r\n┌─count()─┐\r\n│     492 │\r\n└─────────┘\r\n┌─count()─┐\r\n│     508 │\r\n└─────────┘\r\n\r\nSELECT k%2 x, sum(k) FROM t_all group by x;\r\n┌─x─┬─sum(k)─┐\r\n│ 0 │ 127158 │\r\n│ 1 │ 118419 │\r\n└───┴────────┘\r\n┌─x─┬─sum(k)─┐\r\n│ 0 │ 122342 │\r\n│ 1 │ 131581 │\r\n└───┴────────┘\r\n\r\n```","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9202/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9202/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9194","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9194/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9194/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9194/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/9194","id":566862142,"node_id":"MDU6SXNzdWU1NjY4NjIxNDI=","number":9194,"title":"CROSS JOIN to INNER JOIN rewrite depends on tables order in query.","user":{"login":"qoega","id":2159081,"node_id":"MDQ6VXNlcjIxNTkwODE=","avatar_url":"https://avatars.githubusercontent.com/u/2159081?v=4","gravatar_id":"","url":"https://api.github.com/users/qoega","html_url":"https://github.com/qoega","followers_url":"https://api.github.com/users/qoega/followers","following_url":"https://api.github.com/users/qoega/following{/other_user}","gists_url":"https://api.github.com/users/qoega/gists{/gist_id}","starred_url":"https://api.github.com/users/qoega/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/qoega/subscriptions","organizations_url":"https://api.github.com/users/qoega/orgs","repos_url":"https://api.github.com/users/qoega/repos","events_url":"https://api.github.com/users/qoega/events{/privacy}","received_events_url":"https://api.github.com/users/qoega/received_events","type":"User","site_admin":false},"labels":[{"id":1357578153,"node_id":"MDU6TGFiZWwxMzU3NTc4MTUz","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-joins","name":"comp-joins","color":"b5bcff","default":false,"description":"JOINs"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2020-02-18T12:32:39Z","updated_at":"2020-10-16T18:10:24Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"**How to reproduce**\r\n```(sql)\r\nset enable_debug_queries = 1;\r\n\r\ncreate table o (orderkey UInt32, custkey UInt32) engine = Memory;\r\ncreate table l (orderkey UInt32) engine = Memory;\r\ncreate table c (custkey UInt32) engine = Memory;\r\n\r\nANALYZE select * from l, o, c\r\nwhere c.custkey = o.custkey and l.orderkey = o.orderkey;\r\n\r\nANALYZE select * from l, c, o\r\nwhere c.custkey = o.custkey and l.orderkey = o.orderkey;\r\n```\r\n\r\nSecond query is interpreted as CROSS JOIN\r\n\r\n```(sql)\r\nSELECT \r\n    `--l.orderkey` AS `l.orderkey`, \r\n    `--o.orderkey` AS `o.orderkey`, \r\n    `--o.custkey` AS `o.custkey`, \r\n    custkey AS `c.custkey`\r\nFROM \r\n(\r\n    SELECT \r\n        orderkey AS `--l.orderkey`, \r\n        o.orderkey AS `--o.orderkey`, \r\n        custkey AS `--o.custkey`\r\n    FROM l\r\n    ALL INNER JOIN \r\n    (\r\n        SELECT *\r\n        FROM o\r\n    ) AS o ON `--l.orderkey` = `--o.orderkey`\r\n    WHERE `--l.orderkey` = `--o.orderkey`\r\n)\r\nALL INNER JOIN \r\n(\r\n    SELECT *\r\n    FROM c\r\n) AS c ON custkey = `--o.custkey`\r\nWHERE (custkey = `--o.custkey`) AND (`--l.orderkey` = `--o.orderkey`)\r\n```\r\n```\r\nSELECT \r\n    `--l.orderkey` AS `l.orderkey`, \r\n    `--c.custkey` AS `c.custkey`, \r\n    orderkey AS `o.orderkey`, \r\n    custkey AS `o.custkey`\r\nFROM \r\n(\r\n    SELECT \r\n        orderkey AS `--l.orderkey`, \r\n        custkey AS `--c.custkey`\r\n    FROM l\r\n    CROSS JOIN c\r\n)\r\nALL INNER JOIN \r\n(\r\n    SELECT *\r\n    FROM o\r\n) AS o ON (`--c.custkey` = custkey) AND (`--l.orderkey` = orderkey)\r\nWHERE (`--c.custkey` = custkey) AND (`--l.orderkey` = orderkey)\r\n```\r\n\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9194/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9194/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9189","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9189/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9189/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9189/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/9189","id":566707844,"node_id":"MDU6SXNzdWU1NjY3MDc4NDQ=","number":9189,"title":"Partitions are not removed if the time went backwards after startup","user":{"login":"blind-oracle","id":592248,"node_id":"MDQ6VXNlcjU5MjI0OA==","avatar_url":"https://avatars.githubusercontent.com/u/592248?v=4","gravatar_id":"","url":"https://api.github.com/users/blind-oracle","html_url":"https://github.com/blind-oracle","followers_url":"https://api.github.com/users/blind-oracle/followers","following_url":"https://api.github.com/users/blind-oracle/following{/other_user}","gists_url":"https://api.github.com/users/blind-oracle/gists{/gist_id}","starred_url":"https://api.github.com/users/blind-oracle/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/blind-oracle/subscriptions","organizations_url":"https://api.github.com/users/blind-oracle/orgs","repos_url":"https://api.github.com/users/blind-oracle/repos","events_url":"https://api.github.com/users/blind-oracle/events{/privacy}","received_events_url":"https://api.github.com/users/blind-oracle/received_events","type":"User","site_admin":false},"labels":[{"id":1365579236,"node_id":"MDU6TGFiZWwxMzY1NTc5MjM2","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/minor","name":"minor","color":"FFF8F8","default":false,"description":"Priority: minor"},{"id":1575085465,"node_id":"MDU6TGFiZWwxNTc1MDg1NDY1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/unexpected%20behaviour","name":"unexpected behaviour","color":"e088ca","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2020-02-18T07:47:38Z","updated_at":"2020-12-17T04:09:37Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"**Describe the bug or unexpected behaviour**\r\n\r\nOn one of the cluster nodes system time (due to hypervisor problems) at boot was set ~1 month in future (20.02.2020). Then, after some minutes, it got synced by *ntpd* and then went fine.\r\n\r\nClickhouse was started when the time was wrong and it probably caused Clickhouse to stop removing partitions after it merged them. This led to fast disk space exhaustion.\r\n\r\nAfter CH was restarted it pruned 99% of inactive partitions, but the ones from the future still remain:\r\n\r\n```\r\n# ls -l | grep Mar\r\ndrwxr-x--- 2 clickhouse clickhouse 4096 Mar 20  2020 202002_431472_431521_9\r\ndrwxr-x--- 2 clickhouse clickhouse 4096 Mar 20  2020 202002_431472_431547_10\r\ndrwxr-x--- 2 clickhouse clickhouse 4096 Mar 20  2020 202002_431472_431552_11\r\ndrwxr-x--- 2 clickhouse clickhouse 4096 Mar 20  2020 202002_431472_431557_12\r\ndrwxr-x--- 2 clickhouse clickhouse 4096 Mar 20  2020 202002_431472_431562_13\r\ndrwxr-x--- 2 clickhouse clickhouse 4096 Mar 20  2020 202002_431472_431576_14\r\n...\r\n\r\n# ls -l | grep Mar | wc -l\r\n102\r\n```\r\nThey're marked in system.parts as inactive.\r\n\r\nBefore restart there were a lot (tens of thousands) of other inactive parts which had correct ctime on the filesystem (created after the time sync probably), but they were not automatically removed too.\r\n\r\n**How to reproduce**\r\n* Clickhouse 19.16.12.49\r\n* Boot system and start CH with time in future\r\n* Sync time\r\n* Ingest data\r\n* Observe inactive parts not removed\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9189/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9189/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9165","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9165/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9165/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9165/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/9165","id":566480557,"node_id":"MDU6SXNzdWU1NjY0ODA1NTc=","number":9165,"title":"Mutations doesn't respect constraints.","user":{"login":"CurtizJ","id":20361854,"node_id":"MDQ6VXNlcjIwMzYxODU0","avatar_url":"https://avatars.githubusercontent.com/u/20361854?v=4","gravatar_id":"","url":"https://api.github.com/users/CurtizJ","html_url":"https://github.com/CurtizJ","followers_url":"https://api.github.com/users/CurtizJ/followers","following_url":"https://api.github.com/users/CurtizJ/following{/other_user}","gists_url":"https://api.github.com/users/CurtizJ/gists{/gist_id}","starred_url":"https://api.github.com/users/CurtizJ/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/CurtizJ/subscriptions","organizations_url":"https://api.github.com/users/CurtizJ/orgs","repos_url":"https://api.github.com/users/CurtizJ/repos","events_url":"https://api.github.com/users/CurtizJ/events{/privacy}","received_events_url":"https://api.github.com/users/CurtizJ/received_events","type":"User","site_admin":false},"labels":[{"id":386401507,"node_id":"MDU6TGFiZWwzODY0MDE1MDc=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/enhancement","name":"enhancement","color":"84b6eb","default":true,"description":null},{"id":1351290474,"node_id":"MDU6TGFiZWwxMzUxMjkwNDc0","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-mutations","name":"comp-mutations","color":"b5bcff","default":false,"description":"ALTER UPDATE/DELETE"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2020-02-17T19:25:36Z","updated_at":"2020-02-24T12:23:00Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"**How to reproduce**\r\n\r\n```\r\nap11-nix :) create table ttt (a Int, constraint c check a >= 0) engine = MergeTree order by tuple()\r\n\r\nap11-nix :) insert into ttt select number from numbers(10)\r\n\r\nap11-nix :) alter table ttt update a = -a where 1\r\n\r\nap11-nix :) select * from ttt\r\n\r\n┌──a─┐\r\n│  0 │\r\n│ -1 │\r\n│ -2 │\r\n│ -3 │\r\n│ -4 │\r\n│ -5 │\r\n│ -6 │\r\n│ -7 │\r\n│ -8 │\r\n│ -9 │\r\n└────┘\r\n```\r\n\r\nIt also will be significant in context of this [task](https://github.com/ClickHouse/ClickHouse/blob/master/docs/ru/extended_roadmap.md#2114-оптимизация-запросов-с-помощью-constraints) \r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9165/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9165/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9157","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9157/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9157/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9157/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/9157","id":566151183,"node_id":"MDU6SXNzdWU1NjYxNTExODM=","number":9157,"title":"input_format_allow_errors_num should tell parse errors","user":{"login":"ramazanpolat","id":3527695,"node_id":"MDQ6VXNlcjM1Mjc2OTU=","avatar_url":"https://avatars.githubusercontent.com/u/3527695?v=4","gravatar_id":"","url":"https://api.github.com/users/ramazanpolat","html_url":"https://github.com/ramazanpolat","followers_url":"https://api.github.com/users/ramazanpolat/followers","following_url":"https://api.github.com/users/ramazanpolat/following{/other_user}","gists_url":"https://api.github.com/users/ramazanpolat/gists{/gist_id}","starred_url":"https://api.github.com/users/ramazanpolat/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ramazanpolat/subscriptions","organizations_url":"https://api.github.com/users/ramazanpolat/orgs","repos_url":"https://api.github.com/users/ramazanpolat/repos","events_url":"https://api.github.com/users/ramazanpolat/events{/privacy}","received_events_url":"https://api.github.com/users/ramazanpolat/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":1401255404,"node_id":"MDU6TGFiZWwxNDAxMjU1NDA0","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-formats","name":"comp-formats","color":"b5bcff","default":false,"description":"Input / output formats"},{"id":1507888214,"node_id":"MDU6TGFiZWwxNTA3ODg4MjE0","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/st-accepted","name":"st-accepted","color":"e5b890","default":false,"description":"The issue is in our backlog, ready to take"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2020-02-17T09:01:16Z","updated_at":"2021-01-14T04:14:52Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Using `input_format_allow_errors_num` parameter is great for inserting bazillion of rows, even if there are parse errors. The problem is, user won't have any clue about how many rows are rejected and their row numbers.\r\n\r\n**Expected behavior**\r\nWhen `input_format_allow_errors_num` parameter is used, parse errors must be directed to either sdtout or stderr. Therefore users will be able to see how many rows are rejected and rectify relevant rows to insert them in proper ways.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9157/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9157/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9140","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9140/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9140/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9140/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/9140","id":565747206,"node_id":"MDU6SXNzdWU1NjU3NDcyMDY=","number":9140,"title":"min_bytes_to_use_direct_io_for_fetches","user":{"login":"alexey-milovidov","id":18581488,"node_id":"MDQ6VXNlcjE4NTgxNDg4","avatar_url":"https://avatars.githubusercontent.com/u/18581488?v=4","gravatar_id":"","url":"https://api.github.com/users/alexey-milovidov","html_url":"https://github.com/alexey-milovidov","followers_url":"https://api.github.com/users/alexey-milovidov/followers","following_url":"https://api.github.com/users/alexey-milovidov/following{/other_user}","gists_url":"https://api.github.com/users/alexey-milovidov/gists{/gist_id}","starred_url":"https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexey-milovidov/subscriptions","organizations_url":"https://api.github.com/users/alexey-milovidov/orgs","repos_url":"https://api.github.com/users/alexey-milovidov/repos","events_url":"https://api.github.com/users/alexey-milovidov/events{/privacy}","received_events_url":"https://api.github.com/users/alexey-milovidov/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":644208617,"node_id":"MDU6TGFiZWw2NDQyMDg2MTc=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/easy%20task","name":"easy task","color":"0e8a16","default":false,"description":"Good for first contributors"},{"id":1365579236,"node_id":"MDU6TGFiZWwxMzY1NTc5MjM2","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/minor","name":"minor","color":"FFF8F8","default":false,"description":"Priority: minor"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2020-02-15T13:20:24Z","updated_at":"2021-07-03T20:37:40Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"**Use case**\r\nAvoid cache thrashing while fetching big data parts from replicas.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9140/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9140/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9136","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9136/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9136/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9136/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/9136","id":565602182,"node_id":"MDU6SXNzdWU1NjU2MDIxODI=","number":9136,"title":"Dependency inversion in DatabaseFactory","user":{"login":"alexey-milovidov","id":18581488,"node_id":"MDQ6VXNlcjE4NTgxNDg4","avatar_url":"https://avatars.githubusercontent.com/u/18581488?v=4","gravatar_id":"","url":"https://api.github.com/users/alexey-milovidov","html_url":"https://github.com/alexey-milovidov","followers_url":"https://api.github.com/users/alexey-milovidov/followers","following_url":"https://api.github.com/users/alexey-milovidov/following{/other_user}","gists_url":"https://api.github.com/users/alexey-milovidov/gists{/gist_id}","starred_url":"https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexey-milovidov/subscriptions","organizations_url":"https://api.github.com/users/alexey-milovidov/orgs","repos_url":"https://api.github.com/users/alexey-milovidov/repos","events_url":"https://api.github.com/users/alexey-milovidov/events{/privacy}","received_events_url":"https://api.github.com/users/alexey-milovidov/received_events","type":"User","site_admin":false},"labels":[{"id":386401507,"node_id":"MDU6TGFiZWwzODY0MDE1MDc=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/enhancement","name":"enhancement","color":"84b6eb","default":true,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2020-02-14T23:17:55Z","updated_at":"2020-02-14T23:19:29Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9136/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9136/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9114","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9114/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9114/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9114/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/9114","id":565161151,"node_id":"MDU6SXNzdWU1NjUxNjExNTE=","number":9114,"title":"timeSlots function: support expressions which can be evaluated to constant for 'duration'/'size' parameter","user":{"login":"Lagrang","id":4208361,"node_id":"MDQ6VXNlcjQyMDgzNjE=","avatar_url":"https://avatars.githubusercontent.com/u/4208361?v=4","gravatar_id":"","url":"https://api.github.com/users/Lagrang","html_url":"https://github.com/Lagrang","followers_url":"https://api.github.com/users/Lagrang/followers","following_url":"https://api.github.com/users/Lagrang/following{/other_user}","gists_url":"https://api.github.com/users/Lagrang/gists{/gist_id}","starred_url":"https://api.github.com/users/Lagrang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Lagrang/subscriptions","organizations_url":"https://api.github.com/users/Lagrang/orgs","repos_url":"https://api.github.com/users/Lagrang/repos","events_url":"https://api.github.com/users/Lagrang/events{/privacy}","received_events_url":"https://api.github.com/users/Lagrang/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2020-02-14T07:48:55Z","updated_at":"2020-02-14T07:48:55Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Currently, `timeSlots` function doesn't support non-constant values for `Duration`/`Size` parameters.  But it will be convenient to write queries where `Duration`/`Size` parameters represented as expressions which can be evaluated to constant(during SQL parsing or some other query evaluation phase).  \r\nExample(all parameters of form ${...} is placeholders for query parameters which is constants):\r\n```\r\ntimeSlots(parseDateTimeBestEffort(${startTime}),\r\n                           toUInt32(dateDiff('second', parseDateTimeBestEffort(${startTime}), parseDateTimeBestEffort(${endTime}))),\r\n                           multiIf(\r\n                                       positionCaseInsensitive(${grouping}, 'day') != 0,\r\n                                       toUInt32(24 * 60 * 60),\r\n                                       positionCaseInsensitive(${grouping}, 'week') != 0,\r\n                                       toUInt32(7 * 24 * 60 * 60),\r\n                                       ...)\r\n                     ))\r\n``` \r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9114/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9114/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9101","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9101/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9101/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9101/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/9101","id":564711976,"node_id":"MDU6SXNzdWU1NjQ3MTE5NzY=","number":9101,"title":"Distributed tables: user accessing the local shard is always the querying user, regardless of the user specified in the cluster definition.","user":{"login":"banburybill","id":6030899,"node_id":"MDQ6VXNlcjYwMzA4OTk=","avatar_url":"https://avatars.githubusercontent.com/u/6030899?v=4","gravatar_id":"","url":"https://api.github.com/users/banburybill","html_url":"https://github.com/banburybill","followers_url":"https://api.github.com/users/banburybill/followers","following_url":"https://api.github.com/users/banburybill/following{/other_user}","gists_url":"https://api.github.com/users/banburybill/gists{/gist_id}","starred_url":"https://api.github.com/users/banburybill/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/banburybill/subscriptions","organizations_url":"https://api.github.com/users/banburybill/orgs","repos_url":"https://api.github.com/users/banburybill/repos","events_url":"https://api.github.com/users/banburybill/events{/privacy}","received_events_url":"https://api.github.com/users/banburybill/received_events","type":"User","site_admin":false},"labels":[{"id":386401505,"node_id":"MDU6TGFiZWwzODY0MDE1MDU=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/bug","name":"bug","color":"ee0701","default":true,"description":"Confirmed user-visible misbehaviour in official release"},{"id":1634829961,"node_id":"MDU6TGFiZWwxNjM0ODI5OTYx","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-distributed","name":"comp-distributed","color":"b5bcff","default":false,"description":"Distributed tables"}],"state":"open","locked":false,"assignee":{"login":"vitlibar","id":45142681,"node_id":"MDQ6VXNlcjQ1MTQyNjgx","avatar_url":"https://avatars.githubusercontent.com/u/45142681?v=4","gravatar_id":"","url":"https://api.github.com/users/vitlibar","html_url":"https://github.com/vitlibar","followers_url":"https://api.github.com/users/vitlibar/followers","following_url":"https://api.github.com/users/vitlibar/following{/other_user}","gists_url":"https://api.github.com/users/vitlibar/gists{/gist_id}","starred_url":"https://api.github.com/users/vitlibar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vitlibar/subscriptions","organizations_url":"https://api.github.com/users/vitlibar/orgs","repos_url":"https://api.github.com/users/vitlibar/repos","events_url":"https://api.github.com/users/vitlibar/events{/privacy}","received_events_url":"https://api.github.com/users/vitlibar/received_events","type":"User","site_admin":false},"assignees":[{"login":"vitlibar","id":45142681,"node_id":"MDQ6VXNlcjQ1MTQyNjgx","avatar_url":"https://avatars.githubusercontent.com/u/45142681?v=4","gravatar_id":"","url":"https://api.github.com/users/vitlibar","html_url":"https://github.com/vitlibar","followers_url":"https://api.github.com/users/vitlibar/followers","following_url":"https://api.github.com/users/vitlibar/following{/other_user}","gists_url":"https://api.github.com/users/vitlibar/gists{/gist_id}","starred_url":"https://api.github.com/users/vitlibar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vitlibar/subscriptions","organizations_url":"https://api.github.com/users/vitlibar/orgs","repos_url":"https://api.github.com/users/vitlibar/repos","events_url":"https://api.github.com/users/vitlibar/events{/privacy}","received_events_url":"https://api.github.com/users/vitlibar/received_events","type":"User","site_admin":false}],"milestone":null,"comments":4,"created_at":"2020-02-13T14:15:54Z","updated_at":"2020-11-02T12:21:19Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"In a `Distributed` table, the user used to access the local shard (i.e. the shard on which the query is running) is always the querying user, regardless of the user specified in the cluster definition.\r\n\r\nBackground. I have a cluster with a database with tables holding a variety of raw and aggregated data. I wanted to created a user with restricted access to only some of the tables, and no straightforward means of discovery of the existence of the other tables. The solution I came up with was to create a separate database for restricted tables and a separate cluster definition for restricted tables. The restricted cluster definition defines access to the cluster using a user with rights to the main database. The separate database contains `Distributed` tables only, using the restricted cluster definition, and referencing shards in the primary database. So, `config.xml` contains:\r\n\r\n```\r\n<remote_servers>\r\n  <main_cluster>\r\n    <shard><replica><host>host1><user>normal</user></shard>\r\n    <shard><replica><host>host2><user>normal</user></shard>\r\n  </main_cluster>\r\n  <restricted_cluster>\r\n    <shard><replica><host>host1><user>normal</user></shard>\r\n    <shard><replica><host>host2><user>normal</user></shard>\r\n  </restricted_cluster>\r\n</remote_servers>\r\n```\r\n \r\nand `users.xml`:\r\n\r\n```\r\n<users>\r\n  <normal>...</normal>\r\n  <restricted>..<allow_databases><database>restricted</database></allow_databases></restricted>\r\n</users>\r\n```\r\n\r\nTables:\r\n\r\n```\r\nCREATE DATABASE main;\r\nCREATE TABLE main.PrivateTableShard(...) ENGINE=MergeTree(...);\r\nCREATE TABLE main.PublicTableShard(...) ENGINE=MergeTree(...);\r\nCREATE TABLE mainPrivateTable(...) ENGINE=Distributed(main_cluster, main, PrivateTableShard,...);\r\nCREATE TABLE main.PublicTable(...) ENGINE=Distributed(main_cluster, main, PublicTableShard,...);\r\n\r\nCREATE DATABASE restricted;\r\nCREATE TABLE restricted.PublicTable(...) ENGINE=Distributed(restricted_cluster, main, PublicTableShard,...);\r\n```\r\n\r\nOn my local test system, this worked. The restricted user could only see `PublicTable`, and could query it. Move it onto our staging setup, and it fails. Queries by the restricted user fail:\r\n\r\n```\r\nDB::Exception: Access denied to database main for user restricted.\r\n```\r\n\r\nIt turns out that the reason this worked on the test system is that on that system (Ubuntu Xenial) the hostname given in the restricted cluster definition appears in `/etc/hosts` as 127.0.1.1. The `Distributed` code path checks whether a shard being accessed is the local machine and if so, rather than doing a remote connect with the user listed in the cluster definition, it proceeds immediately with the querying user. The check for the local machine checks to see whether the address given matches the first address on any local network interface. On the staging system, the local hostname resolves as the primary address on a network interface, so the query proceeds as a local, uses the querying user, and so fails. On my test system, the local hostname resolves as 127.0.1.1. This does not match 127.0.0.1, the query goes ahead as remote, and so uses the user listed in the cluster definition, not the user submitting the query.\r\n\r\nThe underlying issue here, I think, is the same as in #8863, namely there is inconsistency in user for `Distributed` table access to the underlying tables.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9101/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9101/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9096","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9096/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9096/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9096/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/9096","id":564293366,"node_id":"MDU6SXNzdWU1NjQyOTMzNjY=","number":9096,"title":"Insert error with DEFAULT expression","user":{"login":"TimonKK","id":3365373,"node_id":"MDQ6VXNlcjMzNjUzNzM=","avatar_url":"https://avatars.githubusercontent.com/u/3365373?v=4","gravatar_id":"","url":"https://api.github.com/users/TimonKK","html_url":"https://github.com/TimonKK","followers_url":"https://api.github.com/users/TimonKK/followers","following_url":"https://api.github.com/users/TimonKK/following{/other_user}","gists_url":"https://api.github.com/users/TimonKK/gists{/gist_id}","starred_url":"https://api.github.com/users/TimonKK/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/TimonKK/subscriptions","organizations_url":"https://api.github.com/users/TimonKK/orgs","repos_url":"https://api.github.com/users/TimonKK/repos","events_url":"https://api.github.com/users/TimonKK/events{/privacy}","received_events_url":"https://api.github.com/users/TimonKK/received_events","type":"User","site_admin":false},"labels":[{"id":386401506,"node_id":"MDU6TGFiZWwzODY0MDE1MDY=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/duplicate","name":"duplicate","color":"cccccc","default":true,"description":null},{"id":845247686,"node_id":"MDU6TGFiZWw4NDUyNDc2ODY=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/usability","name":"usability","color":"ebf28c","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2020-02-12T21:44:35Z","updated_at":"2022-01-16T03:49:58Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"I have table like this:\r\n`\r\nCREATE TABLE IF NOT EXISTS session_temp (\r\n\t\tClientID UUID,\r\n\t\tFirstName String,\r\n\t\tAddress String,\r\n\t\tCity String,\r\n\t\tStartDate DateTime DEFAULT now()\r\n\t) ENGINE = MergeTree()\r\n\tPRIMARY KEY ClientID \r\n\tORDER BY ClientID\r\n`\r\n\r\nAnd I insert data like this:\r\n`\r\nINSERT INTO session_temp Values (generateUUIDv4(), 'Ber', 'Russua', 'Rostov')\r\n`\r\n\r\nBut I get error:\r\n`\r\nException on client:\r\nCode: 62. DB::Exception: Cannot parse expression of type String here: 'Rostov')\r\n`\r\n\r\nI expect error text with StartDate column, like you miss column. Or \"Column count doesn't match value count\" as into MySQL.\r\n\r\nClickhouse verssions:\r\n`\r\nClickHouse client version 20.1.3.7 (official build).\r\nConnecting to 127.0.0.1:9000 as user default.\r\nConnected to ClickHouse server version 20.1.3 revision 54431.\r\n`","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9096/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9096/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9077","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9077/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9077/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9077/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/9077","id":563195131,"node_id":"MDU6SXNzdWU1NjMxOTUxMzE=","number":9077,"title":"Implement digits function","user":{"login":"ramazanpolat","id":3527695,"node_id":"MDQ6VXNlcjM1Mjc2OTU=","avatar_url":"https://avatars.githubusercontent.com/u/3527695?v=4","gravatar_id":"","url":"https://api.github.com/users/ramazanpolat","html_url":"https://github.com/ramazanpolat","followers_url":"https://api.github.com/users/ramazanpolat/followers","following_url":"https://api.github.com/users/ramazanpolat/following{/other_user}","gists_url":"https://api.github.com/users/ramazanpolat/gists{/gist_id}","starred_url":"https://api.github.com/users/ramazanpolat/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ramazanpolat/subscriptions","organizations_url":"https://api.github.com/users/ramazanpolat/orgs","repos_url":"https://api.github.com/users/ramazanpolat/repos","events_url":"https://api.github.com/users/ramazanpolat/events{/privacy}","received_events_url":"https://api.github.com/users/ramazanpolat/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2020-02-11T13:07:55Z","updated_at":"2020-02-13T13:56:36Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"We have `substr` function to get a chunk of a string but there is no equivalent for numbers. We can of course use type convertions but it often gets ugly. IBM DB2 database has `digits` function for this purpose(but it produces char, not number). ClickHouse deserves better.\r\n\r\n**For Strings:**\r\nColumn Value: `Performance` as String \r\nChars between 3,7 as String -->> `substr(col, 3, 4)`: `rfor`\r\n\r\n**For Numbers:**\r\nColumn Value: `1234567890` as Int64. \r\nDigits between 3,2 as number --> `toInt32(substr(toString(col),3,2))`:`34`\r\n\r\nCompare `toInt32(substr(toString(col),3,4))` against `digits(col, 3, 2)`, which one is prettier?\r\n\r\n### Solution\r\nHave a `digits` function to do this. \r\n\r\n### Usage\r\n`digits(column, offset, length)`\r\n\r\n**column**: A numeric column\r\n**offset**: Staring digit(starts from left)\r\n**length**: Number of digits\r\n\r\n### Example\r\n```sql\r\nSELECT digits(1234567890, 3, 2) == 34 as E\r\n\r\n┌─E─┐\r\n│ 1 │\r\n└───┘\r\n```\r\n\r\n### Additional\r\n`DigitsReversed` also can be implemented to make it easier to read digits from right to left.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9077/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9077/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9056","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9056/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9056/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9056/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/9056","id":562195022,"node_id":"MDU6SXNzdWU1NjIxOTUwMjI=","number":9056,"title":"Possible buffer overflow on HTTP interface","user":{"login":"courvoif","id":28948470,"node_id":"MDQ6VXNlcjI4OTQ4NDcw","avatar_url":"https://avatars.githubusercontent.com/u/28948470?v=4","gravatar_id":"","url":"https://api.github.com/users/courvoif","html_url":"https://github.com/courvoif","followers_url":"https://api.github.com/users/courvoif/followers","following_url":"https://api.github.com/users/courvoif/following{/other_user}","gists_url":"https://api.github.com/users/courvoif/gists{/gist_id}","starred_url":"https://api.github.com/users/courvoif/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/courvoif/subscriptions","organizations_url":"https://api.github.com/users/courvoif/orgs","repos_url":"https://api.github.com/users/courvoif/repos","events_url":"https://api.github.com/users/courvoif/events{/privacy}","received_events_url":"https://api.github.com/users/courvoif/received_events","type":"User","site_admin":false},"labels":[{"id":1481327553,"node_id":"MDU6TGFiZWwxNDgxMzI3NTUz","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-http","name":"comp-http","color":"b5bcff","default":false,"description":"http protocol related"},{"id":1575085465,"node_id":"MDU6TGFiZWwxNTc1MDg1NDY1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/unexpected%20behaviour","name":"unexpected behaviour","color":"e088ca","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2020-02-09T15:39:53Z","updated_at":"2020-11-02T12:05:19Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"**Describe the bug or unexpected behaviour**\r\nSending a non url-encoded POST request triggers what I think is a buffer overflow in the HTTP interface.\r\n\r\n**How to reproduce**\r\nYou can send a bad query with Curl:\r\n\r\n> cat test.csv | curl \"http://127.0.0.1:8123/?query=INSERT INTO test FORMAT CSV\" --data-binary @-\r\n\r\nNotice that the query is **not** url-encoded.\r\nClickhouse answers that request with:  INTO 100 Continue\r\n\r\nIf INTO is changed with TOTO then the answer is TOTO 100 Continue.\r\n\r\n**Expected behavior**\r\nClickhouse should respond with a valid HTTP header(for example HTTP/1.1 100 Continue). \r\n\r\n\r\n**ClickHouse version:** 19.17.6.36\r\n**Interface**: HTTP\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9056/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/9056/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8939","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8939/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8939/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8939/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/8939","id":558300335,"node_id":"MDU6SXNzdWU1NTgzMDAzMzU=","number":8939,"title":"Query from Merge table is starting slowly.","user":{"login":"alexey-milovidov","id":18581488,"node_id":"MDQ6VXNlcjE4NTgxNDg4","avatar_url":"https://avatars.githubusercontent.com/u/18581488?v=4","gravatar_id":"","url":"https://api.github.com/users/alexey-milovidov","html_url":"https://github.com/alexey-milovidov","followers_url":"https://api.github.com/users/alexey-milovidov/followers","following_url":"https://api.github.com/users/alexey-milovidov/following{/other_user}","gists_url":"https://api.github.com/users/alexey-milovidov/gists{/gist_id}","starred_url":"https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexey-milovidov/subscriptions","organizations_url":"https://api.github.com/users/alexey-milovidov/orgs","repos_url":"https://api.github.com/users/alexey-milovidov/repos","events_url":"https://api.github.com/users/alexey-milovidov/events{/privacy}","received_events_url":"https://api.github.com/users/alexey-milovidov/received_events","type":"User","site_admin":false},"labels":[{"id":756395244,"node_id":"MDU6TGFiZWw3NTYzOTUyNDQ=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/performance","name":"performance","color":"c2e0c6","default":false,"description":null}],"state":"open","locked":false,"assignee":{"login":"KochetovNicolai","id":4092911,"node_id":"MDQ6VXNlcjQwOTI5MTE=","avatar_url":"https://avatars.githubusercontent.com/u/4092911?v=4","gravatar_id":"","url":"https://api.github.com/users/KochetovNicolai","html_url":"https://github.com/KochetovNicolai","followers_url":"https://api.github.com/users/KochetovNicolai/followers","following_url":"https://api.github.com/users/KochetovNicolai/following{/other_user}","gists_url":"https://api.github.com/users/KochetovNicolai/gists{/gist_id}","starred_url":"https://api.github.com/users/KochetovNicolai/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/KochetovNicolai/subscriptions","organizations_url":"https://api.github.com/users/KochetovNicolai/orgs","repos_url":"https://api.github.com/users/KochetovNicolai/repos","events_url":"https://api.github.com/users/KochetovNicolai/events{/privacy}","received_events_url":"https://api.github.com/users/KochetovNicolai/received_events","type":"User","site_admin":false},"assignees":[{"login":"KochetovNicolai","id":4092911,"node_id":"MDQ6VXNlcjQwOTI5MTE=","avatar_url":"https://avatars.githubusercontent.com/u/4092911?v=4","gravatar_id":"","url":"https://api.github.com/users/KochetovNicolai","html_url":"https://github.com/KochetovNicolai","followers_url":"https://api.github.com/users/KochetovNicolai/followers","following_url":"https://api.github.com/users/KochetovNicolai/following{/other_user}","gists_url":"https://api.github.com/users/KochetovNicolai/gists{/gist_id}","starred_url":"https://api.github.com/users/KochetovNicolai/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/KochetovNicolai/subscriptions","organizations_url":"https://api.github.com/users/KochetovNicolai/orgs","repos_url":"https://api.github.com/users/KochetovNicolai/repos","events_url":"https://api.github.com/users/KochetovNicolai/events{/privacy}","received_events_url":"https://api.github.com/users/KochetovNicolai/received_events","type":"User","site_admin":false}],"milestone":null,"comments":3,"created_at":"2020-01-31T18:31:31Z","updated_at":"2020-11-30T09:09:16Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"```\r\nmtexample01i.metrika.yandex.net :) SELECT count() FROM merge(deduplicator_events_deduplicated_hashes, '^DeduplicatedHash')\r\n```\r\n\r\nThere are 43104 matching tables.\r\n\r\nI have already fixed this issue, but the fix was lost after refactoring.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8939/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8939/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8921","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8921/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8921/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8921/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/8921","id":557843074,"node_id":"MDU6SXNzdWU1NTc4NDMwNzQ=","number":8921,"title":"SYSTEM SYNC FILE CACHE","user":{"login":"alexey-milovidov","id":18581488,"node_id":"MDQ6VXNlcjE4NTgxNDg4","avatar_url":"https://avatars.githubusercontent.com/u/18581488?v=4","gravatar_id":"","url":"https://api.github.com/users/alexey-milovidov","html_url":"https://github.com/alexey-milovidov","followers_url":"https://api.github.com/users/alexey-milovidov/followers","following_url":"https://api.github.com/users/alexey-milovidov/following{/other_user}","gists_url":"https://api.github.com/users/alexey-milovidov/gists{/gist_id}","starred_url":"https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexey-milovidov/subscriptions","organizations_url":"https://api.github.com/users/alexey-milovidov/orgs","repos_url":"https://api.github.com/users/alexey-milovidov/repos","events_url":"https://api.github.com/users/alexey-milovidov/events{/privacy}","received_events_url":"https://api.github.com/users/alexey-milovidov/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":644208617,"node_id":"MDU6TGFiZWw2NDQyMDg2MTc=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/easy%20task","name":"easy task","color":"0e8a16","default":false,"description":"Good for first contributors"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2020-01-31T00:42:11Z","updated_at":"2020-01-31T00:42:11Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"**Use case**\r\nSuppose you want to create Elastic Block Store snapshot to make a backup. Before doing that you have to ensure that data is written to block device. But you want to do it without ssh-ing to the server, directly from ClickHouse.\r\n\r\n**Implementation**\r\nSimply do `sync` syscall.\r\n\r\n**Drawbacks**\r\nIt's too heavy and has potential for misuse.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8921/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8921/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8920","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8920/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8920/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8920/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/8920","id":557841340,"node_id":"MDU6SXNzdWU1NTc4NDEzNDA=","number":8920,"title":"Extend format Values to support INSERT statement for every row.","user":{"login":"alexey-milovidov","id":18581488,"node_id":"MDQ6VXNlcjE4NTgxNDg4","avatar_url":"https://avatars.githubusercontent.com/u/18581488?v=4","gravatar_id":"","url":"https://api.github.com/users/alexey-milovidov","html_url":"https://github.com/alexey-milovidov","followers_url":"https://api.github.com/users/alexey-milovidov/followers","following_url":"https://api.github.com/users/alexey-milovidov/following{/other_user}","gists_url":"https://api.github.com/users/alexey-milovidov/gists{/gist_id}","starred_url":"https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexey-milovidov/subscriptions","organizations_url":"https://api.github.com/users/alexey-milovidov/orgs","repos_url":"https://api.github.com/users/alexey-milovidov/repos","events_url":"https://api.github.com/users/alexey-milovidov/events{/privacy}","received_events_url":"https://api.github.com/users/alexey-milovidov/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2020-01-31T00:36:13Z","updated_at":"2020-01-31T00:37:22Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"**Use case**\r\n\r\nThis format is typical for SQL dumps in other databases:\r\n\r\nINSERT INTO table VALUES **(1, 'Hello');\r\nINSERT INTO table VALUES (2, 'World');\r\nINSERT INTO table VALUES (3, 'Abc');**\r\n\r\nThe part highlighted should be parsed as data in specific format, not as separate SQL statements.\r\nWe can continue to parse it as data as long as statements insert into the same table in the same way.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8920/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8920/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8879","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8879/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8879/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8879/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/8879","id":556290173,"node_id":"MDU6SXNzdWU1NTYyOTAxNzM=","number":8879,"title":"Implement support of the rest quantiles for Decimal types","user":{"login":"Felixoid","id":3025537,"node_id":"MDQ6VXNlcjMwMjU1Mzc=","avatar_url":"https://avatars.githubusercontent.com/u/3025537?v=4","gravatar_id":"","url":"https://api.github.com/users/Felixoid","html_url":"https://github.com/Felixoid","followers_url":"https://api.github.com/users/Felixoid/followers","following_url":"https://api.github.com/users/Felixoid/following{/other_user}","gists_url":"https://api.github.com/users/Felixoid/gists{/gist_id}","starred_url":"https://api.github.com/users/Felixoid/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Felixoid/subscriptions","organizations_url":"https://api.github.com/users/Felixoid/orgs","repos_url":"https://api.github.com/users/Felixoid/repos","events_url":"https://api.github.com/users/Felixoid/events{/privacy}","received_events_url":"https://api.github.com/users/Felixoid/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":1745440304,"node_id":"MDU6TGFiZWwxNzQ1NDQwMzA0","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-decimal","name":"comp-decimal","color":"b5bcff","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2020-01-28T15:36:36Z","updated_at":"2020-10-16T18:10:23Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"**Use case**\r\nPut nginx logs with ms after the decimal point and query quantilesTiming on it.\r\n\r\n**Describe the solution you'd like**\r\nAll quantile* functions will be supported by ClickHouse\r\n\r\n**Additional context**\r\nIn #5304 support for some of the quantiles were implemented\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8879/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8879/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8867","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8867/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8867/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8867/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/8867","id":555840709,"node_id":"MDU6SXNzdWU1NTU4NDA3MDk=","number":8867,"title":"JSONAnalyze aggregate function","user":{"login":"alexey-milovidov","id":18581488,"node_id":"MDQ6VXNlcjE4NTgxNDg4","avatar_url":"https://avatars.githubusercontent.com/u/18581488?v=4","gravatar_id":"","url":"https://api.github.com/users/alexey-milovidov","html_url":"https://github.com/alexey-milovidov","followers_url":"https://api.github.com/users/alexey-milovidov/followers","following_url":"https://api.github.com/users/alexey-milovidov/following{/other_user}","gists_url":"https://api.github.com/users/alexey-milovidov/gists{/gist_id}","starred_url":"https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexey-milovidov/subscriptions","organizations_url":"https://api.github.com/users/alexey-milovidov/orgs","repos_url":"https://api.github.com/users/alexey-milovidov/repos","events_url":"https://api.github.com/users/alexey-milovidov/events{/privacy}","received_events_url":"https://api.github.com/users/alexey-milovidov/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":1365579236,"node_id":"MDU6TGFiZWwxMzY1NTc5MjM2","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/minor","name":"minor","color":"FFF8F8","default":false,"description":"Priority: minor"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2020-01-27T21:22:15Z","updated_at":"2020-01-27T21:23:36Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"**Use case**\r\nThe aggregate function takes String argument with JSON and outputs Array with all distinct paths in JSON along with the smallest data type that can accomodate all data values.\r\n\r\nExample: \r\n\r\n```\r\n{\"a\": 123, \"b\": \"2020-01-01T01:02:03Z\"}\r\n{\"c\": [123, 456], \"b\": \"2020-01-01T01:02:03Z\", \"d\": {\"a\": -1}}\r\n```\r\n\r\nThe function should return \r\n```\r\n[\r\n('a', 'Nullable(UInt8)'),\r\n('b', 'DateTime'),\r\n('c', 'Array(UInt16)'),\r\n('d.a', 'Nullable(Int8)')\r\n]\r\n```\r\n\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8867/reactions","total_count":2,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8867/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8854","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8854/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8854/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8854/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/8854","id":555593326,"node_id":"MDU6SXNzdWU1NTU1OTMzMjY=","number":8854,"title":"Allow to use arbitrary queries (e.g. DESCRIBE) in a subquery","user":{"login":"ramazanpolat","id":3527695,"node_id":"MDQ6VXNlcjM1Mjc2OTU=","avatar_url":"https://avatars.githubusercontent.com/u/3527695?v=4","gravatar_id":"","url":"https://api.github.com/users/ramazanpolat","html_url":"https://github.com/ramazanpolat","followers_url":"https://api.github.com/users/ramazanpolat/followers","following_url":"https://api.github.com/users/ramazanpolat/following{/other_user}","gists_url":"https://api.github.com/users/ramazanpolat/gists{/gist_id}","starred_url":"https://api.github.com/users/ramazanpolat/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ramazanpolat/subscriptions","organizations_url":"https://api.github.com/users/ramazanpolat/orgs","repos_url":"https://api.github.com/users/ramazanpolat/repos","events_url":"https://api.github.com/users/ramazanpolat/events{/privacy}","received_events_url":"https://api.github.com/users/ramazanpolat/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":1507888214,"node_id":"MDU6TGFiZWwxNTA3ODg4MjE0","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/st-accepted","name":"st-accepted","color":"e5b890","default":false,"description":"The issue is in our backlog, ready to take"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2020-01-27T14:01:07Z","updated_at":"2020-04-25T13:45:28Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"**Use case**\r\nDESCRIBE output is something like this:\r\n```\r\nDESCRIBE TABLE ABC\r\n\r\n┌─name────────┬─type──┬─default_type─┬─default_expression─┬─comment─┬─codec_expression─┬─ttl_expression─┐\r\n│ ID          │ Int32 │              │                    │         │                  │                │\r\n│ BORYIL      │ Int32 │              │                    │         │                  │                │\r\n│ BORDONEM    │ Int32 │              │                    │         │                  │                │\r\n│ BORYILDONEM │ Int32 │              │                    │         │                  │                │\r\n└─────────────┴───────┴──────────────┴────────────────────┴─────────┴──────────────────┴────────────────┘\r\n```\r\n\r\nUnfortunately we cannot use this result in SQL since the output is not a table, althought it looks exactly like a table. \r\n\r\n**Therefore something like** `SELECT name FROM (DESCRIBE TABLE ABC) where type='Int32'` **is not possible**.\r\n\r\n**Proposed solution**\r\nMake a table function called `describe` that can return DESCRIBE output as table. So users will be able to use this functions to get information about the a table and use it in SQL statements.\r\n\r\nSomthing like these will be possible:\r\n```\r\nSELECT name FROM describe(ABC) where type='Int32\r\n\r\nSELECT count() FROM describe(jdbc('datasource://abc', 'schema', 'table'))\r\n\r\n```","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8854/reactions","total_count":3,"+1":3,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8854/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8847","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8847/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8847/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8847/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/8847","id":555324943,"node_id":"MDU6SXNzdWU1NTUzMjQ5NDM=","number":8847,"title":"Transfer less amount of data over network for distributed aggregation query with ORDER BY sublinear aggregate functions DESC and LIMIT","user":{"login":"alexey-milovidov","id":18581488,"node_id":"MDQ6VXNlcjE4NTgxNDg4","avatar_url":"https://avatars.githubusercontent.com/u/18581488?v=4","gravatar_id":"","url":"https://api.github.com/users/alexey-milovidov","html_url":"https://github.com/alexey-milovidov","followers_url":"https://api.github.com/users/alexey-milovidov/followers","following_url":"https://api.github.com/users/alexey-milovidov/following{/other_user}","gists_url":"https://api.github.com/users/alexey-milovidov/gists{/gist_id}","starred_url":"https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexey-milovidov/subscriptions","organizations_url":"https://api.github.com/users/alexey-milovidov/orgs","repos_url":"https://api.github.com/users/alexey-milovidov/repos","events_url":"https://api.github.com/users/alexey-milovidov/events{/privacy}","received_events_url":"https://api.github.com/users/alexey-milovidov/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":1365579236,"node_id":"MDU6TGFiZWwxMzY1NTc5MjM2","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/minor","name":"minor","color":"FFF8F8","default":false,"description":"Priority: minor"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2020-01-27T01:59:05Z","updated_at":"2021-11-11T20:51:12Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"This is a very difficult optimization.\r\n\r\nLet's name aggregate function sublinear if\r\n```\r\nagg(a U b) <= agg(a) + agg(b)\r\n```\r\nand monotonic if\r\n```\r\nagg(a U b) >= max(agg(a), agg(b))\r\n```\r\n(where `a` and `b` are sets and `U` is set union)\r\n\r\nExamples of sublinear monotonic functions:\r\n- count;\r\n- uniq;\r\n- max;\r\n\r\nSuppose we have distributed aggregation query with ORDER BY sublinear monotonic aggregate function(s) DESC and LIMIT.\r\nExample:\r\n\r\n```\r\nSELECT k, count() FROM table GROUP BY k ORDER BY count() DESC LIMIT 10\r\n```\r\n\r\nIf there are huge number of distinct values of k expected and the limit is not large, we can do the following optimization:\r\n1. Perform intermediate aggregation on every shard as usual.\r\n2. Index the intermediate aggregation in two ways on every shard:\r\n- as a hash table by aggregation keys;\r\n- as priority queue by intermediate value of aggregate functions;\r\n3. On initiating server, fetch and iterate keys from remote servers in descending order of aggregate value;\r\n4. When reading a key, also request it from all remote servers (by separate network request to hash table; batching is possible) to get complete result and merge to top.\r\n5. Do it until top 10 is filled and all intermediate values from remote servers are less than 1 / number of shards of the last value in top. Note that the last value in top will be non-decreasing.\r\n\r\nThis optimization is correct because:\r\n- for all keys in top we have complete aggregation result because of №4;\r\n- after №5 no new results can come to top because of sublinearity;\r\n\r\nIt's difficult to implement because we don't have infrastructure for №4.\r\nIt's possible to do if we will represent intermediate aggregation data as temporary key-value table.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8847/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8847/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8842","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8842/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8842/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8842/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/8842","id":555229318,"node_id":"MDU6SXNzdWU1NTUyMjkzMTg=","number":8842,"title":"Send Query Parameters through POST body","user":{"login":"simPod","id":327717,"node_id":"MDQ6VXNlcjMyNzcxNw==","avatar_url":"https://avatars.githubusercontent.com/u/327717?v=4","gravatar_id":"","url":"https://api.github.com/users/simPod","html_url":"https://github.com/simPod","followers_url":"https://api.github.com/users/simPod/followers","following_url":"https://api.github.com/users/simPod/following{/other_user}","gists_url":"https://api.github.com/users/simPod/gists{/gist_id}","starred_url":"https://api.github.com/users/simPod/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/simPod/subscriptions","organizations_url":"https://api.github.com/users/simPod/orgs","repos_url":"https://api.github.com/users/simPod/repos","events_url":"https://api.github.com/users/simPod/events{/privacy}","received_events_url":"https://api.github.com/users/simPod/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":1481327553,"node_id":"MDU6TGFiZWwxNDgxMzI3NTUz","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-http","name":"comp-http","color":"b5bcff","default":false,"description":"http protocol related"},{"id":1507888214,"node_id":"MDU6TGFiZWwxNTA3ODg4MjE0","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/st-accepted","name":"st-accepted","color":"e5b890","default":false,"description":"The issue is in our backlog, ready to take"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":9,"created_at":"2020-01-26T13:35:06Z","updated_at":"2021-08-04T10:55:49Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"I'd like to be able to pass [Query Parameters](https://clickhouse.yandex/docs/en/interfaces/http/#cli-queries-with-parameters) through POST body\r\n\r\n`$ curl -sS \"<address>?param_id=2&param_phrase=test\" -d \"SELECT * FROM table WHERE int_column = {id:UInt8} and string_column = {phrase:String}\"`\r\n\r\nWhen having high amount of parameters it produces very long URL. Would it make sense to have an option to pass it through POST body as well?\r\n\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8842/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8842/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8829","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8829/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8829/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8829/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/8829","id":555116711,"node_id":"MDU6SXNzdWU1NTUxMTY3MTE=","number":8829,"title":"Optimization for distributed GROUP BY with ORDER BY without aggregate functions.","user":{"login":"alexey-milovidov","id":18581488,"node_id":"MDQ6VXNlcjE4NTgxNDg4","avatar_url":"https://avatars.githubusercontent.com/u/18581488?v=4","gravatar_id":"","url":"https://api.github.com/users/alexey-milovidov","html_url":"https://github.com/alexey-milovidov","followers_url":"https://api.github.com/users/alexey-milovidov/followers","following_url":"https://api.github.com/users/alexey-milovidov/following{/other_user}","gists_url":"https://api.github.com/users/alexey-milovidov/gists{/gist_id}","starred_url":"https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexey-milovidov/subscriptions","organizations_url":"https://api.github.com/users/alexey-milovidov/orgs","repos_url":"https://api.github.com/users/alexey-milovidov/repos","events_url":"https://api.github.com/users/alexey-milovidov/events{/privacy}","received_events_url":"https://api.github.com/users/alexey-milovidov/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2020-01-25T18:07:10Z","updated_at":"2020-01-25T22:09:40Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"**Use case**\r\nIf the query contains GROUP BY and either does not contain ORDER BY or contains ORDER BY that does not depend on aggregate functions and only possibly depend on aggregation keys and does not depend on non-deterministic functions or there is no aggregate functions, we should apply ORDER BY transformation with LIMIT on remote servers. If there is no ORDER BY but aggregate functions are present, add implicit ORDER BY keys.\r\n\r\nThis will help to send less amount of data over network and parallelize ORDER BY.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8829/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8829/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8802","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8802/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8802/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8802/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/8802","id":554176359,"node_id":"MDU6SXNzdWU1NTQxNzYzNTk=","number":8802,"title":"Support JOIN predicates","user":{"login":"4ertus2","id":8061274,"node_id":"MDQ6VXNlcjgwNjEyNzQ=","avatar_url":"https://avatars.githubusercontent.com/u/8061274?v=4","gravatar_id":"","url":"https://api.github.com/users/4ertus2","html_url":"https://github.com/4ertus2","followers_url":"https://api.github.com/users/4ertus2/followers","following_url":"https://api.github.com/users/4ertus2/following{/other_user}","gists_url":"https://api.github.com/users/4ertus2/gists{/gist_id}","starred_url":"https://api.github.com/users/4ertus2/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/4ertus2/subscriptions","organizations_url":"https://api.github.com/users/4ertus2/orgs","repos_url":"https://api.github.com/users/4ertus2/repos","events_url":"https://api.github.com/users/4ertus2/events{/privacy}","received_events_url":"https://api.github.com/users/4ertus2/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":1357578153,"node_id":"MDU6TGFiZWwxMzU3NTc4MTUz","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-joins","name":"comp-joins","color":"b5bcff","default":false,"description":"JOINs"}],"state":"open","locked":false,"assignee":{"login":"vdimir","id":7023786,"node_id":"MDQ6VXNlcjcwMjM3ODY=","avatar_url":"https://avatars.githubusercontent.com/u/7023786?v=4","gravatar_id":"","url":"https://api.github.com/users/vdimir","html_url":"https://github.com/vdimir","followers_url":"https://api.github.com/users/vdimir/followers","following_url":"https://api.github.com/users/vdimir/following{/other_user}","gists_url":"https://api.github.com/users/vdimir/gists{/gist_id}","starred_url":"https://api.github.com/users/vdimir/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vdimir/subscriptions","organizations_url":"https://api.github.com/users/vdimir/orgs","repos_url":"https://api.github.com/users/vdimir/repos","events_url":"https://api.github.com/users/vdimir/events{/privacy}","received_events_url":"https://api.github.com/users/vdimir/received_events","type":"User","site_admin":false},"assignees":[{"login":"vdimir","id":7023786,"node_id":"MDQ6VXNlcjcwMjM3ODY=","avatar_url":"https://avatars.githubusercontent.com/u/7023786?v=4","gravatar_id":"","url":"https://api.github.com/users/vdimir","html_url":"https://github.com/vdimir","followers_url":"https://api.github.com/users/vdimir/followers","following_url":"https://api.github.com/users/vdimir/following{/other_user}","gists_url":"https://api.github.com/users/vdimir/gists{/gist_id}","starred_url":"https://api.github.com/users/vdimir/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vdimir/subscriptions","organizations_url":"https://api.github.com/users/vdimir/orgs","repos_url":"https://api.github.com/users/vdimir/repos","events_url":"https://api.github.com/users/vdimir/events{/privacy}","received_events_url":"https://api.github.com/users/vdimir/received_events","type":"User","site_admin":false}],"milestone":null,"comments":4,"created_at":"2020-01-23T14:02:00Z","updated_at":"2021-09-26T01:03:37Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"It's possible in SQL to write complex ON section. Something like this\r\n```\r\nSELECT * FROM a\r\nJOIN b ON a.id = b.id\r\n    AND (func1(a.x, a.y, a.z) OR func2(a.x, b.x) OR ...)\r\n```\r\nIt's OK cause it has equality `a.id = b.id` and we could make it via equi-join. But we should move complex `(func1(a.x, a.y, a.z) OR func2(a.x, b.x) OR ...)` to `WHERE` or support complex filters in JOIN.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8802/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8802/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8784","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8784/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8784/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8784/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/8784","id":553706168,"node_id":"MDU6SXNzdWU1NTM3MDYxNjg=","number":8784,"title":"Support BETWEEN in JOINing tables","user":{"login":"tdingus","id":1499709,"node_id":"MDQ6VXNlcjE0OTk3MDk=","avatar_url":"https://avatars.githubusercontent.com/u/1499709?v=4","gravatar_id":"","url":"https://api.github.com/users/tdingus","html_url":"https://github.com/tdingus","followers_url":"https://api.github.com/users/tdingus/followers","following_url":"https://api.github.com/users/tdingus/following{/other_user}","gists_url":"https://api.github.com/users/tdingus/gists{/gist_id}","starred_url":"https://api.github.com/users/tdingus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tdingus/subscriptions","organizations_url":"https://api.github.com/users/tdingus/orgs","repos_url":"https://api.github.com/users/tdingus/repos","events_url":"https://api.github.com/users/tdingus/events{/privacy}","received_events_url":"https://api.github.com/users/tdingus/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":1357578153,"node_id":"MDU6TGFiZWwxMzU3NTc4MTUz","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-joins","name":"comp-joins","color":"b5bcff","default":false,"description":"JOINs"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2020-01-22T18:06:17Z","updated_at":"2020-10-16T18:10:23Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"**Use case**\r\nTo join tables on a range. For example, \r\n\r\nCREATE TABLE traffic (id int, count int);\r\nCREATE TABLE category (cat_id int, min int, max int);\r\n\r\nINSERT INTO category (cat_id, min, max) VALUES (1, 0, 40), (2, 41, 80), (3, 81, 140), (4, 160, 200)\r\nINSERT INTO traffic (id, count) VALUES (1, 10), (2, 20), (40, 40), (80, 80);\r\n\r\nSELECT cat.cat_id, SUM(traffic.count) FROM traffic JOIN category cat ON traffic.id BETWEEN cat.min AND cat.max GROUP BY cat.cat_id;\r\n\r\nOn postgresql, it returns the following results,\r\n\r\ncat_id | sum\r\n--------+-----\r\n      1 |  70\r\n      2 |  80\r\n\r\n**Describe the solution you'd like**\r\nOne possible solution is to support BETWEEN in JOIN statement.\r\n\r\n**Describe alternatives you've considered**\r\nOther possible solution is to allow other operations besides \"=\" equal.\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8784/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8784/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8777","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8777/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8777/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8777/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/8777","id":553560884,"node_id":"MDU6SXNzdWU1NTM1NjA4ODQ=","number":8777,"title":"Query optimization: rewrite GROUP BY with LIMIT to DISTINCT.","user":{"login":"alexey-milovidov","id":18581488,"node_id":"MDQ6VXNlcjE4NTgxNDg4","avatar_url":"https://avatars.githubusercontent.com/u/18581488?v=4","gravatar_id":"","url":"https://api.github.com/users/alexey-milovidov","html_url":"https://github.com/alexey-milovidov","followers_url":"https://api.github.com/users/alexey-milovidov/followers","following_url":"https://api.github.com/users/alexey-milovidov/following{/other_user}","gists_url":"https://api.github.com/users/alexey-milovidov/gists{/gist_id}","starred_url":"https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexey-milovidov/subscriptions","organizations_url":"https://api.github.com/users/alexey-milovidov/orgs","repos_url":"https://api.github.com/users/alexey-milovidov/repos","events_url":"https://api.github.com/users/alexey-milovidov/events{/privacy}","received_events_url":"https://api.github.com/users/alexey-milovidov/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":1401777979,"node_id":"MDU6TGFiZWwxNDAxNzc3OTc5","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-optimizers","name":"comp-optimizers","color":"b5bcff","default":false,"description":"Query optimizations"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2020-01-22T14:01:47Z","updated_at":"2020-01-23T11:19:13Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"**Use case**\r\nIf query contains GROUP BY but no aggregate functions and also contains LIMIT, remove GROUP BY and add DISTINCT.\r\n\r\n```\r\nSELECT a, b, c FROM t GROUP BY a, b, c LIMIT 10\r\n```\r\n\r\n->\r\n\r\n```\r\nSELECT DISTINCT a, b, c FROM t LIMIT 10\r\n```\r\n\r\nThis optimization is viable, because DISTINCT can output records without waiting for full result and it can stop earlier in presence of LIMIT.\r\n\r\nBut if LIMIT is not present, DISTINCT is less efficient than GROUP BY due to lack of some specializations.\r\n\r\nPS. Advanced version:\r\n\r\n```\r\nSELECT a, b, c, any(x), any(y) FROM t GROUP BY a, b, c LIMIT 10\r\n```\r\n\r\n->\r\n\r\n```\r\nSELECT a, b, c, x, y FROM t LIMIT 1 BY a, b, c\r\n```","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8777/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8777/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8759","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8759/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8759/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8759/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/8759","id":552741190,"node_id":"MDU6SXNzdWU1NTI3NDExOTA=","number":8759,"title":"Send variables in html body ","user":{"login":"divelgrom","id":7115659,"node_id":"MDQ6VXNlcjcxMTU2NTk=","avatar_url":"https://avatars.githubusercontent.com/u/7115659?v=4","gravatar_id":"","url":"https://api.github.com/users/divelgrom","html_url":"https://github.com/divelgrom","followers_url":"https://api.github.com/users/divelgrom/followers","following_url":"https://api.github.com/users/divelgrom/following{/other_user}","gists_url":"https://api.github.com/users/divelgrom/gists{/gist_id}","starred_url":"https://api.github.com/users/divelgrom/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/divelgrom/subscriptions","organizations_url":"https://api.github.com/users/divelgrom/orgs","repos_url":"https://api.github.com/users/divelgrom/repos","events_url":"https://api.github.com/users/divelgrom/events{/privacy}","received_events_url":"https://api.github.com/users/divelgrom/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":1481327553,"node_id":"MDU6TGFiZWwxNDgxMzI3NTUz","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-http","name":"comp-http","color":"b5bcff","default":false,"description":"http protocol related"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2020-01-21T09:35:16Z","updated_at":"2020-01-21T10:53:23Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"At the moment, variables can be passed in the url string.\r\n\r\nI use templates for queries and just substitute the necessary variables.\r\nI faced a problem when I need to make a request for 1000 records. Transferring such a quantity to the URL does not seem to be the right decision. I ask you to implement the ability to transfer the request template to the URL and a set of variables in the body.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8759/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8759/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8747","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8747/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8747/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8747/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/8747","id":552326733,"node_id":"MDU6SXNzdWU1NTIzMjY3MzM=","number":8747,"title":"Implementing rolling operations for unevenly spaced time series","user":{"login":"jeffw-wherethebitsroam","id":754824,"node_id":"MDQ6VXNlcjc1NDgyNA==","avatar_url":"https://avatars.githubusercontent.com/u/754824?v=4","gravatar_id":"","url":"https://api.github.com/users/jeffw-wherethebitsroam","html_url":"https://github.com/jeffw-wherethebitsroam","followers_url":"https://api.github.com/users/jeffw-wherethebitsroam/followers","following_url":"https://api.github.com/users/jeffw-wherethebitsroam/following{/other_user}","gists_url":"https://api.github.com/users/jeffw-wherethebitsroam/gists{/gist_id}","starred_url":"https://api.github.com/users/jeffw-wherethebitsroam/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jeffw-wherethebitsroam/subscriptions","organizations_url":"https://api.github.com/users/jeffw-wherethebitsroam/orgs","repos_url":"https://api.github.com/users/jeffw-wherethebitsroam/repos","events_url":"https://api.github.com/users/jeffw-wherethebitsroam/events{/privacy}","received_events_url":"https://api.github.com/users/jeffw-wherethebitsroam/received_events","type":"User","site_admin":false},"labels":[{"id":386401510,"node_id":"MDU6TGFiZWwzODY0MDE1MTA=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/question","name":"question","color":"bfdadc","default":true,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2020-01-20T14:15:56Z","updated_at":"2020-07-01T18:10:34Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Hi,\r\n\r\nWe have time series data which is unevenly spaced. We would like to implement rolling average functions like the ones mentioned in:\r\n\r\nhttps://pdfs.semanticscholar.org/882e/93570eae184ae737bf0344cb50a2925e353d.pdf\r\n\r\nFor example, a moving average with a 10 minute window and linear interpolation.\r\n\r\nThe question I have is about implementation. Looking at some of the code for similar functions (e.g.  groupArrayMovingAvg) and they are all implemented as an aggregation function that return an array. Is that the right way to go?\r\n\r\nIf that is the case, what are size constraints for that array?\r\n\r\nThanks,\r\nJeff\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8747/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8747/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8738","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8738/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8738/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8738/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/8738","id":552169248,"node_id":"MDU6SXNzdWU1NTIxNjkyNDg=","number":8738,"title":"Streamable serialization format (suggestion)","user":{"login":"hhell","id":17826243,"node_id":"MDQ6VXNlcjE3ODI2MjQz","avatar_url":"https://avatars.githubusercontent.com/u/17826243?v=4","gravatar_id":"","url":"https://api.github.com/users/hhell","html_url":"https://github.com/hhell","followers_url":"https://api.github.com/users/hhell/followers","following_url":"https://api.github.com/users/hhell/following{/other_user}","gists_url":"https://api.github.com/users/hhell/gists{/gist_id}","starred_url":"https://api.github.com/users/hhell/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hhell/subscriptions","organizations_url":"https://api.github.com/users/hhell/orgs","repos_url":"https://api.github.com/users/hhell/repos","events_url":"https://api.github.com/users/hhell/events{/privacy}","received_events_url":"https://api.github.com/users/hhell/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2020-01-20T09:17:48Z","updated_at":"2020-01-27T14:43:17Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Continuing the https://github.com/ClickHouse/ClickHouse/pull/7841\r\n\r\n**Use case**\r\n\r\nStreaming the detailed information (metadata, data, totals, statistics, errors), deserializing data chunks as they arrive.\r\n\r\n**Describe the solution you'd like**\r\n\r\nI suggest implementing a format `JSONStreams` (all particular details are uncertain and discussion is highly welcomed),\r\n\r\nwhich consists of 0 or more blocks `<metadata>\\n<row>\\n...<row>\\n\\n`, terminated by a special metadata block like `{\"name\": \"end\", …}`\r\n\r\nMockup example:\r\n\r\n    {\"name\": \"data\", \"schema\": [{\"name\": \"col1\", \"type\": \"String\"}]}\r\n    [\"\"]\r\n\r\n    {\"name\": \"totals\", \"schema\": [{\"name\": \"col1\", \"type\": \"String\"}]}\r\n    [\"\"]\r\n\r\n    {\"name\": \"statistics\", \"result_rows\": 1, \"statistics\": {\"elapsed\": 0.00494638, \"rows_read\": 1, \"bytes_read\": 1}\r\n\r\n    {\"name\": \"end\", \"success\": true}\r\n\r\nExample of the terminating metadata block in case of an error:\r\n\r\n    {\"name\": \"end\", \"success\": \"false\", \"error_code\": 396, \"error_message\": \"Limit for result exceeded, max rows: 1.00 million, current rows: 1.00 million\", \"version\": \"20.20\", ...}\r\n\r\n\r\n**Describe alternatives you've considered**\r\n\r\nSimilar format `JSONCompactEachRowWithNamesAndTypes` cannot properly support statistics and errors/termination.\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8738/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8738/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8703","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8703/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8703/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8703/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/8703","id":551532412,"node_id":"MDU6SXNzdWU1NTE1MzI0MTI=","number":8703,"title":"optimization for 'multi-level' group by","user":{"login":"filimonov","id":1549571,"node_id":"MDQ6VXNlcjE1NDk1NzE=","avatar_url":"https://avatars.githubusercontent.com/u/1549571?v=4","gravatar_id":"","url":"https://api.github.com/users/filimonov","html_url":"https://github.com/filimonov","followers_url":"https://api.github.com/users/filimonov/followers","following_url":"https://api.github.com/users/filimonov/following{/other_user}","gists_url":"https://api.github.com/users/filimonov/gists{/gist_id}","starred_url":"https://api.github.com/users/filimonov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/filimonov/subscriptions","organizations_url":"https://api.github.com/users/filimonov/orgs","repos_url":"https://api.github.com/users/filimonov/repos","events_url":"https://api.github.com/users/filimonov/events{/privacy}","received_events_url":"https://api.github.com/users/filimonov/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":1401777979,"node_id":"MDU6TGFiZWwxNDAxNzc3OTc5","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-optimizers","name":"comp-optimizers","color":"b5bcff","default":false,"description":"Query optimizations"},{"id":1507867504,"node_id":"MDU6TGFiZWwxNTA3ODY3NTA0","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/st-hold","name":"st-hold","color":"e5b890","default":false,"description":"We've paused the work on issue for some reason"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2020-01-17T17:08:37Z","updated_at":"2021-04-30T05:34:14Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"body":"There are cases when data is naturally grouped by field X.\r\nIn those case grouping by X,Y can be executed more efficiently. \r\n\r\nSamples are:\r\n\r\n```\r\nselect a, b, sum(c) from  (select a, max(x) as b, sum(y) as c from table group by a)  group by a, b; \r\n\r\nselect a,  arrayJoin(x) as b, sum(c) from table group by a, b;  -- do arrayJoin AFTER group by a\r\n```","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8703/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8703/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8694","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8694/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8694/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8694/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/8694","id":551391511,"node_id":"MDU6SXNzdWU1NTEzOTE1MTE=","number":8694,"title":"Rewrite LEFT to INNER JOIN if possible","user":{"login":"4ertus2","id":8061274,"node_id":"MDQ6VXNlcjgwNjEyNzQ=","avatar_url":"https://avatars.githubusercontent.com/u/8061274?v=4","gravatar_id":"","url":"https://api.github.com/users/4ertus2","html_url":"https://github.com/4ertus2","followers_url":"https://api.github.com/users/4ertus2/followers","following_url":"https://api.github.com/users/4ertus2/following{/other_user}","gists_url":"https://api.github.com/users/4ertus2/gists{/gist_id}","starred_url":"https://api.github.com/users/4ertus2/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/4ertus2/subscriptions","organizations_url":"https://api.github.com/users/4ertus2/orgs","repos_url":"https://api.github.com/users/4ertus2/repos","events_url":"https://api.github.com/users/4ertus2/events{/privacy}","received_events_url":"https://api.github.com/users/4ertus2/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":1357578153,"node_id":"MDU6TGFiZWwxMzU3NTc4MTUz","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-joins","name":"comp-joins","color":"b5bcff","default":false,"description":"JOINs"},{"id":1401777979,"node_id":"MDU6TGFiZWwxNDAxNzc3OTc5","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-optimizers","name":"comp-optimizers","color":"b5bcff","default":false,"description":"Query optimizations"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2020-01-17T12:36:42Z","updated_at":"2020-10-16T18:10:23Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"If LEFT JOIN contains NOT NULL for joining key it's possible to rewrite it into INNER one.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8694/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8694/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8687","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8687/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8687/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8687/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/8687","id":550904322,"node_id":"MDU6SXNzdWU1NTA5MDQzMjI=","number":8687,"title":"Multiple ARRAY JOIN (per-row cartesian product of arrays)","user":{"login":"filimonov","id":1549571,"node_id":"MDQ6VXNlcjE1NDk1NzE=","avatar_url":"https://avatars.githubusercontent.com/u/1549571?v=4","gravatar_id":"","url":"https://api.github.com/users/filimonov","html_url":"https://github.com/filimonov","followers_url":"https://api.github.com/users/filimonov/followers","following_url":"https://api.github.com/users/filimonov/following{/other_user}","gists_url":"https://api.github.com/users/filimonov/gists{/gist_id}","starred_url":"https://api.github.com/users/filimonov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/filimonov/subscriptions","organizations_url":"https://api.github.com/users/filimonov/orgs","repos_url":"https://api.github.com/users/filimonov/repos","events_url":"https://api.github.com/users/filimonov/events{/privacy}","received_events_url":"https://api.github.com/users/filimonov/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":1401233890,"node_id":"MDU6TGFiZWwxNDAxMjMzODkw","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-arrays","name":"comp-arrays","color":"b5bcff","default":false,"description":"Arrays / array joins / higher order"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2020-01-16T16:06:00Z","updated_at":"2021-03-17T10:14:36Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"body":"```\r\nCREATE TABLE test_multiple_array_join (\r\n    id UInt64,\r\n    person Nested (\r\n        name String,\r\n        surname String\r\n    ),\r\n    properties Nested (\r\n        key String,\r\n        value String\r\n    )\r\n) Engine=MergeTree ORDER BY id;\r\n\r\n \r\nINSERT INTO test_multiple_array_join VALUES (1, ['Thomas', 'Michel'], ['Aquinas', 'Foucault'], ['profession', 'alive'], ['philosopher', 'no']);\r\nINSERT INTO test_multiple_array_join VALUES (2, ['Thomas', 'Nicola'], ['Edison', 'Tesla'], ['profession', 'alive'], ['inventor', 'no']);\r\n\r\nSELECT *\r\nFROM test_multiple_array_join\r\nARRAY JOIN person\r\nARRAY JOIN properties\r\n\r\nReceived exception from server (version 19.18.1):\r\nCode: 48. DB::Exception: Received from localhost:9000. DB::Exception: Support for more than one ARRAY JOIN in query is not implemented. \r\n\r\n0 rows in set. Elapsed: 0.004 sec. \r\n```\r\n\r\nWorkaround:\r\n```\r\nselect * from (select * from test_multiple_array_join array join person) array join properties order by person.name,id;\r\n\r\nSELECT *\r\nFROM \r\n(\r\n    SELECT *\r\n    FROM test_multiple_array_join\r\n    ARRAY JOIN person\r\n)\r\nARRAY JOIN properties\r\nORDER BY \r\n    person.name ASC, \r\n    id ASC\r\n\r\n┌─id─┬─person.name─┬─person.surname─┬─properties.key─┬─properties.value─┐\r\n│  1 │ Michel      │ Foucault       │ profession     │ philosopher      │\r\n│  1 │ Michel      │ Foucault       │ alive          │ no               │\r\n│  2 │ Nicola      │ Tesla          │ profession     │ inventor         │\r\n│  2 │ Nicola      │ Tesla          │ alive          │ no               │\r\n│  1 │ Thomas      │ Aquinas        │ profession     │ philosopher      │\r\n│  1 │ Thomas      │ Aquinas        │ alive          │ no               │\r\n│  2 │ Thomas      │ Edison         │ profession     │ inventor         │\r\n│  2 │ Thomas      │ Edison         │ alive          │ no               │\r\n└────┴─────────────┴────────────────┴────────────────┴──────────────────┘\r\n\r\n8 rows in set. Elapsed: 0.005 sec. \r\n```","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8687/reactions","total_count":5,"+1":5,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8687/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8685","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8685/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8685/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8685/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/8685","id":550807216,"node_id":"MDU6SXNzdWU1NTA4MDcyMTY=","number":8685,"title":"Notify systemd about successful startup","user":{"login":"mnacharov","id":1246847,"node_id":"MDQ6VXNlcjEyNDY4NDc=","avatar_url":"https://avatars.githubusercontent.com/u/1246847?v=4","gravatar_id":"","url":"https://api.github.com/users/mnacharov","html_url":"https://github.com/mnacharov","followers_url":"https://api.github.com/users/mnacharov/followers","following_url":"https://api.github.com/users/mnacharov/following{/other_user}","gists_url":"https://api.github.com/users/mnacharov/gists{/gist_id}","starred_url":"https://api.github.com/users/mnacharov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mnacharov/subscriptions","organizations_url":"https://api.github.com/users/mnacharov/orgs","repos_url":"https://api.github.com/users/mnacharov/repos","events_url":"https://api.github.com/users/mnacharov/events{/privacy}","received_events_url":"https://api.github.com/users/mnacharov/received_events","type":"User","site_admin":false},"labels":[{"id":386401508,"node_id":"MDU6TGFiZWwzODY0MDE1MDg=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/help%20wanted","name":"help wanted","color":"128A0C","default":true,"description":null},{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":1643658066,"node_id":"MDU6TGFiZWwxNjQzNjU4MDY2","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-packaging","name":"comp-packaging","color":"b5bcff","default":false,"description":"deb, rpm, tar, service-file etc."}],"state":"open","locked":false,"assignee":{"login":"mnacharov","id":1246847,"node_id":"MDQ6VXNlcjEyNDY4NDc=","avatar_url":"https://avatars.githubusercontent.com/u/1246847?v=4","gravatar_id":"","url":"https://api.github.com/users/mnacharov","html_url":"https://github.com/mnacharov","followers_url":"https://api.github.com/users/mnacharov/followers","following_url":"https://api.github.com/users/mnacharov/following{/other_user}","gists_url":"https://api.github.com/users/mnacharov/gists{/gist_id}","starred_url":"https://api.github.com/users/mnacharov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mnacharov/subscriptions","organizations_url":"https://api.github.com/users/mnacharov/orgs","repos_url":"https://api.github.com/users/mnacharov/repos","events_url":"https://api.github.com/users/mnacharov/events{/privacy}","received_events_url":"https://api.github.com/users/mnacharov/received_events","type":"User","site_admin":false},"assignees":[{"login":"mnacharov","id":1246847,"node_id":"MDQ6VXNlcjEyNDY4NDc=","avatar_url":"https://avatars.githubusercontent.com/u/1246847?v=4","gravatar_id":"","url":"https://api.github.com/users/mnacharov","html_url":"https://github.com/mnacharov","followers_url":"https://api.github.com/users/mnacharov/followers","following_url":"https://api.github.com/users/mnacharov/following{/other_user}","gists_url":"https://api.github.com/users/mnacharov/gists{/gist_id}","starred_url":"https://api.github.com/users/mnacharov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mnacharov/subscriptions","organizations_url":"https://api.github.com/users/mnacharov/orgs","repos_url":"https://api.github.com/users/mnacharov/repos","events_url":"https://api.github.com/users/mnacharov/events{/privacy}","received_events_url":"https://api.github.com/users/mnacharov/received_events","type":"User","site_admin":false}],"milestone":null,"comments":2,"created_at":"2020-01-16T13:28:06Z","updated_at":"2020-07-10T20:21:54Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"**Use case**\r\nI have a service which starts after `clickhouse-server.service` startup, but `clickhouse-server.service` considered started right after fork called by systemd (Type=simple).\r\nThis causes connection errors to database at server startup.\r\nI tried to use option `--daemon` and `Type=forking`, but clickhouse forks before start listening http ([Http Interface](https://clickhouse.yandex/docs/en/interfaces/http/)).\r\n\r\n**Describe the solution you'd like**\r\nUsing [systemd/sd-notify](https://www.freedesktop.org/software/systemd/man/sd_notify.html) will allow us to using `Type=notify`.\r\nI suggest to sent notification if `--notify` arg specified .\r\n\r\n**Describe alternatives you've considered**\r\nRefactoring `--daemon` arg, to fork after database is ready to use.\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8685/reactions","total_count":2,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8685/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8676","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8676/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8676/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8676/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/8676","id":550370107,"node_id":"MDU6SXNzdWU1NTAzNzAxMDc=","number":8676,"title":"Default cluster for distributed DDL","user":{"login":"KochetovNicolai","id":4092911,"node_id":"MDQ6VXNlcjQwOTI5MTE=","avatar_url":"https://avatars.githubusercontent.com/u/4092911?v=4","gravatar_id":"","url":"https://api.github.com/users/KochetovNicolai","html_url":"https://github.com/KochetovNicolai","followers_url":"https://api.github.com/users/KochetovNicolai/followers","following_url":"https://api.github.com/users/KochetovNicolai/following{/other_user}","gists_url":"https://api.github.com/users/KochetovNicolai/gists{/gist_id}","starred_url":"https://api.github.com/users/KochetovNicolai/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/KochetovNicolai/subscriptions","organizations_url":"https://api.github.com/users/KochetovNicolai/orgs","repos_url":"https://api.github.com/users/KochetovNicolai/repos","events_url":"https://api.github.com/users/KochetovNicolai/events{/privacy}","received_events_url":"https://api.github.com/users/KochetovNicolai/received_events","type":"User","site_admin":false},"labels":[{"id":386401508,"node_id":"MDU6TGFiZWwzODY0MDE1MDg=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/help%20wanted","name":"help wanted","color":"128A0C","default":true,"description":null},{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":644208617,"node_id":"MDU6TGFiZWw2NDQyMDg2MTc=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/easy%20task","name":"easy task","color":"0e8a16","default":false,"description":"Good for first contributors"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2020-01-15T19:00:58Z","updated_at":"2020-04-16T16:40:18Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"Allow to use default cluster for distributed DDL if it was specified in config.\r\n\r\nFor example, if in config we have\r\n```\r\n    <default_cluster>cluster_name</default_cluster>\r\n```\r\nthen query\r\n```sql\r\nCREATE TABLE table ON DEFAULT CLUSTER (x UInt32) engine = Memory\r\n```\r\nwill be equivalent to\r\n```sql\r\nCREATE TABLE table ON CLUSTER cluster_name (x UInt32) engine = Memory\r\n```","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8676/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8676/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8655","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8655/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8655/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8655/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/8655","id":549810302,"node_id":"MDU6SXNzdWU1NDk4MTAzMDI=","number":8655,"title":"JOINs with FINAL keyword","user":{"login":"filimonov","id":1549571,"node_id":"MDQ6VXNlcjE1NDk1NzE=","avatar_url":"https://avatars.githubusercontent.com/u/1549571?v=4","gravatar_id":"","url":"https://api.github.com/users/filimonov","html_url":"https://github.com/filimonov","followers_url":"https://api.github.com/users/filimonov/followers","following_url":"https://api.github.com/users/filimonov/following{/other_user}","gists_url":"https://api.github.com/users/filimonov/gists{/gist_id}","starred_url":"https://api.github.com/users/filimonov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/filimonov/subscriptions","organizations_url":"https://api.github.com/users/filimonov/orgs","repos_url":"https://api.github.com/users/filimonov/repos","events_url":"https://api.github.com/users/filimonov/events{/privacy}","received_events_url":"https://api.github.com/users/filimonov/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":1019683656,"node_id":"MDU6TGFiZWwxMDE5NjgzNjU2","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/altinity","name":"altinity","color":"c0f5f9","default":false,"description":""},{"id":1357578153,"node_id":"MDU6TGFiZWwxMzU3NTc4MTUz","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-joins","name":"comp-joins","color":"b5bcff","default":false,"description":"JOINs"},{"id":1575085465,"node_id":"MDU6TGFiZWwxNTc1MDg1NDY1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/unexpected%20behaviour","name":"unexpected behaviour","color":"e088ca","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":9,"created_at":"2020-01-14T20:49:12Z","updated_at":"2021-12-03T07:51:25Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"body":"When joining with a table, the keyword final does not function as should.\r\nWoraround: when you create a view with the FINAL and in the SQL you join to that view, the join works fine, however, this is not ideal since we are adding another step (i.e. View)\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8655/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8655/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8645","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8645/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8645/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8645/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/8645","id":549439102,"node_id":"MDU6SXNzdWU1NDk0MzkxMDI=","number":8645,"title":"Support non bankers round() for floats (under the setting)","user":{"login":"lmeng-freewheel","id":59867347,"node_id":"MDQ6VXNlcjU5ODY3MzQ3","avatar_url":"https://avatars.githubusercontent.com/u/59867347?v=4","gravatar_id":"","url":"https://api.github.com/users/lmeng-freewheel","html_url":"https://github.com/lmeng-freewheel","followers_url":"https://api.github.com/users/lmeng-freewheel/followers","following_url":"https://api.github.com/users/lmeng-freewheel/following{/other_user}","gists_url":"https://api.github.com/users/lmeng-freewheel/gists{/gist_id}","starred_url":"https://api.github.com/users/lmeng-freewheel/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/lmeng-freewheel/subscriptions","organizations_url":"https://api.github.com/users/lmeng-freewheel/orgs","repos_url":"https://api.github.com/users/lmeng-freewheel/repos","events_url":"https://api.github.com/users/lmeng-freewheel/events{/privacy}","received_events_url":"https://api.github.com/users/lmeng-freewheel/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2020-01-14T09:30:21Z","updated_at":"2020-02-13T11:02:51Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"**Describe the bug or unexpected behaviour**\r\nThe function  round(x[, N]) result seems not working correct for me.\r\n\r\n**How to reproduce**\r\nRun sql \"select round(3.175, 2) as expected;\" will get result: 3.18.\r\nBut run sql \"SELECT round(3.165, 2) AS unexpected;\" will get result: 3.16.\r\n\r\nI think the two cases is not consistent, the 3.18 is expected, but the 3.16 is not expected result, I think it should be 3.17.\r\n\r\n* Which ClickHouse server version to use\r\nversion 19.14.7.15 (official build)\r\n\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8645/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8645/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8599","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8599/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8599/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8599/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/8599","id":547688362,"node_id":"MDU6SXNzdWU1NDc2ODgzNjI=","number":8599,"title":"ability to suppress error \"No data to insert\" in clickhouse-client","user":{"login":"den-crane","id":19737682,"node_id":"MDQ6VXNlcjE5NzM3Njgy","avatar_url":"https://avatars.githubusercontent.com/u/19737682?v=4","gravatar_id":"","url":"https://api.github.com/users/den-crane","html_url":"https://github.com/den-crane","followers_url":"https://api.github.com/users/den-crane/followers","following_url":"https://api.github.com/users/den-crane/following{/other_user}","gists_url":"https://api.github.com/users/den-crane/gists{/gist_id}","starred_url":"https://api.github.com/users/den-crane/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/den-crane/subscriptions","organizations_url":"https://api.github.com/users/den-crane/orgs","repos_url":"https://api.github.com/users/den-crane/repos","events_url":"https://api.github.com/users/den-crane/events{/privacy}","received_events_url":"https://api.github.com/users/den-crane/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":993003747,"node_id":"MDU6TGFiZWw5OTMwMDM3NDc=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-cli","name":"comp-cli","color":"b5bcff","default":false,"description":"Console & command line"},{"id":1401255404,"node_id":"MDU6TGFiZWwxNDAxMjU1NDA0","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-formats","name":"comp-formats","color":"b5bcff","default":false,"description":"Input / output formats"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2020-01-09T19:56:30Z","updated_at":"2020-09-28T08:00:49Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"body":"Sometimes I need to load empty stream (after a long pipeline of greps / awks / gunzips) without errors.\r\n\r\ncurrent behavior \r\n```\r\ncreate table test(S String) Engine=Memory;\r\n\r\ncat /dev/null |grep -v 'zzz'|clickhouse-client -q 'insert into test format TST'\r\nCode: 108. DB::Exception: No data to insert\r\n```\r\nI would like something `-s` to suppress the `Exception: No data to insert`\r\n```\r\ncat /dev/null |grep -v 'zzz'|clickhouse-client -s -q 'insert into test format TST'\r\n```\r\n\r\nalso this behavior is inconsistent with http/api\r\n\r\n```\r\ncat /dev/null |grep -v 'zzz'|curl -v 'http://localhost:8123/?query=INSERT%20INTO%20test%20FORMAT%20TSV' --data-binary @-\r\n\r\n< HTTP/1.1 200 OK\r\n....\r\n\r\n```\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8599/reactions","total_count":5,"+1":5,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8599/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8562","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8562/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8562/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8562/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/8562","id":546320456,"node_id":"MDU6SXNzdWU1NDYzMjA0NTY=","number":8562,"title":"Расширение информации в `system`.functions","user":{"login":"relieverz","id":34429984,"node_id":"MDQ6VXNlcjM0NDI5OTg0","avatar_url":"https://avatars.githubusercontent.com/u/34429984?v=4","gravatar_id":"","url":"https://api.github.com/users/relieverz","html_url":"https://github.com/relieverz","followers_url":"https://api.github.com/users/relieverz/followers","following_url":"https://api.github.com/users/relieverz/following{/other_user}","gists_url":"https://api.github.com/users/relieverz/gists{/gist_id}","starred_url":"https://api.github.com/users/relieverz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/relieverz/subscriptions","organizations_url":"https://api.github.com/users/relieverz/orgs","repos_url":"https://api.github.com/users/relieverz/repos","events_url":"https://api.github.com/users/relieverz/events{/privacy}","received_events_url":"https://api.github.com/users/relieverz/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":785082162,"node_id":"MDU6TGFiZWw3ODUwODIxNjI=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-documentation","name":"comp-documentation","color":"b5bcff","default":false,"description":"Used to run automatic builds of the documentation"}],"state":"open","locked":false,"assignee":{"login":"alexey-milovidov","id":18581488,"node_id":"MDQ6VXNlcjE4NTgxNDg4","avatar_url":"https://avatars.githubusercontent.com/u/18581488?v=4","gravatar_id":"","url":"https://api.github.com/users/alexey-milovidov","html_url":"https://github.com/alexey-milovidov","followers_url":"https://api.github.com/users/alexey-milovidov/followers","following_url":"https://api.github.com/users/alexey-milovidov/following{/other_user}","gists_url":"https://api.github.com/users/alexey-milovidov/gists{/gist_id}","starred_url":"https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexey-milovidov/subscriptions","organizations_url":"https://api.github.com/users/alexey-milovidov/orgs","repos_url":"https://api.github.com/users/alexey-milovidov/repos","events_url":"https://api.github.com/users/alexey-milovidov/events{/privacy}","received_events_url":"https://api.github.com/users/alexey-milovidov/received_events","type":"User","site_admin":false},"assignees":[{"login":"alexey-milovidov","id":18581488,"node_id":"MDQ6VXNlcjE4NTgxNDg4","avatar_url":"https://avatars.githubusercontent.com/u/18581488?v=4","gravatar_id":"","url":"https://api.github.com/users/alexey-milovidov","html_url":"https://github.com/alexey-milovidov","followers_url":"https://api.github.com/users/alexey-milovidov/followers","following_url":"https://api.github.com/users/alexey-milovidov/following{/other_user}","gists_url":"https://api.github.com/users/alexey-milovidov/gists{/gist_id}","starred_url":"https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexey-milovidov/subscriptions","organizations_url":"https://api.github.com/users/alexey-milovidov/orgs","repos_url":"https://api.github.com/users/alexey-milovidov/repos","events_url":"https://api.github.com/users/alexey-milovidov/events{/privacy}","received_events_url":"https://api.github.com/users/alexey-milovidov/received_events","type":"User","site_admin":false}],"milestone":null,"comments":1,"created_at":"2020-01-07T14:39:55Z","updated_at":"2020-01-07T14:54:18Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Здравствуйте, уважаемые разработчики. Хочу поблагодарить вас за ваш качественный и очень нужный программный продукт. В целях упрощения работы с ним хочу предложить расширить информацию в таблице `system`.functions. Предлагаю добавить след. поля:\r\n\r\n1. description - краткое описание функции\r\n2. param - входные параметры функции с их кратким описанием\r\n3. exam - пример использования (желательно, всегда использовать примеры, так как понимание как правильно использовать лучше демонстрировать)","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8562/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8562/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8547","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8547/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8547/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8547/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/8547","id":545924274,"node_id":"MDU6SXNzdWU1NDU5MjQyNzQ=","number":8547,"title":"Distributed Join over tables in different databases with distributed_product_mode=local","user":{"login":"tarashypka","id":15344666,"node_id":"MDQ6VXNlcjE1MzQ0NjY2","avatar_url":"https://avatars.githubusercontent.com/u/15344666?v=4","gravatar_id":"","url":"https://api.github.com/users/tarashypka","html_url":"https://github.com/tarashypka","followers_url":"https://api.github.com/users/tarashypka/followers","following_url":"https://api.github.com/users/tarashypka/following{/other_user}","gists_url":"https://api.github.com/users/tarashypka/gists{/gist_id}","starred_url":"https://api.github.com/users/tarashypka/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tarashypka/subscriptions","organizations_url":"https://api.github.com/users/tarashypka/orgs","repos_url":"https://api.github.com/users/tarashypka/repos","events_url":"https://api.github.com/users/tarashypka/events{/privacy}","received_events_url":"https://api.github.com/users/tarashypka/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":1357578153,"node_id":"MDU6TGFiZWwxMzU3NTc4MTUz","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-joins","name":"comp-joins","color":"b5bcff","default":false,"description":"JOINs"},{"id":1634829961,"node_id":"MDU6TGFiZWwxNjM0ODI5OTYx","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-distributed","name":"comp-distributed","color":"b5bcff","default":false,"description":"Distributed tables"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2020-01-06T20:29:07Z","updated_at":"2020-10-16T18:10:22Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"I experience troubles in joining data locally at every shard.\r\n\r\n**Setup**\r\n\r\nI have cluster with 3 shards\r\n```\r\n<ha1>\r\n    <shard>\r\n        <weight>1</weight>\r\n        <internal_replication>true</internal_replication>\r\n        <replica>\r\n            <host>localhost</host>\r\n            <port>9000</port>\r\n            <default_database>db0</default_database>\r\n        </replica>\r\n    </shard>\r\n    <shard>\r\n        <weight>1</weight>\r\n        <internal_replication>true</internal_replication>\r\n        <replica>\r\n            <host>localhost</host>\r\n            <port>9001</port>\r\n            <default_database>db0</default_database>\r\n        </replica>\r\n    </shard>\r\n    <shard>\r\n        <weight>1</weight>\r\n        <internal_replication>true</internal_replication>\r\n        <replica>\r\n            <host>localhost</host>\r\n            <port>9002</port>\r\n            <default_database>db0</default_database>\r\n        </replica>\r\n    </shard>\r\n</ha1>\r\n```\r\nand next tables\r\n```\r\nCREATE DATABASE db0 ENGINE = Ordinary\r\n\r\nCREATE TABLE db0.a1_replicated (\r\n    day Date,\r\n    id UInt32\r\n)\r\nENGINE = MergeTree() PARTITION BY day ORDER BY id\r\n\r\nCREATE TABLE a1 (\r\n    day Date,\r\n    id UInt32\r\n)\r\nENGINE = Distributed('ha1', 'db0', a1_replicated, id)\r\n\r\nCREATE TABLE db0.b1_replicated (\r\n    day Date,\r\n    id UInt32\r\n)\r\nENGINE = MergeTree() PARTITION BY day ORDER BY id\r\n\r\nCREATE TABLE b1 (\r\n    day Date,\r\n    id UInt32\r\n)\r\nENGINE = Distributed('ha1', 'db0', b1_replicated, id)\r\n```\r\nfilled with data\r\n```\r\nINSERT INTO a1 (day, id) VALUES\r\n    ('2019-01-01', 9),\r\n    ('2019-01-01', 10), ('2019-01-01', 13),\r\n    ('2019-01-01', 11), ('2019-01-01', 14), ('2019-01-01', 17)\r\n\r\nINSERT INTO b1 (day, id) VALUES\r\n    ('2019-01-01', 9),\r\n    ('2019-01-01', 10), ('2019-01-01', 13),\r\n    ('2019-01-01', 11), ('2019-01-01', 14), ('2019-01-01', 17)\r\n```\r\n\r\n**Expected behavior**\r\n\r\nBecause of `id` being sharding key for both tables, I expect the query\r\n```\r\nSELECT id, count()\r\nFROM a1 AS a1\r\nLEFT JOIN b1 b1 ON a1.id = b1.id\r\nGROUP BY id\r\n```\r\nto be \r\n- sent from initiator to all of the shards\r\n- computed at every shard\r\n- results from all shards combined at initiator\r\n\r\n**Actual behavior**\r\n\r\nI tried different approaches. \r\n\r\n*Query 1*\r\n\r\n```\r\nSELECT id, count()\r\nFROM a1 AS a1\r\nLEFT JOIN b1 AS b1 ON a1.id = b1.id\r\nGROUP BY id\r\n```\r\nThe error is `DB::Exception: Table db0.b1 doesn't exist..`\r\n\r\n*Query 2*\r\n\r\n```\r\nSELECT id, count()\r\nFROM a1 a1\r\nLEFT JOIN (SELECT id FROM b1 b1) b1 ON a1.id = b1.id\r\nGROUP BY id\r\n```\r\nThe error is `DB::Exception: Table default.b1_replicated doesn't exist`\r\n\r\n*Query 3*\r\n\r\n```\r\nSELECT id, count()\r\nFROM (SELECT id FROM a1) a1\r\nLEFT JOIN (SELECT id FROM b1) b1 ON a1.id = b1.id\r\nGROUP BY id\r\n```\r\nInitial query is not sent to all of the shards. Instead, both subqueries are sent to all of the shards and the results of subqueries are then joined at initiator (that may not be efficient).\r\n\r\n**Questions**\r\n\r\n- How to explain different behaviors of *Query 1*, *Query 2* and *Query 3*?\r\n- How to JOIN data locally at every shard using this topology and schema?\r\n\r\n**Reproduce**\r\n\r\nThe version of Clickhouse is latest 19.17.6.\r\n\r\nThe only non-default setting was `<distributed_product_mode>local</distributed_product_mode>`\r\n\r\n- Here are [configs](https://github.com/tarashypka/related2clickhouse/tree/master/config)\r\n- Here are [queries](https://github.com/tarashypka/related2clickhouse/tree/master/sql)\r\n- Here is [script](https://github.com/tarashypka/related2clickhouse/blob/master/run_clickhouse.sh) that starts server locally","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8547/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8547/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8449","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8449/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8449/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8449/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/8449","id":543274236,"node_id":"MDU6SXNzdWU1NDMyNzQyMzY=","number":8449,"title":"Minimal implementation of resource pools (RFC)","user":{"login":"alexey-milovidov","id":18581488,"node_id":"MDQ6VXNlcjE4NTgxNDg4","avatar_url":"https://avatars.githubusercontent.com/u/18581488?v=4","gravatar_id":"","url":"https://api.github.com/users/alexey-milovidov","html_url":"https://github.com/alexey-milovidov","followers_url":"https://api.github.com/users/alexey-milovidov/followers","following_url":"https://api.github.com/users/alexey-milovidov/following{/other_user}","gists_url":"https://api.github.com/users/alexey-milovidov/gists{/gist_id}","starred_url":"https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexey-milovidov/subscriptions","organizations_url":"https://api.github.com/users/alexey-milovidov/orgs","repos_url":"https://api.github.com/users/alexey-milovidov/repos","events_url":"https://api.github.com/users/alexey-milovidov/events{/privacy}","received_events_url":"https://api.github.com/users/alexey-milovidov/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2019-12-28T19:56:17Z","updated_at":"2021-10-20T00:51:29Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"Let's split all resources to two classes:\r\n\r\n1. Non elastic resources.\r\nWhen we are exhausted of non-elastic resource, we cannot work.\r\nExamples: memory usage (OOM), disk space usage (no space left on device).\r\n\r\n2. Elastic resources.\r\nWhen we are out of elastic resource, OS or another system will do resource sharing.\r\nExamples: CPU utilization, disk IOPS, disk throughput, network bandwidth.\r\nBut our goal is to implement resource sharing by our own configurable proportions.\r\n\r\nProper sharing of non-elastic resources requires implementation of resource overcommit + preemption. Query preemption will be implemented only after \"Processors\" branch and it's currently out of schedule.\r\n\r\nWe can first implement resource pools only for elastic resources without waiting for \"Processors\" implementation.\r\n\r\nWe can share elastic resources in the following way:\r\n\r\n1. Calculate per query and total resource usage by some metric.\r\n\r\nThis is already implemented. For example, for CPU usage we can use `OSCPUVirtualTimeMicroseconds` or sum of `UserTimeMicroseconds` and `SystemTimeMicroseconds`. Also we already have real metrics about IO usage without page cache.\r\n\r\n2. Calculate by this metric or by another metric that we are above some threshold on resource capacity.\r\n\r\nIt should signal that resource is near overloaded. Or some lower estimate on this threshold.\r\n\r\nIt can be made by threshold on the same metric, example: the `OSCPUVirtualTimeMicroseconds` is larger than total number of CPU cores without hyper threading multiplied by 0.9. Or it can be made on threshold by another metric, example: `OSCPUWaitMicroseconds` is larger than 10% of total time across all threads; or if we have high IO wait ratio then IO is near overloaded.\r\n\r\nSometimes it's difficult to calculate total resource capacity that we have. For example, how many IOPS can we have on SSD? It depends on the load scenario, but some threshold on io wait ratio will suffice to decide that it's overloaded.\r\n\r\n3. If we are above the threshold, calculate desired ratios of this resource usage for all queries.\r\n\r\nSimply by dividing per-query metric to aggregated metrics across resource pools.\r\n\r\n4. The queries that have maximum allowed ratio will continue to work unlimited and other queries will be throttled to make their resource usage below this ratio related to the total resource usage. Before Processors will be implemented, throttling is done simply by sleep.\r\n\r\nIt means, we leave queries that have highest priority unlimited to fully utilize resource capacity; and at the same time we will throttle all other queries proportionally. Or: we can throttle even most priority queries but only if their share is significantly higher than desired.\r\n\r\nIt's important, because we can be above the estimate on resource capacity but the resource is in fact, underutilized.\r\n\r\nExample: we have 16 logical CPU cores, and threshold when CPU is considered overloaded is 8 cores;\r\nwe have three queries running, query A is using 6 cores but configured to share 50% of CPU time, query B and C are using 4 cores each but configured to share 25% of CPU time. Then we let query A to run without limits but throttle queries B and C so they will use only 25% * (6 + 4 + 4) = 3.5 CPU cores instead of 4.\r\n\r\nNote: there are some unresolved issues with this method...","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8449/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8449/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8445","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8445/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8445/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8445/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/8445","id":543030500,"node_id":"MDU6SXNzdWU1NDMwMzA1MDA=","number":8445,"title":"CREATE MV ON CLUSTER trying to find source tables in default database","user":{"login":"simPod","id":327717,"node_id":"MDQ6VXNlcjMyNzcxNw==","avatar_url":"https://avatars.githubusercontent.com/u/327717?v=4","gravatar_id":"","url":"https://api.github.com/users/simPod","html_url":"https://github.com/simPod","followers_url":"https://api.github.com/users/simPod/followers","following_url":"https://api.github.com/users/simPod/following{/other_user}","gists_url":"https://api.github.com/users/simPod/gists{/gist_id}","starred_url":"https://api.github.com/users/simPod/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/simPod/subscriptions","organizations_url":"https://api.github.com/users/simPod/orgs","repos_url":"https://api.github.com/users/simPod/repos","events_url":"https://api.github.com/users/simPod/events{/privacy}","received_events_url":"https://api.github.com/users/simPod/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":1401254412,"node_id":"MDU6TGFiZWwxNDAxMjU0NDEy","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-dddl","name":"comp-dddl","color":"b5bcff","default":false,"description":"Distributed DDL feature"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2019-12-28T00:35:29Z","updated_at":"2020-12-31T00:36:07Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Execute all on test database after it is created.\r\n\r\n```sql\r\nCREATE DATABASE test ON CLUSTER '{cluster}';\r\n\r\nCREATE TABLE test ON CLUSTER '{cluster}'\r\n(\r\n    date     Date,\r\n    used_key Int16\r\n)\r\n    ENGINE Memory;\r\n\r\nCREATE TABLE test2 ON CLUSTER '{cluster}'\r\n(\r\n    date     Date,\r\n    used_key Int16\r\n)\r\n    ENGINE Memory;\r\n```\r\n\r\nCalling this query is trying to find `default.test`\r\n\r\n```sql\r\nCREATE MATERIALIZED VIEW IF NOT EXISTS mv ON CLUSTER '{cluster}' TO test2\r\nAS\r\nSELECT *\r\nFROM test;\r\n```\r\n\r\nThis query is correctly looking for `test.test` (in the database it's executed)\r\n\r\n```sql\r\nCREATE MATERIALIZED VIEW IF NOT EXISTS mv TO test2\r\nAS\r\nSELECT *\r\nFROM test;\r\n```\r\n\r\nFor some reason adding `ON CLUSTER` clause to CREATE MV changes default table lookup db to `default` but should stay set to db the query is being executed on.\r\n\r\nv19.17.4.11","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8445/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8445/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8394","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8394/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8394/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8394/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/8394","id":542317775,"node_id":"MDU6SXNzdWU1NDIzMTc3NzU=","number":8394,"title":"Add replace/remove examples for configuration documentation","user":{"login":"qoega","id":2159081,"node_id":"MDQ6VXNlcjIxNTkwODE=","avatar_url":"https://avatars.githubusercontent.com/u/2159081?v=4","gravatar_id":"","url":"https://api.github.com/users/qoega","html_url":"https://github.com/qoega","followers_url":"https://api.github.com/users/qoega/followers","following_url":"https://api.github.com/users/qoega/following{/other_user}","gists_url":"https://api.github.com/users/qoega/gists{/gist_id}","starred_url":"https://api.github.com/users/qoega/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/qoega/subscriptions","organizations_url":"https://api.github.com/users/qoega/orgs","repos_url":"https://api.github.com/users/qoega/repos","events_url":"https://api.github.com/users/qoega/events{/privacy}","received_events_url":"https://api.github.com/users/qoega/received_events","type":"User","site_admin":false},"labels":[{"id":785082162,"node_id":"MDU6TGFiZWw3ODUwODIxNjI=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-documentation","name":"comp-documentation","color":"b5bcff","default":false,"description":"Used to run automatic builds of the documentation"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2019-12-25T10:38:08Z","updated_at":"2021-02-05T09:31:06Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"**Describe the issue**\r\nNot enough examples how to write configuration files with replace/remove attributes.\r\n\r\n**Additional context**\r\nFeature is described [here](https://github.com/ClickHouse/ClickHouse/blame/master/docs/en/operations/configuration_files.md#L8)\r\nBut it is unclear for newbie what to do exactly.\r\nXML attributes syntax requires some data set, but documentation describes only names `replace` and `remove`\r\n`<element name=\"value\">`\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8394/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8394/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8313","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8313/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8313/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8313/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/8313","id":540885568,"node_id":"MDU6SXNzdWU1NDA4ODU1Njg=","number":8313,"title":"Run multiple queries with consistent results against replicated tables","user":{"login":"svladykin","id":1635896,"node_id":"MDQ6VXNlcjE2MzU4OTY=","avatar_url":"https://avatars.githubusercontent.com/u/1635896?v=4","gravatar_id":"","url":"https://api.github.com/users/svladykin","html_url":"https://github.com/svladykin","followers_url":"https://api.github.com/users/svladykin/followers","following_url":"https://api.github.com/users/svladykin/following{/other_user}","gists_url":"https://api.github.com/users/svladykin/gists{/gist_id}","starred_url":"https://api.github.com/users/svladykin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/svladykin/subscriptions","organizations_url":"https://api.github.com/users/svladykin/orgs","repos_url":"https://api.github.com/users/svladykin/repos","events_url":"https://api.github.com/users/svladykin/events{/privacy}","received_events_url":"https://api.github.com/users/svladykin/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":1478073551,"node_id":"MDU6TGFiZWwxNDc4MDczNTUx","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-replication","name":"comp-replication","color":"b5bcff","default":false,"description":"Replicated tables"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":9,"created_at":"2019-12-20T09:25:30Z","updated_at":"2020-04-12T11:30:46Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"I have replicated tables with relatively high insertion rate. I want to run multiple long queries so that they produce consistent results, but when the first query finishes more data gets already inserted to the table, so the subsequent queries will produce different results. \r\n\r\nWithout replication I would just add a field like `insert_time DateTime materialized now()` and limit the data set by the same `insert_time` in each query to produce consistent results, but if I do this with replicated table I lose deduplication because the same batch inserted multiple times will have different `insert_time`.\r\n\r\nIs there any workaround?","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8313/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8313/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8280","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8280/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8280/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8280/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/8280","id":539938721,"node_id":"MDU6SXNzdWU1Mzk5Mzg3MjE=","number":8280,"title":"Format Parquet writing DateTime fields as Integers","user":{"login":"marklit","id":359316,"node_id":"MDQ6VXNlcjM1OTMxNg==","avatar_url":"https://avatars.githubusercontent.com/u/359316?v=4","gravatar_id":"","url":"https://api.github.com/users/marklit","html_url":"https://github.com/marklit","followers_url":"https://api.github.com/users/marklit/followers","following_url":"https://api.github.com/users/marklit/following{/other_user}","gists_url":"https://api.github.com/users/marklit/gists{/gist_id}","starred_url":"https://api.github.com/users/marklit/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/marklit/subscriptions","organizations_url":"https://api.github.com/users/marklit/orgs","repos_url":"https://api.github.com/users/marklit/repos","events_url":"https://api.github.com/users/marklit/events{/privacy}","received_events_url":"https://api.github.com/users/marklit/received_events","type":"User","site_admin":false},"labels":[{"id":644208617,"node_id":"MDU6TGFiZWw2NDQyMDg2MTc=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/easy%20task","name":"easy task","color":"0e8a16","default":false,"description":"Good for first contributors"},{"id":1397894054,"node_id":"MDU6TGFiZWwxMzk3ODk0MDU0","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/unfinished%20code","name":"unfinished code","color":"ff8800","default":false,"description":""},{"id":1401255404,"node_id":"MDU6TGFiZWwxNDAxMjU1NDA0","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-formats","name":"comp-formats","color":"b5bcff","default":false,"description":"Input / output formats"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2019-12-18T21:39:07Z","updated_at":"2020-07-14T18:37:34Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"I'm using MySQL 5.7.28 and ClickHouse 19.17.5.1.\r\n\r\nI have a table in MySQL with a datetime field:\r\n\r\n```\r\nmysql> desc my_table;\r\n+---------------------------------+--------------+------+-----+---------+----------------+\r\n| Field                           | Type         | Null | Key | Default | Extra          |\r\n+---------------------------------+--------------+------+-----+---------+----------------+\r\n...\r\n| date                            | datetime     | YES  |     | NULL    |                |\r\n```\r\n\r\nWhen I select the field in ClickHouse I can see the correct timestamps:\r\n\r\n```sql\r\nSELECT DISTINCT date\r\nFROM mysql_db.my_table\r\nLIMIT 10\r\n```\r\n\r\n```\r\n┌────────────────date─┐\r\n│ 2018-02-16 00:00:00 │\r\n│ 2018-02-18 00:00:00 │\r\n│ 2018-02-19 00:00:00 │\r\n│ 2018-02-20 00:00:00 │\r\n│ 2018-02-21 00:00:00 │\r\n│ 2018-02-22 00:00:00 │\r\n│ 2018-03-01 00:00:00 │\r\n│ 2018-03-02 00:00:00 │\r\n│ 2018-03-03 00:00:00 │\r\n│ 2018-03-04 00:00:00 │\r\n└─────────────────────┘\r\n```\r\n\r\nIf I export that data as a Parquet file they're written as integers instead of datatime64[ns] or something simular.\r\n\r\n```bash\r\n$ echo \"select distinct date from mysql_db.my_table limit 10 format Parquet;\" | clickhouse-client > test.pq\r\n```\r\n\r\n```\r\n$ ipython\r\n```\r\n\r\n```python\r\nIn [1]: import pandas as pd\r\n\r\nIn [2]: df = pd.read_parquet('test.pq')\r\n\r\nIn [3]: df\r\nOut[3]: \r\n         date\r\n0  1518739200\r\n1  1518912000\r\n2  1518998400\r\n3  1519084800\r\n4  1519171200\r\n5  1519257600\r\n6  1519862400\r\n7  1519948800\r\n8  1520035200\r\n9  1520121600\r\n```\r\n\r\nAny idea how I could get those fields written as the datetime64[ns] type?","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8280/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8280/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8262","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8262/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8262/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8262/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/8262","id":539538641,"node_id":"MDU6SXNzdWU1Mzk1Mzg2NDE=","number":8262,"title":"KafkaEngine is consuming data too early, \"Database XXX doesn't exist\" error","user":{"login":"bgranvea","id":1116217,"node_id":"MDQ6VXNlcjExMTYyMTc=","avatar_url":"https://avatars.githubusercontent.com/u/1116217?v=4","gravatar_id":"","url":"https://api.github.com/users/bgranvea","html_url":"https://github.com/bgranvea","followers_url":"https://api.github.com/users/bgranvea/followers","following_url":"https://api.github.com/users/bgranvea/following{/other_user}","gists_url":"https://api.github.com/users/bgranvea/gists{/gist_id}","starred_url":"https://api.github.com/users/bgranvea/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bgranvea/subscriptions","organizations_url":"https://api.github.com/users/bgranvea/orgs","repos_url":"https://api.github.com/users/bgranvea/repos","events_url":"https://api.github.com/users/bgranvea/events{/privacy}","received_events_url":"https://api.github.com/users/bgranvea/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":1334071168,"node_id":"MDU6TGFiZWwxMzM0MDcxMTY4","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-kafka","name":"comp-kafka","color":"b5bcff","default":false,"description":"Kafka Engine"},{"id":1365579236,"node_id":"MDU6TGFiZWwxMzY1NTc5MjM2","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/minor","name":"minor","color":"FFF8F8","default":false,"description":"Priority: minor"}],"state":"open","locked":false,"assignee":{"login":"filimonov","id":1549571,"node_id":"MDQ6VXNlcjE1NDk1NzE=","avatar_url":"https://avatars.githubusercontent.com/u/1549571?v=4","gravatar_id":"","url":"https://api.github.com/users/filimonov","html_url":"https://github.com/filimonov","followers_url":"https://api.github.com/users/filimonov/followers","following_url":"https://api.github.com/users/filimonov/following{/other_user}","gists_url":"https://api.github.com/users/filimonov/gists{/gist_id}","starred_url":"https://api.github.com/users/filimonov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/filimonov/subscriptions","organizations_url":"https://api.github.com/users/filimonov/orgs","repos_url":"https://api.github.com/users/filimonov/repos","events_url":"https://api.github.com/users/filimonov/events{/privacy}","received_events_url":"https://api.github.com/users/filimonov/received_events","type":"User","site_admin":false},"assignees":[{"login":"filimonov","id":1549571,"node_id":"MDQ6VXNlcjE1NDk1NzE=","avatar_url":"https://avatars.githubusercontent.com/u/1549571?v=4","gravatar_id":"","url":"https://api.github.com/users/filimonov","html_url":"https://github.com/filimonov","followers_url":"https://api.github.com/users/filimonov/followers","following_url":"https://api.github.com/users/filimonov/following{/other_user}","gists_url":"https://api.github.com/users/filimonov/gists{/gist_id}","starred_url":"https://api.github.com/users/filimonov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/filimonov/subscriptions","organizations_url":"https://api.github.com/users/filimonov/orgs","repos_url":"https://api.github.com/users/filimonov/repos","events_url":"https://api.github.com/users/filimonov/events{/privacy}","received_events_url":"https://api.github.com/users/filimonov/received_events","type":"User","site_admin":false}],"milestone":null,"comments":4,"created_at":"2019-12-18T08:48:12Z","updated_at":"2021-08-15T03:30:53Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"**Describe the bug or unexpected behaviour**\r\nWhen using a KafkaEngine table with a materialized view behind it, it is possible to lose data when Clickhouse is started.\r\n\r\n**How to reproduce**\r\nTested with Clickhouse 19.18.1.1 (compiled from sources), observed on a real platform with 19.14.7.15\r\n\r\nI have the following configuration:\r\n- database dbLocal: a table 'storage' with standard MergeTree engine\r\n- database dbInternal: table 'kafka' using KafkaEngine, a materialized view 'mv' pushing from 'kafka' to 'dbLocal.storage'\r\n\r\nWhen starting Clickhouse, I have random errors like this:\r\n\r\n```\r\n2019.12.18 09:18:04.582047 [ 42 ] {} <Error> void DB::StorageKafka::threadFunc(): Code: 81, e.displayText() = DB::Exception: Database dbLocal doesn't exist: while write prefix to view dbInternal.mv, Stack trace:\r\n\r\n0. 0x557256122b5e StackTrace::tryCapture() /root/ClickHouse-bg/ClickHouse/dbms/src/Common/StackTrace.cpp:228\r\n1. 0x5572561229fd StackTrace::StackTrace() /root/ClickHouse-bg/ClickHouse/dbms/src/Common/StackTrace.cpp:192\r\n2. 0x557256121fcc DB::Exception::Exception(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int) /root/ClickHouse-bg/ClickHouse/dbms/src/Common/Exception.h:27\r\n3. 0x55725a952f91 DB::Context::getTableImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, DB::Exception*) const /root/ClickHouse-bg/ClickHouse/dbms/src/Interpreters/Context.cpp:947\r\n4. 0x55725a952bba DB::Context::getTable(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const /root/ClickHouse-bg/ClickHouse/dbms/src/Interpreters/Context.cpp:913\r\n5. 0x55725a9e2f90 DB::InterpreterInsertQuery::getTable(DB::ASTInsertQuery const&) /root/ClickHouse-bg/ClickHouse/dbms/src/Interpreters/InterpreterInsertQuery.cpp:60\r\n6. 0x55725a9e3664 DB::InterpreterInsertQuery::execute() /root/ClickHouse-bg/ClickHouse/dbms/src/Interpreters/InterpreterInsertQuery.cpp:103\r\n7. 0x55725ae2862d DB::DistributedBlockOutputStream::writeToLocal(DB::Block const&, unsigned long) /root/ClickHouse-bg/ClickHouse/dbms/src/Storages/Distributed/DistributedBlockOutputStream.cpp:545\r\n8. 0x55725ae2837d DB::DistributedBlockOutputStream::writeAsyncImpl(DB::Block const&, unsigned long) /root/ClickHouse-bg/ClickHouse/dbms/src/Storages/Distributed/DistributedBlockOutputStream.cpp:528\r\n9. 0x55725ae2473b DB::DistributedBlockOutputStream::writeAsync(DB::Block const&) /root/ClickHouse-bg/ClickHouse/dbms/src/Storages/Distributed/DistributedBlockOutputStream.cpp:112\r\n10. 0x55725ae2457f DB::DistributedBlockOutputStream::write(DB::Block const&) /root/ClickHouse-bg/ClickHouse/dbms/src/Storages/Distributed/DistributedBlockOutputStream.cpp:84\r\n11. 0x55725b1ee89e DB::PushingToViewsBlockOutputStream::write(DB::Block const&) /root/ClickHouse-bg/ClickHouse/dbms/src/DataStreams/PushingToViewsBlockOutputStream.cpp:120\r\n12. 0x55725b1f4a38 DB::SquashingBlockOutputStream::finalize() /root/ClickHouse-bg/ClickHouse/dbms/src/DataStreams/SquashingBlockOutputStream.cpp:30\r\n13. 0x55725b1f4b52 DB::SquashingBlockOutputStream::writeSuffix() /root/ClickHouse-bg/ClickHouse/dbms/src/DataStreams/SquashingBlockOutputStream.cpp:51\r\n14. 0x55725b1a28eb DB::AddingDefaultBlockOutputStream::writeSuffix() /root/ClickHouse-bg/ClickHouse/dbms/src/DataStreams/AddingDefaultBlockOutputStream.cpp:26\r\n15. 0x55725b1b2cef DB::CountingBlockOutputStream::writeSuffix() /root/ClickHouse-bg/ClickHouse/dbms/src/DataStreams/CountingBlockOutputStream.h:37\r\n16. 0x55725b1eeea2 DB::PushingToViewsBlockOutputStream::writeSuffix() /root/ClickHouse-bg/ClickHouse/dbms/src/DataStreams/PushingToViewsBlockOutputStream.cpp:175\r\n17. 0x55725b1a28eb DB::AddingDefaultBlockOutputStream::writeSuffix() /root/ClickHouse-bg/ClickHouse/dbms/src/DataStreams/AddingDefaultBlockOutputStream.cpp:26\r\n18. 0x55725b1b2cef DB::CountingBlockOutputStream::writeSuffix() /root/ClickHouse-bg/ClickHouse/dbms/src/DataStreams/CountingBlockOutputStream.h:37\r\n19. 0x55725a8502e3 void DB::copyDataImpl<DB::copyData(DB::IBlockInputStream&, DB::IBlockOutputStream&, std::atomic<bool>*)::{lambda()#1}&, void (&)(DB::Block const&)>(DB::IBlockInputStream&, DB::IBlockOutputStream&, DB::copyData(DB::IBlockInputStream&, DB::IBlockOutputStream&, std::atomic<bool>*)::{lambda()#1}&, void (&)(DB::Block const&)) /root/ClickHouse-bg/ClickHouse/dbms/src/DataStreams/copyData.cpp:48\r\n20. 0x55725a850041 DB::copyData(DB::IBlockInputStream&, DB::IBlockOutputStream&, std::atomic<bool>*) /root/ClickHouse-bg/ClickHouse/dbms/src/DataStreams/copyData.cpp:62\r\n21. 0x55725b14ee2a DB::StorageKafka::streamToViews() /root/ClickHouse-bg/ClickHouse/dbms/src/Storages/Kafka/StorageKafka.cpp:406\r\n22. 0x55725b14e6cc DB::StorageKafka::threadFunc() /root/ClickHouse-bg/ClickHouse/dbms/src/Storages/Kafka/StorageKafka.cpp:345\r\n```\r\n\r\nThis is difficult to reproduce as it is a race condition between KafkaEngine reading data and pushing them to materialized view, and the thread initializing the databases/tables. I guess it happens more when initialization takes time (large tables or check after a crash?) \r\n\r\nFrom what I understand:\r\n- databases are initialized in lexicographic order\r\n- tables in a database are initialized concurrently\r\n- KafkaEngine tables start consuming data as soon as they are initialized\r\n\r\nSo in my case the result is that the materialized view and the KafkaEngine in dbInternal are initialized before the storage table in dbLocal.\r\n\r\nI think the good way to fix this would be that KafkaEngine tables start consuming data in a second phase, after all databases/tables are initialized.\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8262/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8262/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8259","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8259/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8259/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8259/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/8259","id":539405107,"node_id":"MDU6SXNzdWU1Mzk0MDUxMDc=","number":8259,"title":"Unable to use CTE scalar as numbers() argument","user":{"login":"pablote","id":2463995,"node_id":"MDQ6VXNlcjI0NjM5OTU=","avatar_url":"https://avatars.githubusercontent.com/u/2463995?v=4","gravatar_id":"","url":"https://api.github.com/users/pablote","html_url":"https://github.com/pablote","followers_url":"https://api.github.com/users/pablote/followers","following_url":"https://api.github.com/users/pablote/following{/other_user}","gists_url":"https://api.github.com/users/pablote/gists{/gist_id}","starred_url":"https://api.github.com/users/pablote/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pablote/subscriptions","organizations_url":"https://api.github.com/users/pablote/orgs","repos_url":"https://api.github.com/users/pablote/repos","events_url":"https://api.github.com/users/pablote/events{/privacy}","received_events_url":"https://api.github.com/users/pablote/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2019-12-18T01:52:57Z","updated_at":"2020-09-13T09:58:39Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"This is a simplification of what I'm trying to achieve:\r\n\r\n```\r\nwith\r\n    (select 25) as something\r\nselect *, something\r\nfrom numbers(toUInt64(something));\r\n```\r\n\r\nIt fails with error: `Code: 47, e.displayText() = DB::Exception: Missing columns: 'something' while processing query: 'toUInt64(something)', required columns: 'something', source columns: '_dummy' (version 19.17.5.18 (official build))`\r\n\r\nReplace last line with a fixed value, and the query works fine. Is it not possible to use a CTE value as  input to numbers()? Any workaround?\r\n\r\nthanks!","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8259/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8259/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8175","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8175/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8175/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8175/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/8175","id":537004105,"node_id":"MDU6SXNzdWU1MzcwMDQxMDU=","number":8175,"title":"Way to know remaing time from next TTL merge","user":{"login":"giuliaScalaberni","id":23696581,"node_id":"MDQ6VXNlcjIzNjk2NTgx","avatar_url":"https://avatars.githubusercontent.com/u/23696581?v=4","gravatar_id":"","url":"https://api.github.com/users/giuliaScalaberni","html_url":"https://github.com/giuliaScalaberni","followers_url":"https://api.github.com/users/giuliaScalaberni/followers","following_url":"https://api.github.com/users/giuliaScalaberni/following{/other_user}","gists_url":"https://api.github.com/users/giuliaScalaberni/gists{/gist_id}","starred_url":"https://api.github.com/users/giuliaScalaberni/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/giuliaScalaberni/subscriptions","organizations_url":"https://api.github.com/users/giuliaScalaberni/orgs","repos_url":"https://api.github.com/users/giuliaScalaberni/repos","events_url":"https://api.github.com/users/giuliaScalaberni/events{/privacy}","received_events_url":"https://api.github.com/users/giuliaScalaberni/received_events","type":"User","site_admin":false},"labels":[{"id":1401282669,"node_id":"MDU6TGFiZWwxNDAxMjgyNjY5","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-ttl","name":"comp-ttl","color":"b5bcff","default":false,"description":"TTL"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2019-12-12T14:15:20Z","updated_at":"2019-12-12T21:23:42Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Is there a way to know at what time will be the next TTL check as setted in \"merge_with_ttl_timeout\"? For example if I setted to 1h, I'd like to know the time remaining to the merge with a query or something similar... anything already done?","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8175/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8175/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8089","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8089/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8089/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8089/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/8089","id":534698965,"node_id":"MDU6SXNzdWU1MzQ2OTg5NjU=","number":8089,"title":"REORGANIZE PARTITIONS to merge a few partitions into one or split one partition into several","user":{"login":"SaltTan","id":20357526,"node_id":"MDQ6VXNlcjIwMzU3NTI2","avatar_url":"https://avatars.githubusercontent.com/u/20357526?v=4","gravatar_id":"","url":"https://api.github.com/users/SaltTan","html_url":"https://github.com/SaltTan","followers_url":"https://api.github.com/users/SaltTan/followers","following_url":"https://api.github.com/users/SaltTan/following{/other_user}","gists_url":"https://api.github.com/users/SaltTan/gists{/gist_id}","starred_url":"https://api.github.com/users/SaltTan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/SaltTan/subscriptions","organizations_url":"https://api.github.com/users/SaltTan/orgs","repos_url":"https://api.github.com/users/SaltTan/repos","events_url":"https://api.github.com/users/SaltTan/events{/privacy}","received_events_url":"https://api.github.com/users/SaltTan/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":1507886722,"node_id":"MDU6TGFiZWwxNTA3ODg2NzIy","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/st-discussion","name":"st-discussion","color":"e5b890","default":false,"description":"The story requires discussion /research / expert help / design & decomposition before will be taken"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2019-12-09T05:24:17Z","updated_at":"2020-09-21T10:47:09Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"**Use case**\r\nWe know that we should keep the number of partitions to a minimum, but it is more convenient to store data in smaller partitions, since some data managing operations can only be performed at the partition level (drop, optimize, etc).\r\nFor example, it is easier to reload a day of data if we have a table with daily partitions.\r\n\r\n**Describe the solution you'd like**\r\nIt would be great to have an ability to merge a few partitions into one or split one partition into several.\r\nFor example, in a table with daily partitions we could merge older data in monthly partitions to decrease the number of parts per table.\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8089/reactions","total_count":5,"+1":5,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8089/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8078","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8078/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8078/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8078/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/8078","id":534487752,"node_id":"MDU6SXNzdWU1MzQ0ODc3NTI=","number":8078,"title":"Ability to Cache URL tables","user":{"login":"volfco","id":433045,"node_id":"MDQ6VXNlcjQzMzA0NQ==","avatar_url":"https://avatars.githubusercontent.com/u/433045?v=4","gravatar_id":"","url":"https://api.github.com/users/volfco","html_url":"https://github.com/volfco","followers_url":"https://api.github.com/users/volfco/followers","following_url":"https://api.github.com/users/volfco/following{/other_user}","gists_url":"https://api.github.com/users/volfco/gists{/gist_id}","starred_url":"https://api.github.com/users/volfco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/volfco/subscriptions","organizations_url":"https://api.github.com/users/volfco/orgs","repos_url":"https://api.github.com/users/volfco/repos","events_url":"https://api.github.com/users/volfco/events{/privacy}","received_events_url":"https://api.github.com/users/volfco/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2019-12-08T03:47:43Z","updated_at":"2020-04-21T22:15:14Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"**Use case**\r\nMaking a URL table, like this:\r\n```\r\nCREATE TABLE default.bridge (`ID` Int32, `ServerName` String, `ProcessName` String, `Hostname` String) ENGINE = URL('http://10.2.8.171:6743/', CSV)\r\n```\r\nevery query causes a new request to the service. \r\n\r\n**Describe the solution you'd like**\r\nA way to specify a cache time for this table. Ideally the table will update on the interval in the background. \r\n\r\nAn example I can think of is something like this:\r\n```\r\nCREATE TABLE default.bridge (`ID` Int32, `ServerName` String, `ProcessName` String, `Hostname` String) ENGINE = URL('http://10.2.8.171:6743/', CSV) SETTINGS url_cache = true, url_refresh_interval =  INTERVAL 2 MINUTE\r\n```\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8078/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8078/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8062","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8062/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8062/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8062/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/8062","id":533842462,"node_id":"MDU6SXNzdWU1MzM4NDI0NjI=","number":8062,"title":"Pushdown JOIN USING/ON subquery into IN section for indexed columns","user":{"login":"topvisor-admin","id":5628609,"node_id":"MDQ6VXNlcjU2Mjg2MDk=","avatar_url":"https://avatars.githubusercontent.com/u/5628609?v=4","gravatar_id":"","url":"https://api.github.com/users/topvisor-admin","html_url":"https://github.com/topvisor-admin","followers_url":"https://api.github.com/users/topvisor-admin/followers","following_url":"https://api.github.com/users/topvisor-admin/following{/other_user}","gists_url":"https://api.github.com/users/topvisor-admin/gists{/gist_id}","starred_url":"https://api.github.com/users/topvisor-admin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/topvisor-admin/subscriptions","organizations_url":"https://api.github.com/users/topvisor-admin/orgs","repos_url":"https://api.github.com/users/topvisor-admin/repos","events_url":"https://api.github.com/users/topvisor-admin/events{/privacy}","received_events_url":"https://api.github.com/users/topvisor-admin/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":756395244,"node_id":"MDU6TGFiZWw3NTYzOTUyNDQ=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/performance","name":"performance","color":"c2e0c6","default":false,"description":null},{"id":1357578153,"node_id":"MDU6TGFiZWwxMzU3NTc4MTUz","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-joins","name":"comp-joins","color":"b5bcff","default":false,"description":"JOINs"},{"id":1401777979,"node_id":"MDU6TGFiZWwxNDAxNzc3OTc5","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-optimizers","name":"comp-optimizers","color":"b5bcff","default":false,"description":"Query optimizations"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2019-12-06T09:23:43Z","updated_at":"2020-10-16T18:10:21Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"A.id - presented in table index\r\nsize of table A is bigger then size of table B\r\n\r\n1 fast query:\r\n```sql\r\nSELECT id, name FROM A\r\nJOIN (SELECT id, name FROM B) USING id\r\nWHERE id IN(SELECT id FROM B)\r\n```\r\n\r\n2 slow query:\r\n```sql\r\nSELECT id, name FROM A\r\nJOIN (SELECT id, name FROM B) USING id\r\n```\r\n\r\n**Feature request**\r\n\r\nIt's possible to pushdown join subquery into table A filter.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8062/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8062/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8049","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8049/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8049/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8049/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/8049","id":533411607,"node_id":"MDU6SXNzdWU1MzM0MTE2MDc=","number":8049,"title":"Support Decimal multiplication saving result scale","user":{"login":"filimonov","id":1549571,"node_id":"MDQ6VXNlcjE1NDk1NzE=","avatar_url":"https://avatars.githubusercontent.com/u/1549571?v=4","gravatar_id":"","url":"https://api.github.com/users/filimonov","html_url":"https://github.com/filimonov","followers_url":"https://api.github.com/users/filimonov/followers","following_url":"https://api.github.com/users/filimonov/following{/other_user}","gists_url":"https://api.github.com/users/filimonov/gists{/gist_id}","starred_url":"https://api.github.com/users/filimonov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/filimonov/subscriptions","organizations_url":"https://api.github.com/users/filimonov/orgs","repos_url":"https://api.github.com/users/filimonov/repos","events_url":"https://api.github.com/users/filimonov/events{/privacy}","received_events_url":"https://api.github.com/users/filimonov/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":1745440304,"node_id":"MDU6TGFiZWwxNzQ1NDQwMzA0","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-decimal","name":"comp-decimal","color":"b5bcff","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2019-12-05T15:10:29Z","updated_at":"2020-10-16T18:10:20Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"body":"В decimal есть довольно неудобный подвох - если хочешь произвести умножение 2 чисел, то невозможно это сделать не увеличивая precision (хочется умножение с округлением). \r\n\r\nВ абсолютно типичном сценарии amount Decimal64(2), exchange_rate Decimal64(6) сейчас происходят переполнения, это неудобно, и такое расширение точности там совсем не нужно. МБ просто нужно добавить вариант умножения с округлением?\r\n\r\n```sql\r\nSELECT round(toDecimal64(1, 8) * toDecimal64(1000, 8), 8)\r\n\r\nReceived exception from server (version 19.18.1):\r\nCode: 407. DB::Exception: Received from localhost:9000. DB::Exception: Decimal math overflow. \r\n\r\nSET decimal_check_overflow = 0;\r\n\r\nSELECT round(toDecimal64(1, 8) * toDecimal64(1000, 8), 8);\r\n\r\n┌─round(multiply(toDecimal64(1, 8), toDecimal64(1000, 8)), 8)─┐\r\n│                                       -844.6744073700000000 │\r\n└─────────────────────────────────────────────────────────────┘\r\n\r\n1 rows in set. Elapsed: 0.047 sec.\r\n\r\nSELECT toTypeName(toDecimal64(1, 3) * toDecimal64(1, 4)) AS x\r\n\r\nRow 1:\r\n──────\r\nx: Decimal(18, 7)\r\n```\r\nмб ему в таких случаях стоит разрешить расширять тип самостоятельно - до Decimal128?\r\n\r\n> МБ просто нужно добавить вариант умножения с округлением?\r\n\r\nДа, и это будет самым логичным и ожидаемым поведением. Но не ясно, насколько сложно сделать. Хотя если мы умеем определять overflow, значит можно сделать в slow path, и тогда скорость работы обычных случаев не изменится.\r\n\r\n> Как вариант - менять поведение обычного умножения на это умножение с округлением настройкой по умолнчанию?\r\n\r\nЛучше без настроек.\r\n\r\n> При делении он остаётся с типом левого аргумента\r\n\r\nА здесь всё правильно, это самое логичное поведение.\r\n\r\n> По-другому технически нерационально\r\n\r\nПо моему, можно сделать даже без компромиссов по производительности.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8049/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8049/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8030","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8030/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8030/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8030/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/8030","id":532731794,"node_id":"MDU6SXNzdWU1MzI3MzE3OTQ=","number":8030,"title":"`Exception: Number of columns doesn't match` while inserting with UNION ALL into AggregatingMergeTree table","user":{"login":"odaykhovskaya","id":26215544,"node_id":"MDQ6VXNlcjI2MjE1NTQ0","avatar_url":"https://avatars.githubusercontent.com/u/26215544?v=4","gravatar_id":"","url":"https://api.github.com/users/odaykhovskaya","html_url":"https://github.com/odaykhovskaya","followers_url":"https://api.github.com/users/odaykhovskaya/followers","following_url":"https://api.github.com/users/odaykhovskaya/following{/other_user}","gists_url":"https://api.github.com/users/odaykhovskaya/gists{/gist_id}","starred_url":"https://api.github.com/users/odaykhovskaya/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/odaykhovskaya/subscriptions","organizations_url":"https://api.github.com/users/odaykhovskaya/orgs","repos_url":"https://api.github.com/users/odaykhovskaya/repos","events_url":"https://api.github.com/users/odaykhovskaya/events{/privacy}","received_events_url":"https://api.github.com/users/odaykhovskaya/received_events","type":"User","site_admin":false},"labels":[{"id":628291301,"node_id":"MDU6TGFiZWw2MjgyOTEzMDE=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/sql-compatibility","name":"sql-compatibility","color":"006b75","default":false,"description":""},{"id":1575085465,"node_id":"MDU6TGFiZWwxNTc1MDg1NDY1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/unexpected%20behaviour","name":"unexpected behaviour","color":"e088ca","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2019-12-04T14:47:52Z","updated_at":"2020-11-02T11:45:27Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"I get an exception when trying to insert data into table.\r\nIt looks like floating bug, or I just cannot understand why this is happening.\r\n\r\n```Received exception from server (version 19.17.2):\r\nCode: 20. DB::Exception: Received from host:port. DB::Exception: Number of columns doesn't match.\r\n```\r\n\r\nTable schema:\r\n\r\n```\r\ncreate table test_table on cluster test_cluster\r\n(\r\n  category          Enum8('ONE' = 1, 'TWO' = 2)        Codec(T64, LZ4),\r\n  direction         Enum8('OUT' = 1, 'IN' = 2)             Codec(T64, LZ4),\r\n  field1            FixedString(50)                               Codec(LZ4),\r\n  field2            FixedString(50)                               Codec(LZ4),\r\n  field3            FixedString(50)                               Codec(LZ4),\r\n  field4            FixedString(50)                               Codec(LZ4),\r\n  cnt               AggregateFunction(sum, UInt32)   Codec(LZ4),\r\n  min_ts            AggregateFunction(min, UInt64)     Codec(LZ4),\r\n  max_ts            AggregateFunction(max, UInt64)    Codec(LZ4)\r\n)\r\nengine = AggregatingMergeTree()\r\nprimary key (category, direction, field1, field2, field3, field4)\r\norder by (category, direction, field1, field2, field3, field4)\r\npartition by bitAnd(sipHash64(field1), 100);\r\n```\r\n\r\nInsert request which causes the bug:\r\n\r\n```\r\nINSERT INTO test_table SELECT * FROM (\r\n(SELECT 'ONE','OUT','79853108939','35338606180662','250016171930158','79853108939',sumState(toUInt32(1)),minState(toUInt64(1519851774000)),maxState(toUInt64(1519851774000)))\r\nUNION ALL\r\n(SELECT 'ONE','IN','79155050277','35915207655548','250016113029618','123456',sumState(toUInt32(1)),minState(toUInt64(1519851669000)),maxState(toUInt64(1519851669000))))\r\n```\r\n\r\nThough this works perfectly (the same request, but with different data - changed one field in the first row to `SOME_OTHER_VALUE`)\r\n```\r\nINSERT INTO test_table SELECT * FROM (\r\n(SELECT 'ONE','OUT','79853108939','35338606180662','250016171930158','SOME_OTHER_VALUE',sumState(toUInt32(1)),minState(toUInt64(1519851774000)),maxState(toUInt64(1519851774000)))\r\nUNION ALL\r\n(SELECT 'ONE','IN','79155050277','35915207655548','250016113029618','123456',sumState(toUInt32(1)),minState(toUInt64(1519851669000)),maxState(toUInt64(1519851669000))))\r\n```\r\n\r\nClickHouse server version 19.17.2\r\nIt happens in CLI and with Flink Connector","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8030/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/8030/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/7968","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/7968/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/7968/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/7968/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/7968","id":530331805,"node_id":"MDU6SXNzdWU1MzAzMzE4MDU=","number":7968,"title":"Optimise query where with injective dictionary","user":{"login":"crakjie","id":6709653,"node_id":"MDQ6VXNlcjY3MDk2NTM=","avatar_url":"https://avatars.githubusercontent.com/u/6709653?v=4","gravatar_id":"","url":"https://api.github.com/users/crakjie","html_url":"https://github.com/crakjie","followers_url":"https://api.github.com/users/crakjie/followers","following_url":"https://api.github.com/users/crakjie/following{/other_user}","gists_url":"https://api.github.com/users/crakjie/gists{/gist_id}","starred_url":"https://api.github.com/users/crakjie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/crakjie/subscriptions","organizations_url":"https://api.github.com/users/crakjie/orgs","repos_url":"https://api.github.com/users/crakjie/repos","events_url":"https://api.github.com/users/crakjie/events{/privacy}","received_events_url":"https://api.github.com/users/crakjie/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":1351463315,"node_id":"MDU6TGFiZWwxMzUxNDYzMzE1","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-dictionary","name":"comp-dictionary","color":"b5bcff","default":false,"description":"Dictionaries"}],"state":"open","locked":false,"assignee":{"login":"kitaisreal","id":22458333,"node_id":"MDQ6VXNlcjIyNDU4MzMz","avatar_url":"https://avatars.githubusercontent.com/u/22458333?v=4","gravatar_id":"","url":"https://api.github.com/users/kitaisreal","html_url":"https://github.com/kitaisreal","followers_url":"https://api.github.com/users/kitaisreal/followers","following_url":"https://api.github.com/users/kitaisreal/following{/other_user}","gists_url":"https://api.github.com/users/kitaisreal/gists{/gist_id}","starred_url":"https://api.github.com/users/kitaisreal/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kitaisreal/subscriptions","organizations_url":"https://api.github.com/users/kitaisreal/orgs","repos_url":"https://api.github.com/users/kitaisreal/repos","events_url":"https://api.github.com/users/kitaisreal/events{/privacy}","received_events_url":"https://api.github.com/users/kitaisreal/received_events","type":"User","site_admin":false},"assignees":[{"login":"kitaisreal","id":22458333,"node_id":"MDQ6VXNlcjIyNDU4MzMz","avatar_url":"https://avatars.githubusercontent.com/u/22458333?v=4","gravatar_id":"","url":"https://api.github.com/users/kitaisreal","html_url":"https://github.com/kitaisreal","followers_url":"https://api.github.com/users/kitaisreal/followers","following_url":"https://api.github.com/users/kitaisreal/following{/other_user}","gists_url":"https://api.github.com/users/kitaisreal/gists{/gist_id}","starred_url":"https://api.github.com/users/kitaisreal/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kitaisreal/subscriptions","organizations_url":"https://api.github.com/users/kitaisreal/orgs","repos_url":"https://api.github.com/users/kitaisreal/repos","events_url":"https://api.github.com/users/kitaisreal/events{/privacy}","received_events_url":"https://api.github.com/users/kitaisreal/received_events","type":"User","site_admin":false}],"milestone":null,"comments":0,"created_at":"2019-11-29T12:52:45Z","updated_at":"2021-03-30T13:24:46Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"(you don't have to strictly follow this form)\r\n\r\n**Use case**\r\nWhen a dictionary field is used as filter in where clause, if the field is injective the query can be optimised. \r\nInstead of doing dictGet on every line, invert de dictGet and make it constant to juste have to compare values.\r\n\r\n\r\nFor exemple \r\n\r\nQuery A: \r\n´SELECT * FROM Table where dictGet(‘dict’, ´dictField’ , tableField) = ‘a value’´\r\n\r\nCould be optimized into \r\n´SELECT * FROM Table WHERE tableField = (SELECT dictId FROM dict.dict WHERE dictField = ‘a value ‘)´\r\n\r\nQuery B: \r\n´SELECT * FROM Table WHERE (dictGet(‘dictName’, ‘dictField’, tableField) , anotherTableField ) in (\r\n(‘Value1’,’ValueX’),\r\n(‘Value2’,’ValueX’),\r\n(‘Value3’,’ValueY’))’\r\n\r\nInto :\r\n´SELECT * FROM Table WHERE (tableField , anotherTableField ) in (\r\n((SELECT dictId FROM dict.dict WHERE dictField = ‘Value1‘),’ValueX’),\r\n((SELECT dictId FROM dict.dict WHERE dictField = ‘Value2‘),’ValueX’),\r\n((SELECT dictId FROM dict.dict WHERE dictField = ‘Value3’),’ValueY’))´.\r\n\r\n\r\nIn my own trials queries time are divide by four.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/7968/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/7968/timeline","performed_via_github_app":null},{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/7944","repository_url":"https://api.github.com/repos/ClickHouse/ClickHouse","labels_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/7944/labels{/name}","comments_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/7944/comments","events_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/7944/events","html_url":"https://github.com/ClickHouse/ClickHouse/issues/7944","id":529260489,"node_id":"MDU6SXNzdWU1MjkyNjA0ODk=","number":7944,"title":"system.tables initialization_order field","user":{"login":"filimonov","id":1549571,"node_id":"MDQ6VXNlcjE1NDk1NzE=","avatar_url":"https://avatars.githubusercontent.com/u/1549571?v=4","gravatar_id":"","url":"https://api.github.com/users/filimonov","html_url":"https://github.com/filimonov","followers_url":"https://api.github.com/users/filimonov/followers","following_url":"https://api.github.com/users/filimonov/following{/other_user}","gists_url":"https://api.github.com/users/filimonov/gists{/gist_id}","starred_url":"https://api.github.com/users/filimonov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/filimonov/subscriptions","organizations_url":"https://api.github.com/users/filimonov/orgs","repos_url":"https://api.github.com/users/filimonov/repos","events_url":"https://api.github.com/users/filimonov/events{/privacy}","received_events_url":"https://api.github.com/users/filimonov/received_events","type":"User","site_admin":false},"labels":[{"id":520905553,"node_id":"MDU6TGFiZWw1MjA5MDU1NTM=","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature","name":"feature","color":"1d76db","default":false,"description":null},{"id":1006992822,"node_id":"MDU6TGFiZWwxMDA2OTkyODIy","url":"https://api.github.com/repos/ClickHouse/ClickHouse/labels/operations","name":"operations","color":"7fe8ba","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2019-11-27T10:37:48Z","updated_at":"2019-12-03T20:55:11Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"body":"When you dump table / reinitialize it back from schema you need to preserve the specific order of table initialization. That can be deducted by engine/dependencies.","reactions":{"url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/7944/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ClickHouse/ClickHouse/issues/7944/timeline","performed_via_github_app":null}]
